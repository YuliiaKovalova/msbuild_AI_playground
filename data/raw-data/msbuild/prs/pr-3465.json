{
  "number": 3465,
  "title": "Cache import glob expansion via EvaluationContext",
  "body": "",
  "state": "MERGED",
  "createdAt": "2018-06-29T20:38:40Z",
  "updatedAt": "2020-12-30T22:52:39Z",
  "closedAt": "2018-07-02T21:00:58Z",
  "mergedAt": "2018-07-02T21:00:58Z",
  "additions": 55,
  "deletions": 8,
  "changedFiles": 4,
  "headRefName": "cacheImportGlobExpansions",
  "isDraft": false,
  "author": {
    "login": "cdmihai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "015878ed771422a20befb28fa367efe69af03a24",
          "message": "Cache import glob expansion via EvaluationContext",
          "committedDate": "2018-07-02T20:15:56Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@dotnet-bot test Windows_NT Build for CoreCLR please\r\nhttps://ci2.dot.net/job/Microsoft_msbuild/job/master/job/innerloop_Windows_NT_CoreCLR_prtest/706/",
        "createdAt": "2018-06-29T23:08:24Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@dotnet-bot test Windows_NT Build for CoreCLR please\r\nhttps://ci2.dot.net/job/Microsoft_msbuild/job/master/job/innerloop_Windows_NT_CoreCLR_prtest/707/",
        "createdAt": "2018-06-29T23:57:34Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "typo: glop",
              "createdAt": "2018-07-02T17:54:49Z",
              "path": "src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs",
              "diffHunk": "@@ -216,7 +216,7 @@ public static IEnumerable<object> ContextPinsGlobExpansionCacheData\n \n         [Theory]\n         [MemberData(nameof(ContextPinsGlobExpansionCacheData))]\n-        public void ContextCachesGlopExpansions(EvaluationContext.SharingPolicy policy, string[][] expectedGlobExpansions)\n+        public void ContextCachesItemElementGlopExpansions(EvaluationContext.SharingPolicy policy, string[][] expectedGlobExpansions)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "here too",
              "createdAt": "2018-07-02T17:55:57Z",
              "path": "src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs",
              "diffHunk": "@@ -243,6 +243,46 @@ public void ContextCachesGlopExpansions(EvaluationContext.SharingPolicy policy,\n                 );\n         }\n \n+        private static string[] _projectsWithGlobImports =\n+        {\n+            @\"<Project>\n+                <Import Project=`*.props` />\n+            </Project>\",\n+\n+            @\"<Project>\n+                <Import Project=`*.props` />\n+            </Project>\",\n+        };\n+\n+        [Theory]\n+        [MemberData(nameof(ContextPinsGlobExpansionCacheData))]\n+        public void ContextCachesImportGlopExpansions(EvaluationContext.SharingPolicy policy, string[][] expectedGlobExpansions)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why move these into the ctor? Isn't the effect the same?",
              "createdAt": "2018-07-02T18:01:01Z",
              "path": "src/Build/Evaluation/Context/EvaluationContext.cs",
              "diffHunk": "@@ -32,17 +33,23 @@ public enum SharingPolicy\n \n         internal SharingPolicy Policy { get; }\n \n-        internal virtual ISdkResolverService SdkResolverService { get; } = new CachingSdkResolverService();\n-        internal IFileSystem FileSystem { get; } = new CachingFileSystemWrapper(FileSystems.Default);\n+        internal ISdkResolverService SdkResolverService { get; }\n+        internal IFileSystem FileSystem { get; }\n+        internal EngineFileUtilities EngineFileUtilities { get; }\n \n         /// <summary>\n         /// Key to file entry list. Example usages: cache glob expansion and intermediary directory expansions during glob expansion.\n         /// </summary>\n-        internal ConcurrentDictionary<string, ImmutableArray<string>> FileEntryExpansionCache = new ConcurrentDictionary<string, ImmutableArray<string>>();\n+        internal ConcurrentDictionary<string, ImmutableArray<string>> FileEntryExpansionCache { get; }",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I didn't like having part of the initialization code in static blocks and another part in the constructor, so I moved everything in the constructor.",
              "createdAt": "2018-07-02T20:11:30Z",
              "path": "src/Build/Evaluation/Context/EvaluationContext.cs",
              "diffHunk": "@@ -32,17 +33,23 @@ public enum SharingPolicy\n \n         internal SharingPolicy Policy { get; }\n \n-        internal virtual ISdkResolverService SdkResolverService { get; } = new CachingSdkResolverService();\n-        internal IFileSystem FileSystem { get; } = new CachingFileSystemWrapper(FileSystems.Default);\n+        internal ISdkResolverService SdkResolverService { get; }\n+        internal IFileSystem FileSystem { get; }\n+        internal EngineFileUtilities EngineFileUtilities { get; }\n \n         /// <summary>\n         /// Key to file entry list. Example usages: cache glob expansion and intermediary directory expansions during glob expansion.\n         /// </summary>\n-        internal ConcurrentDictionary<string, ImmutableArray<string>> FileEntryExpansionCache = new ConcurrentDictionary<string, ImmutableArray<string>>();\n+        internal ConcurrentDictionary<string, ImmutableArray<string>> FileEntryExpansionCache { get; }",
              "author": {
                "login": "cdmihai"
              }
            }
          ]
        }
      }
    ]
  }
}