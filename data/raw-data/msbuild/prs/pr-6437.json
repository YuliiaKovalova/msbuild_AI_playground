{
  "number": 6437,
  "title": "Ensure context is not cached before logging info",
  "body": "Work item (Internal use): [AB#1325685](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1325685)\r\n\r\n### Summary\r\n\r\nFixes #6436 which causes this crash in cases where MSBuild's result\r\ncaching is turned on (generally this is for large builds in 32-bit\r\nMSBuild).\r\n\r\n### Customer Impact\r\n\r\nCustomers with large builds see MSBuild crashes.\r\n\r\n### Regression?\r\n\r\nYes. Worked in 16.8, regressed in 16.9.0 because of #5997\r\n\r\n### Testing\r\n\r\nValidated minimal repro (using forced caching) passes where it failed on released bits.\r\n\r\n### Risk\r\n\r\nLow. Additional guarding falling into existing case so log output shouldn't suffer.\r\n",
  "state": "MERGED",
  "createdAt": "2021-05-10T16:47:30Z",
  "updatedAt": "2021-05-11T18:01:55Z",
  "closedAt": "2021-05-11T18:01:55Z",
  "mergedAt": "2021-05-11T18:01:55Z",
  "additions": 59,
  "deletions": 2,
  "changedFiles": 3,
  "headRefName": "fix-#6436",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": {
    "title": "MSBuild 16.9"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Servicing-approved"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c5f5e499ded925bdebe3b6634ef71202c1f28466",
          "message": "Ensure context is not cached before logging info\n\nFixes #6436 which causes this crash in cases where MSBuild's result\ncaching is turned on (generally this is for large builds in 32-bit\nMSBuild).\n\n```\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\nMicrosoft.Build.Shared.InternalErrorException: MSB0001: Internal MSBuild Error: We shouldn't be accessing the ProjectInstance when the configuration is cached.\n   at Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(String message, Exception innerException, Object[] args)\n   at Microsoft.Build.BackEnd.BuildRequestConfiguration.get_Project()\n   at Microsoft.Build.BackEnd.Logging.NodeLoggingContext.LogProjectStarted(BuildRequest request, BuildRequestConfiguration configuration)\n   at Microsoft.Build.BackEnd.Logging.NodeLoggingContext.LogRequestHandledFromCache(BuildRequest request, BuildRequestConfiguration configuration, BuildResult result)\n   at Microsoft.Build.BackEnd.Scheduler.LogRequestHandledFromCache(BuildRequest request, BuildResult result)\n   at Microsoft.Build.BackEnd.Scheduler.HandleRequestBlockedByNewRequests(SchedulableRequest parentRequest, BuildRequestBlocker blocker, List`1 responses)\n   at Microsoft.Build.BackEnd.Scheduler.ReportRequestBlocked(Int32 nodeId, BuildRequestBlocker blocker)\n   at Microsoft.Build.Execution.BuildManager.HandleNewRequest(Int32 node, BuildRequestBlocker blocker)\n   at Microsoft.Build.Execution.BuildManager.ProcessPacket(Int32 node, INodePacket packet)\n   at Microsoft.Build.Execution.BuildManager.<>c__DisplayClass76_0.<Microsoft.Build.BackEnd.INodePacketHandler.PacketReceived>b__0()\n   at Microsoft.Build.Execution.BuildManager.ProcessWorkQueue(Action action)\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.Build.Execution.BuildManager.EndBuild()\n```",
          "committedDate": "2021-05-10T20:11:46Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b63c0cf71e9e532c6141c5a8c75418004aaa2c04",
          "message": "Bump version to 16.9.2\n\n.2 because we actually shipped a .1 but branded it .0.",
          "committedDate": "2021-05-10T21:12:45Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e0a6ee3c3cb955fb2c13a280eed10589a70a6ec0",
          "message": "Regression test for #6346",
          "committedDate": "2021-05-10T22:29:58Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "This is obscure enough that I don\u2019t feel too guilty for breaking this! Longer term we should be thinking about how to safeguard against this in the future.\r\n\r\nAlso indicates that we should add a test with that env var to force this.\r\n\r\nThanks for the fix!",
        "createdAt": "2021-05-10T18:41:16Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "> This is obscure enough that I don\u2019t feel too guilty for breaking this!\r\n\r\n\ud83d\udcaf\r\n\r\n> Also indicates that we should add a test with that env var to force this.\r\n\r\nAlso \ud83d\udcaf. Trying to find a good spot for it.",
        "createdAt": "2021-05-10T20:12:30Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I\u2019d maybe extract subexpression into a local, but don\u2019t block on this! Thanks!",
              "createdAt": "2021-05-10T18:39:17Z",
              "path": "src/Build/BackEnd/Components/Logging/NodeLoggingContext.cs",
              "diffHunk": "@@ -69,7 +69,8 @@ internal ProjectLoggingContext LogProjectStarted(BuildRequestEntry requestEntry)\n         internal ProjectLoggingContext LogProjectStarted(BuildRequest request, BuildRequestConfiguration configuration)\n         {\n             ErrorUtilities.VerifyThrow(this.IsValid, \"Build not started.\");\n-            return new ProjectLoggingContext(this, request, configuration.ProjectFullPath, configuration.ToolsVersion, request.ParentBuildEventContext, configuration.Project?.EvaluationId ?? BuildEventContext.InvalidEvaluationId);\n+            return new ProjectLoggingContext(this, request, configuration.ProjectFullPath, configuration.ToolsVersion, request.ParentBuildEventContext,\n+                (configuration != null && !configuration.IsCached && configuration.Project != null) ? configuration.Project.EvaluationId : BuildEventContext.InvalidEvaluationId);",
              "author": {
                "login": "KirillOsenkov"
              }
            },
            {
              "body": "I dithered but you're right.",
              "createdAt": "2021-05-10T20:08:51Z",
              "path": "src/Build/BackEnd/Components/Logging/NodeLoggingContext.cs",
              "diffHunk": "@@ -69,7 +69,8 @@ internal ProjectLoggingContext LogProjectStarted(BuildRequestEntry requestEntry)\n         internal ProjectLoggingContext LogProjectStarted(BuildRequest request, BuildRequestConfiguration configuration)\n         {\n             ErrorUtilities.VerifyThrow(this.IsValid, \"Build not started.\");\n-            return new ProjectLoggingContext(this, request, configuration.ProjectFullPath, configuration.ToolsVersion, request.ParentBuildEventContext, configuration.Project?.EvaluationId ?? BuildEventContext.InvalidEvaluationId);\n+            return new ProjectLoggingContext(this, request, configuration.ProjectFullPath, configuration.ToolsVersion, request.ParentBuildEventContext,\n+                (configuration != null && !configuration.IsCached && configuration.Project != null) ? configuration.Project.EvaluationId : BuildEventContext.InvalidEvaluationId);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}