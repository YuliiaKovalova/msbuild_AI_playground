{
  "number": 11795,
  "title": "Fix NodeTelemetryE2E test flakiness",
  "body": "Fixes #11676 \r\n\r\n### Context\r\nCI often fails here, the test case should be less strict for cases when GC doesn't allocate/cleans during task run.\r\n\r\n### Changes Made\r\nrelax condition that allocated memory can also be 0\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2025-05-06T11:01:02Z",
  "updatedAt": "2025-05-06T12:50:34Z",
  "closedAt": "2025-05-06T12:50:34Z",
  "mergedAt": "2025-05-06T12:50:34Z",
  "additions": 4,
  "deletions": 3,
  "changedFiles": 1,
  "headRefName": "dev/janpro/unflake-nodetelemetryteste2e",
  "isDraft": false,
  "author": {
    "login": "JanProvaznik"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1775de076df5415eb560caf9e71ab53711848aaf",
          "message": "sometimes gc does not allocate...",
          "committedDate": "2025-05-06T10:58:19Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "14ca4e9462bda243952cf19b16cf9f0fd3e25f0b",
          "message": "Update src/Build.UnitTests/Telemetry/Telemetry_Tests.cs\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "committedDate": "2025-05-06T11:03:14Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janpro@janpro.dev"
          }
        }
      },
      {
        "commit": {
          "oid": "a1a3bb7dd71acfd0d39e4ac68d28fc9b40d7629e",
          "message": "Merge branch 'main' into dev/janpro/unflake-nodetelemetryteste2e",
          "committedDate": "2025-05-06T11:03:44Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Relaxing the condition to allow 0 allocated memory helps reduce flakiness; consider adding additional logging or comments to clarify that a zero value is expected under GC inactivity.\n```suggestion\n                messageTask.GetProperty(\"TotalMilliseconds\").GetDouble().ShouldBeGreaterThan(0);\n                // A value of 0 for TotalMemoryBytes is expected under GC inactivity.\n```",
              "createdAt": "2025-05-06T11:02:01Z",
              "path": "src/Build.UnitTests/Telemetry/Telemetry_Tests.cs",
              "diffHunk": "@@ -280,15 +280,15 @@ public void NodeTelemetryE2E()\n                 tasksData.TryGetProperty(\"Microsoft.Build.Tasks.Message\", out var messageTask).ShouldBe(true);\n                 messageTask.GetProperty(\"ExecutionsCount\").GetInt32().ShouldBe(3);\n                 messageTask.GetProperty(\"TotalMilliseconds\").GetDouble().ShouldBeGreaterThan(0);",
              "author": {
                "login": "copilot-pull-request-reviewer"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "The updated assertion allows a 0 value for TotalMemoryBytes; please ensure that this relaxation is documented so that future maintainers understand the intended tolerance for low or absent memory allocation.\n```suggestion\n                createItemTask.GetProperty(\"TotalMilliseconds\").GetDouble().ShouldBeGreaterThan(0);\n                // Allowing 0 for TotalMemoryBytes to account for scenarios with low or absent memory allocation.\n```",
              "createdAt": "2025-05-06T11:02:02Z",
              "path": "src/Build.UnitTests/Telemetry/Telemetry_Tests.cs",
              "diffHunk": "@@ -280,15 +280,15 @@ public void NodeTelemetryE2E()\n                 tasksData.TryGetProperty(\"Microsoft.Build.Tasks.Message\", out var messageTask).ShouldBe(true);\n                 messageTask.GetProperty(\"ExecutionsCount\").GetInt32().ShouldBe(3);\n                 messageTask.GetProperty(\"TotalMilliseconds\").GetDouble().ShouldBeGreaterThan(0);\n-                messageTask.GetProperty(\"TotalMemoryBytes\").GetInt64().ShouldBeGreaterThan(0);\n+                messageTask.GetProperty(\"TotalMemoryBytes\").GetInt64().ShouldBeGreaterThanOrEqualTo(0);\n                 messageTask.GetProperty(nameof(TaskOrTargetTelemetryKey.IsCustom)).GetBoolean().ShouldBe(false);\n                 messageTask.GetProperty(nameof(TaskOrTargetTelemetryKey.IsCustom)).GetBoolean().ShouldBe(false);\n \n                 // Verify CreateItem task execution metrics - updated for object structure\n                 tasksData.TryGetProperty(\"Microsoft.Build.Tasks.CreateItem\", out var createItemTask).ShouldBe(true);\n                 createItemTask.GetProperty(\"ExecutionsCount\").GetInt32().ShouldBe(1);\n                 createItemTask.GetProperty(\"TotalMilliseconds\").GetDouble().ShouldBeGreaterThan(0);",
              "author": {
                "login": "copilot-pull-request-reviewer"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Similar to the above, allowing 0 memory for the summary may hide genuine allocation issues; consider leaving a comment or a log statement clarifying why 0 is acceptable in this context.\n```suggestion\n                tasksSummary.GetProperty(\"Microsoft\").GetProperty(\"Total\").GetProperty(\"TotalMilliseconds\").GetDouble().ShouldBeGreaterThan(0);\n                // Allowing 0 for TotalMemoryBytes as it is possible for tasks to allocate no memory in certain scenarios.\n```",
              "createdAt": "2025-05-06T11:02:02Z",
              "path": "src/Build.UnitTests/Telemetry/Telemetry_Tests.cs",
              "diffHunk": "@@ -309,7 +309,7 @@ public void NodeTelemetryE2E()\n                 // Verify task execution summary metrics based on TasksSummaryConverter.Write structure\n                 tasksSummary.GetProperty(\"Microsoft\").GetProperty(\"Total\").GetProperty(\"ExecutionsCount\").GetInt32().ShouldBe(4);\n                 tasksSummary.GetProperty(\"Microsoft\").GetProperty(\"Total\").GetProperty(\"TotalMilliseconds\").GetDouble().ShouldBeGreaterThan(0);",
              "author": {
                "login": "copilot-pull-request-reviewer"
              }
            }
          ]
        }
      }
    ]
  }
}