{
  "number": 8732,
  "title": "Explicitly mention Microsoft.Net.Compilers.Toolset version",
  "body": "Fixes the build when `UsingToolMicrosoftNetCompilers=false`, which I've been using to work around the mismatch between a new SDK and VS but the old Toolset package (pending #8674).",
  "state": "MERGED",
  "createdAt": "2023-05-04T20:56:23Z",
  "updatedAt": "2023-05-30T12:48:56Z",
  "closedAt": "2023-05-30T12:48:55Z",
  "mergedAt": "2023-05-30T12:48:55Z",
  "additions": 1,
  "deletions": 0,
  "changedFiles": 1,
  "headRefName": "mention-compiler-version",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "eb5bbc36a61b5508bdbf710ecbcca38d16b9fef4",
          "message": "Explicitly mention Microsoft.Net.Compilers.Toolset\n\nWithout this the build fails when UsingToolMicrosoftNetCompilers=false.",
          "committedDate": "2023-05-04T20:55:59Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "41de3c26d2d22ad4a593b3dabefd2e04bdfbbd18",
          "message": "Condition",
          "committedDate": "2023-05-05T20:58:02Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "768b5953a5821ad6d2b735976466184d3fc604f7",
          "message": "invert",
          "committedDate": "2023-05-05T20:58:48Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "It looks like NuGet 1009 says it's already an implicit reference, but if you want to nowarn that, I'm fine with that.\r\n\r\nI'm wondering if you should set some sort of \"Included\" flag for these packages and only conditionally evaluate this ItemGroup based on whether that flag has been set. I noticed it was included 2-3 times for several downstream projects.",
              "createdAt": "2023-05-05T18:24:31Z",
              "path": "eng/Packages.props",
              "diffHunk": "@@ -13,6 +13,7 @@\n     <PackageVersion Include=\"Microsoft.CodeAnalysis.Collections\" Version=\"$(MicrosoftCodeAnalysisCollectionsVersion)\" />\n     <PackageVersion Include=\"Microsoft.DotNet.XUnitExtensions\" Version=\"$(MicrosoftDotNetXUnitExtensionsVersion)\" />\n     <PackageVersion Include=\"Microsoft.IO.Redist\" Version=\"$(MicrosoftIORedistVersion)\" />\n+    <PackageVersion Include=\"Microsoft.Net.Compilers.Toolset\" Version=\"$(MicrosoftNetCompilersToolsetVersion)\" />",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "This one already had such a flag so I'll adopt it.",
              "createdAt": "2023-05-05T20:57:54Z",
              "path": "eng/Packages.props",
              "diffHunk": "@@ -13,6 +13,7 @@\n     <PackageVersion Include=\"Microsoft.CodeAnalysis.Collections\" Version=\"$(MicrosoftCodeAnalysisCollectionsVersion)\" />\n     <PackageVersion Include=\"Microsoft.DotNet.XUnitExtensions\" Version=\"$(MicrosoftDotNetXUnitExtensionsVersion)\" />\n     <PackageVersion Include=\"Microsoft.IO.Redist\" Version=\"$(MicrosoftIORedistVersion)\" />\n+    <PackageVersion Include=\"Microsoft.Net.Compilers.Toolset\" Version=\"$(MicrosoftNetCompilersToolsetVersion)\" />",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}