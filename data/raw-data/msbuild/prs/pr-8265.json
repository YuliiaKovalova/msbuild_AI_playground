{
  "number": 8265,
  "title": "Only log task started once",
  "body": "\ud83e\udd26\r\n\r\nFixes #\r\n\r\n### Context\r\n\r\n\r\n### Changes Made\r\nOnly log task started once, even when MSBuildEventSource.Log.IsEnabled()\r\n\r\n### Testing\r\nNone\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2022-12-22T22:04:23Z",
  "updatedAt": "2023-03-02T09:05:55Z",
  "closedAt": "2023-03-02T09:05:55Z",
  "mergedAt": "2023-03-02T09:05:54Z",
  "additions": 30,
  "deletions": 13,
  "changedFiles": 2,
  "headRefName": "triple-task-started",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "241c433410a03c510119ed11672bc1733c5640c7",
          "message": "Only log once\n\nAlso moves the ETW trace to only fire if we actually are executing a task",
          "committedDate": "2022-12-22T23:48:37Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "aeeaffa69735b23dd47666cad5a68cd4df79b296",
          "message": "Log even on failure",
          "committedDate": "2022-12-22T23:50:10Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "74be1c7906b893e27bc5c5207080150658662ab3",
          "message": "Add test for tripled task startup",
          "committedDate": "2023-02-16T22:34:40Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b5afa71cca49613a851920656ba03bd60be3f3a4",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into triple-task-started",
          "committedDate": "2023-02-16T23:55:18Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1564a619a71ecef8d28ce0d28fdf52d8a8b7d481",
          "message": "Remove IsEnabled checks",
          "committedDate": "2023-02-16T23:56:11Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Is a test possible?",
        "createdAt": "2022-12-23T03:42:44Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "> Is a test possible?\r\n\r\nIn theory, yeah, probably, but I think the cost would outweigh the benefit in this case. It's a pretty minor bug anyway, more of an annoyance. The sort of thing that I'm happy fixing but wouldn't bother if I had to do too much extra work beyond just the fix.",
        "createdAt": "2022-12-27T19:12:34Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Just noting the first failing leg seems to be due to the CPV change.",
        "createdAt": "2023-02-17T00:09:50Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> Just noting the first failing leg seems to be due to the CPV change.\r\n\r\nI don't agree, I think it was an intermittent Azure DevOps artifacts failure.\r\n\r\n/azp run",
        "createdAt": "2023-02-28T19:53:24Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2023-02-28T19:54:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2023-02-28T19:54:28Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "I unfortunately can't see the error message anymore, but if I remember correctly, it was something that seemed like an intermittent AzDO artifacts failure that I'd never seen before the CPV change but appeared multiple times since then...I don't think the change itself was wrong, but I'm wondering if the infrastructure supporting it is flaky.",
        "createdAt": "2023-02-28T22:33:40Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: The `IsEnabled` check is likely not needed here. Evaluating the arguments is just a few dereferences. I would either remove it or cache the result in a local so it doesn't have to be called twice.",
              "createdAt": "2023-02-06T14:31:22Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs",
              "diffHunk": "@@ -433,6 +427,10 @@ private async Task<WorkUnitResult> ExecuteBucket(TaskHost taskHost, ItemBucket b\n                     if (requirements != null)\n                     {\n                         TaskLoggingContext taskLoggingContext = _targetLoggingContext.LogTaskBatchStarted(_projectFullPath, _targetChildInstance);\n+                        if (MSBuildEventSource.Log.IsEnabled())",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "Agreed; this was a more complex call before when I first added it.\r\n\r\nThat said, I don't think it matters. My understanding is that the check is so fast that should basically consider it a no-op as far as time taken, and ExecuteTaskStart implicitly calls IsEnabled after it's evaluated its arguments, so they should be equivalent from a correctness perspective. I'll still remove it. Thanks!",
              "createdAt": "2023-02-16T23:54:22Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs",
              "diffHunk": "@@ -433,6 +427,10 @@ private async Task<WorkUnitResult> ExecuteBucket(TaskHost taskHost, ItemBucket b\n                     if (requirements != null)\n                     {\n                         TaskLoggingContext taskLoggingContext = _targetLoggingContext.LogTaskBatchStarted(_projectFullPath, _targetChildInstance);\n+                        if (MSBuildEventSource.Log.IsEnabled())",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}