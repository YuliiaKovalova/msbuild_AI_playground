{
  "number": 6484,
  "title": "Use new variable for the AL tool path",
  "body": "Fixes # https://github.com/dotnet/msbuild/issues/5981\r\n\r\n### Summary\r\nMSBuild didn't support customers using the x64 AL.exe tool by default when their projects targeted x64. https://github.com/dotnet/msbuild/pull/6207 implemented a fix to include `x64` in the path when relevant, but [this commit](https://github.com/dotnet/msbuild/pull/6207/commits/ca5012a3532a86cb9cfe841d431453cb3b0db250) mistakenly forgot to update one property name which results in an empty parameter being passed. This results in the x86 version of AL.exe being the default choice.\r\n\r\nThis fix changes the name of the property to the correct one that is set just before AL is called.\r\n\r\n### Customer Impact\r\nCustomer's that want to compile .resx files using 64-bit AL.exe require a workaround to do so. This change will allow this workaround to become default behavior.\r\n\r\n### Testing\r\nCustomer did a manual fix [here](https://github.com/dotnet/msbuild/issues/5981#issuecomment-848309143) that manually set  `SdkToolsPathMaybeWithx64Architecture` to the value that `_ALExeToolPath` would be and their build succeeded.\r\n\r\n### Risk\r\nLow. The previous value is preserved when not on x64, and only appends the platform to the path to AL.exe when targeting x64.\r\n\r\n### Code Reviewers\r\n\r\n\r\n### Description of fix\r\nRename property passed into AL from `SdkToolsPathMaybeWithx64Architecture` to `_ALExeToolPath`, which is set a few lines above the AL call.\r\n\r\n--------\r\n\r\n### Context\r\nhttps://github.com/dotnet/msbuild/pull/6207 introduced logic to fix the above issue. Unfortunately we need to update one location (the one that matters) to use that newly created variable. I missed this during the refactor in [this commit](https://github.com/dotnet/msbuild/pull/6207/commits/ca5012a3532a86cb9cfe841d431453cb3b0db250)\r\n\r\n### Changes Made\r\nUpdate the variable used for SdkToolsPath when calling AL.\r\n\r\n### Testing\r\nSee the linked issue. The customer passing `/p:SdkToolsPathMaybeWithx64Architecture=\"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\x64\\\"` (the value that _ALExeToolPath has) fixed their issue.\r\n\r\n### Notes\r\n_ALExeToolPath is defined just above the AL call that this PR modifies, if you're wondering where it came from.",
  "state": "MERGED",
  "createdAt": "2021-05-25T22:44:51Z",
  "updatedAt": "2021-08-19T19:46:15Z",
  "closedAt": "2021-05-28T06:47:12Z",
  "mergedAt": "2021-05-28T06:47:12Z",
  "additions": 1,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "al-x64-fix",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "b6d1d925e07bd6df6d5beb3e63c7da40621845f7",
          "message": "Use new variable for the AL tool path",
          "committedDate": "2021-05-27T17:33:05Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "NTS: Rebase off of and re-target to vs16.10",
        "createdAt": "2021-05-26T00:28:48Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "After discussion with Marc, we're retargeting to 16.11.",
        "createdAt": "2021-05-27T17:39:27Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Will this break any workarounds that we've suggested to customers? Should we continue to honor `SdkToolsPathMaybeWithx64Architecture` if the user sets it? Behind a changewave?",
              "createdAt": "2021-05-27T18:19:48Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -3772,7 +3772,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         Title=\"$(Satellite_Title)\"\n         ToolPath=\"$(AlToolPath)\"\n         ToolExe =\"$(AlToolExe)\"\n-        SdkToolsPath=\"$(SdkToolsPathMaybeWithx64Architecture)\"\n+        SdkToolsPath=\"$(_ALExeToolPath)\"",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "If a customer does have a workaround, it simply won't apply anymore. The workaround basically sets `SdkToolsPathMaybeWithx64Architecture` to exactly what `_ALExeToolPath` will be set to. So the worst case is that the customer workaround is an extra target that doesn't need to run.",
              "createdAt": "2021-05-27T19:04:28Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -3772,7 +3772,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         Title=\"$(Satellite_Title)\"\n         ToolPath=\"$(AlToolPath)\"\n         ToolExe =\"$(AlToolExe)\"\n-        SdkToolsPath=\"$(SdkToolsPathMaybeWithx64Architecture)\"\n+        SdkToolsPath=\"$(_ALExeToolPath)\"",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "After updating to VS 16.11.0 our build produced hundreds of MSB3084 Warnings, saying the task attempted to find \"al.exe\" at two location (naming two locations that are literally the same).\r\nRemoving the common workaround for AL1703 Warnings did NOT fix this issue, but reverting this commit did it!\r\n",
              "createdAt": "2021-08-18T17:09:10Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -3772,7 +3772,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         Title=\"$(Satellite_Title)\"\n         ToolPath=\"$(AlToolPath)\"\n         ToolExe =\"$(AlToolExe)\"\n-        SdkToolsPath=\"$(SdkToolsPathMaybeWithx64Architecture)\"\n+        SdkToolsPath=\"$(_ALExeToolPath)\"",
              "author": {
                "login": "BenGraf"
              }
            },
            {
              "body": "Could you provide [binary logs](aka.ms/msbuild/binlog) of your issue before/after the fix?",
              "createdAt": "2021-08-19T17:06:40Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -3772,7 +3772,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         Title=\"$(Satellite_Title)\"\n         ToolPath=\"$(AlToolPath)\"\n         ToolExe =\"$(AlToolExe)\"\n-        SdkToolsPath=\"$(SdkToolsPathMaybeWithx64Architecture)\"\n+        SdkToolsPath=\"$(_ALExeToolPath)\"",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Sorry, our company policies do not allow that. Unfortunately I also could not reproduce this with a small solution. Our Original solution contains resources for multiple languages, some third party libraries (like Boot and Eigen) and several C++ projects that are build with the VS 2013 toolset.\r\nThis is the full Warning (one per each localized resource file):\r\n`C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(3747,5): warning MSB3084: Task attempted to find \"al.exe\" in two locations. 1) Under the \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\x64\\x64\\\" processor specific directory which is generated based on SdkToolsPath 2) The x86 specific directory under \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\x64\\x64\\\" which is specified by the SDKToolsPath property. You may be able to solve the problem by doing one of the following:  1) Set the \"SDKToolsPath\" property to the location of the Microsoft Windows SDK.`\r\n2) I'm still wondering what might have been the second hint to solve the issue...",
              "createdAt": "2021-08-19T19:46:14Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -3772,7 +3772,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         Title=\"$(Satellite_Title)\"\n         ToolPath=\"$(AlToolPath)\"\n         ToolExe =\"$(AlToolExe)\"\n-        SdkToolsPath=\"$(SdkToolsPathMaybeWithx64Architecture)\"\n+        SdkToolsPath=\"$(_ALExeToolPath)\"",
              "author": {
                "login": "BenGraf"
              }
            }
          ]
        }
      }
    ]
  }
}