{
  "number": 9288,
  "title": "Include optional logger name in console output if it fails to load",
  "body": "Include optional logger name in console output if it fails to load during initialization. \r\n\r\nHelp identifying the logger that has issue\r\n\r\nFixes #9289\r\n\r\n### Context\r\nCurrently if failure happens during initialization for optional logger, the message like this is printed:\r\n\r\n`\r\nThe specified logger could not be created and will not be used. The given assembly name was invalid.\r\n` \r\n\r\nIt's very hard to debug since it doesn't give any hints which logger is having problems\r\n\r\n### Changes Made\r\n\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-09-28T20:41:40Z",
  "updatedAt": "2024-01-04T22:40:30Z",
  "closedAt": "2024-01-04T22:40:30Z",
  "mergedAt": "2024-01-04T22:40:30Z",
  "additions": 66,
  "deletions": 52,
  "changedFiles": 17,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "yanrez"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "b300dba45d382e274b3e95255a6b4d9d97a8c7b9",
          "message": "Include optional logger name in console output when exception is thrown during initialization. Help identifying the logger that has issue",
          "committedDate": "2023-09-28T20:40:41Z",
          "author": {
            "name": "Yan Reznikov",
            "email": "yanrez@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7445846fd66dc7ec71d4d825c53b4ca410e077c1",
          "message": "Update XMake.cs",
          "committedDate": "2023-09-28T20:48:10Z",
          "author": {
            "name": "Yan Reznikov",
            "email": "yanrez@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3aa07b74d11873eee68d10e64e0765e5f1b214c1",
          "message": "Move to resource; make Name public",
          "committedDate": "2023-09-28T21:07:43Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "18ac0f3ae8f3235c2d36ef637894f9ac429958ae",
          "message": "Logger assemblies can be specified by file _or_ name",
          "committedDate": "2023-09-29T16:19:40Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4fbf5ac816bc40f4545ac17070dea4344ad66be3",
          "message": "Expect new message in tests",
          "committedDate": "2023-09-29T16:45:04Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b226d708ae5970f4adbc40ef98f7ed45726fdda0",
          "message": "Merge branch 'vs17.9' into main",
          "committedDate": "2023-12-18T17:25:44Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Looks like `Name` is not a good field to use here--it's empty in the tests we're running which seem pretty straightforward\r\n\r\n```\r\n\u276f dotnet S:\\msbuild\\artifacts\\bin\\bootstrap\\net8.0\\MSBuild\\MSBuild.dll -logger:\",asdf.dll,IsOptional\" .\\MSBuild.Dev.slnf\r\n\r\nMSBuild version 17.9.0-dev-23479-01+3aa07b74d for .NET\r\nThe specified logger \"\" could not be created and will not be used. Could not load file or assembly 'asdf.dll, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.\r\n```",
        "createdAt": "2023-09-29T14:57:46Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Could you change the string itself, rather than prepending this?",
              "createdAt": "2023-09-28T20:47:41Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4269,7 +4269,7 @@ private static LoggerDescription ParseLoggingParameter(string parameter, string\n             }\n             catch (Exception e) when (loggerDescription.IsOptional)\n             {\n-                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));\n+                Console.WriteLine(loggerDescription.Name \": \" + ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Exception thrown is generic \"The given assembly name was invalid.\" and resource string is generic localized string (\"something went wrong\"). So there is no venue to include details of loggerDescription .\r\nI can add separate variable formatting the line before invoking Console.WriteLine(). I'm not familiar with codebase enough, not sure if there is preferred style.",
              "createdAt": "2023-09-28T20:50:17Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4269,7 +4269,7 @@ private static LoggerDescription ParseLoggingParameter(string parameter, string\n             }\n             catch (Exception e) when (loggerDescription.IsOptional)\n             {\n-                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));\n+                Console.WriteLine(loggerDescription.Name \": \" + ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));",
              "author": {
                "login": "yanrez"
              }
            },
            {
              "body": "I meant change the resource string--pushed a commit that does that to look at.",
              "createdAt": "2023-09-28T21:08:32Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4269,7 +4269,7 @@ private static LoggerDescription ParseLoggingParameter(string parameter, string\n             }\n             catch (Exception e) when (loggerDescription.IsOptional)\n             {\n-                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));\n+                Console.WriteLine(loggerDescription.Name \": \" + ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What about all the messages from the catch blocks above - also for logger creation failed?",
              "createdAt": "2023-09-29T02:08:47Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4269,7 +4269,7 @@ private static LoggerDescription ParseLoggingParameter(string parameter, string\n             }\n             catch (Exception e) when (loggerDescription.IsOptional)\n             {\n-                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));",
              "author": {
                "login": "danmoseley"
              }
            },
            {
              "body": "Yes, we should feed it in there too.",
              "createdAt": "2023-09-29T14:52:32Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4269,7 +4269,7 @@ private static LoggerDescription ParseLoggingParameter(string parameter, string\n             }\n             catch (Exception e) when (loggerDescription.IsOptional)\n             {\n-                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "@yanrez - do you plan to address this? \r\nOnce it's adressed then this change is ready to go.",
              "createdAt": "2024-01-03T13:57:33Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4269,7 +4269,7 @@ private static LoggerDescription ParseLoggingParameter(string parameter, string\n             }\n             catch (Exception e) when (loggerDescription.IsOptional)\n             {\n-                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "I filed a bug to track this and don't think it's blocking this PR.",
              "createdAt": "2024-01-04T22:40:27Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4269,7 +4269,7 @@ private static LoggerDescription ParseLoggingParameter(string parameter, string\n             }\n             catch (Exception e) when (loggerDescription.IsOptional)\n             {\n-                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", e.Message));",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}