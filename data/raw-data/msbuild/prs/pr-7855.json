{
  "number": 7855,
  "title": "RoslynCodeTaskFactory fix handling of Source and Type attributes on Code element (#7730)",
  "body": "Fixes #7730\r\n\r\n### Context\r\nWhen processing the UsingTask/Task/Code element for an inline task, the Source and Type attributes are not mutually exclusive.  The Source attribute provides the location of a file to read. The Type attribute can have a value of Class, Method, or Fragment.\r\n- When both the Type and Source attributes are not provided, the Type attribute should default to Fragment.\r\n- When the Source attribute is provided and the Type attribute is not provided, the Type should default to Class.\r\n- But Source and Type attributes can both be provided, which supports Fragments and Methods in separate files.\r\n\r\nThe issue is that this last case is not working.\r\n\r\n### Changes Made\r\n- Removes an `else` that prevents processing the Type attribute if a Source attribute is provided.\r\n- Testing for this issue involved the use of the `MSBUILDLOGCODETASKFACTORYOUTPUT` environment variable. When there is an error the path and name of the temporary file is logged, but not otherwise. Adds a change to log the path and name of the temporary file when `MSBUILDLOGCODETASKFACTORYOUTPUT` is set but there is no error.\r\n- Unit tests\r\n  - Modifies the `CodeTypeFromTaskBody` test to include cases where Source and Type are both provided.\r\n  - Adds the `CSharpFragmentSourceCodeFromFile` test\r\n  - Adds the `CSharpMethodSourceCodeFromFile` test\r\n\r\n### Testing\r\n#### Tested with code based on the reported Issue\r\nCreated test files from the example code in the issue and ran in in an environment with output temp files enabled so that the temp files could be used for verification.\r\n```\r\nset MSBUILDLOGCODETASKFACTORYOUTPUT=true\r\n```\r\nThe test files are\r\n\r\nSplitPath.cs\r\n```\r\nvar charsToTrim = new char[] { '\\\\', '/' };\r\nvar trimmedPath = Path.TrimEnd(charsToTrim);\r\nLeaf = System.IO.Path.GetFileName(trimmedPath);\r\nBasePath = System.IO.Path.GetDirectoryName(trimmedPath);\r\n```\r\nSplitPath.targets\r\n```\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n    <UsingTask TaskName=\"SplitPath\" TaskFactory=\"RoslynCodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\">\r\n        <ParameterGroup>\r\n            <Path ParameterType=\"System.String\" Required=\"true\" />\r\n            <Leaf ParameterType=\"System.String\" Output=\"true\" />\r\n            <BasePath ParameterType=\"System.String\" Output=\"true\" />\r\n        </ParameterGroup>\r\n        <Task>\r\n            <Code Type=\"Fragment\" Language=\"cs\" Source=\"$(MSBuildThisFileDirectory)\\SplitPath.cs\"/>\r\n        </Task>\r\n    </UsingTask>\r\n\r\n    <Target Name=\"Test\">\r\n        <SplitPath Path=\"foo\\bar\">\r\n            <Output TaskParameter=\"Leaf\" PropertyName=\"Leaf\" />\r\n            <Output TaskParameter=\"BasePath\" PropertyName=\"BasePath\" />\r\n        </SplitPath>\r\n        <Message Text=\"$(Leaf) $(BasePath)\"/>\r\n    </Target>\r\n</Project>\r\n```\r\n\r\n#### Unit Tests\r\nUpdated the unit tests and ran the unit tests on Windows and macOS.\r\n\r\n### Notes\r\nIn the issue I noted problems with how errors for inline tasks are reported. This PR does not address the error handling and reporting.",
  "state": "MERGED",
  "createdAt": "2022-07-29T01:07:43Z",
  "updatedAt": "2022-08-02T07:54:34Z",
  "closedAt": "2022-08-02T07:54:34Z",
  "mergedAt": "2022-08-02T07:54:34Z",
  "additions": 120,
  "deletions": 1,
  "changedFiles": 2,
  "headRefName": "RoslynCodeTaskFactory-CodeType",
  "isDraft": false,
  "author": {
    "login": "jrdodds"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "be7cbe7204a85ff0734e3e44c040c1082deb2392",
          "message": "Fix dotnet/msbuild #7730",
          "committedDate": "2022-07-28T15:09:14Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c25e75a924b942cc3e50ec80c28bbd0136e17b9c",
          "message": "Log the location of the code file when no error but MSBUILDLOGCODETASKFACTORYOUTPUT is set",
          "committedDate": "2022-07-28T15:13:24Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "36e09edb2a1208f4cf95c75005815b7570f96c06",
          "message": "unit tests for change in RoslynCodeTaskFactory.TryLoadTaskBody (#7730)",
          "committedDate": "2022-07-29T00:17:30Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8c70dd717a819ae8c719935424c8386ac9f548dd",
          "message": "Merge branch 'dotnet:main' into RoslynCodeTaskFactory-CodeType",
          "committedDate": "2022-08-02T00:54:33Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": []
  }
}