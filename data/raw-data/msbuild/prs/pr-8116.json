{
  "number": 8116,
  "title": "Public api analyzer change",
  "body": "Fixes-ish #7903\r\n\r\n### Context\r\nOur previous analyzer is not helpful due to #7903. This switches to using a more modern api analyzer.\r\n\r\n### Notes\r\nThe note that inspired this suggested including a version as well, but [the documentation I found](https://learn.microsoft.com/dotnet/fundamentals/package-validation/overview) didn't mention a version.",
  "state": "MERGED",
  "createdAt": "2022-11-02T20:46:25Z",
  "updatedAt": "2022-12-20T08:28:05Z",
  "closedAt": "2022-12-20T08:28:05Z",
  "mergedAt": "2022-12-20T08:28:05Z",
  "additions": 198,
  "deletions": 11294,
  "changedFiles": 41,
  "headRefName": "public-api-change",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "b521a7f2738d1aa978684ae7bafba8cb87eb1185",
          "message": "Remove old public api files",
          "committedDate": "2022-11-05T00:06:11Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8f8f3eb4de8fec45529a3c8aa054bb06653025a0",
          "message": "EnablePackageValidation",
          "committedDate": "2022-11-05T00:06:12Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "804624010a6547e60a5893bc6bb71066fa77e85f",
          "message": "Add compatibility files",
          "committedDate": "2022-11-05T00:06:12Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c1d39aca741d9a158174e73a57058abae6ff9787",
          "message": "Add a couple more?",
          "committedDate": "2022-11-05T00:43:24Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0e8724b1367784bf15a3737a39bf7dbb168da7ed",
          "message": "Revert \"Add a couple more?\"\n\nThis reverts commit c1d39aca741d9a158174e73a57058abae6ff9787.",
          "committedDate": "2022-11-10T18:42:39Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5c7d1a33710863ac82642cd1ef6ee3f168e1b265",
          "message": "Build net35 always in StringTools.csproj",
          "committedDate": "2022-11-11T15:43:05Z",
          "author": {
            "name": "Viktor Hofer",
            "email": "viktor.hofer@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c1de747a2f91cb1cd9d9df9cfa1d1903ed9ac657",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into public-api-change",
          "committedDate": "2022-12-06T19:48:46Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0edd2b553847c605ae2187b053682108024764e6",
          "message": "Merge branch 'public-api-change' of https://github.com/Forgind/msbuild into public-api-change",
          "committedDate": "2022-12-06T19:50:01Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "da4cee3c09beba379660b52e8b0836df25e01a54",
          "message": "Remove unwanted files from net35?",
          "committedDate": "2022-12-06T20:31:28Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bb130293902864d5caade4a42303e88f7da827f2",
          "message": "Revert compile removes",
          "committedDate": "2022-12-13T10:31:18Z",
          "author": {
            "name": "Viktor Hofer",
            "email": "viktor.hofer@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5d64c9de73c8d54b469bab6f2da86d010bf11e2d",
          "message": "Fix whitespace",
          "committedDate": "2022-12-13T13:29:50Z",
          "author": {
            "name": "Viktor Hofer",
            "email": "viktor.hofer@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7503b990bcbea01a7d43cfcd47e4eb459f97096a",
          "message": "Revert tfm change",
          "committedDate": "2022-12-13T13:31:05Z",
          "author": {
            "name": "Viktor Hofer",
            "email": "viktor.hofer@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cd5febb975a36010fc0ce99234685949ca8bbe50",
          "message": "Disable package validation in source build",
          "committedDate": "2022-12-13T15:13:39Z",
          "author": {
            "name": "Viktor Hofer",
            "email": "viktor.hofer@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "98aeccba12b2b0923944f30eee43b4144fdc7b8f",
          "message": "Centralize versioning",
          "committedDate": "2022-12-13T19:12:52Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6fb3c90fcf38a0c02f5ed0b66f8cb1a83fe1edee",
          "message": "Bump baseline to 17.4.0 and update suppression files",
          "committedDate": "2022-12-15T09:17:49Z",
          "author": {
            "name": "Viktor Hofer",
            "email": "viktor.hofer@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f22e0482c117ea4fc72edced9a6eb84d16387377",
          "message": "Comment suppressions",
          "committedDate": "2022-12-15T15:41:55Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> The note that inspired this suggested including a version as well, but [the documentation I found](https://learn.microsoft.com/dotnet/fundamentals/package-validation/overview) didn't mention a version.\r\n\r\nI think you're looking for this doc (next to that one in the TOC): https://learn.microsoft.com/dotnet/fundamentals/package-validation/baseline-version-validator",
        "createdAt": "2022-11-02T20:54:15Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Looking through the documentation, it seemed to say I should include a previous version of the package. Since all the examples I saw were three-part version numbers, I'd say 17.4.0. Does that sound appropriate?\r\n\r\nWe should add this to the list of things to update in the \"Release 17.x\" issues.",
        "createdAt": "2022-11-02T21:32:55Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Looking at this, it seems like it should be ok once 17.4 is publicly released, which should be fairly soon, so I'm happy waiting 'til then.",
        "createdAt": "2022-11-02T22:56:43Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "/azp run msbuild-pr",
        "createdAt": "2022-12-13T10:43:11Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2022-12-13T10:43:20Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "> Is the set of projects for which you enabled package validation the full set of packable projects in the repo? If so, then you can move the `EnablePackageValidation` property to a central location.\r\n\r\nI would assume our unit tests are not packable, but our samples are, so I could centralize it then turn it off in our Samples folder, but there aren't too many projects, so I think this is roughly as good.",
        "createdAt": "2022-12-13T19:06:18Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> I'm wondering about how we're planning to update CompatibilitySuppressions.xml files. When I wanted to update them for this, I just deleted them and remade them from scratch, but if you were to do that now, we'd lose comments. It'd be nice to be able to remove stuff as relevant, though...\r\n\r\nGreat question! We have two issues filed to smoothen out the suppression file re-generation:\r\n- https://github.com/dotnet/sdk/issues/28070\r\n- https://github.com/dotnet/sdk/issues/28069\r\n\r\nUntil those are implemented you will need to delete the existing suppression files, generate them and then manually copy over the comments. I can take a look if I get a chance to implement one of these over the holidays when it's usually quieter. As ApiCompat also ships via nuget packages, it's easily possible to depend on newer features than what's available in the SDK.\r\n\r\ncc @smasher164 ",
        "createdAt": "2022-12-16T10:59:58Z",
        "author": {
          "login": "ViktorHofer"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Do the packages for which you enabled package validation, version independently? If not, it would make sense to centralize the version, i.e. in the Versions.props file or somewhere else.",
              "createdAt": "2022-12-13T17:07:29Z",
              "path": "src/Build/Microsoft.Build.csproj",
              "diffHunk": "@@ -20,6 +20,8 @@\n     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to create, edit, and evaluate MSBuild projects.</PackageDescription>\n     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>\n     <ApplyNgenOptimization Condition=\"'$(TargetFramework)' == '$(FullFrameworkTFM)'\">full</ApplyNgenOptimization>\n+    <EnablePackageValidation>true</EnablePackageValidation>\n+    <PackageValidationBaselineVersion>17.3.2</PackageValidationBaselineVersion>",
              "author": {
                "login": "ViktorHofer"
              }
            },
            {
              "body": "They used to, but they shouldn't anymore. Thanks!",
              "createdAt": "2022-12-13T19:06:46Z",
              "path": "src/Build/Microsoft.Build.csproj",
              "diffHunk": "@@ -20,6 +20,8 @@\n     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to create, edit, and evaluate MSBuild projects.</PackageDescription>\n     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>\n     <ApplyNgenOptimization Condition=\"'$(TargetFramework)' == '$(FullFrameworkTFM)'\">full</ApplyNgenOptimization>\n+    <EnablePackageValidation>true</EnablePackageValidation>\n+    <PackageValidationBaselineVersion>17.3.2</PackageValidationBaselineVersion>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this better than putting a condition on the enabling property definitions? It \"feels\" more invasive to me but I wouldn't block on this.",
              "createdAt": "2022-12-15T03:06:23Z",
              "path": "eng/SourceBuild.props",
              "diffHunk": "@@ -8,6 +8,8 @@\n   <Target Name=\"ConfigureInnerBuildArgs\" BeforeTargets=\"GetSourceBuildCommandConfiguration\">\n     <PropertyGroup>\n       <InnerBuildArgs>$(InnerBuildArgs) /p:Projects=\"$(InnerSourceBuildRepoRoot)\\MSBuild.SourceBuild.slnf\"</InnerBuildArgs>\n+      <!-- Disable package validation as source build filters out target frameworks. -->\n+      <InnerBuildArgs>$(InnerBuildArgs) /p:EnablePackageValidation=false</InnerBuildArgs>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "We do the same in runtime: https://github.com/dotnet/runtime/blob/e395c7c767437b9b8d10113bb8fc816ffb30f521/eng/SourceBuild.props#L51.\r\n\r\nWe don't want package validation to run at all during source build as in that mode we filter TFMs out that aren't source buildable and that would change the emitted APICompat suppressions. I don't think we want extra suppression files just for the source build mode.",
              "createdAt": "2022-12-15T09:11:17Z",
              "path": "eng/SourceBuild.props",
              "diffHunk": "@@ -8,6 +8,8 @@\n   <Target Name=\"ConfigureInnerBuildArgs\" BeforeTargets=\"GetSourceBuildCommandConfiguration\">\n     <PropertyGroup>\n       <InnerBuildArgs>$(InnerBuildArgs) /p:Projects=\"$(InnerSourceBuildRepoRoot)\\MSBuild.SourceBuild.slnf\"</InnerBuildArgs>\n+      <!-- Disable package validation as source build filters out target frameworks. -->\n+      <InnerBuildArgs>$(InnerBuildArgs) /p:EnablePackageValidation=false</InnerBuildArgs>",
              "author": {
                "login": "ViktorHofer"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What do these mean, and why are they necessary? Is it an artifact of moving from net6 to net7 between 17.3 and 17.4? If so should we bump the baseline to 17.4?",
              "createdAt": "2022-12-15T03:09:35Z",
              "path": "src/Utilities/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,55 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETCoreApp,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.1</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.2</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.3</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETStandard,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Tizen,Version=v4.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>UAP,Version=v10.0.15064</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Yes good catch! We should update the baseline to 17.4 to get cleaner baseline files. ",
              "createdAt": "2022-12-15T09:11:47Z",
              "path": "src/Utilities/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,55 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETCoreApp,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.1</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.2</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.3</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETStandard,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Tizen,Version=v4.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>UAP,Version=v10.0.15064</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>",
              "author": {
                "login": "ViktorHofer"
              }
            },
            {
              "body": "This is an indication that the package supports `netstandard2.0` as a contract but doesn't offer compatible runtime assemblies. It lists the set of platforms that the packages doesn't at run time but at compile time.\r\n\r\n<img width=\"194\" alt=\"image\" src=\"https://user-images.githubusercontent.com/7412651/207821985-9d39ae83-a936-4d52-b5a4-ff0dd819567f.png\">\r\n\r\nIn dotnet/runtime we would call this a packaging bug as offering a contract without an implementation results in a poor experience at consumption time. Developers would be able to compile to but fail during runtime with an Exception. In dotnet/runtime we intentionally offer PNSE assemblies that throw a PlatformNotSupportedExceptions with a localized message.",
              "createdAt": "2022-12-15T09:26:18Z",
              "path": "src/Utilities/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,55 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETCoreApp,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.1</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.2</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.3</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETStandard,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Tizen,Version=v4.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>UAP,Version=v10.0.15064</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>",
              "author": {
                "login": "ViktorHofer"
              }
            },
            {
              "body": "Ah, great. I'll push a commit with some comments explaining our reasoning behind this decision.",
              "createdAt": "2022-12-15T15:26:48Z",
              "path": "src/Utilities/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,55 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETCoreApp,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.1</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.2</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.3</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETStandard,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Tizen,Version=v4.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>UAP,Version=v10.0.15064</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "cc @ericstj as we talked about this is in our 1:1",
              "createdAt": "2022-12-16T10:54:41Z",
              "path": "src/Utilities/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,55 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETCoreApp,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.1</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.2</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.3</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETStandard,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Tizen,Version=v4.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>UAP,Version=v10.0.15064</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>",
              "author": {
                "login": "ViktorHofer"
              }
            },
            {
              "body": "We stopped using ref in runtime packages because there were too many scenarios that didn't work well with it.  There are old design time tools that try to use reflection (which loads for execution by default) to load references - or actually try to run them.  \r\n\r\nIt's also not a great user experience to have a ref with no lib since it would mean that the only indication someone got of missing support is a runtime FileNotFoundException at an unpredictable point when the JIT decides to load the assembly.\r\n\r\nThe pattern we follow in runtime is to include a PNSE implementation assembly in lib/netstandard2.0 that can be used for reference.  We use SupportedOSPlatform attributes to help message when things won't work on other platforms.\r\n\r\nAside: the number of errors we emit here is larger than it needs to be.  We could just emit a single error about the most specific TFM missing (netstandard2.0) and then could provide the other TFMs in the error message.  This might make the error less noisy for the customer and thus more likely to be understood.",
              "createdAt": "2022-12-16T18:03:41Z",
              "path": "src/Utilities/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,55 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETCoreApp,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.1</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.2</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.3</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETStandard,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Tizen,Version=v4.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>UAP,Version=v10.0.15064</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>",
              "author": {
                "login": "ericstj"
              }
            },
            {
              "body": "> The pattern we follow in runtime is to include a PNSE implementation assembly in lib/netstandard2.0 that can be used for reference.\r\n\r\nI think it would make sense for us to do this for all TFs, since to use MSBuild APIs you must run within the context of an installed VS or SDK, so the \"normal library\" versions of everything are useless. However, that's a build and packaging problem I don't think we're willing to tackle at the moment.",
              "createdAt": "2022-12-16T18:32:20Z",
              "path": "src/Utilities/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,55 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETCoreApp,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.1</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.2</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.3</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETStandard,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Tizen,Version=v4.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>UAP,Version=v10.0.15064</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "> Aside: the number of errors we emit here is larger than it needs to be. We could just emit a single error about the most specific TFM missing (netstandard2.0) and then could provide the other TFMs in the error message. This might make the error less noisy for the customer and thus more likely to be understood.\r\n\r\nI do think that would have helped me.",
              "createdAt": "2022-12-16T18:32:58Z",
              "path": "src/Utilities/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,55 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETCoreApp,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.1</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.2</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETFramework,Version=v4.6.3</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>.NETStandard,Version=v2.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Tizen,Version=v4.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>UAP,Version=v10.0.15064</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation3,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStation4,Version=v0.0</Target>\n+  </Suppression>\n+  <Suppression>\n+    <DiagnosticId>PKV004</DiagnosticId>\n+    <Target>Xamarin.PlayStationVita,Version=v0.0</Target>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "We didn't really drop this TF, did we? Is this a validation error?",
              "createdAt": "2022-12-15T03:13:07Z",
              "path": "src/StringTools/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,7 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV006</DiagnosticId>\n+    <Target>.NETFramework,Version=v3.5</Target>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "We did drop the net35 asset from the package just recently: https://github.com/dotnet/msbuild/commit/ee6f71d15eea77c970815d9105ab9520876c5042",
              "createdAt": "2022-12-15T09:09:17Z",
              "path": "src/StringTools/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,7 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>PKV006</DiagnosticId>\n+    <Target>.NETFramework,Version=v3.5</Target>",
              "author": {
                "login": "ViktorHofer"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there any way to make these more generic (like `M:Microsoft.Build.Experimental.ProjectCache*` or something)?",
              "createdAt": "2022-12-15T03:14:59Z",
              "path": "src/Build/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,77 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>CP0002</DiagnosticId>\n+    <Target>M:Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromAssemblyPath(System.String,System.Collections.Generic.IReadOnlyCollection{Microsoft.Build.Graph.ProjectGraphEntryPoint},Microsoft.Build.Graph.ProjectGraph,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})</Target>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Not really. You can either have a directly matching target or omit the target element entirely which will suppress the CP0002 diagnostic for all APIs in that left/right assembly tuple.",
              "createdAt": "2022-12-15T09:20:00Z",
              "path": "src/Build/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -0,0 +1,77 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+  <Suppression>\n+    <DiagnosticId>CP0002</DiagnosticId>\n+    <Target>M:Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor.FromAssemblyPath(System.String,System.Collections.Generic.IReadOnlyCollection{Microsoft.Build.Graph.ProjectGraphEntryPoint},Microsoft.Build.Graph.ProjectGraph,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})</Target>",
              "author": {
                "login": "ViktorHofer"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Ideally, bumping this version should be part of rebranding the repo to the next version. Do you have documentation that should be updated?",
              "createdAt": "2022-12-15T09:15:13Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -3,6 +3,7 @@\n <Project>\n   <PropertyGroup>\n     <VersionPrefix>17.5.0</VersionPrefix>\n+    <PackageValidationBaselineVersion>17.3.2</PackageValidationBaselineVersion>",
              "author": {
                "login": "ViktorHofer"
              }
            },
            {
              "body": "We generally rebrand `main` before the public push of the release branch. So I think this'll need to be two-phase: at rebrand time, set the baseline to the current prerelease package, then after release update the baseline to the final public release.\r\n\r\nAdded that info to #8246 (we'll automate the creation and update of these checklists Someday\u2122\ufe0f)",
              "createdAt": "2022-12-15T15:23:53Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -3,6 +3,7 @@\n <Project>\n   <PropertyGroup>\n     <VersionPrefix>17.5.0</VersionPrefix>\n+    <PackageValidationBaselineVersion>17.3.2</PackageValidationBaselineVersion>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I would appreciate a reasonability check on this.",
              "createdAt": "2022-12-15T15:54:57Z",
              "path": "src/Tasks/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -1,11 +1,21 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n   <Suppression>\n+    <!-- For ease of logging the \"not supported on Core\" message, this task is a\n+         TaskExtension on netstandard/netcore. Since the type is sealed there,\n+         that shouldn't cause any implementation problems since no one can derive\n+         from it and try to call TaskExtension.Log. -->",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "That's something we've done on several other tasks as well, right? I think it seems reasonable to do it here as well.",
              "createdAt": "2022-12-15T19:03:03Z",
              "path": "src/Tasks/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -1,11 +1,21 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n   <Suppression>\n+    <!-- For ease of logging the \"not supported on Core\" message, this task is a\n+         TaskExtension on netstandard/netcore. Since the type is sealed there,\n+         that shouldn't cause any implementation problems since no one can derive\n+         from it and try to call TaskExtension.Log. -->",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "We didn't have any other instances of this error, right? I think the other not-supported-on-Core tasks may have already had easy access to a localized Log mechanism.",
              "createdAt": "2022-12-15T20:15:40Z",
              "path": "src/Tasks/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -1,11 +1,21 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n   <Suppression>\n+    <!-- For ease of logging the \"not supported on Core\" message, this task is a\n+         TaskExtension on netstandard/netcore. Since the type is sealed there,\n+         that shouldn't cause any implementation problems since no one can derive\n+         from it and try to call TaskExtension.Log. -->",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}