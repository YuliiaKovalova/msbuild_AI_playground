{
  "number": 11671,
  "title": "Remove unnecessary GC.Collect calls",
  "body": "Fixes #11373\r\n\r\n### Context\r\nBuilds on MSBuild nodes forcing a GC immediately after the build is done. At its worst case, this burned 3 cores for 3 seconds at a time that VS and the user think the build is done and VS is likely launching the app or user back to typing, so not really a good time to consume CPU.\r\n\r\n### Changes Made\r\n- Remove GC call at the end of the build.\r\n- Do not check for memory usage on a 64 bit machine.\r\n\r\n### Testing\r\nCorrectness: unit tests & exp insertion.\r\nPerf: exp VS insertion, local measurements and perfstar does not show any noticeable impact.",
  "state": "MERGED",
  "createdAt": "2025-04-03T11:55:15Z",
  "updatedAt": "2025-05-07T09:04:09Z",
  "closedAt": "2025-05-07T09:04:07Z",
  "mergedAt": "2025-05-07T09:04:07Z",
  "additions": 0,
  "deletions": 3,
  "changedFiles": 1,
  "headRefName": "exp/remove-gc_fixed",
  "isDraft": false,
  "author": {
    "login": "AR-May"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "d065a153c0b7070535adcb2b564a983734108857",
          "message": "adding the changes",
          "committedDate": "2025-03-27T18:44:50Z",
          "author": {
            "name": "SimaTian",
            "email": "tom.bartonek@volny.cz"
          }
        }
      },
      {
        "commit": {
          "oid": "dd4a8afdc3783ab43ab8ef36898881c375b30a4e",
          "message": "Merge branch 'main' into exp/remove-gc_fixed",
          "committedDate": "2025-04-30T10:26:41Z",
          "author": {
            "name": "Tomas Bartonek",
            "email": "tom.bartonek@volny.cz"
          }
        }
      },
      {
        "commit": {
          "oid": "2db6c78f52a77ac9e277a6387b35284b04ced643",
          "message": "Merge branch 'main' into exp/remove-gc_fixed",
          "committedDate": "2025-05-06T07:43:26Z",
          "author": {
            "name": "Tomas Bartonek",
            "email": "tom.bartonek@volny.cz"
          }
        }
      },
      {
        "commit": {
          "oid": "37421c1247dc929a05d2e4bf0c32baab2d8d7634",
          "message": "Apply suggestions from code review\n\nCo-authored-by: Jan Provazn\u00edk <janprovaznik@microsoft.com>",
          "committedDate": "2025-05-06T07:56:58Z",
          "author": {
            "name": "Tomas Bartonek",
            "email": "tom.bartonek@volny.cz"
          }
        }
      },
      {
        "commit": {
          "oid": "2b82699c843329d50e23a4de2cb586a9da910400",
          "message": "Update BuildRequestEngine.cs\n\nthis might be killing a test. I'm goint to test the assumption.",
          "committedDate": "2025-05-06T08:27:20Z",
          "author": {
            "name": "Tomas Bartonek",
            "email": "tom.bartonek@volny.cz"
          }
        }
      },
      {
        "commit": {
          "oid": "8815382d0d1bd7c8e75ed452ebf129c030ea483c",
          "message": "Merge branch 'main' into exp/remove-gc_fixed",
          "committedDate": "2025-05-06T15:06:55Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "do the tests rely on some finalizer to run caused by the gc collect \ud83e\udd14",
        "createdAt": "2025-04-03T14:06:13Z",
        "author": {
          "login": "JanProvaznik"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2025-04-07T13:50:05Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2025-04-07T13:50:17Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "Are these \"node\" part of Node Reuse?  If so, then it is good to clean up the memory after work is done to minimize footprint while idle.",
        "createdAt": "2025-04-17T18:54:16Z",
        "author": {
          "login": "yuehuang010"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n```",
              "createdAt": "2025-05-05T08:44:37Z",
              "path": "src/Build/BackEnd/Node/OutOfProcNode.cs",
              "diffHunk": "@@ -564,7 +564,7 @@ private void CleanupCaches()\n             }\n \n             // Since we aren't going to be doing any more work, lets clean up all our memory usage.\n-            GC.Collect();\n+            // GC.Collect();",
              "author": {
                "login": "JanProvaznik"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n```",
              "createdAt": "2025-05-05T08:45:16Z",
              "path": "src/Build/BackEnd/Node/OutOfProcNode.cs",
              "diffHunk": "@@ -564,7 +564,7 @@ private void CleanupCaches()\n             }\n \n             // Since we aren't going to be doing any more work, lets clean up all our memory usage.",
              "author": {
                "login": "JanProvaznik"
              }
            }
          ]
        }
      }
    ]
  }
}