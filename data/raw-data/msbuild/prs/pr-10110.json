{
  "number": 10110,
  "title": "Maybe permit failed SDK load Fixes #7988",
  "body": "Fixes #7988\r\n\r\n### Context\r\nIf an SDK is a workload SDK, and we don't have the workload SDK resolver from the SDK, as, for instance, if we have an xcopy'd MSBuild, then we should still be able to build simple projects that don't require workloads. Right now, we just fail. If we get into a failure state, this tries to figure out if we actually need workloads, erring on the side of failing if we aren't sure. If we decide we don't need workloads, however, we suppress the error for failing to load a workload SDK.\r\n\r\n### Changes Made\r\nIf we are in a failure state because we failed to resolve an SDK, check if it's one of the two workload SDKs. Then try to figure out whether we actually need workloads for this project/solution, and if we don't, suppress the error.\r\n\r\n### Testing\r\nNone yet, hence draft\r\n\r\n### Notes\r\n",
  "state": "CLOSED",
  "createdAt": "2024-05-06T17:27:39Z",
  "updatedAt": "2024-05-06T21:42:04Z",
  "closedAt": "2024-05-06T21:42:00Z",
  "mergedAt": null,
  "additions": 81,
  "deletions": 2,
  "changedFiles": 1,
  "headRefName": "workload-sdk-load-failures",
  "isDraft": true,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "4e4fa699f8f8643e0fcde0b40ebcf8a5f76a9d46",
          "message": "Maybe permit failed SDK load\n\nIf an SDK is a workload SDK, and we don't have the workload SDK resolver from the SDK, as, for instance, if we have an xcopy'd MSBuild, then we should still be able to build simple projects that don't require workloads. Right now, we just fail. If we get into a failure state, this tries to figure out if we actually need workloads, erring on the side of failing if we aren't sure. If we decide we don't need workloads, however, we suppress the error for failing to load a workload SDK.\n\nFixes #7988",
          "committedDate": "2024-05-06T17:26:04Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Help me understand why MSBuild is the right layer for this? It feels like it's an SDK problem to me.",
        "createdAt": "2024-05-06T17:43:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Help me understand why MSBuild is the right layer for this? It feels like it's an SDK problem to me.\r\n\r\nI agree and would prefer for it to be in the SDK layer...\r\n\r\nBut this is a case where the SDK isn't really there, so I can't just make it part of the workload SDK resolver. I talked with @baronfel a bit just now, and he suggested that it's reasonable to add an SDK-resolver-not-fail option in SdkResolverService, but we should make it generic and opt into it (that is, include the workloads-specific logic) in the deploy script. I don't know how doable that is; it sounds hard to me, but I haven't looked into it very much.",
        "createdAt": "2024-05-06T17:49:17Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> But this is a case where the SDK isn't really there\r\n\r\nIs it? Why? Can that not be fixed?",
        "createdAt": "2024-05-06T17:52:05Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "My understanding is that @KirillOsenkov is just building MSBuild and using Deploy-MSBuild to make a zip, then unzipping it on a clean machine. His point was that that used to be possible (for small apps like the default C# console app) but no longer works because it checks for workloads unconditionally.",
        "createdAt": "2024-05-06T18:00:58Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "I am not very interested in that deployment model, but I am interested in knowing why it is failing now, which is very unclear to me. What parts of workloads are not available? Could that be changed?",
        "createdAt": "2024-05-06T18:06:34Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The workload SDK resolver is unavailable because it's part of the SDK, which is absent. The only change for that would be moving it into MSBuild, which is not a change I'm in favor of.",
        "createdAt": "2024-05-06T18:11:28Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Should the fix here be \"don't include the parts of the SDK that we _do_ include in the bootstrap\", so it's clear that you can't use bootstrap netfx MSBuild without an SDK?",
        "createdAt": "2024-05-06T18:13:34Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Should the fix here be \"don't include the parts of the SDK that we _do_ include in the bootstrap\", so it's clear that you can't use bootstrap netfx MSBuild without an SDK?\r\n\r\nAre you saying you should not be able to build anything, even a small net-fx-targeted console app using no workloads, without the SDK?",
        "createdAt": "2024-05-06T19:56:47Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "That is how the system is designed: to build a project that uses the .NET SDK, you must have the .NET SDK.",
        "createdAt": "2024-05-06T20:13:36Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "it's good to specify the argument name : when passing null literals (same for true/false/0 etc), so we can see what is being passed that is null",
              "createdAt": "2024-05-06T18:29:18Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -425,6 +498,12 @@ private SdkResult ResolveSdkUsingAllResolvers(int submissionId, SdkReference sdk\n                 results.Add(result);\n             }\n \n+            if (IsUnneededWorkloadSdk(sdk, solutionPath, projectPath))\n+            {\n+                sdkResult = (SdkResult)resultFactory.IndicateSuccess(null, null, null);",
              "author": {
                "login": "KirillOsenkov"
              }
            }
          ]
        }
      }
    ]
  }
}