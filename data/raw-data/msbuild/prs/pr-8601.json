{
  "number": 8601,
  "title": "[WIP - do not merge] Use server in interactive mode only",
  "body": "Addresses https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1676390\r\n\r\n### Context\r\nIt has been decided that MSBuild server will be used only in interactive mode, i.e. when output of CLI is console, and user is expecting to be in inner dev loop. \r\nSo for example in CI/CD pipelines it will not be used as it does bring advantages only in short repeat builds loops.\r\n\r\n### Changes Made\r\nWe consider it as non interactive mode when output is redirected.\r\n\r\n### Testing\r\nLocal, and unit tests...\r\n\r\n### Notes\r\nWill need another PR on SDK, once this one is merged\r\n",
  "state": "CLOSED",
  "createdAt": "2023-03-27T14:40:07Z",
  "updatedAt": "2023-04-13T13:04:51Z",
  "closedAt": "2023-04-13T13:04:50Z",
  "mergedAt": null,
  "additions": 113,
  "deletions": 82,
  "changedFiles": 5,
  "headRefName": "rokonec/do-use-server-in-interactive-mode-only",
  "isDraft": false,
  "author": {
    "login": "rokonec"
  },
  "milestone": {
    "title": "VS 17.7"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "e5c4afa2235b70dc63ab16d902b8d49a3bf8f9a6",
          "message": "Use server in interactive mode only",
          "committedDate": "2023-03-27T14:22:47Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "715d960a3cb3a0fce8602c7911d37461653641d4",
          "message": "Fixing English grammar\n\nCo-authored-by: Forgind <12969783+Forgind@users.noreply.github.com>",
          "committedDate": "2023-04-03T12:57:08Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "93402dcd7e13b96e741df68cc48b5408bc05900d",
          "message": "Fix formatting",
          "committedDate": "2023-04-03T13:49:58Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I'm wondering why the new check was added deep in the server implementation instead of adding it to this place where we already make the server/no-server decision.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b705a20b75c2b7e3b519d75146adff041869e7a2/src/MSBuild/XMake.cs#L237-L246",
        "createdAt": "2023-04-03T15:30:47Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "> I'm wondering why the new check was added deep in the server implementation instead of adding it to this place where we already make the server/no-server decision.\r\n\r\n@ladipro It was added for optimization reasons so we do not call same native interop methods multiple time. Probably premature optimization.\r\nThat being said, this PR will most probably be abandoned. \r\n\r\nI am created new PR is SDK, after discussions with Chet and Noah.\r\n\r\nhttps://github.com/dotnet/sdk/pull/31597\r\n\r\n",
        "createdAt": "2023-04-04T11:29:05Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "Canceled/Abandomed\r\nWe have decided that SDK alone will control it. See https://github.com/dotnet/sdk/pull/31597",
        "createdAt": "2023-04-13T13:04:50Z",
        "author": {
          "login": "rokonec"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n            CommunicationsUtilities.Trace(\"Executing build using MSBuild Server with command line '{0}'\", descriptiveCommandLine);\r\n```\r\n\r\n?",
              "createdAt": "2023-03-31T19:15:29Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -169,70 +169,86 @@ public MSBuildClientExitResult Execute(CancellationToken cancellationToken)\n                 string.Join(\" \", _commandLine);\n #endif\n \n-            CommunicationsUtilities.Trace(\"Executing build with command line '{0}'\", descriptiveCommandLine);\n+            CommunicationsUtilities.Trace(\"Trying execute build at server with command line '{0}'\", descriptiveCommandLine);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Understanding check:\r\nYou need a live env var check here because the server would cache it between builds, and we don't want that?",
              "createdAt": "2023-03-31T19:18:24Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -169,70 +169,86 @@ public MSBuildClientExitResult Execute(CancellationToken cancellationToken)\n                 string.Join(\" \", _commandLine);\n #endif\n \n-            CommunicationsUtilities.Trace(\"Executing build with command line '{0}'\", descriptiveCommandLine);\n+            CommunicationsUtilities.Trace(\"Trying execute build at server with command line '{0}'\", descriptiveCommandLine);\n \n             try\n             {\n-                bool serverIsAlreadyRunning = ServerIsRunning();\n-                if (KnownTelemetry.PartialBuildTelemetry != null)\n+                ConfigureAndQueryConsoleProperties();\n+\n+                if (_consoleConfiguration?.OutputIsScreen == false && Environment.GetEnvironmentVariable(Traits.UseMSBuildServerInNonInteractiveEnvVarName) != \"1\")",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "tiny nit: add space",
              "createdAt": "2023-03-31T19:20:28Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -128,6 +128,10 @@ public Traits()\n         /// Name of environment variables used to enable MSBuild server.\n         /// </summary>\n         public const string UseMSBuildServerEnvVarName = \"MSBUILDUSESERVER\";\n+        /// <summary>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I'm wondering if, rather than adding a new environment variable here, we should tweak the SDK code to only set MSBUILDUSESERVER if it's outputting to the screen? Then we can just use one env var and not have an awkwardly named variable. (This feels like \"MSBUILDREALLYUSESERVER\")",
              "createdAt": "2023-03-31T19:22:32Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -128,6 +128,10 @@ public Traits()\n         /// Name of environment variables used to enable MSBuild server.\n         /// </summary>\n         public const string UseMSBuildServerEnvVarName = \"MSBUILDUSESERVER\";\n+        /// <summary>\n+        /// Name of environment variables used to use MSBuild server even if non interactive mode has been detected.\n+        /// </summary>\n+        public const string UseMSBuildServerInNonInteractiveEnvVarName = \"MSBUILDUSESERVERINNONINTERACTIVE\";",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I guess one usage scenario might be to overwrite the sdk implict opt-out (basically to force use server in noninteractive mode)",
              "createdAt": "2023-04-04T15:20:01Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -128,6 +128,10 @@ public Traits()\n         /// Name of environment variables used to enable MSBuild server.\n         /// </summary>\n         public const string UseMSBuildServerEnvVarName = \"MSBUILDUSESERVER\";\n+        /// <summary>\n+        /// Name of environment variables used to use MSBuild server even if non interactive mode has been detected.\n+        /// </summary>\n+        public const string UseMSBuildServerInNonInteractiveEnvVarName = \"MSBUILDUSESERVERINNONINTERACTIVE\";",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}