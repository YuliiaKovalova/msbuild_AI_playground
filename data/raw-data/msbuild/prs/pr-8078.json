{
  "number": 8078,
  "title": "Fixed some URLs in the documentation",
  "body": "- Changed http:// links to https:// where that was the case (a handful of http:// links remain), but all changed ones were checked\r\n- Where GitHub links changed from `master` to `main`\r\n- Where source lines were referenced it now points to a given revision, because pointing to a branch name means the line number may be incorrect. NB: so this was very much intentional!\r\n- Linked to the archived page for dead links\r\n- Updated old MSDN and docs.microsoft.com and blog links to point to the current location (even if it's the archive on learn.microsoft.com)\r\n- One wrong link (http://source.roslyn.io/#MSBuildFiles/C/ProgramFiles(x86)/MSBuild/14.0/bin_/amd64/Microsoft.Common.CurrentVersion.targets,1820) remains in ResolveAssemblyReference.md\r\n",
  "state": "MERGED",
  "createdAt": "2022-10-20T11:02:57Z",
  "updatedAt": "2022-12-26T06:46:09Z",
  "closedAt": "2022-10-26T07:26:19Z",
  "mergedAt": "2022-10-26T07:26:19Z",
  "additions": 48,
  "deletions": 48,
  "changedFiles": 14,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "exoosh"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a7c74b0b1486f5f28bb264be3b47222a21d1c83d",
          "message": "Fixed some URLs in the documentation\n\n- Changed http:// links to https:// where that was the case (a handful\n  of http:// links remain), but all changed ones were checked\n- Where GitHub links changed from `master` to `main`\n- Where source lines were referenced it now points to a given revision,\n  because pointing to a branch name means the line number may be\n  incorrect. NB: so this was very much intentional!\n- Linked to the archived page for dead links\n- Updated old MSDN and docs.microsoft.com and blog links to point to the\n  current location (even if it's the archive on learn.microsoft.com)\n- Remove en-us from canonical links to learn.microsoft.com ...\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2022-10-20T15:20:32Z",
          "author": {
            "name": "Oliver Schneider",
            "email": "oschneider@exocad.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=8078) <br/>All CLA requirements met.",
        "createdAt": "2022-10-20T11:03:11Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/not_signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=8078) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=8078) before we can accept your contribution.<br/><br/>:x: exoosh [sign now](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=8078)<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla.dotnetfoundation.org/check/dotnet/msbuild?pullRequest=8078) it.</sub>",
        "createdAt": "2022-10-20T11:03:11Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "Not exactly sure why one of the two bot comments shows the CLA as signed and the other does not. Clicking \"recheck\" doesn't change a thing, but the link of the one saying I didn't sign it points to the exact same (signed) CLA. Odd ...",
        "createdAt": "2022-10-20T11:12:31Z",
        "author": {
          "login": "exoosh"
        }
      },
      {
        "body": "The check is the critical thing for the CLA, and it's passing, so we can just ignore the second comment. Sorry for the confusion!",
        "createdAt": "2022-10-20T13:48:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Will squash the previous commits into a signed commit and force-push to my branch. This should update the PR.",
        "createdAt": "2022-10-20T15:06:55Z",
        "author": {
          "login": "exoosh"
        }
      },
      {
        "body": "Found a handful more of the `/en-us/` in the URLs and also fixed those (and tested them afterwards).",
        "createdAt": "2022-10-20T15:37:50Z",
        "author": {
          "login": "exoosh"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "There was a rename and canonical URL change here:\r\n\r\n```suggestion\r\nInstall the latest .NET SDK from https://dotnet.microsoft.com/download. That will ensure all prerequisites for our build are met.\r\n```",
              "createdAt": "2022-10-20T13:50:21Z",
              "path": "documentation/wiki/Building-Testing-and-Debugging-on-.Net-Core-MSBuild.md",
              "diffHunk": "@@ -10,13 +10,13 @@ MSBuild can be successfully built on Windows, OS X 10.13, Ubuntu 14.04, and Ubun\n \n ## The easy way\n \n-Install the latest .NET Core SDK from http://dot.net/core. That will ensure all prerequisites for our build are met.\n+Install the latest .NET Core SDK from https://dot.net/core. That will ensure all prerequisites for our build are met.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This is actually no longer true! Can you please remove it instead?",
              "createdAt": "2022-10-20T13:51:29Z",
              "path": "documentation/wiki/Building-Testing-and-Debugging-on-Mono-MSBuild.md",
              "diffHunk": "@@ -6,7 +6,7 @@ Mono maintains a fork of msbuild (for now) at `https://github.com/mono/msbuild/`\n \n **Required packages for OSX & Ubuntu**\n \n-MSBuild requires a stable version of [Mono](http://www.mono-project.com/download/) to build itself.\n+MSBuild requires a stable version of [Mono](https://www.mono-project.com/download/stable/) to build itself.",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Actually, we don't do any Mono any more, so maybe we should replace this whole file with \"don't do this any more\"?",
              "createdAt": "2022-10-20T13:52:16Z",
              "path": "documentation/wiki/Building-Testing-and-Debugging-on-Mono-MSBuild.md",
              "diffHunk": "@@ -6,7 +6,7 @@ Mono maintains a fork of msbuild (for now) at `https://github.com/mono/msbuild/`\n \n **Required packages for OSX & Ubuntu**\n \n-MSBuild requires a stable version of [Mono](http://www.mono-project.com/download/) to build itself.\n+MSBuild requires a stable version of [Mono](https://www.mono-project.com/download/stable/) to build itself.",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Do you want me to do that or do you want to do that in a separate commit?",
              "createdAt": "2022-10-20T14:57:00Z",
              "path": "documentation/wiki/Building-Testing-and-Debugging-on-Mono-MSBuild.md",
              "diffHunk": "@@ -6,7 +6,7 @@ Mono maintains a fork of msbuild (for now) at `https://github.com/mono/msbuild/`\n \n **Required packages for OSX & Ubuntu**\n \n-MSBuild requires a stable version of [Mono](http://www.mono-project.com/download/) to build itself.\n+MSBuild requires a stable version of [Mono](https://www.mono-project.com/download/stable/) to build itself.",
              "author": {
                "login": "exoosh"
              }
            },
            {
              "body": "I'm fine doing it separately.",
              "createdAt": "2022-10-20T14:57:52Z",
              "path": "documentation/wiki/Building-Testing-and-Debugging-on-Mono-MSBuild.md",
              "diffHunk": "@@ -6,7 +6,7 @@ Mono maintains a fork of msbuild (for now) at `https://github.com/mono/msbuild/`\n \n **Required packages for OSX & Ubuntu**\n \n-MSBuild requires a stable version of [Mono](http://www.mono-project.com/download/) to build itself.\n+MSBuild requires a stable version of [Mono](https://www.mono-project.com/download/stable/) to build itself.",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "\ud83d\udc4d",
              "createdAt": "2022-10-20T14:59:17Z",
              "path": "documentation/wiki/Building-Testing-and-Debugging-on-Mono-MSBuild.md",
              "diffHunk": "@@ -6,7 +6,7 @@ Mono maintains a fork of msbuild (for now) at `https://github.com/mono/msbuild/`\n \n **Required packages for OSX & Ubuntu**\n \n-MSBuild requires a stable version of [Mono](http://www.mono-project.com/download/) to build itself.\n+MSBuild requires a stable version of [Mono](https://www.mono-project.com/download/stable/) to build itself.",
              "author": {
                "login": "exoosh"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nReview the existing documentation on [Task Writing](https://learn.microsoft.com/visualstudio/msbuild/task-writing) to learn about the fundamentals.  You can also looking at existing tasks in the [Microsoft.Build.Tasks.Core assembly](https://github.com/dotnet/msbuild/tree/main/src/Tasks) for a great starting point.\r\n```",
              "createdAt": "2022-10-20T13:53:07Z",
              "path": "documentation/wiki/Contributing-Tasks.md",
              "diffHunk": "@@ -13,15 +13,15 @@ The following requirements are in place for contributed tasks:\n 3. The task must have unit tests in place to prevent regressions.\n \n ## Developing a new Task\n-Review the existing documentation on [Task Writing](https://docs.microsoft.com/en-us/visualstudio/msbuild/task-writing) to learn about the fundamentals.  You can also looking at existing tasks in the [Microsoft.Build.Tasks.Core assembly](https://github.com/dotnet/msbuild/tree/master/src/Tasks) for a great starting point.\n+Review the existing documentation on [Task Writing](https://learn.microsoft.com/en-us/visualstudio/msbuild/task-writing) to learn about the fundamentals.  You can also looking at existing tasks in the [Microsoft.Build.Tasks.Core assembly](https://github.com/dotnet/msbuild/tree/main/src/Tasks) for a great starting point.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n * [MSBuild Concepts](https://learn.microsoft.com/visualstudio/msbuild/msbuild-concepts)\r\n```",
              "createdAt": "2022-10-20T13:53:54Z",
              "path": "documentation/wiki/MSBuild-Resources.md",
              "diffHunk": "@@ -1,21 +1,21 @@\n # General Resources\n- * [MSBuild Concepts](https://msdn.microsoft.com/en-us/library/dd637714.aspx)\n- * [MSBuild Reserved and Well-Known Properties](https://msdn.microsoft.com/en-us/library/ms164309.aspx)\n+ * [MSBuild Concepts](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-concepts)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n * [MSBuild Reserved and Well-Known Properties](https://learn.microsoft.com/visualstudio/msbuild/msbuild-reserved-and-well-known-properties)\r\n```",
              "createdAt": "2022-10-20T13:54:18Z",
              "path": "documentation/wiki/MSBuild-Resources.md",
              "diffHunk": "@@ -1,21 +1,21 @@\n # General Resources\n- * [MSBuild Concepts](https://msdn.microsoft.com/en-us/library/dd637714.aspx)\n- * [MSBuild Reserved and Well-Known Properties](https://msdn.microsoft.com/en-us/library/ms164309.aspx)\n+ * [MSBuild Concepts](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-concepts)\n+ * [MSBuild Reserved and Well-Known Properties](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-reserved-and-well-known-properties)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nSee the [MSBuild Command-Line Reference](https://learn.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference) for more information on switches.\r\n```",
              "createdAt": "2022-10-20T13:55:34Z",
              "path": "documentation/wiki/MSBuild-Tips-&-Tricks.md",
              "diffHunk": "@@ -1,5 +1,5 @@\n # MSBuild Command-Line Switches\n-See the [MSBuild Command-Line Reference](https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference) for more information on switches.\n+See the [MSBuild Command-Line Reference](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-command-line-reference) for more information on switches.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n   * Set this to enable [printing all target outputs to the log](https://learn.microsoft.com/archive/blogs/msbuild/displaying-target-output-items-using-the-console-logger).\r\n```",
              "createdAt": "2022-10-20T13:55:47Z",
              "path": "documentation/wiki/MSBuild-Tips-&-Tricks.md",
              "diffHunk": "@@ -14,13 +14,13 @@ See the [MSBuild Command-Line Reference](https://docs.microsoft.com/visualstudio\n \n # Environment Variables\n  * `MSBUILDTARGETOUTPUTLOGGING=1`\n-   * Set this to enable [printing all target outputs to the log](https://blogs.msdn.microsoft.com/msbuild/2010/03/31/displaying-target-output-items-using-the-console-logger).\n+   * Set this to enable [printing all target outputs to the log](https://learn.microsoft.com/en-us/archive/blogs/msbuild/displaying-target-output-items-using-the-console-logger).",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nSet the `TRACEDESIGNTIME=true` environment variable to output design-time build logs to TEMP: read more here: https://learn.microsoft.com/archive/blogs/jeremykuhne/vs-background-builds\r\n```",
              "createdAt": "2022-10-20T13:56:09Z",
              "path": "documentation/wiki/MSBuild-Tips-&-Tricks.md",
              "diffHunk": "@@ -45,7 +45,7 @@ If MSBuild.exe is passed properties on the command line, such as `/p:Platform=An\n This will make sure that your local assignments to the `Platform` property are respected. You can specify multiple properties in `TreatAsLocalProperty` separated by semicolon.\n \n # Visual Studio Background Builds\n-Set the `TRACEDESIGNTIME=true` environment variable to output design-time build logs to TEMP: read more here: https://blogs.msdn.microsoft.com/jeremykuhne/2016/06/06/vs-background-builds\n+Set the `TRACEDESIGNTIME=true` environment variable to output design-time build logs to TEMP: read more here: https://learn.microsoft.com/en-us/archive/blogs/jeremykuhne/vs-background-builds",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nMicrosoft.Build.Framework contains the types and interfaces for extensibility in MSBuild. If you've ever written a custom Task, you might recognize them as ITask, ITaskItem, etc. After you build your Task, let's say targeting `Microsoft.Build.Framework, Version=12.0.0.0, PublicKeyToken=b03f5f7f11d50a3a` (Visual Studio 2013), anyone with MSBuild 12.0 or later can use your Task. In later versions of MSBuild, say version 14.0, we will use a [binding redirect](https://learn.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/bindingredirect-element) to point you to the newer version of Microsoft.Build.Framework. Assuming we did our jobs right with compatibility, your Task should run without ever knowing the difference. The crucial point of detail here is that the public key token for the Framework assembly **did not change** between version. If it does, binding redirection is not allowed.\r\n```",
              "createdAt": "2022-10-20T13:56:55Z",
              "path": "documentation/wiki/Microsoft.Build.Framework.md",
              "diffHunk": "@@ -1,7 +1,7 @@\n ### Microsoft.Build.Framework\n It you have looked carefully, you might notice some odd behavior around this assembly (Microsoft.Build.Framework). We released the source here, but in some cases if you use our `BuildAndCopy.cmd` script, you will reference the one on your machine instead of the one you just built! Here's why.\n \n-Microsoft.Build.Framework contains the types and interfaces for extensibility in MSBuild. If you've ever written a custom Task, you might recognize them as ITask, ITaskItem, etc. After you build your Task, let's say targeting `Microsoft.Build.Framework, Version=12.0.0.0, PublicKeyToken=b03f5f7f11d50a3a` (Visual Studio 2013), anyone with MSBuild 12.0 or later can use your Task. In later versions of MSBuild, say version 14.0, we will use a [binding redirect](https://msdn.microsoft.com/en-us/library/eftw1fys(v=vs.110).aspx) to point you to the newer version of Microsoft.Build.Framework. Assuming we did our jobs right with compatibility, your Task should run without ever knowing the difference. The crucial point of detail here is that the public key token for the Framework assembly **did not change** between version. If it does, binding redirection is not allowed.\n+Microsoft.Build.Framework contains the types and interfaces for extensibility in MSBuild. If you've ever written a custom Task, you might recognize them as ITask, ITaskItem, etc. After you build your Task, let's say targeting `Microsoft.Build.Framework, Version=12.0.0.0, PublicKeyToken=b03f5f7f11d50a3a` (Visual Studio 2013), anyone with MSBuild 12.0 or later can use your Task. In later versions of MSBuild, say version 14.0, we will use a [binding redirect](https://learn.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/bindingredirect-element) to point you to the newer version of Microsoft.Build.Framework. Assuming we did our jobs right with compatibility, your Task should run without ever knowing the difference. The crucial point of detail here is that the public key token for the Framework assembly **did not change** between version. If it does, binding redirection is not allowed.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n * [Delay Signing](https://learn.microsoft.com/archive/blogs/shawnfa/delay-signing)\r\n```",
              "createdAt": "2022-10-20T13:57:08Z",
              "path": "documentation/wiki/Microsoft.Build.Framework.md",
              "diffHunk": "@@ -25,7 +25,7 @@ This will set the property for you and create a drop of MSBuild and dependencies\n \n ## Option 3 - Test or Delay Signing\n For the advanced user, another option here is to delay sign this version of MSBuild with our public key. Since that part of the key is public, it's very easy to extract (using `Sn.exe`) and delay sign. You can get more information on that here:\n- * [Delay Signing](https://blogs.msdn.microsoft.com/shawnfa/2004/03/17/delay-signing/)\n- * [Test Key Signing](http://blogs.msdn.com/b/shawnfa/archive/2005/10/24/484170.aspx)\n+ * [Delay Signing](https://learn.microsoft.com/en-us/archive/blogs/shawnfa/delay-signing)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n * [How to investigate Rebuilding in Visual Studio when nothing has changed](https://learn.microsoft.com/archive/blogs/kirillosenkov/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed)\r\n```",
              "createdAt": "2022-10-20T13:57:38Z",
              "path": "documentation/wiki/Rebuilding-when-nothing-changed.md",
              "diffHunk": "@@ -4,16 +4,16 @@ There is a class of problems with build where when you build twice, it still reb\n \n There are multiple tools to investigate and fix broken incrementality. Start with the blog posts below.\n \n- * [https://blogs.msdn.microsoft.com/kirillosenkov/2014/08/04/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed/](https://blogs.msdn.microsoft.com/kirillosenkov/2014/08/04/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed/)\n- * [https://blogs.msdn.microsoft.com/kirillosenkov/2015/05/12/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs/](https://blogs.msdn.microsoft.com/kirillosenkov/2015/05/12/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs/)\n- * [http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/](http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/)\n- * [MSDN: How to build incrementally](https://msdn.microsoft.com/en-us/library/ms171483.aspx)\n- * [https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2019](https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2019)\n+ * [How to investigate Rebuilding in Visual Studio when nothing has changed](https://learn.microsoft.com/en-us/archive/blogs/kirillosenkov/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n * [MSBuild: unnecessary rebuilds because of generated AssemblyAttributes.cs](https://learn.microsoft.com/archive/blogs/kirillosenkov/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs)\r\n```",
              "createdAt": "2022-10-20T13:57:48Z",
              "path": "documentation/wiki/Rebuilding-when-nothing-changed.md",
              "diffHunk": "@@ -4,16 +4,16 @@ There is a class of problems with build where when you build twice, it still reb\n \n There are multiple tools to investigate and fix broken incrementality. Start with the blog posts below.\n \n- * [https://blogs.msdn.microsoft.com/kirillosenkov/2014/08/04/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed/](https://blogs.msdn.microsoft.com/kirillosenkov/2014/08/04/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed/)\n- * [https://blogs.msdn.microsoft.com/kirillosenkov/2015/05/12/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs/](https://blogs.msdn.microsoft.com/kirillosenkov/2015/05/12/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs/)\n- * [http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/](http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/)\n- * [MSDN: How to build incrementally](https://msdn.microsoft.com/en-us/library/ms171483.aspx)\n- * [https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2019](https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2019)\n+ * [How to investigate Rebuilding in Visual Studio when nothing has changed](https://learn.microsoft.com/en-us/archive/blogs/kirillosenkov/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed)\n+ * [MSBuild: unnecessary rebuilds because of generated AssemblyAttributes.cs](https://learn.microsoft.com/en-us/archive/blogs/kirillosenkov/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n * [How to build incrementally](https://learn.microsoft.com/visualstudio/msbuild/how-to-build-incrementally)\r\n```",
              "createdAt": "2022-10-20T13:58:10Z",
              "path": "documentation/wiki/Rebuilding-when-nothing-changed.md",
              "diffHunk": "@@ -4,16 +4,16 @@ There is a class of problems with build where when you build twice, it still reb\n \n There are multiple tools to investigate and fix broken incrementality. Start with the blog posts below.\n \n- * [https://blogs.msdn.microsoft.com/kirillosenkov/2014/08/04/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed/](https://blogs.msdn.microsoft.com/kirillosenkov/2014/08/04/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed/)\n- * [https://blogs.msdn.microsoft.com/kirillosenkov/2015/05/12/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs/](https://blogs.msdn.microsoft.com/kirillosenkov/2015/05/12/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs/)\n- * [http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/](http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/)\n- * [MSDN: How to build incrementally](https://msdn.microsoft.com/en-us/library/ms171483.aspx)\n- * [https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2019](https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2019)\n+ * [How to investigate Rebuilding in Visual Studio when nothing has changed](https://learn.microsoft.com/en-us/archive/blogs/kirillosenkov/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed)\n+ * [MSBuild: unnecessary rebuilds because of generated AssemblyAttributes.cs](https://learn.microsoft.com/en-us/archive/blogs/kirillosenkov/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs)\n+ * [When Visual Studio keeps rebuilding Projects that have not changed](https://web.archive.org/web/20120321204616/http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/)\n+ * [MSDN: How to build incrementally](https://learn.microsoft.com/en-us/visualstudio/msbuild/how-to-build-incrementally)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n * [Incremental builds](https://learn.microsoft.com/visualstudio/msbuild/incremental-builds)\r\n```",
              "createdAt": "2022-10-20T13:58:21Z",
              "path": "documentation/wiki/Rebuilding-when-nothing-changed.md",
              "diffHunk": "@@ -4,16 +4,16 @@ There is a class of problems with build where when you build twice, it still reb\n \n There are multiple tools to investigate and fix broken incrementality. Start with the blog posts below.\n \n- * [https://blogs.msdn.microsoft.com/kirillosenkov/2014/08/04/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed/](https://blogs.msdn.microsoft.com/kirillosenkov/2014/08/04/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed/)\n- * [https://blogs.msdn.microsoft.com/kirillosenkov/2015/05/12/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs/](https://blogs.msdn.microsoft.com/kirillosenkov/2015/05/12/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs/)\n- * [http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/](http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/)\n- * [MSDN: How to build incrementally](https://msdn.microsoft.com/en-us/library/ms171483.aspx)\n- * [https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2019](https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2019)\n+ * [How to investigate Rebuilding in Visual Studio when nothing has changed](https://learn.microsoft.com/en-us/archive/blogs/kirillosenkov/how-to-investigate-rebuilding-in-visual-studio-when-nothing-has-changed)\n+ * [MSBuild: unnecessary rebuilds because of generated AssemblyAttributes.cs](https://learn.microsoft.com/en-us/archive/blogs/kirillosenkov/msbuild-unnecessary-rebuilds-because-of-generated-assemblyattributes-cs)\n+ * [When Visual Studio keeps rebuilding Projects that have not changed](https://web.archive.org/web/20120321204616/http://www.andreas-reiff.de/2012/02/when-visual-studio-keeps-rebuilding-projects-that-have-not-changed/)\n+ * [MSDN: How to build incrementally](https://learn.microsoft.com/en-us/visualstudio/msbuild/how-to-build-incrementally)\n+ * [Incremental builds](https://learn.microsoft.com/en-us/visualstudio/msbuild/incremental-builds)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nSee the [public documentation](https://learn.microsoft.com/dotnet/framework/app-domains/gac). The GAC is a folder where different installations of VS on the same machine look for assemblies that are commonly used. If an assembly is in the GAC, it will be prioritized over any other assembly.\r\n```",
              "createdAt": "2022-10-20T13:58:42Z",
              "path": "documentation/wiki/UnGAC.md",
              "diffHunk": "@@ -2,7 +2,7 @@\n \n ## What is the GAC?\n \n-See the [public documentation](https://docs.microsoft.com/dotnet/framework/app-domains/gac). The GAC is a folder where different installations of VS on the same machine look for assemblies that are commonly used. If an assembly is in the GAC, it will be prioritized over any other assembly.\n+See the [public documentation](https://learn.microsoft.com/en-us/dotnet/framework/app-domains/gac). The GAC is a folder where different installations of VS on the same machine look for assemblies that are commonly used. If an assembly is in the GAC, it will be prioritized over any other assembly.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}