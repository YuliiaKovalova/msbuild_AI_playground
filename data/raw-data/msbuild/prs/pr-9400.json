{
  "number": 9400,
  "title": "Catch InvalidProjectFileException Fixes #9394",
  "body": "Fixes #9394\r\n\r\n### Context\r\nInvalidProjectFileExceptions thrown by attempting to get the properties or items from an invalid project are not handled specially in XMake's big try/catch, which means they are caught as a generic \"exception\" and thrown as an unexpected internal error when in fact this should be an expected user error. This resolves that problem.\r\n\r\nWhile poking at this, I happened to notice that if an error is logged, the next message is on the same line. I think it's better UI to move it to its own line, so that's the second commit.\r\n\r\n### Changes Made\r\nHandle InvalidProjectFileExceptions as expected/user errors.\r\n\r\nAdd \\n to errors logged by SimpleErrorLogger.\r\n\r\n### Testing\r\nI tried the repro in 9394 and successfully reproduced the problem. I tried with this change, and it instead printed this:\r\n[path]\\invalid.proj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n\r\nin red. That looks good to me.\r\n\r\nTo see what other bugs I might uncover, I also tried adding /t to force it into the post-build version, but that failed in the expected way.\r\n\r\nThen I (briefly) looked for other types of errors that might get thrown at this point. I saw internal errors (but that seems legitimate to be thrown as internal) and logger exceptions, but those are already handled. If anyone is aware of any other kinds of errors that might arise that I should handle, please do let me know.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-11-06T21:46:18Z",
  "updatedAt": "2023-12-18T17:39:45Z",
  "closedAt": "2023-12-18T17:39:45Z",
  "mergedAt": "2023-12-18T17:39:45Z",
  "additions": 34,
  "deletions": 24,
  "changedFiles": 3,
  "headRefName": "invalid-not-internal",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "786a703bcaaecd4be2f927a1ee9794076255d952",
          "message": "Catch InvalidProjectFileException",
          "committedDate": "2023-11-06T21:37:50Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3c060b6ead775d8a46b99482fe876e50681c2bc2",
          "message": "Put errors on own line",
          "committedDate": "2023-11-06T21:39:43Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "30ece66249c93a5fe089a8336e624e0c09831724",
          "message": "Move catch",
          "committedDate": "2023-11-08T18:35:49Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6f3911ffe0b24bc4ef96d8ede0bf4811f560a075",
          "message": "Don't duplicate error",
          "committedDate": "2023-11-08T22:36:50Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "64b38c8ede9428810c8a22f7575fcb5af25b53a5",
          "message": "Update src/MSBuild/XMake.cs\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2023-11-17T20:10:38Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "41611f1129380719a880f52f2273909ab1aa5d81",
          "message": "Add unit test",
          "committedDate": "2023-11-18T00:55:17Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Is this the right place too catch these? IPFE has been intentionally omitted from this location since the start. ",
        "createdAt": "2023-11-08T14:48:11Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Feels wrong to me, too. Can you move the try/catch to the code specific to the new feature?",
        "createdAt": "2023-11-08T14:53:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Is this the right place too catch these? IPFE has been intentionally omitted from this location since the start.\r\n\r\nWhat was the reason it was intentionally omitted? I just put it there because it was easy and seemed like an exception that shouldn't be turned into an internal error in any case.\r\n\r\n> Can you move the try/catch to the code specific to the new feature?\r\n\r\nRegardless of the reason it was intentionally omitted, this is easy enough to do and is probably slightly better coding style. I can do it.",
        "createdAt": "2023-11-08T18:30:24Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> What was the reason it was intentionally omitted? I just put it there because it was easy and seemed like an exception that shouldn't be turned into an internal error in any case.\r\n\r\nPossibly the principle that an exception should be caught at the point in the code that is best placed to do something about it but probably more to do with the fact it would make it easy to overlook specific exceptions coming from unexpected code paths.",
        "createdAt": "2023-11-08T19:26:27Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Think it's worth colorizing, like other errors in this mode?",
              "createdAt": "2023-11-08T20:51:03Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -809,11 +809,19 @@ private static void DebuggerLaunchCheck()\n                     }\n                     else if ((getProperty.Length > 0 || getItem.Length > 0) && (targets is null || targets.Length == 0))\n                     {\n-                        using (ProjectCollection collection = new(globalProperties, loggers, ToolsetDefinitionLocations.Default))\n+                        try\n+                        {\n+                            using (ProjectCollection collection = new(globalProperties, loggers, ToolsetDefinitionLocations.Default))\n+                            {\n+                                Project project = collection.LoadProject(projectFile, globalProperties, toolsVersion);\n+                                exitType = OutputPropertiesAfterEvaluation(getProperty, getItem, project);\n+                                collection.LogBuildFinishedEvent(exitType == ExitType.Success);\n+                            }\n+                        }\n+                        catch (InvalidProjectFileException e)\n                         {\n-                            Project project = collection.LoadProject(projectFile, globalProperties, toolsVersion);\n-                            exitType = OutputPropertiesAfterEvaluation(getProperty, getItem, project);\n-                            collection.LogBuildFinishedEvent(exitType == ExitType.Success);\n+                            Console.Error.WriteLine(e.Message);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is the early-return correct, or should this be\r\n```suggestion\r\n                            exitType = ExitType.BuildError;\r\n```\r\n\r\nLike it is below, and still go through the rest of the flow?",
              "createdAt": "2023-11-16T17:24:17Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -809,11 +809,18 @@ private static void DebuggerLaunchCheck()\n                     }\n                     else if ((getProperty.Length > 0 || getItem.Length > 0) && (targets is null || targets.Length == 0))\n                     {\n-                        using (ProjectCollection collection = new(globalProperties, loggers, ToolsetDefinitionLocations.Default))\n+                        try\n+                        {\n+                            using (ProjectCollection collection = new(globalProperties, loggers, ToolsetDefinitionLocations.Default))\n+                            {\n+                                Project project = collection.LoadProject(projectFile, globalProperties, toolsVersion);\n+                                exitType = OutputPropertiesAfterEvaluation(getProperty, getItem, project);\n+                                collection.LogBuildFinishedEvent(exitType == ExitType.Success);\n+                            }\n+                        }\n+                        catch (InvalidProjectFileException)\n                         {\n-                            Project project = collection.LoadProject(projectFile, globalProperties, toolsVersion);\n-                            exitType = OutputPropertiesAfterEvaluation(getProperty, getItem, project);\n-                            collection.LogBuildFinishedEvent(exitType == ExitType.Success);\n+                            return ExitType.BuildError;",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}