{
  "number": 9142,
  "title": "Update Copy task to log full paths",
  "body": "Fixes #9141\r\n\r\n### Context\r\n\r\n\r\n### Changes Made\r\n\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-08-20T06:51:38Z",
  "updatedAt": "2023-08-22T06:59:01Z",
  "closedAt": "2023-08-22T05:58:27Z",
  "mergedAt": "2023-08-22T05:58:27Z",
  "additions": 1,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "Youssef1313/copy-log",
  "isDraft": false,
  "author": {
    "login": "Youssef1313"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "76b16d3fa9672ff65850528c25cbaa93184a3c8a",
          "message": "Update Copy task to log full paths",
          "committedDate": "2023-08-20T06:51:17Z",
          "author": {
            "name": "Youssef Victor",
            "email": "youssefvictor00@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Is `FileNameFullPath` allways guaranteed to be populated here?\r\nShould we coallesce with `Path.GetFullPath(<fileState>.Name)` or at least `<fileState>.Name`?",
              "createdAt": "2023-08-21T13:01:40Z",
              "path": "src/Tasks/Copy.cs",
              "diffHunk": "@@ -361,7 +361,7 @@ private void LogDiagnostic(string message, params object[] messageArgs)\n         private void TryCopyViaLink(string linkComment, MessageImportance messageImportance, FileState sourceFileState, FileState destinationFileState, out bool linkCreated, ref string errorMessage, Func<string, string, string, bool> createLink)\n         {\n             // Do not log a fake command line as well, as it's superfluous, and also potentially expensive\n-            Log.LogMessage(MessageImportance.Normal, linkComment, sourceFileState.Name, destinationFileState.Name);\n+            Log.LogMessage(MessageImportance.Normal, linkComment, sourceFileState.FileNameFullPath, destinationFileState.FileNameFullPath);",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "I aligned this with the existing code: https://github.com/dotnet/msbuild/blob/0125fc9fb838951c8750135c71336aa1f5e868a9/src/Tasks/Copy.cs#L341\r\n\r\nBut to answer the question, yes it's always guaranteed. The full path is populated in this call:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/9ae833e5fc229f521fc017d0ece4b9353289d699/src/Tasks/Copy.cs#L756\r\n\r\nThe actual copy that will try to utilize the full path happens here: https://github.com/dotnet/msbuild/blob/9ae833e5fc229f521fc017d0ece4b9353289d699/src/Tasks/Copy.cs#L767",
              "createdAt": "2023-08-21T13:11:55Z",
              "path": "src/Tasks/Copy.cs",
              "diffHunk": "@@ -361,7 +361,7 @@ private void LogDiagnostic(string message, params object[] messageArgs)\n         private void TryCopyViaLink(string linkComment, MessageImportance messageImportance, FileState sourceFileState, FileState destinationFileState, out bool linkCreated, ref string errorMessage, Func<string, string, string, bool> createLink)\n         {\n             // Do not log a fake command line as well, as it's superfluous, and also potentially expensive\n-            Log.LogMessage(MessageImportance.Normal, linkComment, sourceFileState.Name, destinationFileState.Name);\n+            Log.LogMessage(MessageImportance.Normal, linkComment, sourceFileState.FileNameFullPath, destinationFileState.FileNameFullPath);",
              "author": {
                "login": "Youssef1313"
              }
            },
            {
              "body": "Perfect - thanks for confirming",
              "createdAt": "2023-08-21T13:36:20Z",
              "path": "src/Tasks/Copy.cs",
              "diffHunk": "@@ -361,7 +361,7 @@ private void LogDiagnostic(string message, params object[] messageArgs)\n         private void TryCopyViaLink(string linkComment, MessageImportance messageImportance, FileState sourceFileState, FileState destinationFileState, out bool linkCreated, ref string errorMessage, Func<string, string, string, bool> createLink)\n         {\n             // Do not log a fake command line as well, as it's superfluous, and also potentially expensive\n-            Log.LogMessage(MessageImportance.Normal, linkComment, sourceFileState.Name, destinationFileState.Name);\n+            Log.LogMessage(MessageImportance.Normal, linkComment, sourceFileState.FileNameFullPath, destinationFileState.FileNameFullPath);",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}