{
  "number": 7814,
  "title": "Reduces allocations in case the tracing is not enabled",
  "body": "Reduces allocations in case the tracing is not enabled\r\n",
  "state": "MERGED",
  "createdAt": "2022-07-12T07:34:49Z",
  "updatedAt": "2022-07-12T09:37:21Z",
  "closedAt": "2022-07-12T09:37:20Z",
  "mergedAt": "2022-07-12T09:37:20Z",
  "additions": 7,
  "deletions": 7,
  "changedFiles": 1,
  "headRefName": "dev/mipavlik/msbuild-server-remove-interpolation",
  "isDraft": false,
  "author": {
    "login": "MichalPavlik"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1a6e62456d4a1afb6cb59ebad239cf8d8a2a5f76",
          "message": "Reduces allocations in case the tracing is not enabled",
          "committedDate": "2022-07-12T07:33:30Z",
          "author": {
            "name": "Michal Pavlik",
            "email": "mipavlik@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4f95479286066444fccbb1383a2c54d0dfbd9dca",
          "message": "Resolving comment",
          "committedDate": "2022-07-12T08:02:52Z",
          "author": {
            "name": "Michal Pavlik",
            "email": "mipavlik@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "By the format string it looks like parameters shall be reversed. Type shall be 1st and exception 2nd",
              "createdAt": "2022-07-12T07:55:58Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -354,11 +354,11 @@ private bool TrySendPacket(Func<INodePacket> packetResolver)\n             {\n                 packet = packetResolver();\n                 WritePacket(_nodeStream, packet);\n-                CommunicationsUtilities.Trace($\"Command packet of type '{packet.Type}' sent...\");\n+                CommunicationsUtilities.Trace(\"Command packet of type '{0}' sent...\", packet.Type);\n             }\n             catch (Exception ex)\n             {\n-                CommunicationsUtilities.Trace($\"Failed to send command packet of type '{packet?.Type.ToString() ?? \"Unknown\"}' to server: {0}\", ex);\n+                CommunicationsUtilities.Trace(\"Failed to send command packet of type '{0}' to server: {1}\", ex, packet?.Type.ToString() ?? \"Unknown\");",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": "Right. An I was checking at least 2x to make sure I'm preserving order :)",
              "createdAt": "2022-07-12T08:01:25Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -354,11 +354,11 @@ private bool TrySendPacket(Func<INodePacket> packetResolver)\n             {\n                 packet = packetResolver();\n                 WritePacket(_nodeStream, packet);\n-                CommunicationsUtilities.Trace($\"Command packet of type '{packet.Type}' sent...\");\n+                CommunicationsUtilities.Trace(\"Command packet of type '{0}' sent...\", packet.Type);\n             }\n             catch (Exception ex)\n             {\n-                CommunicationsUtilities.Trace($\"Failed to send command packet of type '{packet?.Type.ToString() ?? \"Unknown\"}' to server: {0}\", ex);\n+                CommunicationsUtilities.Trace(\"Failed to send command packet of type '{0}' to server: {1}\", ex, packet?.Type.ToString() ?? \"Unknown\");",
              "author": {
                "login": "MichalPavlik"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "A typo: these lines are not equivalent, wrong order of arguments.",
              "createdAt": "2022-07-12T07:58:31Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -354,11 +354,11 @@ private bool TrySendPacket(Func<INodePacket> packetResolver)\n             {\n                 packet = packetResolver();\n                 WritePacket(_nodeStream, packet);\n-                CommunicationsUtilities.Trace($\"Command packet of type '{packet.Type}' sent...\");\n+                CommunicationsUtilities.Trace(\"Command packet of type '{0}' sent...\", packet.Type);\n             }\n             catch (Exception ex)\n             {\n-                CommunicationsUtilities.Trace($\"Failed to send command packet of type '{packet?.Type.ToString() ?? \"Unknown\"}' to server: {0}\", ex);\n+                CommunicationsUtilities.Trace(\"Failed to send command packet of type '{0}' to server: {1}\", ex, packet?.Type.ToString() ?? \"Unknown\");",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "rokonec already mentioned this in his review.",
              "createdAt": "2022-07-12T08:03:04Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -354,11 +354,11 @@ private bool TrySendPacket(Func<INodePacket> packetResolver)\n             {\n                 packet = packetResolver();\n                 WritePacket(_nodeStream, packet);\n-                CommunicationsUtilities.Trace($\"Command packet of type '{packet.Type}' sent...\");\n+                CommunicationsUtilities.Trace(\"Command packet of type '{0}' sent...\", packet.Type);\n             }\n             catch (Exception ex)\n             {\n-                CommunicationsUtilities.Trace($\"Failed to send command packet of type '{packet?.Type.ToString() ?? \"Unknown\"}' to server: {0}\", ex);\n+                CommunicationsUtilities.Trace(\"Failed to send command packet of type '{0}' to server: {1}\", ex, packet?.Type.ToString() ?? \"Unknown\");",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Looks like a duplicate :)",
              "createdAt": "2022-07-12T08:03:27Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -354,11 +354,11 @@ private bool TrySendPacket(Func<INodePacket> packetResolver)\n             {\n                 packet = packetResolver();\n                 WritePacket(_nodeStream, packet);\n-                CommunicationsUtilities.Trace($\"Command packet of type '{packet.Type}' sent...\");\n+                CommunicationsUtilities.Trace(\"Command packet of type '{0}' sent...\", packet.Type);\n             }\n             catch (Exception ex)\n             {\n-                CommunicationsUtilities.Trace($\"Failed to send command packet of type '{packet?.Type.ToString() ?? \"Unknown\"}' to server: {0}\", ex);\n+                CommunicationsUtilities.Trace(\"Failed to send command packet of type '{0}' to server: {1}\", ex, packet?.Type.ToString() ?? \"Unknown\");",
              "author": {
                "login": "MichalPavlik"
              }
            },
            {
              "body": "yeah, we did simultaneous reviews :)",
              "createdAt": "2022-07-12T08:06:01Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -354,11 +354,11 @@ private bool TrySendPacket(Func<INodePacket> packetResolver)\n             {\n                 packet = packetResolver();\n                 WritePacket(_nodeStream, packet);\n-                CommunicationsUtilities.Trace($\"Command packet of type '{packet.Type}' sent...\");\n+                CommunicationsUtilities.Trace(\"Command packet of type '{0}' sent...\", packet.Type);\n             }\n             catch (Exception ex)\n             {\n-                CommunicationsUtilities.Trace($\"Failed to send command packet of type '{packet?.Type.ToString() ?? \"Unknown\"}' to server: {0}\", ex);\n+                CommunicationsUtilities.Trace(\"Failed to send command packet of type '{0}' to server: {1}\", ex, packet?.Type.ToString() ?? \"Unknown\");",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      }
    ]
  }
}