{
  "number": 7323,
  "title": "Provide option to fail ClickOnce publish if RFC3161 timestamping fails.",
  "body": "\u2026 timestamping fails during ClickOnce manifest signing\r\n\r\nFixes # 7164\r\n\r\n### Context\r\nClickOnce manifest signing will obtain a RFC3161 timestamp if a timestamp server URL has been specified. If the RFC3161 timestamping fails, the code falls back to calling a legacy non-RFC3161 timestamp API. Customers do not have any option to disable this behavior if they want to enforce RFC3161 timestamping.\r\n\r\n### Changes Made\r\nAdd a new property DisallowMansignTimestampFallback that will not allow the fallback behavior. The default is false which means fallback will be allowed. If the property is set to true either through the csproj or msbuild CLI, the fallback API will not be called and instead the build will throw an error when RFC3161 timestamping fails.\r\n\r\n### Testing\r\nOngoing.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2022-01-22T03:01:36Z",
  "updatedAt": "2022-02-01T18:20:10Z",
  "closedAt": "2022-02-01T18:20:10Z",
  "mergedAt": "2022-02-01T18:20:10Z",
  "additions": 80,
  "deletions": 32,
  "changedFiles": 7,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "sujitnayak"
  },
  "milestone": {
    "title": "VS 17.2"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "9916d035fd9d06b8a49037bed877a1d9f0bef100",
          "message": "Add property to disallow fallback to legacy timestamping when RFC3161 timestamping fails during ClickOnce manifest signing",
          "committedDate": "2022-02-01T02:13:15Z",
          "author": {
            "name": "Sujit Nayak",
            "email": "sujitn@exchange.microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "These should only be in Unshipped for now, since we haven't shipped them yet.",
              "createdAt": "2022-01-24T15:22:03Z",
              "path": "src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt",
              "diffHunk": "@@ -1890,6 +1892,7 @@ static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.Sign\n static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path) -> void\n static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion) -> void\n static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion, string targetFrameworkIdentifier) -> void\n+static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion, string targetFrameworkIdentifier, bool disallowMansignTimestampFallback) -> void",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Fixed.",
              "createdAt": "2022-01-25T19:22:30Z",
              "path": "src/Tasks/PublicAPI/netstandard/PublicAPI.Shipped.txt",
              "diffHunk": "@@ -1890,6 +1892,7 @@ static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.Sign\n static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path) -> void\n static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion) -> void\n static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion, string targetFrameworkIdentifier) -> void\n+static Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(string certThumbprint, System.Uri timestampUrl, string path, string targetFrameworkVersion, string targetFrameworkIdentifier, bool disallowMansignTimestampFallback) -> void",
              "author": {
                "login": "sujitnayak"
              }
            }
          ]
        }
      }
    ]
  }
}