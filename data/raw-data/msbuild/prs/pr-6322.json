{
  "number": 6322,
  "title": "Add ARM32 & ARM64 As AvailablePlatforms",
  "body": "Fixes #5951\r\n\r\n### Context\r\nSummary: .NET 5 is adding support for Windows ARM64. Visual Studio .NET Core projects should allow you target ARM64 in addition to x86/x64/arm32.\r\n\r\nThis is planned to be based off of the `AvailablePlatforms` property.\r\n\r\n### Changes Made\r\nIn Microsoft.Common.CurrentVersion.targets, added conditional propertygroups based on TargetFramework to add ARM32/64 as a platform.\r\n\r\n### Testing\r\nNeeds https://github.com/dotnet/project-system/issues/7081 to account for `AvailablePlatforms` so we can see it in the Platform Target dropdown under project properties.\r\n\r\n### Notes\r\nWhat we're trying to apply ARM to:\r\n| Version | Windows | Linux | macOS\r\n| --- | --- | --- | ---\r\n| [.NET Core 2.1](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1-supported-os.md) | x86, x64 | x86, x64, arm32 | x64\r\n| [.NET Core 3.1](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1-supported-os.md) | x86, x64, arm32 | x86, x64, arm32, arm64 | x64\r\n| [.NET 5](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0-supported-os.md) | x86, x64, arm64 (console only) | x86, x64, arm32, arm64 | x64",
  "state": "CLOSED",
  "createdAt": "2021-04-02T23:18:34Z",
  "updatedAt": "2021-04-08T23:52:37Z",
  "closedAt": "2021-04-08T23:52:37Z",
  "mergedAt": null,
  "additions": 15,
  "deletions": 0,
  "changedFiles": 1,
  "headRefName": "arm64-support",
  "isDraft": true,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c3e810d4bc1ae20c664bc053ad0fb6229bb0457b",
          "message": "Initial attempt",
          "committedDate": "2021-04-01T22:25:16Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@dsplaisted Understood, is there an ideal file to place this logic into? Microsoft.Net.Sdk.targets maybe?",
        "createdAt": "2021-04-08T23:09:49Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Closing in favor of https://github.com/dotnet/sdk/pull/16802",
        "createdAt": "2021-04-08T23:52:37Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this strictly check for net5.0, or is anything greater than/compatible with net5.0 fine? /cc: @tommcdon ",
              "createdAt": "2021-04-02T23:21:59Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -62,6 +62,21 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <AvailablePlatforms Condition=\"'$(VisualStudioVersion)' != '' and '$(VisualStudioVersion)' > '10.0'\">Any CPU,x86,x64</AvailablePlatforms>\n   </PropertyGroup>\n \n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netcoreapp2.1'\">\n+    <AvailablePlatforms Condition=\"$([MSBuild]::IsOSPlatform('linux'))\">$(AvailablePlatforms),ARM32</AvailablePlatforms>\n+  </PropertyGroup>\n+\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.1'\">\n+    <AvailablePlatforms Condition=\"$([MSBuild]::IsOSPlatform('Windows'))\">$(AvailablePlatforms),ARM32</AvailablePlatforms>\n+    <AvailablePlatforms Condition=\"$([MSBuild]::IsOSPlatform('linux'))\">$(AvailablePlatforms),ARM32,ARM64</AvailablePlatforms>\n+  </PropertyGroup>\n+\n+  <PropertyGroup Condition=\"$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net5.0'))\">",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "From original issue:\r\n\r\n>> @dsplaisted how do we go about checking if we're specifically a console app?\r\n> \r\n>> The only reference to a console app check I've found is line 5647 on Microsoft.Common.CurrentVersion.Targets:\r\n>> `<Error Condition=\"'$(OutputType)'!='winexe' and '$(OutputType)'!='exe' and '$(OutputType)'!='appcontainerexe'\" Text=\"Publish is only valid for 'Windows Application' or 'Console Application' project types.\"/>`\r\n\r\n> Non-console apps would have a FrameworkReference to the WindowsDesktop or AspNetCore framework.  There wouldn't be a RuntimePack for the ARM RuntimeIdentifiers that aren't supported, so you'd get an error building a self-contained app targeting ARM.  I don't think we have a block that would prevent you from building a shared framework app using an ARM RuntimeIdentifier.",
              "createdAt": "2021-04-02T23:22:21Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -62,6 +62,21 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <AvailablePlatforms Condition=\"'$(VisualStudioVersion)' != '' and '$(VisualStudioVersion)' > '10.0'\">Any CPU,x86,x64</AvailablePlatforms>\n   </PropertyGroup>\n \n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netcoreapp2.1'\">\n+    <AvailablePlatforms Condition=\"$([MSBuild]::IsOSPlatform('linux'))\">$(AvailablePlatforms),ARM32</AvailablePlatforms>\n+  </PropertyGroup>\n+\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.1'\">\n+    <AvailablePlatforms Condition=\"$([MSBuild]::IsOSPlatform('Windows'))\">$(AvailablePlatforms),ARM32</AvailablePlatforms>\n+    <AvailablePlatforms Condition=\"$([MSBuild]::IsOSPlatform('linux'))\">$(AvailablePlatforms),ARM32,ARM64</AvailablePlatforms>\n+  </PropertyGroup>\n+\n+  <PropertyGroup Condition=\"$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net5.0'))\">\n+    <!-- Need to check console and windows here. -->",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      }
    ]
  }
}