{
  "number": 8753,
  "title": "Improve allocations in evaluations by using ImmutableArray here and there",
  "body": "Related to #8673\r\n\r\n### Context\r\nWhen analyzing traces from VS Orchard evaluation I have noticed few places which are easy to optimize by using `ImmutableArray` instead of `ImmutableList`.\r\n`ImmutableArray` is almost always better in patters `loop {mutate by builder}; ToImmutable` since it is struct, allocates less, and have faster enumerator. \r\n\r\n### Changes Made\r\nThere are many places where using `ImmutableArray` instead of `ImmutableList` would render better performance. I however limit changes only on places which sticks out from memory traces as non-negligable.\r\n\r\n### Testing\r\nLocal. PR gate.\r\n\r\n### Notes\r\nOverall gain will be small, in percent's of overall allocations, but given relatively simple and safe changes, I think it is good tradeoff.",
  "state": "MERGED",
  "createdAt": "2023-05-12T13:05:28Z",
  "updatedAt": "2023-05-17T09:06:57Z",
  "closedAt": "2023-05-17T07:18:03Z",
  "mergedAt": "2023-05-17T07:18:02Z",
  "additions": 17,
  "deletions": 17,
  "changedFiles": 4,
  "headRefName": "rokonec/immutable-perf2",
  "isDraft": false,
  "author": {
    "login": "rokonec"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c71a8a9545e53c3e74094dc61bb4b2e1b5393fd4",
          "message": "Using immutable array here and there",
          "committedDate": "2023-05-15T15:10:47Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Oh, that would mean boxing. Never mind \ud83d\ude00",
        "createdAt": "2023-05-12T14:16:58Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Yeah, I remember a bunch of \"concretize these types to avoid boxing\" PRs a few years ago and was about to jump in :)",
        "createdAt": "2023-05-12T14:19:01Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}