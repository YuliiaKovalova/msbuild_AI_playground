{
  "number": 6278,
  "title": "Support runtime-specific SDK resolver test hook",
  "body": "We have the `MSBUILDADDITIONALSDKRESOLVERSFOLDER` environment variable as a test hook to specify where SDK Resolvers should be loaded from.  However, SDK resolvers need to be multi-targeted between .NET Framework and .NET (Core).  So setting this environment variable to where you have a .NET Framework SDK resolver means that `dotnet` builds will fail, and setting it to a .NET resolver means `msbuild` builds will fail.\r\n\r\nSo this adds runtime-specific test hook environment variables: `MSBUILDADDITIONALSDKRESOLVERSFOLDER_NETFRAMEWORK` and `MSBUILDADDITIONALSDKRESOLVERSFOLDER_NET`.",
  "state": "MERGED",
  "createdAt": "2021-03-18T22:45:24Z",
  "updatedAt": "2021-03-23T09:13:05Z",
  "closedAt": "2021-03-23T09:13:05Z",
  "mergedAt": "2021-03-23T09:13:05Z",
  "additions": 9,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "runtime-specific-resolver-override",
  "isDraft": false,
  "author": {
    "login": "dsplaisted"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "0a38c7e0e47fc46dcbb131e9e08180da22aa3216",
          "message": "Support runtime-specific SDK resolver test hook",
          "committedDate": "2021-03-18T22:41:34Z",
          "author": {
            "name": "Daniel Plaisted",
            "email": "daplaist@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there a third option I'm not aware of?",
              "createdAt": "2021-03-19T12:44:06Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs",
              "diffHunk": "@@ -22,7 +22,15 @@ internal class SdkResolverLoader\n \n         private readonly string IncludeDefaultResolver = Environment.GetEnvironmentVariable(\"MSBUILDINCLUDEDEFAULTSDKRESOLVER\");\n \n-        private readonly string AdditionalResolversFolder = Environment.GetEnvironmentVariable(\"MSBUILDADDITIONALSDKRESOLVERSFOLDER\");\n+        //  Test hook for loading SDK Resolvers from additional folders.  Support runtime-specific test hook environment variables,\n+        //  as an SDK resolver built for .NET Framework probably won't work on .NET Core, and vice versa.\n+        private readonly string AdditionalResolversFolder = Environment.GetEnvironmentVariable(\n+#if NETFRAMEWORK\n+            \"MSBUILDADDITIONALSDKRESOLVERSFOLDER_NETFRAMEWORK\"\n+#elif NET",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "The code will fail to build if a third option is added. I believe it's intentional and more future proof than `#if` / `#else`.",
              "createdAt": "2021-03-19T13:18:47Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs",
              "diffHunk": "@@ -22,7 +22,15 @@ internal class SdkResolverLoader\n \n         private readonly string IncludeDefaultResolver = Environment.GetEnvironmentVariable(\"MSBUILDINCLUDEDEFAULTSDKRESOLVER\");\n \n-        private readonly string AdditionalResolversFolder = Environment.GetEnvironmentVariable(\"MSBUILDADDITIONALSDKRESOLVERSFOLDER\");\n+        //  Test hook for loading SDK Resolvers from additional folders.  Support runtime-specific test hook environment variables,\n+        //  as an SDK resolver built for .NET Framework probably won't work on .NET Core, and vice versa.\n+        private readonly string AdditionalResolversFolder = Environment.GetEnvironmentVariable(\n+#if NETFRAMEWORK\n+            \"MSBUILDADDITIONALSDKRESOLVERSFOLDER_NETFRAMEWORK\"\n+#elif NET",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}