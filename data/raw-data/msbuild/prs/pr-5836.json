{
  "number": 5836,
  "title": "Update to Arcade 5.0 and .NET 5.0",
  "body": "Fixes https://github.com/dotnet/msbuild/issues/5515\r\n\r\nRan `darc update-dependencies --source-repo arcade --channel \".NET 5 Eng\"` as opposed to \".NET Eng - Latest\" as latest was on 6.0.\r\n\r\nValidation:\r\n\r\n- [x] Local builds\r\n- [x] CI builds\r\n- [x] Official builds\r\n- [x] `/exp` Builds\r\n- [x] Double-check signing and optprof\r\n- [x] Insertion to VS\r\n  - [x] SignCheck\r\n  - [x] RPS\r\n- [x] Install VS\r\n- [x] Test SDK insertion: https://github.com/dotnet/sdk/pull/15217\r\n- [x] Ensure policheck, credscan, and other automated checks are enabled (Tracking here: https://github.com/dotnet/msbuild/issues/6021)\r\n- [x] (after the fact) Darc flows\r\n\r\nExtras\r\n- [x] Handle these ref assemblies https://github.com/dotnet/msbuild/issues/5678#issuecomment-741879413 ([leaving this alone for now](https://teams.microsoft.com/l/message/19:3212bf033f4c4b5198643a04fa1048fa@thread.skype/1610403566746?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47&groupId=4ba7372f-2799-4677-89f0-7a1aaea3706c&parentMessageId=1609795700481&teamName=.NET%20Developer%20Experience&channelName=MSBuild&createdTime=1610403566746))\r\n\r\n### Questions\r\nIs there any reason we wouldn't want to jump straight to 6.0?\r\n- 6.0 is not released yet.",
  "state": "MERGED",
  "createdAt": "2020-10-26T23:15:28Z",
  "updatedAt": "2021-02-10T01:06:13Z",
  "closedAt": "2021-01-20T00:02:05Z",
  "mergedAt": "2021-01-20T00:02:04Z",
  "additions": 5618,
  "deletions": 2478,
  "changedFiles": 113,
  "headRefName": "arcade-update",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "fa19e25363aec71cc29542b28e9bd34afff6a08e",
          "message": "Initial arcade update",
          "committedDate": "2021-01-13T01:00:02Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a08fe7a04caa9c5e7c5b775c720479b0972764c2",
          "message": "set global.json back to 3.1.100",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dc86d606856fff2ef23ada11f2c22d675d506723",
          "message": "Fix roslyn folder to look for netcoreapp3.1",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f4d410ff901289c03cbc03596706799ddf1bcf0d",
          "message": "Add empty constructor?",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "16ddaa0b6ad5dec0bebd08ba4696178541d39585",
          "message": "Revert \"Fix roslyn folder to look for netcoreapp2.1\".\n\nThis reverts commit bcfa960104a941d112431cf4d66e065dee66d366. Context\nfrom Rainer: Arcade has an implicit version for\nmicrosoft.net.compilers.toolset. It's ancient in arcade 1.0, newer in\n5.0. We used to depend on the implicit version, so when I moved arcade\n  it changed. Rainer recently made it explicit to the older version,\n  thus we need to look back at netcoreapp2.1",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a59a108c96322ba03f187832d9198c46e1ae47a8",
          "message": "Update to dotnet 5.0.100-rc.2.20479.15",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cf6123502d4e29c5c2e97bb90dd4bc3c73dd140b",
          "message": "net5.0 was released already!",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "08e070d62a4a8b5a24f06e4266f4d786b2f89783",
          "message": "Update versions.props to 5.0.100, how do we tie them together?",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6755fdd76c5ef9d53d0f9f71d01c46bee84494c1",
          "message": "update dir.build.props and msft.build.csproj to use net5.0 targetframeworks",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a47579ddd540d203905cbb71658daee381b2b454",
          "message": "Update Directory.BeforeCommon.targets to account for net5.0",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "65892d578667d4a88ed3e45f65713f1bd828763e",
          "message": "WIP: Set replace netcoreapp2.1 with net5.0",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "02d7cae23482165b99570f59f707786d1d6f86bc",
          "message": "Update (OS) to (OSEnvironment), nowarn on SYSLIB0011 (binaryformatter)",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bf12a8e94beb1158009acd26b8b0ca5a04cedb2a",
          "message": "Short out TPI",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bd0254760b03348ddb72f2e02ff522b4a1df8a58",
          "message": "Disambiguate order of operations\n\nBetween an `as` and string concatenations.",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "310e53b1f80fa53c7318bdc6df4d04c90e0179e3",
          "message": "Initialize value passed to TranslateDotNet",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b6867fd92a10710c54cb79112e646ce9d1d0e0b2",
          "message": "Relax nullable in COWDictionary deserialization\n\nSince we control both sides of the serialization, just ! it.",
          "committedDate": "2021-01-13T01:02:25Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e7b81b4153e7d239538b793c8c1312bc8291bbaa",
          "message": "Assume assembly path isn't a root",
          "committedDate": "2021-01-13T01:02:26Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "556bf537dde8e8210846dd938ee5aa6e18703dc9",
          "message": "IsOS check for PipeDrain\n\nThis throws PNSE on non-Windows so just don't call it there.",
          "committedDate": "2021-01-13T01:02:26Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c51b45978737c5592e38af2009a04f120940ba3f",
          "message": "Assume AssemblyName has a Name",
          "committedDate": "2021-01-13T01:02:26Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1c17b5ff46c61fd5b6e23fc5bcb17e2c7d80573f",
          "message": "Get rid of OsEnvironment",
          "committedDate": "2021-01-13T01:02:26Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e23a284ee47b32601753ec7eb22730ce0e5516c1",
          "message": "fixup! IsOS check for PipeDrain",
          "committedDate": "2021-01-13T01:02:26Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "35adbc5c1d1f68576ce0ebfb7c33a0de4a5aea26",
          "message": "Roslyn update from PR #5920.",
          "committedDate": "2021-01-13T01:04:11Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "966b4e4ffd467cb8c3f07bf8902bc42abb3f482f",
          "message": "Update arcade scripts to net5.0",
          "committedDate": "2021-01-13T01:04:20Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3ac093aaa65ca51ddb40b2c06aded7c1b8b32af3",
          "message": "MSBuild.csproj no longer uses apphost. This fixes an issue where certain tests would find MSBuild.exe AND MSBuild.dll when they should have only found msbuild.dll",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "26809de014c61f7a4105ad00af9a4ffad9db40a1",
          "message": "Continue skipping over ValidateAssemblyLoadContext in net5.0",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "57b9faca56b5784cb5fa3622e06de1d9289d061a",
          "message": "Infinity is not a valid double",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "47b749a8ca3696c2edd11f2a954c20224a6b57b2",
          "message": "Restore AssemblyLoadContext name\n\nThe with-a-name ctor wasn't available in .NET Core 2.1 but now is, so\nuse it and restore the test.",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a3340384e2bf298d131b340ba6a09035906aadb5",
          "message": "look for netcoreapp2.1 arcade binaries",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "18fa14fbaecab410507194214f02660935e7ac99",
          "message": "Revert to looking for arcade netcoreapp2.1 folder",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "195c471b8467c65525a9c0f452e5082d6ee4cd84",
          "message": "Update Microsoft.Extensions.DependencyModel and Runtime.CompilerServices.Unsafe to 5.0.0",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9ba9e5f574edfea054c11a4782e0bab1dfeafb30",
          "message": "Only import M.E.DependencyModel 5.0.0 when on net core",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8579df733dda6b0f9a57996635659dbf2bd0f654",
          "message": "Add special check for mono on mac to import M.E.DependencyModel 5.0.0, short-circuiting the nonexistent IsTargetFrameworkCompatible intrinsic function on mono",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3d1406467eff587b7833796934e47e8e2b2b2ad3",
          "message": "remove osx check, keep monobuild check only",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d1a83ca24ac19ba90af829a5651d1bff9ecfb6d0",
          "message": "Update arcade to fix signing issues",
          "committedDate": "2021-01-13T01:04:21Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c4297a0444921ec5b0bcda763016823535ecd4ba",
          "message": "Remove stale comment, add comment explaining UseAppHost false",
          "committedDate": "2021-01-13T03:01:29Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5d626861ceb9e9c94d33a6414207e2c15f802420",
          "message": "Update dotnetcliversion to 5.0.102",
          "committedDate": "2021-01-13T22:21:17Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "60ddd86ebfcc4c0f410fe220580181a1c3a87559",
          "message": "Also update global.json and add a comment notifying future devs to update the version of DotNetCliVersion in versions.props AND global.json",
          "committedDate": "2021-01-13T22:40:09Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "35fa03165f41533fad23144713e1dc13555dbe91",
          "message": "Simplify NetCoreBuild check. Use istargetframeworkcompatible with netcoreapp1.0 OR if TargetFramework starts with netstandard",
          "committedDate": "2021-01-13T23:06:02Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "36880b64c01e001d577be6d516cec836ad8e4b2c",
          "message": "Skip netcore check if on mono",
          "committedDate": "2021-01-13T23:21:19Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9eafc9cc09fbcf3138b94e5b96f16ca50a349e82",
          "message": "Catch-all condition for 'core-flavored' builds in the UpdateMSBuildDepsFile target",
          "committedDate": "2021-01-13T23:31:38Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "72ef461cd31b1b67e5506c19e89a7b67c138c094",
          "message": "Fix condition",
          "committedDate": "2021-01-13T23:39:23Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "57fde7f01438987db8328e67889816db10285195",
          "message": "Prevent mono builds from seeing IsTargetFrameworkCompatible intrinsic function (that doesn't exist in mono builds)",
          "committedDate": "2021-01-13T23:47:26Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e80a52bb8199db00a02134d32345e828a93c9b03",
          "message": "Merge branch 'master' into arcade-update",
          "committedDate": "2021-01-15T18:45:57Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Note to self: Update `DotNetCliVersion` to `5.0.100`",
        "createdAt": "2020-10-29T19:02:04Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Running the CI script locally results in:\r\n\r\n### 3.1.100\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException : The imported project \"D:\\a\\1\\s\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\netcoreapp2.1\\Roslyn\\Microsoft.CSharp.Core.targets\" was not found. Confirm that the expression in the Import declaration \"D:\\a\\1\\s\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\netcoreapp2.1\\Roslyn\\Microsoft.CSharp.Core.targets\" is correct, and that the file exists on disk.  D:\\a\\1\\s\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\netcoreapp2.1\\Microsoft.CSharp.CurrentVersion.targets\r\n```\r\n\r\n### 5.0.100-rc.2.20479.15\r\n```\r\nNETSDK1005: Assets file 'C:\\src\\git\\msbuild\\artifacts\\obj\\Microsoft.Build.UnGAC\\project.assets\r\n.json' doesn't have a target for 'net45'. Ensure that restore has run and that you have included 'net45' in the TargetF\r\nrameworks for your project. [C:\\src\\git\\msbuild\\src\\Package\\Microsoft.Build.UnGAC\\Microsoft.Build.UnGAC.csproj]\r\n```\r\nSame issues for `netcoreapp2.1` and `netstandard2.0` for every project.",
        "createdAt": "2020-10-29T23:43:06Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "This is very curious...\r\n```\r\nD:\\a\\1\\s\\.dotnet\\sdk\\5.0.100\\MSBuild.dll /nologo -maxcpucount /m -verbosity:m /v:minimal /bl:D:\\a\\1\\s\\artifacts\\log\\Debug\\ToolsetRestore.binlog /clp:Summary /clp:ErrorsOnly;NoSummary /nr:False /p:ContinuousIntegrationBuild=True /p:TreatWarningsAsErrors=true /p:__ToolsetLocationOutputFile=D:\\a\\1\\s\\artifacts\\toolset\\5.0.0-beta.20510.1.txt /t:__WriteToolsetLocation /warnaserror D:\\a\\1\\s\\artifacts\\toolset\\restore.proj\r\nMSBUILD : error MSB1021: Cannot create an instance of the logger. The given assembly name or codebase was invalid. (0x80131047)\r\nSwitch: D:\\a\\1\\s\\.packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20510.1\\tools\\net5.0\\Microsoft.DotNet.Arcade.Sdk.dll\r\n\r\n```\r\n\r\nNote to self: My local directory has `C:\\src\\git\\msbuild\\.packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20510.1\\tools\\netcoreapp2.1` not 5.0. ~~Presumably some other item in `eng\\` has `netcoreapp2.1` associated with it?~~ Now I'm thinking a project is set up incorrectly.\r\n\r\nOr did me migrating to `net5.0` default to looking for the arcade sdk, which doesn't target `net5.0` yet? (I'm not sure if that's even true)",
        "createdAt": "2020-12-10T01:51:49Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I can't tell if this is \"so close, yet so far,\" but only full framework is failing on `System.Text.Json` not being `5.0.0`. Unfortunately, it looks like updating that updated System.Buffers, which I can't seem to get a successful binding redirect on?\r\n\r\nThe error is this:\r\n```\r\nUnhandled Exception: System.IO.FileLoadException: Could not load file or assembly 'System.Text.Json, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, TextWriter targetsWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler, Boolean interactive, Boolean isolateProjects, Boolean graphBuild, Boolean lowPriority, String[] inputResultsCaches, String outputResultsCache) in /_/src/MSBuild/XMake.cs:line 1311\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String commandLine) in /_/src/MSBuild/XMake.cs:line 820\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main() in /_/src/MSBuild/XMake.cs:line 223\r\n```\r\nPrevious error:\r\n```\r\n##[error]stage1\\bin\\bootstrap\\net5.0\\MSBuild\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(195,5): error MSB4018: (NETCORE_ENGINEERING_TELEMETRY=Build) The \"GenerateDepsFile\" task failed unexpectedly.\r\nThis is an unhandled exception from a task -- PLEASE OPEN A BUG AGAINST THE TASK OWNER.\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.Extensions.DependencyModel, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nFile name: 'Microsoft.Extensions.DependencyModel, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.WriteDepsFile(String depsFilePath)\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in /_/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs:line 577\r\n   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) in /_/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs:line 809\r\n  Microsoft.Build.Utilities -> D:\\a\\1\\s\\artifacts\\bin\\Microsoft.Build.Utilities\\Debug\\net472\\Microsoft.Build.Utilities.Core.dll\r\n\r\n```\r\n\r\nUpdating `Microsoft.Extensions.DependencyModel` has a dependency on `System.Text.Json v5.0.0`, which has a dependency on `System.Buffers v4.0.3`, but when updating that I got errors for downgrading it. Maybe I should do a binding redirect from 0.0.0->4.0.x to 4.0.x to prevent future versions from downgrading.",
        "createdAt": "2020-12-19T02:03:40Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Can you temporarily change only the .NET Core version of S.T.Json? And keep the net472 version as is?\n",
        "createdAt": "2020-12-21T15:36:21Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald strange, I added this in packages.props (keeping the original package reference that sets s.t.json to 4.7.0 some lines above):\r\n\r\n```\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == '.NETCoreApp'\">\r\n    <PackageReference Update=\"System.Text.Json\" Version=\"5.0.0\" />\r\n  </ItemGroup>\r\n```\r\n\r\nand I get the same error\r\n```\r\nUnhandled Exception: System.IO.FileLoadException: Could not load file or assembly 'System.Text.Json, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, TextWriter targetsWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler, Boolean interactive, Boolean isolateProjects, Boolean graphBuild, Boolean lowPriority, String[] inputResultsCaches, String outputResultsCache) in /_/src/MSBuild/XMake.cs:line 1311\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String commandLine) in /_/src/MSBuild/XMake.cs:line 820\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main() in /_/src/MSBuild/XMake.cs:line 223\r\n```",
        "createdAt": "2020-12-21T20:49:51Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Only importing `Microsoft.Extensions.DependencyModel` on non-full-framework builds solved our `Windows Full` build issue. I also added a special case for osx on mono since that was the last build leg that was failing. I think I need to loosen that condition to simply `monobuild == true or istargetframeworkcompatible($(TargetFramework), 'netcoreapp2.1')`.",
        "createdAt": "2020-12-22T02:54:17Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "And on this glorious night the old gods and the new smiled down on Ben for the first time and said \"Tests passed!\" :shipit: ",
        "createdAt": "2020-12-22T04:17:48Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "[Signing is failing](https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=4323092&view=logs&j=0a6c679f-72be-5867-422e-acb741a068a3&t=d8e44ddf-8ea2-5518-25e7-4300471a271a)\r\n\r\n```\r\nD:\\a\\1\\s\\.tools\\msbuild\\16.8.0-preview3\\tools\\MSBuild\\Current\\Bin\\MSBuild.exe /nologo /bl:D:\\a\\1\\s\\artifacts\\log\\Debug\\SigningValidation.binlog /clp:Summary /logger:D:\\a\\1\\s\\.packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20510.1\\tools\\net472\\Microsoft.DotNet.Arcade.Sdk.dll /m /nr:False /p:ContinuousIntegrationBuild=True /p:TreatWarningsAsErrors=true /p:Configuration=Debug /p:RepoRoot=D:\\a\\1\\s /p:BaseIntermediateOutputPath=D:\\a\\1\\s\\artifacts\\toolset\\SigningValidation\\ /p:PackageBasePath=D:\\a\\1\\a/PackageArtifacts /p:SignCheckExclusionsFile=D:\\a\\1\\s/eng/SignCheckExclusionsFile.txt /t:Execute /v:minimal /v:minimal /warnaserror D:\\a\\1\\s\\.packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20510.1\\tools\\SdkTasks\\SigningValidation.proj\r\nStarting execution of SignCheck.\r\n\r\nResults\r\n\r\n[File] Microsoft.Build.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Conversion.Core.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Engine.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Framework.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Localization.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Runtime.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Tasks.Core.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Utilities.Core.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] MsBuild.Engine.Corext.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] VS.ExternalAPIs.MSBuild.16.9.0-preview-20622-01.nupkg, Signed: False\r\nSigning issues found\r\n[File] Microsoft.Build.Localization.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] MsBuild.Engine.Corext.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] VS.ExternalAPIs.MSBuild.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Conversion.Core.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Engine.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Framework.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Runtime.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Tasks.Core.16.9.0-preview-20622-01.nupkg, Signed: False\r\n[File] Microsoft.Build.Utilities.Core.16.9.0-preview-20622-01.nupkg, Signed: False\r\n\r\nTotal Time: 00:00:09.5868296\r\nTotal Files: 682, Signed: 240, Unsigned: 20, Skipped: 422, Excluded: 0, Skipped & Excluded: 0\r\nD:\\a\\1\\s\\.packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20510.1\\tools\\SdkTasks\\SigningValidation.proj(48,5): error MSB4181: The \"SignCheckTask\" task returned false but did not log an error.\r\n##[error].packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20510.1\\tools\\SdkTasks\\SigningValidation.proj(48,5): error MSB4181: (NETCORE_ENGINEERING_TELEMETRY=Build) The \"SignCheckTask\" task returned false but did not log an error.\r\n\r\nBuild FAILED.\r\n\r\nD:\\a\\1\\s\\.packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20510.1\\tools\\SdkTasks\\SigningValidation.proj(48,5): error MSB4181: The \"SignCheckTask\" task returned false but did not log an error.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\n~~I'll take a look at what's changed in SigningValidation.proj. I'm not sure if we need to add something to our projects to allow them to be signed or not~~ We have binlogs. I'll start there.",
        "createdAt": "2020-12-22T17:29:50Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2021-01-04T21:04:01Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2021-01-04T21:04:10Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "Looks like pipeline builds succeed. We get to the VS PR stage and RPS passes. The only failure at the VS PR stage is symbolcheck:\r\n```\r\n1262129\r\nSymbolCheck: Package Microsoft.Build,version=16.9.0.2105501,chip=neutral,language=neutral failed\r\nActive\r\n1262130\r\nSymbolCheck: Package VS.ExternalAPIs.MSBuild failed\r\nActive\r\n1262131\r\nSymbolCheck: Package Microsoft.Build.UnGAC,version=16.9.0.2105501,chip=neutral,language=neutral failed\r\nActive\r\nYour SymbolCheck build produced 3 new bug(s).\r\n1262129\r\nSymbolCheck: Package Microsoft.Build,version=16.9.0.2105501,chip=neutral,language=neutral failed\r\nActive\r\n1262130\r\nSymbolCheck: Package VS.ExternalAPIs.MSBuild failed\r\nActive\r\n1262131\r\nSymbolCheck: Package Microsoft.Build.UnGAC,version=16.9.0.2105501,chip=neutral,language=neutral failed\r\nActive\r\n```",
        "createdAt": "2021-01-05T21:45:52Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "The symchk bugs should have a repro command line. Can you run that?",
        "createdAt": "2021-01-05T21:49:10Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This merge is blocked pending https://github.com/dotnet/msbuild/pull/6031",
        "createdAt": "2021-01-15T18:45:01Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Should probably be .101 (or .102) now.",
              "createdAt": "2021-01-11T23:04:45Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -36,8 +36,8 @@\n   </PropertyGroup>\n   <!-- Toolset Dependencies -->\n   <PropertyGroup>\n-    <DotNetCliVersion>3.1.100</DotNetCliVersion>\n-    <MicrosoftNetCompilersToolsetVersion>3.3.1-beta3-final</MicrosoftNetCompilersToolsetVersion>\n+    <DotNetCliVersion>5.0.100</DotNetCliVersion>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Where can I go to verify this? I did a brief search in the sdk and arcade repos",
              "createdAt": "2021-01-13T02:56:11Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -36,8 +36,8 @@\n   </PropertyGroup>\n   <!-- Toolset Dependencies -->\n   <PropertyGroup>\n-    <DotNetCliVersion>3.1.100</DotNetCliVersion>\n-    <MicrosoftNetCompilersToolsetVersion>3.3.1-beta3-final</MicrosoftNetCompilersToolsetVersion>\n+    <DotNetCliVersion>5.0.100</DotNetCliVersion>",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "https://dotnet.microsoft.com/download/dotnet/5.0 says 102 is current latest",
              "createdAt": "2021-01-13T21:52:32Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -36,8 +36,8 @@\n   </PropertyGroup>\n   <!-- Toolset Dependencies -->\n   <PropertyGroup>\n-    <DotNetCliVersion>3.1.100</DotNetCliVersion>\n-    <MicrosoftNetCompilersToolsetVersion>3.3.1-beta3-final</MicrosoftNetCompilersToolsetVersion>\n+    <DotNetCliVersion>5.0.100</DotNetCliVersion>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "\ud83e\udd26\u200d\u2642\ufe0f \ud83d\udc4d",
              "createdAt": "2021-01-13T22:18:16Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -36,8 +36,8 @@\n   </PropertyGroup>\n   <!-- Toolset Dependencies -->\n   <PropertyGroup>\n-    <DotNetCliVersion>3.1.100</DotNetCliVersion>\n-    <MicrosoftNetCompilersToolsetVersion>3.3.1-beta3-final</MicrosoftNetCompilersToolsetVersion>\n+    <DotNetCliVersion>5.0.100</DotNetCliVersion>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Delete stale comment",
              "createdAt": "2021-01-11T23:15:47Z",
              "path": "src/Build/Microsoft.Build.csproj",
              "diffHunk": "@@ -6,8 +6,8 @@\n   <PropertyGroup>\n     <!-- Node reuse requires an API new to .NET Core 2.1 not yet available\n          in .NETStandard. -->",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Nit\r\n\r\n```suggestion\r\n```",
              "createdAt": "2021-01-11T23:16:10Z",
              "path": "src/Build/Microsoft.Build.csproj",
              "diffHunk": "@@ -34,7 +34,9 @@\n     <PackageReference Include=\"System.Collections.Immutable\" />\n     <PackageReference Include=\"System.Threading.Tasks.Dataflow\" />\n     <PackageReference Include=\"System.Memory\" />\n+    <PackageReference Include=\"System.Runtime.CompilerServices.Unsafe\"/>\n     <PackageReference Include=\"System.Text.Json\" />\n+    ",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Replace with is-compatible-with-netcoreapp1.0 property function?",
              "createdAt": "2021-01-11T23:17:38Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -108,10 +108,10 @@\n     <DefineConstants Condition=\"'$(MonoBuild)'=='true'\">$(DefineConstants);MONO</DefineConstants>\n \n     <!-- Useful for tests that need OS information as a constant -->\n-    <DefineConstants Condition=\"'$(OsEnvironment)'=='windows'\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n+    <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore'))\">\n+  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore')) or $(TargetFramework.StartsWith('net5'))\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Are all netcoreapp1.0+ target frameworks backwards compatible that far?",
              "createdAt": "2021-01-13T03:11:08Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -108,10 +108,10 @@\n     <DefineConstants Condition=\"'$(MonoBuild)'=='true'\">$(DefineConstants);MONO</DefineConstants>\n \n     <!-- Useful for tests that need OS information as a constant -->\n-    <DefineConstants Condition=\"'$(OsEnvironment)'=='windows'\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n+    <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore'))\">\n+  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore')) or $(TargetFramework.StartsWith('net5'))\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "theoretically yes",
              "createdAt": "2021-01-13T21:52:07Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -108,10 +108,10 @@\n     <DefineConstants Condition=\"'$(MonoBuild)'=='true'\">$(DefineConstants);MONO</DefineConstants>\n \n     <!-- Useful for tests that need OS information as a constant -->\n-    <DefineConstants Condition=\"'$(OsEnvironment)'=='windows'\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n+    <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore'))\">\n+  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore')) or $(TargetFramework.StartsWith('net5'))\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Well this is strange. Changing this to: `$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp1.0'))` results in a compilation error:\r\n```\r\nC:\\src\\git\\msbuild\\src\\Tasks\\AssemblyDependency\\AssemblyInformation.cs(34,26): error CS0246: The type or namespace name\r\n 'IMetaDataDispenser' could not be found (are you missing a using directive or an assembly reference?) [C:\\src\\git\\msbu\r\nild\\src\\Tasks\\Microsoft.Build.Tasks.csproj]\r\nC:\\src\\git\\msbuild\\src\\Tasks\\AssemblyDependency\\AssemblyInformation.cs(35,26): error CS0246: The type or namespace name\r\n 'IMetaDataAssemblyImport' could not be found (are you missing a using directive or an assembly reference?)\r\nand others\r\n```\r\nThe failing project is Microsoft.Build.Tasks.csproj targeting netstandard2.0. This condition must have been false for netstandard2.0 previously? \r\n\r\nHere's a sample of the failing code:\r\n```c#\r\n#if !FEATURE_ASSEMBLYLOADCONTEXT\r\n            if (NativeMethodsShared.IsWindows)\r\n            {\r\n                // Create the metadata dispenser and open scope on the source file.\r\n                _metadataDispenser = (IMetaDataDispenser)new CorMetaDataDispenser();\r\n                _assemblyImport = (IMetaDataAssemblyImport)_metadataDispenser.OpenScope(sourceFile, 0, ref s_importerGuid);\r\n            }\r\n            else\r\n            {\r\n                _assembly = Assembly.ReflectionOnlyLoadFrom(sourceFile);\r\n            }\r\n#endif\r\n\r\n```\r\n\r\nMy first assumption would be that the netstandard2.0 project didn't have FEATURE_ASSEMBLYLOADCONTEXT defined, and now it is and doesn't see those types.\r\n- This is even more confusing considering the previous check was checking if the TargetFramework started with `netstandard`, so it would've fallen into this case anyway?\r\n\r\nSo it seems like there are two paths here:\r\n- Get the type to show up in the netstandard2.0 target (which doesn't seem right to me considering it apparently wasn't visible before),\r\n- Compare the two binlogs and see what's different between the current condition and the previous.\r\n- - Ex: See if the previous condition had FEATURE_ASSEMBLYLOADCONTEXT defined.",
              "createdAt": "2021-01-13T22:56:02Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -108,10 +108,10 @@\n     <DefineConstants Condition=\"'$(MonoBuild)'=='true'\">$(DefineConstants);MONO</DefineConstants>\n \n     <!-- Useful for tests that need OS information as a constant -->\n-    <DefineConstants Condition=\"'$(OsEnvironment)'=='windows'\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n+    <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore'))\">\n+  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore')) or $(TargetFramework.StartsWith('net5'))\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I think I see the problem. `netcoreapp1.0` is not compatible with `netstandard2.0`, so I think I need to change the condition to \"is target framework compatible with netcoreapp1.0 OR does the target framework start with netstandard\"",
              "createdAt": "2021-01-13T23:01:41Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -108,10 +108,10 @@\n     <DefineConstants Condition=\"'$(MonoBuild)'=='true'\">$(DefineConstants);MONO</DefineConstants>\n \n     <!-- Useful for tests that need OS information as a constant -->\n-    <DefineConstants Condition=\"'$(OsEnvironment)'=='windows'\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n+    <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore'))\">\n+  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore')) or $(TargetFramework.StartsWith('net5'))\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I figured that by seeing what constants were defined in a build with the old condition vs the new condition.\r\n```\r\nWorking (Old condition)\r\n----\r\nTRACE\r\nMICROSOFT_BUILD_TASKS\r\nSTANDALONEBUILD\r\nFEATURE_DEBUG_LAUNCH\r\nTEST_ISWINDOWS\r\nRUNTIME_TYPE_NETCORE\r\nFEATURE_ASSEMBLYLOADCONTEXT\r\nFEATURE_PROCESSSTARTINFO_ENVIRONMENT\r\nFEATURE_RUNTIMEINFORMATION\r\nUSE_MSBUILD_DLL_EXTN\r\nWORKAROUND_COREFX_19110\r\nDEBUG\r\nNETSTANDARD\r\nNETSTANDARD2_0\r\n\r\nNot Working (new condition)\r\n----\r\nTRACE\r\nMICROSOFT_BUILD_TASKS\r\nSTANDALONEBUILD\r\nFEATURE_DEBUG_LAUNCH\r\nTEST_ISWINDOWS\r\nDEBUG\r\nNETSTANDARD\r\nNETSTANDARD2_0\r\n\r\n```",
              "createdAt": "2021-01-13T23:02:21Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -108,10 +108,10 @@\n     <DefineConstants Condition=\"'$(MonoBuild)'=='true'\">$(DefineConstants);MONO</DefineConstants>\n \n     <!-- Useful for tests that need OS information as a constant -->\n-    <DefineConstants Condition=\"'$(OsEnvironment)'=='windows'\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n+    <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore'))\">\n+  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore')) or $(TargetFramework.StartsWith('net5'))\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "And that fixed it \ud83d\udc4d",
              "createdAt": "2021-01-13T23:04:35Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -108,10 +108,10 @@\n     <DefineConstants Condition=\"'$(MonoBuild)'=='true'\">$(DefineConstants);MONO</DefineConstants>\n \n     <!-- Useful for tests that need OS information as a constant -->\n-    <DefineConstants Condition=\"'$(OsEnvironment)'=='windows'\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n+    <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore'))\">\n+  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore')) or $(TargetFramework.StartsWith('net5'))\">",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Compat property functions (and next target condition)",
              "createdAt": "2021-01-11T23:19:07Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I tried using `\"$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net5.0')) or $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netstandard2.0'))` and hit issues with net472:\r\n```\r\nC:\\src\\git\\msbuild\\src\\MSBuild.Bootstrap\\MSBuild.Bootstrap.csproj(49,5): error MSB3030: Could not copy the file \"C:\\src\\g\r\nit\\msbuild\\artifacts\\bin\\MSBuild.Bootstrap\\Debug\\net472\\MSBuild.Bootstrap.deps.json\" because it was not found.\r\n```\r\n\r\nShould I be using a different intrinsic function here?",
              "createdAt": "2021-01-13T03:18:38Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Ah, unfortunate. That's right but `net472` _is_ compatible with `netstandard2.0` so it's a bit more complicated. Can it be just compatible with `netcoreapp2.1` to catch our core flavors? We're not building netstandard anything anymore right/",
              "createdAt": "2021-01-13T21:51:52Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "As I just figured out in the other thread in this PR, yeah there are still projects building netstandard2.0.  Looks like it's quite a few:\r\n\r\n![image](https://user-images.githubusercontent.com/4691428/104521252-5fd06f80-55b1-11eb-91bb-be5d4fd4a23a.png)\r\n\r\n",
              "createdAt": "2021-01-13T23:08:20Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I don't think there's a good reason to not retarget that. But it doesn't have to be in this PR. Reasons to do it: use new APIs etc in tasks, which is a good thing.",
              "createdAt": "2021-01-13T23:10:10Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I quickly updated my comment after noticing my query was looking for the one project. There are many that target netstandard2.0. Seems like this should be tracked and figured out in a different issue.",
              "createdAt": "2021-01-13T23:14:35Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Sounds like a plan but let's prioritize that soon after this so we don't forget.",
              "createdAt": "2021-01-13T23:17:10Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Just to clarify, you want to update them to `netstandard2.1`?",
              "createdAt": "2021-01-13T23:26:14Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Tracking here: https://github.com/dotnet/msbuild/issues/6032\r\n\r\nThe new condition definitely doesn't look any cleaner than before, but it's more future-proof.",
              "createdAt": "2021-01-13T23:40:40Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -45,10 +45,10 @@\n   </ItemGroup>\n \n   <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->\n-  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"UpdateMSBuildDepsFile\" AfterTargets=\"Build\" Condition=\"'$(TargetFramework)' == 'net5.0' or '$(TargetFramework)' == 'netstandard2.0'\">",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Comment why please",
              "createdAt": "2021-01-11T23:19:25Z",
              "path": "src/MSBuild/MSBuild.csproj",
              "diffHunk": "@@ -7,6 +7,7 @@\n     <OutputType>Exe</OutputType>\n     <TargetFrameworks>$(RuntimeOutputTargetFrameworks)</TargetFrameworks>\n     <PlatformTarget>$(RuntimeOutputPlatformTarget)</PlatformTarget>\n+    <UseAppHost>false</UseAppHost>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "This suggestion justifies good commit messages, I'm thanking my past self right now \ud83d\ude01",
              "createdAt": "2021-01-13T02:59:09Z",
              "path": "src/MSBuild/MSBuild.csproj",
              "diffHunk": "@@ -7,6 +7,7 @@\n     <OutputType>Exe</OutputType>\n     <TargetFrameworks>$(RuntimeOutputTargetFrameworks)</TargetFrameworks>\n     <PlatformTarget>$(RuntimeOutputPlatformTarget)</PlatformTarget>\n+    <UseAppHost>false</UseAppHost>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      }
    ]
  }
}