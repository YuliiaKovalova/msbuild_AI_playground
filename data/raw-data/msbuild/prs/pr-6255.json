{
  "number": 6255,
  "title": "[DO NOT REVIEW] Prototype RAR as service using out of procese infrastructure",
  "body": "Prototype! Used only for internal code discussions. Will be thrown away eventually.\r\n",
  "state": "CLOSED",
  "createdAt": "2021-03-15T13:27:45Z",
  "updatedAt": "2021-07-26T08:44:50Z",
  "closedAt": "2021-05-14T08:45:50Z",
  "mergedAt": null,
  "additions": 4457,
  "deletions": 938,
  "changedFiles": 167,
  "headRefName": "rokonec/exp-rar-out-of-proc",
  "isDraft": true,
  "author": {
    "login": "rokonec"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "bfdbb2745b2b6166db1faf1588bc93e2a3ccd507",
          "message": "Prototype RAR as service using out of procese infrastructure",
          "committedDate": "2021-03-15T13:19:51Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0e4b0c243e197d451d2d24b7de050249acc81cd3",
          "message": "Revert broken code cleanup (#6245)",
          "committedDate": "2021-03-15T15:50:47Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7a5b5e0c18ee7b07acd2de27bfee5ee79fa3a023",
          "message": "Provide more information with BadImageReferenceException (#6240)",
          "committedDate": "2021-03-15T15:51:03Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8c7ccdf4932e416454a672907d018df1c8fe60cb",
          "message": "Pre cache (#6107)",
          "committedDate": "2021-03-15T17:12:12Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "13522d2466ae1634177e2a6a40fefaedff95139c",
          "message": "Add main as a CI & pipeline trigger (#6258)",
          "committedDate": "2021-03-15T19:21:47Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b38d9ac9f037b5de58ca2d91030d827cc8486071",
          "message": "Minor fixes",
          "committedDate": "2021-03-16T15:08:41Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9a5c89b3876883f272c8f5c6cc892947896e3f3c",
          "message": "rename file",
          "committedDate": "2021-03-16T15:11:47Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c98a50ff7629171e129ab05020d6df65ddfe371a",
          "message": "Change references from master to main (#6259)",
          "committedDate": "2021-03-16T19:18:39Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "17677364d656a98ce4c6eff73b49eddf24f0fd72",
          "message": "Verify that a key is in the warningsAsErrors dictionary before using it (#6269)",
          "committedDate": "2021-03-16T20:19:10Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "97463e3cdb3ce4ccf9638eb68fd9f82646ca6a11",
          "message": "Update dependencies from https://github.com/dotnet/arcade build 20210310.3 (#6268)\n\nMicrosoft.DotNet.Arcade.Sdk\r\n From Version 5.0.0-beta.21112.3 -> To Version 5.0.0-beta.21160.3\r\n\r\nCo-authored-by: dotnet-maestro[bot] <dotnet-maestro[bot]@users.noreply.github.com>",
          "committedDate": "2021-03-19T09:21:43Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "42748379+dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8d34753d265721735a678033c3ce48033dbc96ee",
          "message": "Support runtime-specific SDK resolver test hook (#6278)\n\n - adding runtime-specific test hook environment variables: MSBUILDADDITIONALSDKRESOLVERSFOLDER_NETFRAMEWORK and MSBUILDADDITIONALSDKRESOLVERSFOLDER_NET",
          "committedDate": "2021-03-23T09:13:05Z",
          "author": {
            "name": "Daniel Plaisted",
            "email": "dsplaisted@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a4e26e43ef805e9d9fd8fa6086545812915d4f59",
          "message": "Exp/serializable projectevaluation (#6262)\n\nSerializable project evaluation related changes",
          "committedDate": "2021-03-23T15:40:47Z",
          "author": {
            "name": "arunura",
            "email": "23365691+jackcartman@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bf0b0c52351d2034daec62b74c49f67def7fe739",
          "message": "Basic doc on msbuild and the gac (#6173)",
          "committedDate": "2021-03-23T16:32:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "afd0b62109300f3b088875b5a65d1a5bfd786e15",
          "message": "Remove unused GetAllGlobs override in ProjectLink (#6293)\n\nFixes #\r\nPerf ddrits regression in ProjectServices implementation of this.\r\n\r\nContext\r\nThis GetAllGlobs override is unused anymore since CPS has been changed to use the GetAllGlobs(evaluationContext)\r\n\r\nChanges Made\r\nRemove newly added GetAllGlobs override.",
          "committedDate": "2021-03-25T09:47:21Z",
          "author": {
            "name": "Arun Chander",
            "email": "arkalyan@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1629921c2b537d4452ff238981bd18519b8f5230",
          "message": "Introduce cross-process resource management for tasks (#5859)\n\nAdd RequestCores and ReleaseCores APIs to IBuildEngine9.\r\n\r\nThese APIs can advise a task that wishes to do work with its own internal parallelism. The task can request as many (abstracted) CPU cores as it desires, and the MSBuild engine will keep track of how many have been requested and prevent the machine from being completely overloaded.\r\n\r\nSince this is advisory only, existing tasks will be unaffected. The Visual C++ tasks plan to opt into this.\r\n\r\nSee resource-management.md for more design and implementation details.\r\n\r\nFixes #74",
          "committedDate": "2021-03-30T15:25:47Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "62f3a5e2e37f20bd5026d17c351f4d243af5facf",
          "message": "Fix loading of NuGet.Frameworks.dll on .NET Framework. (#6301)\n\nFixes #6289\r\n\r\nContext\r\n#6126 changes the way that NuGet.Frameworks.dll is loaded to be used by NuGetFrameworkWrapper from a call to LoadFile to a call to LoadFrom. The path passed in to the Load*` call is the same in both cases, but the behavior is different when running on .NET Framework.\r\n\r\nOn .NET Framework, calling LoadFile results in IJW loading rules being followed, and a different copy of NuGet.Frameworks.dll\r\nthan the one requested being loaded. It also appears to match the one loaded into the LOAD context. Calling LoadFrom results in the specified assembly being loaded, but it doesn't match the copy of the assembly loaded into the LOAD context. Thus, it remains in the LOADFROM context instead of being promoted to the LOAD context.\r\n\r\nLater on, there is a collision between code from the two instances of NuGet.Frameworks.dll that are loaded into the LOAD context and the LOADFROM context, and this is where the MissingMethodException is thrown.\r\n\r\nNote, this does not happen on the .NET Core bootstrap build because the loader behavior is significantly simpler.\r\n\r\nChanges Made\r\nChoose the Load* API based on the target framework at build time. On .NET Core, use LoadFrom and on .NET Framework, use LoadFile. This type of precedent already exists in MSBuild where there is different load behavior for .NET Framework and .NET Core.",
          "committedDate": "2021-03-31T06:47:58Z",
          "author": {
            "name": "Brian Robbins",
            "email": "brianrob@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9052065ddec1c4b458b5aeefbeb55a6ad4704074",
          "message": "Loc update (#6286)\n\nCo-authored-by: Cristiano Suzuki <crsuzuki@microsoft.com>",
          "committedDate": "2021-03-31T06:48:18Z",
          "author": {
            "name": "Cristiano Suzuki",
            "email": "cristianosuzuki77@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c2e41ab9706d0263baa17fa012f5184f33a3ae97",
          "message": "Remove ContainsKey where relevant (#6282)\n\nReduce dictionary accesses by merging ContainsKey calls with subsequent gets or removes.",
          "committedDate": "2021-03-31T06:48:57Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7a892102cf23b45f8b19fe4e45a91bb9bfb0cc1b",
          "message": "Throw BadImageFormatException when missing PE metadata (#6270)\n\nFixes #6200\r\n\r\nContext\r\nInvalidOperationException was being thrown by AssemblyInformation.CorePopulateMetadata, causing the ResolveAssemblyReference task to fail rather than disregarding the file.\r\n\r\nChanges Made\r\nI copied the code from AssemblyNameExtension to ensure there is metadata present before getting a metadata reader",
          "committedDate": "2021-03-31T06:49:40Z",
          "author": {
            "name": "Monica S",
            "email": "FiniteReality@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "80f316e906ff0ccb995f4f9942d65e16601794b2",
          "message": "Properly Consider WarningsAsMessages In TaskLoggingHelper's `HasLoggedErrors` (#6308)\n\nFixes #6306\r\n\r\nContext\r\n#6174 didn't properly account for warningsaserrors and warningsasmessages together. This PR makes each taskhost aware of both WarningsAsMessages and WarningsAsErrors when telling tasks whether or not an error should be treated as a warning.\r\n\r\nChanges Made\r\nLoggingService and TaskLoggingContext expose a GetWarningsAsMessages to each taskhost for them to store.\r\nNo changes to IBE8 API\r\nTaskhosts first check if a warning would be treated as a message when telling tasks whether or not a warning should be treated as a warning.",
          "committedDate": "2021-03-31T16:57:18Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "073022eb44eb1664eb1c35055b4f5ed377f09706",
          "message": "updates (#6314)\n\nCo-authored-by: Cristiano Suzuki <crsuzuki@microsoft.com>",
          "committedDate": "2021-03-31T22:55:10Z",
          "author": {
            "name": "Cristiano Suzuki",
            "email": "cristianosuzuki77@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0b84a96359f71286afe7adcb747c4b3a793e3773",
          "message": "Cleaning a optimizing.\n\n- mutex protection to multi run\n- compute pipename from hash, do not enumerate processes\n- pipename argument for TaskHost process",
          "committedDate": "2021-04-01T13:32:22Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "933f175276c0714f53fdafb0382a3194ca6e8c96",
          "message": "Merge branch 'main' into rokonec/exp-rar-out-of-proc\n\n# Conflicts:\n#\tsrc/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs\n#\tsrc/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs",
          "committedDate": "2021-04-01T14:01:50Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Wrong link?",
              "createdAt": "2021-03-16T13:44:22Z",
              "path": "src/MSBuildTaskHost/MSBuildTaskHost.csproj",
              "diffHunk": "@@ -45,6 +45,9 @@\n     <Compile Include=\"..\\Framework\\BuildEngineResult.cs\">\n       <Link>BuildEngineResult.cs</Link>\n     </Compile>\n+    <Compile Include=\"..\\Framework\\TaskExecutionContext.cs\">\n+      <Link>BuildEngineResult.cs</Link>",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "link fixed, still how come it compiles...?",
              "createdAt": "2021-03-16T15:07:30Z",
              "path": "src/MSBuildTaskHost/MSBuildTaskHost.csproj",
              "diffHunk": "@@ -45,6 +45,9 @@\n     <Compile Include=\"..\\Framework\\BuildEngineResult.cs\">\n       <Link>BuildEngineResult.cs</Link>\n     </Compile>\n+    <Compile Include=\"..\\Framework\\TaskExecutionContext.cs\">\n+      <Link>BuildEngineResult.cs</Link>",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Extra space.",
              "createdAt": "2021-03-16T14:11:18Z",
              "path": "src/MSBuild/MSBuild.csproj",
              "diffHunk": "@@ -187,6 +187,8 @@\n     </Compile>\n     <Compile Include=\"NodeEndpointOutOfProcTaskHost.cs\" />\n     <Compile Include=\"LogMessagePacket.cs\" />\n+    <Compile Include=\"NodeEndpointRarTaskHost.cs\" />\n+    <Compile Include=\"RarServiceTaskHostNode .cs\" />",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "interesting... i haven't modified iot by hand + how come it compiles?",
              "createdAt": "2021-03-16T15:06:47Z",
              "path": "src/MSBuild/MSBuild.csproj",
              "diffHunk": "@@ -187,6 +187,8 @@\n     </Compile>\n     <Compile Include=\"NodeEndpointOutOfProcTaskHost.cs\" />\n     <Compile Include=\"LogMessagePacket.cs\" />\n+    <Compile Include=\"NodeEndpointRarTaskHost.cs\" />\n+    <Compile Include=\"RarServiceTaskHostNode .cs\" />",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": "fixed anyway\r\n",
              "createdAt": "2021-03-16T15:07:02Z",
              "path": "src/MSBuild/MSBuild.csproj",
              "diffHunk": "@@ -187,6 +187,8 @@\n     </Compile>\n     <Compile Include=\"NodeEndpointOutOfProcTaskHost.cs\" />\n     <Compile Include=\"LogMessagePacket.cs\" />\n+    <Compile Include=\"NodeEndpointRarTaskHost.cs\" />\n+    <Compile Include=\"RarServiceTaskHostNode .cs\" />",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": ">how come it compiles?\r\n\r\nthat's the question I asked myself too..",
              "createdAt": "2021-03-16T15:08:41Z",
              "path": "src/MSBuild/MSBuild.csproj",
              "diffHunk": "@@ -187,6 +187,8 @@\n     </Compile>\n     <Compile Include=\"NodeEndpointOutOfProcTaskHost.cs\" />\n     <Compile Include=\"LogMessagePacket.cs\" />\n+    <Compile Include=\"NodeEndpointRarTaskHost.cs\" />\n+    <Compile Include=\"RarServiceTaskHostNode .cs\" />",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      }
    ]
  }
}