{
  "number": 6569,
  "title": "Ensure project cache initialization happens only once",
  "body": "Based on #6568. Review that one first. First commit of this PR is [Don't launch debugger window for all tests](https://github.com/dotnet/msbuild/commit/529e2ae13d060adb50f7cf5304e6f781d8666941).\r\n\r\n### Context\r\nTurns out the VS workaround was initializing the plugin on every project query, thus crashing the cache.\r\n\r\n### Changes Made\r\nInitialization is happening only once now.\r\n`ProjectCacheService` is now asserting that it's always in expected states.\r\n\r\n### Testing\r\nUnit tests.\r\n\r\n### Notes\r\nDoes not affect non project cache code paths so should be no risk for 16.11.",
  "state": "MERGED",
  "createdAt": "2021-06-16T01:18:03Z",
  "updatedAt": "2021-06-30T16:51:48Z",
  "closedAt": "2021-06-30T16:51:48Z",
  "mergedAt": "2021-06-30T16:51:48Z",
  "additions": 177,
  "deletions": 69,
  "changedFiles": 9,
  "headRefName": "assertCacheStates",
  "isDraft": false,
  "author": {
    "login": "cdmihai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "493edc412ced81a17f05be5219a0f02a47423bcd",
          "message": "Don't launch debugger window for all tests",
          "committedDate": "2021-06-25T20:52:11Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2880f0aeb934dd94fb1d5011e39720d658d15a95",
          "message": "Convert static InitializePlugin into non-static BeginBuildAsync\n\nTo allow asserting service state transition",
          "committedDate": "2021-06-25T20:52:11Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d2b31c29945094a8044441745a9090bc196b348d",
          "message": "Assert state transitions in ProjectCacheService",
          "committedDate": "2021-06-25T20:52:11Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ad5f2fa5ff858b3a63f02a15c2ce6a6024e3d30e",
          "message": "Only initialize once for the VS workaround",
          "committedDate": "2021-06-25T20:52:11Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5e2f4db492eafbeb8d7969680b34b7f36ba60e64",
          "message": "Bravely set DoNotLaunchDebugger only once for all tests",
          "committedDate": "2021-06-25T20:52:11Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a365fbf2315b22bd46155a60063bdb02fec1831c",
          "message": "Simplify branching",
          "committedDate": "2021-06-25T20:52:11Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this go in `MSBuildTestAssemblyFixture` instead so _all_ tests get it?",
              "createdAt": "2021-06-18T14:54:21Z",
              "path": "src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs",
              "diffHunk": "@@ -31,6 +31,7 @@ public ProjectCacheTests(ITestOutputHelper output)\n         {\n             _output = output;\n             _env = TestEnvironment.Create(output);\n+            _env.DoNotLaunchDebugger();",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I think I'd find this easier to read with a nested if: `if (_projectCacheDescriptor.VsWorkaround)`, then inside `if CompareExchange`.",
              "createdAt": "2021-06-18T15:19:20Z",
              "path": "src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs",
              "diffHunk": "@@ -224,11 +248,28 @@ async Task<CacheResult> ProcessCacheRequest(CacheRequest request)\n                     }\n                 }\n \n-                if (_projectCacheDescriptor.VsWorkaround)\n+                // TODO: remove after we change VS to set the cache descriptor via build parameters.\n+                // VS workaround needs to wait until the first project is evaluated to extract enough information to initialize the plugin.\n+                // No cache request can progress until late initialization is complete.\n+                if (_projectCacheDescriptor.VsWorkaround &&\n+                    Interlocked.CompareExchange(\n+                        ref LateInitializationForVSWorkaroundCompleted,\n+                        new TaskCompletionSource<bool>(),\n+                        null) is null)\n                 {\n-                    // TODO: remove after we change VS to set the cache descriptor via build parameters.\n                     await LateInitializePluginForVsWorkaround(request);\n+                    LateInitializationForVSWorkaroundCompleted.SetResult(true);\n                 }\n+                else if (_projectCacheDescriptor.VsWorkaround)\n+                {\n+                    // Can't be null. If the thread got here it means another thread initialized the completion source.\n+                    await LateInitializationForVSWorkaroundCompleted!.Task;\n+                }",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}