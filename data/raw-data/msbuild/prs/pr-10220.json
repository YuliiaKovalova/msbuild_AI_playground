{
  "number": 10220,
  "title": "Use documented item group in FindInvalidProjectReferences",
  "body": "### Context\r\n\r\nToday, `GetReferenceTargetPlatformMonikers` and `FindInvalidProjectReferences` use `TargetPathWithTargetPlatformMoniker` instead of the documented `_ProjectReferenceTargetPlatformMonikers` item group for the project reference gathering/validation.\r\n\r\nThis causes a violation in the ProjectReference protocol, leading to multiple items being returned from `GetTargetPath` and the default (`Build`) target. Returning multiple items from these targets can cause usability problems and unexpected behaviors.\r\n\r\nBelow is a simplified use case of the one that hit this bug:\r\n\r\nA/A.csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n      <PropertyGroup>\r\n          <TargetFramework>net8.0</TargetFramework>\r\n      </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nB/B.csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n   <PropertyGroup>\r\n       <FindInvalidProjectReferences>true</FindInvalidProjectReferences>\r\n       <TargetFramework>net8.0-windows10.0.22621.0</TargetFramework>\r\n       <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>\r\n    </PropertyGroup>\r\n   <ItemGroup>\r\n       <ProjectReference Include=\"../A/A.csproj\" />\r\n   </ItemGroup>\r\n</Project>\r\n```\r\n\r\nC/C.csproj\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n   <PropertyGroup>\r\n       <OutputType>Exe</OutputType>\r\n       <TargetFramework>net8.0-windows10.0.22621.0</TargetFramework>\r\n       <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>\r\n    </PropertyGroup>\r\n   <ItemGroup>\r\n       <ProjectReference Include=\"../A/A.csproj\" Aliases=\"A\" />\r\n       <ProjectReference Include=\"../B/B.csproj\" Aliases=\"B\" />\r\n   </ItemGroup>\r\n</Project>\r\n```\r\n\r\nC/Program.cs\r\n```csharp\r\nextern alias A; // Csc errors here with \"alias not found\"\r\n                       // because the reference to B.csproj added items for A.dll and B.dll with the B alias metadata\r\n                       // which overrode the item returned by A.csproj, the A.dll with the A alias metadata\r\nConsole.WriteLine(\"Hello world\");\r\n```\r\n\r\n\r\n### Changes Made\r\n\r\nUse the documented item group instead of reusing `TargetPathWithTargetPlatformMoniker`.\r\n\r\n### Testing\r\n\r\nLocal hacking. I'd like to add an end-to-end test, but I'm not sure where is the best place to do so here.\r\n\r\n### Notes\r\n\r\nThis was discovered in a project that uses the Microsoft.WindowsAppSdk, which sets `FindInvalidProjectReferences` to `true` in some scenarios.\r\n\r\nThe user was able to work around this bug by changing the order of the `ProjectReference` items in their equivalent of `C.csproj`.",
  "state": "MERGED",
  "createdAt": "2024-06-10T23:57:10Z",
  "updatedAt": "2024-08-05T12:49:20Z",
  "closedAt": "2024-08-05T12:49:17Z",
  "mergedAt": "2024-08-05T12:49:17Z",
  "additions": 2,
  "deletions": 2,
  "changedFiles": 1,
  "headRefName": "find-invalid-project-references",
  "isDraft": false,
  "author": {
    "login": "jkoritzinsky"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "MichalPavlik"
      }
    ]
  },
  "labels": [
    "Area: Common Targets"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "b46ea2512f80202f31bafc0612a98fc11c00fb87",
          "message": "Use documented item group in FindInvalidProjectReferences\n\nUse the documented item group instead of reusing `TargetPathWithTargetPlatformMoniker`.",
          "committedDate": "2024-06-10T23:41:48Z",
          "author": {
            "name": "Jeremy Koritzinsky",
            "email": "jkoritzinsky@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "For context, I hit this in https://github.com/Sergio0694/ComputeSharp/pull/813, and it completely broke my build due to multiple projects failing due to this issue (in one case due to missing/incorrect reference aliases, in another case because `ReferenceOutputAssembly` was being ignored). Special thanks to Jeremy for investigating this and both figuring out a workaround as well as creating this PR \ud83d\ude42",
        "createdAt": "2024-06-12T04:58:05Z",
        "author": {
          "login": "Sergio0694"
        }
      },
      {
        "body": "> I assume that this could be a simple copy-paste mistake since `git blame` seems to stop at `v15`!\r\n\r\nInternal link to change from (exactly!) 11 years ago: https://vstfdevdiv.corp.microsoft.com/DevDiv2/DevDiv/_versionControl/changeset/1033157\r\n\r\n> Add designtime or buildtime warning when referencing Dev12/WinBlue projects from Dev11/Win8 C++ projects\r\n\r\nNo details in the changeset to indicate that this was intentional.",
        "createdAt": "2024-07-31T22:20:20Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}