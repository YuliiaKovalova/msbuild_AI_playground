{
  "number": 8222,
  "title": "fixing global properties error in Dynamic platform resolution",
  "body": "### Context\r\nIn graph projects, if project A (x86) references project B (AnyCPU), we use the same global properties dictionary in both cases. This means that project A will get Platform:AnyCPU as a global property.\r\n\r\nPlatform should be the only property that changes, so anything that prevents the parent project from getting its global properties changed by dependent projects would unblock VS.\r\n\r\nNote that we cannot use one dictionary and change the property while building B in the above example, then revert the property because that would still affect B; anyone using the project graph object would be getting incorrect information.\r\n\r\nFrom a performance perspective, there should only be ~6-7 properties in the dictionary, so copying it should not be a major hit.\r\n\r\n### Changes Made\r\nThis change prevents the global properties dictionary from being passed directly if EnableDynamicPlatformResolution is true.\r\n\r\n### Testing\r\nUnit test and possibly manual tests, though I didn't ask.\r\n",
  "state": "MERGED",
  "createdAt": "2022-12-06T13:10:50Z",
  "updatedAt": "2023-07-05T23:00:26Z",
  "closedAt": "2023-03-02T10:02:41Z",
  "mergedAt": "2023-03-02T10:02:41Z",
  "additions": 30,
  "deletions": 2,
  "changedFiles": 2,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "MIchaelRShea"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "6d8e2e65fae4febce1b16166ec6d6bb3d1c3bf25",
          "message": "fixing global properties error in Dynamic platform resolution",
          "committedDate": "2022-12-06T13:09:34Z",
          "author": {
            "name": "Michael Shea",
            "email": "michaelshea@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fd83b3dc49f5c49db64536337b348227b5b200e0",
          "message": "Update src/Build/Graph/ProjectInterpretation.cs\n\nCo-authored-by: Forgind <12969783+Forgind@users.noreply.github.com>",
          "committedDate": "2022-12-11T19:00:37Z",
          "author": {
            "name": "Michael Shea",
            "email": "78166458+MIchaelRShea@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a4f4f7891a591e1bccd6db2c50e99890046c5a45",
          "message": "adding in unit test",
          "committedDate": "2023-01-09T21:14:00Z",
          "author": {
            "name": "Michael Shea",
            "email": "michaelshea@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "664e8442bb49304086e7553c19b33a06869f12e0",
          "message": "Merge branch 'main' of https://github.com/MIchaelRShea/msbuild",
          "committedDate": "2023-01-09T21:14:12Z",
          "author": {
            "name": "Michael Shea",
            "email": "michaelshea@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "73c9e4e7ccc0cb49185c89bdf254f95fcd031914",
          "message": "Update src/Build/Graph/ProjectInterpretation.cs\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2023-01-09T21:16:16Z",
          "author": {
            "name": "Michael Shea",
            "email": "78166458+MIchaelRShea@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "84a9e0a47eb806063161643e007e1ab5dcdce52c",
          "message": "Update src/Build/Graph/ProjectInterpretation.cs\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2023-01-09T21:16:22Z",
          "author": {
            "name": "Michael Shea",
            "email": "78166458+MIchaelRShea@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a7fab34919187c286bdbd9e9e2db8715146219a6",
          "message": "Update GetCompatiblePlatformGraph_Tests.cs",
          "committedDate": "2023-01-23T20:18:34Z",
          "author": {
            "name": "Michael Shea",
            "email": "78166458+MIchaelRShea@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "aec24c1daf260b0514092e58a4f5bb7999441994",
          "message": "Update GetCompatiblePlatformGraph_Tests.cs",
          "committedDate": "2023-03-01T20:56:56Z",
          "author": {
            "name": "Michael Shea",
            "email": "78166458+MIchaelRShea@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> Can you please add a test that triggers this?\r\n\r\nAdded in a unit test to validate the parents global props dictionary is not being modified\r\n",
        "createdAt": "2023-01-09T21:17:01Z",
        "author": {
          "login": "MIchaelRShea"
        }
      },
      {
        "body": "I\u2019ll fix the naming of this test. Looks like they got swapped around\r\n\r\n-Michael\r\n\r\nGet Outlook for iOS<https://aka.ms/o0ukef>\r\n________________________________\r\nFrom: Rainer Sigwald ***@***.***>\r\nSent: Wednesday, March 1, 2023 12:40:07 PM\r\nTo: dotnet/msbuild ***@***.***>\r\nCc: Michael Shea ***@***.***>; Author ***@***.***>\r\nSubject: Re: [dotnet/msbuild] fixing global properties error in Dynamic platform resolution (PR #8222)\r\n\r\n\r\n@rainersigwald commented on this pull request.\r\n\r\n________________________________\r\n\r\nIn src/Build.UnitTests/Graph/GetCompatiblePlatformGraph_Tests.cs<https://github.com/dotnet/msbuild/pull/8222#discussion_r1122103781>:\r\n\r\n> +                                                                                                <Platform>x64</Platform>\r\n+                                                                                                <PlatformLookupTable>win32=x64</PlatformLookupTable>\r\n+                                                                                            </PropertyGroup>\r\n+                                                                                            <ItemGroup>\r\n+                                                                                                <ProjectReference Include=\"\"$(MSBuildThisFileDirectory)2.proj\"\" />\r\n+                                                                                            </ItemGroup>\");\r\n+                var proj2 = env.CreateFile(\"2.proj\", @\"\r\n+                                                    <Project>\r\n+                                                        <PropertyGroup>\r\n+                                                            <EnableDynamicPlatformResolution>true</EnableDynamicPlatformResolution>\r\n+                                                            <Platforms>AnyCPU</Platforms>\r\n+                                                        </PropertyGroup>\r\n+                                                    </Project>\");\r\n+\r\n+                ProjectGraph graph = new ProjectGraph(entryProject.Path);\r\n+                GetFirstNodeWithProjectNumber(graph, 1).ProjectInstance.GlobalProperties.ContainsKey(\"Platform\").ShouldBeFalse();\r\n\r\n\r\nSo this is a regression test for the \"accidentally used same global properties for both instances\" case? It looks like maybe the test names got swapped, and this one is ValidateGlobalPropertyCopyByValueNotReference() while ValidateSetPlatformOverride is unchanged?\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/dotnet/msbuild/pull/8222#pullrequestreview-1320330460>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ASULTOUIHUNC5AUBUDHD353WZ6CXPANCNFSM6AAAAAASVPSMN4>.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.***>\r\n",
        "createdAt": "2023-07-05T22:59:11Z",
        "author": {
          "login": "MIchaelRShea"
        }
      },
      {
        "body": "Ignore this email, I replied to this thread thinking it was a different one.\r\n\r\n-Michael\r\n\r\nGet Outlook for iOS<https://aka.ms/o0ukef>\r\n________________________________\r\nFrom: Michael Shea ***@***.***>\r\nSent: Wednesday, July 5, 2023 6:59:06 PM\r\nTo: dotnet/msbuild ***@***.***>; dotnet/msbuild ***@***.***>\r\nCc: Author ***@***.***>\r\nSubject: Re: [dotnet/msbuild] fixing global properties error in Dynamic platform resolution (PR #8222)\r\n\r\nI\u2019ll fix the naming of this test. Looks like they got swapped around\r\n\r\n-Michael\r\n\r\nGet Outlook for iOS<https://aka.ms/o0ukef>\r\n________________________________\r\nFrom: Rainer Sigwald ***@***.***>\r\nSent: Wednesday, March 1, 2023 12:40:07 PM\r\nTo: dotnet/msbuild ***@***.***>\r\nCc: Michael Shea ***@***.***>; Author ***@***.***>\r\nSubject: Re: [dotnet/msbuild] fixing global properties error in Dynamic platform resolution (PR #8222)\r\n\r\n\r\n@rainersigwald commented on this pull request.\r\n\r\n________________________________\r\n\r\nIn src/Build.UnitTests/Graph/GetCompatiblePlatformGraph_Tests.cs<https://github.com/dotnet/msbuild/pull/8222#discussion_r1122103781>:\r\n\r\n> +                                                                                                <Platform>x64</Platform>\r\n+                                                                                                <PlatformLookupTable>win32=x64</PlatformLookupTable>\r\n+                                                                                            </PropertyGroup>\r\n+                                                                                            <ItemGroup>\r\n+                                                                                                <ProjectReference Include=\"\"$(MSBuildThisFileDirectory)2.proj\"\" />\r\n+                                                                                            </ItemGroup>\");\r\n+                var proj2 = env.CreateFile(\"2.proj\", @\"\r\n+                                                    <Project>\r\n+                                                        <PropertyGroup>\r\n+                                                            <EnableDynamicPlatformResolution>true</EnableDynamicPlatformResolution>\r\n+                                                            <Platforms>AnyCPU</Platforms>\r\n+                                                        </PropertyGroup>\r\n+                                                    </Project>\");\r\n+\r\n+                ProjectGraph graph = new ProjectGraph(entryProject.Path);\r\n+                GetFirstNodeWithProjectNumber(graph, 1).ProjectInstance.GlobalProperties.ContainsKey(\"Platform\").ShouldBeFalse();\r\n\r\n\r\nSo this is a regression test for the \"accidentally used same global properties for both instances\" case? It looks like maybe the test names got swapped, and this one is ValidateGlobalPropertyCopyByValueNotReference() while ValidateSetPlatformOverride is unchanged?\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/dotnet/msbuild/pull/8222#pullrequestreview-1320330460>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ASULTOUIHUNC5AUBUDHD353WZ6CXPANCNFSM6AAAAAASVPSMN4>.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.***>\r\n",
        "createdAt": "2023-07-05T23:00:25Z",
        "author": {
          "login": "MIchaelRShea"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "tiny nit:\r\n```suggestion\r\n            bool DynamicPlatformEnabled,\r\n```",
              "createdAt": "2022-12-06T21:35:43Z",
              "path": "src/Build/Graph/ProjectInterpretation.cs",
              "diffHunk": "@@ -310,6 +310,7 @@ public GlobalPropertyPartsForMSBuildTask AddPropertyToUndefine(string propertyTo\n         private static PropertyDictionary<ProjectPropertyInstance> GetGlobalPropertiesForItem(\n             ProjectItemInstance projectReference,\n             PropertyDictionary<ProjectPropertyInstance> requesterGlobalProperties,\n+            Boolean DynamicPlatformEnabled,",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this be || ?",
              "createdAt": "2022-12-06T21:35:51Z",
              "path": "src/Build/Graph/ProjectInterpretation.cs",
              "diffHunk": "@@ -323,7 +324,7 @@ public GlobalPropertyPartsForMSBuildTask AddPropertyToUndefine(string propertyTo\n \n             var globalPropertyParts = globalPropertyModifiers?.Aggregate(defaultParts, (currentProperties, modifier) => modifier(currentProperties, projectReference)) ?? defaultParts;\n \n-            if (globalPropertyParts.AllEmpty())\n+            if (globalPropertyParts.AllEmpty() && !DynamicPlatformEnabled)",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "No, when we use dynamic platform resolution we never want to resuse a global props dictionary. we want to create a copy. otherwise if project A(x86) references project B(AnyCPU) since we reuse the global property dictionary project A will have global properties (Platform:AnyCPU)",
              "createdAt": "2022-12-09T20:42:42Z",
              "path": "src/Build/Graph/ProjectInterpretation.cs",
              "diffHunk": "@@ -323,7 +324,7 @@ public GlobalPropertyPartsForMSBuildTask AddPropertyToUndefine(string propertyTo\n \n             var globalPropertyParts = globalPropertyModifiers?.Aggregate(defaultParts, (currentProperties, modifier) => modifier(currentProperties, projectReference)) ?? defaultParts;\n \n-            if (globalPropertyParts.AllEmpty())\n+            if (globalPropertyParts.AllEmpty() && !DynamicPlatformEnabled)",
              "author": {
                "login": "MIchaelRShea"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Nit:\r\n\r\n```suggestion\r\n            bool dynamicPlatformEnabled,\r\n```",
              "createdAt": "2022-12-16T20:18:20Z",
              "path": "src/Build/Graph/ProjectInterpretation.cs",
              "diffHunk": "@@ -310,6 +310,7 @@ public GlobalPropertyPartsForMSBuildTask AddPropertyToUndefine(string propertyTo\n         private static PropertyDictionary<ProjectPropertyInstance> GetGlobalPropertiesForItem(\n             ProjectItemInstance projectReference,\n             PropertyDictionary<ProjectPropertyInstance> requesterGlobalProperties,\n+            bool DynamicPlatformEnabled,",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n            if (globalPropertyParts.AllEmpty() && !dynamicPlatformEnabled)\r\n```",
              "createdAt": "2022-12-16T20:18:29Z",
              "path": "src/Build/Graph/ProjectInterpretation.cs",
              "diffHunk": "@@ -323,7 +324,7 @@ public GlobalPropertyPartsForMSBuildTask AddPropertyToUndefine(string propertyTo\n \n             var globalPropertyParts = globalPropertyModifiers?.Aggregate(defaultParts, (currentProperties, modifier) => modifier(currentProperties, projectReference)) ?? defaultParts;\n \n-            if (globalPropertyParts.AllEmpty())\n+            if (globalPropertyParts.AllEmpty() && !DynamicPlatformEnabled)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "So this is a regression test for the \"accidentally used same global properties for both instances\" case? It looks like maybe the test names got swapped, and this one is `ValidateGlobalPropertyCopyByValueNotReference()` while `ValidateSetPlatformOverride` is unchanged?",
              "createdAt": "2023-03-01T17:39:55Z",
              "path": "src/Build.UnitTests/Graph/GetCompatiblePlatformGraph_Tests.cs",
              "diffHunk": "@@ -36,6 +36,33 @@ public class ProjectGraphSetPlatformTests\n \n         [Fact]\n         public void ValidateSetPlatformOverride()\n+        {\n+            using (var env = TestEnvironment.Create())\n+            {\n+\n+                TransientTestFile entryProject = CreateProjectFile(env, 1, extraContent: @\"<PropertyGroup>\n+                                                                                                <EnableDynamicPlatformResolution>true</EnableDynamicPlatformResolution>\n+                                                                                                <Platform>x64</Platform>\n+                                                                                                <PlatformLookupTable>win32=x64</PlatformLookupTable>\n+                                                                                            </PropertyGroup>\n+                                                                                            <ItemGroup>\n+                                                                                                <ProjectReference Include=\"\"$(MSBuildThisFileDirectory)2.proj\"\" />\n+                                                                                            </ItemGroup>\");\n+                var proj2 = env.CreateFile(\"2.proj\", @\"\n+                                                    <Project>\n+                                                        <PropertyGroup>\n+                                                            <EnableDynamicPlatformResolution>true</EnableDynamicPlatformResolution>\n+                                                            <Platforms>AnyCPU</Platforms>\n+                                                        </PropertyGroup>\n+                                                    </Project>\");\n+\n+                ProjectGraph graph = new ProjectGraph(entryProject.Path);\n+                GetFirstNodeWithProjectNumber(graph, 1).ProjectInstance.GlobalProperties.ContainsKey(\"Platform\").ShouldBeFalse();",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "yes your right. not sure how these got mixed up. fixed this",
              "createdAt": "2023-03-01T20:57:38Z",
              "path": "src/Build.UnitTests/Graph/GetCompatiblePlatformGraph_Tests.cs",
              "diffHunk": "@@ -36,6 +36,33 @@ public class ProjectGraphSetPlatformTests\n \n         [Fact]\n         public void ValidateSetPlatformOverride()\n+        {\n+            using (var env = TestEnvironment.Create())\n+            {\n+\n+                TransientTestFile entryProject = CreateProjectFile(env, 1, extraContent: @\"<PropertyGroup>\n+                                                                                                <EnableDynamicPlatformResolution>true</EnableDynamicPlatformResolution>\n+                                                                                                <Platform>x64</Platform>\n+                                                                                                <PlatformLookupTable>win32=x64</PlatformLookupTable>\n+                                                                                            </PropertyGroup>\n+                                                                                            <ItemGroup>\n+                                                                                                <ProjectReference Include=\"\"$(MSBuildThisFileDirectory)2.proj\"\" />\n+                                                                                            </ItemGroup>\");\n+                var proj2 = env.CreateFile(\"2.proj\", @\"\n+                                                    <Project>\n+                                                        <PropertyGroup>\n+                                                            <EnableDynamicPlatformResolution>true</EnableDynamicPlatformResolution>\n+                                                            <Platforms>AnyCPU</Platforms>\n+                                                        </PropertyGroup>\n+                                                    </Project>\");\n+\n+                ProjectGraph graph = new ProjectGraph(entryProject.Path);\n+                GetFirstNodeWithProjectNumber(graph, 1).ProjectInstance.GlobalProperties.ContainsKey(\"Platform\").ShouldBeFalse();",
              "author": {
                "login": "MIchaelRShea"
              }
            }
          ]
        }
      }
    ]
  }
}