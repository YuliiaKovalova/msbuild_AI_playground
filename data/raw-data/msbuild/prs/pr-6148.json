{
  "number": 6148,
  "title": "MSBuild Upgrade: netstandard2.0 -> net6.0",
  "body": "Fixes #6032\r\n\r\n### Context\r\nWhile we're in the process of updating target frameworks, let's move off of netstandard2.0.\r\n\r\nEXCEPT: We need two projects (M.B.Framework and M.B.Utilities) to build as ns2.0 and place their ref assemblies under `OutputPath/ref` for the RoslynCodeTaskFactory.\r\n\r\n### Changes Made\r\nChanged `TargetLibraryFrameworks` to include `net6.0`\r\nAdd a target for ns2.0 builds to place M.B.Framework and Utilities ref assemblies into the build's `ref/` folder.\r\n\r\nMarked various tasks (Particularly SignFile) with a \"Windows\" OS Attribute\r\n\r\n### Testing\r\nCI and local builds pass.\r\n\r\n### Notes\r\nReview by diff!",
  "state": "MERGED",
  "createdAt": "2021-02-11T01:02:17Z",
  "updatedAt": "2023-11-16T09:17:07Z",
  "closedAt": "2022-03-07T19:19:06Z",
  "mergedAt": "2022-03-07T19:19:06Z",
  "additions": 353,
  "deletions": 88,
  "changedFiles": 48,
  "headRefName": "netstandard2.0-to-net5.0",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": {
    "title": ".NET 7.0"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "f17f607555308eaf0b241d59098f68c7b8e46a6d",
          "message": "change library target frameworks to net6.0",
          "committedDate": "2022-01-13T22:31:00Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b1ac2ab32de293825638d7aeccf062393e2a7ba6",
          "message": "CustomHttpRequestException obsolete in net6.0, use SupportedOSPlatform\nfor net6.0",
          "committedDate": "2022-01-13T22:31:00Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c5ae661501082a6f58c4320e6c524433d196d439",
          "message": "Relax nullable warnings in stringtools",
          "committedDate": "2022-01-13T22:31:00Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b2fa123a42614da71174034273e0b2ea62b755b7",
          "message": "Update version of Microsoft.VisualStudio.Setup.Configuration.Interop\nAlso import conditionally in the same way other projects import it (when\non .NETFramework).",
          "committedDate": "2022-01-13T22:42:28Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d98fe68f84e87d514ad84a22428e7f0a5e67cd9a",
          "message": "Use property to find netcoresdk bundledversions.props",
          "committedDate": "2022-01-13T22:42:52Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3326faf5d6ad60a3d67e2c1bec3f67b31e7d8ec4",
          "message": "Use RuntimeIdentifierGraphPath var",
          "committedDate": "2022-01-13T22:42:52Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "642093a5daa041fd9558960c5dd8161284d39e07",
          "message": "Use #if RUNTIME_TYPE_NETCORE instead of NETSTANDARD for .NET Core-only code",
          "committedDate": "2022-01-13T22:42:52Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d5370bf6502e75fc71f24952d5863155d6d93b7b",
          "message": "Fix path to ref assemblies",
          "committedDate": "2022-01-13T22:42:52Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f6c1204b4b3313bc70b59879d3387fa0a13339bd",
          "message": "Update last SetTargetFramework to net6.0, use EscapeDataString instead of EscapeUriString",
          "committedDate": "2022-01-13T22:44:00Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6f0581f34011b9214ff372cdb6af0f7fa4d295fc",
          "message": "Mark signfile as supported on windows",
          "committedDate": "2022-01-13T22:44:49Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c720814a0adfcbcab1b018e7cd1fe71cc8b13f16",
          "message": "Revert \"Fix path to ref assemblies\"\n\nThis reverts commit ad6b546dc2c38fa952aef5d1bba5f2b240578d4a.",
          "committedDate": "2022-01-13T22:44:51Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "499f6dc98e483ce44f0f689df847ed00a1143723",
          "message": "Explicitly download netstandard.library for roslyncodetaskfactory",
          "committedDate": "2022-01-13T22:44:51Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "98b28d143c5aa3036a820c40cc9a3d773491bc13",
          "message": "FindOnPathSucceeds: Ignore case on windows",
          "committedDate": "2022-01-13T22:46:31Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a34b2fa488cf13530c297fe16ef3b3b5967a7f39",
          "message": "Fix SA1508 (blank line before curly brace)",
          "committedDate": "2022-01-13T22:59:33Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "36cff1793fea7f8a4b87cc4fcadae5997c811490",
          "message": "Revert FindOnPathSucceeds fix",
          "committedDate": "2022-01-13T23:06:17Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "982d5bc905497d5a0df506b259c5d0efc04e9716",
          "message": "Fix nullability warning CS8765",
          "committedDate": "2022-01-13T23:28:27Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8e89508e14c2c9c0e165d52d341cb72cb901ff8c",
          "message": "Mark GetVersionIndependentToolPath as Windows only. Resolves CA1416 for SecurityUtil",
          "committedDate": "2022-01-18T19:01:23Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ab5b02ac2d3f15e2ecca89c41c96bc95e4943a90",
          "message": "Fix SYSLIB0021 in BootstrapperBuilder",
          "committedDate": "2022-01-18T19:12:49Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8cb9f2c51ee2f095720fa4bede975bd79b1651bf",
          "message": "! Fix SYSLIB0021 in mansign2",
          "committedDate": "2022-01-18T19:27:15Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "18b8d7c6ef3c2d20786ce4aff78038e858ee1e5c",
          "message": "Fix CA2016 in DownloadFile",
          "committedDate": "2022-01-18T19:33:20Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "65212a46773c88cb5509d1eeca462f7eae48d7da",
          "message": "Add PlatformGuard to NativeMethodsShared.IsWindows",
          "committedDate": "2022-01-18T20:15:02Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e9bed315add35d47dd9696480f0f93764878b912",
          "message": "NoWarn on CA1416",
          "committedDate": "2022-01-18T20:26:07Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9863e76c967646c7cd27a9c80d5c12801c1deaad",
          "message": "Fix SYSLIB0021 in ManifestUtil/Util",
          "committedDate": "2022-01-18T20:27:09Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c927db530de506266b113cefa6b8c6d1893ccf05",
          "message": "Target relevant projects to netstandard2.0. Prevent those targets from being analyzed, generating pdbs, and force them to only produce reference assemblies",
          "committedDate": "2022-01-25T22:03:51Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "27a0b105054c52cc5818cb978318835d4e15c0e6",
          "message": "PortableTask must build as ns2.0",
          "committedDate": "2022-01-26T23:54:31Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "42f8e51df2de5c727bc407552d62fe94365ffff0",
          "message": "Build M.B.Framework & Utilities as ns2.0 so RoslynCodeTaskFactory can find them",
          "committedDate": "2022-01-26T23:58:34Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "28f08940ff926de67a1557b4b0b65950fa5f7dcf",
          "message": "Merge branch 'main' into netstandard2.0-to-net5.0",
          "committedDate": "2022-01-27T00:05:26Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7e07f743809df995eaa1fe762ceca736351db9b2",
          "message": "System.Runtime.Versioning is used in netcore and full framework now",
          "committedDate": "2022-01-27T00:34:43Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "72bf1ac37cf0237b34fc6b2de884724d5b177202",
          "message": "Mimic AddRefAssemblies from MSBuild.csproj to M.B.Tasks.csproj",
          "committedDate": "2022-01-28T00:24:36Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a262ef67168f37fcf881bd98b372327bf2bee88",
          "message": "Remove CA1416 from NoWarn and mark each windows-specfic path as such. Also fix unused usings warnings",
          "committedDate": "2022-01-28T22:10:25Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "987fd6231a47cd337e5d34bf32bc5d2a3ec47a16",
          "message": "Merge branch 'main' into netstandard2.0-to-net5.0",
          "committedDate": "2022-01-31T19:50:09Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ce53557598e4362f026392821bd6a8d781a44c38",
          "message": "Update latest package version",
          "committedDate": "2022-02-02T23:12:05Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b3887391944c459a61ab0274185739570d44ef78",
          "message": "Merge branch 'main' into netstandard2.0-to-net5.0",
          "committedDate": "2022-02-03T22:41:49Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "44626b8e5930bc927a70cc32544de6733457a6cc",
          "message": "Last SignFile call is now under SupportedOSPlatform",
          "committedDate": "2022-02-04T00:28:07Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6099f124ecc2072267d3cae07cef69295e3b4bca",
          "message": "Code cleanup. Use RUNTIME_TYPE_NETCORE instead of NET5_0_OR_GREATER",
          "committedDate": "2022-02-04T21:17:29Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5f3e506462ff2bfc4f18fb88e29fd18b24056703",
          "message": "Minor code cleanup",
          "committedDate": "2022-02-04T22:32:50Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a0fa83f9506acc6845ee746c23d97021320576b",
          "message": "Add FEATURE_FASTSPAN",
          "committedDate": "2022-02-04T22:45:07Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c9362f3198a22838d5580d789fb7736c1bc7748c",
          "message": "Log an error if SignFile is called from a non-windows machine",
          "committedDate": "2022-02-04T23:16:20Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "aede5739c3cac330984f526abd089997f9afd296",
          "message": "Minor code cleanup",
          "committedDate": "2022-02-04T23:25:13Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cf57afba55ab53c7c6a5dfde8115bf4540432e46",
          "message": "Add ns2.0 info to readme",
          "committedDate": "2022-02-07T18:41:07Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "63b0b39361dc89c4311a895282471fe0e401cb2a",
          "message": "PR Feedback: Code cleanup, mark classes with PlatformGuard, create PlatformGuard types in Microsoft.Build.Framework to many compiler directives",
          "committedDate": "2022-02-08T01:41:32Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2a8ce5389ba456ef65c21a87ffe08e47893b4924",
          "message": "Minor PR feedback",
          "committedDate": "2022-02-08T23:23:05Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f253f5a81ddd19a11889e2ab03eec8486cb7dd2a",
          "message": "Create SupportedOSPlatform type for framework and ns2.0. Remove now-unnecessary preprocessor directives",
          "committedDate": "2022-02-09T00:07:14Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ffb3d6b36fb4494fe5eb8dc8bfb0f19bc2cf085d",
          "message": "Code cleanup. Use full paths for RuntimeIdentifierGraph and Microsoft.NETCoreSdk.BundledVersions.props",
          "committedDate": "2022-02-09T00:17:03Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a47d737e062ee1470f1941a81031ae66735aab46",
          "message": "Libraries build as ns2.0 again. NuGet package contains ref assemblies in `ref/netstandard2.0/`",
          "committedDate": "2022-02-10T00:53:51Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ca7b4879e0a4525f856788537b022bb893c4e6d4",
          "message": "ns2.0 targets dont publish pdbs",
          "committedDate": "2022-02-10T00:56:35Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ecfff474a8512678b647ce2c86acb7d4c9532190",
          "message": "Remove unused target, redownload netstandard.library for tests",
          "committedDate": "2022-02-10T18:57:52Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7b90a534395effd0adb9415bcaf3210fae91e9ca",
          "message": "Always nowarn NU5131",
          "committedDate": "2022-02-10T20:19:22Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0549c148eac82c31aa7bf680554ce9fb9e3632fd",
          "message": "Prevent any version of GenerateManifest from running on a non-windows machine",
          "committedDate": "2022-02-10T22:39:17Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "34a8b6daef819571860fec29ecbfb83078b85beb",
          "message": "Code cleanup",
          "committedDate": "2022-02-11T19:10:55Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0bcaf194985158b6c8245346520e8208ee93824c",
          "message": "Remove unneeded target. Fix whitespace in SignFile",
          "committedDate": "2022-02-11T19:43:59Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2b00f97d4e6462fb69a1dd59ecc14d9ab0f04b04",
          "message": "Ship all ref assemblies in ref/ in NuGet package root",
          "committedDate": "2022-02-11T22:51:23Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "21a19753731d3824508ad523386e67eebb3e3dbc",
          "message": "Use TargetRefPath instead of IntermediateRefAssembly. Fix stale comment",
          "committedDate": "2022-02-11T23:56:46Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f47d7397519cc3ae312ae47c906a670210359fcb",
          "message": "[PR Feedback] Fix slash on PackagePath",
          "committedDate": "2022-03-01T18:48:10Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7e50fa8e3eef6913984ec64d74ef6fb6ec23ba70",
          "message": "[PR] Remove semicolon change for CS8632 to prevent a merge conflict",
          "committedDate": "2022-03-01T18:50:16Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8771062d3c016c3f6841b952feaad9f1d0d38b89",
          "message": "[PR] Check newer APIs using NET6_0_OR_GREATER. Updated Framework readme",
          "committedDate": "2022-03-01T19:16:06Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4c7ff53d17fc7ba67254d8813df379eba214e59b",
          "message": "[PR] Use SupportedOSPlatform on GenerateDeploymentManifest and GenerateApplicationManifest. Minor PR feedback",
          "committedDate": "2022-03-01T19:38:37Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "990538cf3bac1399712f9b28a6ecd3aa5ec2879c",
          "message": "Fix M.B.Utilities README",
          "committedDate": "2022-03-01T19:41:59Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "84a11ad47736dc6bfcabe9dff1be7cbcd32649fc",
          "message": "Simply throw in DownloadFile when catching an HttpRequestException",
          "committedDate": "2022-03-02T20:01:55Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7ef24b23020bb632259543cae245b4f68992a8f6",
          "message": "SignFile and GenerateLauncher are marked as windows only.",
          "committedDate": "2022-03-02T20:41:02Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@Forgind do you recognize the issue with `System.Configuration`? It's pointing to RAR suggesting there are multiple references to that binary. Pinging you because I'm still a RAR newbie \u00af\\_(\u30c4)_/\u00af",
        "createdAt": "2021-02-11T01:05:38Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Just looking at the list of Windows Core errors, there were a variety of different problems here, only two of which are related to RAR. If you can get a diagnostic build log or binlog, I can probably find where conflict is coming from\u2014it looks like some assemblies refer to a specific version (4.0.0.0) of System.Configuration, whereas some other refers to it without a version, and RAR was confused. Unfortunately, only one binlog (Windows Full) output a binlog, as far as I can tell, and that one didn't have that problem, so I don't have much else to go on.\r\n\r\nAre you seeing this problem locally? If so, I can try pulling it down and looking into it.",
        "createdAt": "2021-02-11T18:33:08Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind I think it was due to multiple `<Reference`'s to the same package. I needed to change a condition.",
        "createdAt": "2021-02-17T20:15:40Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@ladipro running `eng\\cibuild_bootstrapped_msbuild.cmd` from this branch sees about a dozen errors, two of them being related to stringtools. Interestingly enough they don't show up in git CI.\r\n\r\nNote that this PR updated `LibraryTargetFrameworks` to include net5.0 instead of netstandard2.0, so stringtools is updated. \r\n\r\nin Microsoft.NET.StringTools.Tests.WeakStringCache_Tests.RetainsLastStringWithGivenHashCode\r\n```\r\nMicrosoft.NET.StringTools.Tests.WeakStringCache_Tests.RetainsLastStringWithGivenHashCode\r\nShouldly.ShouldAssertException : \\\"Random string 1\\\"\\n    should be same as\\n\\\"Random string 1\\\"\\n    but was not\r\n   at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected, Func`1 customMessage, String shouldlyMethod)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBeSameAs(Object actual, Object expected, Func`1 customMessage)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBeSameAs(Object actual, Object expected)\r\n   at Microsoft.NET.StringTools.Tests.WeakStringCache_Tests.AddString(String strPart1, String strPart2, Action`1 callbackToRunWithTheStringAlive) in C:\\src\\git\\msbuild\\src\\StringTools.UnitTests\\WeakStringCache_Tests.cs:line 52\r\n   at Microsoft.NET.StringTools.Tests.WeakStringCache_Tests.AddStringsWithSameHashCode(Int32 numberOfStrings) in C:\\src\\git\\msbuild\\src\\StringTools.UnitTests\\WeakStringCache_Tests.cs:line 88\r\n   at Microsoft.NET.StringTools.Tests.WeakStringCache_Tests.RetainsLastStringWithGivenHashCode() in C:\\src\\git\\msbuild\\src\\StringTools.UnitTests\\WeakStringCache_Tests.cs:line 172\r\n```\r\n\r\nand Microsoft.NET.StringTools.Tests.WeakStringCache_Tests.RetainsStringUntilCollected\r\n```\r\nShouldly.ShouldAssertException : \\\"Random string test\\\"\\n    should be same as\\n\\\"Random string test\\\"\\n    but was not\r\n   at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected, Func`1 customMessage, String shouldlyMethod)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBeSameAs(Object actual, Object expected, Func`1 customMessage)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBeSameAs(Object actual, Object expected)\r\n   at Microsoft.NET.StringTools.Tests.WeakStringCache_Tests.AddString(String strPart1, String strPart2, Action`1 callbackToRunWithTheStringAlive) in C:\\src\\git\\msbuild\\src\\StringTools.UnitTests\\WeakStringCache_Tests.cs:line 52\r\n   at Microsoft.NET.StringTools.Tests.WeakStringCache_Tests.RetainsStringUntilCollected() in C:\\src\\git\\msbuild\\src\\StringTools.UnitTests\\WeakStringCache_Tests.cs:line 130\r\n```\r\n\r\nAny idea why going from netstandard2.0 to net5.0 would break these specific tests?\r\n\r\nAlso please double check commit bc7c4e14, I had to relax some nullable warnings.",
        "createdAt": "2021-03-02T01:39:29Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@dsplaisted could you take a look at 8bbdc988? I'm not sure how to go adding these ref assemblies, or if we even need them anymore if we're updating to net5.0.\r\n\r\nI took a wild guess and I didn't get lucky \ud83d\ude42\r\n\r\nI tried removing it entirely to see what would happen and I'm seeing:\r\n```\r\nMicrosoft.Build.Tasks.UnitTests.RoslynCodeTaskFactory_Tests.RoslynCodeTaskFactory_ReuseCompilation\r\nShouldly.ShouldAssertException : BuildProject(globalProperties, toolsVersion, out MockLogger logger)\\n    should be\\nTrue\\n    but was\\nFalse\r\n   at Shouldly.ShouldBeBooleanExtensions.ShouldBeTrue(Boolean actual, Func`1 customMessage)\r\n   at Shouldly.ShouldBeBooleanExtensions.ShouldBeTrue(Boolean actual)\r\n   at Microsoft.Build.UnitTests.TransientTestProjectWithFiles.BuildProjectExpectSuccess(IDictionary`2 globalProperties, String toolsVersion) in C:\\src\\git\\msbuild\\src\\Shared\\UnitTests\\EngineTestEnvironment.cs:line 130\r\n   at Microsoft.Build.Tasks.UnitTests.RoslynCodeTaskFactory_Tests.RoslynCodeTaskFactory_ReuseCompilation() in C:\\src\\git\\msbuild\\src\\Tasks.UnitTests\\RoslynCodeTaskFactory_Tests.cs:line 80\r\n```\r\n\r\nI don't suppose this is expected, given that the commit I linked modified the AddRefAssemblies target that's meant for the roslyn code task factory.",
        "createdAt": "2021-03-02T01:48:56Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "~~Am I seeing things, or is this project also failing at `UndeclaredReferenceEnforcementShouldFailOnPreviouslyBuiltButUndeclaredReferences`, just like https://github.com/dotnet/msbuild/pull/6174?~~\r\nnevermind this. Misreading intentional build failures as test failures, which they're not.",
        "createdAt": "2021-03-02T02:20:08Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@KirillOsenkov you were the last to modify `RoslynCodeTaskFactory_ReuseCompilation` relatively recently and it's failing in CI. Any idea why it's failing off the top of your head?\r\n\r\nAlso see https://github.com/dotnet/msbuild/pull/6148#issuecomment-788511513, I'm not entirely sure what to do with AddRefAssemblies. My impression at the moment is to construct a property that properly defines a path relative to each flavor OS.",
        "createdAt": "2021-03-03T20:09:52Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos You should be able to write a target that filters out those assemblies from what's resolved from the targeting packs instead of hardcoding the path.\r\n\r\nHowever, the .NET Core / .NET 5 versions of those assemblies may be different than reference assemblies of those for .NET Standard, so I'm not sure if they'll work anyway.",
        "createdAt": "2021-03-05T00:52:27Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "@dsplaisted can you point me in the right direction for any properties set via these targeting packs that would help me accomplish this?",
        "createdAt": "2021-03-05T18:41:30Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos I'm saying you would filter out the items that come out of ResolveTargetingPackAssets based on filename.  So you'd look for netstandard.dll and mscorlib.dll.\r\n\r\nHowever, I'm also not sure if the versions of those in the .NET 5 targeting pack will work for this or not.",
        "createdAt": "2021-03-05T19:54:16Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "Did a test by hardcoding the dll's from the targeting packs:\r\n![image](https://user-images.githubusercontent.com/4691428/112204404-d9e42c80-8bd0-11eb-9560-7f49cd751072.png)\r\n\r\nIt doesn't error on copying the assembly, but this RoslynCodeTaskFactory test still fails\r\n```\r\nMicrosoft.Build.Tasks.UnitTests.RoslynCodeTaskFactory_Tests.RoslynCodeTaskFactory_ReuseCompilation\r\nShouldly.ShouldAssertException : BuildProject(globalProperties, toolsVersion, out MockLogger logger)\\n    should be\\nTrue\\n    but was\\nFalse\r\n   at Shouldly.ShouldBeBooleanExtensions.ShouldBeTrue(Boolean actual, Func`1 customMessage)\r\n   at Shouldly.ShouldBeBooleanExtensions.ShouldBeTrue(Boolean actual)\r\n   at Microsoft.Build.UnitTests.TransientTestProjectWithFiles.BuildProjectExpectSuccess(IDictionary`2 globalProperties, String toolsVersion) in C:\\src\\git\\msbuild\\src\\Shared\\UnitTests\\EngineTestEnvironment.cs:line 130\r\n   at Microsoft.Build.Tasks.UnitTests.RoslynCodeTaskFactory_Tests.RoslynCodeTaskFactory_ReuseCompilation() in C:\\src\\git\\msbuild\\src\\Tasks.UnitTests\\RoslynCodeTaskFactory_Tests.cs:line 80\r\n```\r\n",
        "createdAt": "2021-03-23T19:12:10Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Also seeing these failures:\r\n\r\n```\r\n Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.CacheEnforcementShouldAcceptPreviouslyBuiltReferences(targetName: \\\"BuildDeclaredReferenceViaTask\\\")\r\nShouldly.ShouldAssertException : result.OverallResult\\n    should be\\nBuildResultCode.Success\\n    but was\\r\\nBuildResultCode.Failure\r\n   at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected, Func`1 customMessage, String shouldlyMethod)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected, Func`1 customMessage)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected)\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.<>c.<CacheEnforcementShouldAcceptPreviouslyBuiltReferences>b__15_0(BuildResult result, MockLogger logger) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 276\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.AssertBuild(String[] targets, Action`2 assert, Boolean buildDeclaredReference, Boolean buildUndeclaredReference, Boolean addContinueOnError, Boolean excludeReferencesFromConstraints, Boolean isolateProjects, Func`2 projectReferenceModifier, Func`2 msbuildOnDeclaredReferenceModifier) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 430\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.CacheEnforcementShouldAcceptPreviouslyBuiltReferences(String targetName) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 273\r\nOutput:\r\nBuild started.\r\nEvaluation started (\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp65ec6b558a8a426499af30d691017ab9.tmp\")\r\nEvaluation finished (\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp65ec6b558a8a426499af30d691017ab9.tmp\")\r\nProject \"tmp65ec6b558a8a426499af30d691017ab9.tmp\" (DeclaredReferenceTarget target(s)):\r\nBuilding with tools version \"Current\".\r\nTarget \"DeclaredReferenceTarget\" in project \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp65ec6b558a8a426499af30d691017ab9.tmp\" (entry point):\r\nUsing \"Message\" task from assembly \"Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\nTask \"Message\"\r\nMessage from reference\r\nDone executing task \"Message\".\r\nDone building target \"DeclaredReferenceTarget\" in project \"tmp65ec6b558a8a426499af30d691017ab9.tmp\".\r\nDone building project \"tmp65ec6b558a8a426499af30d691017ab9.tmp\".\r\nEvaluation started (\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp584f86bd1bcc480eb9a1066fdbbf8590.tmp\")\r\nEvaluation finished (\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp584f86bd1bcc480eb9a1066fdbbf8590.tmp\")\r\nProject \"tmp584f86bd1bcc480eb9a1066fdbbf8590.tmp\" (BuildDeclaredReferenceViaTask target(s)):\r\nBuilding with tools version \"Current\".\r\nTarget \"BuildDeclaredReferenceViaTask\" in project \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp584f86bd1bcc480eb9a1066fdbbf8590.tmp\" (entry point):\r\nInitializing task factory \"RoslynCodeTaskFactory\" from assembly \"C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.Core.dll\".\r\nCompiling task source code\r\nC:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Roslyn\\csc.exe /noconfig /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Framework.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Utilities.Core.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\ref\\mscorlib.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\ref\\netstandard.dll /deterministic+ /nologo /optimize- /target:Library /out:C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\giru15b3.uqw.dll C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp8C31.tmp /nostdlib+ \r\ntmp8C31.tmp(22,34):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp8C31.tmp(30,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp8C31.tmp(41,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp8C31.tmp(52,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp8C31.tmp(57,25):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp8C31.tmp(57,30):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp8C31.tmp(24,17):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp8C31.tmp(24,17):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp8C31.tmp(35,17):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp8C31.tmp(35,17):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp8C31.tmp(46,17):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp8C31.tmp(26,24):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp8C31.tmp(26,24):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp8C31.tmp(37,24):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp8C31.tmp(37,24):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp8C31.tmp(48,24):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\nThe command exited with code 1.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp584f86bd1bcc480eb9a1066fdbbf8590.tmp(84,25):  error : The source file for this compilation can be found at: \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp8C31.tmp\"\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp584f86bd1bcc480eb9a1066fdbbf8590.tmp(84,25):  error MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.Core.dll\". \r\nThis is an unhandled exception from a task factory-- PLEASE OPEN A BUG AGAINST THE TASK FACTORY OWNER. The task factory must return a value for the \"TaskType\" property.\r\nDone building target \"BuildDeclaredReferenceViaTask\" in project \"tmp584f86bd1bcc480eb9a1066fdbbf8590.tmp\" -- FAILED.\r\nDone building project \"tmp584f86bd1bcc480eb9a1066fdbbf8590.tmp\" -- FAILED.\r\nBuild FAILED.\r\n4.8584935s\u2718 Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.EnforcementsCanBeSkipped(targetName: \\\"BuildDeclaredReferenceViaTask\\\")\r\nShouldly.ShouldAssertException : result.OverallResult\\n    should be\\nBuildResultCode.Success\\n    but was\\r\\nBuildResultCode.Failure\r\n   at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected, Func`1 customMessage, String shouldlyMethod)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected, Func`1 customMessage)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected)\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.<>c.<EnforcementsCanBeSkipped>b__14_0(BuildResult result, MockLogger logger) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 254\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.AssertBuild(String[] targets, Action`2 assert, Boolean buildDeclaredReference, Boolean buildUndeclaredReference, Boolean addContinueOnError, Boolean excludeReferencesFromConstraints, Boolean isolateProjects, Func`2 projectReferenceModifier, Func`2 msbuildOnDeclaredReferenceModifier) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 430\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.EnforcementsCanBeSkipped(String targetName) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 250\r\nOutput:\r\nBuild started.\r\nEvaluation started (\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp6b3b2a4d4b85495f86a751e15cf32bca.tmp\")\r\nEvaluation finished (\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp6b3b2a4d4b85495f86a751e15cf32bca.tmp\")\r\nProject \"tmp6b3b2a4d4b85495f86a751e15cf32bca.tmp\" (BuildDeclaredReferenceViaTask target(s)):\r\nBuilding with tools version \"Current\".\r\nTarget \"BuildDeclaredReferenceViaTask\" in project \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp6b3b2a4d4b85495f86a751e15cf32bca.tmp\" (entry point):\r\nInitializing task factory \"RoslynCodeTaskFactory\" from assembly \"C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.Core.dll\".\r\nCompiling task source code\r\nC:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Roslyn\\csc.exe /noconfig /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Framework.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Utilities.Core.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\ref\\mscorlib.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\ref\\netstandard.dll /deterministic+ /nologo /optimize- /target:Library /out:C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\t2dzmyah.bsv.dll C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp4F52.tmp /nostdlib+ \r\ntmp4F52.tmp(22,34):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp4F52.tmp(30,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp4F52.tmp(41,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp4F52.tmp(52,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp4F52.tmp(57,25):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp4F52.tmp(57,30):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp4F52.tmp(24,17):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp4F52.tmp(24,17):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp4F52.tmp(35,17):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp4F52.tmp(35,17):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp4F52.tmp(46,17):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp4F52.tmp(26,24):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp4F52.tmp(26,24):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp4F52.tmp(37,24):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp4F52.tmp(37,24):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp4F52.tmp(48,24):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\nThe command exited with code 1.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp6b3b2a4d4b85495f86a751e15cf32bca.tmp(84,25):  error : The source file for this compilation can be found at: \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp4F52.tmp\"\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp6b3b2a4d4b85495f86a751e15cf32bca.tmp(84,25):  error MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.Core.dll\". \r\nThis is an unhandled exception from a task factory-- PLEASE OPEN A BUG AGAINST THE TASK FACTORY OWNER. The task factory must return a value for the \"TaskType\" property.\r\nDone building target \"BuildDeclaredReferenceViaTask\" in project \"tmp6b3b2a4d4b85495f86a751e15cf32bca.tmp\" -- FAILED.\r\nDone building project \"tmp6b3b2a4d4b85495f86a751e15cf32bca.tmp\" -- FAILED.\r\nBuild FAILED.\r\n5.3075131s\u2718 Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.EnforcementsCanBeSkipped(targetName: \\\"BuildUndeclaredReferenceViaTask\\\")\r\nShouldly.ShouldAssertException : result.OverallResult\\n    should be\\nBuildResultCode.Success\\n    but was\\r\\nBuildResultCode.Failure\r\n   at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected, Func`1 customMessage, String shouldlyMethod)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected, Func`1 customMessage)\r\n   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected)\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.<>c.<EnforcementsCanBeSkipped>b__14_0(BuildResult result, MockLogger logger) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 254\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.AssertBuild(String[] targets, Action`2 assert, Boolean buildDeclaredReference, Boolean buildUndeclaredReference, Boolean addContinueOnError, Boolean excludeReferencesFromConstraints, Boolean isolateProjects, Func`2 projectReferenceModifier, Func`2 msbuildOnDeclaredReferenceModifier) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 430\r\n   at Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.EnforcementsCanBeSkipped(String targetName) in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\Graph\\IsolateProjects_Tests.cs:line 250\r\nOutput:\r\nBuild started.\r\nEvaluation started (\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmpedd754e032784f7ea14567cafdadb021.tmp\")\r\nEvaluation finished (\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmpedd754e032784f7ea14567cafdadb021.tmp\")\r\nProject \"tmpedd754e032784f7ea14567cafdadb021.tmp\" (BuildUndeclaredReferenceViaTask target(s)):\r\nBuilding with tools version \"Current\".\r\nTarget \"BuildUndeclaredReferenceViaTask\" in project \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmpedd754e032784f7ea14567cafdadb021.tmp\" (entry point):\r\nInitializing task factory \"RoslynCodeTaskFactory\" from assembly \"C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.Core.dll\".\r\nCompiling task source code\r\nC:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Roslyn\\csc.exe /noconfig /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Framework.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Utilities.Core.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\ref\\mscorlib.dll /reference:C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\ref\\netstandard.dll /deterministic+ /nologo /optimize- /target:Library /out:C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\0qta3af2.i4z.dll C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp678D.tmp /nostdlib+ \r\ntmp678D.tmp(22,34):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp678D.tmp(30,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp678D.tmp(41,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp678D.tmp(52,13):  error CS0518: Predefined type 'System.Void' is not defined or imported\r\ntmp678D.tmp(57,25):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp678D.tmp(57,30):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp678D.tmp(24,17):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp678D.tmp(24,17):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp678D.tmp(35,17):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp678D.tmp(35,17):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp678D.tmp(46,17):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\ntmp678D.tmp(26,24):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp678D.tmp(26,24):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp678D.tmp(37,24):  error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\ntmp678D.tmp(37,24):  error CS0518: Predefined type 'System.Object' is not defined or imported\r\ntmp678D.tmp(48,24):  error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\nThe command exited with code 1.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmpedd754e032784f7ea14567cafdadb021.tmp(88,25):  error : The source file for this compilation can be found at: \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmp678D.tmp\"\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\3pfzsczs.vmg\\tmpedd754e032784f7ea14567cafdadb021.tmp(88,25):  error MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.Core.dll\". \r\nThis is an unhandled exception from a task factory-- PLEASE OPEN A BUG AGAINST THE TASK FACTORY OWNER. The task factory must return a value for the \"TaskType\" property.\r\nDone building target \"BuildUndeclaredReferenceViaTask\" in project \"tmpedd754e032784f7ea14567cafdadb021.tmp\" -- FAILED.\r\nDone building project \"tmpedd754e032784f7ea14567cafdadb021.tmp\" -- FAILED.\r\nBuild FAILED.\r\n2.2269549s\u2718 Microsoft.Build.UnitTests.BackEnd.TaskHost_Tests.TasksCanGetGlobalProperties\r\nAssert.True() Failure\\r\\nExpected: True\\r\\nActual:   False\r\n   at Microsoft.Build.UnitTests.Helpers.BuildProjectWithNewOMExpectSuccess(String content, Dictionary`2 globalProperties, MockLogger logger) in C:\\src\\git\\msbuild\\src\\Shared\\UnitTests\\ObjectModelHelpers.cs:line 1312\r\n   at Microsoft.Build.UnitTests.BackEnd.TaskHost_Tests.TasksCanGetGlobalProperties() in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\BackEnd\\TaskHost_Tests.cs:line 673\r\n2.1910045s\u2718 Microsoft.Build.UnitTests.BackEnd.TaskHost_Tests.TasksGetNoGlobalPropertiesIfNoneSpecified\r\nAssert.True() Failure\\r\\nExpected: True\\r\\nActual:   False\r\n   at Microsoft.Build.UnitTests.Helpers.BuildProjectWithNewOMExpectSuccess(String content, Dictionary`2 globalProperties, MockLogger logger) in C:\\src\\git\\msbuild\\src\\Shared\\UnitTests\\ObjectModelHelpers.cs:line 1312\r\n   at Microsoft.Build.UnitTests.BackEnd.TaskHost_Tests.TasksGetNoGlobalPropertiesIfNoneSpecified() in C:\\src\\git\\msbuild\\src\\Build.UnitTests\\BackEnd\\TaskHost_Tests.cs:line 703\r\n\r\n```\r\n\r\nSome of these test failures have to do with the net472 mscorlib/netstandard dll's",
        "createdAt": "2021-03-23T19:14:26Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Any recent progress on this? Would be nice to finish it or close it until you're ready to come back to it.",
        "createdAt": "2021-06-01T21:08:09Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Investigation notes on `ResourceManagement_Tests` for the day:\r\n\r\nSomething is up with the `net6.0` version of `Microsoft.Build.Tasks.Core.dll`, but I don't think the assembly itself. When running `dotnet build` on the generated project:\r\n\r\n```xml\r\n\r\n<Project>\r\n  <UsingTask\r\n    TaskName=\"UseCores\"\r\n    TaskFactory=\"RoslynCodeTaskFactory\"\r\n    AssemblyFile=\"C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\net6.0\\Microsoft.Build.Tasks.Core.dll\" >\r\n    <Task>\r\n      <Reference Include=\"C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\6.0.0-preview.3.21201.4\\System.Runtime.dll\" />\r\n      <Reference Include=\"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Core\\v4.0_4.0.0.0__b77a5c561934e089\\System.Core.dll\" />\r\n      <Code Type=\"Fragment\" Language=\"cs\">\r\n        \r\n                {\r\n                    System.Console.WriteLine(\"DEBUG\");\r\n                }\r\n      </Code>\r\n    </Task>\r\n  </UsingTask>\r\n\r\n  <Target Name=\"Build\">\r\n        <UseCores />\r\n  </Target>\r\n</Project>\r\n```\r\n`RoslynCodeTaskFactory` attempts to build the generated source file:\r\n```c#\r\n//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     Runtime Version:6.0.0\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\nnamespace InlineCode {\r\n    using Microsoft.Build.Framework;\r\n    using Microsoft.Build.Utilities;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.IO;\r\n    using System.Linq;\r\n    using System.Text;\r\n    \r\n    \r\n    public class UseCores : Microsoft.Build.Utilities.Task {\r\n        \r\n        private bool _Success = true;\r\n        \r\n        public virtual bool Success {\r\n            get {\r\n                return _Success;\r\n            }\r\n            set {\r\n                _Success = value;\r\n            }\r\n        }\r\n        \r\n        public override bool Execute() {\r\n\r\n        \r\n                {\r\n                    System.Console.WriteLine(\"DEBUG\");\r\n                }\r\n      \r\n            return Success;\r\n        }\r\n    }\r\n}\r\n\r\n```\r\nOn deeper investigation, it passes the following references when trying to build:\r\n![image](https://user-images.githubusercontent.com/4691428/121746540-e171ee00-caba-11eb-88ed-ac37ff103e08.png)\r\n\r\nIn a successful run (in VS unit tests), it passes the following:\r\n![image](https://user-images.githubusercontent.com/4691428/121746638-07978e00-cabb-11eb-896a-d30a1c0f32ff.png)\r\n\r\nMessing around with the references passed into compilation, it always fails when passing the `net6.0` version of `Microsoft.Build.Utilities.Core.dll`, so I can only assume something is up with that dll. What it is, I'm not sure yet.",
        "createdAt": "2021-06-11T20:44:55Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Seeing it written out like that made me go \ud83d\udca1.\r\n\r\nYou're saying that `Microsoft.Build.Utilities.Core.dll` is the problem, right? And we're now building that against net6.0. So it has \"real\" references to net6 versions of everything.\r\n\r\nPossibilities:\r\n1. Don't change that assembly (all assemblies?) away from netstandard2.0\r\n2. Build a netstandard2.0 version of the ref assembly for our various assemblies and provide that to the compiler instead of the real implementation assemblies.\r\n\r\nThoughts?",
        "createdAt": "2021-06-11T20:53:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Don't change that assembly (all assemblies?) away from netstandard2.0\r\n\r\nSeems like a reasonable thing to try. All assemblies seems opposed to the whole idea behind the PR though\r\n\r\n> Build a netstandard2.0 version of the ref assembly for our various assemblies and provide that to the compiler instead of the real implementation assemblies.\r\n\r\nDoes `<PackageDownload>` not accomplish this for us? I'm confused about that so I'll brain dump. We added a `PackageDownload` of netstandard.dll because we needed the ref assemblies. You're suggesting we create a `netstandard2.0` ref assembly for `Microsoft.Build.Tasks.Core.dll`? Is that so different from keeping `Microsoft.Build.Tasks.Core.dll` with the `netstandard2.0` TF?",
        "createdAt": "2021-06-11T23:10:07Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> All assemblies seems opposed to the whole idea behind the PR though\r\n\r\nYeah, I'm worried we didn't fully understand the implications.\r\n\r\n> We added a `PackageDownload` of netstandard.dll because we needed the ref assemblies.\r\n\r\nCorrect. That gets us the assembly to put in our output package even though it's not referenced for us automatically (because we now autoreference .NET 6 stuff).\r\n\r\n> You're suggesting we create a `netstandard2.0` ref assembly for `Microsoft.Build.Tasks.Core.dll`? Is that so different from keeping `Microsoft.Build.Tasks.Core.dll` with the `netstandard2.0` TF?\r\n\r\nYeah, it's pretty different. Leaving the reference as `netstandard2.0` means we can't make use of any new API surface in .NET Core 2.1+ and may miss out on performance optimizations that could be used with the higher target. Building a new ref assembly means we can't use any new types in our public interface, but means our internal implementations can do whatever we want.",
        "createdAt": "2021-06-14T14:02:17Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Chatted with Rainer since the [aliased culture issue](https://github.com/dotnet/msbuild/issues/3897) is becoming more relevant. \r\n\r\nHere's an idea of how we can move forward:\r\n\r\n1. Change the way we do breaking change public API. Use roslyn\r\nanalyzers\r\n2. Add new target for the `netstandard2.0` case that doesn't actually compile. Instead, use reference only\r\ncompilation.\r\n3. Complete the transition to net6.0\r\n\r\n@rainersigwald will be doing steps 1 and 2 before I take over 3 again.",
        "createdAt": "2021-11-04T21:06:20Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Current status on this: I get passing local builds only after modifying the `microsoft.codeanalysis.collections` package locally (see [this diff](https://github.com/dotnet/roslyn/pull/57665/files#diff-1ed817610d2799fede47de6956cf89cc436b14077236dd5da96ef22d67b10c75L1113)). There's a PR in the works for the package to be fixed here: https://github.com/dotnet/roslyn/pull/57665\r\n\r\nUntil then, I can only run tests locally.",
        "createdAt": "2022-01-18T22:24:17Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Narrowing down the current test failure, there seems to be something up RoslynCodeTaskFactory. The strange thing is I can repro it with _mostly_ official binaries.\r\n\r\nOriginal failing command in a binlog:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\dotnet.exe C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\Roslyn\\bincore\\csc.dll /noconfig /reference:\"C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App\\6.0.1\\System.Linq.dll\" /reference:\"C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App\\6.0.1\\System.Runtime.dll\" /reference:\"C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App\\6.0.1\\System.Private.CoreLib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.101\\Microsoft.Build.Framework.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.101\\Microsoft.Build.Utilities.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.101\\ref\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.101\\ref\\netstandard.dll\" /deterministic+ /nologo /optimize- /target:Library /out:C:\\Users\\bevillal\\AppData\\Local\\Temp\\unu4prvn.mve.dll C:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpAC27.tmp /nostdlib+ \r\n```\r\n\r\n<img width=\"787\" alt=\"image\" src=\"https://user-images.githubusercontent.com/4691428/150032679-6f63f694-2837-47a1-b7a0-24e2ac98e2fe.png\">\r\n\r\nAt first I figured it was the Microsoft.Build.Tasks.Core.dll in the bootstrap folder that has something borked in its taskfactory logic. So I swapped the path for the official one in my 6.0.100 sdk and I still get the issue.\r\n\r\n\r\nRepro command (substituting most dll's with official dll's):\r\n```\r\nC:\\src\\git\\msbuild>\"C:\\Program Files\\dotnet\\dotnet.exe\" \"C:\\Program Files\\dotnet\\sdk\\6.0.101\\Roslyn\\bincore\\csc.dll\" /noconfig /reference:\"C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App\\6.0.1\\System.Linq.dll\" /reference:\"C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App\\6.0.1\\System.Runtime.dll\" /reference:\"C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App\\6.0.1\\System.Private.CoreLib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.101\\Microsoft.Build.Framework.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.101\\Microsoft.Build.Utilities.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.101\\ref\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.101\\ref\\netstandard.dll\" /deterministic+ /nologo /optimize- /target:Library /out:C:\\Users\\bevillal\\AppData\\Local\\Temp\\unu4prvn.mve.dll C:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpAC27.tmp /nostdlib+\r\nerror CS0518: Predefined type 'System.Void' is not defined or imported\r\nerror CS0518: Predefined type 'System.Boolean' is not defined or imported\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpAC27.tmp(25,24): error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpAC27.tmp(29,13): error CS0518: Predefined type 'System.Void' is not defined or imported\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpAC27.tmp(34,25): error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpAC27.tmp(34,30): error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpAC27.tmp(23,17): error CS0518: Predefined type 'System.Boolean' is not defined or imported\r\n```\r\n\r\nThe tmp file being compiled contains the following:\r\n\r\n```c#\r\n//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\nnamespace InlineCode {\r\n    using Microsoft.Build.Framework;\r\n    using Microsoft.Build.Utilities;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.IO;\r\n    using System.Linq;\r\n    using System.Text;\r\n    \r\n    \r\n    public class UseCores : Microsoft.Build.Utilities.Task {\r\n        \r\n        private bool _Success = true;\r\n        \r\n        public virtual bool Success {\r\n            get {\r\n                return _Success;\r\n            }\r\n            set {\r\n                _Success = value;\r\n            }\r\n        }\r\n        \r\n        public override bool Execute() {\r\n\r\n    \r\n                    {\r\n                        Console.WriteLine(\"Hello!\");\r\n                    }\r\n          \r\n            return Success;\r\n        }\r\n    }\r\n}\r\n\r\n```",
        "createdAt": "2022-01-18T23:06:27Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Need to see which references are being passed to the Roslyn compiler to compile the temp snippet. Something is fishy, either mscorlib is missing, or System.Runtime or the ref assemblies for the target framework",
        "createdAt": "2022-01-18T23:11:09Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I've narrowed the repro.\r\n\r\n### When building the tmp project file with the stage1 msbuild.dll\r\n```\r\nC:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp>dotnet \"C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\MSBuild.dll\" \"C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp\" /t:BuildDeclaredReferenceViaTask /bl:dotnet-failing.binlog                                                                                                                                                                    Microsoft (R) Build Engine version 17.2.0-ci-22069-01+9863e76c9 for .NET                                                                                                                                                      Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\MSBuild.dll /bl:dotnet-failing.binlog /t:BuildDeclaredReferenceViaTask C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp\r\nBuild started 1/20/2022 3:32:00 PM.\r\nProject \"C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp\" on node 1 (BuildDeclaredReferenceViaTask target(s)).\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpCA72.tmp(22,34): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. [C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp]\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpCA72.tmp(26,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. [C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp]\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpCA72.tmp(37,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. [C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp]\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpCA72.tmp(24,17): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. [C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp]\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpCA72.tmp(35,17): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. [C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp]\r\nC:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp(84,25): error : The source file for this compilation can be found at: \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\tmpCA72.tmp\"\r\nC:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp(84,25): error MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\Microsoft.Build.Tasks.Core.dll\". \r\nC:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp(84,25): error MSB4175: This is an unhandled exception from a task factory-- PLEASE OPEN A BUG AGAINST THE TASK FACTORY OWNER. The task factory must return a value for the \"TaskType\" property.\r\nDone Building Project \"C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp5167b4454dce4629a560806419da6adb.tmp\" (BuildDeclaredReferenceViaTask target(s)) -- FAILED.\r\n```\r\n\r\nIt's specifically when passing either of these two msbuild `.dll`'s to the `csc` task:\r\n```\r\n/reference:C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\Microsoft.Build.Framework.dll\r\n/reference:C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\Microsoft.Build.Utilities.Core.dll\r\n```\r\n\r\nHere are the repro cmd calls.\r\n\r\n### When passing stage1 `Microsoft.Build.Utilities.Core.dll`\r\n```\r\nC:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp>\"C:\\Program Files\\dotnet\\dotnet.exe\" \"C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\Roslyn\\bincore\\csc.dll\" /noconfig /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.200-preview.22055.15\\Microsoft.Build.Framework.dll\" /reference:\"C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\Microsoft.Build.Utilities.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.200-preview.22055.15\\ref\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.200-preview.22055.15\\ref\\netstandard.dll\" /deterministic+ /nologo /optimize- /target:Library /out:C:\\Users\\bevillal\\AppData\\Local\\Temp\\d03fzz3n.swp.dll \"C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\2bpdkeid.mmy-failcase\\tmpF42C.tmp\" /nostdlib+  \r\n2bpdkeid.mmy-failcase\\tmpF42C.tmp(22,34): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n2bpdkeid.mmy-failcase\\tmpF42C.tmp(26,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n2bpdkeid.mmy-failcase\\tmpF42C.tmp(37,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n2bpdkeid.mmy-failcase\\tmpF42C.tmp(24,17): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n2bpdkeid.mmy-failcase\\tmpF42C.tmp(35,17): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n```\r\n\r\n### When passing stage1 `Microsoft.Build.Framework.dll`\r\n```\r\nC:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp>\"C:\\Program Files\\dotnet\\dotnet.exe\" \"C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\Roslyn\\bincore\\csc.dll\" /noconfig /reference:\"C:\\src\\git\\msbuild\\stage1\\bin\\bootstrap\\net6.0\\MSBuild\\Microsoft.Build.Framework.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.200-preview.22055.15\\Microsoft.Build.Utilities.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.200-preview.22055.15\\ref\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\6.0.200-preview.22055.15\\ref\\netstandard.dll\" /deterministic+ /nologo /optimize- /target:Library /out:C:\\Users\\bevillal\\AppData\\Local\\Temp\\d03fzz3n.swp.dll \"C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\2bpdkeid.mmy-failcase\\tmpF42C.tmp\" /nostdlib+  \r\n2bpdkeid.mmy-failcase\\tmpF42C.tmp(77,1): error CS0012: The type 'IDictionary' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n2bpdkeid.mmy-failcase\\tmpF42C.tmp(77,1): error CS0012: The type 'ValueType' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n```\r\n\r\nThe stage1 mscorlib and netstandard dll's seem to work fine.\r\n\r\n### To Repro\r\nrun `dotnet <stage1-or-bootstrapped>MSBuild.dll <pathtotmpProjectFile>.tmp /t:BuildDeclaredReferenceViaTask /bl`\r\n\r\nFor the sake of a full paper trail, here's the tmp project.\r\n```\r\n\r\n                <Project DefaultTargets='BuildSelf'>\r\n\r\n                    <ItemGroup>\r\n                        <GraphIsolationExemptReference Condition=\"'C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp590f36b51afc4fcc9d996bc3fe828182.tmp;C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmpa5f5457829094f6e94f29c5e6777dd3a.tmp'!=''\" Include=\"$([MSBuild]::Escape('C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp590f36b51afc4fcc9d996bc3fe828182.tmp;C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmpa5f5457829094f6e94f29c5e6777dd3a.tmp'))\"/>\r\n                    </ItemGroup>\r\n\r\n                    <ItemGroup>\r\n                        <ProjectReference Include='C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp590f36b51afc4fcc9d996bc3fe828182.tmp'/>\r\n                    </ItemGroup>\r\n\r\n                    <Target Name='BuildDeclaredReference'>\r\n                        <MSBuild\r\n                            Projects='C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp590f36b51afc4fcc9d996bc3fe828182.tmp'\r\n                            Targets='DeclaredReferenceTarget'\r\n                            \r\n                        />\r\n                    </Target>\r\n\r\n                    <Target Name='BuildUndeclaredReference'>\r\n                        <MSBuild\r\n                            Projects='C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmpa5f5457829094f6e94f29c5e6777dd3a.tmp'\r\n                            Targets='UndeclaredReferenceTarget'\r\n                            \r\n                        />\r\n                    </Target>\r\n\r\n                    <Target Name='BuildSelf'>\r\n                        <MSBuild\r\n                            Projects='$(MSBuildThisFile)'\r\n                            Targets='SelfTarget'\r\n                            \r\n                        />\r\n                    </Target>\r\n\r\n                    <Target Name='CallTarget'>\r\n                        <CallTarget Targets='SelfTarget'/>  \r\n                    </Target>\r\n\r\n                    <Target Name='SelfTarget'>\r\n                    </Target>\r\n\r\n                    <UsingTask TaskName='CustomMSBuild' TaskFactory='RoslynCodeTaskFactory' AssemblyFile='$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll'>\r\n                        <ParameterGroup>\r\n                          <Projects ParameterType='Microsoft.Build.Framework.ITaskItem[]' Required='true' />\r\n                          <Targets ParameterType='Microsoft.Build.Framework.ITaskItem[]' Required='true' />\r\n                        </ParameterGroup>\r\n                        <Task>\r\n                          <Code Type='Fragment' Language='cs'>\r\n                    <![CDATA[\r\n\r\nvar projects = new string[Projects.Length];\r\nvar globalProperties = new IDictionary[Projects.Length];\r\nvar toolsVersions = new string[Projects.Length];\r\n\r\nfor (var i = 0; i < Projects.Length; i++)\r\n{\r\n  projects[i] = Projects[i].ItemSpec;\r\n  globalProperties[i] = new Dictionary<string, string>();\r\n  toolsVersions[i] = \"Current\";\r\n}\r\n\r\nvar targets = new string[Targets.Length];\r\nfor (var i = 0; i < Targets.Length; i++)\r\n{\r\n  targets[i] = Targets[i].ItemSpec;\r\n}\r\n\r\nBuildEngine5.BuildProjectFilesInParallel(\r\n  projects,\r\n  targets,\r\n  globalProperties,\r\n  null,\r\n  toolsVersions,\r\n  false,\r\n  false\r\n  );\r\n]]>\r\n                          </Code>\r\n                        </Task>\r\n                    </UsingTask>\r\n\r\n                    <Target Name='BuildDeclaredReferenceViaTask'>\r\n                        <CustomMSBuild Projects='C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmp590f36b51afc4fcc9d996bc3fe828182.tmp' Targets='DeclaredReferenceTarget'/>\r\n                    </Target>\r\n\r\n                    <Target Name='BuildUndeclaredReferenceViaTask'>\r\n                        <CustomMSBuild Projects='C:\\Users\\bevillal\\OneDrive - Microsoft\\Desktop\\temp\\tmpa5f5457829094f6e94f29c5e6777dd3a.tmp' Targets='UndeclaredReferenceTarget'/>\r\n                    </Target>\r\n                </Project>\r\n```",
        "createdAt": "2022-01-20T23:33:08Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "ah, that'd explain it: we need to get the netstandard2.0 ref assemblies working and pass them instead of our impls OR pass runtime ref assemblies for the current runtime (I don't know how to get those easily but there might be a nice way)",
        "createdAt": "2022-01-21T14:46:13Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Latest status:\r\n\r\nFigured out build logic to get Microsoft.Build.Tasks to build a netstandard2.0 version of M.B.Framework and M.B.Utilities and dump them in bin/net6.0/ref for M.B.Tasks. This way RoslynTaskFactory can find the right ref assemblies and not fail outright.\r\n\r\nHere's a dump of the latest test failures (only on net472, net6.0 passes I think)\r\n\r\n```\r\nAssemblies Run\r\nC:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\net472\\Microsoft.Build.Tasks.UnitTests.DLL\r\nSummary\r\nTests run: 2138 \u2014 Failures: 2, Skipped: 26, Run time: 115.189s, Finished: 01/25/2022 16:58:45\r\n\r\nFailed tests\r\n1.0389342s\u2718 Microsoft.Build.UnitTests.PortableTasks_Tests.TestDesktopMSBuildShouldRunPortableTask\r\nShouldly.ShouldAssertException : successfulExit\\n    should be\\nTrue\\n    but was\\nFalse\\n\\nAdditional Info:\\n    Desktop MSBuild failed to execute the portable task\r\n   at Shouldly.ShouldBeBooleanExtensions.ShouldBeTrue(Boolean actual, Func`1 customMessage)\r\n   at Shouldly.ShouldBeBooleanExtensions.ShouldBeTrue(Boolean actual, String customMessage)\r\n   at Microsoft.Build.UnitTests.PortableTasks_Tests.RunMSBuildOnProjectWithPortableTaskAndAssertOutput(Boolean useDesktopMSBuild) in C:\\src\\git\\msbuild\\src\\Tasks.UnitTests\\PortableTasks_Tests.cs:line 78\r\n   at Microsoft.Build.UnitTests.PortableTasks_Tests.TestDesktopMSBuildShouldRunPortableTask() in C:\\src\\git\\msbuild\\src\\Tasks.UnitTests\\PortableTasks_Tests.cs:line 37\r\nOutput:\r\nCopied C:\\src\\git\\msbuild\\artifacts\\bin\\Samples\\PortableTask\\Debug\\net6.0\\PortableTask.deps.json to C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\PortableTask.deps.json\r\nCopied C:\\src\\git\\msbuild\\artifacts\\bin\\Samples\\PortableTask\\Debug\\net6.0\\PortableTask.dll to C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\PortableTask.dll\r\nCopied C:\\src\\git\\msbuild\\artifacts\\bin\\Samples\\PortableTask\\Debug\\net6.0\\portableTaskTest.proj to C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj\r\n<Project ToolsVersion=\"12.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  \r\n  <PropertyGroup>\r\n    <AssemblyPath Condition=\"'$(AssemblyPath)' == ''\">PortableTask.dll</AssemblyPath>\r\n  </PropertyGroup>\r\n  \r\n  <UsingTask TaskName=\"ShowItems\" AssemblyFile=\"$(AssemblyPath)\"/>\r\n  <ItemGroup>\r\n    <TestItems Include=\"$(MSBuildBinPath)\\**\\Microsoft.Build.*.dll\"/>\r\n  </ItemGroup>\r\n  <Target Name=\"Build\">\r\n    <Message Text=\"Assemblies collected from : $(MSBuildBinPath)\" Importance=\"high\"/>\r\n    <Message Text=\"Loading task from: $(AssemblyPath)\" Importance=\"high\"/>\r\n    <ShowItems Items=\"@(TestItems)\"/>\r\n    <Error Message=\"No files found in $(MSBuildBinPath)\"\r\n           Condition=\"'@(TestItems)' == ''\" />\r\n  </Target>\r\n</Project>\r\n\r\nBuilding project C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj\r\nExecuting [C:\\WINDOWS\\system32\\cmd.exe /D /C \"msbuild C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj\"]\r\n==== OUTPUT ====\r\nMicrosoft (R) Build Engine version 17.2.0-dev-22075-01+c927db530 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 1/25/2022 4:57:50 PM.\r\nProject \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj\" on node 1 (default targets).\r\nBuild:\r\n  Assemblies collected from : C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\net472\r\n  Loading task from: PortableTask.dll\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: The \"ShowItems\" task failed unexpectedly.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: This is an unhandled exception from a task -- PLEASE OPEN A BUG AGAINST THE TASK OWNER.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: System.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: File name: 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018:    at PortableTask.ShowItems.Execute()\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\TaskExecutionHost\\TaskExecutionHost.cs:line 565\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\RequestBuilder\\TaskBuilder.cs:line 809\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: \r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: Assembly manager loaded from:  C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\clr.dll\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: Running under executable  C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\net472\\MSBuild.exe\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: --- A detailed error log follows. \r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: \r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: === Pre-bind state information ===\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: DisplayName = System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018:  (Fully-specified)\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Appbase = file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Initial PrivatePath = NULL\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: Calling assembly : PortableTask, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: ===\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: This bind starts in LoadFrom load context.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: WRN: Native image will not be probed in LoadFrom context. Native image will only be probed in default load context, like with Assembly.Load().\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Using application configuration file: C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\net472\\MSBuild.exe.Config\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Using host configuration file: \r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Post-policy reference: System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/System.Runtime.DLL.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/System.Runtime/System.Runtime.DLL.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/System.Runtime.EXE.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/System.Runtime/System.Runtime.EXE.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/Users/bevillal/AppData/Local/Temp/sywqf5oo.nvb/Temporarya6fcdaa7e63a4e338c0c69e9f48e352b/System.Runtime.DLL.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/Users/bevillal/AppData/Local/Temp/sywqf5oo.nvb/Temporarya6fcdaa7e63a4e338c0c69e9f48e352b/System.Runtime/System.Runtime.DLL.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/Users/bevillal/AppData/Local/Temp/sywqf5oo.nvb/Temporarya6fcdaa7e63a4e338c0c69e9f48e352b/System.Runtime.EXE.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/Users/bevillal/AppData/Local/Temp/sywqf5oo.nvb/Temporarya6fcdaa7e63a4e338c0c69e9f48e352b/System.Runtime/System.Runtime.EXE.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: \r\nDone Building Project \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj\" (default targets) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n\"C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj\" (default target) (1) ->\r\n(Build target) -> \r\n  C:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: The \"ShowItems\" task failed unexpectedly.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: This is an unhandled exception from a task -- PLEASE OPEN A BUG AGAINST THE TASK OWNER.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: System.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: File name: 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018:    at PortableTask.ShowItems.Execute()\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\TaskExecutionHost\\TaskExecutionHost.cs:line 565\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\RequestBuilder\\TaskBuilder.cs:line 809\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: \r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: Assembly manager loaded from:  C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\clr.dll\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: Running under executable  C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\net472\\MSBuild.exe\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: --- A detailed error log follows. \r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: \r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: === Pre-bind state information ===\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: DisplayName = System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018:  (Fully-specified)\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Appbase = file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Initial PrivatePath = NULL\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: Calling assembly : PortableTask, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: ===\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: This bind starts in LoadFrom load context.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: WRN: Native image will not be probed in LoadFrom context. Native image will only be probed in default load context, like with Assembly.Load().\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Using application configuration file: C:\\src\\git\\msbuild\\artifacts\\bin\\Microsoft.Build.Tasks.UnitTests\\Debug\\net472\\MSBuild.exe.Config\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Using host configuration file: \r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Post-policy reference: System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/System.Runtime.DLL.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/System.Runtime/System.Runtime.DLL.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/System.Runtime.EXE.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/src/git/msbuild/artifacts/bin/Microsoft.Build.Tasks.UnitTests/Debug/net472/System.Runtime/System.Runtime.EXE.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/Users/bevillal/AppData/Local/Temp/sywqf5oo.nvb/Temporarya6fcdaa7e63a4e338c0c69e9f48e352b/System.Runtime.DLL.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/Users/bevillal/AppData/Local/Temp/sywqf5oo.nvb/Temporarya6fcdaa7e63a4e338c0c69e9f48e352b/System.Runtime/System.Runtime.DLL.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/Users/bevillal/AppData/Local/Temp/sywqf5oo.nvb/Temporarya6fcdaa7e63a4e338c0c69e9f48e352b/System.Runtime.EXE.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: LOG: Attempting download of new URL file:///C:/Users/bevillal/AppData/Local/Temp/sywqf5oo.nvb/Temporarya6fcdaa7e63a4e338c0c69e9f48e352b/System.Runtime/System.Runtime.EXE.\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\sywqf5oo.nvb\\Temporarya6fcdaa7e63a4e338c0c69e9f48e352b\\portableTaskTest.proj(14,5): error MSB4018: \r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.50\r\n```",
        "createdAt": "2022-01-26T01:07:29Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "All tests are passing locally, waiting on https://github.com/dotnet/roslyn/pull/57665 to see if CI passes.",
        "createdAt": "2022-01-27T00:47:34Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2022-02-03T23:41:08Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2022-02-03T23:41:18Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "Latest status: Cleaned up all of the #ifdefs around including Runtime.Versioning and it looks a lot better (thanks @rainersigwald!) Currently trying to pack the ns2.0 assemblies nicely in a `ref/` folder in the output nuget package. Hoping for an email from the nuget DL \ud83e\udd1e",
        "createdAt": "2022-02-09T00:20:03Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "the nuget package finally looks right:\r\n<img width=\"512\" alt=\"image\" src=\"https://user-images.githubusercontent.com/4691428/153314815-0ae1c78b-b300-4ded-a41e-ff1204413cfb.png\">\r\n\r\nthough we **do** need to `NoWarn` out `NU5131` because https://github.com/NuGet/Home/issues/8684. \r\n\r\nContext from @zivkan \r\n> The nuspec <references> node is not modifyable/generated by our Pack target, so in order to comply with the NU5131 warning, you would have to create your own nuspec and tell nuget to pack that instead of a generated one ... in the meantime NoWarn NU5131",
        "createdAt": "2022-02-10T00:54:15Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Strange, I NoWarn'd out NU5131 yet we're still seeing the error:\r\n\r\n```\r\n    Successfully created package '/__w/1/s/artifacts/source-build/self/src/artifacts/packages/Release/Shipping/Microsoft.Build.17.2.0-preview-22110-01.nupkg'.\r\n    Successfully created package '/__w/1/s/artifacts/source-build/self/src/artifacts/packages/Release/Shipping/Microsoft.Build.Runtime.17.2.0-preview-22110-01.nupkg'.\r\n  /__w/1/s/.dotnet/sdk/6.0.101/Sdks/NuGet.Build.Tasks.Pack/buildCrossTargeting/NuGet.Build.Tasks.Pack.targets(221,5): error NU5131: References were found in the nuspec, but some reference assemblies were not found in both the nuspec and ref folder. Add the following reference assemblies: [/__w/1/s/artifacts/source-build/self/src/src/Tasks/Microsoft.Build.Tasks.csproj]\r\n  /__w/1/s/.dotnet/sdk/6.0.101/Sdks/NuGet.Build.Tasks.Pack/buildCrossTargeting/NuGet.Build.Tasks.Pack.targets(221,5): error NU5131: - Add Microsoft.Build.Tasks.Core.dll to the netstandard2.0 reference group in the nuspec [/__w/1/s/artifacts/source-build/self/src/src/Tasks/Microsoft.Build.Tasks.csproj]\r\n  /__w/1/s/.dotnet/sdk/6.0.101/Sdks/NuGet.Build.Tasks.Pack/buildCrossTargeting/NuGet.Build.Tasks.Pack.targets(221,5): error NU5131: - Add Microsoft.Build.Tasks.Core.xml to the netstandard2.0 reference group in the nuspec [/__w/1/s/artifacts/source-build/self/src/src/Tasks/Microsoft.Build.Tasks.csproj]\r\n  /__w/1/s/.dotnet/sdk/6.0.101/Sdks/NuGet.Build.Tasks.Pack/buildCrossTargeting/NuGet.Build.Tasks.Pack.targets(221,5): error NU5131:  [/__w/1/s/artifacts/source-build/self/src/src/Tasks/Microsoft.Build.Tasks.csproj]\r\n##[error].dotnet/sdk/6.0.101/Sdks/NuGet.Build.Tasks.Pack/buildCrossTargeting/NuGet.Build.Tasks.Pack.targets(221,5): error NU5131: (NETCORE_ENGINEERING_TELEMETRY=Build) References were found in the nuspec, but some reference assemblies were not found in both the nuspec and ref folder. Add the following reference assemblies:\r\n- Add Microsoft.Build.Tasks.Core.dll to the netstandard2.0 reference group in the nuspec\r\n- Add Microsoft.Build.Tasks.Core.xml to the netstandard2.0 reference group in the nuspec\r\n\r\n```\r\n\r\nNote this doesn't fail locally.",
        "createdAt": "2022-02-10T01:05:48Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "The last test error is with `VerifyDTDProcessingIsDisabled2`, and I have no idea why it's failing:\r\n```\r\n Microsoft.Build.UnitTests.Evaluation.Evaluator_Tests.VerifyDTDProcessingIsDisabled2\r\nShouldly.ShouldAssertException : _httpListenerThreadException\\n    should be null but was\\nSystem.Net.HttpListenerException (0x80004005): The process cannot access the file because it is being used by another process\\r\\n   at System.Net.HttpListener.AddAllPrefixes()\\r\\n   at System.Net.HttpListener.Start()\\r\\n   at Microsoft.Build.UnitTests.Evaluation.Evaluator_Tests.HttpServerThread() in D:\\\\a\\\\1\\\\s\\\\src\\\\Build.UnitTests\\\\Evaluation\\\\Evaluator_Tests.cs:line 4845\r\n   at Shouldly.ShouldBeNullExtensions.ShouldBeNull[T](T actual, Func`1 customMessage)\r\n   at Shouldly.ShouldBeNullExtensions.ShouldBeNull[T](T actual)\r\n   at Microsoft.Build.UnitTests.Evaluation.Evaluator_Tests.VerifyDTDProcessingIsDisabled2() in D:\\a\\1\\s\\src\\Build.UnitTests\\Evaluation\\Evaluator_Tests.cs:line 4290\r\n```\r\nIt passes locally",
        "createdAt": "2022-02-10T22:04:01Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2022-02-10T22:10:30Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "rerunning in case of flaky test.",
        "createdAt": "2022-02-10T22:10:40Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2022-02-10T22:10:40Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "Good news is my exp/ build is green\r\n\r\nhttps://dev.azure.com/devdiv/DevDiv/_build/results?buildId=5739278",
        "createdAt": "2022-02-10T22:56:16Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Latest internal build \ud83e\udd1e\ud83e\udd1e\ud83e\udd1e\ud83e\udd1e\ud83e\udd1e\ud83e\udd1e\r\n\r\nhttps://dev.azure.com/devdiv/DevDiv/_build/results?buildId=5745444&view=results\r\n\r\nThis should fix the issue upstream where ns2.0 ref assemblies were getting picked up by default because ref/net472 or ref/net6.0 didn't exist. \r\n\r\nOld Microsoft.Build.Tasks.Core NuGet package size\r\nWith ns2.0 ref assembly: 1.74MB\r\n\r\nOld Microsoft.Build.Tasks.Core NuGet package size\r\nWith net472 & net6.0 ref assembly: 2.21MB",
        "createdAt": "2022-02-11T22:58:04Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2022-02-14T17:09:00Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2022-02-14T17:09:11Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "[net6.0 CI](https://github.com/dotnet/msbuild/pull/6148): \u2705\r\n[net6.0 official build](https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=5745444&view=results): \u2705\r\n[VS reference update (fixes ref/ issue in nuget package)](https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/379922): \u2705\r\n[net6.0 -> VS PR (with reference update)](https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/380160): \u2705",
        "createdAt": "2022-02-15T21:52:59Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Also works if I reference the generated nuget package locally:\r\n\r\n<img width=\"626\" alt=\"image\" src=\"https://user-images.githubusercontent.com/4691428/154164638-4233e3d3-cbe2-427b-a4d8-ec4ad3a2457c.png\">\r\n",
        "createdAt": "2022-02-15T23:04:16Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "All green: https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/383388",
        "createdAt": "2022-03-04T21:59:29Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: Looks like an unintended whitespace change.",
              "createdAt": "2021-03-02T08:52:38Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -297,9 +316,12 @@ public CustomHttpRequestException(string message, Exception inner, HttpStatusCod\n             }\n \n             public HttpStatusCode StatusCode { get; }\n+\n+\n         }\n+#endif\n \n-        private bool ShouldSkip(HttpResponseMessage response, FileInfo destinationFile)\n+private bool ShouldSkip(HttpResponseMessage response, FileInfo destinationFile)",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this get a `!MONO`?",
              "createdAt": "2021-06-10T18:04:34Z",
              "path": "src/Utilities/Microsoft.Build.Utilities.csproj",
              "diffHunk": "@@ -25,7 +25,7 @@\n     <PackageReference Include=\"System.Configuration.ConfigurationManager\" />\n   </ItemGroup>\n \n-  <ItemGroup Condition=\"'$(TargetFrameworkIdentifier)' != '.NETStandard'\">\n+  <ItemGroup Condition=\"'$(TargetFrameworkIdentifier)' == '.NETFramework'\">",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't think this should propagate quite so far. If we're going to expose the task we should expose it everywhere and emit good error messages if we hit a non-windows-compat codepath.",
              "createdAt": "2021-06-10T18:07:06Z",
              "path": "src/Tasks/SignFile.cs",
              "diffHunk": "@@ -36,6 +39,9 @@ public SignFile()\n \n         public string TimestampUrl { get; set; }\n \n+#if RUNTIME_TYPE_NETCORE\n+        [SupportedOSPlatform(\"windows\")]",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I removed it from the Execute and appreciate this new way better than how it was. I'm not sure if we should go in and log errors in other areas where I applied `SupportedOSPlatform`? I think it makes sense to keep the static SignFile methods with this attribute, at least.",
              "createdAt": "2022-02-04T23:18:58Z",
              "path": "src/Tasks/SignFile.cs",
              "diffHunk": "@@ -36,6 +39,9 @@ public SignFile()\n \n         public string TimestampUrl { get; set; }\n \n+#if RUNTIME_TYPE_NETCORE\n+        [SupportedOSPlatform(\"windows\")]",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Can you add a feature flag that's turned on in our core builds only that's like `FEATURE_FASTSPAN` and switch these to\r\n\r\n```suggestion\r\n#if FEATURE_FASTSPAN\r\n```",
              "createdAt": "2021-06-10T18:09:51Z",
              "path": "src/StringTools/InternableString.cs",
              "diffHunk": "@@ -96,7 +96,7 @@ public bool MoveNext()\n         /// </summary>\n         private readonly ReadOnlySpan<char> _inlineSpan;\n \n-#if NETSTANDARD\n+#if RUNTIME_TYPE_NETCORE",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I think a better fix for this would be changing the definition of handle above to `StringWeakHandle?`",
              "createdAt": "2021-06-10T18:10:41Z",
              "path": "src/StringTools/WeakStringCache.Concurrent.cs",
              "diffHunk": "@@ -37,7 +37,7 @@ public string GetOrCreateEntry(ref InternableString internable, out bool cacheHi\n \n             // Get the existing handle from the cache and lock it while we're dereferencing it to prevent a race with the Scavenge\n             // method running on another thread and freeing the handle from underneath us.\n-            if (_stringsByHashCode.TryGetValue(hashCode, out handle))\n+            if (_stringsByHashCode.TryGetValue(hashCode, out handle!))",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What's up with this? Add a comment?",
              "createdAt": "2021-06-10T18:11:09Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -218,17 +222,30 @@ private static bool IsRetriable(Exception exception, out Exception actualExcepti\n             }\n \n             // Some HttpRequestException have an inner exception that has the real error\n-            if (actualException is HttpRequestException httpRequestException && httpRequestException.InnerException != null)\n+            if (actualException is HttpRequestException httpRequestException)\n             {\n-                actualException = httpRequestException.InnerException;\n+                if (httpRequestException.InnerException != null)\n+                {\n+                    actualException = httpRequestException.InnerException;\n+\n+                    // An IOException inside of a HttpRequestException means that something went wrong while downloading\n+                    if (actualException is IOException)\n+                    {\n+                        return true;\n+                    }\n+                }\n \n-                // An IOException inside of a HttpRequestException means that something went wrong while downloading\n-                if (actualException is IOException)\n+#if RUNTIME_TYPE_NETCORE\n+                switch (httpRequestException.StatusCode)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "It's slightly cleaner now, though I hate curly braces in #if's. \r\n\r\nI've also added comments for context.",
              "createdAt": "2022-02-04T20:47:00Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -218,17 +222,30 @@ private static bool IsRetriable(Exception exception, out Exception actualExcepti\n             }\n \n             // Some HttpRequestException have an inner exception that has the real error\n-            if (actualException is HttpRequestException httpRequestException && httpRequestException.InnerException != null)\n+            if (actualException is HttpRequestException httpRequestException)\n             {\n-                actualException = httpRequestException.InnerException;\n+                if (httpRequestException.InnerException != null)\n+                {\n+                    actualException = httpRequestException.InnerException;\n+\n+                    // An IOException inside of a HttpRequestException means that something went wrong while downloading\n+                    if (actualException is IOException)\n+                    {\n+                        return true;\n+                    }\n+                }\n \n-                // An IOException inside of a HttpRequestException means that something went wrong while downloading\n-                if (actualException is IOException)\n+#if RUNTIME_TYPE_NETCORE\n+                switch (httpRequestException.StatusCode)",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "no need to pass SetPlatform netstandard2.0 because PortableTask now only builds as 2.0.\r\n\r\nWhat's weird is that PortableTask used to have TargetFramework**s** ns2.0 instead of `TargetFramework`.",
              "createdAt": "2022-02-04T19:49:42Z",
              "path": "src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj",
              "diffHunk": "@@ -25,7 +25,7 @@\n     <ProjectReference Include=\"..\\Tasks\\Microsoft.Build.Tasks.csproj\" />\n     <ProjectReference Include=\"..\\Utilities\\Microsoft.Build.Utilities.csproj\" />\n     <ProjectReference Include=\"..\\Xunit.NetCore.Extensions\\Xunit.NetCore.Extensions.csproj\" />\n-    <ProjectReference Include=\"..\\Samples\\PortableTask\\PortableTask.csproj\" ReferenceOutputAssembly=\"false\" Private=\"false\" SetTargetFramework=\"TargetFramework=netstandard2.0\" />\n+    <ProjectReference Include=\"..\\Samples\\PortableTask\\PortableTask.csproj\" ReferenceOutputAssembly=\"false\" Private=\"false\" />",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Before that, it used to multitarget \ud83e\udd37\ud83c\udffb\u200d\u2642\ufe0f",
              "createdAt": "2022-02-07T20:06:25Z",
              "path": "src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj",
              "diffHunk": "@@ -25,7 +25,7 @@\n     <ProjectReference Include=\"..\\Tasks\\Microsoft.Build.Tasks.csproj\" />\n     <ProjectReference Include=\"..\\Utilities\\Microsoft.Build.Utilities.csproj\" />\n     <ProjectReference Include=\"..\\Xunit.NetCore.Extensions\\Xunit.NetCore.Extensions.csproj\" />\n-    <ProjectReference Include=\"..\\Samples\\PortableTask\\PortableTask.csproj\" ReferenceOutputAssembly=\"false\" Private=\"false\" SetTargetFramework=\"TargetFramework=netstandard2.0\" />\n+    <ProjectReference Include=\"..\\Samples\\PortableTask\\PortableTask.csproj\" ReferenceOutputAssembly=\"false\" Private=\"false\" />",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Context: This constructor doesn't exist in the framework flavor",
              "createdAt": "2022-02-04T20:20:00Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -150,7 +150,11 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     {\n                         // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n                         // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE\n+                        throw new HttpRequestException(e.Message, e.InnerException, response.StatusCode);",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Make this comment permanent IMO",
              "createdAt": "2022-02-07T20:11:09Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -150,7 +150,11 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     {\n                         // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n                         // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE\n+                        throw new HttpRequestException(e.Message, e.InnerException, response.StatusCode);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "context\r\n\r\ncore: warning when we don't pass the cancellationtoken\r\n\r\nframework: ReadStreamAsync doesn't have an overload that takes the token",
              "createdAt": "2022-02-04T20:21:43Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -181,7 +185,11 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                         {\n                             Log.LogMessageFromResources(MessageImportance.High, \"DownloadFile.Downloading\", SourceUrl, destinationFile.FullName, response.Content.Headers.ContentLength);\n \n+#if NET5_0_OR_GREATER\n+                            using (Stream responseStream = await response.Content.ReadAsStreamAsync(cancellationToken).ConfigureAwait(false))",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Could use a sanitycheck on these. https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.sha1?view=net-6.0",
              "createdAt": "2022-02-04T22:16:21Z",
              "path": "src/Tasks/ManifestUtil/Util.cs",
              "diffHunk": "@@ -226,11 +229,11 @@ private static void GetFileInfoImpl(string path, string targetFrameWorkVersion,\n \n                 if (string.IsNullOrEmpty(targetFrameWorkVersion) || CompareFrameworkVersions(targetFrameWorkVersion, Constants.TargetFrameworkVersion40) <= 0)\n                 {\n-                    hashAlg = new SHA1CryptoServiceProvider();\n+                    hashAlg = SHA1.Create(\"System.Security.Cryptography.SHA1CryptoServiceProvider\");",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "cc @sujitnayak (most of the changes in this file)",
              "createdAt": "2022-02-04T22:16:59Z",
              "path": "src/Tasks/ManifestUtil/mansign2.cs",
              "diffHunk": "@@ -273,7 +277,7 @@ private void init()\n                                Sha256SignatureMethodUri);\n \n #if RUNTIME_TYPE_NETCORE\n-            CryptoConfig.AddAlgorithm(typeof(SHA256Managed),\n+            CryptoConfig.AddAlgorithm(typeof(SHA256),",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I remember getting issues about \"m.b.framework.csproj doesn't have a target for netstandard2.0\" so I had to add `netstandard2.0` in `TargetFrameworks`. Do I _actually_ need to do that or can I remove `netstandard2.0` from each project's `TargetFrameworks` and let this handle itself? \r\n\r\nMy assumption is I also need `netstandard2.0` in `TargetFrameworks` for nuget or something.\r\n\r\ncc @rainersigwald ",
              "createdAt": "2022-02-04T22:22:24Z",
              "path": "src/Tasks/Microsoft.Build.Tasks.csproj",
              "diffHunk": "@@ -957,6 +957,9 @@\n     <Reference Include=\"System.Xaml\" />\n   </ItemGroup>\n   <ItemGroup>\n+    <!-- Force M.B.Framework & Utilities to build as netstandard2.0 so the RoslynCodeTaskFactory can find them. -->\n+    <ProjectReference Include=\"..\\Framework\\Microsoft.Build.Framework.csproj\" SetTargetFramework=\"TargetFramework=netstandard2.0\" OutputItemType=\"NetstandardRefAssemblies\" />",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I think you figured this out but yeah you need it in the TargetFrameworks for all package projects.",
              "createdAt": "2022-02-11T21:03:06Z",
              "path": "src/Tasks/Microsoft.Build.Tasks.csproj",
              "diffHunk": "@@ -957,6 +957,9 @@\n     <Reference Include=\"System.Xaml\" />\n   </ItemGroup>\n   <ItemGroup>\n+    <!-- Force M.B.Framework & Utilities to build as netstandard2.0 so the RoslynCodeTaskFactory can find them. -->\n+    <ProjectReference Include=\"..\\Framework\\Microsoft.Build.Framework.csproj\" SetTargetFramework=\"TargetFramework=netstandard2.0\" OutputItemType=\"NetstandardRefAssemblies\" />",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Looking in your new versions of the packages, the `netstandard2.0` folder is in `lib/`. I think it needs to move to `ref/` to accurately represent the current state: you can _build_ for `netstandard2.0`, but you can't _run_ on it.",
              "createdAt": "2022-02-07T19:59:35Z",
              "path": "src/Framework/Microsoft.Build.Framework.csproj",
              "diffHunk": "@@ -1,6 +1,6 @@\n <Project Sdk=\"Microsoft.NET.Sdk\">\n   <PropertyGroup>\n-    <TargetFrameworks>$(LibraryTargetFrameworks)</TargetFrameworks>\n+    <TargetFrameworks>$(LibraryTargetFrameworks);netstandard2.0</TargetFrameworks>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I expected to see `netstandard2.0` here, since it should be in all of our packages. Is it better to reference it individually? Why?",
              "createdAt": "2022-02-07T20:00:59Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -27,7 +27,8 @@\n     <Platforms>AnyCPU;x64</Platforms>\n \n     <!-- Defaults for target frameworks and architecture -->\n-    <LibraryTargetFrameworks>$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks>$(FullFrameworkTFM);net6.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks Condition=\"'$(DotNetBuildFromSource)' == 'true'\">net6.0</LibraryTargetFrameworks>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I was under the impression that we only needed M.B.Framework & Utilities to generate ref assemblies for the RoslynCodeTaskFactory.  \r\n\r\nRemembering https://github.com/dotnet/msbuild/issues/6032#issuecomment-1011347015 now. All assemblies to ship to that `ref/` folder, not just M.B.F and U. I was treating them as separate problems. thanks for catching this one",
              "createdAt": "2022-02-08T01:48:31Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -27,7 +27,8 @@\n     <Platforms>AnyCPU;x64</Platforms>\n \n     <!-- Defaults for target frameworks and architecture -->\n-    <LibraryTargetFrameworks>$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks>$(FullFrameworkTFM);net6.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks Condition=\"'$(DotNetBuildFromSource)' == 'true'\">net6.0</LibraryTargetFrameworks>",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I'm still confused. Why should we ship netstandard2.0 ref assemblies for anything other than M.B.F and M.B.U? Those are the two TFTomSun needed for task authoring, right?",
              "createdAt": "2022-02-08T17:00:10Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -27,7 +27,8 @@\n     <Platforms>AnyCPU;x64</Platforms>\n \n     <!-- Defaults for target frameworks and architecture -->\n-    <LibraryTargetFrameworks>$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks>$(FullFrameworkTFM);net6.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks Condition=\"'$(DotNetBuildFromSource)' == 'true'\">net6.0</LibraryTargetFrameworks>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "https://github.com/dotnet/msbuild/issues/6032#issuecomment-886212763\r\n\r\nThere are folks who need ns2.0 from our other projects. I'm not sure about the other packages, but this seems like the right move for now.",
              "createdAt": "2022-02-08T23:28:16Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -27,7 +27,8 @@\n     <Platforms>AnyCPU;x64</Platforms>\n \n     <!-- Defaults for target frameworks and architecture -->\n-    <LibraryTargetFrameworks>$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks>$(FullFrameworkTFM);net6.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks Condition=\"'$(DotNetBuildFromSource)' == 'true'\">net6.0</LibraryTargetFrameworks>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this not redundant? Shouldn't one supersede the other?",
              "createdAt": "2022-02-07T20:02:20Z",
              "path": "src/Framework/NativeMethods.cs",
              "diffHunk": "@@ -713,6 +716,9 @@ internal static bool IsMono\n     /// <summary>\n     /// Gets a flag indicating if we are running under some version of Windows\n     /// </summary>\n+#if RUNTIME_TYPE_NETCORE && NET5_0_OR_GREATER",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Where is this property defined? Does it point to the correct file even when building in VS or with an SDK version different from what is downloaded?",
              "createdAt": "2022-02-07T20:03:57Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -20,7 +20,7 @@\n   <ItemGroup>\n     <!-- This file is needed so the dotnet CLI knows how to map preview SDK versions to tfms (because tfms do not have preview information on them) -->\n     <!-- This is because according to semver, 2.1.0-preview is not >= 2.1.0 -->\n-    <Content Include=\"$(RepoRoot).dotnet\\sdk\\$(DotNetCliVersion)\\Microsoft.NETCoreSdk.BundledVersions.props\" CopyToOutputDirectory=\"PreserveNewest\" />\n+    <Content Include=\"$(NETCoreSdkBundledVersionsProps)\" CopyToOutputDirectory=\"PreserveNewest\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "(note this change was made a WHILE ago)\r\n\r\n\r\n\r\nThe context I remember is that `$(RepoRoot).dotnet\\sdk\\$(DotNetCliVersion)\\Microsoft.NETCoreSdk.BundledVersions.props` was failing and `NETCoreSdkBundledVersionsProps` _looked similar_ to what  resolved to, so I went with the full path and it fixed the build issue. \r\n\r\n> Where is this property defined?\r\n\r\nHere's how it's defined in https://github.com/dotnet/sdk/blob/2ec45ddf780cdb751cac4e1920d3a4e9e89dc284/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.DefaultItems.props#L14-L16\r\n\r\n```\r\n  <PropertyGroup Condition=\"'$(NETCoreSdkBundledVersionsProps)' == ''\">\r\n    <NETCoreSdkBundledVersionsProps>$(MSBuildThisFileDirectory)..\\..\\..\\Microsoft.NETCoreSdk.BundledVersions.props</NETCoreSdkBundledVersionsProps>\r\n  </PropertyGroup>\r\n```\r\n\r\nWeird thing is that a clean (`git -xdf`) build passes with the old line of code now. It may have been something in my setup?\r\n\r\n\r\n\r\n@dsplaisted might know more. Any reason we should or shouldn't be using `NETCoreSdkBundledVersionsProps`?",
              "createdAt": "2022-02-08T01:38:59Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -20,7 +20,7 @@\n   <ItemGroup>\n     <!-- This file is needed so the dotnet CLI knows how to map preview SDK versions to tfms (because tfms do not have preview information on them) -->\n     <!-- This is because according to semver, 2.1.0-preview is not >= 2.1.0 -->\n-    <Content Include=\"$(RepoRoot).dotnet\\sdk\\$(DotNetCliVersion)\\Microsoft.NETCoreSdk.BundledVersions.props\" CopyToOutputDirectory=\"PreserveNewest\" />\n+    <Content Include=\"$(NETCoreSdkBundledVersionsProps)\" CopyToOutputDirectory=\"PreserveNewest\" />",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I don't love depending on the SDK's property for this because the output will depend on the SDK used to build the project, which will change over time due to factors outside the control of the repo (since we don't lock to a version in `global.json`). We do however download a locked version (Arcade does this based on our `global.json`), so referencing that should always get the same output.",
              "createdAt": "2022-02-08T15:29:11Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -20,7 +20,7 @@\n   <ItemGroup>\n     <!-- This file is needed so the dotnet CLI knows how to map preview SDK versions to tfms (because tfms do not have preview information on them) -->\n     <!-- This is because according to semver, 2.1.0-preview is not >= 2.1.0 -->\n-    <Content Include=\"$(RepoRoot).dotnet\\sdk\\$(DotNetCliVersion)\\Microsoft.NETCoreSdk.BundledVersions.props\" CopyToOutputDirectory=\"PreserveNewest\" />\n+    <Content Include=\"$(NETCoreSdkBundledVersionsProps)\" CopyToOutputDirectory=\"PreserveNewest\" />",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n  <!-- pdb publishing fails builds for reference-only assemblies -->\r\n```\r\n\r\n?",
              "createdAt": "2022-02-07T20:05:51Z",
              "path": "src/StringTools/StringTools.csproj",
              "diffHunk": "@@ -22,6 +22,11 @@\n     <AssemblyName>Microsoft.NET.StringTools.net35</AssemblyName>\n   </PropertyGroup>\n \n+  <!-- pdb publishing fails builds in the ns2.0 flavor -->",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "why empty over `null`?",
              "createdAt": "2022-02-07T20:06:51Z",
              "path": "src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs",
              "diffHunk": "@@ -76,7 +76,7 @@ public class BootstrapperBuilder : IBootstrapperBuilder\n         /// </summary>\n         public BootstrapperBuilder()\n         {\n-            _path = Util.DefaultPath;\n+            _path = NativeMethodsShared.IsWindows ? Util.DefaultPath : string.Empty;",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "fear of some code path using _path without doing null checks. the class was marked with `[SupportedOSPlatform(\"windows\")]` so this is no longer an issue.",
              "createdAt": "2022-02-08T23:31:12Z",
              "path": "src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs",
              "diffHunk": "@@ -76,7 +76,7 @@ public class BootstrapperBuilder : IBootstrapperBuilder\n         /// </summary>\n         public BootstrapperBuilder()\n         {\n-            _path = Util.DefaultPath;\n+            _path = NativeMethodsShared.IsWindows ? Util.DefaultPath : string.Empty;",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is it right to have these small-scale checks rather than apply `SupportedOSPlatform` to the whole class?",
              "createdAt": "2022-02-07T20:08:07Z",
              "path": "src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs",
              "diffHunk": "@@ -447,7 +447,10 @@ public string[] GetOutputFolders(string[] productCodes, string culture, string f\n             BuildPackages(settings, null, null, files, null);\n \n             List<string> packagePaths = new List<string>() { invariantPath };\n-            packagePaths.AddRange(Util.AdditionalPackagePaths.Select(p => Util.AddTrailingChar(p.ToLowerInvariant(), System.IO.Path.DirectorySeparatorChar)));\n+            if (NativeMethodsShared.IsWindows)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "You're right. I was treating this similar to a task which could be called regardless of OS. This scenario is best to have the attribute over the class \ud83d\udc4d",
              "createdAt": "2022-02-08T00:21:21Z",
              "path": "src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs",
              "diffHunk": "@@ -447,7 +447,10 @@ public string[] GetOutputFolders(string[] productCodes, string culture, string f\n             BuildPackages(settings, null, null, files, null);\n \n             List<string> packagePaths = new List<string>() { invariantPath };\n-            packagePaths.AddRange(Util.AdditionalPackagePaths.Select(p => Util.AddTrailingChar(p.ToLowerInvariant(), System.IO.Path.DirectorySeparatorChar)));\n+            if (NativeMethodsShared.IsWindows)",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Same q here: is this a \"class\" thing or a \"parts of it\" thing?",
              "createdAt": "2022-02-07T20:10:43Z",
              "path": "src/Tasks/BootstrapperUtil/Util.cs",
              "diffHunk": "@@ -75,6 +78,9 @@ public static CultureInfo GetCultureInfoFromString(string cultureName)\n \n         public static CultureInfo DefaultCultureInfo => System.Threading.Thread.CurrentThread.CurrentUICulture;\n \n+#if RUNTIME_TYPE_NETCORE\n+        [SupportedOSPlatform(\"windows\")]",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "This one makes more sense to condition part of it. There are ~5 methods that don't need the platform guard so I figure we can split it here.",
              "createdAt": "2022-02-08T23:32:49Z",
              "path": "src/Tasks/BootstrapperUtil/Util.cs",
              "diffHunk": "@@ -75,6 +78,9 @@ public static CultureInfo GetCultureInfoFromString(string cultureName)\n \n         public static CultureInfo DefaultCultureInfo => System.Threading.Thread.CurrentThread.CurrentUICulture;\n \n+#if RUNTIME_TYPE_NETCORE\n+        [SupportedOSPlatform(\"windows\")]",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "If this wasn't here before, why does it need it now?",
              "createdAt": "2022-02-28T23:26:34Z",
              "path": "src/Tasks/BootstrapperUtil/Util.cs",
              "diffHunk": "@@ -75,6 +78,9 @@ public static CultureInfo GetCultureInfoFromString(string cultureName)\n \n         public static CultureInfo DefaultCultureInfo => System.Threading.Thread.CurrentThread.CurrentUICulture;\n \n+#if RUNTIME_TYPE_NETCORE\n+        [SupportedOSPlatform(\"windows\")]",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "because `DefaultPath` looks into the registry, which should only be allowed on windows.\r\n\r\nanother option could be to check if `IsWindows`, then return `GetCurrentDirectory()`",
              "createdAt": "2022-03-01T19:09:07Z",
              "path": "src/Tasks/BootstrapperUtil/Util.cs",
              "diffHunk": "@@ -75,6 +78,9 @@ public static CultureInfo GetCultureInfoFromString(string cultureName)\n \n         public static CultureInfo DefaultCultureInfo => System.Threading.Thread.CurrentThread.CurrentUICulture;\n \n+#if RUNTIME_TYPE_NETCORE\n+        [SupportedOSPlatform(\"windows\")]",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I saw that, but that was true before as well, so why the change? Is this now ported to core? Does it work on *nix? Should it have an insta-fail if you try to use it on another OS?",
              "createdAt": "2022-03-01T23:32:25Z",
              "path": "src/Tasks/BootstrapperUtil/Util.cs",
              "diffHunk": "@@ -75,6 +78,9 @@ public static CultureInfo GetCultureInfoFromString(string cultureName)\n \n         public static CultureInfo DefaultCultureInfo => System.Threading.Thread.CurrentThread.CurrentUICulture;\n \n+#if RUNTIME_TYPE_NETCORE\n+        [SupportedOSPlatform(\"windows\")]",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Stylistically I'd prefer\r\n\r\n```suggestion\r\n                            using (Stream responseStream = await response.Content.ReadAsStreamAsync(\r\n#if RUNTIME_TYPE_NETCORE\r\n                                    // The overload that takes a token is available only on .NET 5+\r\n                                    cancellationToken\r\n#endif\r\n                                ).ConfigureAwait(false))\r\n```",
              "createdAt": "2022-02-07T20:13:47Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -181,7 +185,11 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                         {\n                             Log.LogMessageFromResources(MessageImportance.High, \"DownloadFile.Downloading\", SourceUrl, destinationFile.FullName, response.Content.Headers.ContentLength);\n \n+#if RUNTIME_TYPE_NETCORE\n+                            using (Stream responseStream = await response.Content.ReadAsStreamAsync(cancellationToken).ConfigureAwait(false))\n+#else\n                             using (Stream responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))\n+#endif",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "It makes it easier to tweak both versions at once rather than forgetting one.",
              "createdAt": "2022-02-08T17:45:18Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -181,7 +185,11 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                         {\n                             Log.LogMessageFromResources(MessageImportance.High, \"DownloadFile.Downloading\", SourceUrl, destinationFile.FullName, response.Content.Headers.ContentLength);\n \n+#if RUNTIME_TYPE_NETCORE\n+                            using (Stream responseStream = await response.Content.ReadAsStreamAsync(cancellationToken).ConfigureAwait(false))\n+#else\n                             using (Stream responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))\n+#endif",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n\r\n```suggestion\r\n                Log.LogErrorWithCodeFromResources(\"General.TaskRequiresWindows\", nameof(SignFile));\r\n```",
              "createdAt": "2022-02-07T20:16:21Z",
              "path": "src/Tasks/SignFile.cs",
              "diffHunk": "@@ -37,11 +37,16 @@ public SignFile()\n         public String TargetFrameworkVersion { get; set; }\n \n         public string TimestampUrl { get; set; }\n-\n+        \n         public bool DisallowMansignTimestampFallback { get; set; } = false;\n \n         public override bool Execute()\n         {\n+            if (!NativeMethodsShared.IsWindows)\n+            {\n+                Log.LogErrorWithCodeFromResources(\"General.TaskRequiresWindows\", \"SignFile\");",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    <value>MSB3096: Task \"{0}\" is only supported when building on Windows.</value>\r\n```",
              "createdAt": "2022-02-07T20:16:54Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -571,6 +571,10 @@\n     <value>MSB3094: \"{2}\" refers to {0} item(s), and \"{3}\" refers to {1} item(s). They must have the same number of items.</value>\n     <comment>{StrBegin=\"MSB3094: \"}</comment>\n   </data>\n+  <data name=\"General.TaskRequiresWindows\">\n+    <value>MSB3096: Task \"{0}\" is only supported on Windows devices.</value>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Consider defining `SupportedOSPlatformAttribute` somewhere in our own code for full framework only; then you can drop the ifdef at every use site.",
              "createdAt": "2022-02-07T20:19:14Z",
              "path": "src/Tasks/ManifestUtil/mansign2.cs",
              "diffHunk": "@@ -451,6 +460,9 @@ private static void RemoveExistingSignature(XmlDocument manifestDom)\n         /// <param name=\"useSha256\">Whether to use sha256</param>\n         /// <returns></returns>\n         [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Microsoft.Cryptographic.Standard\", \"CA5358:RSAProviderNeeds2048bitKey\", Justification = \"SHA1 is retained for compatibility reasons as an option in VisualStudio signing page and consequently in the trust manager, default is SHA2.\")]\n+#if RUNTIME_TYPE_NETCORE\n+        [SupportedOSPlatform(\"windows\")]\n+#endif",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Similar comments to above.",
              "createdAt": "2022-02-07T20:23:42Z",
              "path": "src/Utilities/README.md",
              "diffHunk": "@@ -5,3 +5,8 @@ This package contains `Microsoft.Build.Utilities.Core.dll`, which defines helper\n * [`Task`](https://docs.microsoft.com/dotnet/api/microsoft.build.utilities.task), a base class for custom tasks,\n * [`ToolTask`](https://docs.microsoft.com/dotnet/api/microsoft.build.utilities.tooltask), a base class for tasks that run a command-line tool, and\n * [`Logger`](https://docs.microsoft.com/dotnet/api/microsoft.build.utilities.logger), a base class for custom logging functionality.\n+\n+### netstandard2.0 target\n+The `netstandard2.0` target of this build is configured only to output ref assemblies, we do not ship the implementation assemblies. Please use the net6.0-targeted assemblies for .NET Core 6+ scenarios.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Any suggestions for where this should go? I kinda just shoved it here to get the fix out.",
              "createdAt": "2022-02-08T01:49:31Z",
              "path": "src/Framework/NativeMethods.cs",
              "diffHunk": "@@ -21,9 +24,27 @@\n #nullable disable\n \n namespace Microsoft.Build.Framework;\n+\n+#if NETFRAMEWORK || NETSTANDARD2_0\n+[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "New file here in Framework sounds good to me. Then you can put it in the `System.Runtime.Versioining` namespace and get rid of those ifdefs too :)\r\n\r\nPlease add doc comments that this is here for compat.",
              "createdAt": "2022-02-08T15:23:24Z",
              "path": "src/Framework/NativeMethods.cs",
              "diffHunk": "@@ -21,9 +24,27 @@\n #nullable disable\n \n namespace Microsoft.Build.Framework;\n+\n+#if NETFRAMEWORK || NETSTANDARD2_0\n+[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Nit:\r\n\r\n```suggestion\r\n#if !NET6_0_OR_GREATER\r\n```",
              "createdAt": "2022-02-08T15:25:58Z",
              "path": "src/Framework/NativeMethods.cs",
              "diffHunk": "@@ -21,9 +24,27 @@\n #nullable disable\n \n namespace Microsoft.Build.Framework;\n+\n+#if NETFRAMEWORK || NETSTANDARD2_0",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Don't produce reference assembly? Have you verified ref assemblies are still produced by netstandard2.0?",
              "createdAt": "2022-02-08T17:00:37Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -71,4 +72,13 @@\n     <!-- When targeting .NET Core, Exe and unit tests projects always use AnyCPU architecture -->\n     <RuntimeOutputPlatformTarget>AnyCPU</RuntimeOutputPlatformTarget>\n   </PropertyGroup>\n+\n+  <!-- Produce ONLY reference assemblies and SKIP roslyn analyzers for netstandard2.0 builds. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0' and '$(MSBuildProjectFile)' != 'PortableTask.csproj'\">\n+    <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>\n+    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "The naming here is misleading. `ProduceReferenceAssembly` and `ProduceOnlyReferenceAssembly` are mutually exclusive. \r\n\r\n![image](https://user-images.githubusercontent.com/4691428/153086782-b08c78b0-2f8f-417d-bf9a-e3929e0c2da5.png)",
              "createdAt": "2022-02-08T22:32:46Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -71,4 +72,13 @@\n     <!-- When targeting .NET Core, Exe and unit tests projects always use AnyCPU architecture -->\n     <RuntimeOutputPlatformTarget>AnyCPU</RuntimeOutputPlatformTarget>\n   </PropertyGroup>\n+\n+  <!-- Produce ONLY reference assemblies and SKIP roslyn analyzers for netstandard2.0 builds. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0' and '$(MSBuildProjectFile)' != 'PortableTask.csproj'\">\n+    <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>\n+    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why skip analyzers? Also, this seems like it should subsume the previous two, no?",
              "createdAt": "2022-02-08T17:01:38Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -71,4 +72,13 @@\n     <!-- When targeting .NET Core, Exe and unit tests projects always use AnyCPU architecture -->\n     <RuntimeOutputPlatformTarget>AnyCPU</RuntimeOutputPlatformTarget>\n   </PropertyGroup>\n+\n+  <!-- Produce ONLY reference assemblies and SKIP roslyn analyzers for netstandard2.0 builds. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0' and '$(MSBuildProjectFile)' != 'PortableTask.csproj'\">\n+    <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>\n+    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>\n+    <RunAnalyzersDuringBuild>false</RunAnalyzersDuringBuild>\n+    <RunAnalyzersDuringLiveAnalysis>false</RunAnalyzersDuringLiveAnalysis>\n+    <RunAnalyzers>false</RunAnalyzers>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Why keep them on for ns2.0? We just need the ref assemblies, they'd run on every project for other targetframeworks regardless.\r\n\r\n![image](https://user-images.githubusercontent.com/4691428/153087218-83dac75d-21d5-4a5f-a5ad-0391e05ec8c3.png)\r\n` <RunAnalyzersDuringLiveAnalysis Condition=\"'$(RunAnalyzers)' != ''\">$(RunAnalyzers)</RunAnalyzersDuringLiveAnalysis>`\r\n\r\nlooks like we only need `RunAnalyzers` set to false \ud83d\udc4d",
              "createdAt": "2022-02-08T22:38:16Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -71,4 +72,13 @@\n     <!-- When targeting .NET Core, Exe and unit tests projects always use AnyCPU architecture -->\n     <RuntimeOutputPlatformTarget>AnyCPU</RuntimeOutputPlatformTarget>\n   </PropertyGroup>\n+\n+  <!-- Produce ONLY reference assemblies and SKIP roslyn analyzers for netstandard2.0 builds. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0' and '$(MSBuildProjectFile)' != 'PortableTask.csproj'\">\n+    <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>\n+    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>\n+    <RunAnalyzersDuringBuild>false</RunAnalyzersDuringBuild>\n+    <RunAnalyzersDuringLiveAnalysis>false</RunAnalyzersDuringLiveAnalysis>\n+    <RunAnalyzers>false</RunAnalyzers>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Just because you touched it...\r\n\r\nShould the equality check not be case insensitive?",
              "createdAt": "2022-02-08T17:31:29Z",
              "path": "src/Framework/Sdk/SdkResultItem.cs",
              "diffHunk": "@@ -36,7 +36,7 @@ public SdkResultItem(string itemSpec, Dictionary<string, string>? metadata)\n             Metadata = metadata;\n         }\n \n-        public override bool Equals(object obj)\n+        public override bool Equals(object? obj)",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Bump",
              "createdAt": "2022-02-28T23:21:13Z",
              "path": "src/Framework/Sdk/SdkResultItem.cs",
              "diffHunk": "@@ -36,7 +36,7 @@ public SdkResultItem(string itemSpec, Dictionary<string, string>? metadata)\n             Metadata = metadata;\n         }\n \n-        public override bool Equals(object obj)\n+        public override bool Equals(object? obj)",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Created an issue for this: https://github.com/dotnet/msbuild/issues/7427",
              "createdAt": "2022-03-01T19:07:12Z",
              "path": "src/Framework/Sdk/SdkResultItem.cs",
              "diffHunk": "@@ -36,7 +36,7 @@ public SdkResultItem(string itemSpec, Dictionary<string, string>? metadata)\n             Metadata = metadata;\n         }\n \n-        public override bool Equals(object obj)\n+        public override bool Equals(object? obj)",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this the right way to get this? I would've expected a PackageReference or something",
              "createdAt": "2022-02-08T17:34:44Z",
              "path": "src/MSBuild/MSBuild.csproj",
              "diffHunk": "@@ -211,6 +211,14 @@\n     <PackageReference Include=\"Microsoft.IO.Redist\" Condition=\"'$(FeatureMSIORedist)' == 'true'\" />\n     <PackageReference Include=\"System.Configuration.ConfigurationManager\" />\n   </ItemGroup>\n+  <!-- Because projects are no longer targeting netstandard2.0,\n+       manually download this library for RoslynCodeTaskFactory.\n+       See target AddRefAssemblies below. -->\n+  <ItemGroup>\n+    <PackageDownload Include=\"netstandard.library\">",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Turns out we don't need this anymore. Removed.",
              "createdAt": "2022-02-09T00:18:54Z",
              "path": "src/MSBuild/MSBuild.csproj",
              "diffHunk": "@@ -211,6 +211,14 @@\n     <PackageReference Include=\"Microsoft.IO.Redist\" Condition=\"'$(FeatureMSIORedist)' == 'true'\" />\n     <PackageReference Include=\"System.Configuration.ConfigurationManager\" />\n   </ItemGroup>\n+  <!-- Because projects are no longer targeting netstandard2.0,\n+       manually download this library for RoslynCodeTaskFactory.\n+       See target AddRefAssemblies below. -->\n+  <ItemGroup>\n+    <PackageDownload Include=\"netstandard.library\">",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why does StringTools particularly need to target netstandard?",
              "createdAt": "2022-02-08T17:36:58Z",
              "path": "src/StringTools/StringTools.csproj",
              "diffHunk": "@@ -1,7 +1,7 @@\n <Project Sdk=\"Microsoft.NET.Sdk\">\n   <PropertyGroup>\n-    <TargetFrameworks>$(LibraryTargetFrameworks)</TargetFrameworks>\n-    <TargetFrameworks Condition=\"'$(MSBuildRuntimeType)' != 'Core' and '$(MonoBuild)' != 'true'\">$(LibraryTargetFrameworks);net35</TargetFrameworks>\n+    <TargetFrameworks>$(LibraryTargetFrameworks);netstandard2.0</TargetFrameworks>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "This was to resolve a build issue, shouldn't be a problem after placing `netstandard2.0` back into `LibraryTargetFrameworks`",
              "createdAt": "2022-02-08T23:16:28Z",
              "path": "src/StringTools/StringTools.csproj",
              "diffHunk": "@@ -1,7 +1,7 @@\n <Project Sdk=\"Microsoft.NET.Sdk\">\n   <PropertyGroup>\n-    <TargetFrameworks>$(LibraryTargetFrameworks)</TargetFrameworks>\n-    <TargetFrameworks Condition=\"'$(MSBuildRuntimeType)' != 'Core' and '$(MonoBuild)' != 'true'\">$(LibraryTargetFrameworks);net35</TargetFrameworks>\n+    <TargetFrameworks>$(LibraryTargetFrameworks);netstandard2.0</TargetFrameworks>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n#if NET\r\n```\r\n?",
              "createdAt": "2022-02-08T17:43:08Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Not sure what the benefit is going with NET. RUNTIME_TYPE_NETCORE isn't great either but the use-case is clear. Is `NET` safer to use?",
              "createdAt": "2022-02-08T23:19:10Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I don't know which preprocessor directives include each other, but this should be for net6, right? That sounds like NET to me, even if RUNTIME_TYPE_NETCORE includes NET.",
              "createdAt": "2022-02-09T02:32:41Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Turns out this is actually better off as `NET6_0_OR_GREATER` because the new API started in net5.0. It would cause issues in the ns2.0 build of Microsoft.Build.Tasks.\r\n\r\nCome to think of it, I'm not sure how M.B.Tasks passed during the ns2.0 build. Should be fixed now though.",
              "createdAt": "2022-03-01T19:17:48Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n#if NET\r\n```\r\n?",
              "createdAt": "2022-02-08T17:45:45Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -220,27 +228,43 @@ private static bool IsRetriable(Exception exception, out Exception actualExcepti\n             }\n \n             // Some HttpRequestException have an inner exception that has the real error\n-            if (actualException is HttpRequestException httpRequestException && httpRequestException.InnerException != null)\n+            if (actualException is HttpRequestException httpRequestException)\n             {\n-                actualException = httpRequestException.InnerException;\n+                if (httpRequestException.InnerException != null)\n+                {\n+                    actualException = httpRequestException.InnerException;\n+\n+                    // An IOException inside of a HttpRequestException means that something went wrong while downloading\n+                    if (actualException is IOException)\n+                    {\n+                        return true;\n+                    }\n+                }\n \n-                // An IOException inside of a HttpRequestException means that something went wrong while downloading\n-                if (actualException is IOException)\n+#if RUNTIME_TYPE_NETCORE",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Changed this to NET6_0etcetc",
              "createdAt": "2022-03-01T19:22:49Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -220,27 +228,43 @@ private static bool IsRetriable(Exception exception, out Exception actualExcepti\n             }\n \n             // Some HttpRequestException have an inner exception that has the real error\n-            if (actualException is HttpRequestException httpRequestException && httpRequestException.InnerException != null)\n+            if (actualException is HttpRequestException httpRequestException)\n             {\n-                actualException = httpRequestException.InnerException;\n+                if (httpRequestException.InnerException != null)\n+                {\n+                    actualException = httpRequestException.InnerException;\n+\n+                    // An IOException inside of a HttpRequestException means that something went wrong while downloading\n+                    if (actualException is IOException)\n+                    {\n+                        return true;\n+                    }\n+                }\n \n-                // An IOException inside of a HttpRequestException means that something went wrong while downloading\n-                if (actualException is IOException)\n+#if RUNTIME_TYPE_NETCORE",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "How are these task changes related to the upgrade? Are you also porting them to core?",
              "createdAt": "2022-02-08T17:48:07Z",
              "path": "src/Tasks/GenerateApplicationManifest.cs",
              "diffHunk": "@@ -386,7 +386,7 @@ private bool BuildResolvedSettings(ApplicationManifest manifest)\n             }\n             else if (String.IsNullOrEmpty(manifest.Publisher))\n             {\n-                string org = Util.GetRegisteredOrganization();\n+                string org = NativeMethodsShared.IsWindows ? Util.GetRegisteredOrganization() : string.Empty;",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "net5.0+ complains about code you can't hit on other platforms, so we need to \"guard\" those codepaths. This PR is littered with changes like this. Where I can, I've added guards around the class instead of little spots like this. Some cases are necessary (like this one) because it's a task that could theoretically be run from anywhere.",
              "createdAt": "2022-02-08T23:06:48Z",
              "path": "src/Tasks/GenerateApplicationManifest.cs",
              "diffHunk": "@@ -386,7 +386,7 @@ private bool BuildResolvedSettings(ApplicationManifest manifest)\n             }\n             else if (String.IsNullOrEmpty(manifest.Publisher))\n             {\n-                string org = Util.GetRegisteredOrganization();\n+                string org = NativeMethodsShared.IsWindows ? Util.GetRegisteredOrganization() : string.Empty;",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Hmm...ok. It worries me a bit because if it actually does get run on non-windows, this will be very confusingly wrong, right? I'd ideally want something at the top that just fails if not windows, and then you don't have to worry about it as much.",
              "createdAt": "2022-02-09T02:35:58Z",
              "path": "src/Tasks/GenerateApplicationManifest.cs",
              "diffHunk": "@@ -386,7 +386,7 @@ private bool BuildResolvedSettings(ApplicationManifest manifest)\n             }\n             else if (String.IsNullOrEmpty(manifest.Publisher))\n             {\n-                string org = Util.GetRegisteredOrganization();\n+                string org = NativeMethodsShared.IsWindows ? Util.GetRegisteredOrganization() : string.Empty;",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Right, but the entry point is `Execute` which can be called via `<Foo` in any `.targets` file which we can't really control without implementing some new mechanism to determine before a task runs that it's windows only.",
              "createdAt": "2022-02-10T00:57:36Z",
              "path": "src/Tasks/GenerateApplicationManifest.cs",
              "diffHunk": "@@ -386,7 +386,7 @@ private bool BuildResolvedSettings(ApplicationManifest manifest)\n             }\n             else if (String.IsNullOrEmpty(manifest.Publisher))\n             {\n-                string org = Util.GetRegisteredOrganization();\n+                string org = NativeMethodsShared.IsWindows ? Util.GetRegisteredOrganization() : string.Empty;",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Yeah\u2014I agree that the task could be called on any OS; I was just thinking it would be good to fail fast and obviously. I'm assuming you've tested it, and you get reasonable behavior on mac/linux, but if someone tweaks the task just slightly, it might return something wrong and confusing. If you fail immediately right when they call execute if it isn't windows, it's hard to mess that up.",
              "createdAt": "2022-02-10T01:11:16Z",
              "path": "src/Tasks/GenerateApplicationManifest.cs",
              "diffHunk": "@@ -386,7 +386,7 @@ private bool BuildResolvedSettings(ApplicationManifest manifest)\n             }\n             else if (String.IsNullOrEmpty(manifest.Publisher))\n             {\n-                string org = Util.GetRegisteredOrganization();\n+                string org = NativeMethodsShared.IsWindows ? Util.GetRegisteredOrganization() : string.Empty;",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Would it be reasonable to apply the windows-only attribute to the whole class? Then you shouldn't need these changes. It would mean that we can't call methods within the class on non-Windows from code, but wouldn't affect actual task execution since that happens via reflection and doesn't pay attention to the attribute, so the new if-not-windows-error code should still be good.",
              "createdAt": "2022-02-11T20:59:39Z",
              "path": "src/Tasks/GenerateApplicationManifest.cs",
              "diffHunk": "@@ -386,7 +386,7 @@ private bool BuildResolvedSettings(ApplicationManifest manifest)\n             }\n             else if (String.IsNullOrEmpty(manifest.Publisher))\n             {\n-                string org = Util.GetRegisteredOrganization();\n+                string org = NativeMethodsShared.IsWindows ? Util.GetRegisteredOrganization() : string.Empty;",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Bump rainersigwald's suggestion",
              "createdAt": "2022-02-28T23:37:00Z",
              "path": "src/Tasks/GenerateApplicationManifest.cs",
              "diffHunk": "@@ -386,7 +386,7 @@ private bool BuildResolvedSettings(ApplicationManifest manifest)\n             }\n             else if (String.IsNullOrEmpty(manifest.Publisher))\n             {\n-                string org = Util.GetRegisteredOrganization();\n+                string org = NativeMethodsShared.IsWindows ? Util.GetRegisteredOrganization() : string.Empty;",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Blarg, I had a pending comment here I didn't publish. I'm sold on the idea of applying it to the whole class _and_ erroring in the Execute method.",
              "createdAt": "2022-03-01T19:30:08Z",
              "path": "src/Tasks/GenerateApplicationManifest.cs",
              "diffHunk": "@@ -386,7 +386,7 @@ private bool BuildResolvedSettings(ApplicationManifest manifest)\n             }\n             else if (String.IsNullOrEmpty(manifest.Publisher))\n             {\n-                string org = Util.GetRegisteredOrganization();\n+                string org = NativeMethodsShared.IsWindows ? Util.GetRegisteredOrganization() : string.Empty;",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I think I can move this into directory.build.props.",
              "createdAt": "2022-02-08T23:48:22Z",
              "path": "src/Framework/Microsoft.Build.Framework.csproj",
              "diffHunk": "@@ -22,6 +22,10 @@\n     <PackageReference Include=\"Microsoft.CodeAnalysis.Collections\" PrivateAssets=\"all\" />\n   </ItemGroup>\n \n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">\n+    <PublishWindowsPdb>false</PublishWindowsPdb>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I think this was a similar situation with `NETCoreSdkBundledVersionsProps`, I'll try reverting it",
              "createdAt": "2022-02-09T00:14:30Z",
              "path": "src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj",
              "diffHunk": "@@ -36,7 +36,7 @@\n \n     <Content Include=\"$(MSBuildExtensionsPath)\\**\\*\" LinkBase=\"Extensions\" CopyToOutputDirectory=\"PreserveNewest\" />\n \n-    <Content Include=\"$(RepoRoot).dotnet\\sdk\\$(DotNetCliVersion)\\RuntimeIdentifierGraph.json\" CopyToOutputDirectory=\"PreserveNewest\" />\n+    <Content Include=\"$(RuntimeIdentifierGraphPath)\" CopyToOutputDirectory=\"PreserveNewest\" />",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n#if RUNTIME_TYPE_NETCORE\r\nusing System.Runtime.InteropServices.ComTypes;\r\n#endif\r\nusing System.Runtime.Versioning;\r\n```",
              "createdAt": "2022-02-11T20:51:33Z",
              "path": "src/Tasks/ManifestUtil/ComImporter.cs",
              "diffHunk": "@@ -7,6 +7,7 @@\n using System.Globalization;\n using System.Resources;\n using System.Runtime.InteropServices;\n+using System.Runtime.Versioning;\n #if RUNTIME_TYPE_NETCORE\n using System.Runtime.InteropServices.ComTypes;\n #endif",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "My brain says yes, my heart says no \ud83d\ude04 ",
              "createdAt": "2022-03-01T19:34:53Z",
              "path": "src/Tasks/ManifestUtil/ComImporter.cs",
              "diffHunk": "@@ -7,6 +7,7 @@\n using System.Globalization;\n using System.Resources;\n using System.Runtime.InteropServices;\n+using System.Runtime.Versioning;\n #if RUNTIME_TYPE_NETCORE\n using System.Runtime.InteropServices.ComTypes;\n #endif",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Comment stale now :)",
              "createdAt": "2022-02-11T23:14:47Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -90,9 +94,13 @@\n   </PropertyGroup>\n \n   <!-- Ensure ns2.0 ref assemblies are placed under `ref/netstandard2.0` in the NuGet package -->",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "So I'd say you should use `$(TargetRefPath)` here; it should be identical for all realistic official build cases but that's the \"final\" ref assembly location; `@(IntermediateRefAssembly)` is written to by the compiler every time.",
              "createdAt": "2022-02-11T23:17:42Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -90,9 +94,13 @@\n   </PropertyGroup>\n \n   <!-- Ensure ns2.0 ref assemblies are placed under `ref/netstandard2.0` in the NuGet package -->\n-  <Target Name=\"ShipRefAssembliesToNuGetPackage\" Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">\n+  <Target Name=\"ShipRefAssembliesToNuGetPackage\" BeforeTargets=\"Pack\" Condition=\"$(IsInnerBuild) == true\">\n     <ItemGroup>\n-      <TfmSpecificPackageFile Include=\"@(BuiltProjectOutputGroupOutput);@(FinalDocFile)\">\n+      <TfmSpecificPackageFile Include=\"@(IntermediateRefAssembly);@(FinalDocFile)\">",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Do you have any exp/ insertions where you ran RPS? It'd also be nice if you could see why the optional test failed or find a known bug; lots of MSBuild-caused issues don't directly seem to mention MSBuild.\r\n\r\nThis change in particular sounds like it could cause version mismatches.",
              "createdAt": "2022-02-28T23:07:59Z",
              "path": "eng/Packages.props",
              "diffHunk": "@@ -10,7 +10,7 @@\n   <ItemGroup>\n     <PackageReference Update=\"Microsoft.Build.NuGetSdkResolver\" Version=\"$(NuGetBuildTasksVersion)\" />\n     <PackageReference Update=\"Microsoft.CodeAnalysis.Build.Tasks\" Version=\"$(MicrosoftNetCompilersToolsetVersion)\" />\n-    <PackageReference Update=\"Microsoft.CodeAnalysis.Collections\" Version=\"4.0.0-4.21379.20\" />\n+    <PackageReference Update=\"Microsoft.CodeAnalysis.Collections\" Version=\"4.2.0-1.22102.8\" />",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I could've sworn I ran RPS on https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/380160. I'll retrigger on that PR.",
              "createdAt": "2022-03-01T18:41:09Z",
              "path": "eng/Packages.props",
              "diffHunk": "@@ -10,7 +10,7 @@\n   <ItemGroup>\n     <PackageReference Update=\"Microsoft.Build.NuGetSdkResolver\" Version=\"$(NuGetBuildTasksVersion)\" />\n     <PackageReference Update=\"Microsoft.CodeAnalysis.Build.Tasks\" Version=\"$(MicrosoftNetCompilersToolsetVersion)\" />\n-    <PackageReference Update=\"Microsoft.CodeAnalysis.Collections\" Version=\"4.0.0-4.21379.20\" />\n+    <PackageReference Update=\"Microsoft.CodeAnalysis.Collections\" Version=\"4.2.0-1.22102.8\" />",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "The full suite of tests should be queued: https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/380160",
              "createdAt": "2022-03-01T19:50:42Z",
              "path": "eng/Packages.props",
              "diffHunk": "@@ -10,7 +10,7 @@\n   <ItemGroup>\n     <PackageReference Update=\"Microsoft.Build.NuGetSdkResolver\" Version=\"$(NuGetBuildTasksVersion)\" />\n     <PackageReference Update=\"Microsoft.CodeAnalysis.Build.Tasks\" Version=\"$(MicrosoftNetCompilersToolsetVersion)\" />\n-    <PackageReference Update=\"Microsoft.CodeAnalysis.Collections\" Version=\"4.0.0-4.21379.20\" />\n+    <PackageReference Update=\"Microsoft.CodeAnalysis.Collections\" Version=\"4.2.0-1.22102.8\" />",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Do we still care about this?",
              "createdAt": "2022-02-28T23:10:24Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -27,8 +30,9 @@\n     <Platforms>AnyCPU;x64</Platforms>\n \n     <!-- Defaults for target frameworks and architecture -->\n-    <LibraryTargetFrameworks>$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>\n-    <LibraryTargetFrameworks Condition=\"'$(MonoBuild)'=='true'\">$(FullFrameworkTFM)</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks>$(FullFrameworkTFM);net6.0;netstandard2.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks Condition=\"'$(DotNetBuildFromSource)' == 'true'\">net6.0;netstandard2.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks Condition=\"'$(MonoBuild)'=='true'\">$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "About the monobuild case adding ns2.0? I added it to be safe because of how we're shipping ns2.0 ref assemblies now.",
              "createdAt": "2022-03-01T18:44:27Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -27,8 +30,9 @@\n     <Platforms>AnyCPU;x64</Platforms>\n \n     <!-- Defaults for target frameworks and architecture -->\n-    <LibraryTargetFrameworks>$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>\n-    <LibraryTargetFrameworks Condition=\"'$(MonoBuild)'=='true'\">$(FullFrameworkTFM)</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks>$(FullFrameworkTFM);net6.0;netstandard2.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks Condition=\"'$(DotNetBuildFromSource)' == 'true'\">net6.0;netstandard2.0</LibraryTargetFrameworks>\n+    <LibraryTargetFrameworks Condition=\"'$(MonoBuild)'=='true'\">$(FullFrameworkTFM);netstandard2.0</LibraryTargetFrameworks>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n          <PackagePath>ref\\$(TargetFramework)</PackagePath>\r\n```",
              "createdAt": "2022-02-28T23:17:29Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -71,4 +75,34 @@\n     <!-- When targeting .NET Core, Exe and unit tests projects always use AnyCPU architecture -->\n     <RuntimeOutputPlatformTarget>AnyCPU</RuntimeOutputPlatformTarget>\n   </PropertyGroup>\n+\n+  <PropertyGroup>\n+    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificContentInPackage);ShipRefAssembliesToNuGetPackage</TargetsForTfmSpecificBuildOutput>\n+  </PropertyGroup>\n+\n+  <!-- Produce ONLY reference assemblies and SKIP roslyn analyzers for netstandard2.0 builds. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0' and '$(MSBuildProjectFile)' != 'PortableTask.csproj'\">\n+    <!-- ProduceOnlyReferenceAssembly and ProduceReferenceAssembly are mutually exclusive compiler flags. -->\n+    <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>\n+    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>\n+    <RunAnalyzers>false</RunAnalyzers>\n+    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificContentInPackage);ShipRefAssembliesToNuGetPackage</TargetsForTfmSpecificBuildOutput>\n+    <IncludeBuildOutput>false</IncludeBuildOutput>\n+    <!-- pdb publishing fails builds for reference-only assemblies. -->\n+    <!-- https://github.com/dotnet/msbuild/pull/6148. -->\n+    <PublishWindowsPdb>false</PublishWindowsPdb>\n+  </PropertyGroup>\n+\n+  <!-- Ensure ref assemblies are placed under `ref/$(TargetFramework)` in the NuGet package -->\n+  <Target Name=\"ShipRefAssembliesToNuGetPackage\" BeforeTargets=\"Pack\" Condition=\"$(IsInnerBuild) == true\">\n+    <ItemGroup>\n+      <TfmSpecificPackageFile Include=\"$(TargetRefPath);@(FinalDocFile)\">\n+          <PackagePath>ref/$(TargetFramework)</PackagePath>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n          <PackagePath>ref\\$(TargetFramework)</PackagePath>\r\n```",
              "createdAt": "2022-02-28T23:17:50Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -71,4 +75,34 @@\n     <!-- When targeting .NET Core, Exe and unit tests projects always use AnyCPU architecture -->\n     <RuntimeOutputPlatformTarget>AnyCPU</RuntimeOutputPlatformTarget>\n   </PropertyGroup>\n+\n+  <PropertyGroup>\n+    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificContentInPackage);ShipRefAssembliesToNuGetPackage</TargetsForTfmSpecificBuildOutput>\n+  </PropertyGroup>\n+\n+  <!-- Produce ONLY reference assemblies and SKIP roslyn analyzers for netstandard2.0 builds. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0' and '$(MSBuildProjectFile)' != 'PortableTask.csproj'\">\n+    <!-- ProduceOnlyReferenceAssembly and ProduceReferenceAssembly are mutually exclusive compiler flags. -->\n+    <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>\n+    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>\n+    <RunAnalyzers>false</RunAnalyzers>\n+    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificContentInPackage);ShipRefAssembliesToNuGetPackage</TargetsForTfmSpecificBuildOutput>\n+    <IncludeBuildOutput>false</IncludeBuildOutput>\n+    <!-- pdb publishing fails builds for reference-only assemblies. -->\n+    <!-- https://github.com/dotnet/msbuild/pull/6148. -->\n+    <PublishWindowsPdb>false</PublishWindowsPdb>\n+  </PropertyGroup>\n+\n+  <!-- Ensure ref assemblies are placed under `ref/$(TargetFramework)` in the NuGet package -->\n+  <Target Name=\"ShipRefAssembliesToNuGetPackage\" BeforeTargets=\"Pack\" Condition=\"$(IsInnerBuild) == true\">\n+    <ItemGroup>\n+      <TfmSpecificPackageFile Include=\"$(TargetRefPath);@(FinalDocFile)\">\n+          <PackagePath>ref/$(TargetFramework)</PackagePath>\n+      </TfmSpecificPackageFile>\n+      <!-- ns2.0 builds use `BuiltProjectOutputGroupOutput` for output ref assemblies -->\n+      <TfmSpecificPackageFile Include=\"@(BuiltProjectOutputGroupOutput)\" Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">\n+          <PackagePath>ref/$(TargetFramework)</PackagePath>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "How is TfmSpecificPackageFile consumed?",
              "createdAt": "2022-02-28T23:19:55Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -71,4 +75,34 @@\n     <!-- When targeting .NET Core, Exe and unit tests projects always use AnyCPU architecture -->\n     <RuntimeOutputPlatformTarget>AnyCPU</RuntimeOutputPlatformTarget>\n   </PropertyGroup>\n+\n+  <PropertyGroup>\n+    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificContentInPackage);ShipRefAssembliesToNuGetPackage</TargetsForTfmSpecificBuildOutput>\n+  </PropertyGroup>\n+\n+  <!-- Produce ONLY reference assemblies and SKIP roslyn analyzers for netstandard2.0 builds. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0' and '$(MSBuildProjectFile)' != 'PortableTask.csproj'\">\n+    <!-- ProduceOnlyReferenceAssembly and ProduceReferenceAssembly are mutually exclusive compiler flags. -->\n+    <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>\n+    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>\n+    <RunAnalyzers>false</RunAnalyzers>\n+    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificContentInPackage);ShipRefAssembliesToNuGetPackage</TargetsForTfmSpecificBuildOutput>\n+    <IncludeBuildOutput>false</IncludeBuildOutput>\n+    <!-- pdb publishing fails builds for reference-only assemblies. -->\n+    <!-- https://github.com/dotnet/msbuild/pull/6148. -->\n+    <PublishWindowsPdb>false</PublishWindowsPdb>\n+  </PropertyGroup>\n+\n+  <!-- Ensure ref assemblies are placed under `ref/$(TargetFramework)` in the NuGet package -->\n+  <Target Name=\"ShipRefAssembliesToNuGetPackage\" BeforeTargets=\"Pack\" Condition=\"$(IsInnerBuild) == true\">",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "It's a nuget concept for packaging: https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets#targetsfortfmspecificcontentinpackage",
              "createdAt": "2022-03-01T18:46:16Z",
              "path": "src/Directory.Build.props",
              "diffHunk": "@@ -71,4 +75,34 @@\n     <!-- When targeting .NET Core, Exe and unit tests projects always use AnyCPU architecture -->\n     <RuntimeOutputPlatformTarget>AnyCPU</RuntimeOutputPlatformTarget>\n   </PropertyGroup>\n+\n+  <PropertyGroup>\n+    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificContentInPackage);ShipRefAssembliesToNuGetPackage</TargetsForTfmSpecificBuildOutput>\n+  </PropertyGroup>\n+\n+  <!-- Produce ONLY reference assemblies and SKIP roslyn analyzers for netstandard2.0 builds. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0' and '$(MSBuildProjectFile)' != 'PortableTask.csproj'\">\n+    <!-- ProduceOnlyReferenceAssembly and ProduceReferenceAssembly are mutually exclusive compiler flags. -->\n+    <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>\n+    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>\n+    <RunAnalyzers>false</RunAnalyzers>\n+    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificContentInPackage);ShipRefAssembliesToNuGetPackage</TargetsForTfmSpecificBuildOutput>\n+    <IncludeBuildOutput>false</IncludeBuildOutput>\n+    <!-- pdb publishing fails builds for reference-only assemblies. -->\n+    <!-- https://github.com/dotnet/msbuild/pull/6148. -->\n+    <PublishWindowsPdb>false</PublishWindowsPdb>\n+  </PropertyGroup>\n+\n+  <!-- Ensure ref assemblies are placed under `ref/$(TargetFramework)` in the NuGet package -->\n+  <Target Name=\"ShipRefAssembliesToNuGetPackage\" BeforeTargets=\"Pack\" Condition=\"$(IsInnerBuild) == true\">",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't think you can do this? Doesn't this mean that platforms other than windows can't check if they're windows or not?",
              "createdAt": "2022-02-28T23:20:45Z",
              "path": "src/Framework/NativeMethods.cs",
              "diffHunk": "@@ -709,10 +711,10 @@ internal static bool IsMono\n #if !CLR2COMPATIBILITY\n     private static bool? _isWindows;\n #endif\n-\n     /// <summary>\n     /// Gets a flag indicating if we are running under some version of Windows\n     /// </summary>\n+    [SupportedOSPlatformGuard(\"windows\")]",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "No it's still allowed, it prevents the compiler from complaining about windows only code paths. Basically, `IsWindows` itself is treated as a `[SupportedOSPlatform(\"windows\")]`",
              "createdAt": "2022-03-01T18:55:52Z",
              "path": "src/Framework/NativeMethods.cs",
              "diffHunk": "@@ -709,10 +711,10 @@ internal static bool IsMono\n #if !CLR2COMPATIBILITY\n     private static bool? _isWindows;\n #endif\n-\n     /// <summary>\n     /// Gets a flag indicating if we are running under some version of Windows\n     /// </summary>\n+    [SupportedOSPlatformGuard(\"windows\")]",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n#if !NET6_0_OR_GREATER\r\n```",
              "createdAt": "2022-02-28T23:21:37Z",
              "path": "src/Framework/SupportedOSPlatform.cs",
              "diffHunk": "@@ -0,0 +1,27 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+#if !NET5_0_OR_GREATER",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\ud83d\udc4d",
              "createdAt": "2022-02-28T23:25:06Z",
              "path": "src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs",
              "diffHunk": "@@ -14,7 +14,6 @@\n using SystemProcessorArchitecture = System.Reflection.ProcessorArchitecture;\n using Xunit.Abstractions;\n using Shouldly;\n-using System.Text;",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Replace this with just `throw;`? You're losing the stack and wasting a little memory (admittedly not in a hot path).",
              "createdAt": "2022-02-28T23:28:56Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE\n+                        // MSBuild History: CustomHttpRequestException was created as a wrapper over HttpRequestException\n+                        // so it could include the StatusCode. As of net5.0, the statuscode is now in HttpRequestException.\n+                        throw new HttpRequestException(e.Message, e.InnerException, response.StatusCode);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I'd rather keep things as they are and keep as much info when something bad goes wrong. This PR is about changing TF so there shouldn't be much functional change.",
              "createdAt": "2022-03-01T19:18:57Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE\n+                        // MSBuild History: CustomHttpRequestException was created as a wrapper over HttpRequestException\n+                        // so it could include the StatusCode. As of net5.0, the statuscode is now in HttpRequestException.\n+                        throw new HttpRequestException(e.Message, e.InnerException, response.StatusCode);",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "You're _losing_ information by wrapping it in a new HttpRequestException. When new functionality becomes available to make logging errors nicer, I'd do it.",
              "createdAt": "2022-03-01T23:03:51Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE\n+                        // MSBuild History: CustomHttpRequestException was created as a wrapper over HttpRequestException\n+                        // so it could include the StatusCode. As of net5.0, the statuscode is now in HttpRequestException.\n+                        throw new HttpRequestException(e.Message, e.InnerException, response.StatusCode);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Ah I misread your original post as \"you're losing the stack by using `throw;`.\"\r\n\r\nNot happy with how it'll look (stylistically) so any suggestions are appreciated.\r\n\r\nthe NET6_0_etcetc condition needs to avoid a `e is declared but not being used` warning that'll turn into an error in official builds.\r\n```\r\ntry\r\n{\u200b\r\n\u00a0\u00a0\u00a0\u00a0response.EnsureSuccessStatusCode();\r\n}\u200b\r\n#if NET6_0_OR_GREATER\r\ncatch (HttpRequestException)\r\n{\u200b\r\n\u00a0\u00a0\u00a0throw;\r\n#else\r\ncatch (HttpRequestException e)\r\n{\u200b\r\n\u00a0\u00a0\u00a0\u00a0// MSBuild History: CustomHttpRequestException was created as a wrapper over HttpRequestException\r\n\u00a0\u00a0\u00a0\u00a0// so it could include the StatusCode. As of net5.0, the statuscode is now in HttpRequestException.\r\n\u00a0\u00a0\u00a0\u00a0throw new CustomHttpRequestException(e.Message, e.InnerException, response.StatusCode);\r\n#endif\r\n}\u200b\r\n```",
              "createdAt": "2022-03-02T19:59:23Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE\n+                        // MSBuild History: CustomHttpRequestException was created as a wrapper over HttpRequestException\n+                        // so it could include the StatusCode. As of net5.0, the statuscode is now in HttpRequestException.\n+                        throw new HttpRequestException(e.Message, e.InnerException, response.StatusCode);",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "#if !NET6_0_OR_GREATER\r\ntry\r\n{\r\n#endif\r\nresponse.EnsureSuccessStatusCode();\r\n#if !NET6_0_OR_GREATER\r\n}\r\ncatch (HttpRequestException e)\r\n{\r\n// comment\r\nthrow new...\r\n}\r\n#endif",
              "createdAt": "2022-03-02T22:32:57Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -148,9 +148,13 @@ private async Task DownloadAsync(Uri uri, CancellationToken cancellationToken)\n                     }\n                     catch (HttpRequestException e)\n                     {\n-                        // HttpRequestException does not have the status code so its wrapped and thrown here so that later on we can determine\n-                        // if a retry is possible based on the status code\n+#if RUNTIME_TYPE_NETCORE\n+                        // MSBuild History: CustomHttpRequestException was created as a wrapper over HttpRequestException\n+                        // so it could include the StatusCode. As of net5.0, the statuscode is now in HttpRequestException.\n+                        throw new HttpRequestException(e.Message, e.InnerException, response.StatusCode);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "You should be able to put the status code in a variable and have less duplicated code.",
              "createdAt": "2022-02-28T23:34:12Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -220,27 +228,42 @@ private static bool IsRetriable(Exception exception, out Exception actualExcepti\n             }\n \n             // Some HttpRequestException have an inner exception that has the real error\n-            if (actualException is HttpRequestException httpRequestException && httpRequestException.InnerException != null)\n+            if (actualException is HttpRequestException httpRequestException)\n             {\n-                actualException = httpRequestException.InnerException;\n+                if (httpRequestException.InnerException != null)\n+                {\n+                    actualException = httpRequestException.InnerException;\n+\n+                    // An IOException inside of a HttpRequestException means that something went wrong while downloading\n+                    if (actualException is IOException)\n+                    {\n+                        return true;\n+                    }\n+                }\n \n-                // An IOException inside of a HttpRequestException means that something went wrong while downloading\n-                if (actualException is IOException)\n+#if RUNTIME_TYPE_NETCORE\n+                // net5.0 included StatusCode in the HttpRequestException.\n+                switch (httpRequestException.StatusCode)",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I don't feel strongly enough about this one",
              "createdAt": "2022-03-01T19:24:51Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -220,27 +228,42 @@ private static bool IsRetriable(Exception exception, out Exception actualExcepti\n             }\n \n             // Some HttpRequestException have an inner exception that has the real error\n-            if (actualException is HttpRequestException httpRequestException && httpRequestException.InnerException != null)\n+            if (actualException is HttpRequestException httpRequestException)\n             {\n-                actualException = httpRequestException.InnerException;\n+                if (httpRequestException.InnerException != null)\n+                {\n+                    actualException = httpRequestException.InnerException;\n+\n+                    // An IOException inside of a HttpRequestException means that something went wrong while downloading\n+                    if (actualException is IOException)\n+                    {\n+                        return true;\n+                    }\n+                }\n \n-                // An IOException inside of a HttpRequestException means that something went wrong while downloading\n-                if (actualException is IOException)\n+#if RUNTIME_TYPE_NETCORE\n+                // net5.0 included StatusCode in the HttpRequestException.\n+                switch (httpRequestException.StatusCode)",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      }
    ]
  }
}