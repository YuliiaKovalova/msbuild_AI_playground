{
  "number": 8921,
  "title": "Task name class name error",
  "body": "Fixes #7842\r\n\r\n### Context\r\nBoth \"[MSBuild inline tasks](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-inline-tasks?view=vs-2022)\" and \"[MSBuild inline tasks with RoslynCodeTaskFactory](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2022)\" documentation pages contain a note:\r\n\r\n> When defining the task class in the source file, the class name must agree with the `TaskName` attribute of the corresponding [UsingTask](https://learn.microsoft.com/en-us/visualstudio/msbuild/usingtask-element-msbuild?view=vs-2022) element.\r\n\r\nWhen this situation is detected, there is an error, but the error message is not helpful and doesn't explain the real issue.\r\n\r\nPR #2363 added a throw of an exception when `TaskType` is not set. This is not a recent change but unfortunately, it appears to have impacted the messaging for the mismatched `TaskName` and class name error.\r\n\r\n### Changes Made\r\n\r\n- RoslynCodeTaskFactory.cs: In the Initialize() method when the factory fails to match the task name to a class name, a `CodeTaskFactory.CouldNotFindTaskInAssembly` error is logged (not thrown). This log message is rolled up to a `MSB4036` error.\r\n\r\n```\r\n***: error : The task name \"SayHello\" could not be found.\r\n***: error MSB4036: The \"SayHello\" task was not found. Check the following: 1.) The name of the task in the project file is the same as the name of the task class. 2.) The task class is \"public\" and implements the Microsoft.Build.Framework.ITask interface. 3.) The task is correctly declared with <UsingTask> in the project file, or in the *.tasks files located in the \"***\" directory.\r\n```\r\n\r\n- TaskRegistry.cs: The exception from PR #2363 was retained, because it covers all `ITaskFactory` instances, but the test was modified to include checking if `ITaskFactory.Initialize()` returned `true`. When `Initialize()` fails and returns `false`, the parent `GetTaskFactory()` method will return `false`. When `Initialize()` returns `false`, `GetTaskFactory()` should not perform other work. Within an `else` block where `Initialize()` is called, a check of `TaskFactoryParameters` is now qualified to only be performed when `ITaskFactory.Initialize()` returns `true`\r\n- .editorconfig: Added an .editorconfig to explicitly set RoslynCodeTaskFactory_Tests.cs with `trim_trailing_whitespace = false`. The unit test file contains expected source code output that contains trailing whitespace. The auto-formatting will break the unit tests.\r\n- RoslynCodeTaskFactory_Tests.cs:\r\n  - modified `CodeLanguageFromTaskBody()` to test that `Language` will default to C#.\r\n  - added `CSharpClass()` and `CSharpClassSourceCodeFromFile()` to provide coverage of `Type=\"Class\"`.\r\n  - added `MismatchedTaskNameAndTaskClassName()` to test the error messaging change\r\n\r\n### Testing\r\nTested on Windows 11 and macOS 12.\r\n\r\nTested by running the full set of unit tests.\r\n\r\nTested by running a test solution + project.\r\n\r\n### Notes\r\nIn the original issue there is a further problem with the code where the output parameter is missing in the class source code. The error messaging for this situation could also be improved but is not addressed in this PR.",
  "state": "MERGED",
  "createdAt": "2023-06-20T16:28:40Z",
  "updatedAt": "2023-08-04T11:49:42Z",
  "closedAt": "2023-08-04T07:50:53Z",
  "mergedAt": "2023-08-04T07:50:53Z",
  "additions": 110,
  "deletions": 2,
  "changedFiles": 4,
  "headRefName": "TaskNameClassNameError",
  "isDraft": false,
  "author": {
    "login": "jrdodds"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "9c04bdc93af840aaa7f27794697a218890ea6b46",
          "message": "change error handling and messaging",
          "committedDate": "2023-06-16T23:10:55Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2ed5dc9076fb8544a3a2f6411a3bc72e63751560",
          "message": "add and update unit tests",
          "committedDate": "2023-06-19T23:48:50Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b91c68d428228004eac141cedd774814d902395d",
          "message": "Merge branch 'dotnet:main' into TaskNameClassNameError",
          "committedDate": "2023-06-20T15:25:23Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ddba82a3edd0b224c2d2b0749647f7bcef88cb57",
          "message": "Merge branch 'dotnet:main' into TaskNameClassNameError",
          "committedDate": "2023-06-27T23:19:02Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "eab85299fe7fc447a55174a86ea6e185455ca4a3",
          "message": "Merge branch 'dotnet:main' into TaskNameClassNameError",
          "committedDate": "2023-06-28T13:39:09Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "aadd39eaed5999e00b6a5b2e8a30965187e2dab4",
          "message": "Merge branch 'dotnet:main' into TaskNameClassNameError",
          "committedDate": "2023-06-30T12:57:11Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dea0f531988f50b9350fa15fdbf70bf204c6a909",
          "message": "Merge branch 'dotnet:main' into TaskNameClassNameError",
          "committedDate": "2023-07-06T12:58:17Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8e8a2426b834663f7be5c39800a01c746719acee",
          "message": "use resource string for error message in unit test",
          "committedDate": "2023-08-03T21:18:58Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "To be future proof - can you reference the `\"CodeTaskFactory.CouldNotFindTaskInAssembly\"` resource string here?",
              "createdAt": "2023-08-03T10:45:10Z",
              "path": "src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs",
              "diffHunk": "@@ -969,6 +1027,47 @@ public void SourceCodeFromFile()\n             }\n         }\n \n+        [Fact]\n+        public void MismatchedTaskNameAndTaskClassName()\n+        {\n+            const string taskName = \"SayHello\";\n+            const string className = \"HelloWorld\";\n+            taskName.ShouldNotBe(className, \"The test is misconfigured.\");\n+            const string errorMessage = $@\"The task name \"\"{taskName}\"\" could not be found.\";",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Done",
              "createdAt": "2023-08-03T21:19:45Z",
              "path": "src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs",
              "diffHunk": "@@ -969,6 +1027,47 @@ public void SourceCodeFromFile()\n             }\n         }\n \n+        [Fact]\n+        public void MismatchedTaskNameAndTaskClassName()\n+        {\n+            const string taskName = \"SayHello\";\n+            const string className = \"HelloWorld\";\n+            taskName.ShouldNotBe(className, \"The test is misconfigured.\");\n+            const string errorMessage = $@\"The task name \"\"{taskName}\"\" could not be found.\";",
              "author": {
                "login": "jrdodds"
              }
            }
          ]
        }
      }
    ]
  }
}