{
  "number": 10800,
  "title": "Document msbuild telemetry datapoints",
  "body": "Fixes #10799\r\n\r\n### Context\r\n\r\nDocument telemetry collected by msbuild to be transparent with our users about the data we collect.\r\nThis is documenting datapoints added in NET9, but also filling gap of missing documentation of pre-existing telemetry datapoints\r\n\r\n### Notes\r\n\r\nDocumentation only, no code changes\r\n",
  "state": "MERGED",
  "createdAt": "2024-10-11T19:27:14Z",
  "updatedAt": "2024-10-19T08:32:11Z",
  "closedAt": "2024-10-19T08:32:10Z",
  "mergedAt": "2024-10-19T08:32:10Z",
  "additions": 96,
  "deletions": 0,
  "changedFiles": 1,
  "headRefName": "doc/collected-telemetry",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "b6629056436f39dedb795b92f052307ce01738e5",
          "message": "Document msbuild telemetry datapoints",
          "committedDate": "2024-10-11T19:23:14Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d714090a96c2f6772e399bec6da7940dc6a051eb",
          "message": "Mention VS official doc",
          "committedDate": "2024-10-14T13:46:22Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c16fd4af74a725be221f0fbe04bc6d12630c467f",
          "message": "Update CollectedTelemetry.md",
          "committedDate": "2024-10-18T13:36:13Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "TODO ? :)",
              "createdAt": "2024-10-14T11:08:38Z",
              "path": "documentation/wiki/CollectedTelemetry.md",
              "diffHunk": "@@ -0,0 +1,96 @@\n+# MSBuild Telemetry\n+\n+MSBuild emits and collects telemetry to guide decisions on modernization and optimization investments. Currently the MSBuild collects telemetry only when run from SDK host (mostly the `dotnet build` and `dotnet msbuild` commands). For more details please refer to [the official SDK telemetry documentation](https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry).\n+\n+Visual Studio collects some build related telemetry (TODO: link the specific info here) - but that is not leveraging any MSBuild instrumentation, but rather information about count and duration of MSBuild API invocations from the caller point of view.",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "Unfortunately I couldn't locate any official document that would list in detail what datapoints are being collected for VS. Hence the TODO to tri to dig for it.\r\n\r\nI still wasn't successful - so I rephrased and mentioned official VS telemetry compliance doc",
              "createdAt": "2024-10-14T13:47:42Z",
              "path": "documentation/wiki/CollectedTelemetry.md",
              "diffHunk": "@@ -0,0 +1,96 @@\n+# MSBuild Telemetry\n+\n+MSBuild emits and collects telemetry to guide decisions on modernization and optimization investments. Currently the MSBuild collects telemetry only when run from SDK host (mostly the `dotnet build` and `dotnet msbuild` commands). For more details please refer to [the official SDK telemetry documentation](https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry).\n+\n+Visual Studio collects some build related telemetry (TODO: link the specific info here) - but that is not leveraging any MSBuild instrumentation, but rather information about count and duration of MSBuild API invocations from the caller point of view.",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "SDK versions should be reported as `8.0.100`, not `8.0.1`.",
              "createdAt": "2024-10-16T14:03:46Z",
              "path": "documentation/wiki/CollectedTelemetry.md",
              "diffHunk": "@@ -0,0 +1,96 @@\n+# MSBuild Telemetry\n+\n+MSBuild emits and collects telemetry to guide decisions on modernization and optimization investments. Currently the MSBuild collects telemetry only when run from SDK host (mostly the `dotnet build` and `dotnet msbuild` commands). For more details please refer to [the official SDK telemetry documentation](https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry).\n+\n+Visual Studio collects some build related telemetry - but that is not leveraging any MSBuild instrumentation, but rather information about count and duration of MSBuild API invocations from the caller point of view. For general information about telemetry being collected by Visual Studio Family of products and regulations compliance please refer to [the official documentation](https://learn.microsoft.com/en-us/compliance/regulatory/gdpr-dsr-visual-studio-family).\n+\n+## Type of data collected\n+\n+To tailor modernization and performance optimization investments we need to contain *anonymized* **Usage Data**. Those reflect type of features being used and execution time being spent in them.\n+\n+## Opting out\n+\n+MSBuild telemetry collection (that is turned on by default), can be opted out - same as .NET SDK telemetry in general - via setting `DOTNET_CLI_TELEMETRY_OPTOUT` environment variable to `1` or `true`.\n+\n+## Datapoints overview\n+\n+### Logging Configuration\n+\n+Expressed and collected via [LoggingConfigurationTelemetry type](https://github.com/dotnet/msbuild/blob/94941d9cb26bb86045452b4a174a357b65a30c99/src/Framework/Telemetry/LoggingConfigurationTelemetry.cs)\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 8.0.1     | Indication if terminal logger was used. |",
              "author": {
                "login": "baronfel"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Same here - 9.0.1xx, not 9.0.1",
              "createdAt": "2024-10-16T14:04:03Z",
              "path": "documentation/wiki/CollectedTelemetry.md",
              "diffHunk": "@@ -0,0 +1,96 @@\n+# MSBuild Telemetry\n+\n+MSBuild emits and collects telemetry to guide decisions on modernization and optimization investments. Currently the MSBuild collects telemetry only when run from SDK host (mostly the `dotnet build` and `dotnet msbuild` commands). For more details please refer to [the official SDK telemetry documentation](https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry).\n+\n+Visual Studio collects some build related telemetry - but that is not leveraging any MSBuild instrumentation, but rather information about count and duration of MSBuild API invocations from the caller point of view. For general information about telemetry being collected by Visual Studio Family of products and regulations compliance please refer to [the official documentation](https://learn.microsoft.com/en-us/compliance/regulatory/gdpr-dsr-visual-studio-family).\n+\n+## Type of data collected\n+\n+To tailor modernization and performance optimization investments we need to contain *anonymized* **Usage Data**. Those reflect type of features being used and execution time being spent in them.\n+\n+## Opting out\n+\n+MSBuild telemetry collection (that is turned on by default), can be opted out - same as .NET SDK telemetry in general - via setting `DOTNET_CLI_TELEMETRY_OPTOUT` environment variable to `1` or `true`.\n+\n+## Datapoints overview\n+\n+### Logging Configuration\n+\n+Expressed and collected via [LoggingConfigurationTelemetry type](https://github.com/dotnet/msbuild/blob/94941d9cb26bb86045452b4a174a357b65a30c99/src/Framework/Telemetry/LoggingConfigurationTelemetry.cs)\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 8.0.1     | Indication if terminal logger was used. |\n+| >= 8.0.1     | User choice on terminal logger enablement. |\n+| >= 8.0.1     | Source of user choice on terminal logger enablement. |\n+| >= 8.0.1     | Default choice on terminal logger enablement. |\n+| >= 8.0.1     | Source of default choice on terminal logger enablement. |\n+| >= 8.0.1     | Indication if Console logger was used. |\n+| >= 8.0.1     | Console logger type (serial, parallel). |\n+| >= 8.0.1     | Console logger verbosity. |\n+| >= 8.0.1     | Indication if File logger was used. |\n+| >= 8.0.1     | File logger type (serial, parallel). |\n+| >= 8.0.1     | Number of file loggers. |\n+| >= 8.0.1     | File logger verbosity. |\n+| >= 8.0.1     | Indication if Binary logger was used. |\n+| >= 8.0.1     | Indication if Binary logger used with default log name. |\n+\n+### BuildCheck\n+\n+Expressed and collected via [BuildCheckTelemetry type](https://github.com/dotnet/msbuild/blob/94941d9cb26bb86045452b4a174a357b65a30c99/src/Framework/Telemetry/BuildCheckTelemetry.cs)\n+\n+#### BuildCheck Run\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 9.0.1     | Corelation guid for the run |",
              "author": {
                "login": "baronfel"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Do we keep track of runs using a guid for each run?",
              "createdAt": "2024-10-17T11:21:42Z",
              "path": "documentation/wiki/CollectedTelemetry.md",
              "diffHunk": "@@ -0,0 +1,96 @@\n+# MSBuild Telemetry\n+\n+MSBuild emits and collects telemetry to guide decisions on modernization and optimization investments. Currently the MSBuild collects telemetry only when run from SDK host (mostly the `dotnet build` and `dotnet msbuild` commands). For more details please refer to [the official SDK telemetry documentation](https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry).\n+\n+Visual Studio collects some build related telemetry - but that is not leveraging any MSBuild instrumentation, but rather information about count and duration of MSBuild API invocations from the caller point of view. For general information about telemetry being collected by Visual Studio Family of products and regulations compliance please refer to [the official documentation](https://learn.microsoft.com/en-us/compliance/regulatory/gdpr-dsr-visual-studio-family).\n+\n+## Type of data collected\n+\n+To tailor modernization and performance optimization investments we need to contain *anonymized* **Usage Data**. Those reflect type of features being used and execution time being spent in them.\n+\n+## Opting out\n+\n+MSBuild telemetry collection (that is turned on by default), can be opted out - same as .NET SDK telemetry in general - via setting `DOTNET_CLI_TELEMETRY_OPTOUT` environment variable to `1` or `true`.\n+\n+## Datapoints overview\n+\n+### Logging Configuration\n+\n+Expressed and collected via [LoggingConfigurationTelemetry type](https://github.com/dotnet/msbuild/blob/94941d9cb26bb86045452b4a174a357b65a30c99/src/Framework/Telemetry/LoggingConfigurationTelemetry.cs)\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 8.0.1     | Indication if terminal logger was used. |\n+| >= 8.0.1     | User choice on terminal logger enablement. |\n+| >= 8.0.1     | Source of user choice on terminal logger enablement. |\n+| >= 8.0.1     | Default choice on terminal logger enablement. |\n+| >= 8.0.1     | Source of default choice on terminal logger enablement. |\n+| >= 8.0.1     | Indication if Console logger was used. |\n+| >= 8.0.1     | Console logger type (serial, parallel). |\n+| >= 8.0.1     | Console logger verbosity. |\n+| >= 8.0.1     | Indication if File logger was used. |\n+| >= 8.0.1     | File logger type (serial, parallel). |\n+| >= 8.0.1     | Number of file loggers. |\n+| >= 8.0.1     | File logger verbosity. |\n+| >= 8.0.1     | Indication if Binary logger was used. |\n+| >= 8.0.1     | Indication if Binary logger used with default log name. |\n+\n+### BuildCheck\n+\n+Expressed and collected via [BuildCheckTelemetry type](https://github.com/dotnet/msbuild/blob/94941d9cb26bb86045452b4a174a357b65a30c99/src/Framework/Telemetry/BuildCheckTelemetry.cs)\n+\n+#### BuildCheck Run\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 9.0.1     | Corelation guid for the run |\n+| >= 9.0.1     | Count of enabled rules for the run |\n+| >= 9.0.1     | Count of enabled custom rules for the run |\n+| >= 9.0.1     | Count of violations encountered for the run |\n+| >= 9.0.1     | Execution time spent by BuildCheck infrastructure and rules |\n+\n+#### BuildCheck Rule in a run\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 9.0.1     | Corelation guid for the run. |",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "Yes - just for the buildchecks though.\r\n\r\nA guid is generated after build run and added to each buildcheck datapoint for that run - to be able to connect those together",
              "createdAt": "2024-10-18T13:36:02Z",
              "path": "documentation/wiki/CollectedTelemetry.md",
              "diffHunk": "@@ -0,0 +1,96 @@\n+# MSBuild Telemetry\n+\n+MSBuild emits and collects telemetry to guide decisions on modernization and optimization investments. Currently the MSBuild collects telemetry only when run from SDK host (mostly the `dotnet build` and `dotnet msbuild` commands). For more details please refer to [the official SDK telemetry documentation](https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry).\n+\n+Visual Studio collects some build related telemetry - but that is not leveraging any MSBuild instrumentation, but rather information about count and duration of MSBuild API invocations from the caller point of view. For general information about telemetry being collected by Visual Studio Family of products and regulations compliance please refer to [the official documentation](https://learn.microsoft.com/en-us/compliance/regulatory/gdpr-dsr-visual-studio-family).\n+\n+## Type of data collected\n+\n+To tailor modernization and performance optimization investments we need to contain *anonymized* **Usage Data**. Those reflect type of features being used and execution time being spent in them.\n+\n+## Opting out\n+\n+MSBuild telemetry collection (that is turned on by default), can be opted out - same as .NET SDK telemetry in general - via setting `DOTNET_CLI_TELEMETRY_OPTOUT` environment variable to `1` or `true`.\n+\n+## Datapoints overview\n+\n+### Logging Configuration\n+\n+Expressed and collected via [LoggingConfigurationTelemetry type](https://github.com/dotnet/msbuild/blob/94941d9cb26bb86045452b4a174a357b65a30c99/src/Framework/Telemetry/LoggingConfigurationTelemetry.cs)\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 8.0.1     | Indication if terminal logger was used. |\n+| >= 8.0.1     | User choice on terminal logger enablement. |\n+| >= 8.0.1     | Source of user choice on terminal logger enablement. |\n+| >= 8.0.1     | Default choice on terminal logger enablement. |\n+| >= 8.0.1     | Source of default choice on terminal logger enablement. |\n+| >= 8.0.1     | Indication if Console logger was used. |\n+| >= 8.0.1     | Console logger type (serial, parallel). |\n+| >= 8.0.1     | Console logger verbosity. |\n+| >= 8.0.1     | Indication if File logger was used. |\n+| >= 8.0.1     | File logger type (serial, parallel). |\n+| >= 8.0.1     | Number of file loggers. |\n+| >= 8.0.1     | File logger verbosity. |\n+| >= 8.0.1     | Indication if Binary logger was used. |\n+| >= 8.0.1     | Indication if Binary logger used with default log name. |\n+\n+### BuildCheck\n+\n+Expressed and collected via [BuildCheckTelemetry type](https://github.com/dotnet/msbuild/blob/94941d9cb26bb86045452b4a174a357b65a30c99/src/Framework/Telemetry/BuildCheckTelemetry.cs)\n+\n+#### BuildCheck Run\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 9.0.1     | Corelation guid for the run |\n+| >= 9.0.1     | Count of enabled rules for the run |\n+| >= 9.0.1     | Count of enabled custom rules for the run |\n+| >= 9.0.1     | Count of violations encountered for the run |\n+| >= 9.0.1     | Execution time spent by BuildCheck infrastructure and rules |\n+\n+#### BuildCheck Rule in a run\n+\n+| SDK versions | Data |\n+|--------------|------|\n+| >= 9.0.1     | Corelation guid for the run. |",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "We should default links to no region: https://learn.microsoft.com/dotnet/core/tools/telemetry",
              "createdAt": "2024-10-17T12:07:08Z",
              "path": "documentation/wiki/CollectedTelemetry.md",
              "diffHunk": "@@ -0,0 +1,96 @@\n+# MSBuild Telemetry\n+\n+MSBuild emits and collects telemetry to guide decisions on modernization and optimization investments. Currently the MSBuild collects telemetry only when run from SDK host (mostly the `dotnet build` and `dotnet msbuild` commands). For more details please refer to [the official SDK telemetry documentation](https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry).",
              "author": {
                "login": "maridematte"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Another link with region: https://learn.microsoft.com/compliance/regulatory/gdpr-dsr-visual-studio-family",
              "createdAt": "2024-10-17T12:07:44Z",
              "path": "documentation/wiki/CollectedTelemetry.md",
              "diffHunk": "@@ -0,0 +1,96 @@\n+# MSBuild Telemetry\n+\n+MSBuild emits and collects telemetry to guide decisions on modernization and optimization investments. Currently the MSBuild collects telemetry only when run from SDK host (mostly the `dotnet build` and `dotnet msbuild` commands). For more details please refer to [the official SDK telemetry documentation](https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry).\n+\n+Visual Studio collects some build related telemetry - but that is not leveraging any MSBuild instrumentation, but rather information about count and duration of MSBuild API invocations from the caller point of view. For general information about telemetry being collected by Visual Studio Family of products and regulations compliance please refer to [the official documentation](https://learn.microsoft.com/en-us/compliance/regulatory/gdpr-dsr-visual-studio-family).",
              "author": {
                "login": "maridematte"
              }
            }
          ]
        }
      }
    ]
  }
}