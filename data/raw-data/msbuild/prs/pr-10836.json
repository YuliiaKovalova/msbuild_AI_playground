{
  "number": 10836,
  "title": ".slnx support - use the new parser for .sln and .slnx",
  "body": "### Context\r\nThe .slnx support PR is split in 2 -  1. use new parser for .slnx, 2. use new parser for both .sln (under change wave) and .slnx. This is the follow-up PR.\r\n### Changes Made\r\n- Use `Microsoft.VisualStudio.SolutionPersistence` parser to parse .slnx and .sln (applied 17.13 change wave for .sln)\r\n- Throw ArgumentException if solutionFile is null or empty (applied 17.13 change wave)\r\n### Testing\r\n\r\n- Moved tests from `SolutionFile_Tests` that are old parser specific to the `SolutionFile_OldParser_Tests`. \r\n- Some of them already had duplicates there:\r\n`BadVersionStamp`, `VersionTooLow`, `ParseSolutionFileWithDescriptionInformation`, `MissingNestedProject`, `ParseInvalidSolutionConfigurations1`, `ParseInvalidSolutionConfigurations2`, `ParseInvalidSolutionConfigurations3`.\r\n\r\n- Deleted `SolutionFile_Tests.SharedProjects` test because it just checks dependencies and we already have test for that. It also has \"GlobalSection(SharedMSBuildProjectFiles)\" section but we do not parse it in the old parser.\r\n- Changed `SolutionProjectGeneratorTests` - refactored strings and used both old and new parsers in the tests (except where only the old one can be used, made a remark there about it)\r\n- Deleted `GraphConstructionShouldThrowOnMissingSolutionDependencies` test because it checks specifics of how solution projects' dependencies were parsed. \"SolutionParseProjectDepNotFoundError\" is thrown when the project dependency does not exist. And this is handled differently in the new parser - the dependency is not added at all if it did not exist in solution.\r\n\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2024-10-17T06:36:04Z",
  "updatedAt": "2024-11-01T15:37:30Z",
  "closedAt": "2024-11-01T15:37:26Z",
  "mergedAt": "2024-11-01T15:37:26Z",
  "additions": 911,
  "deletions": 1237,
  "changedFiles": 10,
  "headRefName": "slnx-support-followup",
  "isDraft": false,
  "author": {
    "login": "surayya-MS"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "surayya-MS"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "3d1897d01f866859663b27166f378612677da74f",
          "message": "include SolutionPersistence package",
          "committedDate": "2024-10-10T17:44:59Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "86f4847d83c2c486d1139845455e514d05299010",
          "message": "add slnx in XMake.ProcessProjectSwitch",
          "committedDate": "2024-10-10T17:44:59Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8a60719fbd240228022c962e12ddc9d8d87aa55e",
          "message": "support for .slnx format",
          "committedDate": "2024-10-10T17:44:59Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e734a1bd46afb0ea10623a0d6ada12b79b7dc316",
          "message": "small fix",
          "committedDate": "2024-10-10T18:05:09Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "32bc09f06c580cd521fa8df93b879a5c5915e0b6",
          "message": "update package",
          "committedDate": "2024-10-10T18:09:58Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9fd5e8cdeb366bfd45a967b688f5bb6d22f44c24",
          "message": "fix comment",
          "committedDate": "2024-10-11T12:49:30Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "221fb65b09784fa5fca88afda58d730d427ee2ef",
          "message": "Apply suggestions from code review\r\n\r\ncommit suggestions\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>\nCo-authored-by: Jan Krivanek <krivanek.j@hotmail.com>",
          "committedDate": "2024-10-11T13:27:33Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "62ed51578b236b41c764e92ed480bcb93cc57631",
          "message": "fix error message",
          "committedDate": "2024-10-11T13:28:15Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9c2002fd00e52744de87fa51998ac2d99c3d36fa",
          "message": "move package version",
          "committedDate": "2024-10-11T13:28:25Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c30f7c01fe54ef006698394b1db51ca76afe1275",
          "message": "apply suggestions",
          "committedDate": "2024-10-11T13:30:17Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "94130b93e5ae82332b17243fa6cb9a050f9ff17e",
          "message": "remove comment",
          "committedDate": "2024-10-11T13:52:27Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "09a5a7b6b036605abee3e4226ea25653d5cb0f2a",
          "message": "small fix",
          "committedDate": "2024-10-11T13:57:28Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "63be4f4700b20ae5c8c82d94537e1b3f75fbd581",
          "message": "small change in xmake tests",
          "committedDate": "2024-10-11T14:49:03Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "73b84435047ad8b5b66ad5ebc484dc01a1be426d",
          "message": "apply same suggestion to the other xmake tests",
          "committedDate": "2024-10-11T14:51:57Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1bd2a25da9a9526a757562fa3ce260d0a6f38419",
          "message": "refactor ParseSolutionHelper",
          "committedDate": "2024-10-11T15:18:02Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7a9ff3ac3e8dc14b3602769479032767079d7a65",
          "message": "rename to Solution_OldParser_Tests; move old parser specific tests to Solution_OldParser_Tests",
          "committedDate": "2024-10-14T14:01:50Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8e40124da6ccd24244f3f76e0e84273a432ced5d",
          "message": "refactor SolutionFile_Tests",
          "committedDate": "2024-10-14T14:04:06Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b4ba54b0af77559c2d25ddd3119fdf58034c48b0",
          "message": "refactor and use old and new parser in SolutionProjectGenerator_Tests;",
          "committedDate": "2024-10-14T14:09:34Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bdf1737b8ae0346bffd66aa6fb91db5ccf67c764",
          "message": "add change wave 17.13",
          "committedDate": "2024-10-14T16:27:44Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f527f7ad16ee55d566bf16cf514a17b981ef7357",
          "message": "use new parser if 17.13 chqange wave enabled",
          "committedDate": "2024-10-14T16:28:40Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f448ffca219fba23d4e0b7701b7ff92048010f2b",
          "message": "fix test",
          "committedDate": "2024-10-14T16:37:23Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "02021e3c402486e3be16079986afb03b25afd337",
          "message": "throw ArgumentException if solutionFile is null or empty",
          "committedDate": "2024-10-16T09:53:06Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3e54b2a8421f57fbe938b1c69a4e720468400456",
          "message": "fix unix tests",
          "committedDate": "2024-10-16T13:41:54Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dab0dd8455d494f07ff3000c72b4fad31e013170",
          "message": "reorder usings",
          "committedDate": "2024-10-16T13:44:59Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2743bbb65fa8024f0274da712bcde33380a2a60d",
          "message": "add 17.13 change wave to docs",
          "committedDate": "2024-10-16T13:55:31Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ba369884b19d8b65b6221c9dd518c5c75cc97795",
          "message": "merge from main",
          "committedDate": "2024-10-17T06:22:43Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f8bb751f835bc23eb604e2f275291db5bfda1ff4",
          "message": "add this pr to change waves docs",
          "committedDate": "2024-10-17T06:37:36Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dc79f39e425cd6ded98a316b8266bb57ea43b82e",
          "message": "small fix",
          "committedDate": "2024-10-17T06:39:24Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6affa445f662d9e219ed27205c3b3c9338cb1473",
          "message": "small fix",
          "committedDate": "2024-10-17T06:39:48Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "741c7c845cb0a639784241959aaafd417b7b9169",
          "message": "fix typo",
          "committedDate": "2024-10-17T07:47:24Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "531d8cd7ba1647c3d1abca18c218d416bc3108f4",
          "message": "fix tests",
          "committedDate": "2024-10-17T08:22:54Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "092ba6540a0042644d4a53e4cb08ae2dad278e0e",
          "message": "reference package Microsoft.VisualStudio.SolutionPersistence in Microsoft..Build.Engine.UnitTests.csproj",
          "committedDate": "2024-10-17T10:13:52Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ec99bb017606e5947ddf4391f1452b90ceabbbed",
          "message": "Merge branch 'main' into slnx-support-followup",
          "committedDate": "2024-10-17T13:41:15Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cae485d2aaab6ee6002f6592ccd52809802fd99c",
          "message": "refererence Microsoft.VisualStudio.SolutionPersistence in MSBuild.csproj and in Microsoft.Build.Utilities.csproj",
          "committedDate": "2024-10-17T14:34:23Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4c35c2578892c175de1693225a8dbbb916e6e913",
          "message": "Revert \"refererence Microsoft.VisualStudio.SolutionPersistence in MSBuild.csproj and in Microsoft.Build.Utilities.csproj\"\n\nThis reverts commit cae485d2aaab6ee6002f6592ccd52809802fd99c.",
          "committedDate": "2024-10-17T14:40:54Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d22aa3161cf8f48693c7c9040b2b97fe10f8e59a",
          "message": "Revert \"reference package Microsoft.VisualStudio.SolutionPersistence in Microsoft..Build.Engine.UnitTests.csproj\"\n\nThis reverts commit 092ba6540a0042644d4a53e4cb08ae2dad278e0e.",
          "committedDate": "2024-10-17T14:41:08Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "18280dd1f86e66570ac8fd1388c169e38bf1bdf6",
          "message": "fix bootstrap",
          "committedDate": "2024-10-18T12:54:44Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "53a1fe901e22ad2b5897fe089128a8344a37ef6b",
          "message": "Merge branch 'main' into slnx-support-followup",
          "committedDate": "2024-10-24T17:58:49Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5d85ba82023404e1a052993bc9731fb32c172851",
          "message": "remove extra code\n\nCo-authored-by: kasperk81 <83082615+kasperk81@users.noreply.github.com>",
          "committedDate": "2024-10-25T07:58:01Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dd84fe721b3d08dac87ec7aebd4956556379c765",
          "message": "Merge branch 'main' into slnx-support-followup",
          "committedDate": "2024-10-25T13:59:47Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cbccc42e6be7d199b682d0e9134e26b8be785176",
          "message": "add Microsoft.VisualStudio.SolutionPersistence to BootStrapMsBuild.targets",
          "committedDate": "2024-10-28T17:51:29Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ddaefd01323aa2b9b7612f55ddf17bdc2d5b55b7",
          "message": "Update src/Build/Construction/Solution/SolutionFile.cs\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-10-28T17:53:50Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "536200247d37ceed04b079ff43c198df1788229e",
          "message": "Update documentation/wiki/ChangeWaves.md\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-10-28T17:57:15Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fb7655a60adb8095d4bf470f604db0e71303661c",
          "message": "use 17.14 instead of 17.13",
          "committedDate": "2024-10-28T17:59:51Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "535ae37b2b544089bc0a1a009665d14718c9056a",
          "message": "Merge branch 'slnx-support-followup' of https://github.com/surayya-MS/msbuild into slnx-support-followup",
          "committedDate": "2024-10-28T17:59:54Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "47448008e898749634de27cb2a2a2b604a050163",
          "message": "fix space",
          "committedDate": "2024-10-28T18:02:56Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "23e5b72eb3e162a9ec6443766b45eaa805381f5a",
          "message": "use Assert.Throws around the line that throws exception",
          "committedDate": "2024-10-28T18:08:25Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7b01fc0aa7aaa012203b17486e717db2fa2fec05",
          "message": "save long line for test",
          "committedDate": "2024-10-28T18:13:39Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8b2308e6be88b7868529ff9891c9331367e34289",
          "message": "set VersionPrefix to 17.13",
          "committedDate": "2024-10-28T18:26:43Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1066ee0b0e66f50994e0b28ad6294e0775b9c8a0",
          "message": "fix bootstrap targets",
          "committedDate": "2024-10-28T18:35:41Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f62018554829a935c55d08434747d4f205b059d9",
          "message": "Merge branch 'main' into slnx-support-followup",
          "committedDate": "2024-10-28T18:37:36Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d7147337cd7aae91711b61809eb927cb87eb2488",
          "message": "Merge branch 'main' into slnx-support-followup",
          "committedDate": "2024-10-29T09:39:06Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "130b276bf5e3022975bf39560a6adc009eaf0847",
          "message": "Update src/Build/Construction/Solution/SolutionFile.cs\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-11-01T14:24:11Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9d436440de0ba7b255ca184400daecd66bb02df3",
          "message": "fix BootstrapMsBuild.targets",
          "committedDate": "2024-11-01T14:26:04Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.SolutionPersistence, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.\r\nFile name: 'Microsoft.VisualStudio.SolutionPersistence, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\r\nis it about adding\r\n`<PackageReference Include=\"Microsoft.VisualStudio.SolutionPersistence\" />` here: https://github.com/dotnet/msbuild/blob/b8f46eb171f3b1c7e3bddb8afaff9fbb0ba59e9d/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj#L20\r\n?",
        "createdAt": "2024-10-17T09:14:55Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "> > System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.VisualStudio.SolutionPersistence, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.\r\n> > File name: 'Microsoft.VisualStudio.SolutionPersistence, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n> \r\n> is it about adding `<PackageReference Include=\"Microsoft.VisualStudio.SolutionPersistence\" />` here:\r\n> \r\n> https://github.com/dotnet/msbuild/blob/b8f46eb171f3b1c7e3bddb8afaff9fbb0ba59e9d/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj#L20\r\n> \r\n> \r\n> ?\r\n\r\nthe message says so, but that is strange. because on my last commit the graph tests were failing because of .sln being parsed by the new parser, hence the package was found. \r\n@rainersigwald do you know what might be a problem here?",
        "createdAt": "2024-10-17T09:51:56Z",
        "author": {
          "login": "surayya-MS"
        }
      },
      {
        "body": "i just searched how the other dependencies are set up https://github.com/search?q=repo%3Adotnet%2Fmsbuild%20System.Configuration.ConfigurationManager&type=code\r\nmaybe feature switch pulled something which made the fragile dependency graph in torn state, which means it needs to be specified explicitly to make it work in all cases.",
        "createdAt": "2024-10-17T09:57:42Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "> i just searched how the other dependencies are set up https://github.com/search?q=repo%3Adotnet%2Fmsbuild%20System.Configuration.ConfigurationManager&type=code maybe feature switch pulled something which made the fragile dependency graph in torn state, which means it needs to be specified explicitly to make it work in all cases.\r\n\r\nmaybe, let's try\r\n",
        "createdAt": "2024-10-17T10:12:49Z",
        "author": {
          "login": "surayya-MS"
        }
      },
      {
        "body": "entry maybe needed here as well https://github.com/dotnet/msbuild/blob/b8f46eb171f3b1c7e3bddb8afaff9fbb0ba59e9d/eng/Packages.props#L21",
        "createdAt": "2024-10-17T10:27:47Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "> entry maybe needed here as well\r\n> \r\n> https://github.com/dotnet/msbuild/blob/b8f46eb171f3b1c7e3bddb8afaff9fbb0ba59e9d/eng/Packages.props#L21\r\n\r\nwe already have version here in `eng/dependabot/Packages.props`. dependabot updates them periodically. `eng/Packages.props` is for Darc/Maestro\r\nhttps://github.com/dotnet/msbuild/blob/b8f46eb171f3b1c7e3bddb8afaff9fbb0ba59e9d/eng/dependabot/Packages.props#L64",
        "createdAt": "2024-10-17T10:52:57Z",
        "author": {
          "login": "surayya-MS"
        }
      },
      {
        "body": "ah dependabot one is included in eng/Packages.props.\r\nthe other two diffs are:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b8f46eb171f3b1c7e3bddb8afaff9fbb0ba59e9d/src/MSBuild/MSBuild.csproj#L178\r\nhttps://github.com/dotnet/msbuild/blob/b8f46eb171f3b1c7e3bddb8afaff9fbb0ba59e9d/src/Utilities/Microsoft.Build.Utilities.csproj#L27\r\n(missing persistence package ref)",
        "createdAt": "2024-10-17T11:00:17Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "@YuliiaKovalova do you know how to add new dependency in bootstrap? i read https://github.com/dotnet/msbuild/blob/5881e053656bc8aaa890515e5d4318af39f49dc5/documentation/wiki/Bootstrap.md and tried adding Microsoft.VisualStudio.SolutionPersistence around here https://github.com/dotnet/msbuild/blob/5881e053656bc8aaa890515e5d4318af39f49dc5/eng/BootStrapMsBuild.targets#L37 but the error doesn't go away. it's about copying that dll somewhere/somehow to that one place where bootstrap script is looking for. deleting this block fix the error https://github.com/dotnet/msbuild/blob/5881e053656bc8aaa890515e5d4318af39f49dc5/eng/cibuild_bootstrapped_msbuild.sh#L59-L68 (but that's not what we want ik, just to understand where the error is coming from)",
        "createdAt": "2024-10-18T11:25:26Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "lets see what happens if we now merge main (fingers crossed) :)",
        "createdAt": "2024-10-24T14:05:32Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "the one failing test `Microsoft.Build.BuildCheck.UnitTests.TaskInvocationCheckDataTests.ReportsComplexTaskParameters` seems unrelated (it also failed in https://github.com/dotnet/msbuild/pull/10813)",
        "createdAt": "2024-10-24T19:14:35Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "Diagnosability on that test is quite unfortunate, but hopefully fixable (#10886).",
        "createdAt": "2024-10-24T20:21:51Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                // try at least assert not null\r\n```\r\n\r\nthey have some guid mappings for known project files: https://github.com/microsoft/vs-solutionpersistence/blob/3489af847b089e729a641a6051a02990245e8716/src/Microsoft.VisualStudio.SolutionPersistence/Model/ProjectTypeTable.BuiltInTypes.cs are they different than what we are expecting in old format? if they are, is it worth reporting upstream?",
              "createdAt": "2024-10-17T07:37:08Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -492,164 +266,38 @@ public void SolutionFoldersSlnx()\n                 EndGlobal\n                 \"\"\";\n \n-            SolutionFile solution = ParseSolutionHelper(solutionFileContents, true);\n+            SolutionFile solution = ParseSolutionHelper(solutionFileContents, convertToSlnx);\n \n             Assert.Equal(3, solution.ProjectsInOrder.Count);\n \n             var classLibrary1 = solution.ProjectsInOrder\n-                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"ClassLibrary1\\\\ClassLibrary1.csproj\", true));\n+                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"ClassLibrary1\\\\ClassLibrary1.csproj\"));\n             Assert.NotNull(classLibrary1);\n             Assert.Empty(classLibrary1.Dependencies);\n             Assert.Null(classLibrary1.ParentProjectGuid);\n \n             var myPhysicalFolderClassLibrary1 = solution.ProjectsInOrder\n-                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"MyPhysicalFolder\\\\ClassLibrary1\\\\ClassLibrary1.csproj\", true));\n+                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"MyPhysicalFolder\\\\ClassLibrary1\\\\ClassLibrary1.csproj\"));\n             Assert.NotNull(myPhysicalFolderClassLibrary1);\n             Assert.Empty(myPhysicalFolderClassLibrary1.Dependencies);\n \n             var classLibrary2 = solution.ProjectsInOrder\n-                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"ClassLibrary2\\\\ClassLibrary2.csproj\", true));\n+                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"ClassLibrary2\\\\ClassLibrary2.csproj\"));\n             Assert.NotNull(classLibrary2);\n             Assert.Empty(classLibrary2.Dependencies);\n \n             // When converting to slnx, the guids are not preserved.\n-            // try at list assert not null\n-            Assert.NotNull(myPhysicalFolderClassLibrary1.ParentProjectGuid);\n-            Assert.NotNull(classLibrary2.ParentProjectGuid);\n-        }\n-\n-        /// <summary>\n-        /// Exercises shared projects.\n-        /// </summary>\n-        [Fact]\n-        public void SharedProjects()\n-        {\n-            string solutionFileContents =\n-                @\"\n-                Microsoft Visual Studio Solution File, Format Version 12.00\n-                # Visual Studio 15\n-                VisualStudioVersion = 15.0.27610.1\n-                MinimumVisualStudioVersion = 10.0.40219.1\n-                Project('{D954291E-2A0B-460D-934E-DC6B0785DB48}') = 'SharedProject1', 'SharedProject1\\SharedProject1.shproj', '{14686F51-D0C2-4832-BBAA-6FBAEC676995}'\n-                EndProject\n-                Project('{D954291E-2A0B-460D-934E-DC6B0785DB48}') = 'SharedProject2', 'SharedProject2\\SharedProject2.shproj', '{BAE750E8-4656-4947-B06B-3961E1051DF7}'\n-                EndProject\n-                Project('{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}') = 'ClassLibrary1', 'ClassLibrary1\\ClassLibrary1.csproj', '{3A0EC360-A42A-417F-BDEF-619682CF6119}'\n-                EndProject\n-                Project('{F184B08F-C81C-45F6-A57F-5ABD9991F28F}') = 'ClassLibrary2', 'ClassLibrary2\\ClassLibrary2.vbproj', '{6DEF6DE8-FBF0-4240-B469-282DEE87899C}'\n-                EndProject\n-                Global\n-                    GlobalSection(SharedMSBuildProjectFiles) = preSolution\n-                        SharedProject1\\SharedProject1.projitems*{14686f51-d0c2-4832-bbaa-6fbaec676995}*SharedItemsImports = 13\n-                        SharedProject1\\SharedProject1.projitems*{3a0ec360-a42a-417f-bdef-619682cf6119}*SharedItemsImports = 4\n-                        SharedProject2\\SharedProject2.projitems*{6def6de8-fbf0-4240-b469-282dee87899c}*SharedItemsImports = 4\n-                        SharedProject2\\SharedProject2.projitems*{bae750e8-4656-4947-b06b-3961e1051df7}*SharedItemsImports = 13\n-                    EndGlobalSection\n-                    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-                        Debug|Any CPU = Debug|Any CPU\n-                        Release|Any CPU = Release|Any CPU\n-                    EndGlobalSection\n-                    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-                        {3A0EC360-A42A-417F-BDEF-619682CF6119}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {3A0EC360-A42A-417F-BDEF-619682CF6119}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {3A0EC360-A42A-417F-BDEF-619682CF6119}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {3A0EC360-A42A-417F-BDEF-619682CF6119}.Release|Any CPU.Build.0 = Release|Any CPU\n-                        {6DEF6DE8-FBF0-4240-B469-282DEE87899C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {6DEF6DE8-FBF0-4240-B469-282DEE87899C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {6DEF6DE8-FBF0-4240-B469-282DEE87899C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {6DEF6DE8-FBF0-4240-B469-282DEE87899C}.Release|Any CPU.Build.0 = Release|Any CPU\n-                    EndGlobalSection\n-                    GlobalSection(SolutionProperties) = preSolution\n-                        HideSolutionNode = FALSE\n-                    EndGlobalSection\n-                    GlobalSection(ExtensibilityGlobals) = postSolution\n-                        SolutionGuid = {1B671EF6-A62A-4497-8351-3EE8679CA86F}\n-                    EndGlobalSection\n-                EndGlobal\n-                \";\n-\n-            SolutionFile solution = ParseSolutionHelper(solutionFileContents);\n-\n-            Assert.Equal(4, solution.ProjectsInOrder.Count);\n-\n-            Assert.Equal(@\"SharedProject1\\SharedProject1.shproj\", solution.ProjectsInOrder[0].RelativePath);\n-            Assert.Equal(\"{14686F51-D0C2-4832-BBAA-6FBAEC676995}\", solution.ProjectsInOrder[0].ProjectGuid);\n-            Assert.Empty(solution.ProjectsInOrder[0].Dependencies);\n-            Assert.Null(solution.ProjectsInOrder[0].ParentProjectGuid);\n-\n-            Assert.Equal(@\"SharedProject2\\SharedProject2.shproj\", solution.ProjectsInOrder[1].RelativePath);\n-            Assert.Equal(\"{BAE750E8-4656-4947-B06B-3961E1051DF7}\", solution.ProjectsInOrder[1].ProjectGuid);\n-            Assert.Empty(solution.ProjectsInOrder[1].Dependencies);\n-            Assert.Null(solution.ProjectsInOrder[1].ParentProjectGuid);\n-\n-            Assert.Equal(@\"ClassLibrary1\\ClassLibrary1.csproj\", solution.ProjectsInOrder[2].RelativePath);\n-            Assert.Equal(\"{3A0EC360-A42A-417F-BDEF-619682CF6119}\", solution.ProjectsInOrder[2].ProjectGuid);\n-            Assert.Empty(solution.ProjectsInOrder[2].Dependencies);\n-            Assert.Null(solution.ProjectsInOrder[2].ParentProjectGuid);\n-\n-            Assert.Equal(@\"ClassLibrary2\\ClassLibrary2.vbproj\", solution.ProjectsInOrder[3].RelativePath);\n-            Assert.Equal(\"{6DEF6DE8-FBF0-4240-B469-282DEE87899C}\", solution.ProjectsInOrder[3].ProjectGuid);\n-            Assert.Empty(solution.ProjectsInOrder[3].Dependencies);\n-            Assert.Null(solution.ProjectsInOrder[3].ParentProjectGuid);\n-        }\n-\n-        /// <summary>\n-        /// Tests situation where there's a nonexistent project listed in the solution folders.  We should\n-        /// error with a useful message.\n-        /// </summary>\n-        [Fact]\n-        public void MissingNestedProject()\n-        {\n-            string solutionFileContents =\n-                @\"\n-                Microsoft Visual Studio Solution File, Format Version 9.00\n-                # Visual Studio 2005\n-                Project('{2150E333-8FDC-42A3-9474-1A3956D46DE8}') = 'MySlnFolder', 'MySlnFolder', '{E0F97730-25D2-418A-A7BD-02CAFDC6E470}'\n-                EndProject\n-                Project('{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}') = 'ClassLibrary1', 'MyPhysicalFolder\\ClassLibrary1\\ClassLibrary1.csproj', '{A5EE8128-B08E-4533-86C5-E46714981680}'\n-                EndProject\n-                Global\n-                    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-                        Debug|Any CPU = Debug|Any CPU\n-                        Release|Any CPU = Release|Any CPU\n-                    EndGlobalSection\n-                    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-                        {34E0D07D-CF8F-459D-9449-C4188D8C5564}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {34E0D07D-CF8F-459D-9449-C4188D8C5564}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {34E0D07D-CF8F-459D-9449-C4188D8C5564}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {34E0D07D-CF8F-459D-9449-C4188D8C5564}.Release|Any CPU.Build.0 = Release|Any CPU\n-                        {A5EE8128-B08E-4533-86C5-E46714981680}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {A5EE8128-B08E-4533-86C5-E46714981680}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {A5EE8128-B08E-4533-86C5-E46714981680}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {A5EE8128-B08E-4533-86C5-E46714981680}.Release|Any CPU.Build.0 = Release|Any CPU\n-                        {6DB98C35-FDCC-4818-B5D4-1F0A385FDFD4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {6DB98C35-FDCC-4818-B5D4-1F0A385FDFD4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {6DB98C35-FDCC-4818-B5D4-1F0A385FDFD4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {6DB98C35-FDCC-4818-B5D4-1F0A385FDFD4}.Release|Any CPU.Build.0 = Release|Any CPU\n-                    EndGlobalSection\n-                    GlobalSection(SolutionProperties) = preSolution\n-                        HideSolutionNode = FALSE\n-                    EndGlobalSection\n-                    GlobalSection(NestedProjects) = preSolution\n-                        {A5EE8128-B08E-4533-86C5-E46714981680} = {E0F97730-25D2-418A-A7BD-02CAFDC6E470}\n-                        {2AE8D6C4-FB43-430C-8AEB-15E5EEDAAE4B} = {E0F97730-25D2-418A-A7BD-02CAFDC6E470}\n-                    EndGlobalSection\n-                EndGlobal\n-                \";\n-\n-            try\n+            if (!convertToSlnx)\n             {\n-                ParseSolutionHelper(solutionFileContents);\n+                Assert.Equal(\"{E0F97730-25D2-418A-A7BD-02CAFDC6E470}\", myPhysicalFolderClassLibrary1.ParentProjectGuid);\n+                Assert.Equal(\"{2AE8D6C4-FB43-430C-8AEB-15E5EEDAAE4B}\", classLibrary2.ParentProjectGuid);\n             }\n-            catch (InvalidProjectFileException e)\n+            else\n             {\n-                Assert.Equal(\"MSB5023\", e.ErrorCode);\n-                Assert.Contains(\"{2AE8D6C4-FB43-430C-8AEB-15E5EEDAAE4B}\", e.Message);\n-                return;\n+                // try at list assert not null",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "thanks for catching the typo!\r\n\r\nthese guids are different. sample from this test:\r\n```\r\nProject('{2150E333-8FDC-42A3-9474-1A3956D46DE8}') = 'MySubSlnFolder', 'MySubSlnFolder', '{2AE8D6C4-FB43-430C-8AEB-15E5EEDAAE4B}'\r\nEndProject\r\n```\r\nthe first guid `{2150E333-8FDC-42A3-9474-1A3956D46DE8}` is project type and are mapped here https://github.com/dotnet/msbuild/blob/main/src/Build/Construction/Solution/SolutionFile.cs#L88 and in the link you provided.\r\n and the second `{2AE8D6C4-FB43-430C-8AEB-15E5EEDAAE4B}` is the project id.\r\n when .sln is converted to .slnx by the SolutionPersistence package the project id is not preserved, and that is what i'm trying to assert in this test.",
              "createdAt": "2024-10-17T08:00:18Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -492,164 +266,38 @@ public void SolutionFoldersSlnx()\n                 EndGlobal\n                 \"\"\";\n \n-            SolutionFile solution = ParseSolutionHelper(solutionFileContents, true);\n+            SolutionFile solution = ParseSolutionHelper(solutionFileContents, convertToSlnx);\n \n             Assert.Equal(3, solution.ProjectsInOrder.Count);\n \n             var classLibrary1 = solution.ProjectsInOrder\n-                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"ClassLibrary1\\\\ClassLibrary1.csproj\", true));\n+                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"ClassLibrary1\\\\ClassLibrary1.csproj\"));\n             Assert.NotNull(classLibrary1);\n             Assert.Empty(classLibrary1.Dependencies);\n             Assert.Null(classLibrary1.ParentProjectGuid);\n \n             var myPhysicalFolderClassLibrary1 = solution.ProjectsInOrder\n-                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"MyPhysicalFolder\\\\ClassLibrary1\\\\ClassLibrary1.csproj\", true));\n+                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"MyPhysicalFolder\\\\ClassLibrary1\\\\ClassLibrary1.csproj\"));\n             Assert.NotNull(myPhysicalFolderClassLibrary1);\n             Assert.Empty(myPhysicalFolderClassLibrary1.Dependencies);\n \n             var classLibrary2 = solution.ProjectsInOrder\n-                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"ClassLibrary2\\\\ClassLibrary2.csproj\", true));\n+                .FirstOrDefault(p => p.RelativePath == ConvertToUnixPathIfNeeded(\"ClassLibrary2\\\\ClassLibrary2.csproj\"));\n             Assert.NotNull(classLibrary2);\n             Assert.Empty(classLibrary2.Dependencies);\n \n             // When converting to slnx, the guids are not preserved.\n-            // try at list assert not null\n-            Assert.NotNull(myPhysicalFolderClassLibrary1.ParentProjectGuid);\n-            Assert.NotNull(classLibrary2.ParentProjectGuid);\n-        }\n-\n-        /// <summary>\n-        /// Exercises shared projects.\n-        /// </summary>\n-        [Fact]\n-        public void SharedProjects()\n-        {\n-            string solutionFileContents =\n-                @\"\n-                Microsoft Visual Studio Solution File, Format Version 12.00\n-                # Visual Studio 15\n-                VisualStudioVersion = 15.0.27610.1\n-                MinimumVisualStudioVersion = 10.0.40219.1\n-                Project('{D954291E-2A0B-460D-934E-DC6B0785DB48}') = 'SharedProject1', 'SharedProject1\\SharedProject1.shproj', '{14686F51-D0C2-4832-BBAA-6FBAEC676995}'\n-                EndProject\n-                Project('{D954291E-2A0B-460D-934E-DC6B0785DB48}') = 'SharedProject2', 'SharedProject2\\SharedProject2.shproj', '{BAE750E8-4656-4947-B06B-3961E1051DF7}'\n-                EndProject\n-                Project('{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}') = 'ClassLibrary1', 'ClassLibrary1\\ClassLibrary1.csproj', '{3A0EC360-A42A-417F-BDEF-619682CF6119}'\n-                EndProject\n-                Project('{F184B08F-C81C-45F6-A57F-5ABD9991F28F}') = 'ClassLibrary2', 'ClassLibrary2\\ClassLibrary2.vbproj', '{6DEF6DE8-FBF0-4240-B469-282DEE87899C}'\n-                EndProject\n-                Global\n-                    GlobalSection(SharedMSBuildProjectFiles) = preSolution\n-                        SharedProject1\\SharedProject1.projitems*{14686f51-d0c2-4832-bbaa-6fbaec676995}*SharedItemsImports = 13\n-                        SharedProject1\\SharedProject1.projitems*{3a0ec360-a42a-417f-bdef-619682cf6119}*SharedItemsImports = 4\n-                        SharedProject2\\SharedProject2.projitems*{6def6de8-fbf0-4240-b469-282dee87899c}*SharedItemsImports = 4\n-                        SharedProject2\\SharedProject2.projitems*{bae750e8-4656-4947-b06b-3961e1051df7}*SharedItemsImports = 13\n-                    EndGlobalSection\n-                    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-                        Debug|Any CPU = Debug|Any CPU\n-                        Release|Any CPU = Release|Any CPU\n-                    EndGlobalSection\n-                    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-                        {3A0EC360-A42A-417F-BDEF-619682CF6119}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {3A0EC360-A42A-417F-BDEF-619682CF6119}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {3A0EC360-A42A-417F-BDEF-619682CF6119}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {3A0EC360-A42A-417F-BDEF-619682CF6119}.Release|Any CPU.Build.0 = Release|Any CPU\n-                        {6DEF6DE8-FBF0-4240-B469-282DEE87899C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {6DEF6DE8-FBF0-4240-B469-282DEE87899C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {6DEF6DE8-FBF0-4240-B469-282DEE87899C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {6DEF6DE8-FBF0-4240-B469-282DEE87899C}.Release|Any CPU.Build.0 = Release|Any CPU\n-                    EndGlobalSection\n-                    GlobalSection(SolutionProperties) = preSolution\n-                        HideSolutionNode = FALSE\n-                    EndGlobalSection\n-                    GlobalSection(ExtensibilityGlobals) = postSolution\n-                        SolutionGuid = {1B671EF6-A62A-4497-8351-3EE8679CA86F}\n-                    EndGlobalSection\n-                EndGlobal\n-                \";\n-\n-            SolutionFile solution = ParseSolutionHelper(solutionFileContents);\n-\n-            Assert.Equal(4, solution.ProjectsInOrder.Count);\n-\n-            Assert.Equal(@\"SharedProject1\\SharedProject1.shproj\", solution.ProjectsInOrder[0].RelativePath);\n-            Assert.Equal(\"{14686F51-D0C2-4832-BBAA-6FBAEC676995}\", solution.ProjectsInOrder[0].ProjectGuid);\n-            Assert.Empty(solution.ProjectsInOrder[0].Dependencies);\n-            Assert.Null(solution.ProjectsInOrder[0].ParentProjectGuid);\n-\n-            Assert.Equal(@\"SharedProject2\\SharedProject2.shproj\", solution.ProjectsInOrder[1].RelativePath);\n-            Assert.Equal(\"{BAE750E8-4656-4947-B06B-3961E1051DF7}\", solution.ProjectsInOrder[1].ProjectGuid);\n-            Assert.Empty(solution.ProjectsInOrder[1].Dependencies);\n-            Assert.Null(solution.ProjectsInOrder[1].ParentProjectGuid);\n-\n-            Assert.Equal(@\"ClassLibrary1\\ClassLibrary1.csproj\", solution.ProjectsInOrder[2].RelativePath);\n-            Assert.Equal(\"{3A0EC360-A42A-417F-BDEF-619682CF6119}\", solution.ProjectsInOrder[2].ProjectGuid);\n-            Assert.Empty(solution.ProjectsInOrder[2].Dependencies);\n-            Assert.Null(solution.ProjectsInOrder[2].ParentProjectGuid);\n-\n-            Assert.Equal(@\"ClassLibrary2\\ClassLibrary2.vbproj\", solution.ProjectsInOrder[3].RelativePath);\n-            Assert.Equal(\"{6DEF6DE8-FBF0-4240-B469-282DEE87899C}\", solution.ProjectsInOrder[3].ProjectGuid);\n-            Assert.Empty(solution.ProjectsInOrder[3].Dependencies);\n-            Assert.Null(solution.ProjectsInOrder[3].ParentProjectGuid);\n-        }\n-\n-        /// <summary>\n-        /// Tests situation where there's a nonexistent project listed in the solution folders.  We should\n-        /// error with a useful message.\n-        /// </summary>\n-        [Fact]\n-        public void MissingNestedProject()\n-        {\n-            string solutionFileContents =\n-                @\"\n-                Microsoft Visual Studio Solution File, Format Version 9.00\n-                # Visual Studio 2005\n-                Project('{2150E333-8FDC-42A3-9474-1A3956D46DE8}') = 'MySlnFolder', 'MySlnFolder', '{E0F97730-25D2-418A-A7BD-02CAFDC6E470}'\n-                EndProject\n-                Project('{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}') = 'ClassLibrary1', 'MyPhysicalFolder\\ClassLibrary1\\ClassLibrary1.csproj', '{A5EE8128-B08E-4533-86C5-E46714981680}'\n-                EndProject\n-                Global\n-                    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-                        Debug|Any CPU = Debug|Any CPU\n-                        Release|Any CPU = Release|Any CPU\n-                    EndGlobalSection\n-                    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-                        {34E0D07D-CF8F-459D-9449-C4188D8C5564}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {34E0D07D-CF8F-459D-9449-C4188D8C5564}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {34E0D07D-CF8F-459D-9449-C4188D8C5564}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {34E0D07D-CF8F-459D-9449-C4188D8C5564}.Release|Any CPU.Build.0 = Release|Any CPU\n-                        {A5EE8128-B08E-4533-86C5-E46714981680}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {A5EE8128-B08E-4533-86C5-E46714981680}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {A5EE8128-B08E-4533-86C5-E46714981680}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {A5EE8128-B08E-4533-86C5-E46714981680}.Release|Any CPU.Build.0 = Release|Any CPU\n-                        {6DB98C35-FDCC-4818-B5D4-1F0A385FDFD4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n-                        {6DB98C35-FDCC-4818-B5D4-1F0A385FDFD4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n-                        {6DB98C35-FDCC-4818-B5D4-1F0A385FDFD4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n-                        {6DB98C35-FDCC-4818-B5D4-1F0A385FDFD4}.Release|Any CPU.Build.0 = Release|Any CPU\n-                    EndGlobalSection\n-                    GlobalSection(SolutionProperties) = preSolution\n-                        HideSolutionNode = FALSE\n-                    EndGlobalSection\n-                    GlobalSection(NestedProjects) = preSolution\n-                        {A5EE8128-B08E-4533-86C5-E46714981680} = {E0F97730-25D2-418A-A7BD-02CAFDC6E470}\n-                        {2AE8D6C4-FB43-430C-8AEB-15E5EEDAAE4B} = {E0F97730-25D2-418A-A7BD-02CAFDC6E470}\n-                    EndGlobalSection\n-                EndGlobal\n-                \";\n-\n-            try\n+            if (!convertToSlnx)\n             {\n-                ParseSolutionHelper(solutionFileContents);\n+                Assert.Equal(\"{E0F97730-25D2-418A-A7BD-02CAFDC6E470}\", myPhysicalFolderClassLibrary1.ParentProjectGuid);\n+                Assert.Equal(\"{2AE8D6C4-FB43-430C-8AEB-15E5EEDAAE4B}\", classLibrary2.ParentProjectGuid);\n             }\n-            catch (InvalidProjectFileException e)\n+            else\n             {\n-                Assert.Equal(\"MSB5023\", e.ErrorCode);\n-                Assert.Contains(\"{2AE8D6C4-FB43-430C-8AEB-15E5EEDAAE4B}\", e.Message);\n-                return;\n+                // try at list assert not null",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this a question that you planned to look up or is it for the reviewers?",
              "createdAt": "2024-10-17T12:35:03Z",
              "path": "src/Build.UnitTests/Construction/SolutionFile_OldParser_Tests.cs",
              "diffHunk": "@@ -687,6 +724,43 @@ public void ParseFirstProjectLineWhereProjectNameHasSpecialCharacters()\n             proj.ProjectGuid.ShouldBe(\"Unique name-GUID\");\n         }\n \n+        /// <summary>\n+        /// Test some characters that are valid in a file name but that also could be\n+        /// considered a delimiter by a parser. Does quoting work for special characters?",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "i moved this test `ParseSolutionWhereProjectNameHasSpecialCharacters` from SolutionFile_Tests. this is an interesting docs comment. from my understanding, this is the statement of what the test checks",
              "createdAt": "2024-10-17T13:30:40Z",
              "path": "src/Build.UnitTests/Construction/SolutionFile_OldParser_Tests.cs",
              "diffHunk": "@@ -687,6 +724,43 @@ public void ParseFirstProjectLineWhereProjectNameHasSpecialCharacters()\n             proj.ProjectGuid.ShouldBe(\"Unique name-GUID\");\n         }\n \n+        /// <summary>\n+        /// Test some characters that are valid in a file name but that also could be\n+        /// considered a delimiter by a parser. Does quoting work for special characters?",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there a reason we're removing this test?",
              "createdAt": "2024-10-17T13:15:09Z",
              "path": "src/Build.UnitTests/Graph/GraphLoadedFromSolution_tests.cs",
              "diffHunk": "@@ -646,28 +647,6 @@ IEnumerable<ProjectItemInstance> GetIncomingEdgeItemsToNode(ProjectGraphNode nod\n             }\n         }\n \n-        [Fact]\n-        public void GraphConstructionShouldThrowOnMissingSolutionDependencies()",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "yes, because in the old parser we would read all project dependencies, and if that id was missing in the solution file amongst projects then we throw that exception. but the new parser in this case acts differently - they just don't add the dependency, and this exception is not thrown.\r\nadded more details to the PR description about the deleted and moved tests",
              "createdAt": "2024-10-17T13:26:30Z",
              "path": "src/Build.UnitTests/Graph/GraphLoadedFromSolution_tests.cs",
              "diffHunk": "@@ -646,28 +647,6 @@ IEnumerable<ProjectItemInstance> GetIncomingEdgeItemsToNode(ProjectGraphNode nod\n             }\n         }\n \n-        [Fact]\n-        public void GraphConstructionShouldThrowOnMissingSolutionDependencies()",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there a reason to downgrade the format version for this test?",
              "createdAt": "2024-10-17T13:20:58Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -65,12 +65,14 @@ public void SolutionProjectIgnoresDuplicateDefaultTargets(string name)\n             using (TestEnvironment testEnvironment = TestEnvironment.Create())\n             {\n                 TransientTestFolder folder = testEnvironment.CreateFolder(createFolder: true);\n-                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", @\"Microsoft Visual Studio Solution File, Format Version 16.00\");\n+                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", \"Microsoft Visual Studio Solution File, Format Version 12.00\");",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "it's because Format Version 12 is the latest. In the old parser we just read the version, but thte new parser throws an exception. ",
              "createdAt": "2024-10-17T13:23:30Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -65,12 +65,14 @@ public void SolutionProjectIgnoresDuplicateDefaultTargets(string name)\n             using (TestEnvironment testEnvironment = TestEnvironment.Create())\n             {\n                 TransientTestFolder folder = testEnvironment.CreateFolder(createFolder: true);\n-                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", @\"Microsoft Visual Studio Solution File, Format Version 16.00\");\n+                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", \"Microsoft Visual Studio Solution File, Format Version 12.00\");",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "we can set the version 16 via properties https://github.com/microsoft/vs-solutionpersistence/blob/3489af847b089e729a641a6051a02990245e8716/src/Microsoft.VisualStudio.SolutionPersistence/Model/VisualStudioProperties.cs#L61",
              "createdAt": "2024-10-17T13:23:50Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -65,12 +65,14 @@ public void SolutionProjectIgnoresDuplicateDefaultTargets(string name)\n             using (TestEnvironment testEnvironment = TestEnvironment.Create())\n             {\n                 TransientTestFolder folder = testEnvironment.CreateFolder(createFolder: true);\n-                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", @\"Microsoft Visual Studio Solution File, Format Version 16.00\");\n+                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", \"Microsoft Visual Studio Solution File, Format Version 12.00\");",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "eh, no scratch that, the writable version is a constant and stays 12 https://github.com/microsoft/vs-solutionpersistence/blob/3489af847b089e729a641a6051a02990245e8716/src/Microsoft.VisualStudio.SolutionPersistence/Serializer/SlnV12/SlnConstants.cs#L15",
              "createdAt": "2024-10-17T13:28:23Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -65,12 +65,14 @@ public void SolutionProjectIgnoresDuplicateDefaultTargets(string name)\n             using (TestEnvironment testEnvironment = TestEnvironment.Create())\n             {\n                 TransientTestFolder folder = testEnvironment.CreateFolder(createFolder: true);\n-                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", @\"Microsoft Visual Studio Solution File, Format Version 16.00\");\n+                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", \"Microsoft Visual Studio Solution File, Format Version 12.00\");",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "thanks for checking!",
              "createdAt": "2024-10-17T13:38:00Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -65,12 +65,14 @@ public void SolutionProjectIgnoresDuplicateDefaultTargets(string name)\n             using (TestEnvironment testEnvironment = TestEnvironment.Create())\n             {\n                 TransientTestFolder folder = testEnvironment.CreateFolder(createFolder: true);\n-                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", @\"Microsoft Visual Studio Solution File, Format Version 16.00\");\n+                TransientTestFile sln = testEnvironment.CreateFile(folder, \"MySln.sln\", \"Microsoft Visual Studio Solution File, Format Version 12.00\");",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "also line 61? i tried it locally but that also doesn't help :(",
              "createdAt": "2024-10-18T13:09:59Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "Yeah, I thought the problem was in the lack of copying this file to msbuild bootstrap/core sources, but it looks like it has to be in a more specific place.\r\n",
              "createdAt": "2024-10-18T13:13:46Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "ah, I suspect the problem is that the .deps.json from the LKG SDK doesn't have the reference. Let me try patching manually to confirm",
              "createdAt": "2024-10-18T15:31:29Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Confirmed by\r\n\r\n1. building a local copy of SDK from a commit that had the flow of the new dependency\r\n2. overriding `dotnet.deps.json` and `MSBuild.deps.json` in our bootstrap\r\n3. building MSBuild\r\n\r\nEasiest path forward is probably to update our LKG SDK to `9.0.200-preview.0.24518.5` or newer that has the dependency.",
              "createdAt": "2024-10-18T16:53:59Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "(we should still overwrite the LKG with our version of this file, since if we take an update we'll take it in this repo first and we'll want to test that scenario)",
              "createdAt": "2024-10-18T16:54:41Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "opened https://github.com/dotnet/msbuild/pull/10850",
              "createdAt": "2024-10-18T21:02:25Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "kasperk81"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n```\r\nnot needed anymore",
              "createdAt": "2024-10-25T07:56:34Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "Is this really not needed? I think we should update the version of this assembly in our updated SDK, because if the SDK is going to take an update it'll flow through us first.",
              "createdAt": "2024-10-25T16:53:07Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "not needed rn. otherwise all Core builds would had failed as they were failing before the prior commit https://github.com/dotnet/msbuild/runs/31734741850\r\n",
              "createdAt": "2024-10-25T18:33:37Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "It's not needed _for this PR_ since we're not bumping the SolutionPersistence library. But when we do, we should use the new version in the bootstrapped SDK, instead of the old version from the LKG SDK, right?",
              "createdAt": "2024-10-25T18:38:46Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "ah absolutely, future proofing!",
              "createdAt": "2024-10-25T18:41:57Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "added this back in but specified 'Microsoft.VisualStudio.SolutionPersistence' instead of 'Microsoft.VisualStudio.'",
              "createdAt": "2024-10-28T18:01:14Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,6 +35,7 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.'))' == 'true'\" />",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "So far, we've only done even changewaves. Would you mind updating the docs to say that? Or do you think we should change policy?\r\n\r\n```suggestion\r\n        internal static readonly Version Wave17_14 = new Version(17, 14);\r\n        internal static readonly Version[] AllWaves = { Wave17_10, Wave17_12, Wave17_14 };\r\n```",
              "createdAt": "2024-10-25T16:36:03Z",
              "path": "src/Framework/ChangeWaves.cs",
              "diffHunk": "@@ -27,7 +27,8 @@ internal static class ChangeWaves\n     {\n         internal static readonly Version Wave17_10 = new Version(17, 10);\n         internal static readonly Version Wave17_12 = new Version(17, 12);\n-        internal static readonly Version[] AllWaves = { Wave17_10, Wave17_12 };\n+        internal static readonly Version Wave17_13 = new Version(17, 13);\n+        internal static readonly Version[] AllWaves = { Wave17_10, Wave17_12, Wave17_13 };",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "let's use 17.14",
              "createdAt": "2024-10-28T18:01:37Z",
              "path": "src/Framework/ChangeWaves.cs",
              "diffHunk": "@@ -27,7 +27,8 @@ internal static class ChangeWaves\n     {\n         internal static readonly Version Wave17_10 = new Version(17, 10);\n         internal static readonly Version Wave17_12 = new Version(17, 12);\n-        internal static readonly Version[] AllWaves = { Wave17_10, Wave17_12 };\n+        internal static readonly Version Wave17_13 = new Version(17, 13);\n+        internal static readonly Version[] AllWaves = { Wave17_10, Wave17_12, Wave17_13 };",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14) && string.IsNullOrEmpty(value))\r\n```",
              "createdAt": "2024-10-25T16:36:32Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -221,6 +221,10 @@ internal string FullPath\n \n             set\n             {\n+                if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_13) && string.IsNullOrEmpty(value))",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                    throw new ArgumentNullException(nameof(FullPath));\r\n```\r\n\r\n?",
              "createdAt": "2024-10-25T16:36:53Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -221,6 +221,10 @@ internal string FullPath\n \n             set\n             {\n+                if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_13) && string.IsNullOrEmpty(value))\n+                {\n+                    throw new ArgumentException(nameof(FullPath));",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        internal static bool ShouldUseNewParser(string solutionFile) => FileUtilities.IsSolutionXFilename(solutionFile) || ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14);\r\n```",
              "createdAt": "2024-10-25T16:37:03Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -193,7 +193,7 @@ internal int VisualStudioVersion\n \n         internal bool UseNewParser => ShouldUseNewParser(_solutionFile);\n \n-        internal static bool ShouldUseNewParser(string solutionFile) => FileUtilities.IsSolutionXFilename(solutionFile);\n+        internal static bool ShouldUseNewParser(string solutionFile) => FileUtilities.IsSolutionXFilename(solutionFile) || ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_13);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n### 17.14\r\n```",
              "createdAt": "2024-10-25T16:37:24Z",
              "path": "documentation/wiki/ChangeWaves.md",
              "diffHunk": "@@ -23,6 +23,9 @@ A wave of features is set to \"rotate out\" (i.e. become standard functionality) t\n \n ## Current Rotation of Change Waves\n \n+### 17.13",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Formatting change: \ud83d\udc4d\ud83c\udffb \r\n\r\nBut should this follow the pattern of the rest of everything in this file? It doesn't matter much while Dependabot is broken, I guess, but I'd rather be able to move forward. Though I think maybe with source-build requirements we can't really do the dependabot thing anyway?",
              "createdAt": "2024-10-25T16:39:03Z",
              "path": "eng/dependabot/Packages.props",
              "diffHunk": "@@ -61,7 +61,7 @@\n     <PackageVersion Include=\"Verify.Xunit\" Version=\"19.14.1\" />\n     <PackageVersion Update=\"Verify.XUnit\" Condition=\"'$(VerifyXUnitVersion)' != ''\" Version=\"$(VerifyXUnitVersion)\" />\n \t\n-\t<PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />\n+\t  <PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "space vs. tabs\r\n```suggestion\r\n    <PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />\r\n```",
              "createdAt": "2024-10-25T17:19:14Z",
              "path": "eng/dependabot/Packages.props",
              "diffHunk": "@@ -61,7 +61,7 @@\n     <PackageVersion Include=\"Verify.Xunit\" Version=\"19.14.1\" />\n     <PackageVersion Update=\"Verify.XUnit\" Condition=\"'$(VerifyXUnitVersion)' != ''\" Version=\"$(VerifyXUnitVersion)\" />\n \t\n-\t<PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />\n+\t  <PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "if dependabot won't update this package, then i think we should move this. where do you think would be best place?",
              "createdAt": "2024-10-28T18:15:28Z",
              "path": "eng/dependabot/Packages.props",
              "diffHunk": "@@ -61,7 +61,7 @@\n     <PackageVersion Include=\"Verify.Xunit\" Version=\"19.14.1\" />\n     <PackageVersion Update=\"Verify.XUnit\" Condition=\"'$(VerifyXUnitVersion)' != ''\" Version=\"$(VerifyXUnitVersion)\" />\n \t\n-\t<PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />\n+\t  <PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "Dependabot is just straight-up not working for us at all:  https://github.com/dependabot/dependabot-core/issues/7206. Nothing unique to this package.",
              "createdAt": "2024-10-28T18:22:59Z",
              "path": "eng/dependabot/Packages.props",
              "diffHunk": "@@ -61,7 +61,7 @@\n     <PackageVersion Include=\"Verify.Xunit\" Version=\"19.14.1\" />\n     <PackageVersion Update=\"Verify.XUnit\" Condition=\"'$(VerifyXUnitVersion)' != ''\" Version=\"$(VerifyXUnitVersion)\" />\n \t\n-\t<PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />\n+\t  <PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "maybe in `Microsoft.Build.csproj` right next to\r\nhttps://github.com/dotnet/msbuild/blob/b1ae836166204e2f4d44f46af4b6b3d4ebec6660/src/Build/Microsoft.Build.csproj#L33\r\n?",
              "createdAt": "2024-10-28T18:24:17Z",
              "path": "eng/dependabot/Packages.props",
              "diffHunk": "@@ -61,7 +61,7 @@\n     <PackageVersion Include=\"Verify.Xunit\" Version=\"19.14.1\" />\n     <PackageVersion Update=\"Verify.XUnit\" Condition=\"'$(VerifyXUnitVersion)' != ''\" Version=\"$(VerifyXUnitVersion)\" />\n \t\n-\t<PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />\n+\t  <PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "okay, then leaving it as it is.",
              "createdAt": "2024-10-28T18:29:12Z",
              "path": "eng/dependabot/Packages.props",
              "diffHunk": "@@ -61,7 +61,7 @@\n     <PackageVersion Include=\"Verify.Xunit\" Version=\"19.14.1\" />\n     <PackageVersion Update=\"Verify.XUnit\" Condition=\"'$(VerifyXUnitVersion)' != ''\" Version=\"$(VerifyXUnitVersion)\" />\n \t\n-\t<PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />\n+\t  <PackageVersion Include=\"Microsoft.VisualStudio.SolutionPersistence\" Version=\"$(MicrosoftVisualStudioSolutionPersistenceVersion)\" />",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: put the `Assert.Throws` around only the line that should throw.",
              "createdAt": "2024-10-25T16:40:34Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -96,59 +97,25 @@ public void ParseSolution_VC2(bool convertToSlnx)\n \n             string expectedProjectName = convertToSlnx ? \"Project name\" : \"Project name.myvctype\";\n             Assert.Equal(expectedProjectName, solution.ProjectsInOrder[0].ProjectName);\n-            Assert.Equal(ConvertToUnixPathIfNeeded(\"Relative path\\\\to\\\\Project name.myvctype\", convertToSlnx), solution.ProjectsInOrder[0].RelativePath);\n+            Assert.Equal(ConvertToUnixPathIfNeeded(\"Relative path\\\\to\\\\Project name.myvctype\"), solution.ProjectsInOrder[0].RelativePath);\n             if (!convertToSlnx)\n             {\n                 // When converting to SLNX, the project GUID is not preserved.\n                 Assert.Equal(\"{0ABED153-9451-483C-8140-9E8D7306B216}\", solution.ProjectsInOrder[0].ProjectGuid);\n             }\n         }\n \n-        /// <summary>\n-        /// A slightly more complicated test where there is some different whitespace.\n-        /// </summary>\n-        [Fact]\n-        public void ParseSolutionWithDifferentSpacing()\n-        {\n-            string solutionFileContents =\n-                @\"\n-                Microsoft Visual Studio Solution File, Format Version 9.00\n-                # Visual Studio 2005\n-                Project(' { Project GUID} ')  = ' Project name ',  ' Relative path to project file '    , ' {0ABED153-9451-483C-8140-9E8D7306B216} '\n-                EndProject\n-                Global\n-                    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-                        Debug|AnyCPU = Debug|AnyCPU\n-                        Release|AnyCPU = Release|AnyCPU\n-                    EndGlobalSection\n-                    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Debug|AnyCPU.ActiveCfg = Debug|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Debug|AnyCPU.Build.0 = Debug|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Release|AnyCPU.ActiveCfg = Release|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Release|AnyCPU.Build.0 = Release|AnyCPU\n-                    EndGlobalSection\n-                    GlobalSection(SolutionProperties) = preSolution\n-                        HideSolutionNode = FALSE\n-                    EndGlobalSection\n-                EndGlobal\n-                \";\n-\n-            SolutionFile solution = ParseSolutionHelper(solutionFileContents);\n-\n-            Assert.Equal(\"Project name\", solution.ProjectsInOrder[0].ProjectName);\n-            Assert.Equal(\"Relative path to project file\", solution.ProjectsInOrder[0].RelativePath);\n-            Assert.Equal(\"{0ABED153-9451-483C-8140-9E8D7306B216}\", solution.ProjectsInOrder[0].ProjectGuid);\n-        }\n-\n         /// <summary>\n         /// Solution with an empty project name.  This is somewhat malformed, but we should\n         /// still behave reasonably instead of crashing.\n         /// </summary>\n         [Fact]\n         public void ParseSolution_EmptyProjectName()\n         {\n-            string solutionFileContents =\n-                           @\"\n+            Assert.Throws<InvalidProjectFileException>(() =>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: move the long string to a const to avoid repeating it",
              "createdAt": "2024-10-25T16:44:14Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -2640,20 +2732,23 @@ public void DirectorySolutionPropsTest(string projectName, bool enable)\n         /// Regression test for https://github.com/dotnet/msbuild/issues/6236\n         /// </summary>\n         [Theory]\n-        [InlineData(\"http://localhost:8080\")]\n-        [InlineData(\"a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-\")]\n-        public void AbsolutePathWorksForUnsupportedPaths(string relativePath)\n+        [InlineData(\"http://localhost:8080\", false)]\n+        [InlineData(\"http://localhost:8080\", true)]\n+        [InlineData(\"a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-\", false)]",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "@rainersigwald do you know if we should also update PackageValidationBaselineVersion?",
              "createdAt": "2024-10-28T18:18:08Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -2,7 +2,7 @@\n <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->\n <Project>\n   <PropertyGroup>\n-    <VersionPrefix>17.13.0</VersionPrefix>\n+    <VersionPrefix>17.14.0</VersionPrefix>\n     <PackageValidationBaselineVersion>17.12.0</PackageValidationBaselineVersion>",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "is it also needed around line 62?",
              "createdAt": "2024-10-28T18:20:31Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,7 +35,8 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n-\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.SolutionPersistence'))' == 'true'\" />",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "sorry, i don't understand what you mean here. what is it about line 62? ",
              "createdAt": "2024-10-28T18:28:25Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,7 +35,8 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n-\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.SolutionPersistence'))' == 'true'\" />",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "`        <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('Microsoft.VisualStudio.SolutionPersistence'))' == 'true'\" />`\r\n\r\nlike everything else is setup in this file (there is a comment about hack/workaround)",
              "createdAt": "2024-10-28T18:31:56Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,7 +35,8 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n-\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.SolutionPersistence'))' == 'true'\" />",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "yes, thank you for noticing!",
              "createdAt": "2024-10-28T18:36:22Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -35,7 +35,8 @@\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.Extensions.'))' == 'true'\" />\n-\n+        <_NuGetRuntimeDependencies Include=\"%(RuntimeCopyLocalItems.Identity)\" Condition=\"'@(RuntimeCopyLocalItems->Contains('Microsoft.VisualStudio.SolutionPersistence'))' == 'true'\" />",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Do NOT bump this, this is our product version number. Only move the changewave forward--it's ok and expected to introduce changewave 17.14 in MSBuild 17.13.",
              "createdAt": "2024-10-28T18:24:16Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -2,7 +2,7 @@\n <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->\n <Project>\n   <PropertyGroup>\n-    <VersionPrefix>17.13.0</VersionPrefix>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "thanks!\r\n",
              "createdAt": "2024-10-28T18:25:17Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -2,7 +2,7 @@\n <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->\n <Project>\n   <PropertyGroup>\n-    <VersionPrefix>17.13.0</VersionPrefix>",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "done",
              "createdAt": "2024-10-28T18:26:57Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -2,7 +2,7 @@\n <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->\n <Project>\n   <PropertyGroup>\n-    <VersionPrefix>17.13.0</VersionPrefix>",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "By the reasoning in the comment above I don't think this is necessary; we expect to deploy SolutionPersistence.dll next to MSBuild, unlike the NuGet stuff. Was it actually causing a build problem?",
              "createdAt": "2024-11-01T13:58:42Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -59,6 +60,7 @@\n         <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('Microsoft.VisualStudio.SolutionPersistence'))' == 'true'\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "no, it wasn't causing any problem. i added this to match the other packages that are included above.\r\n\r\ni will remove this.",
              "createdAt": "2024-11-01T14:23:01Z",
              "path": "eng/BootStrapMsBuild.targets",
              "diffHunk": "@@ -59,6 +60,7 @@\n         <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('Newtonsoft.Json'))' == 'true'\" />\n         <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('NuGetSdkResolver'))' == 'true'\" />\n         <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('Microsoft.Extensions.'))' == 'true'\" />\n+        <Reference Remove=\"%(Reference.Identity)\" Condition=\"'@(Reference->Contains('Microsoft.VisualStudio.SolutionPersistence'))' == 'true'\" />",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: mostly this will reduce to a constant `true`, so it's more efficient to run this check _first_ and not have to do any string operations.\r\n\r\n```suggestion\r\n        internal static bool ShouldUseNewParser(string solutionFile) => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14) || FileUtilities.IsSolutionXFilename(solutionFile);\r\n```\r\n\r\n(here this is firmly in \"who cares?\" territory, that string check is cheap and we run it ~once per build. But I try to think about this sort of thing in all boolean-logic conditions; in a hot inner loop it can help.)",
              "createdAt": "2024-11-01T14:00:51Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -193,7 +193,7 @@ internal int VisualStudioVersion\n \n         internal bool UseNewParser => ShouldUseNewParser(_solutionFile);\n \n-        internal static bool ShouldUseNewParser(string solutionFile) => FileUtilities.IsSolutionXFilename(solutionFile);\n+        internal static bool ShouldUseNewParser(string solutionFile) => FileUtilities.IsSolutionXFilename(solutionFile) || ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "makes sense. thanks!",
              "createdAt": "2024-11-01T14:24:09Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -193,7 +193,7 @@ internal int VisualStudioVersion\n \n         internal bool UseNewParser => ShouldUseNewParser(_solutionFile);\n \n-        internal static bool ShouldUseNewParser(string solutionFile) => FileUtilities.IsSolutionXFilename(solutionFile);\n+        internal static bool ShouldUseNewParser(string solutionFile) => FileUtilities.IsSolutionXFilename(solutionFile) || ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14);",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "do these tests use Wave17_14 implicitly or need to opt-in?",
              "createdAt": "2024-11-01T15:24:49Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -2640,20 +2734,23 @@ public void DirectorySolutionPropsTest(string projectName, bool enable)\n         /// Regression test for https://github.com/dotnet/msbuild/issues/6236\n         /// </summary>\n         [Theory]\n-        [InlineData(\"http://localhost:8080\")]\n-        [InlineData(\"a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-\")]\n-        public void AbsolutePathWorksForUnsupportedPaths(string relativePath)\n+        [InlineData(\"http://localhost:8080\", false)]\n+        [InlineData(\"http://localhost:8080\", true)]\n+        [InlineData(_longLineString, false)]\n+        [InlineData(_longLineString, true)]\n+        public void AbsolutePathWorksForUnsupportedPaths(string relativePath, bool useNewParser)\n         {",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "to answer your question, Wave17_14 is enabled in the whole build. Tests are modified so both old and new parsers are tested:\r\n- `SolutionProjectGenerator_Tests` are modified to use both old and new parsers. \r\n- `SolutionFile_Tests` that were old parser specific are moved to `SolutionFile_OldParser_Tests` that use old parser. `SolutionFile_Tests` uses `Parse()` method which calls new parser because Wave17_14 is enabled.",
              "createdAt": "2024-11-01T15:36:04Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -2640,20 +2734,23 @@ public void DirectorySolutionPropsTest(string projectName, bool enable)\n         /// Regression test for https://github.com/dotnet/msbuild/issues/6236\n         /// </summary>\n         [Theory]\n-        [InlineData(\"http://localhost:8080\")]\n-        [InlineData(\"a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-\")]\n-        public void AbsolutePathWorksForUnsupportedPaths(string relativePath)\n+        [InlineData(\"http://localhost:8080\", false)]\n+        [InlineData(\"http://localhost:8080\", true)]\n+        [InlineData(_longLineString, false)]\n+        [InlineData(_longLineString, true)]\n+        public void AbsolutePathWorksForUnsupportedPaths(string relativePath, bool useNewParser)\n         {",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      }
    ]
  }
}