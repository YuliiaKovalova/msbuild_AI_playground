{
  "number": 5799,
  "title": "Check TargetFramework Using Intrinsic Function",
  "body": "Fixes https://github.com/dotnet/msbuild/issues/5792\r\n\r\nWe had two areas where MSBuild checked TargetFramework based on whether it started with `netcore` and `netstandard`.\r\n\r\nEx:\r\nhttps://github.com/dotnet/msbuild/blob/a71067913c82bcb5d79a13f40ff8b12cbd384c1c/src/Directory.BeforeCommon.targets#L114\r\n\r\nWith net5.0 resolving to `net5.0` instead of `netcoreapp5.0`, this logic would no longer succeed, so here's a quick fix via intrinsic function `GetTargetFrameworkIdentifier` introduced in https://github.com/dotnet/msbuild/pull/5429.\r\n\r\n------\r\nSome other notes:\r\n\r\nThere are a few other areas that look like we could use these intrinsic functions, but it would overcomplicate the logic. Here's what I found with `rg -iF \"StartsWith('net\"`\r\n```\r\nsrc\\MSBuild.Bootstrap\\MSBuild.Bootstrap.csproj\r\n55:  <Import Project=\"..\\Package\\GetBinPaths.targets\" Condition=\"$(TargetFramework.StartsWith('net4'))\"/>\r\n\r\nsrc\\Directory.Build.props\r\n71:  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('net4'))\">\r\n77:  <PropertyGroup Condition=\"!$(TargetFramework.StartsWith('net4'))\">\r\n\r\nsrc\\Directory.Build.targets\r\n141:  <Import Project=\"$(BUILD_STAGINGDIRECTORY)\\MicroBuild\\Plugins\\MicroBuild.Plugins.IBCMerge.*\\**\\build\\MicroBuild.Plugins.*.targets\" Condition=\"'$(BUILD_STAGINGDIRECTORY)' != '' and $(TargetFramework.StartsWith('net4')) and '$(MicroBuild_EnablePGO)' != 'false'\" />\r\n\r\nsrc\\Directory.BeforeCommon.targets\r\n19:  <PropertyGroup Condition=\"$(TargetFramework.StartsWith('net4')) Or $(TargetFramework.StartsWith('net3'))\">\r\n\r\neng\\BootStrapMSBuild.targets\r\n15:    <BootstrapDependsOn Condition=\"$(TargetFramework.StartsWith('net4'))\">BootstrapFull</BootstrapDependsOn>\r\n16:    <BootstrapDependsOn Condition=\"!$(TargetFramework.StartsWith('net4'))\">BootstrapNetCore</BootstrapDependsOn>\r\n```\r\n\r\nThese checks are likely better than \r\n```\r\n[MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework' and [MSBuild]::GetTargetPlatformVersion('$(TargetFramework)', 1)) == '4'\r\n```",
  "state": "MERGED",
  "createdAt": "2020-10-13T23:25:01Z",
  "updatedAt": "2021-06-30T17:06:56Z",
  "closedAt": "2021-06-30T17:06:56Z",
  "mergedAt": "2021-06-30T17:06:56Z",
  "additions": 4,
  "deletions": 4,
  "changedFiles": 2,
  "headRefName": "tfm-conditions",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "76fd2978ad3947408cb59ed37856d64abd375d7f",
          "message": "Create new private properties for TFI and TFV",
          "committedDate": "2021-06-03T23:32:38Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e0fd7c1dd7e6bf5417ad42192f047a243c0b98eb",
          "message": "Condition GenAPI on new property. Change where its defined",
          "committedDate": "2021-06-04T19:21:11Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "579949a3db7dc4165328fcca76b9c5282f59027c",
          "message": "Update src/Tasks/Microsoft.Common.CurrentVersion.targets\n\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2021-06-07T23:08:28Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "aa159e33c587ac5988ce9c839d69746afc9842ac",
          "message": "Check TargetFramework with GetTargetFrameworkIdentifier",
          "committedDate": "2021-06-14T17:45:28Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "712912db580203f8b52d45abba6a6e7f24bf5001",
          "message": "Don't modify TFI in currentversion.targets",
          "committedDate": "2021-06-14T17:50:07Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cd4390d394fa3c825fa822ee07055966dc07da78",
          "message": "Add netstandard check for NetCoreBuild properties",
          "committedDate": "2021-06-21T17:43:23Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: We can't do this until both the hosted azure devops build machines and the internal build pool that does our official builds is updated to 16.8.",
        "createdAt": "2020-10-14T15:49:45Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "PR Title should have `TargetFramework` instead of `TargetPlatform`.",
        "createdAt": "2020-10-16T06:54:09Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "@Nirmal4G thanks! updated",
        "createdAt": "2020-10-16T15:48:33Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Looking at PRs this morning--this should work now.",
        "createdAt": "2020-12-22T16:47:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2020-12-22T16:47:24Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2020-12-22T16:47:33Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "Oh, of course: all the Core build job flavors won't work because they build with an old .NET Core SDK. So this is blocked on #5515.",
        "createdAt": "2020-12-22T17:50:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Is this unblocked now that we're on .NET 5?",
        "createdAt": "2021-03-08T15:39:00Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind Good question. I'll rebase and run the tests again",
        "createdAt": "2021-03-08T22:52:56Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "This is ready for review.",
        "createdAt": "2021-03-10T23:35:56Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Any recent progress on this? Would be nice to finish it or close it until you're ready to come back to it.",
        "createdAt": "2021-06-01T21:06:32Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Team triage: This can break projects that don't have TFI defined and don't expect to define it. We fixed this in other ways in other parts of our repo.",
        "createdAt": "2021-06-14T15:52:54Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "At minimum shouldn't this be \r\n\r\n```xml\r\n<GenAPIShortFrameworkIdentifier Condition=\"'$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))' == '.NETFramework'\">net</GenAPIShortFrameworkIdentifier>\r\n<GenAPIShortFrameworkIdentifier Condition=\"'$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))' == '.NETStandard'\">netstandard</GenAPIShortFrameworkIdentifier>\r\n<GenAPIShortFrameworkIdentifier Condition=\"'$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))' == '.NETCoreApp'\">netstandard</GenAPIShortFrameworkIdentifier>\r\n```\r\n\r\nOr save $([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework))) into some unique property just before this and check that?\r\n\r\nOr should https://github.com/dotnet/msbuild/issues/5792 be closed?",
        "createdAt": "2021-06-14T17:22:35Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Yes, changing the checks to use the property function for our own repo is appropriate. Adding it to common.targets is riskier and I don't think we should do it now.",
        "createdAt": "2021-06-14T17:23:55Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald ah too broadly scoped, got it. Will revert it to mostly [the first version](https://github.com/benvillalobos/msbuild/commit/929e40e00) of this PR",
        "createdAt": "2021-06-14T17:31:57Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2021-06-21T18:41:13Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2021-06-21T18:41:23Z",
        "author": {
          "login": "azure-pipelines"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Maybe save off $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)') so you don't have to call it five times?\r\n\r\nAlso, you could shorten the Build.targets one to ... == '.NETFramework' and ... != '.NETFramework'",
              "createdAt": "2021-03-10T23:40:46Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -110,7 +110,7 @@\n     <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp1.0')) or $(TargetFramework.StartsWith('netstandard')))\">\n+  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' or $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard')\">",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "NTS from PR review before I forget: Check a binlog file to see which file gets imported first. That's where to set the <TargetFrameworkIdentifier> property.",
              "createdAt": "2021-03-15T22:17:34Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -110,7 +110,7 @@\n     <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp1.0')) or $(TargetFramework.StartsWith('netstandard')))\">\n+  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' or $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard')\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Or put a conditionally included property in each. Probably safer since you wouldn't test every possible scenario.",
              "createdAt": "2021-03-15T22:26:40Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -110,7 +110,7 @@\n     <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp1.0')) or $(TargetFramework.StartsWith('netstandard')))\">\n+  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' or $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard')\">",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Did you verify this comes before the one from D.BC.t? Also, is $(TargetFrameworkIdentifier) really not used?",
              "createdAt": "2021-03-15T23:39:54Z",
              "path": "src/Directory.Build.targets",
              "diffHunk": "@@ -69,6 +69,10 @@\n     <PackageReference Update=\"Microsoft.NETCore.App\" PrivateAssets=\"All\" />\n   </ItemGroup>\n \n+  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and '$(TargetFrameworkIdentifier)' == ''\">\n+    <TargetFrameworkIdentifier>$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))</TargetFrameworkIdentifier>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    <TargetFrameworkVersion Condition=\"'$(TargetFrameworkVersion)' == ''\">$([MSBuild]::GetTargetFrameworkVersion($(TargetFramework)))</TargetFrameworkIdentifier>\r\n```\r\n?",
              "createdAt": "2021-06-07T14:20:06Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -48,6 +48,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <TargetRuntime>Managed</TargetRuntime>\n   </PropertyGroup>\n \n+    <!-- Store values of certain intrinsic functions that won't change throughout the build. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' != ''\">\n+    <TargetFrameworkIdentifier Condition=\"'$(TargetFrameworkIdentifier)' == ''\">$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))</TargetFrameworkIdentifier>\n+    <TargetFrameworkVersion Condition=\"'$(TargetFrameworkIdentifier)' == ''\">$([MSBuild]::GetTargetFrameworkVersion($(TargetFramework)))</TargetFrameworkIdentifier>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This worries me. Does it really not conflict with something NuGet does?",
              "createdAt": "2021-06-07T19:09:48Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -48,6 +48,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <TargetRuntime>Managed</TargetRuntime>\n   </PropertyGroup>\n \n+    <!-- Store values of certain intrinsic functions that won't change throughout the build. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' != ''\">\n+    <TargetFrameworkIdentifier Condition=\"'$(TargetFrameworkIdentifier)' == ''\">$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))</TargetFrameworkIdentifier>\n+    <TargetFrameworkVersion Condition=\"'$(TargetFrameworkVersion)' == ''\">$([MSBuild]::GetTargetFrameworkVersion($(TargetFramework)))</TargetFrameworkIdentifier>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I had a general concern overriding these, so I added the check to see if it didn't already have a value. Do you think this could mess with something nuget does where they do a similar \"set it if it isn't already set\" check?\r\n\r\nWhen setting these values here, I considered prefixing this with an underscore for safety. Maybe we have a different naming convention for \"Values that likely won't change during a build that we store for msbuild specific purposes\"?",
              "createdAt": "2021-06-07T19:15:37Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -48,6 +48,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <TargetRuntime>Managed</TargetRuntime>\n   </PropertyGroup>\n \n+    <!-- Store values of certain intrinsic functions that won't change throughout the build. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' != ''\">\n+    <TargetFrameworkIdentifier Condition=\"'$(TargetFrameworkIdentifier)' == ''\">$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))</TargetFrameworkIdentifier>\n+    <TargetFrameworkVersion Condition=\"'$(TargetFrameworkVersion)' == ''\">$([MSBuild]::GetTargetFrameworkVersion($(TargetFramework)))</TargetFrameworkIdentifier>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\"or netstandard\", right? Assuming the netstandard->netcoreapp change may not actually go through.",
              "createdAt": "2021-06-14T17:49:35Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -110,7 +110,7 @@\n     <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp1.0')) or $(TargetFramework.StartsWith('netstandard')))\">\n+  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp'\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "That should be the right move. This was cherry-picked and I didn't amend the commit :) Would rebase and clean up the history but this will likely be squashed",
              "createdAt": "2021-06-14T17:58:56Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -110,7 +110,7 @@\n     <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp1.0')) or $(TargetFramework.StartsWith('netstandard')))\">\n+  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp'\">",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Remove this entirely  please.",
              "createdAt": "2021-06-14T17:50:00Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -48,6 +48,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <TargetRuntime>Managed</TargetRuntime>\n   </PropertyGroup>\n \n+    <!-- Store values of certain intrinsic functions that won't change throughout the build. -->\n+  <PropertyGroup Condition=\"'$(TargetFramework)' != ''\">\n+    <TargetFrameworkIdentifier Condition=\"'$(TargetFrameworkIdentifier)' == ''\">$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))</TargetFrameworkIdentifier>\n+    <TargetFrameworkVersion Condition=\"'$(TargetFrameworkVersion)' == ''\">$([MSBuild]::GetTargetFrameworkVersion($(TargetFramework)))</TargetFrameworkVersion>\n+  </PropertyGroup>\n+",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "> ```\r\n> src/Directory.BeforeCommon.targets(113,18): error MSB4130: The condition \"'$(MonoBuild)' != 'true' and $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' or $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'\" may have been evaluated incorrectly in an earlier version of MSBuild. Please verify that the order of the AND and OR clauses is written as intended. To avoid this warning, add parentheses to make the evaluation order explicit.\r\n> ```\r\n\r\nThe _bug to remove this old warning_ (#1698) is 4 years old. The warning itself was commited on `2006-06-13 16:04:38`.\r\n\r\n\ud83d\ude14\r\n\r\nHowever, let's go ahead and overparenthesize.\r\n\r\n```suggestion\r\n  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' or $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard' )\">\r\n```",
              "createdAt": "2021-06-18T15:38:26Z",
              "path": "src/Directory.BeforeCommon.targets",
              "diffHunk": "@@ -110,7 +110,7 @@\n     <DefineConstants Condition=\"$([MSBuild]::IsOSPlatform('windows'))\">$(DefineConstants);TEST_ISWINDOWS</DefineConstants>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and ($([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netcoreapp1.0')) or $(TargetFramework.StartsWith('netstandard')))\">\n+  <PropertyGroup Condition=\"'$(MonoBuild)' != 'true' and $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' or $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'\">",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}