{
  "number": 10404,
  "title": "Retire stale changewaves",
  "body": "After discussion in #9543 we decided to delay changewave retirement to a release corresponding with 9.0.100. The time is now.",
  "state": "MERGED",
  "createdAt": "2024-07-17T21:08:03Z",
  "updatedAt": "2024-07-30T21:30:08Z",
  "closedAt": "2024-07-30T21:30:06Z",
  "mergedAt": "2024-07-30T21:30:06Z",
  "additions": 150,
  "deletions": 1415,
  "changedFiles": 45,
  "headRefName": "stale\ud83c\udf0a",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "f6ddf5417014ae8f0f82bfb748232b19acac8186",
          "message": "Eliminate ProjectStringCache and its direct references.",
          "committedDate": "2022-09-08T16:02:59Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "222f0bf374ce2d7b0ab2ad79eb9b1a9c7eb43fd6",
          "message": "Remove unit test in ProjectRootElement_Tests related to ProjectStringCache.",
          "committedDate": "2022-09-08T16:03:10Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a6590dbc776e67504c69ceea20b5c1c17e9e45f4",
          "message": "Remove dead code in ProjectRootElementCache related to ProjectStringCache.",
          "committedDate": "2022-09-08T16:03:10Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "27b56aea0f62ee13245d278d5427796fed7ef07a",
          "message": "Retire change wave 17.4\n\nIts time has come: per the documented schedule, it's more than 2 waves\nold and we're hitting the 9.0.100 release.",
          "committedDate": "2024-07-17T19:52:26Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ca3aa9a935b2f2c88d510741cff602bc15ae6c37",
          "message": "Merge branch 'eliminate-project-string-cache' into remove-wave-17.4",
          "committedDate": "2024-07-17T20:38:39Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8764f72393622deec4d161fb40042b6d21574077",
          "message": "Retire changewave 17.6",
          "committedDate": "2024-07-19T15:24:22Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a49bf6cf54854d4afb9d6b72c9d4b2d4efc9fd30",
          "message": "Retire wave 17.8",
          "committedDate": "2024-07-19T15:24:22Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3d1b88fdb9716d3d10f288d3dfe63420de300bf5",
          "message": "Merge branch 'main' into stale\ud83c\udf0a",
          "committedDate": "2024-07-30T20:10:00Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Pinging folks relevant to the changes that are being made permanent: @ar-may, @JanKrivanek, @Forgind, @JaynieBai.\r\n\r\nAlso @marcpopMSFT as a heads up.",
        "createdAt": "2024-07-19T14:05:14Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Also, I thought we were planning to always have three change waves active at a time? If we're changing that, perhaps we should update the .md to say that \ud83d\ude42\r\n\r\nI interpreted\r\n\r\n> A wave of features is set to \"rotate out\" (i.e. become standard functionality) two bands after its release. For example, wave 16.8 stayed opt-out through wave 16.10, becoming standard functionality when wave 17.0 is introduced.\r\n\r\nand\r\n\r\n> Invalid Value (Ex: `16.9` when valid waves are `16.8` and `16.10`)\r\n\r\nTo mean we should generally only have two available but I couldn't remember the details on this part. @marcpopMSFT do you, by chance?",
        "createdAt": "2024-07-29T19:16:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> > Also, I thought we were planning to always have three change waves active at a time? If we're changing that, perhaps we should update the .md to say that \ud83d\ude42\r\n> \r\n> I interpreted\r\n> \r\n> > A wave of features is set to \"rotate out\" (i.e. become standard functionality) two bands after its release. For example, wave 16.8 stayed opt-out through wave 16.10, becoming standard functionality when wave 17.0 is introduced.\r\n> \r\n> and\r\n> \r\n> > Invalid Value (Ex: `16.9` when valid waves are `16.8` and `16.10`)\r\n> \r\n> To mean we should generally only have two available but I couldn't remember the details on this part. @marcpopMSFT do you, by chance?\r\n\r\nIt seems a bit ambiguous. I saw examples like this:\r\nhttps://github.com/dotnet/msbuild/blob/6fdd7318695eea68bf51bff5d6caf19f079a8597/documentation/wiki/ChangeWaves-Dev.md?plain=1#L38\r\nwhich has three active change waves after the update. I interpreted `two bands after its release` to mean that we'd have 17_0 and 17_2 would be released (and active), and 17_4 would be active but not released (because it's in preview). Then when 17_4 releases, 17_0 would rotate out, and 17_6 would become the new preview version.\r\n\r\nRegardless, I don't think it actually matters, so I have no problem with your interpretation and making that the official version.",
        "createdAt": "2024-07-29T20:15:33Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Ah; I think that makes sense in e.g. the 17.3 release--but now we're in the 17.12 release so that one will be \"released and active\", right?",
        "createdAt": "2024-07-29T20:22:45Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Ah; I think that makes sense in e.g. the 17.3 release--but now we're in the 17.12 release so that one will be \"released and active\", right?\r\n\r\nI'd say we're working on 17.12, so it's active but still in preview, that is, not released.",
        "createdAt": "2024-07-30T21:29:11Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "We are also retiring 17.6 and 17.8 right? These are still included in the active changewaves here.",
              "createdAt": "2024-07-19T14:46:09Z",
              "path": "documentation/wiki/ChangeWaves.md",
              "diffHunk": "@@ -57,13 +57,6 @@ A wave of features is set to \"rotate out\" (i.e. become standard functionality) t\n - [AnyHaveMetadataValue returns false when passed an empty list](https://github.com/dotnet/msbuild/pull/8603)\n - [Log item self-expansion](https://github.com/dotnet/msbuild/pull/8581)\n \n-### 17.4",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "Thanks!",
              "createdAt": "2024-07-19T15:25:45Z",
              "path": "documentation/wiki/ChangeWaves.md",
              "diffHunk": "@@ -57,13 +57,6 @@ A wave of features is set to \"rotate out\" (i.e. become standard functionality) t\n - [AnyHaveMetadataValue returns false when passed an empty list](https://github.com/dotnet/msbuild/pull/8603)\n - [Log item self-expansion](https://github.com/dotnet/msbuild/pull/8581)\n \n-### 17.4",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Isn't this a change of behavior? StringCache.Add(text, this) just returned text, whereas this now interns the string? I don't think it will break anything, but I thought this PR was intended to have no effect as long as someone isn't disabling any change waves.",
              "createdAt": "2024-07-19T16:52:07Z",
              "path": "src/Build/ElementLocation/XmlDocumentWithLocation.cs",
              "diffHunk": "@@ -262,7 +240,7 @@ public override XmlWhitespace CreateWhitespace(string text)\n                 text = String.Empty;\n             }\n \n-            string interned = StringCache.Add(text, this);\n+            string interned = Strings.WeakIntern(text);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "@AR-May this came from your changes, got an opinion?",
              "createdAt": "2024-07-29T19:22:29Z",
              "path": "src/Build/ElementLocation/XmlDocumentWithLocation.cs",
              "diffHunk": "@@ -262,7 +240,7 @@ public override XmlWhitespace CreateWhitespace(string text)\n                 text = String.Empty;\n             }\n \n-            string interned = StringCache.Add(text, this);\n+            string interned = Strings.WeakIntern(text);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I really want this in for 17.12-preview1 so I'm going to go in with the current state. https://github.com/dotnet/msbuild/issues/10465 for follow up.",
              "createdAt": "2024-07-30T21:28:01Z",
              "path": "src/Build/ElementLocation/XmlDocumentWithLocation.cs",
              "diffHunk": "@@ -262,7 +240,7 @@ public override XmlWhitespace CreateWhitespace(string text)\n                 text = String.Empty;\n             }\n \n-            string interned = StringCache.Add(text, this);\n+            string interned = Strings.WeakIntern(text);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: whitespace",
              "createdAt": "2024-07-22T08:29:06Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -118,7 +110,7 @@ public virtual void ClearCaches()\n         /// <inheritdoc cref=\"ISdkResolverService.ResolveSdk\"/>\n         public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, string solutionPath, string projectPath, bool interactive, bool isRunningInVisualStudio, bool failOnUnresolvedSdk)\n         {\n-            // If we are running in .NET core, we ask the built-in default resolver first.\n+                        // If we are running in .NET core, we ask the built-in default resolver first.",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this a functional change? Should it possibly be a separate PR or at least commit (if not squashing the PR)?",
              "createdAt": "2024-07-22T08:31:12Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -165,27 +157,8 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC\n                 }\n             }\n #endif\n-            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4))\n-            {\n-                return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);\n-            }\n-            else\n-            {\n-                SdkResult result = ResolveSdkUsingAllResolvers(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, out IEnumerable<string> errors, out IEnumerable<string> warnings);\n-\n-                // Warnings are already logged on success.\n-                if (!result.Success)\n-                {\n-                    if (failOnUnresolvedSdk)\n-                    {\n-                        loggingContext.LogError(new BuildEventFileInfo(sdkReferenceLocation), \"FailedToResolveSDK\", sdk.Name, string.Join($\"{Environment.NewLine}  \", errors));\n-                    }\n-\n-                    LogWarnings(loggingContext, sdkReferenceLocation, warnings);\n-                }\n \n-                return result;\n-            }\n+            return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "I'm a little confused; this line was in the `if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4))` block, and the deleted code was in the else, so this seems like a functional change only if the 17.4 change wave was disabled.",
              "createdAt": "2024-07-22T16:46:37Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -165,27 +157,8 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC\n                 }\n             }\n #endif\n-            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4))\n-            {\n-                return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);\n-            }\n-            else\n-            {\n-                SdkResult result = ResolveSdkUsingAllResolvers(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, out IEnumerable<string> errors, out IEnumerable<string> warnings);\n-\n-                // Warnings are already logged on success.\n-                if (!result.Success)\n-                {\n-                    if (failOnUnresolvedSdk)\n-                    {\n-                        loggingContext.LogError(new BuildEventFileInfo(sdkReferenceLocation), \"FailedToResolveSDK\", sdk.Name, string.Join($\"{Environment.NewLine}  \", errors));\n-                    }\n-\n-                    LogWarnings(loggingContext, sdkReferenceLocation, warnings);\n-                }\n \n-                return result;\n-            }\n+            return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "@JanKrivanek that was indeed the intent, are you seeing something else?",
              "createdAt": "2024-07-29T19:24:22Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -165,27 +157,8 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC\n                 }\n             }\n #endif\n-            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4))\n-            {\n-                return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);\n-            }\n-            else\n-            {\n-                SdkResult result = ResolveSdkUsingAllResolvers(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, out IEnumerable<string> errors, out IEnumerable<string> warnings);\n-\n-                // Warnings are already logged on success.\n-                if (!result.Success)\n-                {\n-                    if (failOnUnresolvedSdk)\n-                    {\n-                        loggingContext.LogError(new BuildEventFileInfo(sdkReferenceLocation), \"FailedToResolveSDK\", sdk.Name, string.Join($\"{Environment.NewLine}  \", errors));\n-                    }\n-\n-                    LogWarnings(loggingContext, sdkReferenceLocation, warnings);\n-                }\n \n-                return result;\n-            }\n+            return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Sorry - my confusion only (I'm looking on the change and my comment and cannot recall what was I thinking)",
              "createdAt": "2024-07-30T20:44:45Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -165,27 +157,8 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC\n                 }\n             }\n #endif\n-            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_4))\n-            {\n-                return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);\n-            }\n-            else\n-            {\n-                SdkResult result = ResolveSdkUsingAllResolvers(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, out IEnumerable<string> errors, out IEnumerable<string> warnings);\n-\n-                // Warnings are already logged on success.\n-                if (!result.Success)\n-                {\n-                    if (failOnUnresolvedSdk)\n-                    {\n-                        loggingContext.LogError(new BuildEventFileInfo(sdkReferenceLocation), \"FailedToResolveSDK\", sdk.Name, string.Join($\"{Environment.NewLine}  \", errors));\n-                    }\n-\n-                    LogWarnings(loggingContext, sdkReferenceLocation, warnings);\n-                }\n \n-                return result;\n-            }\n+            return ResolveSdkUsingResolversWithPatternsFirst(submissionId, sdk, loggingContext, sdkReferenceLocation, solutionPath, projectPath, interactive, isRunningInVisualStudio, failOnUnresolvedSdk);",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why is this change part of changewaves retiring?",
              "createdAt": "2024-07-22T08:34:02Z",
              "path": "src/Build/Construction/ProjectRootElement.cs",
              "diffHunk": "@@ -1691,31 +1691,13 @@ private void ReloadFrom(Func<bool, XmlDocumentWithLocation> documentProducer, bo\n \n             var oldDocument = XmlDocument;\n             XmlDocumentWithLocation newDocument = documentProducer(preserveFormatting ?? PreserveFormatting);\n-            try\n-            {\n-                // Reload should only mutate the state if there are no parse errors.\n-                ThrowIfDocumentHasParsingErrors(newDocument);\n \n-                RemoveAllChildren();\n+            // Reload should only mutate the state if there are no parse errors.\n+            ThrowIfDocumentHasParsingErrors(newDocument);\n \n-                ProjectParser.Parse(newDocument, this);\n-            }\n-            finally\n-            {\n-                // Whichever document didn't become this element's document must be removed from the string cache.\n-                // We do it after the fact based on the assumption that Projects are reloaded repeatedly from their\n-                // file with small increments, and thus most strings would get reused avoiding unnecessary churn in\n-                // the string cache.\n-                var currentDocument = XmlDocument;\n-                if (!object.ReferenceEquals(currentDocument, oldDocument))\n-                {\n-                    oldDocument.ClearAnyCachedStrings();\n-                }\n-                if (!object.ReferenceEquals(currentDocument, newDocument))\n-                {\n-                    newDocument.ClearAnyCachedStrings();\n-                }\n-            }\n+            RemoveAllChildren();\n+\n+            ProjectParser.Parse(newDocument, this);",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "There was a change wave governing what the string cache did: if the change wave was enabled, it basically just returned the string without touching it or interning it. Since that was the point of the string cache, this change removed the whole class and all references to it, including those in this finally block.",
              "createdAt": "2024-07-22T16:44:43Z",
              "path": "src/Build/Construction/ProjectRootElement.cs",
              "diffHunk": "@@ -1691,31 +1691,13 @@ private void ReloadFrom(Func<bool, XmlDocumentWithLocation> documentProducer, bo\n \n             var oldDocument = XmlDocument;\n             XmlDocumentWithLocation newDocument = documentProducer(preserveFormatting ?? PreserveFormatting);\n-            try\n-            {\n-                // Reload should only mutate the state if there are no parse errors.\n-                ThrowIfDocumentHasParsingErrors(newDocument);\n \n-                RemoveAllChildren();\n+            // Reload should only mutate the state if there are no parse errors.\n+            ThrowIfDocumentHasParsingErrors(newDocument);\n \n-                ProjectParser.Parse(newDocument, this);\n-            }\n-            finally\n-            {\n-                // Whichever document didn't become this element's document must be removed from the string cache.\n-                // We do it after the fact based on the assumption that Projects are reloaded repeatedly from their\n-                // file with small increments, and thus most strings would get reused avoiding unnecessary churn in\n-                // the string cache.\n-                var currentDocument = XmlDocument;\n-                if (!object.ReferenceEquals(currentDocument, oldDocument))\n-                {\n-                    oldDocument.ClearAnyCachedStrings();\n-                }\n-                if (!object.ReferenceEquals(currentDocument, newDocument))\n-                {\n-                    newDocument.ClearAnyCachedStrings();\n-                }\n-            }\n+            RemoveAllChildren();\n+\n+            ProjectParser.Parse(newDocument, this);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}