{
  "number": 8940,
  "title": "Add more packages to Version.Details for source-build",
  "body": "Contributes to dotnet/source-build#3528\r\n\r\n### Context\r\n\r\nWhen attempting to run an MSBuild command from an SDK that was source-built using the Mono runtime, the following exception occurs:\r\n\r\n```\r\nMSBUILD : error MSB1021: Cannot create an instance of the logger. Microsoft.Build.BackEnd.Logging.CentralForwardingLogger Could not load type of field 'Microsoft.Build.Shared.TypeLoader:_context' (4) due to: Could not load file or assembly 'System.Reflection.MetadataLoadContext, Version=7.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies.\r\n```\r\n\r\nThis is a regression caused by the change in https://github.com/dotnet/installer/pull/16637. That change allowed the msbuild repo to compile against the package versions that it defines rather than source-build overriding the package version with the current source-built version. For example, the msbuild repo will target System.Reflection.MetadataLoadContext.7.0.0: https://github.com/dotnet/msbuild/blob/83ac8d91e92a16f33823ac2b8cb4cd5a14dc62a0/eng/Versions.props#L38 \r\n\r\nPrior to the change in https://github.com/dotnet/installer/pull/16637, source-build would have overridden that version and forced the msbuild repo to use the version of `System.Reflection.MetadataLoadContext` that was just produced during its build. But after the change, the 7.0.0 version is being referenced. The referencing of a 7.0.0 version doesn't cause prebuilts because that version is defined in [SBRP](https://github.com/dotnet/source-build-reference-packages).\r\n\r\nReferencing a 7.0.0 version is fine as long as it's only a build-time dependency and not runtime. A runtime dependency will cause an attempt to load that 7.0.0 version which will not exist for an 8.0 source-built SDK. That's exactly what happens here with this error. There must be some code path specific to Mono that causes a code path which depends on `System.Reflection.MetadataLoadContext`.\r\n\r\n### Changes Made\r\n\r\nAdded the following packages to Version.Details.xml:\r\n\r\n* `System.Collections.Immutable.7.0.0`\r\n* `System.Reflection.Metadata.7.0.0`\r\n* `System.Reflection.MetadataLoadContext.7.0.0`\r\n\r\nTheir presence in this file will cause source-build to override the corresponding `Version` property (e.g. `SystemReflectionMetadataLoadContextVersion`) so that it uses the \"live\" version (the version just produced by source-build in the current build). Even though the dependency only exists on `System.Reflection.MetadataLoadContext`, the other two packages need to be listed as well since those are transitive dependencies. Not listing them would cause package downgrade errors since a newer version of `System.Reflection.MetadataLoadContext` would be referenced with older versions of the other assemblies.\r\n\r\nI've also updated the comments in this file so that they are applied to each package. This avoids ambiguity as to which packages the original comment applied to.",
  "state": "MERGED",
  "createdAt": "2023-06-22T15:00:43Z",
  "updatedAt": "2023-06-29T13:53:46Z",
  "closedAt": "2023-06-29T13:53:45Z",
  "mergedAt": "2023-06-29T13:53:45Z",
  "additions": 22,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "sb3528",
  "isDraft": false,
  "author": {
    "login": "mthalman"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1f3873e574a90f3eae8c887f537dee8f55b142f2",
          "message": "Add more packages to Version.Details for source-build",
          "committedDate": "2023-06-22T14:28:28Z",
          "author": {
            "name": "Matt Thalman",
            "email": "mthalman@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4f937392fcc99214edfa1b702fe2a1d54143ce93",
          "message": "Update comment",
          "committedDate": "2023-06-29T13:27:29Z",
          "author": {
            "name": "Matt Thalman",
            "email": "mthalman@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I think the problem is https://github.com/dotnet/msbuild/blob/dfa7f02ddc53c1f993a84b2bc765c82ae4bad612/src/Tasks/Microsoft.Build.Tasks.csproj#L1016-L1018\r\n\r\nWe no longer support that build configuration (it's for pre-unification Mono, not the current mono runtime). Would it be helpful to sourcebuild if we scrubbed that + the `-MONO` configurations from our build? I'm not sure I understand how it's getting built in this configuration today though.",
        "createdAt": "2023-06-22T15:08:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> I'm not sure I understand how it's getting built in this configuration today though.\r\n\r\nYeah, me neither. It looks like it's only set if the build config is `Debug-MONO` or `Release-MONO`. But I don't know that could get set like that. Here's a [link](https://artprodcus3.artifacts.visualstudio.com/Ab55de4ed-4b5a-4215-a8e4-0a0a5f71e7d8/7ea9116e-9fac-403d-b258-b31fcf1bb293/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RuY2VuZy9wcm9qZWN0SWQvN2VhOTExNmUtOWZhYy00MDNkLWIyNTgtYjMxZmNmMWJiMjkzL2J1aWxkSWQvMjIwMjEzNC9hcnRpZmFjdE5hbWUvQ2VudE9TU3RyZWFtOF9Nb25vX09mZmxpbmVfTXNmdFNka194NjRfQnVpbGRMb2dzX0F0dGVtcHQx0/content?format=file&subPath=%2Fsrc%2Fmsbuild%2Fartifacts%2FbuildLogs%2Fsource-build%2Fself%2Fsrc%2Fartifacts%2Fsourcebuild.binlog) to the binlog for the msbuild repo in the context of this Mono build leg if you want to investigate further.",
        "createdAt": "2023-06-22T15:22:36Z",
        "author": {
          "login": "mthalman"
        }
      },
      {
        "body": "Aha.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/08c135d0ac15d578663abccad3f6269dd20ebc64/src/Build/Microsoft.Build.csproj#L38-L39\r\n\r\nBut SRM is a transitive dependency of `System.Reflection.MetadataLoadContext`, so that condition doesn't matter.\r\n\r\nThen in `ResolvePackageFileConflicts`,\r\n\r\n```\r\nEncountered conflict between 'Reference:/vmr/src/msbuild/artifacts/source-build/self/package-cache/system.reflection.metadata/7.0.0/lib/net7.0/System.Reflection.Metadata.dll' and 'Reference:/vmr/src/msbuild/artifacts/source-build/self/package-cache/microsoft.netcore.app.ref/7.0.5/ref/net7.0/System.Reflection.Metadata.dll'. Choosing 'Reference:/vmr/src/msbuild/artifacts/source-build/self/package-cache/microsoft.netcore.app.ref/7.0.5/ref/net7.0/System.Reflection.Metadata.dll' because file version '7.0.523.17405' is greater than '7.0.22.51805'.\r\n...\r\nEncountered conflict between 'Platform:System.Reflection.Metadata.dll' and 'Runtime:/vmr/src/msbuild/artifacts/source-build/self/package-cache/system.reflection.metadata/7.0.0/lib/net7.0/System.Reflection.Metadata.dll'. Choosing 'Platform:System.Reflection.Metadata.dll' because file version '7.0.523.17405' is greater than '7.0.22.51805'.`\r\n```\r\n\r\nSo SRM is the new, consistent, sourcebuilt version. But `MetadataLoadContext` doesn't see a conflict and the 7.0.0 version is passed to the compiler.",
        "createdAt": "2023-06-22T15:46:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@mthalman I appologize - but I'm bit lost :-)\r\n* This issue exist regardless of targetting Mono in source build - correct? As otherwise I was under impression MSBuild no longer supports Mono.\r\n* Does this mean all transitive package references need to be explicitly listed? Or is there something special around `System.Reflection.MetadataLoadContext`?",
        "createdAt": "2023-06-23T09:21:45Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "@JanKrivanek yes, the Mono thing was a red herring I think. It looks like what must be listed is \"any transitive dependency that is also listed as a direct dependency in some other project\".",
        "createdAt": "2023-06-28T15:01:28Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "It'd be nice if the comment said it was a transitive dependency of S.R.MetadataLoadContext, so we know when we can remove it.",
              "createdAt": "2023-06-22T15:49:27Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -6,12 +6,32 @@\n       <Sha>525b6c35cc5c5c9b80b47044be2e4e77858d505a</Sha>\n       <SourceBuild RepoName=\"source-build-reference-packages\" ManagedOnly=\"true\" />\n     </Dependency>\n-    <!-- Necessary for source-build. This allows the packages to be retrieved from previously-source-built artifacts\n+    <!-- Necessary for source-build. This allows the package to be retrieved from previously-source-built artifacts\n+      and flow in as dependencies of the packages produced by msbuild. -->",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "@mthalman - can you add the suggested comment (or not - if you thing it's unnecessary) and resolve this conversation? We currently require all conversations to be resolved (to prevent accidentally missed communications) before merging. Once this is resolved the PR will auto-merge",
              "createdAt": "2023-06-29T08:37:53Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -6,12 +6,32 @@\n       <Sha>525b6c35cc5c5c9b80b47044be2e4e77858d505a</Sha>\n       <SourceBuild RepoName=\"source-build-reference-packages\" ManagedOnly=\"true\" />\n     </Dependency>\n-    <!-- Necessary for source-build. This allows the packages to be retrieved from previously-source-built artifacts\n+    <!-- Necessary for source-build. This allows the package to be retrieved from previously-source-built artifacts\n+      and flow in as dependencies of the packages produced by msbuild. -->",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Thanks for the reminder.",
              "createdAt": "2023-06-29T13:27:48Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -6,12 +6,32 @@\n       <Sha>525b6c35cc5c5c9b80b47044be2e4e77858d505a</Sha>\n       <SourceBuild RepoName=\"source-build-reference-packages\" ManagedOnly=\"true\" />\n     </Dependency>\n-    <!-- Necessary for source-build. This allows the packages to be retrieved from previously-source-built artifacts\n+    <!-- Necessary for source-build. This allows the package to be retrieved from previously-source-built artifacts\n+      and flow in as dependencies of the packages produced by msbuild. -->",
              "author": {
                "login": "mthalman"
              }
            }
          ]
        }
      }
    ]
  }
}