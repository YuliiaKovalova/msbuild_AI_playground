{
  "number": 5808,
  "title": "Fix: Projects skipped when missing EndProject",
  "body": "This pull request fixes: #5027 \r\n\r\nChanges introduced in this PR covers the case where having a project without *EndProject* label, next projects contained in this malformed solution *.sln* file are not built.\r\nSo this PR adjusts the behavior of MSBuild to the Visual Studio (please see https://github.com/dotnet/msbuild/issues/5027#issuecomment-571215016)\r\n\r\n---\r\n\r\nChanges done in this delivery are:\r\n* Add new case to project's parsing procedure where the next line read in the project's configuration (in malformed *.sln* file) is any of project's configuration detail, nor *EndProject* label, but is in fact the beginning of new project's configuration.\r\n* Recursively read the next spotted project (which is incorrectly nested in the one missing it's *EndProject* label) and add it to parsed projects\r\n* Cover two scenarios with missing *EndProject* label:\r\nOne for only one incorrectly nested project\r\nOne for multiple projects missing *EndProject*\r\n\r\n**NOTE:** Recursive approach was necessary, due to impossibility of going one line back in the stream being already read, which means that when new `\"Project(\"` is spotted instead of `\"EndProject\"`, it's already too late for the normal procedure to notice the next `\"Project(\"`. There is a `Peek()` method available, which allows to see the next single character without actually reading it, but this approach would require bigger refactor, while recursive approach is now tested and verified working well.",
  "state": "CLOSED",
  "createdAt": "2020-10-16T17:15:43Z",
  "updatedAt": "2020-10-30T16:08:04Z",
  "closedAt": "2020-10-30T16:01:28Z",
  "mergedAt": "2020-10-30T16:01:28Z",
  "author": {
    "login": "BartoszKlonowski"
  },
  "labels": [],
  "additions": 68,
  "deletions": 0,
  "changedFiles": 2,
  "headRefName": "fix-skipping-project-without-EndProject",
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "12d62b4dba532fd1c7e11ab6b38a1a094f01a83a",
          "message": "Add new project's condition in parsing solution\n\nWhen reading the solution .sln file each project is parsed by catching\nthe \"Project(\" sequence, and the parsing is stopped when reaching the\nEndProject label.\nHowever, in case of having the solution file malformed\n(see: )\nit is possible, that one of projects won't have it's EndProject label,\nso originally it will be the only one being added to the projects list.\n\nTo avoid such situation, new condition has been added to the project's\nparsing procedure, which responsibility is to check against additional\n\"Project(\" sequence BEFORE meeting EndProject.\nThis situation indicates malformed solution file.\n\nTo handle this situation, additional 'else if' statement logs the\nwarning and recursively starts to parse another project.\nWhen getting back from reading incorrectly nested project, the original\nproject's parsing procedure is stopped and whole procedure continues.",
          "committedDate": "2020-10-14T15:12:50Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      },
      {
        "commit": {
          "oid": "9ca2a18c36e2e82143a4086fc681c2a6fb822de9",
          "message": "Cover lack of EndProject case with unit tests\n\nTwo unit tests are added to cover the case with missing EndProject in an\ninvalid solution file:\n\nParseNextProjectContainedInInvalidSolutionEvenWhenMissingEndProject -\nwhich is to check for a case with one project after missing EndProject,\nParseAllProjectsContainedInInvalidSolutionEvenWhenMissingEndProject -\nwhich is to check for a case with more than just one project after\nmissing EndProject\n\nBoth these tests should simply check whether each project, potentially\nskipped due to missing EndProject label, is correctly found in the\nsolution file and is parsed correctly by recursive approach.",
          "committedDate": "2020-10-16T16:20:25Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      },
      {
        "commit": {
          "oid": "dc73861b668442f90056605d33869865a000d6bd",
          "message": "Remove redundant unit test for malformed nested project\n\nThe unit test checking whether incorrectly nested project in malformed\nsolution file (when first project missing it's EndProject label) is\ncorrectly found and parsed is redundant.\nThe other unit test checking similar case (several projects nested under\nthe one missing EndProject) is the superset of the first one, which\nmakes the first one unnecessary.",
          "committedDate": "2020-10-27T12:45:56Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Failing test looks like the problematic one improved by https://github.com/dotnet/msbuild/pull/5827. Reran it.",
        "createdAt": "2020-10-29T15:40:09Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Thanks, @BartoszKlonowski!",
        "createdAt": "2020-10-30T16:08:04Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}