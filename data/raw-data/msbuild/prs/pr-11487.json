{
  "number": 11487,
  "title": "[17.13] Opt-in `.sln` parsing with `Microsoft.VisualStudio.SolutionPersistence`",
  "body": "Require opt-in (instead of -out) to `.sln` parsing with the new parser from `Microsoft.VisualStudio.SolutionPersistence`.\r\n\r\nFixes #11463\r\n\r\nWork item (Internal use): AB#2397817\r\n\r\n### Summary\r\nAdded `MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN` as an opt-in environment variable instead of requiring changewave opt-out to return to the MSBuild-internal solution parser.\r\n\r\n### Customer Impact\r\n\r\nThree categories of problem:\r\n\r\n* Some older `NuGet.exe` restores failed because they couldn't find the library (fixed in newer versions but reported via VS Feedback and https://github.com/microsoft/dotnet-framework-docker/issues/1213.\r\n* Current `NuGet.exe` restores can fail if the path to 64-bit MSBuild is specified explicitly\r\n* Various bugs in the solution parser (e.g. https://github.com/microsoft/vs-solutionpersistence/issues/96) that don't hit in the legacy MSBuild parser.\r\n\r\nAll manifest as build or NuGet restore breaks with no obvious workaround (but once discovered the changewave opt-out environment variable works).\r\n\r\n### Regression?\r\nYes, in 17.13/9.0.200 due to adopting the common SolutionPersistence library instead of our homegrown sln parser.\r\n\r\n### Testing\r\nChanged tests to set `MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN` environment variable. Tested manually as well.\r\n\r\n### Risk\r\nLow, returns to 17.12 behavior unless explicitly opted in--basically inverting existing opt-out.",
  "state": "CLOSED",
  "createdAt": "2025-02-24T18:24:52Z",
  "updatedAt": "2025-05-26T14:28:25Z",
  "closedAt": "2025-02-25T15:13:31Z",
  "mergedAt": null,
  "additions": 124,
  "deletions": 103,
  "changedFiles": 7,
  "headRefName": "sln-optin",
  "isDraft": false,
  "author": {
    "login": "surayya-MS"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Servicing-consider"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "46339bde0e641ae04fc93376e62288da728308cd",
          "message": "opt-in sln parsing with SolutionPersistence",
          "committedDate": "2025-02-24T18:21:14Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "29c157b2b3db2708c73991ed35fd847c8711116b",
          "message": "bump VersionPrefix",
          "committedDate": "2025-02-24T18:33:03Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "415d5d78ebb48ef88807e283d3937a76f76d35fe",
          "message": "fix tests",
          "committedDate": "2025-02-25T15:07:37Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "/azp run",
        "createdAt": "2025-02-24T18:47:01Z",
        "author": {
          "login": "surayya-MS"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2025-02-24T18:47:15Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "For 17.13 we are reverting [.slnx support - use the new parser for .sln and .slnx](https://github.com/dotnet/msbuild/pull/10836) in https://github.com/dotnet/msbuild/pull/11488\r\n\r\nWe want the changes in this PR for 17.14",
        "createdAt": "2025-02-25T15:13:31Z",
        "author": {
          "login": "surayya-MS"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I like the naming style with \"_\" more than current, it is more readable. However, this is breaking current naming standards for environment variables, from what I see in this file. Let's discuss whether we want to allow two styles from now on. @rainersigwald your opinion?",
              "createdAt": "2025-02-25T12:46:39Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -134,6 +134,8 @@ public Traits()\n \n         public readonly bool InProcNodeDisabled = Environment.GetEnvironmentVariable(\"MSBUILDNOINPROCNODE\") == \"1\";\n \n+        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Actually, I see two styles already in the file, so this would be 3rd. ",
              "createdAt": "2025-02-25T12:50:06Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -134,6 +134,8 @@ public Traits()\n \n         public readonly bool InProcNodeDisabled = Environment.GetEnvironmentVariable(\"MSBUILDNOINPROCNODE\") == \"1\";\n \n+        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "thanks for the commen! i will address this in follow-up PR",
              "createdAt": "2025-02-25T15:12:06Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -134,6 +134,8 @@ public Traits()\n \n         public readonly bool InProcNodeDisabled = Environment.GetEnvironmentVariable(\"MSBUILDNOINPROCNODE\") == \"1\";\n \n+        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "@AR-May , I used the name `SlnParsingWithSolutionPersistenceOptIn` similar to https://github.com/dotnet/msbuild/pull/11538/files#diff-248a4d8f08fe76eb35f1020d07a8d4300f623e28dba2706090517c8d48692dcaR147",
              "createdAt": "2025-03-04T18:22:48Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -134,6 +134,8 @@ public Traits()\n \n         public readonly bool InProcNodeDisabled = Environment.GetEnvironmentVariable(\"MSBUILDNOINPROCNODE\") == \"1\";\n \n+        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      }
    ]
  }
}