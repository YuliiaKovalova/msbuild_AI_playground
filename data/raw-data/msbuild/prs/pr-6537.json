{
  "number": 6537,
  "title": "Servicing fixes for 16.10.2",
  "body": "Pulling together approved PRs #6531, #6520, and #6513 with a version bump.",
  "state": "MERGED",
  "createdAt": "2021-06-08T18:01:21Z",
  "updatedAt": "2021-06-09T16:56:23Z",
  "closedAt": "2021-06-08T19:52:04Z",
  "mergedAt": "2021-06-08T19:52:04Z",
  "additions": 105,
  "deletions": 11,
  "changedFiles": 8,
  "headRefName": "16.10.2",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "149c776c7eca865e696ea69d6a08ab658eb5f19d",
          "message": "Fix MakeRelative regression in v16.10\n\nAdded some more unit tests as per suggestions\n\nFixed unit test failing on linux\n\nRemoved unnecessary length check\n\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2021-06-03T02:02:44Z",
          "author": {
            "name": "Dave Sparks",
            "email": "dave.sparks@finalbuilder.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fe2c68f250250b74a60a6b8c4c3dec491cb36005",
          "message": "Pulled in some external changes to Microsoft.Build.cs",
          "committedDate": "2021-06-03T04:56:45Z",
          "author": {
            "name": "Dave Sparks",
            "email": "dave.sparks@finalbuilder.com"
          }
        }
      },
      {
        "commit": {
          "oid": "794abcbb005017cf3a75850a9f001419bb47bd38",
          "message": "Don't move Properties and Items to ProjectEvaluationFinished if legacy loggers present\n\nSwitch from the \"use the new logic if any logger is present that supports it\" to the more conservative \"use the old logic if any logger doesn't support the new logic\".\n\nThere are legacy loggers such as the Azure DevOps logger that crash if ProjectStartedEventArgs.Properties is null.\n\nBoth console loggers also need more work to properly support the new logic.\n\nEffectively the new logic will now only take place when the binary logger is the only logger.",
          "committedDate": "2021-06-07T20:45:51Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "de3f28e9edcb9752684304db3d0ef24aa3ead189",
          "message": "Introduce IsAllFilesWildcard() and call it from MatchFileRecursionStep\n\nFixes #6502\n\nSummary\n\nThis change fixes a regression in glob matching where files without extension are erroneously not matched when taking a specific globbing code path.\n\nCustomer impact\n\nAny customer who uses a glob pattern susceptible to the bug and has files without extensions in their source tree is affected. The bug was reported by external customers.\n\nRegression?\n\nYes, caused by #6151 where glob matching was optimized which internally made it take a different code path.\n\nChanges Made\n\nFixes the regression by properly handling `*.*` to mean all files, not just files with a dot in the name. This convention is used in .NET APIs on all platforms and matches the pre-regression behavior.\n\nTesting\n\nAdded unit test coverage. Also verified locally with the repro provided by the original bug reporter.\n\nRisk\n\nLow. The star patterns are special-cased to mean all files, other patterns are unaffected.",
          "committedDate": "2021-06-08T17:53:36Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ac8275b454a458412c247a6f9b5f3f44d69e5b7b",
          "message": "Merge branches 'fix-makerelative', 'dev/kirillo/notAllLoggers', and '6502-fix-wildcard-glob-matching-16.11' into 'vs16.10'",
          "committedDate": "2021-06-08T18:04:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Is there enough time for an `exp/` branch?",
        "createdAt": "2021-06-08T18:55:09Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I don't think there's a reason to prefer it over being optimistic, personally.",
        "createdAt": "2021-06-08T18:56:14Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I hate to ask this, sorry about that \ud83d\ude22: do you have an eta when the 16.10.2 (which will be .NET 5.0.8 if I'm not misread something) will land?  \r\n\r\nWe're currently hitting https://github.com/dotnet/msbuild/issues/6493, which was apparently fixed with https://github.com/dotnet/msbuild/pull/6513.",
        "createdAt": "2021-06-09T14:23:06Z",
        "author": null
      },
      {
        "body": "@bbrueckmann-codesys No public date, sorry. And the plan is that it will be in .NET SDK 5.0.302.",
        "createdAt": "2021-06-09T16:21:32Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald \r\n> No public date, sorry. And the plan is that it will be in .NET SDK **3.0.302**.\r\n\r\nDo you mean SDK **5.0.302** ?",
        "createdAt": "2021-06-09T16:42:20Z",
        "author": {
          "login": "eriawan"
        }
      },
      {
        "body": "@eriawan I sure did. Edited to reduce future confusion. Thanks!",
        "createdAt": "2021-06-09T16:56:23Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}