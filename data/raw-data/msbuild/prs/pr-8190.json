{
  "number": 8190,
  "title": "Parse invalid property under  target",
  "body": "Fixes [#5773](https://github.com/dotnet/msbuild/issues/5773)\r\n\r\n### Context\r\nPut a property inside a target without an enclosing PropertyGroup and build. Error informing me that <propertyName> is an invalid child element of <Target>.\r\n\r\n### Changes Made\r\nAdd one condition when parse the element under target. If the element has inner text and no other child elements except text, then this should be a property and throw invalid child element of <Target>\r\n\r\n\r\n### Tests\r\nReadInvalidPropertyUnderTarget\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2022-11-25T06:49:03Z",
  "updatedAt": "2022-12-13T02:11:44Z",
  "closedAt": "2022-12-13T02:11:43Z",
  "mergedAt": "2022-12-13T02:11:43Z",
  "additions": 141,
  "deletions": 15,
  "changedFiles": 18,
  "headRefName": "jennybai/issue5773",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "e531a102d06160a04a8a6fc92a959415f0d1ede6",
          "message": "parse invalid property under  target",
          "committedDate": "2022-11-25T06:40:07Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bc87b690bdf8d1c86645dcfc0462694c1d4c8cf2",
          "message": "Remove wrong checks",
          "committedDate": "2022-11-25T07:34:54Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7539d3b6ebf4e04af0fc55ddc459a0c8ebe146a6",
          "message": "Fix typo error",
          "committedDate": "2022-11-25T08:13:40Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9c4d71859906d34c32696d7b15dcca415b95aa25",
          "message": "Update src/Build/Evaluation/ProjectParser.cs\r\n\r\nformat equals\n\nCo-authored-by: Forgind <12969783+Forgind@users.noreply.github.com>",
          "committedDate": "2022-11-28T01:57:30Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bf32ca31d053ef6e54d6b63823c51781449a6181",
          "message": "Add customer message and change wave",
          "committedDate": "2022-11-29T12:47:23Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "19f6669619c439504d62a91ddebd808fb3723a76",
          "message": "Merge",
          "committedDate": "2022-11-29T12:57:12Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0aa61ffadcf035b1e33688116641011611561390",
          "message": "Upload xlf resources",
          "committedDate": "2022-11-29T13:08:56Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9f03ac7400cc18b9d31f170389cb3065fdc77ce4",
          "message": "Fix test with exact match",
          "committedDate": "2022-11-30T08:26:05Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f7c548b4d5aa3c2c93151d2f9a1056e11038fa34",
          "message": "Refactor the test case",
          "committedDate": "2022-12-01T06:10:25Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "036c9918735cc17062f5f35bb5e57de53e57c33b",
          "message": "Change the error to msb4073",
          "committedDate": "2022-12-01T07:01:35Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8b2427b755c1f6b74604c46d0713d96f80e3a964",
          "message": "fix error comment",
          "committedDate": "2022-12-01T07:06:37Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2214bc63f331d57ba70b4b7e04b15683715cbd90",
          "message": "Keep  MSB4067 for PropertyOutsidePropertyGroupInTarget",
          "committedDate": "2022-12-02T03:42:05Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5ab93dbce66edf598b2912ff2625fddd5d980536",
          "message": "Update resource string",
          "committedDate": "2022-12-06T02:59:57Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b985551977697c51d4843e10aae17e12a5271c83",
          "message": "Update test expected string",
          "committedDate": "2022-12-06T03:43:04Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "529e6eaa3b1a4035db71855371890e41f28c1271",
          "message": "Update the resource string",
          "committedDate": "2022-12-06T06:42:23Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ae8d7e8e7726f360ff4bcc4de4af3a90d1484093",
          "message": "Update ProjectTargetElement_Tests.cs\n\nUpdate expected string in case the localization",
          "committedDate": "2022-12-07T02:40:01Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bc3ebcfc14f212860708524e9958898d3fc33b2f",
          "message": "Update test expected string and code",
          "committedDate": "2022-12-08T03:02:50Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ad1142b811a07134cb75ce68591d320e78d02da9",
          "message": "Update test expected code and string",
          "committedDate": "2022-12-08T03:25:56Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "The current error after change is error MSB4067: The element <propertyName> beneath element <Target> is unrecognized\r\nNot sure if we need to define a new error message to suggest author propertyName is an invalid child element of target.",
        "createdAt": "2022-11-25T08:26:28Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "> Should we add a change wave?\r\n> Should we have a custom message so we can suggest that they probably intended to wrap it in a PropertyGroup?\r\n\r\nWhat's the change wave? \r\nHow to add a custom message? From build output message?",
        "createdAt": "2022-11-28T02:18:50Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "tiny nit:\r\n```suggestion\r\n                        if (childElement.ChildNodes.Count == 1 && childElement.FirstChild.NodeType == XmlNodeType.Text)\r\n```",
              "createdAt": "2022-11-27T00:24:47Z",
              "path": "src/Build/Evaluation/ProjectParser.cs",
              "diffHunk": "@@ -636,6 +636,12 @@ private ProjectTargetElement ParseProjectTargetElement(XmlElementWithLocation el\n                             ProjectErrorUtilities.ThrowInvalidProject(onError.Location, \"NodeMustBeLastUnderElement\", XMakeElements.onError, XMakeElements.target, childElement.Name);\n                         }\n \n+                        if (childElement.ChildNodes.Count == 1 && childElement.FirstChild.NodeType==XmlNodeType.Text)",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nusing System.Xml;\r\n\r\n```",
              "createdAt": "2022-11-28T15:10:04Z",
              "path": "src/Build/Evaluation/ProjectParser.cs",
              "diffHunk": "@@ -6,7 +6,7 @@\n using Microsoft.Build.Shared;\n using System;\n using System.Collections.Generic;\n-\n+using System.Xml;",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "To get a new, custom error message for this case, change this to something like\r\n\r\n```suggestion\r\n                            ProjectErrorUtilities.ThrowInvalidProject(childElement.Location, \"PropertyOutsidePropertyGroupInTarget\", childElement.Name);\r\n```\r\n\r\nand add a new string near here:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/d797c48da13aaa4dc7ae440ed7603c990cd44317/src/Build/Resources/Strings.resx#L1270-L1273",
              "createdAt": "2022-11-28T15:22:17Z",
              "path": "src/Build/Evaluation/ProjectParser.cs",
              "diffHunk": "@@ -636,6 +636,12 @@ private ProjectTargetElement ParseProjectTargetElement(XmlElementWithLocation el\n                             ProjectErrorUtilities.ThrowInvalidProject(onError.Location, \"NodeMustBeLastUnderElement\", XMakeElements.onError, XMakeElements.target, childElement.Name);\n                         }\n \n+                        if (childElement.ChildNodes.Count == 1 && childElement.FirstChild.NodeType == XmlNodeType.Text)\n+                        {\n+                            // If the element has inner text and no other child elements except text, then this should be a property and throw invalid child element of <Target>\n+                            ProjectXmlUtilities.ThrowProjectInvalidChildElement(childElement.Name, childElement.ParentNode.Name, childElement.Location);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Shouldn't this be an exact match?",
              "createdAt": "2022-11-29T15:32:11Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,35 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Fact]\n+        public void ReadInvalidPropertyUnderTarget()\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+                env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());\n+                BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();\n+\n+                var error= Assert.Throws<InvalidProjectFileException>(() =>\n+                {\n+                    string projectFile = @\"\n+                    <Project>\n+                        <Target Name='t'>\n+                            <test>m</test>\n+                        </Target>\n+                    </Project>\";\n+\n+                    TransientTestFile file = env.CreateFile(\"proj.csproj\", projectFile);\n+                    ProjectCollection collection = new ProjectCollection();\n+                    collection.LoadProject(file.Path).Build().ShouldBeTrue();\n+                });\n+                error.ErrorCode.ShouldBeLessThanOrEqualTo(\"MSB4070\");",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Yeah, I misunderstood this equal function before. Have updated to \r\nif (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_6))\r\n                {\r\n                    error.ErrorCode.ShouldMatch(\"MSB4070\");\r\n                }\r\n                else\r\n                {\r\n                    error.ErrorCode.ShouldMatch(\"MSB4067\");\r\n                }",
              "createdAt": "2022-11-30T08:27:55Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,35 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Fact]\n+        public void ReadInvalidPropertyUnderTarget()\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+                env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());\n+                BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();\n+\n+                var error= Assert.Throws<InvalidProjectFileException>(() =>\n+                {\n+                    string projectFile = @\"\n+                    <Project>\n+                        <Target Name='t'>\n+                            <test>m</test>\n+                        </Target>\n+                    </Project>\";\n+\n+                    TransientTestFile file = env.CreateFile(\"proj.csproj\", projectFile);\n+                    ProjectCollection collection = new ProjectCollection();\n+                    collection.LoadProject(file.Path).Build().ShouldBeTrue();\n+                });\n+                error.ErrorCode.ShouldBeLessThanOrEqualTo(\"MSB4070\");",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\u2764\ufe0f",
              "createdAt": "2022-11-30T14:46:39Z",
              "path": "documentation/wiki/ChangeWaves-Dev.md",
              "diffHunk": "@@ -51,7 +51,7 @@ Surround your feature with the following:\n \n If you need to condition a Task or Target, use the built in `AreFeaturesEnabled` function.\n ```xml\n-<Target Name=\"SomeRiskyChange\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.4'))\"\">\n+<Target Name=\"SomeRiskyChange\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.4'))\">",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "You should have two versions of this test: one that sets this, and one that doesn't. you can do that by using an xunit \"Theory\":\r\n\r\n```suggestion\r\n        [Theory]\r\n        [InlineData(true)]\r\n        [InlineData(false)]\r\n        public void ReadInvalidPropertyUnderTarget(bool enableNewBehavior)\r\n        {\r\n            using (TestEnvironment env = TestEnvironment.Create())\r\n            {\r\n                ChangeWaves.ResetStateForTests();\r\n                \r\n                if (enableNewBehavior)\r\n                {\r\n                    env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());\r\n                    BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();\r\n                }\r\n\r\n```",
              "createdAt": "2022-11-30T14:50:24Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,42 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Fact]\n+        public void ReadInvalidPropertyUnderTarget()\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+                env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());\n+                BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();\n+",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Because of a long-ago automated conversion, many of the methods in this file follow a bad practice for `Assert.Throws`. Ideally it should be wrapped around just the statement we expect to throw:\r\n\r\n```suggestion\r\n                string projectFile = @\"\r\n                <Project>\r\n                    <Target Name='t'>\r\n                        <test>m</test>\r\n                    </Target>\r\n                </Project>\";\r\n\r\n                TransientTestFile file = env.CreateFile(\"proj.csproj\", projectFile);\r\n                ProjectCollection collection = new ProjectCollection();\r\n\r\n                var error = Assert.Throws<InvalidProjectFileException>(() =>\r\n                    collection.LoadProject(file.Path).Build().ShouldBeTrue());\r\n```",
              "createdAt": "2022-11-30T14:52:48Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,42 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Fact]\n+        public void ReadInvalidPropertyUnderTarget()\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+                env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());\n+                BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();\n+\n+                var error= Assert.Throws<InvalidProjectFileException>(() =>\n+                {\n+                    string projectFile = @\"\n+                    <Project>\n+                        <Target Name='t'>\n+                            <test>m</test>\n+                        </Target>\n+                    </Project>\";\n+\n+                    TransientTestFile file = env.CreateFile(\"proj.csproj\", projectFile);\n+                    ProjectCollection collection = new ProjectCollection();\n+                    collection.LoadProject(file.Path).Build().ShouldBeTrue();\n+                });",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Thanks. Done",
              "createdAt": "2022-12-01T06:14:17Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,42 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Fact]\n+        public void ReadInvalidPropertyUnderTarget()\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+                env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());\n+                BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();\n+\n+                var error= Assert.Throws<InvalidProjectFileException>(() =>\n+                {\n+                    string projectFile = @\"\n+                    <Project>\n+                        <Target Name='t'>\n+                            <test>m</test>\n+                        </Target>\n+                    </Project>\";\n+\n+                    TransientTestFile file = env.CreateFile(\"proj.csproj\", projectFile);\n+                    ProjectCollection collection = new ProjectCollection();\n+                    collection.LoadProject(file.Path).Build().ShouldBeTrue();\n+                });",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "It looks like `MSB4070` is already taken (`The schema \"{0}\" is not valid.`). @baronfel, how would you feel about continuing to use MSB4067, but making the message more specific, like\r\n\r\n```suggestion\r\n    <value>MSB4067: The element &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>\r\n```",
              "createdAt": "2022-11-30T14:56:19Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Please define property beneath property group</value>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "That change makes sense to me - clarification and direction in an error message is a fine kind of change to make.",
              "createdAt": "2022-11-30T15:10:16Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Please define property beneath property group</value>",
              "author": {
                "login": "baronfel"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "`enableNewBehavior` is in fact _disabling_ the new behavior \ud83d\ude09 ",
              "createdAt": "2022-12-01T06:20:17Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,49 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Theory]\n+        [InlineData(true)]\n+        [InlineData(false)]\n+        public void ReadInvalidPropertyUnderTarget(bool enableNewBehavior)\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+\n+                if (enableNewBehavior)\n+                {\n+                    env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Yes, I'm going to update it as !enableNewBehavior just now.",
              "createdAt": "2022-12-01T06:26:04Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,49 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Theory]\n+        [InlineData(true)]\n+        [InlineData(false)]\n+        public void ReadInvalidPropertyUnderTarget(bool enableNewBehavior)\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+\n+                if (enableNewBehavior)\n+                {\n+                    env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "rainersigwald pointed out that MSB4070 is already in use, so this should be merged into 4067 instead of being its own thing. (I think we pointed you towards making a new error; sorry for pointing you in two directions!)",
              "createdAt": "2022-12-01T06:21:38Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Sorry, I didn't search all and found MSB4070 is used.  Yeah, we can also merge the string to MSB4067\r\n<value>MSB4067: The element &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. If you intended this to be a property, it must be inside a &lt;PropertyGroup&gt; element.</value>",
              "createdAt": "2022-12-01T06:35:09Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "I think we can change the error to MSB4073. Searched all and there are no duplicates",
              "createdAt": "2022-12-01T07:03:03Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "If merged to original 4067, it seems not straightforward to tell user this is a property",
              "createdAt": "2022-12-01T07:09:23Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "It can still be a new, distinct string in this file with a distinct name, but use the same MSB4067 code as the other one. I would prefer to share the code, since if the user did _not_ intend to make a property, a search for the error code will continue to find any existing information.",
              "createdAt": "2022-12-01T15:06:52Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Sounds good to keep 4067. Have updated. Thanks\r\n",
              "createdAt": "2022-12-02T03:44:41Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Maybe:\r\n```suggestion\r\n    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. If you intended this to be a property, it must be inside a &lt;PropertyGroup&gt; element.</value>\r\n```\r\n\r\n? They might have been trying to do something else.",
              "createdAt": "2022-12-01T06:24:06Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Ping on this point, which I think is the only outstanding issue.",
              "createdAt": "2022-12-02T14:29:38Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Should we add hint \"If you intended this to be a property\" for the new MSB4067?",
              "createdAt": "2022-12-05T07:24:34Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "Yes please.",
              "createdAt": "2022-12-05T16:18:01Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4070: The property &lt;{0}&gt; beneath target &lt;{1}&gt; is unrecognized. Properties must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\n    <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized. If you intended this to be a property, enclose it within a &lt;PropertyGroup&gt; element.</value>\n```\nOtherwise you might interpret this to mean properties can't be inside targets, when they can.",
              "createdAt": "2022-12-06T04:31:00Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized. If you intended this to be a property, it must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "danmoseley"
              }
            },
            {
              "body": "Updated",
              "createdAt": "2022-12-06T06:43:11Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1271,6 +1271,10 @@\n     <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</value>\n     <comment>{StrBegin=\"MSB4067: \"}</comment>\n   </data>\n+  <data name=\"PropertyOutsidePropertyGroupInTarget\" xml:space=\"preserve\" Condition=\"$([MSBuild]::AreFeaturesEnabled('17.6'))\">\n+    <value>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized. If you intended this to be a property, it must be inside a &lt;PropertyGroup&gt; element.</value>",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Sorry, I think I missed this before. Please don't check against English strings in unit tests, because that will make them fail on non-English OSes (after we get a translation for this specific string).\r\n\r\nThere aren't any tests in this assembly that do the check the most-correct way (extracting the resource by name).\r\n\r\nCan you instead check for the code (`MSB4067`) outside the if, and only if the new stuff is enabled additionally check that the message contains `PropertyGroup`? That part of the string shouldn't be localized so I think that'd be a pretty good test.",
              "createdAt": "2022-12-06T15:35:23Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,51 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Theory]\n+        [InlineData(true)]\n+        [InlineData(false)]\n+        public void ReadInvalidPropertyUnderTarget(bool enableNewBehavior)\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+\n+                if (!enableNewBehavior)\n+                {\n+                    env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());\n+                    BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();\n+                }\n+\n+                string projectFile = @\"\n+                    <Project>\n+                        <Target Name='t'>\n+                            <test>m</test>\n+                        </Target>\n+                    </Project>\";\n+\n+                TransientTestFile file = env.CreateFile(\"proj.csproj\", projectFile);\n+                ProjectCollection collection = new ProjectCollection();\n+                var error = Assert.Throws<InvalidProjectFileException>(() =>\n+                {\n+                    collection.LoadProject(file.Path).Build().ShouldBeTrue();\n+                });\n+\n+                var expectedString = \"If you intended this to be a property, enclose it within a <PropertyGroup> element\";",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Done",
              "createdAt": "2022-12-08T03:27:27Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectTargetElement_Tests.cs",
              "diffHunk": "@@ -339,6 +343,51 @@ public void SetReturns()\n             Assert.True(project.HasUnsavedChanges);\n         }\n \n+        /// <summary>\n+        /// Parse invalid property under target\n+        /// </summary>\n+        [Theory]\n+        [InlineData(true)]\n+        [InlineData(false)]\n+        public void ReadInvalidPropertyUnderTarget(bool enableNewBehavior)\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                ChangeWaves.ResetStateForTests();\n+\n+                if (!enableNewBehavior)\n+                {\n+                    env.SetEnvironmentVariable(\"MSBUILDDISABLEFEATURESFROMVERSION\", ChangeWaves.Wave17_6.ToString());\n+                    BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();\n+                }\n+\n+                string projectFile = @\"\n+                    <Project>\n+                        <Target Name='t'>\n+                            <test>m</test>\n+                        </Target>\n+                    </Project>\";\n+\n+                TransientTestFile file = env.CreateFile(\"proj.csproj\", projectFile);\n+                ProjectCollection collection = new ProjectCollection();\n+                var error = Assert.Throws<InvalidProjectFileException>(() =>\n+                {\n+                    collection.LoadProject(file.Path).Build().ShouldBeTrue();\n+                });\n+\n+                var expectedString = \"If you intended this to be a property, enclose it within a <PropertyGroup> element\";",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      }
    ]
  }
}