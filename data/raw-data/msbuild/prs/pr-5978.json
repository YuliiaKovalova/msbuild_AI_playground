{
  "number": 5978,
  "title": "Add more params to the evaluation pass stops",
  "body": "",
  "state": "MERGED",
  "createdAt": "2020-12-18T21:29:28Z",
  "updatedAt": "2023-01-05T11:34:10Z",
  "closedAt": "2020-12-18T22:31:26Z",
  "mergedAt": "2020-12-18T22:31:26Z",
  "additions": 21,
  "deletions": 15,
  "changedFiles": 2,
  "headRefName": "dev/arkalyan/add-logging-params",
  "isDraft": false,
  "author": {
    "login": "arunchndr"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "e9946d0e7aec542587cc2f374abcf544e85d5e47",
          "message": "Add more params to the evaluation pass stops",
          "committedDate": "2020-12-18T21:28:17Z",
          "author": {
            "name": "Arun Kalyanasamy",
            "email": "arkalyan@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=5978) <br/>All CLA requirements met.",
        "createdAt": "2020-12-18T21:29:44Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/not_signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=5978) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=5978) before we can accept your contribution.<br/><br/>:x: arkalyanms [sign now](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=5978)<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla.dotnetfoundation.org/check/dotnet/msbuild?pullRequest=5978) it.</sub>",
        "createdAt": "2020-12-18T21:29:45Z",
        "author": {
          "login": "dnfadmin"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't think this is accurate because _projectRootElement.Properties does not include properties of imported projects. See [here](https://github.com/dotnet/msbuild/blob/a971ecd546938c0d249037ab06db96d348c34e61/src/Build/Construction/ProjectElementContainer.cs#L672-L690) and note that ProjectImportElements are not ProjectElementContainers.\r\n\r\nAlso, since it does a nontrivial amount of work, please surround it with an IsEnabled check. As-is, this will worsen solution load time.",
              "createdAt": "2020-12-18T22:48:45Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -624,7 +624,7 @@ private void Evaluate()\n                 }\n \n                 _data.InitialTargets = initialTargets;\n-                MSBuildEventSource.Log.EvaluatePass1Stop(projectFile);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "The `ProjectImportGroupElement` is a `ProjectElementContainer` and that should get included in both the `Properties `recursion as it is with the `PerformDepthFirstPass `recursion. Also the `Count `is a property get on an already instantiated  `ReadOnlyCollection` (as a part of the actual evaluation above the log). No?",
              "createdAt": "2020-12-19T00:54:47Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -624,7 +624,7 @@ private void Evaluate()\n                 }\n \n                 _data.InitialTargets = initialTargets;\n-                MSBuildEventSource.Log.EvaluatePass1Stop(projectFile);",
              "author": {
                "login": "arunchndr"
              }
            },
            {
              "body": "We talked about this offline, but ProjectImportElement is not a ProjectElementContainer so isn't included, and accessing the Properties ReadOnlyCollection constructs it as needed, hence the perf hit.",
              "createdAt": "2020-12-21T18:27:59Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -624,7 +624,7 @@ private void Evaluate()\n                 }\n \n                 _data.InitialTargets = initialTargets;\n-                MSBuildEventSource.Log.EvaluatePass1Stop(projectFile);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}