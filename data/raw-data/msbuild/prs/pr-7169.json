{
  "number": 7169,
  "title": "Remove xmlns from props/targets and UTs",
  "body": "xmlns hasn't been requires in project files for a while now (v15?), so this change removes it from all props/targets as well as all UTs (minus the ones explicitly testing the xmlns stuff).",
  "state": "MERGED",
  "createdAt": "2021-12-22T22:02:07Z",
  "updatedAt": "2022-07-29T18:16:59Z",
  "closedAt": "2022-01-21T08:26:54Z",
  "mergedAt": "2022-01-21T08:26:54Z",
  "additions": 1148,
  "deletions": 1155,
  "changedFiles": 99,
  "headRefName": "remove-xmlns",
  "isDraft": false,
  "author": {
    "login": "dfederm"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "0bef5b1f29f2c926bc3c010a10c935ac8f9ad8ce",
          "message": "Remove xmlns from props/targets and projects",
          "committedDate": "2022-01-13T21:34:18Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "af7c1867ee56c4b063b36a92ef1ce46c8f38300d",
          "message": "Remove xmlns from many unit tests\n\nI left it in a bunch of UTs, mostly ones which dealt with evaluation. It probably could be cleaned from even more UTs (many use `xmlns=\"msbuildnamespace\"` instead of `xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">`), but whatever this change is large enough as-is.\n\nComparing repo-wide searches of \"xmlns=\" (which admittedly covers other namespaces eg in loc xml files):\nBefore: 2641 results in 377 files\nAfter: 1693 results in 277 files",
          "committedDate": "2022-01-13T21:39:56Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "FYI @Nirmal4G since you were interested in this",
        "createdAt": "2021-12-22T22:02:40Z",
        "author": {
          "login": "dfederm"
        }
      },
      {
        "body": "Nice... Upon reviewing, I see `<?xml?>` tags too. We can remove them too!\r\n\r\n> Contributes to #4779 and #6645",
        "createdAt": "2021-12-22T22:16:36Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "Also, if it's not too much trouble, can you separate your changes into specific commits. Like separate the formatting and `xmlns` removals (_even this can be further separated into removals in shipping files, project files, docs and unit tests_).\n\n**Totally optional but it's just good practice.**",
        "createdAt": "2021-12-22T22:25:49Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> Also, if it's not too much trouble, can you separate your changes into specific commits. Like separate the formatting and `xmlns` removals (_even this can be further separated into removals in shipping files, project files, docs and unit tests_).\r\n> \r\n> **Totally optional but it's just good practice.**\r\n\r\nThe formatting was automatic by vscoed and unintentional :(. But figured I'd leave them in place. I should look into turning that off by default...",
        "createdAt": "2021-12-22T23:04:24Z",
        "author": {
          "login": "dfederm"
        }
      },
      {
        "body": "No problem. It's good that you format the files that is touched but bad that every change is in a single commit, that's all!",
        "createdAt": "2021-12-23T02:53:58Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "I just pushed a change that a) splits into two commits, one for \"MSBuild logic in/shipped from this repo\" and one for tests, and b) drops the changes in `Deprecated`.",
        "createdAt": "2022-01-13T21:41:00Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "You can also remove the ToolsVersion, right?",
              "createdAt": "2021-12-22T22:39:32Z",
              "path": "src/Build.OM.UnitTests/Construction/ElementLocationPublic_Tests.cs",
              "diffHunk": "@@ -82,7 +82,7 @@ public void XmlLocationsAreCached()\n         public void LocationStringsMedley()\n         {\n             string content = @\"\n-            <Project ToolsVersion=`msbuilddefaulttoolsversion` xmlns=`http://schemas.microsoft.com/developer/msbuild/2003`>\n+            <Project ToolsVersion=`msbuilddefaulttoolsversion`>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Yup, although I figured this PR was large enough as it was, so probably will follow up with another PR.",
              "createdAt": "2021-12-22T22:54:53Z",
              "path": "src/Build.OM.UnitTests/Construction/ElementLocationPublic_Tests.cs",
              "diffHunk": "@@ -82,7 +82,7 @@ public void XmlLocationsAreCached()\n         public void LocationStringsMedley()\n         {\n             string content = @\"\n-            <Project ToolsVersion=`msbuilddefaulttoolsversion` xmlns=`http://schemas.microsoft.com/developer/msbuild/2003`>\n+            <Project ToolsVersion=`msbuilddefaulttoolsversion`>",
              "author": {
                "login": "dfederm"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\ud83d\udca1 Make sure to verify there is still adequate coverage for cases where `xmlns` is included, since both approaches are supported",
              "createdAt": "2022-01-03T00:17:51Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectChooseElement_Tests.cs",
              "diffHunk": "@@ -268,13 +268,13 @@ public void ExcessivelyNestedChoose()\n         public void SettingWhenConditionDirties()\n         {\n             string content = @\"\n-                    <Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >\n+                    <Project>",
              "author": {
                "login": "sharwell"
              }
            },
            {
              "body": "Yup, I left it in a bunch of UTs, mostly ones which dealt with evaluation. It probably could be cleaned from even more UTs (many use `xmlns=\"msbuildnamespace\"` instead of `xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">`), but whatever this change is large enough as-is.\r\n\r\nComparing repo-wide searches of \"xmlns=\" (which admittedly covers other namespaces eg in loc xml files):\r\nBefore: 2641 results in 377 files\r\nAfter: 1693 results in 277 files",
              "createdAt": "2022-01-03T18:25:28Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectChooseElement_Tests.cs",
              "diffHunk": "@@ -268,13 +268,13 @@ public void ExcessivelyNestedChoose()\n         public void SettingWhenConditionDirties()\n         {\n             string content = @\"\n-                    <Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >\n+                    <Project>",
              "author": {
                "login": "dfederm"
              }
            },
            {
              "body": "This also had me worried but by inspection it looks ok (this concern is why I split out the \"remove from unit tests\" part of the change).",
              "createdAt": "2022-01-13T21:46:51Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectChooseElement_Tests.cs",
              "diffHunk": "@@ -268,13 +268,13 @@ public void ExcessivelyNestedChoose()\n         public void SettingWhenConditionDirties()\n         {\n             string content = @\"\n-                    <Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >\n+                    <Project>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n            for (int i = 0; i < rootDirectories.Length; i++)\r\n```",
              "createdAt": "2022-01-12T21:42:19Z",
              "path": "src/Utilities.UnitTests/ToolLocationHelper_Tests.cs",
              "diffHunk": "@@ -4203,13 +4203,13 @@ public void VerifyFindRootFolderWhereAllFilesExist()\n \n             string testDirectoryRoot = Path.Combine(Path.GetTempPath(), \"VerifyFindRootFolderWhereAllFilesExist\");\n             string[] rootDirectories = new string[] { Path.Combine(testDirectoryRoot, \"Root1\"), Path.Combine(testDirectoryRoot, \"Root2\") };\n-            \n-            for(int i = 0; i < rootDirectories.Length; i++)\n+\n+            for (int i = 0; i < rootDirectories.Count(); i++)",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Bleh, yea bad merge sorry",
              "createdAt": "2022-01-12T21:46:46Z",
              "path": "src/Utilities.UnitTests/ToolLocationHelper_Tests.cs",
              "diffHunk": "@@ -4203,13 +4203,13 @@ public void VerifyFindRootFolderWhereAllFilesExist()\n \n             string testDirectoryRoot = Path.Combine(Path.GetTempPath(), \"VerifyFindRootFolderWhereAllFilesExist\");\n             string[] rootDirectories = new string[] { Path.Combine(testDirectoryRoot, \"Root1\"), Path.Combine(testDirectoryRoot, \"Root2\") };\n-            \n-            for(int i = 0; i < rootDirectories.Length; i++)\n+\n+            for (int i = 0; i < rootDirectories.Count(); i++)",
              "author": {
                "login": "dfederm"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        // [InlineData(@\"\r\n```",
              "createdAt": "2022-01-13T18:39:30Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectItemElement_Tests.cs",
              "diffHunk": "@@ -89,15 +89,15 @@ public void ReadNoChildren(string project)\n         /// </summary>\n         [Theory]\n         [InlineData(@\"\n-                    <Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >\n+                    <Project>\n                         <ItemGroup>\n                             <i/>\n                         </ItemGroup>\n                     </Project>\n                 \")]\n         // https://github.com/dotnet/msbuild/issues/900\n-        // [InlineData(@\"\n-        //            <Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >\n+        //[InlineData(@\"",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I'll try to merge this next so you don't have to go through any more of these.",
              "createdAt": "2022-01-13T18:40:08Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectItemElement_Tests.cs",
              "diffHunk": "@@ -89,15 +89,15 @@ public void ReadNoChildren(string project)\n         /// </summary>\n         [Theory]\n         [InlineData(@\"\n-                    <Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >\n+                    <Project>\n                         <ItemGroup>\n                             <i/>\n                         </ItemGroup>\n                     </Project>\n                 \")]\n         // https://github.com/dotnet/msbuild/issues/900\n-        // [InlineData(@\"\n-        //            <Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' >\n+        //[InlineData(@\"",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "is dogfood relevant here? it's deprecated so...meh",
              "createdAt": "2022-01-13T19:26:27Z",
              "path": "src/Deprecated/Conversion.UnitTests/XMakeConversionUnitTests.csproj",
              "diffHunk": "@@ -1,5 +1,5 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project ToolsVersion=\"dogfood\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Do deprecated unit tests even run? Like ever? Should we just delete this?",
              "createdAt": "2022-01-13T19:29:01Z",
              "path": "src/Deprecated/Conversion.UnitTests/XMakeConversionUnitTests.csproj",
              "diffHunk": "@@ -1,5 +1,5 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project ToolsVersion=\"dogfood\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "they don't at the moment but I hate to delete them because we _should_ turn them back on (but maybe we can just delete the code first?",
              "createdAt": "2022-01-13T19:29:44Z",
              "path": "src/Deprecated/Conversion.UnitTests/XMakeConversionUnitTests.csproj",
              "diffHunk": "@@ -1,5 +1,5 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project ToolsVersion=\"dogfood\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "More than happy to delete deprecated UTs if that's the decision. But for another PR, as this one is big enough :)",
              "createdAt": "2022-01-13T20:38:34Z",
              "path": "src/Deprecated/Conversion.UnitTests/XMakeConversionUnitTests.csproj",
              "diffHunk": "@@ -1,5 +1,5 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project ToolsVersion=\"dogfood\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">",
              "author": {
                "login": "dfederm"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This won't break compatibility with some super old MSBuild that's still in support will it?",
              "createdAt": "2022-01-13T19:27:57Z",
              "path": "src/Tasks/Microsoft.CSharp.CrossTargeting.targets",
              "diffHunk": "@@ -10,7 +10,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n ***********************************************************************************************\n -->\n \n-<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+<Project>",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "As with #7165, the assertion is that these targets are never used with a super-old MSBuild.",
              "createdAt": "2022-01-13T20:37:35Z",
              "path": "src/Tasks/Microsoft.CSharp.CrossTargeting.targets",
              "diffHunk": "@@ -10,7 +10,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n ***********************************************************************************************\n -->\n \n-<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+<Project>",
              "author": {
                "login": "dfederm"
              }
            }
          ]
        }
      }
    ]
  }
}