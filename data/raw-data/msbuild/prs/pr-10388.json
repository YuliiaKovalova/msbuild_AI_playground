{
  "number": 10388,
  "title": "Localize the text in the common target",
  "body": "Fixes [#10171 ](https://github.com/dotnet/msbuild/issues/10171)\r\n\r\n### Context\r\nMsBuild produces unlocalized messages for some specific validation cases that happen in scope of target.\r\nThe example of the task usage: https://github.com/YuliiaKovalova/msbuild/blob/be21253d85f7766356880d376e26aaa69c34c4cd/src/Tasks/Microsoft.Common.CurrentVersion.targets#L862\r\n\r\n### Changes Made\r\nRefactor the existing messages with the recently added task allows to produce localized messages:\r\nhttps://github.com/dotnet/msbuild/blob/79dff86b18613cfe3510b719ac28e8a8c3e7f96c/src/Tasks/MSBuildInternalMessage.cs , produced by with hardcoded text.\r\n### Testing\r\nAdd test cases for each new resource, except for the resource CommonSdk.PropertyWithTrailingSlash, which is tested manually as followed picture.\r\n![image](https://github.com/user-attachments/assets/c53b04b2-5156-40de-ac29-8c4fe01668b1)\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2024-07-17T06:19:39Z",
  "updatedAt": "2024-12-06T06:58:30Z",
  "closedAt": "2024-12-05T10:42:39Z",
  "mergedAt": "2024-12-05T10:42:39Z",
  "additions": 1323,
  "deletions": 166,
  "changedFiles": 17,
  "headRefName": "jennybai/issue#10171",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "4bebe676f441480f552619b51f7a0aacd5ef984c",
          "message": "Localize the text in the common target",
          "committedDate": "2024-07-17T06:12:03Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1bdbe16c196d1f1bdf09344b1f1a94a33ebd0043",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jennybai/issue#10171",
          "committedDate": "2024-07-17T07:39:32Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "273d6fb817f80508464a0be9655926765c4b06ef",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jennybai/issue#10171",
          "committedDate": "2024-08-19T08:20:15Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ba9867717b4b48b4385e8e312ca8ab00167a24be",
          "message": "Add missing resource name",
          "committedDate": "2024-08-19T08:45:12Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c6fd669ad01bb676ac44f95bdfdc38dd5b824678",
          "message": "Refactor the code",
          "committedDate": "2024-08-20T09:05:33Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d8a3244e59d0c212ac617ca1d23eee443881498e",
          "message": "Fix the typo error",
          "committedDate": "2024-08-21T03:45:11Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2ef73ef35ab69e018a52ddbe8c7dd4a6807009d9",
          "message": "Fix typo error",
          "committedDate": "2024-08-21T04:22:46Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "29088993d6db24eeabc74883f9440d25383048eb",
          "message": "Fix wrong words",
          "committedDate": "2024-08-21T04:54:32Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0dacce6dbc6bd4eaa30eac66697425a1df68d2f3",
          "message": "Add deleted line",
          "committedDate": "2024-08-21T06:40:29Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cf422dd76c90beb24aa2602771066cdd7a853e1b",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jennybai/issue#10171",
          "committedDate": "2024-11-12T07:29:29Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fcdad1efdb092fd3ac3b2ece788164c04b221eb3",
          "message": "Add test cases",
          "committedDate": "2024-11-27T08:16:13Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a1183e85eb5bb2d7693eeea6a0e678cdee259752",
          "message": "Merge branch 'main' into jennybai/issue#10171",
          "committedDate": "2024-11-27T09:08:20Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e688ea638acf4ffd693ca48cf05440c901ee19e9",
          "message": "lower the test case parameter name first letter",
          "committedDate": "2024-11-27T09:39:40Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "22e64594d0292e2c84739aed0ebca787715a3434",
          "message": "Merge branch 'jennybai/issue#10171' of https://github.com/JaynieBai/msbuild into jennybai/issue#10171",
          "committedDate": "2024-11-27T09:39:43Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6c7352810919cce7a0f4fbc013387ec47f00f2aa",
          "message": "Add code in the comments and fix style init",
          "committedDate": "2024-12-02T03:33:10Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> Message Code (like MSB3539) should be separately specified to ensure searchability in these files.\n\nWe only localize the text, so, it's not strictly required to put `Code` in. But I get the reason why. I can also argue that, when debugging an obscure build failure, you might need to locate the line in the targets where it spits out the message and start from there. Since, for almost all messages, the text log does not provide line number and file of the message task unless a high verbosity level is provided. So, you cannot locate the message task.\n\nWith `Code` specified in the targets, we can just do a text search on a preprocessed file, and we can go to that exact line. This saves a ton of time combing through binlog or imported files.\n\nAnd if you want to indicate the `Code` mapping in RESX, why not add it in the comments? There's a reason that previous text only message tasks had a separate `Code` parameter instead of just putting them in the `Text` parameter.",
        "createdAt": "2024-11-30T03:05:56Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> > Message Code (like MSB3539) should be separately specified to ensure searchability in these files.\r\n> \r\n> We only localize the text, so, it's not strictly required to put `Code` in. But I get the reason why. I can also argue that, when debugging an obscure build failure, you might need to locate the line in the targets where it spits out the message and start from there. Since, for almost all messages, the text log does not provide line number and file of the message task unless a high verbosity level is provided. So, you cannot locate the message task.\r\n> \r\n> With `Code` specified in the targets, we can just do a text search on a preprocessed file, and we can go to that exact line. This saves a ton of time combing through binlog or imported files.\r\n> \r\n> And if you want to indicate the `Code` mapping in RESX, why not add it in the comments? There's a reason that previous text only message tasks had a separate `Code` parameter instead of just putting them in the `Text` parameter.\r\n\r\nThanks for your explanation. I added that code in the comment.",
        "createdAt": "2024-12-02T03:35:08Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "> I added that code in the comment.\r\n\r\nYeah, I meant in RESX Comments field but this works just as fine. However, it requires anyone who adds a message task to consistently place the `Code` in the comments, which is improbable. IMO, separating the `Code` from the resource string remains most effective.\r\n\r\nAlso, `Code` in the resource string seems to be optional even if the Severity is either `Warning` or `Error`. Since this is an internal task to MSBuild, can't we make the `Code` mandatory on those conditions? This would prevent some typos in the future and also force us to allocate `Code` for every warning or error.",
        "createdAt": "2024-12-02T04:58:31Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> > I added that code in the comment.\r\n> \r\n> Yeah, I meant in RESX Comments field but this works just as fine. However, it requires anyone who adds a message task to consistently place the `Code` in the comments, which is improbable. IMO, separating the `Code` from the resource string remains most effective.\r\n> \r\n> Also, `Code` in the resource string seems to be optional even if the Severity is either `Warning` or `Error`. Since this is an internal task to MSBuild, can't we make the `Code` mandatory on those conditions? This would prevent some typos in the future and also force us to allocate `Code` for every warning or error.\r\n\r\nYes, your suggestions are reasonable.  Since some warning or error messages before don't have the code such as CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio,  CommonSdk.DeploymentUnpublishable .  @JanKrivanek and @YuliiaKovalova Should we add the code for every message?  If so, I can update that next.",
        "createdAt": "2024-12-03T09:20:58Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "@Nirmal4G thonks for nice suggestions - tracked as https://github.com/dotnet/msbuild/issues/11087 - as the change would require adjusting code violating this currently and is out of scope of this PR",
        "createdAt": "2024-12-05T10:40:16Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "@JanKrivanek No problem. As you said, these are **just** suggestions. And I ~~thonk~~ thank you (*sorry, couldn't resist* \ud83d\ude1c) for considering it. ",
        "createdAt": "2024-12-05T10:47:00Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": ":laughing: appology - quick typing. I promise I gave more time into considering the suggestion than into to typing that response! \ud83d\ude09 (it's tracked after all)",
        "createdAt": "2024-12-06T06:58:29Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    <PropertyGroup>\r\n      <_InvalidConfigurationMessageResourceName Condition=\" '$(BuildingInsideVisualStudio)' == 'true' \">CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio</_InvalidConfigurationMessageResourceName>\r\n      <_InvalidConfigurationMessageResourceName Condition=\" '$(BuildingInsideVisualStudio)' != 'true' \">CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio</_InvalidConfigurationMessageResourceName>\r\n    </PropertyGroup>\r\n\r\n    <MSBuildInternalMessage Code=\"MSB3541\"\n      ResourceName=\"$(_InvalidConfigurationMessageResourceName)\"\n      Severity=\"$(_InvalidConfigurationMessageSeverity)\"\n      FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"\n      Condition=\"'$(_InvalidConfigurationMessageSeverity)' != ''\" />\r\n\r\n    <PropertyGroup>\r\n      <_InvalidConfigurationMessageSeverity />\r\n      <_InvalidConfigurationMessageResourceName />\r\n    </PropertyGroup>\r\n```\r\n\r\n#### Linked Changes\r\n\r\nIf you are applying this patch, replace the `_InvalidConfiguration[Warning|Error]` prperties with `_InvalidConfigurationMessageSeverity` like so:\r\n\r\n***Replace these lines***\r\n\r\nhttps://github.com/dotnet/msbuild/blob/47f364c941aa0353b09f549d8b084704a69feca9/src/Tasks/Microsoft.Common.CurrentVersion.targets#L205-L206\r\n\r\n***with these lines***\r\n\r\n```xml\r\n      <_InvalidConfigurationMessageSeverity Condition=\" '$(SkipInvalidConfigurations)' == 'true' \">Warning</_InvalidConfigurationMessageSeverity>\r\n      <_InvalidConfigurationMessageSeverity Condition=\" '$(SkipInvalidConfigurations)' != 'true' \">Error</_InvalidConfigurationMessageSeverity>\r\n```\r\n\r\n> [!IMPORTANT]\r\n>\r\n> You could use the above pattern everywhere else. It makes the code easy to read. I don't know if cleaning up the properties is needed or not but kept there for clarity.",
              "createdAt": "2024-07-18T10:06:41Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -835,22 +835,18 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n       Name=\"_CheckForInvalidConfigurationAndPlatform\"\n       BeforeTargets=\"$(BuildDependsOn);Build;$(RebuildDependsOn);Rebuild;$(CleanDependsOn);Clean\">\n \n-    <PropertyGroup>\n-      <_InvalidConfigurationMessageText>The BaseOutputPath/OutputPath property is not set for project '$(MSBuildProjectFile)'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='$(_OriginalConfiguration)'  Platform='$(_OriginalPlatform)'.</_InvalidConfigurationMessageText>\n-      <_InvalidConfigurationMessageText Condition=\"'$(BuildingInsideVisualStudio)' == 'true'\">$(_InvalidConfigurationMessageText)  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</_InvalidConfigurationMessageText>\n-      <_InvalidConfigurationMessageText Condition=\"'$(BuildingInsideVisualStudio)' != 'true'\">$(_InvalidConfigurationMessageText)  You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</_InvalidConfigurationMessageText>\n-    </PropertyGroup>\n-\n-    <Error Condition=\" '$(_InvalidConfigurationError)' == 'true' \" Text=\"$(_InvalidConfigurationMessageText)\"/>\n-    <Warning Condition=\" '$(_InvalidConfigurationWarning)' == 'true' \" Text=\"$(_InvalidConfigurationMessageText)\"/>\n+    <MSBuildInternalMessage Condition=\" '$(_InvalidConfigurationError)' == 'true' and '$(BuildingInsideVisualStudio)' == 'true'\" ResourceName=\"CommonTarget.InvalidConfigurationTextWithBuildingInsideVisualStudio\" Severity=\"Error\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>\n+    <MSBuildInternalMessage Condition=\" '$(_InvalidConfigurationError)' == 'true' and '$(BuildingInsideVisualStudio)' != 'true'\" ResourceName=\"CommonTarget.InvalidConfigurationTextWithoutBuildingInsideVisualStudio\" Severity=\"Error\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>\n+    <MSBuildInternalMessage Condition=\" '$(_InvalidConfigurationWarning)' == 'true' and '$(BuildingInsideVisualStudio)' == 'true'\" ResourceName=\"CommonTarget.InvalidConfigurationTextWithBuildingInsideVisualStudio\" Severity=\"Warning\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>\n+    <MSBuildInternalMessage Condition=\" '$(_InvalidConfigurationWarning)' == 'true' and '$(BuildingInsideVisualStudio)' != 'true'\" ResourceName=\"CommonTarget.InvalidConfigurationTextWithoutBuildingInsideVisualStudio\" Severity=\"Warning\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>",
              "author": {
                "login": "Nirmal4G"
              }
            },
            {
              "body": "Updated",
              "createdAt": "2024-11-27T08:30:28Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -835,22 +835,18 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n       Name=\"_CheckForInvalidConfigurationAndPlatform\"\n       BeforeTargets=\"$(BuildDependsOn);Build;$(RebuildDependsOn);Rebuild;$(CleanDependsOn);Clean\">\n \n-    <PropertyGroup>\n-      <_InvalidConfigurationMessageText>The BaseOutputPath/OutputPath property is not set for project '$(MSBuildProjectFile)'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='$(_OriginalConfiguration)'  Platform='$(_OriginalPlatform)'.</_InvalidConfigurationMessageText>\n-      <_InvalidConfigurationMessageText Condition=\"'$(BuildingInsideVisualStudio)' == 'true'\">$(_InvalidConfigurationMessageText)  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</_InvalidConfigurationMessageText>\n-      <_InvalidConfigurationMessageText Condition=\"'$(BuildingInsideVisualStudio)' != 'true'\">$(_InvalidConfigurationMessageText)  You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</_InvalidConfigurationMessageText>\n-    </PropertyGroup>\n-\n-    <Error Condition=\" '$(_InvalidConfigurationError)' == 'true' \" Text=\"$(_InvalidConfigurationMessageText)\"/>\n-    <Warning Condition=\" '$(_InvalidConfigurationWarning)' == 'true' \" Text=\"$(_InvalidConfigurationMessageText)\"/>\n+    <MSBuildInternalMessage Condition=\" '$(_InvalidConfigurationError)' == 'true' and '$(BuildingInsideVisualStudio)' == 'true'\" ResourceName=\"CommonTarget.InvalidConfigurationTextWithBuildingInsideVisualStudio\" Severity=\"Error\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>\n+    <MSBuildInternalMessage Condition=\" '$(_InvalidConfigurationError)' == 'true' and '$(BuildingInsideVisualStudio)' != 'true'\" ResourceName=\"CommonTarget.InvalidConfigurationTextWithoutBuildingInsideVisualStudio\" Severity=\"Error\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>\n+    <MSBuildInternalMessage Condition=\" '$(_InvalidConfigurationWarning)' == 'true' and '$(BuildingInsideVisualStudio)' == 'true'\" ResourceName=\"CommonTarget.InvalidConfigurationTextWithBuildingInsideVisualStudio\" Severity=\"Warning\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>\n+    <MSBuildInternalMessage Condition=\" '$(_InvalidConfigurationWarning)' == 'true' and '$(BuildingInsideVisualStudio)' != 'true'\" ResourceName=\"CommonTarget.InvalidConfigurationTextWithoutBuildingInsideVisualStudio\" Severity=\"Warning\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n  <data name=\"CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio\">\r\n```",
              "createdAt": "2024-07-18T10:08:32Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -3051,6 +3051,58 @@\n     <comment>{StrBegin=\"MSB9904: \"}</comment>\n   </data>\n \n+  <data name=\"CommonTarget.BaseIntermediateOutputPathMismatchWarning\">\n+    <value>MSB3539: The value of the property &quot;BaseIntermediateOutputPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the &quot;MSBuildProjectExtensionsPath&quot; instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650\"</value>\n+    <comment>{StrBegin=\"MSB3539: \"} </comment>\n+  </data>\n+\n+  <data name=\"CommonTarget.MSBuildProjectExtensionsPathModifiedAfterUse\">\n+    <value>MSB3540: The value of the property &quot;MSBuildProjectExtensionsPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</value>\n+    <comment>{StrBegin=\"MSB3540: \"}</comment>\n+  </data>\n+\n+  <data name=\"CommonTarget.InvalidConfigurationTextWithBuildingInsideVisualStudio\">",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n  <data name=\"CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio\">\r\n```",
              "createdAt": "2024-07-18T10:09:06Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -3051,6 +3051,58 @@\n     <comment>{StrBegin=\"MSB9904: \"}</comment>\n   </data>\n \n+  <data name=\"CommonTarget.BaseIntermediateOutputPathMismatchWarning\">\n+    <value>MSB3539: The value of the property &quot;BaseIntermediateOutputPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the &quot;MSBuildProjectExtensionsPath&quot; instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650\"</value>\n+    <comment>{StrBegin=\"MSB3539: \"} </comment>\n+  </data>\n+\n+  <data name=\"CommonTarget.MSBuildProjectExtensionsPathModifiedAfterUse\">\n+    <value>MSB3540: The value of the property &quot;MSBuildProjectExtensionsPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</value>\n+    <comment>{StrBegin=\"MSB3540: \"}</comment>\n+  </data>\n+\n+  <data name=\"CommonTarget.InvalidConfigurationTextWithBuildingInsideVisualStudio\">\n+    <value>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</value>\n+    <comment>LOCALIZATION:  Do not localize the words \"BaseOutputPath/OutputPath\", \"Configuration\" and \"Platform\"</comment>\n+  </data>\n+\n+  <data name=\"CommonTarget.InvalidConfigurationTextWithoutBuildingInsideVisualStudio\">",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: undo the line deletion!",
              "createdAt": "2024-08-20T19:11:15Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -834,23 +834,20 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n   <Target\n       Name=\"_CheckForInvalidConfigurationAndPlatform\"\n       BeforeTargets=\"$(BuildDependsOn);Build;$(RebuildDependsOn);Rebuild;$(CleanDependsOn);Clean\">\n-",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Sorry about my mistake.\n\n```suggestion\n    <MSBuildInternalMessage\n      ResourceName=\"$(_InvalidConfigurationMessageResourceName)\"\n      Severity=\"$(_InvalidConfigurationMessageSeverity)\"\n      FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"\n      Condition=\"'$(_InvalidConfigurationMessageSeverity)' != ''\" />\n```\n\n> [!IMPORTANT]\n>\n> For the condition, we could have used the same output path check here also\n> but we must not forget to update both when it changes in the future.\n> That's why I have used Severity instead.",
              "createdAt": "2024-08-20T19:13:10Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -834,23 +834,20 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n   <Target\n       Name=\"_CheckForInvalidConfigurationAndPlatform\"\n       BeforeTargets=\"$(BuildDependsOn);Build;$(RebuildDependsOn);Rebuild;$(CleanDependsOn);Clean\">\n-\n     <PropertyGroup>\n-      <_InvalidConfigurationMessageText>The BaseOutputPath/OutputPath property is not set for project '$(MSBuildProjectFile)'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='$(_OriginalConfiguration)'  Platform='$(_OriginalPlatform)'.</_InvalidConfigurationMessageText>\n-      <_InvalidConfigurationMessageText Condition=\"'$(BuildingInsideVisualStudio)' == 'true'\">$(_InvalidConfigurationMessageText)  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</_InvalidConfigurationMessageText>\n-      <_InvalidConfigurationMessageText Condition=\"'$(BuildingInsideVisualStudio)' != 'true'\">$(_InvalidConfigurationMessageText)  You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</_InvalidConfigurationMessageText>\n+      <_InvalidConfigurationMessageResourceName Condition=\" '$(BuildingInsideVisualStudio)' == 'true' \">CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio</_InvalidConfigurationMessageResourceName>\n+      <_InvalidConfigurationMessageResourceName Condition=\" '$(BuildingInsideVisualStudio)' != 'true' \">CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio</_InvalidConfigurationMessageResourceName>\n     </PropertyGroup>\n \n-    <Error Condition=\" '$(_InvalidConfigurationError)' == 'true' \" Text=\"$(_InvalidConfigurationMessageText)\"/>\n-    <Warning Condition=\" '$(_InvalidConfigurationWarning)' == 'true' \" Text=\"$(_InvalidConfigurationMessageText)\"/>\n+    <MSBuildInternalMessage ResourceName=\"$(_InvalidConfigurationMessageResourceName)\" Severity=\"$(_InvalidConfigurationMessageSeverity)\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>",
              "author": {
                "login": "Nirmal4G"
              }
            },
            {
              "body": "Thanks a lot @Nirmal4G ",
              "createdAt": "2024-08-21T06:03:56Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -834,23 +834,20 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n   <Target\n       Name=\"_CheckForInvalidConfigurationAndPlatform\"\n       BeforeTargets=\"$(BuildDependsOn);Build;$(RebuildDependsOn);Rebuild;$(CleanDependsOn);Clean\">\n-\n     <PropertyGroup>\n-      <_InvalidConfigurationMessageText>The BaseOutputPath/OutputPath property is not set for project '$(MSBuildProjectFile)'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='$(_OriginalConfiguration)'  Platform='$(_OriginalPlatform)'.</_InvalidConfigurationMessageText>\n-      <_InvalidConfigurationMessageText Condition=\"'$(BuildingInsideVisualStudio)' == 'true'\">$(_InvalidConfigurationMessageText)  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</_InvalidConfigurationMessageText>\n-      <_InvalidConfigurationMessageText Condition=\"'$(BuildingInsideVisualStudio)' != 'true'\">$(_InvalidConfigurationMessageText)  You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</_InvalidConfigurationMessageText>\n+      <_InvalidConfigurationMessageResourceName Condition=\" '$(BuildingInsideVisualStudio)' == 'true' \">CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio</_InvalidConfigurationMessageResourceName>\n+      <_InvalidConfigurationMessageResourceName Condition=\" '$(BuildingInsideVisualStudio)' != 'true' \">CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio</_InvalidConfigurationMessageResourceName>\n     </PropertyGroup>\n \n-    <Error Condition=\" '$(_InvalidConfigurationError)' == 'true' \" Text=\"$(_InvalidConfigurationMessageText)\"/>\n-    <Warning Condition=\" '$(_InvalidConfigurationWarning)' == 'true' \" Text=\"$(_InvalidConfigurationMessageText)\"/>\n+    <MSBuildInternalMessage ResourceName=\"$(_InvalidConfigurationMessageResourceName)\" Severity=\"$(_InvalidConfigurationMessageSeverity)\" FormatArguments=\"$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)\"/>",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n      Severity=\"$(_NonExistentProjectReferenceSeverity)\"\r\n```",
              "createdAt": "2024-08-21T04:37:40Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -2171,16 +2179,17 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n       </_ResolvedProjectReferencePaths>\n     </ItemGroup>\n \n-    <!-- Issue a warning or error for each non-existent project. -->\n-    <Warning\n-        Text=\"The referenced project '%(_MSBuildProjectReferenceNonexistent.Identity)' does not exist.\"\n-        Code=\"MSB9008\"\n-        Condition=\"'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '' and '$(ErrorOnMissingProjectReference)' != 'True'\"/>\n-\n-    <Error\n-        Text=\"The referenced project '%(_MSBuildProjectReferenceNonexistent.Identity)' does not exist.\"\n-        Code=\"MSB9008\"\n-        Condition=\"'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '' and '$(ErrorOnMissingProjectReference)' == 'True'\"/>\n+    <!-- Issue a warning for each non-existent project. -->\n+    <PropertyGroup>\n+      <_NonExistentProjectReferenceSecuity  Condition=\"'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '' and '$(ErrorOnMissingProjectReference)' != 'True'\">Warning</_NonExistentProjectReferenceSecuity>\n+      <_NonExistentProjectReferenceSecuity  Condition=\"'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '' and '$(ErrorOnMissingProjectReference)' == 'True'\">Error</_NonExistentProjectReferenceSecuity>\n+    </PropertyGroup>\n+    <MSBuildInternalMessage\n+      Condition=\"'$(_NonExistentProjectReferenceSecuity)' != ''\"\n+      ResourceName=\"CommonSdk.NonExistentProjectReference\"\n+      Severity=\"$(_NonExistentProjectReferenceSecuity)\"",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\n        public void BaseIntermediateOutputPathMisMatchWarning(bool isInitialMSBuildProjectExtensionsPathEmpty, string expectedResourceName)\n```\n",
              "createdAt": "2024-11-30T02:17:07Z",
              "path": "src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs",
              "diffHunk": "@@ -59,5 +60,233 @@ public void E2EScenarioTests(bool prefer32, bool isPlatformAnyCpu, string expect\n                 }\n             }\n         }\n+\n+        [Theory]\n+        [InlineData(true, \"CommonSdk.BaseIntermediateOutputPathMismatchWarning\")]\n+        [InlineData(false, \"CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse\")]\n+\n+        public void BaseIntermediateOutputPathMisMatchWarning(bool IsInitialMSBuildProjectExtensionsPathEmpty, string expectedResourceName)",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\n                        <_InitialMSBuildProjectExtensionsPath>{(isInitialMSBuildProjectExtensionsPathEmpty ? \"\" : \"obj\")}</_InitialMSBuildProjectExtensionsPath>\n```\n",
              "createdAt": "2024-11-30T02:17:37Z",
              "path": "src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs",
              "diffHunk": "@@ -59,5 +60,233 @@ public void E2EScenarioTests(bool prefer32, bool isPlatformAnyCpu, string expect\n                 }\n             }\n         }\n+\n+        [Theory]\n+        [InlineData(true, \"CommonSdk.BaseIntermediateOutputPathMismatchWarning\")]\n+        [InlineData(false, \"CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse\")]\n+\n+        public void BaseIntermediateOutputPathMisMatchWarning(bool IsInitialMSBuildProjectExtensionsPathEmpty, string expectedResourceName)\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                var outputPath = env.CreateFolder().Path;\n+                string projectContent = $\"\"\"\n+                <Project>\n+                    <Import Project=\"$(MSBuildBinPath)\\Microsoft.Common.props\" />\n+\n+                    <PropertyGroup>\n+                        <EnableBaseIntermediateOutputPathMismatchWarning>true</EnableBaseIntermediateOutputPathMismatchWarning>\n+                        <_InitialMSBuildProjectExtensionsPath>{(IsInitialMSBuildProjectExtensionsPathEmpty ? \"\" : \"obj\")}</_InitialMSBuildProjectExtensionsPath>",
              "author": {
                "login": "Nirmal4G"
              }
            },
            {
              "body": "Sorry. missed that. Updated",
              "createdAt": "2024-12-02T03:33:47Z",
              "path": "src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs",
              "diffHunk": "@@ -59,5 +60,233 @@ public void E2EScenarioTests(bool prefer32, bool isPlatformAnyCpu, string expect\n                 }\n             }\n         }\n+\n+        [Theory]\n+        [InlineData(true, \"CommonSdk.BaseIntermediateOutputPathMismatchWarning\")]\n+        [InlineData(false, \"CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse\")]\n+\n+        public void BaseIntermediateOutputPathMisMatchWarning(bool IsInitialMSBuildProjectExtensionsPathEmpty, string expectedResourceName)\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                var outputPath = env.CreateFolder().Path;\n+                string projectContent = $\"\"\"\n+                <Project>\n+                    <Import Project=\"$(MSBuildBinPath)\\Microsoft.Common.props\" />\n+\n+                    <PropertyGroup>\n+                        <EnableBaseIntermediateOutputPathMismatchWarning>true</EnableBaseIntermediateOutputPathMismatchWarning>\n+                        <_InitialMSBuildProjectExtensionsPath>{(IsInitialMSBuildProjectExtensionsPathEmpty ? \"\" : \"obj\")}</_InitialMSBuildProjectExtensionsPath>",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\n                if (!isInitialMSBuildProjectExtensionsPathEmpty)\n```\n",
              "createdAt": "2024-11-30T02:18:07Z",
              "path": "src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs",
              "diffHunk": "@@ -59,5 +60,233 @@ public void E2EScenarioTests(bool prefer32, bool isPlatformAnyCpu, string expect\n                 }\n             }\n         }\n+\n+        [Theory]\n+        [InlineData(true, \"CommonSdk.BaseIntermediateOutputPathMismatchWarning\")]\n+        [InlineData(false, \"CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse\")]\n+\n+        public void BaseIntermediateOutputPathMisMatchWarning(bool IsInitialMSBuildProjectExtensionsPathEmpty, string expectedResourceName)\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                var outputPath = env.CreateFolder().Path;\n+                string projectContent = $\"\"\"\n+                <Project>\n+                    <Import Project=\"$(MSBuildBinPath)\\Microsoft.Common.props\" />\n+\n+                    <PropertyGroup>\n+                        <EnableBaseIntermediateOutputPathMismatchWarning>true</EnableBaseIntermediateOutputPathMismatchWarning>\n+                        <_InitialMSBuildProjectExtensionsPath>{(IsInitialMSBuildProjectExtensionsPathEmpty ? \"\" : \"obj\")}</_InitialMSBuildProjectExtensionsPath>\n+                        <MSBuildProjectExtensionsPath></MSBuildProjectExtensionsPath>\n+                        <BaseIntermediateOutputPath>obj\\Debug\\</BaseIntermediateOutputPath>\n+                    </PropertyGroup>\n+\n+                    <Import Project=\"$(MSBuildBinPath)\\Microsoft.CSharp.targets\" />\n+                </Project>\n+                \"\"\";\n+\n+                var projectFile = env.CreateFile(env.CreateFolder(), \"test.csproj\", projectContent).Path;\n+                Project project = ObjectModelHelpers.LoadProjectFileInTempProjectDirectory(projectFile, touchProject: false);\n+\n+                string expectedBuildMessage = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(expectedResourceName);\n+                MockLogger logger = new MockLogger(_testOutput);\n+\n+                project.Build(logger);\n+                if (!IsInitialMSBuildProjectExtensionsPathEmpty)",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      }
    ]
  }
}