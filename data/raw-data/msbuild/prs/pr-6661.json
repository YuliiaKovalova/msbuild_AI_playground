{
  "number": 6661,
  "title": "Add CopyUpToDate ETW",
  "body": "Progress towards #6658 \r\n\r\nAdds an up-to-date ETW for the Copy task. Also captures metadata copying just because that happens if it was up-to-date. (Should we have a check rather than always copying?)",
  "state": "MERGED",
  "createdAt": "2021-07-09T17:57:08Z",
  "updatedAt": "2021-08-16T23:17:31Z",
  "closedAt": "2021-08-16T23:17:31Z",
  "mergedAt": "2021-08-16T23:17:31Z",
  "additions": 29,
  "deletions": 0,
  "changedFiles": 2,
  "headRefName": "copy-etw",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c315d08997ea3c0ea3366506ba2926bdddddd738",
          "message": "Add CopyUpToDate ETW",
          "committedDate": "2021-07-09T17:55:43Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b69ad1aace81cf3fa0cb7ed90188b101db471b42",
          "message": "Undo unnecessary refactoring",
          "committedDate": "2021-07-09T21:52:05Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "65184fc1cb7366160475307cf058f716abe6d9e5",
          "message": "Move check",
          "committedDate": "2021-07-13T16:42:58Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "78eef7ea66e192d58f3326411d7808bc25bf48fa",
          "message": "Change destination variable",
          "committedDate": "2021-07-13T16:48:38Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "51d517bbed2574814c8712fd2d032584e50215d0",
          "message": "Merge branch 'main' into copy-etw",
          "committedDate": "2021-08-09T14:38:02Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f46015a39abfbedbf80c4617aa28671b5b572453",
          "message": "Added boolean for CopyUpToDate check",
          "committedDate": "2021-08-09T23:20:17Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3a4fe78a60d69a7a3f31606af41a05bcbcce6c11",
          "message": "Merge branch 'main' into copy-etw",
          "committedDate": "2021-08-13T00:13:33Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "The part I put ETW traces around looks like \"the file at destination was copied from source.\" DoCopyIfNecessary has \"files are the same size and timestamp\" and \"files have the same name.\" There's a fourth check buried in DoCopyWithRetries that does a deep file comparison.\r\n\r\nLooking at those four, the first sounded sufficient for if it's just an incremental build, and I stopped there because there deeper I try to push it, the more complicated it gets. This is a simple check with no code movement. To add the next level, I'd need three possible ending places, one of which is currently also executed when actually copying, so I would need a little extra control logic there. The last check is in a catch. I think it would be impossible to hit without capturing copies as well without substantial code changes.\r\n\r\nI can check to see if my assumption about the first being sufficient is true or just put in the change to capture the first two levels. I don't think it's worth it to try for the third.",
        "createdAt": "2021-07-12T21:56:36Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> I can check to see if my assumption about the first being sufficient is true\r\n\r\nSounds like a plan.",
        "createdAt": "2021-07-13T14:08:04Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Specify whether it was up to date or not",
              "createdAt": "2021-08-09T15:15:53Z",
              "path": "src/Tasks/Copy.cs",
              "diffHunk": "@@ -561,6 +568,10 @@ int parallelism\n                                 success = false;\n                             }\n                         }\n+                        else\n+                        {\n+                            MSBuildEventSource.Log.CopyUpToDateStop(destItem.ItemSpec);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}