{
  "number": 6882,
  "title": "6732: Default to sha2 digest for clickonce manifest",
  "body": "Default to sha2 digest instead of sha1 for clickonce manifest signing when certificate signing algorithm is sha256/384/512\r\n\r\nFixes #6732 \r\n\r\n### Context\r\nWhen using a certificate signed with sha384/sha512 as signature algorithm, ClickOnce defaults to the sha1 algorithm for it's digest hash.\r\n\r\n\r\n### Changes Made\r\nUseSha256Algorithm decides if we sign with sha1 or sha256 hash. The function has been updated to use sha256 hash when signature algorithm of the signing cert has sha256/sha384/sha512 signature algorithm.\r\n\r\n### Testing\r\nCTI has tested signing scenario for forms and wpf apps for all 4 hash types.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2021-09-22T22:59:07Z",
  "updatedAt": "2021-09-24T18:08:31Z",
  "closedAt": "2021-09-24T18:08:30Z",
  "mergedAt": "2021-09-24T18:08:30Z",
  "additions": 5,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "sujitnayak"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "bc68c0d7ef32f293a8338708b6da40075fee0ecc",
          "message": "6732: Default to sha2 digest for clickonce manifest when certificate signing algorithm is sha256/384/512",
          "committedDate": "2021-09-22T22:43:48Z",
          "author": {
            "name": "Sujit Nayak",
            "email": "sujitn@exchange.microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8f9d79e07aa7fbd1d657f24321262b6e6a263356",
          "message": "add comment",
          "committedDate": "2021-09-23T21:45:38Z",
          "author": {
            "name": "Sujit Nayak",
            "email": "sujitn@exchange.microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d9d1d59cb4ea0e610507ad457d6923b4534df157",
          "message": "fix comment",
          "committedDate": "2021-09-23T23:00:55Z",
          "author": {
            "name": "Sujit Nayak",
            "email": "sujitn@exchange.microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Can you add a short comment explaining why we use sha256 for the other certs? ",
              "createdAt": "2021-09-22T23:16:36Z",
              "path": "src/Tasks/ManifestUtil/SecurityUtil.cs",
              "diffHunk": "@@ -572,7 +572,9 @@ public static void SignFile(string certPath, SecureString certPassword, Uri time\n         private static bool UseSha256Algorithm(X509Certificate2 cert)\n         {\n             Oid oid = cert.SignatureAlgorithm;\n-            return string.Equals(oid.FriendlyName, \"sha256RSA\", StringComparison.OrdinalIgnoreCase);\n+            return string.Equals(oid.FriendlyName, \"sha256RSA\", StringComparison.OrdinalIgnoreCase) ||",
              "author": {
                "login": "John-Hart"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n            // Issue 6732: Clickonce does not support sha384/sha512 hash so we default to sha256 \r\n```\r\n\r\n?",
              "createdAt": "2021-09-23T22:09:16Z",
              "path": "src/Tasks/ManifestUtil/SecurityUtil.cs",
              "diffHunk": "@@ -572,7 +572,11 @@ public static void SignFile(string certPath, SecureString certPassword, Uri time\n         private static bool UseSha256Algorithm(X509Certificate2 cert)\n         {\n             Oid oid = cert.SignatureAlgorithm;\n-            return string.Equals(oid.FriendlyName, \"sha256RSA\", StringComparison.OrdinalIgnoreCase);\n+            // Issue 6732: Clickonce does support sha384/sha512 hash so we default to sha256 ",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I'm not sure this question makes sense but: Is it possible for a cert to have sha384/sha512 and _not_ have 256? ",
              "createdAt": "2021-09-23T22:10:37Z",
              "path": "src/Tasks/ManifestUtil/SecurityUtil.cs",
              "diffHunk": "@@ -572,7 +572,11 @@ public static void SignFile(string certPath, SecureString certPassword, Uri time\n         private static bool UseSha256Algorithm(X509Certificate2 cert)\n         {\n             Oid oid = cert.SignatureAlgorithm;\n-            return string.Equals(oid.FriendlyName, \"sha256RSA\", StringComparison.OrdinalIgnoreCase);\n+            // Issue 6732: Clickonce does support sha384/sha512 hash so we default to sha256 ",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "We use the signature algorithm of the cert to decide what file digest algorithm to use for the clickonce manifest files. So for certs with sha1 signature, we choose sha1 file digest algorithm for clickonce manfest. With this change, we will use sha256 file digest algorithm for clickonce manifest if the signature algorithm in the cert is sha256 or sha384 or sha512.\r\n\r\nThe cert's signature algorithm is the algorithm used to create the signature of the cert and can be only 1 value like sha1/sha256/sha384/sha512.\r\n",
              "createdAt": "2021-09-23T22:58:43Z",
              "path": "src/Tasks/ManifestUtil/SecurityUtil.cs",
              "diffHunk": "@@ -572,7 +572,11 @@ public static void SignFile(string certPath, SecureString certPassword, Uri time\n         private static bool UseSha256Algorithm(X509Certificate2 cert)\n         {\n             Oid oid = cert.SignatureAlgorithm;\n-            return string.Equals(oid.FriendlyName, \"sha256RSA\", StringComparison.OrdinalIgnoreCase);\n+            // Issue 6732: Clickonce does support sha384/sha512 hash so we default to sha256 ",
              "author": {
                "login": "sujitnayak"
              }
            },
            {
              "body": "Ah, so it's an independent signature/algorithm but it makes sense to use the strongest possible one based on the signal of the cert provided?",
              "createdAt": "2021-09-24T01:34:34Z",
              "path": "src/Tasks/ManifestUtil/SecurityUtil.cs",
              "diffHunk": "@@ -572,7 +572,11 @@ public static void SignFile(string certPath, SecureString certPassword, Uri time\n         private static bool UseSha256Algorithm(X509Certificate2 cert)\n         {\n             Oid oid = cert.SignatureAlgorithm;\n-            return string.Equals(oid.FriendlyName, \"sha256RSA\", StringComparison.OrdinalIgnoreCase);\n+            // Issue 6732: Clickonce does support sha384/sha512 hash so we default to sha256 ",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Correct.",
              "createdAt": "2021-09-24T18:06:26Z",
              "path": "src/Tasks/ManifestUtil/SecurityUtil.cs",
              "diffHunk": "@@ -572,7 +572,11 @@ public static void SignFile(string certPath, SecureString certPassword, Uri time\n         private static bool UseSha256Algorithm(X509Certificate2 cert)\n         {\n             Oid oid = cert.SignatureAlgorithm;\n-            return string.Equals(oid.FriendlyName, \"sha256RSA\", StringComparison.OrdinalIgnoreCase);\n+            // Issue 6732: Clickonce does support sha384/sha512 hash so we default to sha256 ",
              "author": {
                "login": "sujitnayak"
              }
            }
          ]
        }
      }
    ]
  }
}