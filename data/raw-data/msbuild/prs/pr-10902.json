{
  "number": 10902,
  "title": "fix IDE0002 in XMakeElements.cs",
  "body": "```\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(44,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(45,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(46,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(47,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(48,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(49,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(50,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(51,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(53,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(54,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(55,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nD:\\a\\_work\\_temp\\temp\\msbuild\\src\\Shared\\XMakeElements.cs(56,13): warning IDE0002: Name can be simplified [D:\\a\\_work\\_temp\\temp\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\n```",
  "state": "MERGED",
  "createdAt": "2024-10-29T09:08:41Z",
  "updatedAt": "2024-11-11T09:51:00Z",
  "closedAt": "2024-11-11T09:38:27Z",
  "mergedAt": "2024-11-11T09:38:27Z",
  "additions": 18,
  "deletions": 18,
  "changedFiles": 1,
  "headRefName": "patch-2",
  "isDraft": false,
  "author": {
    "login": "kasperk81"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "maridematte"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8bea9ab1cb05a0626882d077eb720b95cb7f334c",
          "message": "fix IDE0002 in XMakeElements.cs",
          "committedDate": "2024-10-29T09:07:12Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9579a1ace42272bfa1aab7c985752182a504cf9f",
          "message": "-",
          "committedDate": "2024-10-29T09:10:07Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ac5596db518090ae969f25e05e176da1b365ce34",
          "message": "Update src/Shared/XMakeElements.cs",
          "committedDate": "2024-10-29T09:10:40Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b8f165f443bfc61481245044e1a3d70c7bedb941",
          "message": "Merge branch 'main' into patch-2",
          "committedDate": "2024-10-29T09:55:06Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b402f3769fc27b8e3b87df3a7582423823532bc5",
          "message": "Update src/Shared/XMakeElements.cs",
          "committedDate": "2024-10-29T11:27:49Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2879481f1e59c82fbde3467d728561a02f89c49b",
          "message": "Merge branch 'main' into patch-2",
          "committedDate": "2024-10-29T11:28:03Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "87f579162fb4895f246fdb71bd9c6ea44782d087",
          "message": "Update src/Shared/XMakeElements.cs\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-10-29T14:34:51Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4f89999c68a36aab4492db1408babd5184be04ee",
          "message": "Merge branch 'main' into patch-2",
          "committedDate": "2024-10-29T14:35:02Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "00dc42d59149c58fe63cafba94ea3dc01efb86c8",
          "message": "readonly array",
          "committedDate": "2024-10-30T15:36:07Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4d04a9cb39806d30d8677159240034a05501ddfb",
          "message": "Merge branch 'main' into patch-2",
          "committedDate": "2024-11-01T07:49:24Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald a few warning fixes i noticed in ci runs and modernized with collection expr.",
        "createdAt": "2024-10-29T14:01:22Z",
        "author": {
          "login": "kasperk81"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: while we're in here:\r\n\r\n```suggestion\r\n            otherwise,\r\n```",
              "createdAt": "2024-10-29T14:29:54Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static char[] InvalidTargetNameCharacters => [ '$', '@', '(', ')', '%', '*', '?', '.' ];\n \n         // Names that cannot be used as property or item names because they are reserved\n-        internal static readonly HashSet<string> ReservedItemNames = new HashSet<string>\n-        {\n-            // XMakeElements.project, \"Project\" is not reserved, because unfortunately ProjectReference items already use it as metadata name.\n-            XMakeElements.visualStudioProject,\n-            XMakeElements.target,\n-            XMakeElements.propertyGroup,\n-            XMakeElements.output,\n-            XMakeElements.itemGroup,\n-            XMakeElements.usingTask,\n-            XMakeElements.projectExtensions,\n-            XMakeElements.onError,\n-            // XMakeElements.import \"Import\" items are used by Visual Basic projects\n-            XMakeElements.importGroup,\n-            XMakeElements.choose,\n-            XMakeElements.when,\n-            XMakeElements.otherwise\n-        };\n+        internal static HashSet<string> ReservedItemNames =>\n+        [\n+            // project, \"Project\" is not reserved, because unfortunately ProjectReference items already use it as metadata name.\n+            visualStudioProject,\n+            target,\n+            propertyGroup,\n+            output,\n+            itemGroup,\n+            usingTask,\n+            projectExtensions,\n+            onError,\n+            // import, \"Import\" items are used by Visual Basic projects\n+            importGroup,\n+            choose,\n+            when,\n+            otherwise",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I would prefer these two to continue being `ReadOnly`.",
              "createdAt": "2024-10-30T11:08:31Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static char[] InvalidTargetNameCharacters => [ '$', '@', '(', ')', '%', '*', '?', '.' ];",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "`=>` means \"readonly property\".\r\n\r\nthis pattern of using readonly property with collection expressions enables a roslyn optimization which puts the collection expr data in readonly section of the assembly and it's much optimal than initialization of actual static array field at runtime.",
              "createdAt": "2024-10-30T14:06:55Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static char[] InvalidTargetNameCharacters => [ '$', '@', '(', ')', '%', '*', '?', '.' ];",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "Good catch @maridematte!\r\n\r\n@kasperk81 Look at https://sharplab.io/#v2:CYLg1APgAgTAjAWAFBQMwAJboMLoN7LpGYZRwBs6ATgKYCGwA9gHYA2AnugMYAWdVAbQC66ACo8AlswDmAdQkAXHgFEAjgFc6rAM7oAvOgHoA5ABJjAGhNQolkwAo7xgJROApE4BUTgPxOAdMboQgDchMRomBTcfIIi4lJyijwAglRUjADu+gB8hibmVsY2To5FrkUeRd5FfkWBwWFIAL5AA. See how the arrow mechanism allocates a new array on every call?",
              "createdAt": "2024-10-30T14:24:45Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static char[] InvalidTargetNameCharacters => [ '$', '@', '(', ')', '%', '*', '?', '.' ];",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "see https://github.com/dotnet/roslyn/pull/69820",
              "createdAt": "2024-10-30T14:44:09Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static char[] InvalidTargetNameCharacters => [ '$', '@', '(', ')', '%', '*', '?', '.' ];",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "This isn't a ROS though, it's an array.",
              "createdAt": "2024-10-30T15:23:21Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static char[] InvalidTargetNameCharacters => [ '$', '@', '(', ')', '%', '*', '?', '.' ];",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "darn \ud83e\udd26",
              "createdAt": "2024-10-30T15:35:11Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static char[] InvalidTargetNameCharacters => [ '$', '@', '(', ')', '%', '*', '?', '.' ];",
              "author": {
                "login": "kasperk81"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Please keep the `XMakeElements` in the comments, so it is clearer what it is referring. ",
              "createdAt": "2024-10-30T15:46:03Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static readonly char[] InvalidTargetNameCharacters = [ '$', '@', '(', ')', '%', '*', '?', '.' ];\n \n         // Names that cannot be used as property or item names because they are reserved\n-        internal static readonly HashSet<string> ReservedItemNames = new HashSet<string>\n-        {\n-            // XMakeElements.project, \"Project\" is not reserved, because unfortunately ProjectReference items already use it as metadata name.\n-            XMakeElements.visualStudioProject,\n-            XMakeElements.target,\n-            XMakeElements.propertyGroup,\n-            XMakeElements.output,\n-            XMakeElements.itemGroup,\n-            XMakeElements.usingTask,\n-            XMakeElements.projectExtensions,\n-            XMakeElements.onError,\n-            // XMakeElements.import \"Import\" items are used by Visual Basic projects\n-            XMakeElements.importGroup,\n-            XMakeElements.choose,\n-            XMakeElements.when,\n-            XMakeElements.otherwise\n-        };\n+        internal static readonly HashSet<string> ReservedItemNames =\n+        [\n+            // project, \"Project\" is not reserved, because unfortunately ProjectReference items already use it as metadata name.",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "given the surrounding context i don't feel this is ambigious for C# devs\r\n@rainersigwald thoughts on this?",
              "createdAt": "2024-10-30T16:20:34Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static readonly char[] InvalidTargetNameCharacters = [ '$', '@', '(', ')', '%', '*', '?', '.' ];\n \n         // Names that cannot be used as property or item names because they are reserved\n-        internal static readonly HashSet<string> ReservedItemNames = new HashSet<string>\n-        {\n-            // XMakeElements.project, \"Project\" is not reserved, because unfortunately ProjectReference items already use it as metadata name.\n-            XMakeElements.visualStudioProject,\n-            XMakeElements.target,\n-            XMakeElements.propertyGroup,\n-            XMakeElements.output,\n-            XMakeElements.itemGroup,\n-            XMakeElements.usingTask,\n-            XMakeElements.projectExtensions,\n-            XMakeElements.onError,\n-            // XMakeElements.import \"Import\" items are used by Visual Basic projects\n-            XMakeElements.importGroup,\n-            XMakeElements.choose,\n-            XMakeElements.when,\n-            XMakeElements.otherwise\n-        };\n+        internal static readonly HashSet<string> ReservedItemNames =\n+        [\n+            // project, \"Project\" is not reserved, because unfortunately ProjectReference items already use it as metadata name.",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "No strong feelings on this either way.",
              "createdAt": "2024-11-05T15:19:42Z",
              "path": "src/Shared/XMakeElements.cs",
              "diffHunk": "@@ -35,25 +35,25 @@ internal static class XMakeElements\n         internal const string usingTaskBody = \"Task\";\n         internal const string sdk = \"Sdk\";\n \n-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };\n+        internal static readonly char[] InvalidTargetNameCharacters = [ '$', '@', '(', ')', '%', '*', '?', '.' ];\n \n         // Names that cannot be used as property or item names because they are reserved\n-        internal static readonly HashSet<string> ReservedItemNames = new HashSet<string>\n-        {\n-            // XMakeElements.project, \"Project\" is not reserved, because unfortunately ProjectReference items already use it as metadata name.\n-            XMakeElements.visualStudioProject,\n-            XMakeElements.target,\n-            XMakeElements.propertyGroup,\n-            XMakeElements.output,\n-            XMakeElements.itemGroup,\n-            XMakeElements.usingTask,\n-            XMakeElements.projectExtensions,\n-            XMakeElements.onError,\n-            // XMakeElements.import \"Import\" items are used by Visual Basic projects\n-            XMakeElements.importGroup,\n-            XMakeElements.choose,\n-            XMakeElements.when,\n-            XMakeElements.otherwise\n-        };\n+        internal static readonly HashSet<string> ReservedItemNames =\n+        [\n+            // project, \"Project\" is not reserved, because unfortunately ProjectReference items already use it as metadata name.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}