{
  "number": 6238,
  "title": "Handle unsupported paths in ProjectInSolution.AbsolutePath",
  "body": "Fixes #6236\r\n\r\n### Context\r\n#5950 introduced a call to `Path.GetFullPath()` to get a path that is normalized.  However, in some cases Visual Studio stores unsupported paths which will cause `Path.GetFullPath()` to throw.\r\n\r\n`Path.GetFullPath()` can also throw a `PathTooLongException` which is now handled.\r\n\r\n### Changes Made\r\nRevert to legacy code path of just calling `Path.Combine()` then do the `Path.GetFullPath()` in a `try...catch` on a best effort.\r\n\r\n### Testing\r\nRegression test added\r\n\r\n### Notes\r\nhttps://developercommunity.visualstudio.com/t/msbuild-failing-with-web-site-project-in/1359528",
  "state": "MERGED",
  "createdAt": "2021-03-10T17:28:52Z",
  "updatedAt": "2021-03-12T17:49:54Z",
  "closedAt": "2021-03-12T17:49:54Z",
  "mergedAt": "2021-03-12T17:49:54Z",
  "additions": 46,
  "deletions": 7,
  "changedFiles": 2,
  "headRefName": "fix-solutionproject-absolutepath",
  "isDraft": false,
  "author": {
    "login": "jeffkl"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "regression",
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "97a9a16aeb54a5bcd49ac47136540749563909f1",
          "message": "Handle unsupported paths in ProjectInSolution.AbsolutePath\n\n#5950 introduced a call to `Path.GetFullPath()` to get a path that is normalized.  However, in some cases Visual Studio stores unsupported paths which will cause `Path.GetFullPath()` to throw.\n\n`Path.GetFullPath()` can also throw a `PathTooLongException` which is now handled.\n\nFixes #6236",
          "committedDate": "2021-03-10T17:26:56Z",
          "author": {
            "name": "Jeff Kluge",
            "email": "jeffkl@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0fadc3839ab06792d3e0f7357ff8134a2581fbe9",
          "message": "Call Uri.TryCreate() to see if the relative path is a URI before trying to normalize the path",
          "committedDate": "2021-03-10T18:22:28Z",
          "author": {
            "name": "Jeff Kluge",
            "email": "jeffkl@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c2b041019e471a2df0c022b0cd6f44e6c510d139",
          "message": "Reduce complexity of the solution file used in the unit test",
          "committedDate": "2021-03-10T18:22:54Z",
          "author": {
            "name": "Jeff Kluge",
            "email": "jeffkl@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Copy/pasting my comment from the issue:\r\n\r\n@jeffkl looking at dates for 16.9 servicing releases. Looks like final sign off for 16.9.2 is in five days, and sign off for 16.9.3 is 4/12.\r\nI'm open to either bringing in the quick fix before 16.9.2 and then implementing the long-term solution.\r\nOr going straight for the long term solution.\r\n\r\nIf this code path really doesn't get hit much during builds (particularly web builds), I'm open to just catching the exception and leaving it at that.",
        "createdAt": "2021-03-10T17:32:34Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Whatever we decide, this should target `vs16.9` and flow back into master",
        "createdAt": "2021-03-10T17:34:34Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Wow that's interesting, on .NET Core `Path.GetFullPath()` doesn't throw, it just mangles the URL\r\n\r\n```\r\nPath.GetFullPath(@\"C:\\Users\\jeffkl\\AppData\\Local\\Temp\\srl1rctk.qyt\\http://localhost:8080\")\r\nC:\\Users\\jeffkl\\AppData\\Local\\Temp\\srl1rctk.qyt\\http:\\localhost:8080\r\n```\r\n\r\nI'll have to call `Uri.TryCreate()`...\r\n\r\n",
        "createdAt": "2021-03-10T18:21:44Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Nit: Also verify the exception was thrown.",
              "createdAt": "2021-03-10T17:36:37Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -2477,6 +2477,67 @@ public void DirectorySolutionPropsTest(string projectName, bool enable)\n             }\n         }\n \n+        /// <summary>\n+        /// Regression test for https://github.com/dotnet/msbuild/issues/6236\n+        /// </summary>\n+        [Theory]\n+        [InlineData(\"http://localhost:8080\")]\n+        [InlineData(\"a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-\")]\n+        public void AbsolutePathWorksForUnsupportedPaths(string relativePath)\n+        {\n+            string solutionFileContents =\n+                $@\"\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 16\n+VisualStudioVersion = 16.0.31025.194\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"\"{{E24C65DC-7377-472B-9ABA-BC803B73C61A}}\"\") = \"\"WebSite1\"\", \"\"{relativePath}\"\", \"\"{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}\"\"\n+\tProjectSection(WebsiteProperties) = preProject\n+\t\tUseIISExpress = \"\"true\"\"\n+\t\tTargetFrameworkMoniker = \"\".NETFramework,Version%3Dv4.0\"\"\n+\t\tDebug.AspNetCompiler.VirtualPath = \"\"/localhost_8080\"\"\n+\t\tDebug.AspNetCompiler.PhysicalPath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\t\tDebug.AspNetCompiler.TargetPath = \"\"PrecompiledWeb\\localhost_8080\\\"\"\n+\t\tDebug.AspNetCompiler.Updateable = \"\"true\"\"\n+\t\tDebug.AspNetCompiler.ForceOverwrite = \"\"true\"\"\n+\t\tDebug.AspNetCompiler.FixedNames = \"\"false\"\"\n+\t\tDebug.AspNetCompiler.Debug = \"\"True\"\"\n+\t\tRelease.AspNetCompiler.VirtualPath = \"\"/localhost_8080\"\"\n+\t\tRelease.AspNetCompiler.PhysicalPath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\t\tRelease.AspNetCompiler.TargetPath = \"\"PrecompiledWeb\\localhost_8080\\\"\"\n+\t\tRelease.AspNetCompiler.Updateable = \"\"true\"\"\n+\t\tRelease.AspNetCompiler.ForceOverwrite = \"\"true\"\"\n+\t\tRelease.AspNetCompiler.FixedNames = \"\"false\"\"\n+\t\tRelease.AspNetCompiler.Debug = \"\"False\"\"\n+\t\tSlnRelativePath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\tEndProjectSection\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|Any CPU = Debug|Any CPU\n+\t\tRelease|Any CPU = Release|Any CPU\n+\tEndGlobalSection\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Release|Any CPU.Build.0 = Debug|Any CPU\n+\tEndGlobalSection\n+\tGlobalSection(SolutionProperties) = preSolution\n+\t\tHideSolutionNode = FALSE\n+\tEndGlobalSection\n+\tGlobalSection(ExtensibilityGlobals) = postSolution\n+\t\tSolutionGuid = {{{{87CFA95B-DF37-4C4B-B629-44656ED585AB}}}}\n+\tEndGlobalSection\n+EndGlobal\";\n+\n+            SolutionFile solution = SolutionFile_Tests.ParseSolutionHelper(solutionFileContents);\n+\n+            ProjectInSolution projectInSolution = solution.ProjectsInOrder.ShouldHaveSingleItem();\n+\n+            projectInSolution.AbsolutePath.ShouldBe(Path.Combine(solution.SolutionFileDirectory, projectInSolution.RelativePath));",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I don't think I can verify the exception was thrown, only that instead of getting an absolute path we get back the result of a `Path.Combine()`",
              "createdAt": "2021-03-10T17:37:59Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -2477,6 +2477,67 @@ public void DirectorySolutionPropsTest(string projectName, bool enable)\n             }\n         }\n \n+        /// <summary>\n+        /// Regression test for https://github.com/dotnet/msbuild/issues/6236\n+        /// </summary>\n+        [Theory]\n+        [InlineData(\"http://localhost:8080\")]\n+        [InlineData(\"a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-\")]\n+        public void AbsolutePathWorksForUnsupportedPaths(string relativePath)\n+        {\n+            string solutionFileContents =\n+                $@\"\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 16\n+VisualStudioVersion = 16.0.31025.194\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"\"{{E24C65DC-7377-472B-9ABA-BC803B73C61A}}\"\") = \"\"WebSite1\"\", \"\"{relativePath}\"\", \"\"{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}\"\"\n+\tProjectSection(WebsiteProperties) = preProject\n+\t\tUseIISExpress = \"\"true\"\"\n+\t\tTargetFrameworkMoniker = \"\".NETFramework,Version%3Dv4.0\"\"\n+\t\tDebug.AspNetCompiler.VirtualPath = \"\"/localhost_8080\"\"\n+\t\tDebug.AspNetCompiler.PhysicalPath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\t\tDebug.AspNetCompiler.TargetPath = \"\"PrecompiledWeb\\localhost_8080\\\"\"\n+\t\tDebug.AspNetCompiler.Updateable = \"\"true\"\"\n+\t\tDebug.AspNetCompiler.ForceOverwrite = \"\"true\"\"\n+\t\tDebug.AspNetCompiler.FixedNames = \"\"false\"\"\n+\t\tDebug.AspNetCompiler.Debug = \"\"True\"\"\n+\t\tRelease.AspNetCompiler.VirtualPath = \"\"/localhost_8080\"\"\n+\t\tRelease.AspNetCompiler.PhysicalPath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\t\tRelease.AspNetCompiler.TargetPath = \"\"PrecompiledWeb\\localhost_8080\\\"\"\n+\t\tRelease.AspNetCompiler.Updateable = \"\"true\"\"\n+\t\tRelease.AspNetCompiler.ForceOverwrite = \"\"true\"\"\n+\t\tRelease.AspNetCompiler.FixedNames = \"\"false\"\"\n+\t\tRelease.AspNetCompiler.Debug = \"\"False\"\"\n+\t\tSlnRelativePath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\tEndProjectSection\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|Any CPU = Debug|Any CPU\n+\t\tRelease|Any CPU = Release|Any CPU\n+\tEndGlobalSection\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Release|Any CPU.Build.0 = Debug|Any CPU\n+\tEndGlobalSection\n+\tGlobalSection(SolutionProperties) = preSolution\n+\t\tHideSolutionNode = FALSE\n+\tEndGlobalSection\n+\tGlobalSection(ExtensibilityGlobals) = postSolution\n+\t\tSolutionGuid = {{{{87CFA95B-DF37-4C4B-B629-44656ED585AB}}}}\n+\tEndGlobalSection\n+EndGlobal\";\n+\n+            SolutionFile solution = SolutionFile_Tests.ParseSolutionHelper(solutionFileContents);\n+\n+            ProjectInSolution projectInSolution = solution.ProjectsInOrder.ShouldHaveSingleItem();\n+\n+            projectInSolution.AbsolutePath.ShouldBe(Path.Combine(solution.SolutionFileDirectory, projectInSolution.RelativePath));",
              "author": {
                "login": "jeffkl"
              }
            },
            {
              "body": "Checking the absolute path is effectively the same thing so I'm okay with that.",
              "createdAt": "2021-03-10T17:41:26Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -2477,6 +2477,67 @@ public void DirectorySolutionPropsTest(string projectName, bool enable)\n             }\n         }\n \n+        /// <summary>\n+        /// Regression test for https://github.com/dotnet/msbuild/issues/6236\n+        /// </summary>\n+        [Theory]\n+        [InlineData(\"http://localhost:8080\")]\n+        [InlineData(\"a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-\")]\n+        public void AbsolutePathWorksForUnsupportedPaths(string relativePath)\n+        {\n+            string solutionFileContents =\n+                $@\"\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 16\n+VisualStudioVersion = 16.0.31025.194\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"\"{{E24C65DC-7377-472B-9ABA-BC803B73C61A}}\"\") = \"\"WebSite1\"\", \"\"{relativePath}\"\", \"\"{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}\"\"\n+\tProjectSection(WebsiteProperties) = preProject\n+\t\tUseIISExpress = \"\"true\"\"\n+\t\tTargetFrameworkMoniker = \"\".NETFramework,Version%3Dv4.0\"\"\n+\t\tDebug.AspNetCompiler.VirtualPath = \"\"/localhost_8080\"\"\n+\t\tDebug.AspNetCompiler.PhysicalPath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\t\tDebug.AspNetCompiler.TargetPath = \"\"PrecompiledWeb\\localhost_8080\\\"\"\n+\t\tDebug.AspNetCompiler.Updateable = \"\"true\"\"\n+\t\tDebug.AspNetCompiler.ForceOverwrite = \"\"true\"\"\n+\t\tDebug.AspNetCompiler.FixedNames = \"\"false\"\"\n+\t\tDebug.AspNetCompiler.Debug = \"\"True\"\"\n+\t\tRelease.AspNetCompiler.VirtualPath = \"\"/localhost_8080\"\"\n+\t\tRelease.AspNetCompiler.PhysicalPath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\t\tRelease.AspNetCompiler.TargetPath = \"\"PrecompiledWeb\\localhost_8080\\\"\"\n+\t\tRelease.AspNetCompiler.Updateable = \"\"true\"\"\n+\t\tRelease.AspNetCompiler.ForceOverwrite = \"\"true\"\"\n+\t\tRelease.AspNetCompiler.FixedNames = \"\"false\"\"\n+\t\tRelease.AspNetCompiler.Debug = \"\"False\"\"\n+\t\tSlnRelativePath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\tEndProjectSection\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|Any CPU = Debug|Any CPU\n+\t\tRelease|Any CPU = Release|Any CPU\n+\tEndGlobalSection\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Release|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}.Release|Any CPU.Build.0 = Debug|Any CPU\n+\tEndGlobalSection\n+\tGlobalSection(SolutionProperties) = preSolution\n+\t\tHideSolutionNode = FALSE\n+\tEndGlobalSection\n+\tGlobalSection(ExtensibilityGlobals) = postSolution\n+\t\tSolutionGuid = {{{{87CFA95B-DF37-4C4B-B629-44656ED585AB}}}}\n+\tEndGlobalSection\n+EndGlobal\";\n+\n+            SolutionFile solution = SolutionFile_Tests.ParseSolutionHelper(solutionFileContents);\n+\n+            ProjectInSolution projectInSolution = solution.ProjectsInOrder.ShouldHaveSingleItem();\n+\n+            projectInSolution.AbsolutePath.ShouldBe(Path.Combine(solution.SolutionFileDirectory, projectInSolution.RelativePath));",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Could we add a simpler path normalization here like (look for `\\..\\`) -> remove along with the prior path segment?",
              "createdAt": "2021-03-10T17:43:59Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);\n+\n+                    try\n+                    {\n #if NETFRAMEWORK && !MONO\n-                    _absolutePath = Path.GetFullPath(Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath));\n+                        _absolutePath = Path.GetFullPath(_absolutePath);\n #else\n-                    _absolutePath = FileUtilities.NormalizePath(Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath));\n+                        _absolutePath = FileUtilities.NormalizePath(_absolutePath);\n #endif\n+                    }\n+                    catch (Exception)\n+                    {\n+                        // The call to GetFullPath can throw if the relative path is a URL or the paths are too long for the current file system",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I'd hate to get the logic wrong, I think the new code is pretty good to handle the situation more correctly.",
              "createdAt": "2021-03-10T21:26:51Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);\n+\n+                    try\n+                    {\n #if NETFRAMEWORK && !MONO\n-                    _absolutePath = Path.GetFullPath(Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath));\n+                        _absolutePath = Path.GetFullPath(_absolutePath);\n #else\n-                    _absolutePath = FileUtilities.NormalizePath(Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath));\n+                        _absolutePath = FileUtilities.NormalizePath(_absolutePath);\n #endif\n+                    }\n+                    catch (Exception)\n+                    {\n+                        // The call to GetFullPath can throw if the relative path is a URL or the paths are too long for the current file system",
              "author": {
                "login": "jeffkl"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Doesn't Path.Combine also throw an exception with InvalidPathNameChars?",
              "createdAt": "2021-03-10T17:50:39Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Fortunately no, which is why it never threw before.  `Path.Combine()` only glues strings together separated by the directory separator. ",
              "createdAt": "2021-03-10T17:56:00Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);",
              "author": {
                "login": "jeffkl"
              }
            },
            {
              "body": "We should update our docs, then:\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.io.path.combine?view=net-5.0",
              "createdAt": "2021-03-10T18:01:48Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "The docs say it only throws an `ArgumentException` and `ArgumentNullException` already, which is correct right?",
              "createdAt": "2021-03-10T18:24:55Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);",
              "author": {
                "login": "jeffkl"
              }
            },
            {
              "body": "Argument exception for:\r\n\"path1 or path2 contains one or more of the invalid characters defined in GetInvalidPathChars().\" That doesn't seem to be true.",
              "createdAt": "2021-03-10T18:29:00Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Ah sorry I missed that.  That's very interesting, perhaps the problem is that `Path.GetFullPath()` is particularly mad about the `:` in the URL not addressing a drive letter?\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.io.path.getfullpath\r\n> NotSupportedException\r\npath contains a colon (\":\") that is not part of a volume identifier (for example, \"c:\\\").\r\n\r\nAlthough the slashes and colons in a URL are not valid file or path characters so `Path.Combine()` should be throwing?\r\nI don't see any actual code in `Path.Combine()` to throw: https://source.dot.net/#System.Private.CoreLib/Path.cs,2d7263f86a526264\r\n\r\nThe previous code path always called `Path.Combine()` so we at least know that's safe.  So strange!",
              "createdAt": "2021-03-10T18:39:12Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);",
              "author": {
                "login": "jeffkl"
              }
            },
            {
              "body": "> Ah sorry I missed that. That's very interesting, perhaps the problem is that `Path.GetFullPath()` is particularly mad about the `:` in the URL not addressing a drive letter?\r\n> \r\n> https://docs.microsoft.com/en-us/dotnet/api/system.io.path.getfullpath\r\n> \r\n> > NotSupportedException\r\n> > path contains a colon (\":\") that is not part of a volume identifier (for example, \"c:\").\r\n> \r\n\r\nSounds feasible. I didn't look too carefully at error conditions for Path.GetFullPath.\r\n\r\n> Although the slashes and colons in a URL are not valid file or path characters so `Path.Combine()` should be throwing?\r\n> I don't see any actual code in `Path.Combine()` to throw: https://source.dot.net/#System.Private.CoreLib/Path.cs,2d7263f86a526264\r\n> \r\n> The previous code path always called `Path.Combine()` so we at least know that's safe. So strange!\r\n\r\nI looked up what exactly counts as \"invalid,\" and the only one that I even know how to type was `|`. On the other hand, I tried putting that into a Path.Combine call, and it didn't have a problem with it, so I filed a bug on the docs team. Maybe that used to be true in like .NET Framework 1.0 or something, and they never changed the docs? Don't know.\r\n",
              "createdAt": "2021-03-10T21:33:43Z",
              "path": "src/Build/Construction/Solution/ProjectInSolution.cs",
              "diffHunk": "@@ -168,11 +168,21 @@ public string AbsolutePath\n             {\n                 if (_absolutePath == null)\n                 {\n+                    _absolutePath = Path.Combine(ParentSolution.SolutionFileDirectory, _relativePath);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "tiny nit:\r\nladipro pointed out that my sln could be simplified; could this one be, too?",
              "createdAt": "2021-03-10T17:51:30Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -2477,6 +2477,67 @@ public void DirectorySolutionPropsTest(string projectName, bool enable)\n             }\n         }\n \n+        /// <summary>\n+        /// Regression test for https://github.com/dotnet/msbuild/issues/6236\n+        /// </summary>\n+        [Theory]\n+        [InlineData(\"http://localhost:8080\")]\n+        [InlineData(\"a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-a-really-long-string-\")]\n+        public void AbsolutePathWorksForUnsupportedPaths(string relativePath)\n+        {\n+            string solutionFileContents =\n+                $@\"\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 16\n+VisualStudioVersion = 16.0.31025.194\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"\"{{E24C65DC-7377-472B-9ABA-BC803B73C61A}}\"\") = \"\"WebSite1\"\", \"\"{relativePath}\"\", \"\"{{{{96E0707C-2E9C-4704-946F-FA583147737F}}}}\"\"\n+\tProjectSection(WebsiteProperties) = preProject\n+\t\tUseIISExpress = \"\"true\"\"\n+\t\tTargetFrameworkMoniker = \"\".NETFramework,Version%3Dv4.0\"\"\n+\t\tDebug.AspNetCompiler.VirtualPath = \"\"/localhost_8080\"\"\n+\t\tDebug.AspNetCompiler.PhysicalPath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\t\tDebug.AspNetCompiler.TargetPath = \"\"PrecompiledWeb\\localhost_8080\\\"\"\n+\t\tDebug.AspNetCompiler.Updateable = \"\"true\"\"\n+\t\tDebug.AspNetCompiler.ForceOverwrite = \"\"true\"\"\n+\t\tDebug.AspNetCompiler.FixedNames = \"\"false\"\"\n+\t\tDebug.AspNetCompiler.Debug = \"\"True\"\"\n+\t\tRelease.AspNetCompiler.VirtualPath = \"\"/localhost_8080\"\"\n+\t\tRelease.AspNetCompiler.PhysicalPath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\t\tRelease.AspNetCompiler.TargetPath = \"\"PrecompiledWeb\\localhost_8080\\\"\"\n+\t\tRelease.AspNetCompiler.Updateable = \"\"true\"\"\n+\t\tRelease.AspNetCompiler.ForceOverwrite = \"\"true\"\"\n+\t\tRelease.AspNetCompiler.FixedNames = \"\"false\"\"\n+\t\tRelease.AspNetCompiler.Debug = \"\"False\"\"\n+\t\tSlnRelativePath = \"\"C:\\Users\\UserA\\Documents\\My Web Sites\\WebSite1\\\"\"\n+\tEndProjectSection\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|Any CPU = Debug|Any CPU\n+\t\tRelease|Any CPU = Release|Any CPU",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}