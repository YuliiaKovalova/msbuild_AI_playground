{
  "number": 6006,
  "title": "Warnings-as-errors fail BuildSubmission results",
  "body": "Fix #5837 by moving the promotion of warnings to build failures to the `BuildSubmission` level instead of doing it in `BuildManager` (where the result change happened at `EndBuild()` time and thus wasn't visible when checking the result after the submission completed:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/c70d520b5b8df990f651f0d00cd186a68cb277c6/src/MSBuild/XMake.cs#L1256-L1268",
  "state": "MERGED",
  "createdAt": "2021-01-04T23:32:24Z",
  "updatedAt": "2021-08-31T15:27:25Z",
  "closedAt": "2021-01-07T21:34:30Z",
  "mergedAt": "2021-01-07T21:34:30Z",
  "additions": 27,
  "deletions": 23,
  "changedFiles": 3,
  "headRefName": "warnaserror-exitcode",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1f06ed38ed15286ef73f8ffdfd56bc3d4b6b6443",
          "message": "Regression test for #5837",
          "committedDate": "2021-01-04T23:30:53Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "88dd1913358ff1393fd750101dd08e9631250a24",
          "message": "Warnings-as-errors fail BuildSubmission results\n\nFixes #5837 by using the approach used in BuildManager to check whether\nwarnings-as-errors were emitted to convert the result to a failure at\nthe submission level, because MSBuild was promoting it to failure too\nlate (in time to log it but not to fail the msbuild invocation.",
          "committedDate": "2021-01-04T23:30:53Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a6fd7150beb271e5b53319149f5338084bac7717",
          "message": "fixup! Regression test for #5837",
          "committedDate": "2021-01-05T16:37:57Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2e3a4c47ed258d2eef9c0c3f02233c77cfb3c7ad",
          "message": "Remove SetOverallResultIfWarningsAsErrors\n\nIt's handled at the submission level now.",
          "committedDate": "2021-01-05T16:58:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fdee26b3c9210d50ff92775d75ffd35f01a6ba5b",
          "message": "Don't capture unnecessary string\n\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2021-01-07T17:41:40Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "rainer@sigwald.org"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Hi, which dotnet cli version this should be taken into effect?\r\nThanks!",
        "createdAt": "2021-08-31T13:11:14Z",
        "author": {
          "login": "rajeemm"
        }
      },
      {
        "body": "@roaladje .NET SDK 5.0.200 and higher should have it.",
        "createdAt": "2021-08-31T13:53:39Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> @roaladje .NET SDK 5.0.200 and higher should have it.\r\n\r\nThanks! works!",
        "createdAt": "2021-08-31T15:27:25Z",
        "author": {
          "login": "rajeemm"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n            RunnerUtilities.ExecMSBuild($\"\\\"{testProject.ProjectFile}\\\" -warnaserror\", out bool success, _output);\r\n```",
              "createdAt": "2021-01-07T17:02:10Z",
              "path": "src/MSBuild.UnitTests/XMake_Tests.cs",
              "diffHunk": "@@ -2215,6 +2215,26 @@ public void BinaryLogContainsImportedFiles()\n             }\n         }\n \n+        [Fact]\n+        public void EndToEndWarnAsErrors()\n+        {\n+            using TestEnvironment testEnvironment = UnitTests.TestEnvironment.Create();\n+\n+            string projectContents = ObjectModelHelpers.CleanupFileContents(@\"<Project>\n+\n+  <Target Name=\"\"IssueWarning\"\">\n+    <Warning Text=\"\"Warning!\"\" />\n+  </Target>\n+  \n+</Project>\");\n+\n+            TransientTestProjectWithFiles testProject = testEnvironment.CreateTestProjectWithFiles(projectContents);\n+\n+            string output = RunnerUtilities.ExecMSBuild($\"\\\"{testProject.ProjectFile}\\\" -warnaserror\", out bool success, _output);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Check for understanding:\r\nThe build is \"completed\" only after _completionEvent is set, so this is called before any build displays whether it has been completed. _completionInvoked is initially set to 0, so if the build has completed, checked via line 196, then it checks if we already knew the build was completed with the Interlocked.Exchange check, and if we hadn't already done completion-related things, we trigger them by setting _completionEvent. This check to see if we had logged errors without failing comes immediately before that, so before any BuildSubmission can be marked complete, it has to check whether it has logged any errors (or warnings converted to errors), hence fixing the bug. Is that right?",
              "createdAt": "2021-01-07T17:14:25Z",
              "path": "src/Build/BackEnd/BuildManager/BuildSubmission.cs",
              "diffHunk": "@@ -198,6 +198,13 @@ private void CheckForCompletion()\n                 bool hasCompleted = (Interlocked.Exchange(ref _completionInvoked, 1) == 1);\n                 if (!hasCompleted)\n                 {\n+                    // Did this submission have warnings elevated to errors? If so, mark it as\n+                    // failed even though it succeeded (with warnings--but they're errors).\n+                    if (((IBuildComponentHost)BuildManager).LoggingService.HasBuildSubmissionLoggedErrors(BuildResult.SubmissionId))",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "To be a bit pedantic, you say \"build\" several times when it would be more correct to say \"BuildSubmission\". You can have multiple submissions in a single Begin/EndBuild pair, and that's done in practice in, e.g., the VS solution build--so that all of the different projects share project state across a VS build operation, but have their own Submissions (and so the project system can know when each project individually finishes and schedule the ones that depend on it).",
              "createdAt": "2021-01-07T20:29:44Z",
              "path": "src/Build/BackEnd/BuildManager/BuildSubmission.cs",
              "diffHunk": "@@ -198,6 +198,13 @@ private void CheckForCompletion()\n                 bool hasCompleted = (Interlocked.Exchange(ref _completionInvoked, 1) == 1);\n                 if (!hasCompleted)\n                 {\n+                    // Did this submission have warnings elevated to errors? If so, mark it as\n+                    // failed even though it succeeded (with warnings--but they're errors).\n+                    if (((IBuildComponentHost)BuildManager).LoggingService.HasBuildSubmissionLoggedErrors(BuildResult.SubmissionId))",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}