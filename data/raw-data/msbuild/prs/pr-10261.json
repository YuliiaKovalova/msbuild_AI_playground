{
  "number": 10261,
  "title": "Add a notification about BuildCheck enabled for the current build",
  "body": "Fixes #[10135](https://github.com/dotnet/msbuild/issues/10135)\r\n\r\n### Context\r\nThe users have to be notified if BuildCheck got invoked during the build.\r\n\r\n\r\n### Changes Made\r\nThe message got logged once the logger service is available and custom analyzers are defiled:\r\n![image](https://github.com/dotnet/msbuild/assets/95473390/3a105793-5966-4364-8153-14c84f52b2e1)\r\n",
  "state": "MERGED",
  "createdAt": "2024-06-18T19:49:24Z",
  "updatedAt": "2024-07-01T18:15:32Z",
  "closedAt": "2024-07-01T18:15:32Z",
  "mergedAt": "2024-07-01T18:15:32Z",
  "additions": 295,
  "deletions": 146,
  "changedFiles": 19,
  "headRefName": "dev/ykovalova/add_buildCheckMessage",
  "isDraft": false,
  "author": {
    "login": "YuliiaKovalova"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "082590237ea98506e5a6c09cbf025fdee5fe26e7",
          "message": "add a notification about BuildCheck enabled for the current build",
          "committedDate": "2024-06-18T19:39:21Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f8133bf593c4621e0af358c81cbbbea86c9f8077",
          "message": "add a separate log message for package registration",
          "committedDate": "2024-06-19T13:29:02Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e53e93edcb6fbe07dd9df124f3c4ed4c054dbb22",
          "message": "update the tests",
          "committedDate": "2024-06-19T17:06:22Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3b749bbcd1127efe2da5cd3af73e0aebc4ed61a8",
          "message": "merge from main",
          "committedDate": "2024-07-01T09:51:22Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7e2a755c2d81c6780901c134ab10d40c31c491a3",
          "message": "fix",
          "committedDate": "2024-07-01T10:33:28Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "858e0d4eb25941f9e24405b8083fe9cebb89704a",
          "message": "fix",
          "committedDate": "2024-07-01T10:38:12Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1a8346dc77af2a637499bbfc55bee6812709b459",
          "message": "return the missed message",
          "committedDate": "2024-07-01T12:53:36Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ff10b3a22800f5dea4296b945a5854ed87baf396",
          "message": "Merge branch 'dev/ykovalova/add_buildCheckMessage' of https://github.com/YuliiaKovalova/msbuild into dev/ykovalova/add_buildCheckMessage",
          "committedDate": "2024-07-01T13:05:39Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f489f0d9607dd9c69aa2fc43d907a1f08b19f4d5",
          "message": "fix compilation error",
          "committedDate": "2024-07-01T16:49:46Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "The original requirement from the security review was to be able to locate all the check names (and respective package names that contained them) that were enabled in the build, despite the checks might not have produced any outputs.\r\n\r\nSample simplisitc possible output:\r\n\r\n```\r\nThe BuildCheck is enabled for this build. Following Checks were enabled on at least one of the projects:\r\n| name | source |\r\n| SharedOutputPathsCheck | builtin |\r\n| ContosoProjectStructureCheck | Contoso.BuildChecks 0.0.2 |\r\n```",
        "createdAt": "2024-06-18T20:36:50Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> The original requirement from the security review was to be able to locate all the check names (and respective package names that contained them) that were enabled in the build, despite the checks might not have produced any outputs.\r\n> \r\n> Sample simplisitc possible output:\r\n> \r\n> ```\r\n> The BuildCheck is enabled for this build. Following Checks were enabled on at least one of the projects:\r\n> | name | source |\r\n> | SharedOutputPathsCheck | builtin |\r\n> | ContosoProjectStructureCheck | Contoso.BuildChecks 0.0.2 |\r\n> ```\r\n\r\ndone, in a different way.",
        "createdAt": "2024-06-19T15:16:28Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Intentional?",
              "createdAt": "2024-06-19T13:34:14Z",
              "path": "NuGet.config",
              "diffHunk": "@@ -9,6 +9,7 @@\n     <add key=\"dotnet8\" value=\"https://dnceng.pkgs.visualstudio.com/public/_packaging/dotnet8/nuget/v3/index.json\" />\n     <add key=\"dotnet8-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8-transport/nuget/v3/index.json\" />\n     <add key=\"BuildXL\" value=\"https://pkgs.dev.azure.com/ms/BuildXL/_packaging/BuildXL/nuget/v3/index.json\" />\n+    <add key=\"local\" value=\"C:\\mbuild\\ykovalova_msbuild\\msbuild\\artifacts\\bin\\Microsoft.Build.BuildCheck.UnitTests\\CustomAnalyzers\" />",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Are we able to get the package name as well?",
              "createdAt": "2024-06-19T13:39:03Z",
              "path": "src/Build/BuildCheck/Acquisition/BuildCheckAcquisitionModule.cs",
              "diffHunk": "@@ -52,7 +52,8 @@ public List<BuildAnalyzerFactory> CreateBuildAnalyzerFactories(AnalyzerAcquisiti\n \n             if (availableTypes.Count != analyzerTypes.Count)\n             {\n-                availableTypes.Except(analyzerTypes).ToList().ForEach(t => _loggingService.LogComment(buildEventContext, MessageImportance.Normal, \"CustomAnalyzerBaseTypeNotAssignable\", t.Name, t.Assembly));\n+                availableTypes.Except(analyzerTypes).ToList()\n+                    .ForEach(t => _loggingService.LogComment(buildEventContext, MessageImportance.Normal, \"CustomAnalyzerBaseTypeNotAssignable\", t.Name, t.Assembly));",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "we operate with dlls directly. I can have a location reported.",
              "createdAt": "2024-06-19T15:07:05Z",
              "path": "src/Build/BuildCheck/Acquisition/BuildCheckAcquisitionModule.cs",
              "diffHunk": "@@ -52,7 +52,8 @@ public List<BuildAnalyzerFactory> CreateBuildAnalyzerFactories(AnalyzerAcquisiti\n \n             if (availableTypes.Count != analyzerTypes.Count)\n             {\n-                availableTypes.Except(analyzerTypes).ToList().ForEach(t => _loggingService.LogComment(buildEventContext, MessageImportance.Normal, \"CustomAnalyzerBaseTypeNotAssignable\", t.Name, t.Assembly));\n+                availableTypes.Except(analyzerTypes).ToList()\n+                    .ForEach(t => _loggingService.LogComment(buildEventContext, MessageImportance.Normal, \"CustomAnalyzerBaseTypeNotAssignable\", t.Name, t.Assembly));",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "it's already there\r\n![image](https://github.com/dotnet/msbuild/assets/95473390/b35d35db-25b6-47e4-b0e7-380fb20be161)\r\n",
              "createdAt": "2024-06-19T15:16:04Z",
              "path": "src/Build/BuildCheck/Acquisition/BuildCheckAcquisitionModule.cs",
              "diffHunk": "@@ -52,7 +52,8 @@ public List<BuildAnalyzerFactory> CreateBuildAnalyzerFactories(AnalyzerAcquisiti\n \n             if (availableTypes.Count != analyzerTypes.Count)\n             {\n-                availableTypes.Except(analyzerTypes).ToList().ForEach(t => _loggingService.LogComment(buildEventContext, MessageImportance.Normal, \"CustomAnalyzerBaseTypeNotAssignable\", t.Name, t.Assembly));\n+                availableTypes.Except(analyzerTypes).ToList()\n+                    .ForEach(t => _loggingService.LogComment(buildEventContext, MessageImportance.Normal, \"CustomAnalyzerBaseTypeNotAssignable\", t.Name, t.Assembly));",
              "author": {
                "login": "YuliiaKovalova"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't see where this is used. Probably was left after changes?",
              "createdAt": "2024-07-01T09:20:53Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -2130,6 +2130,12 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>\n   <data name=\"ProjectImportsCollectorFileIOFail\" xml:space=\"preserve\">\n     <value>An exception occurred when adding the file '{0}', Exception: '{1}'</value>\n   </data>\n+  <data name=\"BuildCheckEnabled\" xml:space=\"preserve\">\n+    <value>The BuildCheck is enabled for this build.</value>\n+  </data>\n+  <data name=\"CustomAnalyzerRegistered\" xml:space=\"preserve\">",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "@JanKrivanek, @YuliiaKovalova we should probably do same for replaying binlog, right? If yes, we can do this in a different PR.",
              "createdAt": "2024-07-01T11:48:10Z",
              "path": "src/Build/BackEnd/BuildManager/BuildManager.cs",
              "diffHunk": "@@ -577,6 +577,12 @@ public void BeginBuild(BuildParameters parameters)\n                 // Log deferred messages and response files\n                 LogDeferredMessages(loggingService, _deferredBuildMessages);\n \n+                // Log if BuildCheck is enabled\n+                if (_buildParameters.IsBuildCheckEnabled)\n+                {\n+                    loggingService.LogComment(buildEventContext: BuildEventContext.Invalid, MessageImportance.Normal, \"BuildCheckEnabled\");",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "Good point - it's good to have a feature parity.\r\n\r\nIt's not a high-pri though - as this was requested (for the security reasons) to inform about possible pluggability logic engagging as a part of the build process.",
              "createdAt": "2024-07-01T11:51:18Z",
              "path": "src/Build/BackEnd/BuildManager/BuildManager.cs",
              "diffHunk": "@@ -577,6 +577,12 @@ public void BeginBuild(BuildParameters parameters)\n                 // Log deferred messages and response files\n                 LogDeferredMessages(loggingService, _deferredBuildMessages);\n \n+                // Log if BuildCheck is enabled\n+                if (_buildParameters.IsBuildCheckEnabled)\n+                {\n+                    loggingService.LogComment(buildEventContext: BuildEventContext.Invalid, MessageImportance.Normal, \"BuildCheckEnabled\");",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}