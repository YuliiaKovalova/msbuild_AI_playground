{
  "number": 7965,
  "title": "Eliminate project string cache under a change wave.",
  "body": "Fixes #5444\r\n\r\nContext\r\nThe `ProjectStringCache` does seem to have a memory leak problem when used from VS.\r\nThe reason of the leak is that it clears memory on the event from `ProjectRootElementCache`, which is raised when project is moved out of the strong cache. The unproper use of `ProjectRootElementCache` might lead to `ProjectStringCache` not freeing memory.\r\n\r\nAlso, there were doubts if this cache adds anything at all to performance. Experiments does not show significant difference for the two cases.\r\n\r\nWe decided to remove `ProjectStringCache` under a change wave.\r\n\r\nChanges Made\r\n- Put usage of `ProjectStringCache` under change waves below 17.6.\r\n\r\nTesting\r\nUnit tests\r\nExperimental insertion\r\n\r\nNotes\r\n- The previous PR (that eliminates the `ProjectStringCache` altogether with the related code): #7952.\r\n- Another option is to use string interning from `StringTools` instead.",
  "state": "MERGED",
  "createdAt": "2022-09-13T12:58:57Z",
  "updatedAt": "2022-10-17T16:17:40Z",
  "closedAt": "2022-10-17T16:17:40Z",
  "mergedAt": "2022-10-17T16:17:40Z",
  "additions": 318,
  "deletions": 237,
  "changedFiles": 5,
  "headRefName": "put-project-string-cache-under-changewave",
  "isDraft": false,
  "author": {
    "login": "AR-May"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance",
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a82ef5e1d5817f609f0d7f79e17fcbbcac38e83f",
          "message": "Do not use project string cache.",
          "committedDate": "2022-09-13T12:42:40Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f2de418af106b8d6874e272b1730c555259f1c54",
          "message": "Fix tests.",
          "committedDate": "2022-09-13T14:56:08Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e9e1bcfd6521f37893418323f74a36cd13464d24",
          "message": "Move the check.",
          "committedDate": "2022-09-13T15:11:59Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0af30fcced819a48e7fea55107c6141fc5933a5a",
          "message": "Remove unnecesary using.",
          "committedDate": "2022-09-14T15:24:18Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8bd69e3a4b59b2a1e54ca3235ea693898510a2eb",
          "message": "Fix wording.\n\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2022-09-21T15:52:49Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1ee3436236473cca2fc5f01a2887ebf7d4f32784",
          "message": "Move code from Wave17_4 to Wave17_6.",
          "committedDate": "2022-10-14T11:59:35Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "29467b035ff5f21aec1abc4280b0574d6181c54e",
          "message": "Add this PR to ChangeWaves list in documentation.",
          "committedDate": "2022-10-14T12:11:02Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Would it be cleaner to put this check in the cache rather than all its callers?",
        "createdAt": "2022-09-13T14:41:28Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Ah, yes, nice idea, I will move the check.",
        "createdAt": "2022-09-13T15:02:39Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "About avoiding taking the lock. I wonder what happens if somebody would mix calls with and without disabling the change wave 17.4. It then may lead to errors and memory leaks. If we should care about that case, I would prefer to keep it as it is. I do not expect Clear to be called too often, since the capacity of strong ProjectRootElementCache  is bigger now and there are not so many rotations in it, which triggers the clear.",
        "createdAt": "2022-09-14T15:31:50Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "> About avoiding taking the lock. I wonder what happens if somebody would mix calls with and without disabling the change wave 17.4. It then may lead to errors and memory leaks. If we should care about that case, I would prefer to keep it as it is. I do not expect Clear to be called too often, since the capacity of strong ProjectRootElementCache is bigger now and there are not so many rotations in it, which triggers the clear.\r\n\r\nI _think_ it would be ok. First, I think most people set it via environment variable, so you'll often either run builds with it enabled or disabled but not mixed. Second, getting an early out for clear would mean the disabled version would just not touch the cache the whole time, and the enabled version would touch then eventually clear the cache by itself, so they shouldn't interfere with each other. I don't think it matters too much, though.",
        "createdAt": "2022-09-14T19:00:11Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "I changed the ChangeWave version in this PR from 17.4 to 17.6, since this PR did not get into 17.4.",
        "createdAt": "2022-10-14T12:28:53Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "It would be nice to have an example of what this test should look like after your change; otherwise, when removing the change wave, the default would be to eliminate this test entirely.",
              "createdAt": "2022-09-13T17:40:38Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectRootElement_Tests.cs",
              "diffHunk": "@@ -1853,6 +1854,10 @@ public void ReloadCanOverwriteUnsavedChanges()\n         public void ReloadDoesNotLeakCachedXmlDocuments()\n         {\n             using var env = TestEnvironment.Create();\n+            ChangeWaves.ResetStateForTests();",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Same for other tests",
              "createdAt": "2022-09-13T17:41:14Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectRootElement_Tests.cs",
              "diffHunk": "@@ -1853,6 +1854,10 @@ public void ReloadCanOverwriteUnsavedChanges()\n         public void ReloadDoesNotLeakCachedXmlDocuments()\n         {\n             using var env = TestEnvironment.Create();\n+            ChangeWaves.ResetStateForTests();",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": " It is ok that this test should be deleted entirely. Its goal is to check for a memory leak in ProjectStringCache, which we remove. In case of doubts, there is an example how to eliminate the whole cache with the related code in my previous PR and I gave a link to it in the code.",
              "createdAt": "2022-09-14T08:46:40Z",
              "path": "src/Build.OM.UnitTests/Construction/ProjectRootElement_Tests.cs",
              "diffHunk": "@@ -1853,6 +1854,10 @@ public void ReloadCanOverwriteUnsavedChanges()\n         public void ReloadDoesNotLeakCachedXmlDocuments()\n         {\n             using var env = TestEnvironment.Create();\n+            ChangeWaves.ResetStateForTests();",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n            // Note: When ready to remove the ChangeWaves under 17.4, please delete this entire class and all references to it. (See the PR https://github.com/dotnet/msbuild/pull/7952).\r\n```\r\n\r\nWe can also delete unused methods here now. Looks like there are no references to Count or DocumentCount, for instance.",
              "createdAt": "2022-09-13T17:43:47Z",
              "path": "src/Build/Evaluation/ProjectStringCache.cs",
              "diffHunk": "@@ -84,6 +85,13 @@ internal int DocumentCount\n         /// </summary>\n         public string Add(string key, XmlDocument document)\n         {\n+            // Remove string interning in ChangeWave 17.4\n+            // Note: When ready to remove the ChangeWaves under 17.4, please remove all related and no more used code (see the PR https://github.com/dotnet/msbuild/pull/7952).",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I thought about not having references in some places of the code, I also noticed that. No, that's for tests and it is used via Reflection, so it is not yet dead code.",
              "createdAt": "2022-09-14T09:02:23Z",
              "path": "src/Build/Evaluation/ProjectStringCache.cs",
              "diffHunk": "@@ -84,6 +85,13 @@ internal int DocumentCount\n         /// </summary>\n         public string Add(string key, XmlDocument document)\n         {\n+            // Remove string interning in ChangeWave 17.4\n+            // Note: When ready to remove the ChangeWaves under 17.4, please remove all related and no more used code (see the PR https://github.com/dotnet/msbuild/pull/7952).",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Necessary?",
              "createdAt": "2022-09-14T13:32:16Z",
              "path": "src/Build/ElementLocation/XmlDocumentWithLocation.cs",
              "diffHunk": "@@ -4,6 +4,7 @@\n using System;\n using System.IO;\n using System.Xml;\n+using Microsoft.Build.Framework;",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Yes, that is for change wave check.",
              "createdAt": "2022-09-14T14:40:57Z",
              "path": "src/Build/ElementLocation/XmlDocumentWithLocation.cs",
              "diffHunk": "@@ -4,6 +4,7 @@\n using System;\n using System.IO;\n using System.Xml;\n+using Microsoft.Build.Framework;",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Ah, wait, I moved the code, no more necessary!",
              "createdAt": "2022-09-14T15:05:06Z",
              "path": "src/Build/ElementLocation/XmlDocumentWithLocation.cs",
              "diffHunk": "@@ -4,6 +4,7 @@\n using System;\n using System.IO;\n using System.Xml;\n+using Microsoft.Build.Framework;",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Since this is already added, it's fine, but since you need this for all tests in this class it might have been easier to use class-level [shared context](https://xunit.net/docs/shared-context) to set/restore the changewave.",
              "createdAt": "2022-09-14T13:34:33Z",
              "path": "src/Build.UnitTests/Evaluation/ProjectStringCache_Tests.cs",
              "diffHunk": "@@ -27,46 +28,53 @@ public class ProjectStringCache_Tests\n         [Trait(\"Category\", \"netcore-linux-failing\")]\n         public void ContentIsSameAcrossInstances()\n         {\n-            string content = ObjectModelHelpers.CleanupFileContents(@\"\n+            using (TestEnvironment env = TestEnvironment.Create())",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}