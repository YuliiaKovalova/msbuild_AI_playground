{
  "number": 9803,
  "title": "Test for eventsource logs",
  "body": "Related #9793\r\n\r\n### Context\r\nIn case there are logical changes in usage of eventsource logs which is one of the logging part of the application the coverage by tests of the changed code is missing.\r\nIn order to cover this part with minimum testing against braking by accident adding the eventListener for the \"Microsoft-Build\" event source with an example test. \r\n\r\nEventSourceTestHelper will subscribe to the events from \"Microsoft-Build\". \r\nwill save the events in-memory store and once GetEvents is called, the in-momory store cleared. \r\n\r\n### Testing\r\nTesting functionality added and test using newly introduced class\r\n",
  "state": "MERGED",
  "createdAt": "2024-02-29T09:37:06Z",
  "updatedAt": "2024-06-14T10:04:33Z",
  "closedAt": "2024-03-04T15:13:28Z",
  "mergedAt": "2024-03-04T15:13:28Z",
  "additions": 101,
  "deletions": 0,
  "changedFiles": 2,
  "headRefName": "dev/f-alizada/exp/eventsource-test",
  "isDraft": false,
  "author": {
    "login": "f-alizada"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "f-alizada"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "49027748fc8a97f46c53dec1ca694a28084060ce",
          "message": "Add EventSourceTesthelper for testing purposes",
          "committedDate": "2024-02-28T13:52:55Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "db9d194c92243f8199e2c2ecc6896139ce25678c",
          "message": "Add test for event source",
          "committedDate": "2024-02-29T09:27:07Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "471edfb6f6ce8a73e7e7e16b2b244370f3151eda",
          "message": "Fix styling",
          "committedDate": "2024-02-29T10:37:38Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dbf80f5c0b1210863a811267ba2811d3b456f782",
          "message": "Update the event source logs test",
          "committedDate": "2024-02-29T11:03:55Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1c8e198f02c42aa22b576e1ffa9bb752ee386258",
          "message": "Address the PR comments",
          "committedDate": "2024-03-01T11:55:09Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "_eventSourceTestListener is used only in one test but is it initialized for every test. Since listening to event sources have performance impact, all test which do not test events will have to pay this performance. \r\nPlease consider to not initialize it in constructor and use `using EventSourceTestHelper eventSourceTestHelper = new()` in particular test(s) instead.",
              "createdAt": "2024-02-29T15:46:47Z",
              "path": "src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs",
              "diffHunk": "@@ -28,20 +29,24 @@ public class SdkResolverService_Tests : IDisposable\n     {\n         private readonly MockLogger _logger;\n         private readonly LoggingContext _loggingContext;\n+        private readonly EventSourceTestHelper _eventSourceTestListener;\n \n         public SdkResolverService_Tests()\n         {\n             _logger = new MockLogger();\n             ILoggingService loggingService = LoggingService.CreateLoggingService(LoggerMode.Synchronous, 1);\n             loggingService.RegisterLogger(_logger);\n \n+            _eventSourceTestListener = new EventSourceTestHelper();",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": "Thank you, moved to the specified test. \r\nInitial thought was to make it possible to have access to the eventSource events  from each test without additional steps trading the performance a bit :) ",
              "createdAt": "2024-03-01T12:09:02Z",
              "path": "src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs",
              "diffHunk": "@@ -28,20 +29,24 @@ public class SdkResolverService_Tests : IDisposable\n     {\n         private readonly MockLogger _logger;\n         private readonly LoggingContext _loggingContext;\n+        private readonly EventSourceTestHelper _eventSourceTestListener;\n \n         public SdkResolverService_Tests()\n         {\n             _logger = new MockLogger();\n             ILoggingService loggingService = LoggingService.CreateLoggingService(LoggerMode.Synchronous, 1);\n             loggingService.RegisterLogger(_logger);\n \n+            _eventSourceTestListener = new EventSourceTestHelper();",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Please document this class including example or recommended usage.\r\nAlso please state that this class is not supposed to be used when tests runs concurrently. Optionally it can implement protection against multi instanciation through a static instance counter or such.\r\nCurrently in MSBuild we do not support to run test concurrently but if someone want to reuse this class or we ever start support test runs concurrently it might make tests unstable, as this class might contain tracing events from other concurrent tests as well.",
              "createdAt": "2024-02-29T15:58:00Z",
              "path": "src/Build.UnitTests/BackEnd/EventSourceTestHelper.cs",
              "diffHunk": "@@ -0,0 +1,68 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics.Tracing;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+\n+namespace Microsoft.Build.Engine.UnitTests.BackEnd\n+{\n+    internal sealed class EventSourceTestHelper : EventListener",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": "Thank you @rokonec. \r\nAdded the summary  with mentioning not having protection against concurently running tests as well. \r\nHowever the workaround for concurently running tests is to not to rely on the count of the events, but to the unique generated ids (if and when possible) as it is done in example test.  ",
              "createdAt": "2024-03-01T11:58:13Z",
              "path": "src/Build.UnitTests/BackEnd/EventSourceTestHelper.cs",
              "diffHunk": "@@ -0,0 +1,68 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics.Tracing;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+\n+namespace Microsoft.Build.Engine.UnitTests.BackEnd\n+{\n+    internal sealed class EventSourceTestHelper : EventListener",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "I agree that with current implementation it is not an issue, but theoretically in situation when test A do not expect event with ID nn but thanks to timing test B will produce it it would cause flaky failures. Not every event has chance to inject guid as parameter. Some events are without any parameter.",
              "createdAt": "2024-03-01T19:36:57Z",
              "path": "src/Build.UnitTests/BackEnd/EventSourceTestHelper.cs",
              "diffHunk": "@@ -0,0 +1,68 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics.Tracing;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+\n+namespace Microsoft.Build.Engine.UnitTests.BackEnd\n+{\n+    internal sealed class EventSourceTestHelper : EventListener",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      }
    ]
  }
}