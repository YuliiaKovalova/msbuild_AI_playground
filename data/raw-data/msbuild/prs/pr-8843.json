{
  "number": 8843,
  "title": "Copy task SourceFolders",
  "body": "Fixes #5881\r\n\r\n### Context\r\nImplementation of proposed `ITaskItem[] SourceFolders` parameter.\r\n\r\n### Changes Made\r\nWithin Copy.cs:\r\n- Added `ITaskItem[] SourceFolders` parameter\r\n- Modified `ValidateInputs()` to support the new parameter\r\n- Modified `InitializeDestinationFiles()`\r\n  - Previously this method iterated `SourceFiles` to create `DestinationFiles` items given the `DestinationFolder`.\r\n  - The `Copy` task actually only operates on `SourceFiles` and `DestinationFiles`.\r\n  - Extended the method to:\r\n    - Use `FileMatcher::GetFiles()` for each directory in `SourceFolders`\r\n    - Create items in both `SourceFiles` and `DestinationFiles` for each file found\r\n\r\nAdded additional unit tests in Copy_Tests.cs.\r\n\r\nAdded new error MSB3894 `Copy.IncompatibleParameters` for the case where `SourceFolders` and `DestinationFiles` are both present. This is very close to the existing MSB3022 `Copy.ExactlyOneTypeOfDestination` but it seemed prudent not to re-use MSB3022.\r\n\r\n### Testing\r\nTested on Windows 11 and macOS 12\r\n\r\nRan full suite of unit tests from the command line\r\n\r\nRan some sample project files\r\n\r\n### Notes\r\nThis implementation conforms to the proposed design with the exception that it does not copy empty directories.\r\n\r\nThis implementation leverages the existing `FileMatcher::GetFiles()` which recurses the directory tree using multiple threads. `GetFiles()` returns a list of files. Empty directories are not identified.\r\n\r\nThe use of `FileMatcher` could be replaced. The `Copy` task could implement its own support for recursing a directory tree. The wildcard matching logic in `FileMatcher` is not relevant for the `Copy` task.",
  "state": "MERGED",
  "createdAt": "2023-06-06T00:17:15Z",
  "updatedAt": "2023-12-15T13:53:41Z",
  "closedAt": "2023-12-14T13:28:46Z",
  "mergedAt": "2023-12-14T13:28:46Z",
  "additions": 583,
  "deletions": 26,
  "changedFiles": 16,
  "headRefName": "CopyTask-SourceFolders",
  "isDraft": false,
  "author": {
    "login": "jrdodds"
  },
  "milestone": {
    "title": "VS 17.9"
  },
  "assignees": {
    "nodes": [
      {
        "login": "AR-May"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "3703d515c1dd51c7a556ea2a8edf1bacb2b711e7",
          "message": "add SourceFolders parameter property",
          "committedDate": "2023-05-11T12:55:21Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fbe6b519c870f7cf6ff2044d9e8751f23c07b6ac",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-05-12T12:25:18Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "906aa4e9e4253a216d33d15d143735e16d404a87",
          "message": "add CopyParameter_Tests",
          "committedDate": "2023-05-15T19:49:57Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7c946a844737b9bf05aa45b674946168b8ae7447",
          "message": "reorganize Copy_Tests to eliminate duplicate test runs",
          "committedDate": "2023-05-16T12:38:09Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "81a200719f214056ffc2bdba4553a8878ce55c29",
          "message": "move static methods within class and add/modify comments",
          "committedDate": "2023-05-16T12:48:10Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6f60ad817f1b87d9f8ba1329200d0ecc846acfff",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-05-17T02:30:07Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "85c8afaca50330fbcb956732b92444381362ac19",
          "message": "Merge branch 'CopyTask-UnitTest' into CopyTask-SourceFolders",
          "committedDate": "2023-05-17T02:37:50Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7804687eaeaaa4be200bb079ff1c686bb5854ded",
          "message": "move methods to Copy_Tests; remove CopyParameter_Tests class",
          "committedDate": "2023-05-17T02:42:30Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0ff4526a06239e8c252d75488d03e7041f2668fd",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-05-21T19:06:05Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7b35c741a496442ac6c7eb81ea167a7d99dcf88c",
          "message": "chnage input validation; add unit tests for input validation",
          "committedDate": "2023-05-31T23:11:25Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7dc0d670f82e6c45e7e56c66fdd36c519992d9d2",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-06-02T20:31:22Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8c8abf8d638c02d8a6dc4e5fdf31048ef15231c7",
          "message": "implement SourceFolders",
          "committedDate": "2023-06-05T20:01:53Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "717b97b6b4178c9593897ecbefde28ae4a768e78",
          "message": "remove TODO and modify call to GetFiles()",
          "committedDate": "2023-06-06T15:31:13Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0e7ed6b8a665eb5fafa99c5d0030124c03799cd0",
          "message": "changed test CopyWithSourceFoldersToDestinationFolder",
          "committedDate": "2023-06-06T21:53:53Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c8db782f57ccb5de825baca7914f5b4777982264",
          "message": "use InvariantCulture with double.TryParse",
          "committedDate": "2023-06-07T13:58:42Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e41fef48d107df8b8379fb75e11817ae64773570",
          "message": "Revert \"use InvariantCulture with double.TryParse\"\n\nThis reverts commit c8db782f57ccb5de825baca7914f5b4777982264.",
          "committedDate": "2023-06-07T14:00:18Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "77b42d7deeff6da602fe1309317edf9be754f093",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-06-07T19:34:03Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f46b5e6adccef4589425a829fc3c4a01501e0480",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-06-27T23:18:04Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ab41e1b33e6b02b6ec087e0f53a7c269b6d02991",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-06-28T13:36:24Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "243de4374b20867bf1dec24eefc1261dd97f45e0",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-06-30T12:56:29Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "62cbc6a914767c68d6b4d45a91210261ca8af923",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-07-06T12:56:57Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "343e0b3199f958fb573eee14036464437594a302",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-08-13T22:56:13Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a5c1aaad35ec1f709c08a9b51fd75a7c9298d8c",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-08-30T19:22:32Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fc932c4c973e8639839fc2f4bcf992115765a03a",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-09-13T20:39:56Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8c8347d0f68a981deb0dbef54579372ce86855d2",
          "message": "update error code for Copy.IncompatibleParameters",
          "committedDate": "2023-09-26T21:16:29Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3d72c8471ed2ca571a425001075a1f72a2337e25",
          "message": "Merge branch 'main' into CopyTask-SourceFolders",
          "committedDate": "2023-09-26T21:35:18Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4d33e04cda804ffa32004faa27f52436dec7f6a7",
          "message": "updated Strings",
          "committedDate": "2023-09-26T21:41:54Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "27b25f6a5aa08662f2286ab1bfe505c3f78778b2",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-10-02T13:04:32Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1cc07fda10ba7320348037c965bf5bdd908ba531",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-10-05T14:48:18Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ab3a727b2d370a5e608df9fee93b991c3b97e156",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-10-10T14:33:25Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7c3d6b2bee55908bd9a33066372bd04f9705b272",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-10-23T12:08:56Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "eb59f9272e4f4e527605bb78094f511b6a001b09",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-10-26T17:29:05Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "41e0bb34fc62a58cdd4b41e2a26d5de5c9e34aef",
          "message": "change to make the empty set for source an error",
          "committedDate": "2023-10-27T15:35:55Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7348a4313a55de521fc0d091b8398968bb3da736",
          "message": "CopyWithNoInput should not assume validation order",
          "committedDate": "2023-10-27T17:03:25Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0a27056ef4875f62e2cd9c74d3de2e488ded2f21",
          "message": "Merge branch 'main' into CopyTask-SourceFolders",
          "committedDate": "2023-11-07T15:43:09Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "896e9ee60a7f7e65f3e0788f999581c60509f517",
          "message": "revise to allow empty set",
          "committedDate": "2023-11-09T02:01:34Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d92e61b5ca37c97eefbeb4b0a937596ad9bb4c57",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-11-09T02:08:25Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f9b9a6bf403dfb3817514aea2f680a7f5b947fb4",
          "message": "test DestinationFiles in CopyWithNoInput test; handle empty destinationFiles list as TwoVectorsMustHaveSameLength error",
          "committedDate": "2023-11-09T13:10:00Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dfdc4289c098ab48beba7526985af8a91dbb539a",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-11-17T22:30:38Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8a57726e72f3a5ee14ecb4795c78e1e6f91cdeb4",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-11-19T19:15:14Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ae2d5af3791cc4b2c31d72da05b078b50f27cfaa",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-12-01T12:24:48Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e8aefeae869a539e9d365a2dc4d39e7faf3be70a",
          "message": "Merge branch 'dotnet:main' into CopyTask-SourceFolders",
          "committedDate": "2023-12-08T14:22:17Z",
          "author": {
            "name": "Jonathan Dodds",
            "email": "jrdodds@me.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Can the build be re-run? Or is it necessary to push a new commit?\r\n\r\n**Update**: Pushed a new commit to address a TODO.\r\n\r\nThe question remains. When the PR build fails for causes in the build infrastructure and not the repo, is there a way to re-run the build or request that the build be re-run?\r\n\r\nIn the backing Azure Pipelines, I can only view. In the GitHub desktop client, there is a \"Re-run Checks\" button. Clicking the button for the dotnet/msbuild repo does nothing.",
        "createdAt": "2023-06-06T14:04:59Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "> Can the build be re-run? Or is it necessary to push a new commit?\r\n\r\nYou can write \"/azp run\" in the comment to the PR to re-run checks.\r\n\r\n",
        "createdAt": "2023-06-08T15:50:00Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "<samp>\nCommenter does not have sufficient privileges for PR 8843 in repo dotnet/msbuild<br>\r\n\n</samp>",
        "createdAt": "2023-06-08T17:37:19Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "Yeah, only committers have permission for `/azp run`--and committers should use the finer-grained rerun capabilities in AzDO or GitHub to rerun only failed jobs that failed for known, tracked-by-bugs issues.",
        "createdAt": "2023-06-08T18:26:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Just a note that a unit test unrelated to the commit(s) failed and then on the next build passed.\r\n\r\n**build:** Windows Core\r\n**test run:** Microsoft.Build.Engine.UnitTests_net8.0_x64\r\n**unit test:** Microsoft.Build.UnitTests.BackEnd.BuildManager_Tests.OutOfProcProjectInstanceBasedBuildDoesNotReloadFromDisk(shouldSerializeEntireState: True)\r\n\r\nThe log shows\r\n\r\n```\r\nerror MSB4223: A node of the required type OutOfProc could not be created.\r\n```",
        "createdAt": "2023-10-27T17:57:21Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "LGTM Merge after Alina's comments are addressed.",
        "createdAt": "2023-11-09T13:11:08Z",
        "author": {
          "login": "MichalPavlik"
        }
      },
      {
        "body": "Just pushed a commit to address both comments",
        "createdAt": "2023-11-09T13:11:56Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "Our main currently cannot take PRs with new features. We will merge this as soon as our main is open.",
        "createdAt": "2023-11-09T14:21:41Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "Is the new capability documented anywhere? I\u2019d like to see a couple of examples.",
        "createdAt": "2023-12-14T16:13:32Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Feature is fully described in the issue with feature request:\r\nhttps://github.com/dotnet/msbuild/issues/5881#issuecomment-1207271585\r\nBut it would be good idea to add documentation about it somewhere else too.",
        "createdAt": "2023-12-14T17:16:34Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "does the description in the issue match the actual implementation? I\u2019m afraid documenting a feature in an issue is insufficient. Ideally if there\u2019s existing documentation for the Copy task, we should augment that.",
        "createdAt": "2023-12-14T17:27:08Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Yes, I agree, documenting in an issue is insufficient, we should add this to https://learn.microsoft.com/en-us/visualstudio/msbuild/copy-task.\r\nYes, the implementation matches the suggested design.",
        "createdAt": "2023-12-14T17:32:37Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Shouldn't the task return false when there are no source folders or files? I am confused here.",
              "createdAt": "2023-10-26T12:04:10Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -112,6 +121,353 @@ public void Dispose()\n             Copy.RefreshInternalEnvironmentValues();\n         }\n \n+        [Fact]\n+        public void CopyWithNoInput()\n+        {\n+            var task = new Copy { BuildEngine = new MockEngine(true), };\n+            task.Execute().ShouldBeTrue();",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "The existing code returns true when there are no `SourceFiles`.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/ed404c0d68dc073a09c5c9402a5c56f65e7a29a8/src/Tasks/Copy.cs#L400-L411\r\n\r\n~~However, this test is never true when the task is used in MSBuild code because the `SourceFiles` parameter is `[Required]`.~~ Because either or both `SourceFiles` and `SourceFolders` can be provided, neither can be `[Required]`.\r\n\r\n~~To be more consistent with the existing behavior of the `Copy` task, I'll make the \"empty set\" an error.~~",
              "createdAt": "2023-10-26T14:02:05Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -112,6 +121,353 @@ public void Dispose()\n             Copy.RefreshInternalEnvironmentValues();\n         }\n \n+        [Fact]\n+        public void CopyWithNoInput()\n+        {\n+            var task = new Copy { BuildEngine = new MockEngine(true), };\n+            task.Execute().ShouldBeTrue();",
              "author": {
                "login": "jrdodds"
              }
            },
            {
              "body": "changes have been committed",
              "createdAt": "2023-10-27T17:58:08Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -112,6 +121,353 @@ public void Dispose()\n             Copy.RefreshInternalEnvironmentValues();\n         }\n \n+        [Fact]\n+        public void CopyWithNoInput()\n+        {\n+            var task = new Copy { BuildEngine = new MockEngine(true), };\n+            task.Execute().ShouldBeTrue();",
              "author": {
                "login": "jrdodds"
              }
            },
            {
              "body": "Sorry for my long absence, @jrdodds, I was sick. I see, if there were no sources, the task returned indeed true. As for the test, the parameter is required, but it could be an empty list still, so the test could not be true, but similar test with empty sources could. As for the task, I am afraid that if we change this behavior now, we will get into problems, introducing a breaking change. So, I think we need to stick to a safer option: keep the current behavior, only adding a new feature.",
              "createdAt": "2023-11-08T13:04:02Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -112,6 +121,353 @@ public void Dispose()\n             Copy.RefreshInternalEnvironmentValues();\n         }\n \n+        [Fact]\n+        public void CopyWithNoInput()\n+        {\n+            var task = new Copy { BuildEngine = new MockEngine(true), };\n+            task.Execute().ShouldBeTrue();",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "**Updated**\r\n\r\n`[Required]` ~~doesn't distinguish between a null list and an empty list and doesn't~~ does allow an empty list. ~~Failing on an empty list actually matches the current behavior of the task when used from MSBuild.~~\r\n\r\n~~The behavior change is only when the task is used directly in code bypassing the `[Required]` logic.~~\r\n\r\nCrossed my wires rather badly. Working on an update.",
              "createdAt": "2023-11-08T13:14:06Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -112,6 +121,353 @@ public void Dispose()\n             Copy.RefreshInternalEnvironmentValues();\n         }\n \n+        [Fact]\n+        public void CopyWithNoInput()\n+        {\n+            var task = new Copy { BuildEngine = new MockEngine(true), };\n+            task.Execute().ShouldBeTrue();",
              "author": {
                "login": "jrdodds"
              }
            },
            {
              "body": "> Sorry for my long absence, @jrdodds, I was sick. ...\r\n\r\nSorry to hear you were sick and I hope you have fully recovered.\r\n",
              "createdAt": "2023-11-08T13:17:43Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -112,6 +121,353 @@ public void Dispose()\n             Copy.RefreshInternalEnvironmentValues();\n         }\n \n+        [Fact]\n+        public void CopyWithNoInput()\n+        {\n+            var task = new Copy { BuildEngine = new MockEngine(true), };\n+            task.Execute().ShouldBeTrue();",
              "author": {
                "login": "jrdodds"
              }
            },
            {
              "body": "Restored the current behavior. An empty set for sources is accepted and the task returns `true`.",
              "createdAt": "2023-11-09T02:07:20Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -112,6 +121,353 @@ public void Dispose()\n             Copy.RefreshInternalEnvironmentValues();\n         }\n \n+        [Fact]\n+        public void CopyWithNoInput()\n+        {\n+            var task = new Copy { BuildEngine = new MockEngine(true), };\n+            task.Execute().ShouldBeTrue();",
              "author": {
                "login": "jrdodds"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: Destination files are not checked anymore in this test. Is that intentional? ",
              "createdAt": "2023-11-09T12:12:35Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -126,10 +132,7 @@ public void CopyWithNoInput()\n         {\n             var task = new Copy { BuildEngine = new MockEngine(true), };\n             task.Execute().ShouldBeTrue();\n-            task.CopiedFiles.ShouldNotBeNull();\n-            task.CopiedFiles.Length.ShouldBe(0);\n-            task.DestinationFiles.ShouldNotBeNull();\n-            task.DestinationFiles.Length.ShouldBe(0);\n+            (task.CopiedFiles == null || task.CopiedFiles.Length == 0).ShouldBeTrue();",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "I didn't want the unit test to be dependent on the order of checks in the `ValidateInputs()` method; but, with restoring acceptance of the empty set, the unit test should check `DestinationFiles`.",
              "createdAt": "2023-11-09T13:10:09Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -126,10 +132,7 @@ public void CopyWithNoInput()\n         {\n             var task = new Copy { BuildEngine = new MockEngine(true), };\n             task.Execute().ShouldBeTrue();\n-            task.CopiedFiles.ShouldNotBeNull();\n-            task.CopiedFiles.Length.ShouldBe(0);\n-            task.DestinationFiles.ShouldNotBeNull();\n-            task.DestinationFiles.Length.ShouldBe(0);\n+            (task.CopiedFiles == null || task.CopiedFiles.Length == 0).ShouldBeTrue();",
              "author": {
                "login": "jrdodds"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I would prefer to do not have check `DestinationFiles.Length == 0` here: this situation is caught few lines below with more detailed error `TwoVectorsMustHaveSameLength`. I see similarities with the SourceFiles conditions, why, I suppose, this line was changed, but since it anyway would be some error, let's pick the more elaborate one.",
              "createdAt": "2023-11-09T12:18:02Z",
              "path": "src/Tasks/Copy.cs",
              "diffHunk": "@@ -664,7 +669,7 @@ private bool ValidateInputs()\n             }\n \n             // There must be a destination (either files or directory).\n-            if (DestinationFiles == null && DestinationFolder == null)\n+            if ((DestinationFiles == null || DestinationFiles.Length == 0) && DestinationFolder == null)",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Makes sense",
              "createdAt": "2023-11-09T13:10:14Z",
              "path": "src/Tasks/Copy.cs",
              "diffHunk": "@@ -664,7 +669,7 @@ private bool ValidateInputs()\n             }\n \n             // There must be a destination (either files or directory).\n-            if (DestinationFiles == null && DestinationFolder == null)\n+            if ((DestinationFiles == null || DestinationFiles.Length == 0) && DestinationFolder == null)",
              "author": {
                "login": "jrdodds"
              }
            }
          ]
        }
      }
    ]
  }
}