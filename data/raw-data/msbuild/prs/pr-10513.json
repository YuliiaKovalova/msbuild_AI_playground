{
  "number": 10513,
  "title": "Fix the possible nullref on completing failed results",
  "body": "Fixes [AB#2172446](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2172446)\r\n\r\n### Context\r\nThe OM unification (https://github.com/dotnet/msbuild/pull/10172) unified check for readiness of BuildSubmission - it newly skipped checking of `BuiltRequest` not being null - expecting that during submitting the submission the `BuiltResult` is eventaully set.\r\nThis was covering the happy path, however result created from exception might be requested too early - before `BuiltRequest` is attached (but afet `IsStarted` was set). So we reintroduced the nun-null check\r\n\r\n### Changes Made\r\nThe removed  `BuiltRequest` null check was reintroduced - it was just pulled to the internals of the `BuildSubmission` type.\r\n",
  "state": "MERGED",
  "createdAt": "2024-08-13T16:22:39Z",
  "updatedAt": "2024-08-16T12:10:02Z",
  "closedAt": "2024-08-14T16:17:41Z",
  "mergedAt": "2024-08-14T16:17:40Z",
  "additions": 16,
  "deletions": 1,
  "changedFiles": 3,
  "headRefName": "bugfix/om-refactor-nullref-fix",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "b1cbf9bf3e757f8d8ba55e55e712ef1bd07fb069",
          "message": "Fix the possible nullref on completing failed results",
          "committedDate": "2024-08-13T16:18:27Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> I don't see how this fixes the null ref, can you elaborate on that please?\r\n\r\nSure! Happy to clear that out!\r\n\r\nI'll use one example (out of 5 usages) of unification of completing submission with exception:\r\n\r\nFormerly:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/a481b831d5ca713519ca981e8a71aeb8fbaa906f/src/Build/BackEnd/BuildManager/BuildManager.cs#L818-L834\r\n\r\nAfter refactor:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/1b1df9e39b8c576d33d8964c7f4a64716fd46371/src/Build/BackEnd/BuildManager/BuildManager.cs#L807-L817\r\n\r\n\r\nThe code within `if` was unified properly, however the conditioning wasn't. For graph build there is no change. For non-graph build the `IsStarted` is set when the submission is just being executed - but the `BuildRequest` might not have yet been attached. This can lead to unexpected null down in the result creation code, when the result is attempted to be asynchronously finished with exception.\r\nThere are 3 possible ways of fixing:\r\n* The `IsStarted` for non-graph submission would be set only after `BuildRequest` is guaranteed to be set (there are however multiple codepaths)\r\n* The `IsStarted` for non-graph submission reflect the state of the `BuildRequest` being set\r\n* The asynchronous finalization of BuildSubmission with exception would use a lock that is being used in `ExecuteSubmission` when altering the BuildSubmission\r\n\r\nThe 2nd option is least risky as it's the smallest codechange plus reflects 1:1 the behavior before refactoring (where the condition checked explicitly the `BuildRequest` not being null)\r\n",
        "createdAt": "2024-08-14T07:13:03Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}