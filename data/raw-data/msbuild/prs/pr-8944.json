{
  "number": 8944,
  "title": "Send AssemblyLoadBuildEventArgs only for valid LoggingContext",
  "body": "Fixes #8816\r\n\r\n### Context\r\nAs discussed in #8816 we are trying the simplest solution, i.e. do not fail when LoggingContext is not yet properly initialized.\r\n\r\n### Changes Made\r\nSimple IF\r\n\r\n### Testing\r\nLocal.\r\n\r\n### Notes\r\n@KirillOsenkov Can you please test if this PR addresses #8816 issue properly?\r\n",
  "state": "MERGED",
  "createdAt": "2023-06-23T11:41:00Z",
  "updatedAt": "2023-07-03T18:32:47Z",
  "closedAt": "2023-07-03T18:32:44Z",
  "mergedAt": "2023-07-03T18:32:44Z",
  "additions": 7,
  "deletions": 4,
  "changedFiles": 1,
  "headRefName": "rokonec/assembly-load-tracker-fix",
  "isDraft": false,
  "author": {
    "login": "rokonec"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8784eab702ce6fa9adf0932c6bde58ca8ed96bef",
          "message": "Do not send AssemblyLoadBuildEventArgs when LoggingContext does not have BuildEventContext",
          "committedDate": "2023-06-23T11:37:10Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "do you need to remove this line now?",
              "createdAt": "2023-06-23T18:27:27Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/AssemblyLoadsTracker.cs",
              "diffHunk": "@@ -157,11 +157,14 @@ private void CurrentDomainOnAssemblyLoad(object? sender, AssemblyLoadEventArgs a\n                 : $\"{_appDomain.Id}|{_appDomain.FriendlyName}\";\n \n \n-            AssemblyLoadBuildEventArgs buildArgs = new(_context, _initiator, assemblyName, assemblyPath, mvid, appDomainDescriptor)\n+            AssemblyLoadBuildEventArgs buildArgs = new(_context, _initiator, assemblyName, assemblyPath, mvid, appDomainDescriptor);\n+\n+            // Fix #8816 - when LoggingContext does not have BuildEventContext it is unable to log anything\n+            if (_loggingContext?.BuildEventContext != null)\n             {\n-                BuildEventContext = _loggingContext?.BuildEventContext ?? BuildEventContext.Invalid\n-            };\n-            _loggingContext?.LogBuildEvent(buildArgs);\n+                buildArgs.BuildEventContext = _loggingContext.BuildEventContext;\n+                _loggingContext.LogBuildEvent(buildArgs);\n+            }\n             _loggingService?.LogBuildEvent(buildArgs);",
              "author": {
                "login": "KirillOsenkov"
              }
            },
            {
              "body": "It has not been removed, only moved to `if` at line 166",
              "createdAt": "2023-06-24T00:28:00Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/AssemblyLoadsTracker.cs",
              "diffHunk": "@@ -157,11 +157,14 @@ private void CurrentDomainOnAssemblyLoad(object? sender, AssemblyLoadEventArgs a\n                 : $\"{_appDomain.Id}|{_appDomain.FriendlyName}\";\n \n \n-            AssemblyLoadBuildEventArgs buildArgs = new(_context, _initiator, assemblyName, assemblyPath, mvid, appDomainDescriptor)\n+            AssemblyLoadBuildEventArgs buildArgs = new(_context, _initiator, assemblyName, assemblyPath, mvid, appDomainDescriptor);\n+\n+            // Fix #8816 - when LoggingContext does not have BuildEventContext it is unable to log anything\n+            if (_loggingContext?.BuildEventContext != null)\n             {\n-                BuildEventContext = _loggingContext?.BuildEventContext ?? BuildEventContext.Invalid\n-            };\n-            _loggingContext?.LogBuildEvent(buildArgs);\n+                buildArgs.BuildEventContext = _loggingContext.BuildEventContext;\n+                _loggingContext.LogBuildEvent(buildArgs);\n+            }\n             _loggingService?.LogBuildEvent(buildArgs);",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": "so, do we need both LoggingContext.LogBuildEvent() as well as LoggingService.LogBuildEvent()? sorry I don't know what exactly these two methods do and what is the difference.",
              "createdAt": "2023-06-24T00:33:50Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/AssemblyLoadsTracker.cs",
              "diffHunk": "@@ -157,11 +157,14 @@ private void CurrentDomainOnAssemblyLoad(object? sender, AssemblyLoadEventArgs a\n                 : $\"{_appDomain.Id}|{_appDomain.FriendlyName}\";\n \n \n-            AssemblyLoadBuildEventArgs buildArgs = new(_context, _initiator, assemblyName, assemblyPath, mvid, appDomainDescriptor)\n+            AssemblyLoadBuildEventArgs buildArgs = new(_context, _initiator, assemblyName, assemblyPath, mvid, appDomainDescriptor);\n+\n+            // Fix #8816 - when LoggingContext does not have BuildEventContext it is unable to log anything\n+            if (_loggingContext?.BuildEventContext != null)\n             {\n-                BuildEventContext = _loggingContext?.BuildEventContext ?? BuildEventContext.Invalid\n-            };\n-            _loggingContext?.LogBuildEvent(buildArgs);\n+                buildArgs.BuildEventContext = _loggingContext.BuildEventContext;\n+                _loggingContext.LogBuildEvent(buildArgs);\n+            }\n             _loggingService?.LogBuildEvent(buildArgs);",
              "author": {
                "login": "KirillOsenkov"
              }
            },
            {
              "body": "Only one of those is set. If we have LoggingContext than we use it, in cases where LoggingContext is unknown, for example logger intialization, we do use LoggingService instead.",
              "createdAt": "2023-06-26T09:42:51Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/AssemblyLoadsTracker.cs",
              "diffHunk": "@@ -157,11 +157,14 @@ private void CurrentDomainOnAssemblyLoad(object? sender, AssemblyLoadEventArgs a\n                 : $\"{_appDomain.Id}|{_appDomain.FriendlyName}\";\n \n \n-            AssemblyLoadBuildEventArgs buildArgs = new(_context, _initiator, assemblyName, assemblyPath, mvid, appDomainDescriptor)\n+            AssemblyLoadBuildEventArgs buildArgs = new(_context, _initiator, assemblyName, assemblyPath, mvid, appDomainDescriptor);\n+\n+            // Fix #8816 - when LoggingContext does not have BuildEventContext it is unable to log anything\n+            if (_loggingContext?.BuildEventContext != null)\n             {\n-                BuildEventContext = _loggingContext?.BuildEventContext ?? BuildEventContext.Invalid\n-            };\n-            _loggingContext?.LogBuildEvent(buildArgs);\n+                buildArgs.BuildEventContext = _loggingContext.BuildEventContext;\n+                _loggingContext.LogBuildEvent(buildArgs);\n+            }\n             _loggingService?.LogBuildEvent(buildArgs);",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      }
    ]
  }
}