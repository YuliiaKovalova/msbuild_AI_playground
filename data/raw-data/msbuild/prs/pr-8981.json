{
  "number": 8981,
  "title": "Improve waiting for the server is in use by the signal that a marker file is created by the build task",
  "body": "Fixes #8956\r\n\r\n### Context\r\nhttps://github.com/dotnet/msbuild/issues/8956#issuecomment-1614321536\r\n\r\n### Changes Made\r\nImprove waiting for the server is in use by the signal that a marker file is created by the build task.\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-06-30T08:41:17Z",
  "updatedAt": "2023-07-21T01:50:48Z",
  "closedAt": "2023-07-21T01:50:43Z",
  "mergedAt": "2023-07-21T01:50:43Z",
  "additions": 29,
  "deletions": 12,
  "changedFiles": 1,
  "headRefName": "flaky-test",
  "isDraft": false,
  "author": {
    "login": "GangWang01"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8a3577e683a38e6ee72dcd9cbb7596bd096413b4",
          "message": "Improve waiting for the server is in use by the signal that a marker file is created by the build task.",
          "committedDate": "2023-07-05T08:05:37Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "306cf9ab5e22bfe3e34da118e9852813d4bcebb2",
          "message": "Use TestEnvironment to generate expected marker file path",
          "committedDate": "2023-07-11T11:09:43Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> It's generally not a good idea to have timeouts like this, or to increase them without detailed data indicating why.\r\n> \r\n> Is it possible to get a distinct signal from the second process that it's going, perhaps a line on stdout or a file that acts as a marker?\r\n\r\nThanks for the suggestion! It's possible to let the build task create a marker file as the signal. ",
        "createdAt": "2023-07-05T08:20:38Z",
        "author": {
          "login": "GangWang01"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I'd actually move this log line to _before_ the indefinite wait, so if the wait hangs for a very long time we can see that clearly in the log.",
              "createdAt": "2023-07-10T15:38:43Z",
              "path": "src/MSBuild.UnitTests/MSBuildServer_Tests.cs",
              "diffHunk": "@@ -185,13 +193,23 @@ public void BuildsWhileBuildIsRunningOnServer()\n             pidOfServerProcess = ParseNumber(output, \"Server ID is \");\n             _env.WithTransientProcess(pidOfServerProcess);\n \n+            using var watcher = new System.IO.FileSystemWatcher(dir!);\n+            ManualResetEvent mre = new ManualResetEvent(false);\n+            watcher.Created += (o, e) =>\n+            {\n+                _output.WriteLine($\"The marker file {fileName} was created. The build task has been started.\");\n+                mre.Set();\n+            };\n+            watcher.Filter = fileName;\n+            watcher.EnableRaisingEvents = true;\n             t = Task.Run(() =>\n             {\n                 RunnerUtilities.ExecMSBuild(BuildEnvironmentHelper.Instance.CurrentMSBuildExePath, sleepProject.Path, out _, false, _output);\n             });\n \n             // The server will soon be in use; make sure we don't try to use it before that happens.\n-            Thread.Sleep(1000);\n+            mre.WaitOne();\n+            _output.WriteLine(\"It's OK to go ahead.\");",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Instead, I'd like to add one more log before waiting.",
              "createdAt": "2023-07-11T11:18:22Z",
              "path": "src/MSBuild.UnitTests/MSBuildServer_Tests.cs",
              "diffHunk": "@@ -185,13 +193,23 @@ public void BuildsWhileBuildIsRunningOnServer()\n             pidOfServerProcess = ParseNumber(output, \"Server ID is \");\n             _env.WithTransientProcess(pidOfServerProcess);\n \n+            using var watcher = new System.IO.FileSystemWatcher(dir!);\n+            ManualResetEvent mre = new ManualResetEvent(false);\n+            watcher.Created += (o, e) =>\n+            {\n+                _output.WriteLine($\"The marker file {fileName} was created. The build task has been started.\");\n+                mre.Set();\n+            };\n+            watcher.Filter = fileName;\n+            watcher.EnableRaisingEvents = true;\n             t = Task.Run(() =>\n             {\n                 RunnerUtilities.ExecMSBuild(BuildEnvironmentHelper.Instance.CurrentMSBuildExePath, sleepProject.Path, out _, false, _output);\n             });\n \n             // The server will soon be in use; make sure we don't try to use it before that happens.\n-            Thread.Sleep(1000);\n+            mre.WaitOne();\n+            _output.WriteLine(\"It's OK to go ahead.\");",
              "author": {
                "login": "GangWang01"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I would prefer to use `_env.ExpectFile()` here so that the marker gets cleaned up.",
              "createdAt": "2023-07-10T15:39:43Z",
              "path": "src/MSBuild.UnitTests/MSBuildServer_Tests.cs",
              "diffHunk": "@@ -176,7 +180,11 @@ public void BuildsWhileBuildIsRunningOnServer()\n         {\n             _env.SetEnvironmentVariable(\"MSBUILDUSESERVER\", \"1\");\n             TransientTestFile project = _env.CreateFile(\"testProject.proj\", printPidContents);\n-            TransientTestFile sleepProject = _env.CreateFile(\"napProject.proj\", sleepingTaskContents);\n+\n+            string fileName = \"marker.txt\";\n+            string? dir = Path.GetDirectoryName(project.Path);\n+            string markerFilePath = Path.Combine(dir!, fileName);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Thank you! I learned more about `TestEnvironment` from this.",
              "createdAt": "2023-07-11T11:12:01Z",
              "path": "src/MSBuild.UnitTests/MSBuildServer_Tests.cs",
              "diffHunk": "@@ -176,7 +180,11 @@ public void BuildsWhileBuildIsRunningOnServer()\n         {\n             _env.SetEnvironmentVariable(\"MSBUILDUSESERVER\", \"1\");\n             TransientTestFile project = _env.CreateFile(\"testProject.proj\", printPidContents);\n-            TransientTestFile sleepProject = _env.CreateFile(\"napProject.proj\", sleepingTaskContents);\n+\n+            string fileName = \"marker.txt\";\n+            string? dir = Path.GetDirectoryName(project.Path);\n+            string markerFilePath = Path.Combine(dir!, fileName);",
              "author": {
                "login": "GangWang01"
              }
            }
          ]
        }
      }
    ]
  }
}