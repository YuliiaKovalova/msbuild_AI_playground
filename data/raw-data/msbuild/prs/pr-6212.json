{
  "number": 6212,
  "title": "Fix \"Object reference not set to...\" when removing a database reference",
  "body": "### The Issue\r\nThis came up from an internal message.\r\n\r\nCreate a SQL Server Database project - You may need to install \"Data storage and processing\" workload in VS\r\nRight click on References and select \u2018Add Database Reference\u2026\u2019\r\nChoose System database and select \u2018master\u2019 and click \u2018OK\u2019\r\nBuild the project and Check the .sqlproj file, it should have\r\n```xml\r\n      <ItemGroup>\r\n  <ArtifactReference Include=\"$(DacPacRootPath)\\Extensions\\Microsoft\\SQLDB\\Extensions\\SqlServer\\130\\SqlSchemas\\master.dacpac\">\r\n    <HintPath>$(DacPacRootPath)\\Extensions\\Microsoft\\SQLDB\\Extensions\\SqlServer\\130\\SqlSchemas\\master.dacpac</HintPath>\r\n    <SuppressMissingDependenciesErrors>False</SuppressMissingDependenciesErrors>\r\n    <DatabaseVariableLiteralValue>master</DatabaseVariableLiteralValue>\r\n  </ArtifactReference>\r\n</ItemGroup>\r\n```\r\nRight click on \u2018master\u2019 reference on Solution Explorer and select Remove\r\nIt will throw \u2018Object reference not set to an instance of an object\u2019 and removes from UI\r\nCheck the .sqlproj and you can see it still has the reference as is.\r\nRight click on References and select \u2018Add Database Reference\u2026\u2019 and Choose System database and select \u2018msdb\u2019 and click \u2018OK\u2019\r\nBuild the project and Check the .sqlproj file. It would have something like:\r\n```xml\r\n      <ItemGroup>\r\n  <ArtifactReference Include=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\Extensions\\Microsoft\\SQLDB\\Extensions\\SqlServer\\130\\SqlSchemas\\master.dacpac\">\r\n    <HintPath>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\Extensions\\Microsoft\\SQLDB\\Extensions\\SqlServer\\130\\SqlSchemas\\master.dacpac</HintPath>\r\n    <SuppressMissingDependenciesErrors>False</SuppressMissingDependenciesErrors>\r\n    <DatabaseVariableLiteralValue>master</DatabaseVariableLiteralValue>\r\n  </ArtifactReference>\r\n  <ArtifactReference Include=\"$(DacPacRootPath)\\Extensions\\Microsoft\\SQLDB\\Extensions\\SqlServer\\130\\SqlSchemas\\msdb.dacpac\">\r\n    <HintPath>$(DacPacRootPath)\\Extensions\\Microsoft\\SQLDB\\Extensions\\SqlServer\\130\\SqlSchemas\\msdb.dacpac</HintPath>\r\n    <SuppressMissingDependenciesErrors>False</SuppressMissingDependenciesErrors>\r\n    <DatabaseVariableLiteralValue>msdb</DatabaseVariableLiteralValue>\r\n  </ArtifactReference>\r\n</ItemGroup>\r\n```\r\nFor master.dacpac, $(DacPacRootPath) is changed C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE instead of removing the ArtifactReference.\r\n\r\n### Changes Made\r\nPrevent `SplitItemElementIfNecessary` from removing the current item from its parent, it's handled in `RemoveItemHelper`.\r\n\r\n### Testing\r\nTested on the repro and it stops the `Object reference not set to an instance of an object` issue.\r\n\r\n### Notes\r\nThis fixes the error window but not the entire problem, **the item isn't actually removed from the project.**\r\n\r\nThe logic seems to suggest that when an item can be \"split\" (it has a semicolon, refers to an item or property), it removes the original item from the XML and replaces it with the expanded forms of each. Not sure I fully understand how this would work because the projects should keep property references but use their expanded forms in memory. Thoughts?",
  "state": "CLOSED",
  "createdAt": "2021-03-02T20:20:55Z",
  "updatedAt": "2021-05-06T23:27:58Z",
  "closedAt": "2021-05-06T23:27:57Z",
  "mergedAt": null,
  "additions": 0,
  "deletions": 2,
  "changedFiles": 1,
  "headRefName": "sqldb-nre-fix",
  "isDraft": true,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "18debd68857ff858a1e9cdc232cb1cfa566eece2",
          "message": "Prevent parent from removing child, let function caller do it",
          "committedDate": "2021-03-02T20:12:58Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Opened an issue for this to triage: https://github.com/dotnet/msbuild/issues/6420",
        "createdAt": "2021-05-06T23:27:57Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}