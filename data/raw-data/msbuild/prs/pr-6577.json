{
  "number": 6577,
  "title": "Infer target skip reason from older binlogs",
  "body": "Remove an assert that is too aggressive. When reading old binlogs the TargetSkipReason is not known, so TargetSkipReason.None is a valid state.\r\n\r\nWe can do a best effort and infer the skip reason for format version 13.\r\n\r\nFixes #6563\r\n",
  "state": "MERGED",
  "createdAt": "2021-06-17T01:23:08Z",
  "updatedAt": "2021-06-17T21:37:39Z",
  "closedAt": "2021-06-17T21:37:36Z",
  "mergedAt": "2021-06-17T21:37:36Z",
  "additions": 7,
  "deletions": 2,
  "changedFiles": 2,
  "headRefName": "dev/kirillo/skipReason",
  "isDraft": false,
  "author": {
    "login": "KirillOsenkov"
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "36dcafac0ca52e382e5bb58bb36dcfa56c8ab98d",
          "message": "Infer target skip reason from older binlogs\n\nRemove an assert that is too aggressive. When reading old binlogs the TargetSkipReason is not known, so TargetSkipReason.None is a valid state.\n\nWe can do a best effort and infer the skip reason for format version 13.\n\nFixes #6563",
          "committedDate": "2021-06-17T01:22:43Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b2dc143df01865cdb25690e36b77fc93992664bf",
          "message": "Update src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2021-06-17T19:11:18Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "KirillOsenkov@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I've filed https://github.com/dotnet/msbuild/issues/6587 to track the work of adding tests for playing back binlogs of each version.\r\n\r\nI've had the same thoughts.",
        "createdAt": "2021-06-17T19:13:54Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "This is saying that if the condition was not null, the condition was false, which doesn't sound right.",
              "createdAt": "2021-06-17T15:00:31Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs",
              "diffHunk": "@@ -304,6 +304,13 @@ private BuildEventArgs ReadTargetSkippedEventArgs()\n                 condition = ReadOptionalString();\n                 evaluatedCondition = ReadOptionalString();\n                 originallySucceeded = ReadBoolean();\n+\n+                // Attempt to infer skip reason from the data we have\n+                skipReason = condition != null ?",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Yes, if the target was skipped because of the false condition, we store the condition which was false. If it was skipped for other reasons, the condition will be null.",
              "createdAt": "2021-06-17T16:43:28Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs",
              "diffHunk": "@@ -304,6 +304,13 @@ private BuildEventArgs ReadTargetSkippedEventArgs()\n                 condition = ReadOptionalString();\n                 evaluatedCondition = ReadOptionalString();\n                 originallySucceeded = ReadBoolean();\n+\n+                // Attempt to infer skip reason from the data we have\n+                skipReason = condition != null ?",
              "author": {
                "login": "KirillOsenkov"
              }
            },
            {
              "body": "And if the condition was true, but we skipped it for another reason, condition would still be null instead of true? That's confusing, but ok.",
              "createdAt": "2021-06-17T17:29:53Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs",
              "diffHunk": "@@ -304,6 +304,13 @@ private BuildEventArgs ReadTargetSkippedEventArgs()\n                 condition = ReadOptionalString();\n                 evaluatedCondition = ReadOptionalString();\n                 originallySucceeded = ReadBoolean();\n+\n+                // Attempt to infer skip reason from the data we have\n+                skipReason = condition != null ?",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Yes, we only store the Condition if the target was skipped because of false condition ;)",
              "createdAt": "2021-06-17T17:39:39Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs",
              "diffHunk": "@@ -304,6 +304,13 @@ private BuildEventArgs ReadTargetSkippedEventArgs()\n                 condition = ReadOptionalString();\n                 evaluatedCondition = ReadOptionalString();\n                 originallySucceeded = ReadBoolean();\n+\n+                // Attempt to infer skip reason from the data we have\n+                skipReason = condition != null ?",
              "author": {
                "login": "KirillOsenkov"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                skipReason = condition != null ?\r\n                    TargetSkipReason.ConditionWasFalse // condition expression only stored when false\r\n                    : originallySucceeded ?\r\n                        TargetSkipReason.PreviouslyBuiltSuccessfully\r\n                        : TargetSkipReason.PreviouslyBuiltUnsuccessfully;\r\n```\r\n\r\n? I had basically the same questions so I'd like a permanent comment.",
              "createdAt": "2021-06-17T18:49:03Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs",
              "diffHunk": "@@ -304,6 +304,13 @@ private BuildEventArgs ReadTargetSkippedEventArgs()\n                 condition = ReadOptionalString();\n                 evaluatedCondition = ReadOptionalString();\n                 originallySucceeded = ReadBoolean();\n+\n+                // Attempt to infer skip reason from the data we have\n+                skipReason = condition != null ?\n+                    TargetSkipReason.ConditionWasFalse\n+                    : originallySucceeded ?\n+                        TargetSkipReason.PreviouslyBuiltSuccessfully\n+                        : TargetSkipReason.PreviouslyBuiltUnsuccessfully;",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Actually, as an alternative, maybe change it to:\r\nskipReason = condition == false ?\r\n?\r\nThat should be equally valid but far less surprising.",
              "createdAt": "2021-06-17T19:26:51Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs",
              "diffHunk": "@@ -304,6 +304,13 @@ private BuildEventArgs ReadTargetSkippedEventArgs()\n                 condition = ReadOptionalString();\n                 evaluatedCondition = ReadOptionalString();\n                 originallySucceeded = ReadBoolean();\n+\n+                // Attempt to infer skip reason from the data we have\n+                skipReason = condition != null ?\n+                    TargetSkipReason.ConditionWasFalse\n+                    : originallySucceeded ?\n+                        TargetSkipReason.PreviouslyBuiltSuccessfully\n+                        : TargetSkipReason.PreviouslyBuiltUnsuccessfully;",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}