{
  "number": 9231,
  "title": "Create pipeline for exp insertions",
  "body": "### Context\r\nAdding a pipeline that creates dotnet with experimental MSBuild bits. \r\n\r\n### Changes Made\r\n- Create pipeline for exp insertions.\r\n- Modify the Deploy script: add option to specify MSBuild bootstrap folder, make backup optional\r\n\r\n### Testing\r\nManual testing of the resulting pipeline\r\n",
  "state": "MERGED",
  "createdAt": "2023-09-19T08:37:07Z",
  "updatedAt": "2023-09-26T13:27:02Z",
  "closedAt": "2023-09-26T13:27:02Z",
  "mergedAt": "2023-09-26T13:27:02Z",
  "additions": 146,
  "deletions": 7,
  "changedFiles": 2,
  "headRefName": "dev/AR-May/make-exp-sdk",
  "isDraft": false,
  "author": {
    "login": "AR-May"
  },
  "milestone": {
    "title": "VS 17.9"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c8ad329c80f17cb76a517d3cb5ac60b66cb19fe1",
          "message": "update deloyment script",
          "committedDate": "2023-09-19T08:53:21Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6b881cfca644c88c0222323f36afce3b36167ab7",
          "message": "Address PR comments",
          "committedDate": "2023-09-20T11:19:56Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "/azp run",
        "createdAt": "2023-09-20T12:12:37Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2023-09-20T12:12:45Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2023-09-21T08:04:30Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2023-09-21T08:04:39Z",
        "author": {
          "login": "azure-pipelines"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this be parametrized? (with this value as a default)",
              "createdAt": "2023-09-19T09:37:55Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -0,0 +1,123 @@\n+# Pipeline creates a dotnet with experimental msbuild dlls.\n+\n+trigger: none # Prevents this pipeline from triggering on check-ins\n+pr: none # don't run this on PR as well\n+\n+parameters:\n+  # Dotnet installer channel from where to take the latest dotnet bits.\n+  - name: DotnetInstallerChannel\n+    displayName: Dotnet installer channel\n+    type: string\n+  # Branch from the MSBuild Build CI pipeline. Default: main\n+  # Top run for the branch would be used to create an experimental insertion. \n+  - name: MSBuildBranch\n+    displayName: MSBuild Branch\n+    type: string\n+    default: 'refs/heads/main'\n+  # BuildID from the MSBuild Build CI pipeline. Overrides the choice of MSBuildBranch parameter \n+  - name: MSBuildBuildID\n+    displayName: MSBuild CI Run Override\n+    type: string\n+    default: 'default'\n+\n+pool:\n+  vmImage: windows-latest\n+\n+steps:\n+- powershell: |\n+    mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+    foreach ($sdk in $sdks)\n+    {\n+      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+      Invoke-WebRequest `\n+        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+    }\n+    mkdir '$(Pipeline.Workspace)/artifacts'\n+    \n+  displayName: Download latest dotnet sdks\n+\n+# Download latest build artifacts for a branch from MSBuild Build CI\n+- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n+  - task: DownloadBuildArtifacts@1\n+    inputs:\n+      buildType: specific\n+      project: DevDiv\n+      pipeline: 9434 # MSBuild Build CI",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "No, it is constant",
              "createdAt": "2023-09-19T10:00:27Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -0,0 +1,123 @@\n+# Pipeline creates a dotnet with experimental msbuild dlls.\n+\n+trigger: none # Prevents this pipeline from triggering on check-ins\n+pr: none # don't run this on PR as well\n+\n+parameters:\n+  # Dotnet installer channel from where to take the latest dotnet bits.\n+  - name: DotnetInstallerChannel\n+    displayName: Dotnet installer channel\n+    type: string\n+  # Branch from the MSBuild Build CI pipeline. Default: main\n+  # Top run for the branch would be used to create an experimental insertion. \n+  - name: MSBuildBranch\n+    displayName: MSBuild Branch\n+    type: string\n+    default: 'refs/heads/main'\n+  # BuildID from the MSBuild Build CI pipeline. Overrides the choice of MSBuildBranch parameter \n+  - name: MSBuildBuildID\n+    displayName: MSBuild CI Run Override\n+    type: string\n+    default: 'default'\n+\n+pool:\n+  vmImage: windows-latest\n+\n+steps:\n+- powershell: |\n+    mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+    foreach ($sdk in $sdks)\n+    {\n+      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+      Invoke-WebRequest `\n+        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+    }\n+    mkdir '$(Pipeline.Workspace)/artifacts'\n+    \n+  displayName: Download latest dotnet sdks\n+\n+# Download latest build artifacts for a branch from MSBuild Build CI\n+- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n+  - task: DownloadBuildArtifacts@1\n+    inputs:\n+      buildType: specific\n+      project: DevDiv\n+      pipeline: 9434 # MSBuild Build CI",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "It is the id of the pipeline itself, this number does not change.",
              "createdAt": "2023-09-19T10:01:04Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -0,0 +1,123 @@\n+# Pipeline creates a dotnet with experimental msbuild dlls.\n+\n+trigger: none # Prevents this pipeline from triggering on check-ins\n+pr: none # don't run this on PR as well\n+\n+parameters:\n+  # Dotnet installer channel from where to take the latest dotnet bits.\n+  - name: DotnetInstallerChannel\n+    displayName: Dotnet installer channel\n+    type: string\n+  # Branch from the MSBuild Build CI pipeline. Default: main\n+  # Top run for the branch would be used to create an experimental insertion. \n+  - name: MSBuildBranch\n+    displayName: MSBuild Branch\n+    type: string\n+    default: 'refs/heads/main'\n+  # BuildID from the MSBuild Build CI pipeline. Overrides the choice of MSBuildBranch parameter \n+  - name: MSBuildBuildID\n+    displayName: MSBuild CI Run Override\n+    type: string\n+    default: 'default'\n+\n+pool:\n+  vmImage: windows-latest\n+\n+steps:\n+- powershell: |\n+    mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+    foreach ($sdk in $sdks)\n+    {\n+      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+      Invoke-WebRequest `\n+        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+    }\n+    mkdir '$(Pipeline.Workspace)/artifacts'\n+    \n+  displayName: Download latest dotnet sdks\n+\n+# Download latest build artifacts for a branch from MSBuild Build CI\n+- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n+  - task: DownloadBuildArtifacts@1\n+    inputs:\n+      buildType: specific\n+      project: DevDiv\n+      pipeline: 9434 # MSBuild Build CI",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Right - but it's used on 2 places and once the script grows it might be more visible and understandable when defined on top of the script. e.g.:\r\n\r\n```\r\nvariables:\r\n  - name: _MsBuildCiPipelineId\r\n    value: 123\r\n\r\n(...)\r\n\r\n  - task: DownloadBuildArtifacts@1\r\n    inputs:\r\n      buildType: specific\r\n      project: DevDiv\r\n      pipeline: $(_MsBuildCiPipelineId)\r\n```",
              "createdAt": "2023-09-19T12:39:30Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -0,0 +1,123 @@\n+# Pipeline creates a dotnet with experimental msbuild dlls.\n+\n+trigger: none # Prevents this pipeline from triggering on check-ins\n+pr: none # don't run this on PR as well\n+\n+parameters:\n+  # Dotnet installer channel from where to take the latest dotnet bits.\n+  - name: DotnetInstallerChannel\n+    displayName: Dotnet installer channel\n+    type: string\n+  # Branch from the MSBuild Build CI pipeline. Default: main\n+  # Top run for the branch would be used to create an experimental insertion. \n+  - name: MSBuildBranch\n+    displayName: MSBuild Branch\n+    type: string\n+    default: 'refs/heads/main'\n+  # BuildID from the MSBuild Build CI pipeline. Overrides the choice of MSBuildBranch parameter \n+  - name: MSBuildBuildID\n+    displayName: MSBuild CI Run Override\n+    type: string\n+    default: 'default'\n+\n+pool:\n+  vmImage: windows-latest\n+\n+steps:\n+- powershell: |\n+    mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+    foreach ($sdk in $sdks)\n+    {\n+      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+      Invoke-WebRequest `\n+        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+    }\n+    mkdir '$(Pipeline.Workspace)/artifacts'\n+    \n+  displayName: Download latest dotnet sdks\n+\n+# Download latest build artifacts for a branch from MSBuild Build CI\n+- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n+  - task: DownloadBuildArtifacts@1\n+    inputs:\n+      buildType: specific\n+      project: DevDiv\n+      pipeline: 9434 # MSBuild Build CI",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "ah, right, now I see your point.\r\n",
              "createdAt": "2023-09-20T11:06:39Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -0,0 +1,123 @@\n+# Pipeline creates a dotnet with experimental msbuild dlls.\n+\n+trigger: none # Prevents this pipeline from triggering on check-ins\n+pr: none # don't run this on PR as well\n+\n+parameters:\n+  # Dotnet installer channel from where to take the latest dotnet bits.\n+  - name: DotnetInstallerChannel\n+    displayName: Dotnet installer channel\n+    type: string\n+  # Branch from the MSBuild Build CI pipeline. Default: main\n+  # Top run for the branch would be used to create an experimental insertion. \n+  - name: MSBuildBranch\n+    displayName: MSBuild Branch\n+    type: string\n+    default: 'refs/heads/main'\n+  # BuildID from the MSBuild Build CI pipeline. Overrides the choice of MSBuildBranch parameter \n+  - name: MSBuildBuildID\n+    displayName: MSBuild CI Run Override\n+    type: string\n+    default: 'default'\n+\n+pool:\n+  vmImage: windows-latest\n+\n+steps:\n+- powershell: |\n+    mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+    foreach ($sdk in $sdks)\n+    {\n+      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+      Invoke-WebRequest `\n+        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+    }\n+    mkdir '$(Pipeline.Workspace)/artifacts'\n+    \n+  displayName: Download latest dotnet sdks\n+\n+# Download latest build artifacts for a branch from MSBuild Build CI\n+- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n+  - task: DownloadBuildArtifacts@1\n+    inputs:\n+      buildType: specific\n+      project: DevDiv\n+      pipeline: 9434 # MSBuild Build CI",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Not sure on which version of ADO are we running - but it sounds like `${{ else }}` should be possible here (https://learn.microsoft.com/en-us/azure/devops/release-notes/2021/sprint-192-update#new-yaml-conditional-expressions)",
              "createdAt": "2023-09-19T09:43:29Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -0,0 +1,123 @@\n+# Pipeline creates a dotnet with experimental msbuild dlls.\n+\n+trigger: none # Prevents this pipeline from triggering on check-ins\n+pr: none # don't run this on PR as well\n+\n+parameters:\n+  # Dotnet installer channel from where to take the latest dotnet bits.\n+  - name: DotnetInstallerChannel\n+    displayName: Dotnet installer channel\n+    type: string\n+  # Branch from the MSBuild Build CI pipeline. Default: main\n+  # Top run for the branch would be used to create an experimental insertion. \n+  - name: MSBuildBranch\n+    displayName: MSBuild Branch\n+    type: string\n+    default: 'refs/heads/main'\n+  # BuildID from the MSBuild Build CI pipeline. Overrides the choice of MSBuildBranch parameter \n+  - name: MSBuildBuildID\n+    displayName: MSBuild CI Run Override\n+    type: string\n+    default: 'default'\n+\n+pool:\n+  vmImage: windows-latest\n+\n+steps:\n+- powershell: |\n+    mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+    foreach ($sdk in $sdks)\n+    {\n+      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+      Invoke-WebRequest `\n+        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+    }\n+    mkdir '$(Pipeline.Workspace)/artifacts'\n+    \n+  displayName: Download latest dotnet sdks\n+\n+# Download latest build artifacts for a branch from MSBuild Build CI\n+- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n+  - task: DownloadBuildArtifacts@1\n+    inputs:\n+      buildType: specific\n+      project: DevDiv\n+      pipeline: 9434 # MSBuild Build CI\n+      buildVersionToDownload: latestFromBranch\n+      branchName: '${{parameters.MSBuildBranch}}'  \n+      artifactName: bin\n+      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n+      itemPattern: \"MSBuild.Bootstrap/**\"  \n+    displayName: Download latest msbuild from branch\n+\n+# Download build artifacts for MSBuild Build CI specific build\n+- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "I tried to use ${{ else }}, but for some reason got the formatting error. I might have done something wrong, or it might be not supported.",
              "createdAt": "2023-09-19T10:03:23Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -0,0 +1,123 @@\n+# Pipeline creates a dotnet with experimental msbuild dlls.\n+\n+trigger: none # Prevents this pipeline from triggering on check-ins\n+pr: none # don't run this on PR as well\n+\n+parameters:\n+  # Dotnet installer channel from where to take the latest dotnet bits.\n+  - name: DotnetInstallerChannel\n+    displayName: Dotnet installer channel\n+    type: string\n+  # Branch from the MSBuild Build CI pipeline. Default: main\n+  # Top run for the branch would be used to create an experimental insertion. \n+  - name: MSBuildBranch\n+    displayName: MSBuild Branch\n+    type: string\n+    default: 'refs/heads/main'\n+  # BuildID from the MSBuild Build CI pipeline. Overrides the choice of MSBuildBranch parameter \n+  - name: MSBuildBuildID\n+    displayName: MSBuild CI Run Override\n+    type: string\n+    default: 'default'\n+\n+pool:\n+  vmImage: windows-latest\n+\n+steps:\n+- powershell: |\n+    mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+    foreach ($sdk in $sdks)\n+    {\n+      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+      Invoke-WebRequest `\n+        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+    }\n+    mkdir '$(Pipeline.Workspace)/artifacts'\n+    \n+  displayName: Download latest dotnet sdks\n+\n+# Download latest build artifacts for a branch from MSBuild Build CI\n+- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n+  - task: DownloadBuildArtifacts@1\n+    inputs:\n+      buildType: specific\n+      project: DevDiv\n+      pipeline: 9434 # MSBuild Build CI\n+      buildVersionToDownload: latestFromBranch\n+      branchName: '${{parameters.MSBuildBranch}}'  \n+      artifactName: bin\n+      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n+      itemPattern: \"MSBuild.Bootstrap/**\"  \n+    displayName: Download latest msbuild from branch\n+\n+# Download build artifacts for MSBuild Build CI specific build\n+- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      }
    ]
  }
}