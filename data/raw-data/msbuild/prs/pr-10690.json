{
  "number": 10690,
  "title": "Short circuit repetitive BuildManager.Dispose calls",
  "body": "Fixes #10260\r\n\r\n### Context\r\nThe `BuildManager.Dispose` was idempotent, but it wasn't very clear - needed code archeology, plus was easy to break.\r\nLet's make it more clear.\r\n\r\n### Changes Made\r\nChanged just 2 lines:\r\n* Consolidated `disposing` and `_disposed` check before lock (performing first the cheaper one on local parameter)\r\n* Added explicit short circuit check of `_disposed` after entering the lock\r\n\r\nRest of the displayed diff is caused by changed indention due to consolidating the 2 checks before locking.\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2024-09-23T13:18:42Z",
  "updatedAt": "2024-10-07T17:04:50Z",
  "closedAt": "2024-10-07T17:04:49Z",
  "mergedAt": "2024-10-07T17:04:49Z",
  "additions": 34,
  "deletions": 31,
  "changedFiles": 1,
  "headRefName": "proto/buildmgr-dispose",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "31fabf15bdb200047623f62343a3ee08f32a1bf4",
          "message": "Short circuit double dispose",
          "committedDate": "2024-09-23T13:11:09Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": []
  }
}