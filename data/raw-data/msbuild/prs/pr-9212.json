{
  "number": 9212,
  "title": "Remove System.Security.Permissions from MSBuild",
  "body": "Fixes https://github.com/dotnet/msbuild/issues/9213\r\n\r\n### Context\r\nSystem.Security.Permissions is obsolete.  Referencing the package brings in this obsolete library and a number of other libraries are not needed (System.Windows.Extensions).\r\n\r\n### Changes Made\r\nRemove reference to System.Security.Permissions since all the source that uses it is under ifdef that's [only defined for .NETFramework](https://github.com/dotnet/msbuild/blob/3c910ba83fc9dbd8e12f50dddc8c381404f928c4/src/Directory.BeforeCommon.targets#L17).\r\nTo fully remove it I needed to also update to 8.0 packages (since 7.0 ConfigurationManager still referenced SSP in 7.0).  If we wanted to fix this without the update we could hack a direct reference to SSP with ExcludeAssets=all.\r\n\r\n### Testing\r\nBuild \ud83e\udd1e \r\n\r\n### Notes\r\nWe may not want to take this yet because @rainersigwald tells me VS needs MSBuild to stay on 7.0 until after GA.  Can't say I fully understand that but opening up this PR to prove the dependency can be removed.",
  "state": "CLOSED",
  "createdAt": "2023-09-08T19:22:19Z",
  "updatedAt": "2023-09-09T00:03:25Z",
  "closedAt": "2023-09-08T23:49:00Z",
  "mergedAt": null,
  "additions": 62,
  "deletions": 72,
  "changedFiles": 10,
  "headRefName": "remove.ssp",
  "isDraft": false,
  "author": {
    "login": "ericstj"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "41f92d101b672fd2da4ef21f9ab23620b35e463b",
          "message": "Remove System.Security.Permissions PackageReference",
          "committedDate": "2023-09-08T18:34:42Z",
          "author": {
            "name": "Eric StJohn",
            "email": "ericstj@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4c5594698762cbada3cd66df7b77f69ed7b15b75",
          "message": "Update runtime packages to 8.0 Preview 7",
          "committedDate": "2023-09-08T19:18:16Z",
          "author": {
            "name": "Eric StJohn",
            "email": "ericstj@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "See also https://github.com/dotnet/msbuild/pull/9055",
        "createdAt": "2023-09-08T20:16:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Is it obsolete in .NET Framework, too? I'd imagine we wouldn't touch that, in which case perhaps we should keep the reference but only if we're building for framework?",
        "createdAt": "2023-09-08T22:23:47Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Actually looks like https://github.com/dotnet/msbuild/pull/9055 already takes care of this.  Closing in favor.",
        "createdAt": "2023-09-08T23:49:00Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "> Is it obsolete in .NET Framework, too? I'd imagine we wouldn't touch that, in which case perhaps we should keep the reference but only if we're building for framework?\r\n\r\nWe don't need any reference on Framework since the package doesn't define anything there.  We'd only need the package on framework if some other library built against netstandard2.0 and needed it.",
        "createdAt": "2023-09-08T23:53:40Z",
        "author": {
          "login": "ericstj"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Whoops! Regex replace a bit too aggressive hre I think",
              "createdAt": "2023-09-08T19:27:30Z",
              "path": "src/MSBuild/app.config",
              "diffHunk": "@@ -111,27 +111,27 @@\n         <!-- Redirects for components dropped by Visual Studio -->\n         <dependentAssembly>\n           <assemblyIdentity name=\"Microsoft.Activities.Build\" culture=\"neutral\" publicKeyToken=\"31bf3856ad364e35\" />\n-          <bindingRedirect oldVersion=\"4.0.0.0\" newVersion=\"17.0.0.0\" />\n-          <codeBase version=\"17.0.0.0\" href=\".\\amd64\\Microsoft.Activities.Build.dll\" />\n+          <bindingRedirect oldVersion=\"4.0.0.0\" newVersion=\"18.0.0.0\" />\n+          <codeBase version=\"18.0.0.0\" href=\".\\amd64\\Microsoft.Activities.Build.dll\" />\n         </dependentAssembly>\n         <dependentAssembly>\n           <assemblyIdentity name=\"XamlBuildTask\" culture=\"neutral\" publicKeyToken=\"31bf3856ad364e35\" />\n-          <bindingRedirect oldVersion=\"4.0.0.0-17.0.0.0\" newVersion=\"17.0.0.0\" />\n-          <codeBase version=\"17.0.0.0\" href=\".\\amd64\\XamlBuildTask.dll\" />\n+          <bindingRedirect oldVersion=\"4.0.0.0-18.0.0.0\" newVersion=\"18.0.0.0\" />\n+          <codeBase version=\"18.0.0.0\" href=\".\\amd64\\XamlBuildTask.dll\" />\n         </dependentAssembly>\n \n         <!-- Workaround for crash in C++ CodeAnalysis scenarios due to https://github.com/dotnet/msbuild/issues/1675 -->\n         <dependentAssembly>\n           <assemblyIdentity name=\"FxCopTask\" culture=\"neutral\" publicKeyToken=\"b03f5f7f11d50a3a\" />\n-          <codeBase version=\"17.0.0.0\" href=\"..\\..\\Microsoft\\VisualStudio\\v17.0\\CodeAnalysis\\FxCopTask.dll\" />\n+          <codeBase version=\"18.0.0.0\" href=\"..\\..\\Microsoft\\VisualStudio\\v17.0\\CodeAnalysis\\FxCopTask.dll\" />\n         </dependentAssembly>\n         <dependentAssembly>\n           <assemblyIdentity name=\"Microsoft.VisualStudio.CodeAnalysis\" culture=\"neutral\" publicKeyToken=\"b03f5f7f11d50a3a\" />\n-          <codeBase version=\"17.0.0.0\" href=\"..\\..\\Microsoft\\VisualStudio\\v17.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.dll\" />\n+          <codeBase version=\"18.0.0.0\" href=\"..\\..\\Microsoft\\VisualStudio\\v17.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.dll\" />\n         </dependentAssembly>\n         <dependentAssembly>\n           <assemblyIdentity name=\"Microsoft.VisualStudio.CodeAnalysis.Sdk\" culture=\"neutral\" publicKeyToken=\"b03f5f7f11d50a3a\" />\n-          <codeBase version=\"17.0.0.0\" href=\"..\\..\\Microsoft\\VisualStudio\\v17.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll\" />\n+          <codeBase version=\"18.0.0.0\" href=\"..\\..\\Microsoft\\VisualStudio\\v17.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll\" />",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What implications does this have on coherency? I know source-build will override with \"whatever is current\" but our real packages would have a stale reference (to RC2) at GA, right? So we'd ideally need to wedge ourselves between runtime and sdk, where we're not currently? That sounds unfortunate.",
              "createdAt": "2023-09-08T19:29:23Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -7,57 +7,52 @@\n       <SourceBuild RepoName=\"source-build-reference-packages\" ManagedOnly=\"true\" />\n     </Dependency>\n     <!-- Necessary for source-build. This allows the live version of the package to be used by source-build. -->\n-    <Dependency Name=\"System.CodeDom\" Version=\"7.0.0\">\n+    <Dependency Name=\"System.CodeDom\" Version=\"8.0.0-preview.7.23375.6\">",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I was really just doing this as a POC.   As we noticed MSBuild/SDK was actually shipping the 7.0 binares in the SDK up until RC when they started updating the transitive references.",
              "createdAt": "2023-09-08T23:51:52Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -7,57 +7,52 @@\n       <SourceBuild RepoName=\"source-build-reference-packages\" ManagedOnly=\"true\" />\n     </Dependency>\n     <!-- Necessary for source-build. This allows the live version of the package to be used by source-build. -->\n-    <Dependency Name=\"System.CodeDom\" Version=\"7.0.0\">\n+    <Dependency Name=\"System.CodeDom\" Version=\"8.0.0-preview.7.23375.6\">",
              "author": {
                "login": "ericstj"
              }
            },
            {
              "body": "It does seem busted that MSBuild packages released in 8.0 are going to reference 7.0...  Not sure I agree with that layering. ",
              "createdAt": "2023-09-09T00:03:24Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -7,57 +7,52 @@\n       <SourceBuild RepoName=\"source-build-reference-packages\" ManagedOnly=\"true\" />\n     </Dependency>\n     <!-- Necessary for source-build. This allows the live version of the package to be used by source-build. -->\n-    <Dependency Name=\"System.CodeDom\" Version=\"7.0.0\">\n+    <Dependency Name=\"System.CodeDom\" Version=\"8.0.0-preview.7.23375.6\">",
              "author": {
                "login": "ericstj"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "The SCI version in Visual Studio is controlled by the Roslyn team and it generally takes only stable versions, with nontrivial time to update. We have to match the central VS one by policy. So we can make this move only for our net8.0 target right now.",
              "createdAt": "2023-09-08T20:15:39Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -26,21 +26,21 @@\n   </PropertyGroup>\n   <!-- Production Dependencies -->\n   <PropertyGroup>\n-    <SystemCollectionsImmutableVersion>7.0.0</SystemCollectionsImmutableVersion>\n-    <SystemConfigurationConfigurationManagerVersion>7.0.0</SystemConfigurationConfigurationManagerVersion>\n+    <SystemCollectionsImmutableVersion>8.0.0-preview.7.23375.6</SystemCollectionsImmutableVersion>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}