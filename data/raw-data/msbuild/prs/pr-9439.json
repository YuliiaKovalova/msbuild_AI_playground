{
  "number": 9439,
  "title": "Load Microsoft.DotNet.MSBuildSdkResolver into default load context (MSBuild.exe only)",
  "body": "Fixes #9303\r\n\r\n### Context\r\n\r\nAfter a new version of `VS.Redist.Common.Net.Core.SDK.MSBuildExtensions` is inserted into VS, a native image for `Microsoft.DotNet.MSBuildSdkResolver` will be generated, both for devenv.exe and MSBuild.exe (see https://github.com/dotnet/installer/pull/17732).\r\n\r\nWe currently load SDK resolvers using `Assembly.LoadFrom` on .NET Framework, which disqualifies it from using native images even if they existed. This PR makes us use the native image.\r\n\r\n### Changes Made\r\n\r\nAdded a code path to use `Assembly.Load` to load resolver assemblies. The call is made such that if the assembly cannot be found by simple name, it falls back to loading by path into the load-from context, just like today. The new code path is enabled only for `Microsoft.DotNet.MSBuildSdkResolver` under a change-wave check.\r\n\r\n### Testing\r\n\r\nExperimental insertions.\r\n\r\n### Notes\r\n\r\nUsing `qualifyAssembly` in the app config has the advantage of keeping everything _field-configurable_, i.e. in the unlikely case that a custom build environment will ship with a different version of the resolver, it will be possible to compensate for that by tweaking the config file. The disadvantage is that the same `qualifyAssembly` will need to be added to devenv.exe.config because .pkgdef doesn't support this kind of entry, to my best knowledge. It should be a one-time change, though, because [we have frozen the version of `Microsoft.DotNet.MSBuildSdkResolver` to 8.0.100.0](https://github.com/dotnet/sdk/pull/36733).",
  "state": "MERGED",
  "createdAt": "2023-11-20T15:07:27Z",
  "updatedAt": "2023-12-13T16:44:10Z",
  "closedAt": "2023-12-13T16:44:10Z",
  "mergedAt": "2023-12-13T16:44:10Z",
  "additions": 45,
  "deletions": 0,
  "changedFiles": 4,
  "headRefName": "9303-sdk-resolver",
  "isDraft": false,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "ladipro"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a4bfd1cc1a8093dbf698a1e95192152dfb00ab4a",
          "message": "Load Microsoft.DotNet.MSBuildSdkResolver into default load context (MSBuild.exe only)",
          "committedDate": "2023-12-13T16:03:09Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "90997dedf918d2a33d909a0bffda772f6ac899d4",
          "message": "Revert changes to Microsoft.Build.pkgdef",
          "committedDate": "2023-12-13T16:03:13Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Should this go to 17.9?",
        "createdAt": "2023-12-07T14:43:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I have retargeted the PR to 17.9.",
        "createdAt": "2023-12-08T15:52:56Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Shouldn't these go in the SDK-side VSIX, rather than ours? I don't know the implication of us delivering this when the files aren't guaranteed to be in place/aren't guaranteed to be in place at the time of our install (which is pretty early).",
              "createdAt": "2023-11-29T16:59:47Z",
              "path": "src/Build/Microsoft.Build.pkgdef",
              "diffHunk": "@@ -29,3 +29,17 @@\n \"culture\"=\"neutral\"\n \"oldVersion\"=\"0.0.0.0-1.0.0.0\"\n \"newVersion\"=\"1.0.0.0\"\n+\n+[$RootKey$\\RuntimeConfiguration\\dependentAssembly\\codeBase\\{838C80EF-8658-480D-A7DD-F7530A21142C}]\n+\"name\"=\"Microsoft.DotNet.MSBuildSdkResolver\"",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Great point. It should be just adding entries to `devenv.exe.config` but definitely better if the component that carries the files does it.\r\n\r\nI have reverted the changes here and will pursue it SDK-side. The impact is way smaller than for `MSBuild.exe` anyway (number of `devenv.exe` process launches << number of `MSBuild.exe` process launches).",
              "createdAt": "2023-12-07T10:44:27Z",
              "path": "src/Build/Microsoft.Build.pkgdef",
              "diffHunk": "@@ -29,3 +29,17 @@\n \"culture\"=\"neutral\"\n \"oldVersion\"=\"0.0.0.0-1.0.0.0\"\n \"newVersion\"=\"1.0.0.0\"\n+\n+[$RootKey$\\RuntimeConfiguration\\dependentAssembly\\codeBase\\{838C80EF-8658-480D-A7DD-F7530A21142C}]\n+\"name\"=\"Microsoft.DotNet.MSBuildSdkResolver\"",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I'm a bit worried about this one because I can see a future where the SDK breaks this dependency (in favor of STJ) and stops shipping it . . . and then this dangling codeBase might break tasks that use Netwonsoft. Is there a way to make that a build error for SDK so we can coordinate a removal?",
              "createdAt": "2023-11-29T17:09:55Z",
              "path": "src/MSBuild/app.amd64.config",
              "diffHunk": "@@ -184,6 +184,21 @@\n           <assemblyIdentity name=\"Microsoft.VisualStudio.CodeAnalysis.Sdk\" culture=\"neutral\" publicKeyToken=\"b03f5f7f11d50a3a\" />\n           <codeBase version=\"17.0.0.0\" href=\"..\\..\\..\\Microsoft\\VisualStudio\\v17.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll\" />\n         </dependentAssembly>\n+\n+        <!-- Redirects for SDK resolver components -->\n+        <qualifyAssembly partialName=\"Microsoft.DotNet.MSBuildSdkResolver\" fullName=\"Microsoft.DotNet.MSBuildSdkResolver, Version=8.0.100.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" />\n+        <dependentAssembly>\n+          <assemblyIdentity name=\"Microsoft.DotNet.MSBuildSdkResolver\" culture=\"neutral\" publicKeyToken=\"adb9793829ddae60\" />\n+          <codeBase version=\"8.0.100.0\" href=\"..\\SdkResolvers\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.DotNet.MSBuildSdkResolver.dll\" />\n+        </dependentAssembly>\n+        <dependentAssembly>\n+          <assemblyIdentity name=\"Microsoft.Deployment.DotNet.Releases\" culture=\"neutral\" publicKeyToken=\"31bf3856ad364e35\" />\n+          <codeBase version=\"2.0.0.0\" href=\"..\\SdkResolvers\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.Deployment.DotNet.Releases.dll\" />\n+        </dependentAssembly>\n+        <dependentAssembly>\n+          <assemblyIdentity name=\"Newtonsoft.Json\" culture=\"neutral\" publicKeyToken=\"30ad4fe6b2a6aeed\" />\n+          <codeBase version=\"13.0.0.0\" href=\"..\\SdkResolvers\\Microsoft.DotNet.MSBuildSdkResolver\\Newtonsoft.Json.dll\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Yes, it's already fragile and this PR is definitely making it worse. I've put together https://github.com/dotnet/sdk/pull/37381.",
              "createdAt": "2023-12-07T16:28:14Z",
              "path": "src/MSBuild/app.amd64.config",
              "diffHunk": "@@ -184,6 +184,21 @@\n           <assemblyIdentity name=\"Microsoft.VisualStudio.CodeAnalysis.Sdk\" culture=\"neutral\" publicKeyToken=\"b03f5f7f11d50a3a\" />\n           <codeBase version=\"17.0.0.0\" href=\"..\\..\\..\\Microsoft\\VisualStudio\\v17.0\\CodeAnalysis\\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll\" />\n         </dependentAssembly>\n+\n+        <!-- Redirects for SDK resolver components -->\n+        <qualifyAssembly partialName=\"Microsoft.DotNet.MSBuildSdkResolver\" fullName=\"Microsoft.DotNet.MSBuildSdkResolver, Version=8.0.100.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" />\n+        <dependentAssembly>\n+          <assemblyIdentity name=\"Microsoft.DotNet.MSBuildSdkResolver\" culture=\"neutral\" publicKeyToken=\"adb9793829ddae60\" />\n+          <codeBase version=\"8.0.100.0\" href=\"..\\SdkResolvers\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.DotNet.MSBuildSdkResolver.dll\" />\n+        </dependentAssembly>\n+        <dependentAssembly>\n+          <assemblyIdentity name=\"Microsoft.Deployment.DotNet.Releases\" culture=\"neutral\" publicKeyToken=\"31bf3856ad364e35\" />\n+          <codeBase version=\"2.0.0.0\" href=\"..\\SdkResolvers\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.Deployment.DotNet.Releases.dll\" />\n+        </dependentAssembly>\n+        <dependentAssembly>\n+          <assemblyIdentity name=\"Newtonsoft.Json\" culture=\"neutral\" publicKeyToken=\"30ad4fe6b2a6aeed\" />\n+          <codeBase version=\"13.0.0.0\" href=\"..\\SdkResolvers\\Microsoft.DotNet.MSBuildSdkResolver\\Newtonsoft.Json.dll\" />",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}