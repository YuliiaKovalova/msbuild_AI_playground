{
  "number": 8469,
  "title": "Add BuildErrorWithContent EventArgs",
  "body": "Fixes #\r\n\r\n### Context\r\n\r\n\r\n### Changes Made\r\n\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\n",
  "state": "CLOSED",
  "createdAt": "2023-02-18T00:39:20Z",
  "updatedAt": "2024-02-22T22:28:23Z",
  "closedAt": "2023-05-31T01:01:06Z",
  "mergedAt": null,
  "additions": 162,
  "deletions": 15,
  "changedFiles": 2,
  "headRefName": "dev/yuehuang/main_buildarg",
  "isDraft": true,
  "author": {
    "login": "yuehuang010"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "fab9ea7a1679bba338f870694e3bf32f73b473a2",
          "message": "Add BuildErrorWithContent EventArgs",
          "committedDate": "2023-02-18T00:38:45Z",
          "author": {
            "name": "Felix Huang",
            "email": "yuehuang@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Close old PR.",
        "createdAt": "2023-05-31T01:01:22Z",
        "author": {
          "login": "yuehuang010"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: we should stop copying over the `SerializableAttribute` and the comment above.\r\nWe use custom serialization for `BuildEventArgs`",
              "createdAt": "2023-02-20T15:40:15Z",
              "path": "src/Framework/BuildErrorWithContentEventArgs.cs",
              "diffHunk": "@@ -0,0 +1,83 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.IO;\n+using Microsoft.Build.Shared;\n+\n+#nullable disable\n+\n+namespace Microsoft.Build.Framework\n+{\n+    /// <summary>\n+    /// Arguments for error events with additional content\n+    /// </summary>\n+    // WARNING: marking a type [Serializable] without implementing\n+    // ISerializable imposes a serialization contract -- it is a\n+    // promise to never change the type's fields i.e. the type is\n+    // immutable; adding new fields in the next version of the type\n+    // without following certain special FX guidelines, can break both\n+    // forward and backward compatibility\n+    [Serializable]",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What's the `SimpleText` field here?",
              "createdAt": "2023-02-22T17:46:24Z",
              "path": "src/Framework/BuildErrorWithContentEventArgs.cs",
              "diffHunk": "@@ -0,0 +1,83 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.IO;\n+using Microsoft.Build.Shared;\n+\n+#nullable disable\n+\n+namespace Microsoft.Build.Framework\n+{\n+    /// <summary>\n+    /// Arguments for error events with additional content\n+    /// </summary>\n+    // WARNING: marking a type [Serializable] without implementing\n+    // ISerializable imposes a serialization contract -- it is a\n+    // promise to never change the type's fields i.e. the type is\n+    // immutable; adding new fields in the next version of the type\n+    // without following certain special FX guidelines, can break both\n+    // forward and backward compatibility\n+    [Serializable]\n+    public class BuildErrorWithContentEventArgs : BuildErrorEventArgs\n+    {\n+        public string AdditionalContentType { get; protected set; }\n+        public string AdditionalContentText { get; protected set; }\n+        public string AdditionalContentSimpleText { get; protected set; }",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}