{
  "number": 7296,
  "title": "Reuse StringBuilders in EventArgsFormatting",
  "body": "While I was editing in this area I noticed that the calling pattern around StringBuilders in FormatEventMessage looked allocatey.\r\n\r\nInstead of creating two throwaway StringBuilders to format a single message,\r\n\r\n1. Make a guess at the initial size based on the maximum format string,\r\n2. Use a StringBuilder from StringBuilderCache, and\r\n3. Reuse the builder between \"construct format string\" and \"get final message\"\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2022-01-14T21:46:20Z",
  "updatedAt": "2022-01-25T09:57:58Z",
  "closedAt": "2022-01-25T09:57:58Z",
  "mergedAt": "2022-01-25T09:57:58Z",
  "additions": 29,
  "deletions": 2,
  "changedFiles": 2,
  "headRefName": "stringbuilder\u267b\ufe0f",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": {
    "title": "VS 17.2"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance",
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "de78f7fb528321f3fc4ba1bf865f0ada8b215abb",
          "message": "Append{Format,Line} in ReuseableStringBuilder\n\nThese are present on StringBuilder but weren't in our wrapper.",
          "committedDate": "2022-01-18T21:37:20Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a7460afc34dc2e02d33b4136b319c7046c7015b2",
          "message": "Reuse StringBuilders in EventArgsFormatting\n\nWhile I was editing in this area I noticed that the calling pattern\naround StringBuilders in FormatEventMessage looked allocatey.\n\nInstead of creating two throwaway StringBuilders to format a single\nmessage,\n\n1. Grab a ReusableStringBuilder\n2. Reuse the builder between \"construct format string\" and \"get final\n   message\".\n\nWe chose ReusableStringBuilder over StringBuilderCache because logging\nsometimes creates strings that are _much_ larger than the 512 character\nlimit of SBC. That also reduces the need to prereserve a size: the\nprocess-wide pool's elements should be pretty big already.\n\nSee https://github.com/dotnet/msbuild/issues/2697#issuecomment-981140614\nfor stats on string length.",
          "committedDate": "2022-01-18T21:37:21Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> LGTM. Out of curiosity I grepped for all uses of `new StringBuilder` and...there are a lot. I doubt most of them are worth converting but one of them may catch someone's eye.\r\n\r\n/cc: @elachlan if you're interested. I wouldn't bother with tests or code that just runs a couple times, but if you've noticed something that runs a lot and feel motivated to fix it...",
        "createdAt": "2022-01-15T00:18:58Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> > LGTM. Out of curiosity I grepped for all uses of `new StringBuilder` and...there are a lot. I doubt most of them are worth converting but one of them may catch someone's eye.\n> \n> /cc: @elachlan if you're interested. I wouldn't bother with tests or code that just runs a couple times, but if you've noticed something that runs a lot and feel motivated to fix it...\n\nThanks, maybe create an issue and I'll see if I can get around to it. The Analyzers are keeping me pretty busy at the moment.",
        "createdAt": "2022-01-15T00:22:48Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Talked to @rokonec about this and we think based on the numbers from https://github.com/dotnet/msbuild/issues/2697#issuecomment-981140614 that using the full-strength `ReusableStringBuilder` here is likely a good idea, so I'm going to do that.",
        "createdAt": "2022-01-18T18:21:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Talked to @rokonec about this and we think based on the numbers from [#2697 (comment)](https://github.com/dotnet/msbuild/issues/2697#issuecomment-981140614) that using the full-strength `ReusableStringBuilder` here is likely a good idea, so I'm going to do that.\r\n\r\nDone.",
        "createdAt": "2022-01-18T22:33:19Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I think this could theoretically be up to 51 characters long? Not that it should really matter...",
              "createdAt": "2022-01-15T00:15:52Z",
              "path": "src/Shared/EventArgsFormatting.cs",
              "diffHunk": "@@ -219,7 +219,9 @@ internal static string FormatEventMessage\n             string logOutputProperties\n         )\n         {\n-            StringBuilder format = new StringBuilder();\n+            // capacity is the longest possible path through the below\n+            // to avoid reallocating while constructing the string\n+            StringBuilder format = StringBuilderCache.Acquire(48);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Nit: Isn't this not available on some platform?",
              "createdAt": "2022-01-15T00:16:16Z",
              "path": "src/Shared/EventArgsFormatting.cs",
              "diffHunk": "@@ -328,9 +330,11 @@ string logOutputProperties\n \n             string finalFormat = format.ToString();\n \n+            // Reuse the string builder to create the final message\n+            StringBuilder formattedMessage = format.Clear();",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "It is nestandard 1.0 so it is everywhere but .NET 3.5-",
              "createdAt": "2022-01-17T12:16:14Z",
              "path": "src/Shared/EventArgsFormatting.cs",
              "diffHunk": "@@ -328,9 +330,11 @@ string logOutputProperties\n \n             string finalFormat = format.ToString();\n \n+            // Reuse the string builder to create the final message\n+            StringBuilder formattedMessage = format.Clear();",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      }
    ]
  }
}