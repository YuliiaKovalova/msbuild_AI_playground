{
  "number": 7313,
  "title": "Remove XML meta tag (`<?xml?>`) from all XML-derived files",
  "body": "Contributes to #4779 and #6645\r\n\r\n### Context\r\n\r\nhttps://github.com/dotnet/msbuild/pull/7169#issuecomment-999913134\r\n\r\nJust as we removed `xmlns` from all XML build files, with this patch, we also remove `<?xml?>` tag from all XML-derived files in the repo. All these files are by default `utf-8` and version `1.0` unless specified otherwise. So, it is safe to remove the meta tag.\r\n\r\n### Changes Made\r\n\r\n- Adjust new line between last two XML elements.\r\n- Remove XML meta tag (`<?xml?>`) from all XML-based files.\r\n- Remove trailing new-line from all XML-based files.\r\n- Remove trailing white-space from all XML-based files.\r\n\r\n### Testing\r\n\r\nAs long as CI succeeds! and we have some time to dogfood before shipping next release, I think!\r\n\r\n### Notes\r\n\r\n**Rebase merge** if possible. Git introduced a new feature where a repo can ignore certain commits that'll mess up `git blame`. If this was to be merged as a *merge* commit and if that commit was ignored, it'll ignore non-whitespace changes too. So, **Rebase merge** if possible!",
  "state": "CLOSED",
  "createdAt": "2022-01-21T15:58:11Z",
  "updatedAt": "2022-01-23T07:28:50Z",
  "closedAt": "2022-01-23T07:28:50Z",
  "mergedAt": null,
  "additions": 751,
  "deletions": 861,
  "changedFiles": 272,
  "headRefName": "hotfix/sdk-prep/remove-xml-meta",
  "isDraft": true,
  "author": {
    "login": "Nirmal4G"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "25cd9cb9ccbae587906ad506f9d0bd870b2eb6a3",
          "message": "Remove XML meta tag (`<?xml?>`)\n\nAdjust new line between last two XML elements.\nRemove XML meta tag (`<?xml?>`) from all XML-based files.",
          "committedDate": "2022-01-21T08:30:04Z",
          "author": {
            "name": "Nirmal Guru",
            "email": "Nirmal4G@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1d173c097375790788f97fe707bd26ab469a4753",
          "message": "Remove trailing new-line and white-space\n\nRemove trailing new-line from all XML-based files.\nRemove trailing white-space from all XML-based files.",
          "committedDate": "2022-01-21T08:30:06Z",
          "author": {
            "name": "Nirmal Guru",
            "email": "Nirmal4G@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Your branch name says hotfix, but is this actually a hotfix for something serious? If so, what? It looked more like cleanup to me.\r\n\r\n> Rebase merge if possible. Git introduced a new feature where a repo can ignore certain commits that'll mess up git blame. If this was to be merged as a merge commit and if that commit was ignored, it'll ignore non-whitespace changes too. So, Rebase merge if possible!\r\n\r\nWe mostly squash things, though you have pretty clean commits for this PR.",
        "createdAt": "2022-01-21T16:49:29Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Honestly, I prefer to keep this tag. \ud83d\ude2c ",
        "createdAt": "2022-01-21T16:51:43Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "> Remove trailing new-line from all XML-based files.\r\n\r\nI don't understand how people can tolerate this\r\n![image](https://user-images.githubusercontent.com/1408396/150567472-4c09b102-1e08-4d5a-9d7d-25aa64a985cc.png)\r\n",
        "createdAt": "2022-01-21T16:52:58Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "> Adjust new line between last two XML elements.\r\n\r\nThis change seemed to add a bunch of inconsistency. If the file has no other blank lines, I prefer to keep the end that way. The only case where I can see making this change is if the file _already_ had a blank line after the opening element, in which case the blank line at the end matches.",
        "createdAt": "2022-01-21T16:55:11Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "When you proposed this before, we declined it. I don't think anything has changed based on the comments you linked. Why should we take this now?",
        "createdAt": "2022-01-21T17:10:23Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@Forgind\r\n\r\n> Your branch name says hotfix\r\n\r\nI use Git Flow, I should setup some additional branch roots. Sorry for the confusion!\r\n\r\n> We mostly squash things, though you have pretty clean commits for this PR.\r\n\r\nThanks, and it's okay. Whatever works for the repo!",
        "createdAt": "2022-01-21T17:18:12Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "@sharwell \r\n\r\n> I don't understand how people can tolerate this\r\n\r\nDo you prefer having new-line at the end of file for structured (*XML, C#, etc\u2026*) files?\r\n\r\n> This change seemed to add a bunch of inconsistency.\r\n\r\nThis is **for** consistency! \ud83d\ude05\r\n\r\n> if the file *already* had a blank line after the opening element, in which case the blank line at the end matches.\r\n\r\nExactly this!? I did check before; some files don't have matching new-lines. This patch has that applied.",
        "createdAt": "2022-01-21T17:18:31Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "@rainersigwald\r\n\r\n> When you proposed this before, we declined it.\r\n\r\nWhen? I did propose this in an issue but never really went along until I saw #7169. So, I thought, since, we just removed `xmlns`, this would be a nice time to remove `<?xml?>` tags too!?",
        "createdAt": "2022-01-21T17:21:52Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "#6645 was closed in https://github.com/dotnet/msbuild/issues/6645#issuecomment-871718005.",
        "createdAt": "2022-01-21T17:25:24Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Do you prefer having new-line at the end of file for structured (_XML, C#, etc\u2026_) files?\r\n\r\nThe almost universal UNIXy style preference, demonstrated by both core Git and GitHub's UI, is that all text files end with a newline.",
        "createdAt": "2022-01-21T17:27:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> #6645 was closed in [#6645 (comment)](https://github.com/dotnet/msbuild/issues/6645#issuecomment-871718005).\r\n\r\nI thought it was only for BOM removal in **source** files!? Do you not want all the other changes? I only did this because of #7169!\r\n\r\n> \u2026almost universal UNIX-y style preference\u2026all text files end with a new-line.\r\n\r\nI don't prefer it for structured files where it can end with a tag or end-symbol since, hidden symbols could bleed into that new-line and could cause all sorts of problems! But I do prefer in regular text or semi-structured files like YAML, Markdown, INI-like files!",
        "createdAt": "2022-01-21T17:38:27Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> Do you prefer having new-line at the end of file for structured (XML, C#, etc\u2026) files?\r\n\r\nYes. This seems to be the normal expectation for users as well (users seem split between either not caring, or caring and having a preference for the trailing newline, but the rare outlier is a user who prefers to remove it).\r\n\r\n> This is for consistency! \ud83d\ude05\r\n\r\nIt appears to have not achieved this goal. While two separate files may be consistent with each other, the more common review case is looking at just one file by itself, and in that context the blank line is not consistent.",
        "createdAt": "2022-01-21T18:15:39Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "> the more common review case is looking at just one file by itself, and in that context the blank line is not consistent.\r\n\r\n This is my intention as well. Can you mark which files that are not consistent, I'll **fix** it!",
        "createdAt": "2022-01-21T18:23:13Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> Can you mark which files that are not consistent, I'll fix it!\r\n\r\nI was not able to identify any file which was inconsistent or needed a fix prior to this PR.",
        "createdAt": "2022-01-21T18:31:44Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "I don't think this PR should be merged; it seems to be a contentious style change which isn't a good use of the team's time given the other work we could be pursuing.",
        "createdAt": "2022-01-21T20:07:56Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Maybe not now but sometime far in the future? \ud83d\ude05 So, keeping it in draft wouldn't hurt, right? \ud83d\ude09",
        "createdAt": "2022-01-21T22:28:54Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "I don't think leaving it open has much benefit, since there's no clear direction. I'd rather close it and not have any long-term draft PRs.",
        "createdAt": "2022-01-21T22:52:04Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@sharwell\r\n\r\n> Honestly, I prefer to keep this tag.\r\n\r\nSome files don't have but some do. What can we do about this?\r\n\r\n> I was not able to identify any file which was inconsistent or needed a fix prior to this PR.\r\n\r\nThe files I touched did have a newline at the beginning but not at the end. I patched those. It seems I missed some files\u2014especially the csproj ones. I'll fix those too.",
        "createdAt": "2022-01-22T05:39:04Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "I'm sorry @Nirmal4G; I'm normally the most in favor of refactoring PRs, but I have to side with rainersigwald on this one. A lot of the changes here will be automatically undone by editors as soon as the file is touched anyway, so that just feels like pointless churn. There are a few changes here I do like, but I don't think it's worth looking through carefully to find those.",
        "createdAt": "2022-01-22T23:04:33Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}