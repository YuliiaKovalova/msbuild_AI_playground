{
  "number": 7541,
  "title": "Add Timeout parameter for the DownloadFile task",
  "body": "That allow control timeout behavior on flaky networks.\r\n",
  "state": "MERGED",
  "createdAt": "2022-04-15T06:48:25Z",
  "updatedAt": "2022-04-21T02:13:48Z",
  "closedAt": "2022-04-21T02:13:36Z",
  "mergedAt": "2022-04-21T02:13:36Z",
  "additions": 11,
  "deletions": 1,
  "changedFiles": 4,
  "headRefName": "patch-1",
  "isDraft": false,
  "author": {
    "login": "kant2002"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "6595172ddce51004532e36c568ab8bc29b6fcf60",
          "message": "Add Timeout parameter for the DownloadFile task\n\nThat allow control timeout behavior on flaky networks.",
          "committedDate": "2022-04-15T06:48:13Z",
          "author": {
            "name": "Andrii Kurdiumov",
            "email": "kant2002@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "58618fd9fbd1d5a091d722bd8c7b180af7afcb05",
          "message": "Update public API",
          "committedDate": "2022-04-15T06:57:24Z",
          "author": {
            "name": "Andrii Kurdiumov",
            "email": "kant2002@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5ff7328204533824e9b2c9c64ada356487fa22db",
          "message": "Fix stupid error",
          "committedDate": "2022-04-15T07:02:02Z",
          "author": {
            "name": "Andrii Kurdiumov",
            "email": "kant2002@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "07968fd13bf7f3532828bd6bd498daf550853bc2",
          "message": "Switch to milliseconds \r\nas per feedback from @fornever and for consistency with Exec task.",
          "committedDate": "2022-04-15T07:12:41Z",
          "author": {
            "name": "Andrii Kurdiumov",
            "email": "kant2002@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Thanks @kant2002!",
        "createdAt": "2022-04-21T02:13:48Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I'd prefer this to be named `TimeoutSec` to avoid any sort of confusion (debatable).",
              "createdAt": "2022-04-15T06:54:25Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -60,6 +60,11 @@ public sealed class DownloadFile : TaskExtension, ICancelableTask\n         [Required]\n         public string SourceUrl { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets the number of seconds to wait before the request times out.\n+        /// </summary>\n+        public double Timeout { get; set; } = 100;",
              "author": {
                "login": "ForNeVeR"
              }
            },
            {
              "body": "Will change to milliseconds to be consistent with https://github.com/dotnet/msbuild/blob/18fc0b3dd9dfd7cbb83272f13de4a89e8aa30531/src/Utilities/ToolTask.cs#L210-L211",
              "createdAt": "2022-04-15T07:13:53Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -60,6 +60,11 @@ public sealed class DownloadFile : TaskExtension, ICancelableTask\n         [Required]\n         public string SourceUrl { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets the number of seconds to wait before the request times out.\n+        /// </summary>\n+        public double Timeout { get; set; } = 100;",
              "author": {
                "login": "kant2002"
              }
            },
            {
              "body": "Alright. Since there's already a precedent of `int Timeout` being set in ms, that's okay then. I guess.",
              "createdAt": "2022-04-15T10:22:20Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -60,6 +60,11 @@ public sealed class DownloadFile : TaskExtension, ICancelableTask\n         [Required]\n         public string SourceUrl { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets the number of seconds to wait before the request times out.\n+        /// </summary>\n+        public double Timeout { get; set; } = 100;",
              "author": {
                "login": "ForNeVeR"
              }
            },
            {
              "body": "There other precedence for this parameter in Arcade. There it is named `TimeoutInSeconds`\r\nhttps://github.com/dotnet/arcade/blob/4000024394df3049886c50e54ad0a2b903221ef0/src/Microsoft.DotNet.Arcade.Sdk/src/DownloadFile.cs#L38",
              "createdAt": "2022-04-17T05:58:47Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -60,6 +60,11 @@ public sealed class DownloadFile : TaskExtension, ICancelableTask\n         [Required]\n         public string SourceUrl { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets the number of seconds to wait before the request times out.\n+        /// </summary>\n+        public double Timeout { get; set; } = 100;",
              "author": {
                "login": "kant2002"
              }
            },
            {
              "body": "`Copy` also has `RetryDelayMilliseconds`, but there are a lot more `ToolTask`s than that, so I like just `Timeout` too.",
              "createdAt": "2022-04-18T15:12:19Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -60,6 +60,11 @@ public sealed class DownloadFile : TaskExtension, ICancelableTask\n         [Required]\n         public string SourceUrl { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets the number of seconds to wait before the request times out.\n+        /// </summary>\n+        public double Timeout { get; set; } = 100;",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "In retrospect I start liking `TimeoutInSeconds` better, because I cannot get case for milliseconds precision in build system, and having 3 zeros in build script would confuse. For example 10000 and 100000 milliseconds looks very similar, in comparison to 10 and 100 seconds.",
              "createdAt": "2022-04-18T15:57:21Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -60,6 +60,11 @@ public sealed class DownloadFile : TaskExtension, ICancelableTask\n         [Required]\n         public string SourceUrl { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets the number of seconds to wait before the request times out.\n+        /// </summary>\n+        public double Timeout { get; set; } = 100;",
              "author": {
                "login": "kant2002"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Team triage:\r\nThanks for this PR! We think it's best to start with no timeout by default and let users set it to a different value if they want. Otherwise looks good!",
              "createdAt": "2022-04-18T15:08:59Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -60,6 +60,11 @@ public sealed class DownloadFile : TaskExtension, ICancelableTask\n         [Required]\n         public string SourceUrl { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets the number of milliseconds to wait before the request times out.\n+        /// </summary>\n+        public int Timeout { get; set; } = 100_000;",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "100 seconds is exact default for the HttpClient, so existing behavior preserved. If remove default value, I have to add custom logic which map 0 => 100 seconds which probably not what's expected. ",
              "createdAt": "2022-04-18T15:54:47Z",
              "path": "src/Tasks/DownloadFile.cs",
              "diffHunk": "@@ -60,6 +60,11 @@ public sealed class DownloadFile : TaskExtension, ICancelableTask\n         [Required]\n         public string SourceUrl { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets the number of milliseconds to wait before the request times out.\n+        /// </summary>\n+        public int Timeout { get; set; } = 100_000;",
              "author": {
                "login": "kant2002"
              }
            }
          ]
        }
      }
    ]
  }
}