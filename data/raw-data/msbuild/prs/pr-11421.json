{
  "number": 11421,
  "title": "Fix building slnf with @ in the path",
  "body": "### Context\r\n\r\nFixes #11050\r\n\r\nIf the path to the solution file contains `@`, it builds normally. But, if solution filter references this solution then the build fails:\r\n```\r\n{my-path-to}/bugtest%40commithash/Solution/Solution.sln : Solution file error MSB5026: The solution filter file at \"{my-path-to}/bugtest@commithash/Solution/Test.slnf\" specifies there will be a solution file at \"{my-path-to}/bugtest%40commithash/Solution/Solution.sln\", but that file does not exist.\r\n```\r\n\r\nsame happens with other symbols like `%` and `$`.\r\n\r\nSee the issue description for more details.\r\n\r\n### Details\r\n\r\nThe problem occurs on this line:\r\nhttps://github.com/dotnet/msbuild/blob/a1c2e7402ef0abe36bf493e395b04dd2cb1b3540/src/Build/Construction/Solution/SolutionFile.cs#L661\r\n\r\n`FileUtilities.GetFullPath` changes `@` to `%40`. \r\n\r\nSpecifically this happens here:\r\nhttps://github.com/dotnet/msbuild/blob/18c6b2ec5b07674c153f49aea990ab44f7209690/src/Shared/FileUtilities.cs#L762\r\n\r\n### Changes\r\nAdded `bool escape` param to `FileUtilities.GetFullPath` to be able to skip escape for getting solution path from solution filter (.slnf) json\r\n\r\n### Testing\r\nAdded new test to cover this scenario\r\n",
  "state": "MERGED",
  "createdAt": "2025-02-11T15:24:18Z",
  "updatedAt": "2025-05-06T15:42:57Z",
  "closedAt": "2025-03-10T09:26:22Z",
  "mergedAt": "2025-03-10T09:26:22Z",
  "additions": 62,
  "deletions": 5,
  "changedFiles": 3,
  "headRefName": "slnf-atsymbol",
  "isDraft": false,
  "author": {
    "login": "surayya-MS"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8ade766ae52754b93c2f607aad0114555882d051",
          "message": "fix building slnf with @ in the path",
          "committedDate": "2025-02-11T15:21:59Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "64c88ab2a2e8617ff7755a27528a6f97738c0fe3",
          "message": "use Path.GetFullPath(Path.Combine( )) instead of Path.GetFullPat(str1, str2) because it is not available for .net framework",
          "committedDate": "2025-02-11T15:52:20Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ee8598b136c09dcfa2bce70c469acc86a69face4",
          "message": "add more symbols to the test @, %, $",
          "committedDate": "2025-02-11T16:09:38Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "164bdcc8c17f97decc26d404a6c57cbb34fadd02",
          "message": "Merge branch 'main' into slnf-atsymbol",
          "committedDate": "2025-02-11T16:20:28Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "de8a5edfe16fe8a846f594c9dae597c8a8ef4d81",
          "message": "normalize solution path in the slnf before combinening with directory path",
          "committedDate": "2025-02-11T19:12:37Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "acb399b022f1b58fc05847f7047a1c1967ac3628",
          "message": "Merge remote-tracking branch 'origin/slnf-atsymbol' into slnf-atsymbol",
          "committedDate": "2025-02-11T19:13:55Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0cbdeeb849b4dbe44e5c5d977d5a9e4abbad190b",
          "message": "Merge branch 'main' into slnf-atsymbol",
          "committedDate": "2025-02-11T19:14:31Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d946923e5bc4b4585c7a6e5a42ed4393bdd8d7aa",
          "message": "add escape param to FileUtilities.GetFulllPath",
          "committedDate": "2025-02-11T19:42:41Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f3baaf3136341a5134b47095090b9874cb398c5f",
          "message": "be more specific in doc comment for FileUtilities.GetFullPath",
          "committedDate": "2025-02-12T10:56:07Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c4f0915448c768720926a662faf9d1e5108aecc9",
          "message": "Clarify GetFullPath escape behavior",
          "committedDate": "2025-03-07T09:56:23Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a4cc339055bc44d86ab2f83485422aa5e2c4d246",
          "message": "Add comment to preserve special symbols in path",
          "committedDate": "2025-03-07T09:58:23Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a2442c6c151b844f05655cc5043789b3f5a274ec",
          "message": "Merge branch 'main' into slnf-atsymbol",
          "committedDate": "2025-03-07T09:59:39Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Could this PR maybe also fix #11442?",
        "createdAt": "2025-02-15T08:29:46Z",
        "author": {
          "login": "Mik4sa"
        }
      },
      {
        "body": "> Could this PR maybe also fix #11442?\r\n\r\nThis is probably not related. The bug that this PR fixes is not recent and existed before. The one you described looks like a regression. Nevertheless, we will fix it soon. Thanks for reporting!",
        "createdAt": "2025-02-18T10:01:04Z",
        "author": {
          "login": "surayya-MS"
        }
      },
      {
        "body": "hmm too bad but thank you for your time and feedback :)\r\nI'm looking forward to a fix :)",
        "createdAt": "2025-02-18T10:28:04Z",
        "author": {
          "login": "Mik4sa"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Could this be\r\n\r\n```suggestion\r\n                return FileUtilities.NormalizePath(Path.GetDirectoryName(solutionFilterFile), solution.GetProperty(\"path\").GetString());\r\n```\r\n\r\nwithout changing `GetFullPath`?",
              "createdAt": "2025-02-11T20:32:09Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -658,7 +658,7 @@ internal static string ParseSolutionFromSolutionFilter(string solutionFilterFile\n                 JsonDocumentOptions options = new JsonDocumentOptions() { AllowTrailingCommas = true, CommentHandling = JsonCommentHandling.Skip };\n                 JsonDocument text = JsonDocument.Parse(File.ReadAllText(solutionFilterFile), options);\n                 solution = text.RootElement.GetProperty(\"solution\");\n-                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile));\n+                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile), escape: false);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "this won't work because in  GetFullPath before normalization the solution path that is provided in slnf needs to be fixed for the current machine. \r\n\r\nhttps://github.com/dotnet/msbuild/blob/04b6e1b59df1004aeedc4703757a5c407c06c139/src/Shared/FileUtilities.cs#L759\r\n\r\nI can create new function GetFullPathUnescaped and duplicate the code there. What do you think?",
              "createdAt": "2025-02-12T10:54:36Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -658,7 +658,7 @@ internal static string ParseSolutionFromSolutionFilter(string solutionFilterFile\n                 JsonDocumentOptions options = new JsonDocumentOptions() { AllowTrailingCommas = true, CommentHandling = JsonCommentHandling.Skip };\n                 JsonDocument text = JsonDocument.Parse(File.ReadAllText(solutionFilterFile), options);\n                 solution = text.RootElement.GetProperty(\"solution\");\n-                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile));\n+                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile), escape: false);",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "is it possible to do here\r\n\r\n`string fullPath = NormalizePath(Path.Combine(currentDirectory, FileUtilities.FixFilePath(EscapingUtilities.UnescapeAll(fileSpec)));`\r\n instead of making modification of `FileUtilities.cs`?\r\n\r\n",
              "createdAt": "2025-02-14T09:25:15Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -658,7 +658,7 @@ internal static string ParseSolutionFromSolutionFilter(string solutionFilterFile\n                 JsonDocumentOptions options = new JsonDocumentOptions() { AllowTrailingCommas = true, CommentHandling = JsonCommentHandling.Skip };\n                 JsonDocument text = JsonDocument.Parse(File.ReadAllText(solutionFilterFile), options);\n                 solution = text.RootElement.GetProperty(\"solution\");\n-                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile));\n+                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile), escape: false);",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "there is also adding trailing slash at the end of the full path\r\nhttps://github.com/dotnet/msbuild/blob/aff54559404d31214c71aa2ea6d2caa6003b0334/src/Shared/FileUtilities.cs#L764-L772\r\n\r\nNot modifying the `FileUtilities.GetFullPath` by adding extra check makes sense because it is on a hot path. Adding a new method `FileUtilities.GetFullPathUnescaped` that will duplicate most of the code except escaping would be a compromise for that reason.\r\n\r\nIs there other reason not to modify `FileUtilities.cs` that I miss?",
              "createdAt": "2025-02-18T10:21:37Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -658,7 +658,7 @@ internal static string ParseSolutionFromSolutionFilter(string solutionFilterFile\n                 JsonDocumentOptions options = new JsonDocumentOptions() { AllowTrailingCommas = true, CommentHandling = JsonCommentHandling.Skip };\n                 JsonDocument text = JsonDocument.Parse(File.ReadAllText(solutionFilterFile), options);\n                 solution = text.RootElement.GetProperty(\"solution\");\n-                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile));\n+                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile), escape: false);",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "let's add more info on when path can be not escaped and it looks ok for me.\r\n",
              "createdAt": "2025-03-04T15:28:55Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -658,7 +658,7 @@ internal static string ParseSolutionFromSolutionFilter(string solutionFilterFile\n                 JsonDocumentOptions options = new JsonDocumentOptions() { AllowTrailingCommas = true, CommentHandling = JsonCommentHandling.Skip };\n                 JsonDocument text = JsonDocument.Parse(File.ReadAllText(solutionFilterFile), options);\n                 solution = text.RootElement.GetProperty(\"solution\");\n-                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile));\n+                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile), escape: false);",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "thanks! added explanatory comments for not escaping",
              "createdAt": "2025-03-07T09:59:33Z",
              "path": "src/Build/Construction/Solution/SolutionFile.cs",
              "diffHunk": "@@ -658,7 +658,7 @@ internal static string ParseSolutionFromSolutionFilter(string solutionFilterFile\n                 JsonDocumentOptions options = new JsonDocumentOptions() { AllowTrailingCommas = true, CommentHandling = JsonCommentHandling.Skip };\n                 JsonDocument text = JsonDocument.Parse(File.ReadAllText(solutionFilterFile), options);\n                 solution = text.RootElement.GetProperty(\"solution\");\n-                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile));\n+                return FileUtilities.GetFullPath(solution.GetProperty(\"path\").GetString(), Path.GetDirectoryName(solutionFilterFile), escape: false);",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        /// <returns>Full path to the file, escaped.</returns>\r\n```",
              "createdAt": "2025-02-11T20:33:55Z",
              "path": "src/Shared/FileUtilities.cs",
              "diffHunk": "@@ -752,14 +752,19 @@ internal static bool HasExtension(string fileName, string[] allowedExtensions)\n         /// </summary>\n         /// <param name=\"fileSpec\">The file spec to get the full path of.</param>\n         /// <param name=\"currentDirectory\"></param>\n+        /// <param name=\"escape\">Whether to escape the path after getting the full path.</param>\n         /// <returns>full path</returns>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}