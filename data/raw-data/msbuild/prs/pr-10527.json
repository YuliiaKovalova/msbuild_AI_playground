{
  "number": 10527,
  "title": "Fix the unhandled Path.Combine exceptions",
  "body": "Fixes [#10497](https://github.com/dotnet/msbuild/issues/10497)\r\n\r\n### Context\r\n```xml\r\n <ItemGroup>\r\n    <FileCopy Include=\"mytestfile.ps1\">\r\n      <DestinationFolder>\"$(Output)\\bin\"</DestinationFolder>\r\n    </FileCopy>\r\n  </ItemGroup>\r\n<Target Name=\"RunCopy\" Inputs=\"@(FileCopy)\" Outputs=\"@(FileCopy->'%(DestinationFolder)\\%(Filename)%(Extension)')\">\r\n</Target>\r\n```\r\n\r\nBad string input in the DestinationFolder. This makes .NET Framework Path.Combine has unhandled exceptions.\r\n### Changes Made\r\nThrow the project exception when the path has invalid characters.\r\n\r\n### Testing\r\nInvalidPathInTargetOutPuts\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2024-08-16T08:58:28Z",
  "updatedAt": "2024-08-22T21:54:35Z",
  "closedAt": "2024-08-22T09:20:34Z",
  "mergedAt": "2024-08-22T09:20:34Z",
  "additions": 98,
  "deletions": 1,
  "changedFiles": 16,
  "headRefName": "dev/jennybai/illegalPath",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "54f30b7d730c2c67f448e4dcc4ec12af38979841",
          "message": "Fix the unhandled Path.Combine exceptions",
          "committedDate": "2024-08-16T08:51:46Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "40a7f4271f308810e1c180698282801274212d3d",
          "message": "Merge branch 'main' into dev/jennybai/illegalPath",
          "committedDate": "2024-08-19T04:30:30Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7b472238becff5ebf41e42759ed5501b281fcbf5",
          "message": "Refactor the error message",
          "committedDate": "2024-08-20T06:15:50Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "559959e5652b3a49954ec23e37222d0d6c01c817",
          "message": "Merge branch 'dev/jennybai/illegalPath' of https://github.com/JaynieBai/msbuild into dev/jennybai/illegalPath",
          "committedDate": "2024-08-20T06:17:10Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Can you past sample output of `dotnet build` and of `msbuild.exe` of the project in question after this fix?",
        "createdAt": "2024-08-19T05:34:59Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> Can you past sample output of `dotnet build` and of `msbuild.exe` of the project in question after this fix?\r\n\r\nFor project \r\n ```\r\n<ItemGroup>\r\n    <FileCopy Include=\"mytestfile.ps1\">\r\n      <DestinationFolder>\"$(Output)\\bin\"</DestinationFolder>\r\n    </FileCopy>\r\n  </ItemGroup>\r\n<Target Name=\"RunCopy\" Inputs=\"@(FileCopy)\" Outputs=\"@(FileCopy->'%(DestinationFolder)\\%(Filename)%(Extension)')\">\r\n</Target>\r\n```\r\n\r\ndotnet build successfully\r\n![image](https://github.com/user-attachments/assets/a8517b26-1cd6-42aa-8646-f76aa05090bc)\r\nmsbuild.exe \r\n![image](https://github.com/user-attachments/assets/b4b34f5e-c84d-4bd6-9e28-cdc0fb871001)\r\n\r\n",
        "createdAt": "2024-08-19T06:37:28Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "> > Can you past sample output of `dotnet build` and of `msbuild.exe` of the project in question after this fix?\r\n> \r\n> For project\r\n> \r\n> ```\r\n> <ItemGroup>\r\n>    <FileCopy Include=\"mytestfile.ps1\">\r\n>      <DestinationFolder>\"$(Output)\\bin\"</DestinationFolder>\r\n>    </FileCopy>\r\n>  </ItemGroup>\r\n> <Target Name=\"RunCopy\" Inputs=\"@(FileCopy)\" Outputs=\"@(FileCopy->'%(DestinationFolder)\\%(Filename)%(Extension)')\">\r\n> </Target>\r\n> ```\r\n> \r\n> dotnet build successfully ![image](https://private-user-images.githubusercontent.com/26814373/359002899-a8517b26-1cd6-42aa-8646-f76aa05090bc.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjQwNzI3NzYsIm5iZiI6MTcyNDA3MjQ3NiwicGF0aCI6Ii8yNjgxNDM3My8zNTkwMDI4OTktYTg1MTdiMjYtMWNkNi00MmFhLTg2NDYtZjc2YWEwNTA5MGJjLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE5VDEzMDExNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWU3Zjk0MjVkMDQyYjllZDdkZDUwYmIwMTIwNzE2ZTVlNzM3NWIyNmU5MWZhMTU5YjkzYTE3NTJiN2IxMjA5NzcmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.tennCY3tGNTnyf3faxM2gno9CflgwKVRlPKssPUsYsw) msbuild.exe ![image](https://private-user-images.githubusercontent.com/26814373/359003019-b4b34f5e-c84d-4bd6-9e28-cdc0fb871001.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjQwNzI3NzYsIm5iZiI6MTcyNDA3MjQ3NiwicGF0aCI6Ii8yNjgxNDM3My8zNTkwMDMwMTktYjRiMzRmNWUtYzg0ZC00YmQ2LTllMjgtY2RjMGZiODcxMDAxLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE5VDEzMDExNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWZkOTM5MDIyZGVkOTUxM2EzN2YyYzM2NzA2MjA3YmU4OWYwMWM5MjIxMjRlYjg3N2VmMTczYjVkNzhlYzhjZjEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.i00HM112a9XkcUaTmRJK6eoGuUqMp8GriwbvrT6h_q8)\r\n\r\nThis is definitely improved behavior.\r\nI'm wondering if we can make it even more user-friendly by giving user clue where is the invalid path comming from.\r\nIt seems the code is sourcing the paths from items here:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/f422d8d7dfe0a7115b11b31470215ad6b7723138/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs#L644\r\n\r\nwe should be able to extract some more diagnostic info there (e.g. project path and item type)",
        "createdAt": "2024-08-19T13:07:08Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> > > Can you past sample output of `dotnet build` and of `msbuild.exe` of the project in question after this fix?\r\n> > \r\n> > \r\n> > For project\r\n> > ```\r\n> > <ItemGroup>\r\n> >    <FileCopy Include=\"mytestfile.ps1\">\r\n> >      <DestinationFolder>\"$(Output)\\bin\"</DestinationFolder>\r\n> >    </FileCopy>\r\n> >  </ItemGroup>\r\n> > <Target Name=\"RunCopy\" Inputs=\"@(FileCopy)\" Outputs=\"@(FileCopy->'%(DestinationFolder)\\%(Filename)%(Extension)')\">\r\n> > </Target>\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > dotnet build successfully ![image](https://private-user-images.githubusercontent.com/26814373/359002899-a8517b26-1cd6-42aa-8646-f76aa05090bc.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjQwNzI3NzYsIm5iZiI6MTcyNDA3MjQ3NiwicGF0aCI6Ii8yNjgxNDM3My8zNTkwMDI4OTktYTg1MTdiMjYtMWNkNi00MmFhLTg2NDYtZjc2YWEwNTA5MGJjLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE5VDEzMDExNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWU3Zjk0MjVkMDQyYjllZDdkZDUwYmIwMTIwNzE2ZTVlNzM3NWIyNmU5MWZhMTU5YjkzYTE3NTJiN2IxMjA5NzcmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.tennCY3tGNTnyf3faxM2gno9CflgwKVRlPKssPUsYsw) msbuild.exe ![image](https://private-user-images.githubusercontent.com/26814373/359003019-b4b34f5e-c84d-4bd6-9e28-cdc0fb871001.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjQwNzI3NzYsIm5iZiI6MTcyNDA3MjQ3NiwicGF0aCI6Ii8yNjgxNDM3My8zNTkwMDMwMTktYjRiMzRmNWUtYzg0ZC00YmQ2LTllMjgtY2RjMGZiODcxMDAxLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE5VDEzMDExNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWZkOTM5MDIyZGVkOTUxM2EzN2YyYzM2NzA2MjA3YmU4OWYwMWM5MjIxMjRlYjg3N2VmMTczYjVkNzhlYzhjZjEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.i00HM112a9XkcUaTmRJK6eoGuUqMp8GriwbvrT6h_q8)\r\n> \r\n> This is definitely improved behavior. I'm wondering if we can make it even more user-friendly by giving user clue where is the invalid path comming from. It seems the code is sourcing the paths from items here:\r\n> \r\n> https://github.com/dotnet/msbuild/blob/f422d8d7dfe0a7115b11b31470215ad6b7723138/src/Build/BackEnd/Components/RequestBuilder/TargetUpToDateChecker.cs#L644\r\n> \r\n> we should be able to extract some more diagnostic info there (e.g. project path and item type)\r\n\r\n@JanKrivanek  What about this ouput?\r\n![image](https://github.com/user-attachments/assets/ac9d3852-ad7e-4a05-af06-e18cc9fd1194)\r\n",
        "createdAt": "2024-08-20T06:34:00Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "Thank you for improving the message!",
        "createdAt": "2024-08-21T10:02:22Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Kudos to everyone, love to see a quick turnaround on a relatively minor issue, with a notable improvement in the UX.",
        "createdAt": "2024-08-22T21:33:53Z",
        "author": {
          "login": "samedder"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}