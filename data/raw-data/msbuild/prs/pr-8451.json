{
  "number": 8451,
  "title": "Make LiveLogger distributed",
  "body": "Fixes #8384\r\n\r\n### Context\r\nLiveLogger only needs to process certain events for its work. All other events from the MSBuild nodes should be filtered out on their way to the main node for performance. The filtering of the events is done via ConfigurableForwardingLogger.\r\n\r\n### Changes Made\r\nSimilar to console logger behavior, instead of registering LiveLogger as the central logger, register it as a distributed logger. \r\n\r\n### Testing\r\nManual",
  "state": "MERGED",
  "createdAt": "2023-02-15T12:33:58Z",
  "updatedAt": "2023-02-20T03:07:21Z",
  "closedAt": "2023-02-20T03:07:20Z",
  "mergedAt": "2023-02-20T03:07:20Z",
  "additions": 47,
  "deletions": 27,
  "changedFiles": 2,
  "headRefName": "livelogger-make-distributed",
  "isDraft": false,
  "author": {
    "login": "AR-May"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance",
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "5597065a15ea68685a9a1ae888d00f69d4d33a0d",
          "message": "Make LiveLogger distributed. 1st draft.",
          "committedDate": "2023-02-14T15:41:51Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6c9344b3a44a20a0be0dfc84c60659365f6370b7",
          "message": "Resolving pr comments, removing dead code.",
          "committedDate": "2023-02-16T09:15:00Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Measurements of cold incremental build of Orchard Core repo, with /m:4 switch:\r\nbuild num | central (ms) | distributed (ms)\r\n-- | -- | --\r\n1 | 28479.416\t| 20295.2979\r\n2 | 25223.4042\t| 20908.982\r\n3 | 25821.0431\t| 20153.449\r\n4 | 25846.985\t| 19587.9499\r\n5 | 26882.9845\t| 19744.2633\r\naverage | 26450.76656\t| 20137.98842\r\ndiff | 6312.77814\t\r\ngain | 23.86%\r\n\r\n",
        "createdAt": "2023-02-15T12:45:40Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Do we really need information about messages to be showed in LiveLogger? I think that errors and warnings are, but I am unsure about messages of different importance.",
              "createdAt": "2023-02-15T12:55:05Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =\n+        {\n+            \"BUILDSTARTEDEVENT\",\n+            \"PROJECTSTARTEDEVENT\",\n+            \"TARGETSTARTEDEVENT\",\n+            \"TASKSTARTEDEVENT\",\n+            \"BUILDFINISHEDEVENT\",\n+            \"PROJECTFINISHEDEVENT\",\n+            \"TARGETFINISHEDEVENT\",\n+            \"HIGHMESSAGEEVENT\",",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "We need _some_ messages at different levels, to extract the right info we need. Right now that looks like just HIGH so we should be able to get some perf out of dropping normal and low.\r\n\r\nEventually I suspect we'll want some info from low-importance messages in some cases. That might make us move away from the CentralForwardingLogger to a custom filtering implementation.",
              "createdAt": "2023-02-15T23:01:45Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =\n+        {\n+            \"BUILDSTARTEDEVENT\",\n+            \"PROJECTSTARTEDEVENT\",\n+            \"TARGETSTARTEDEVENT\",\n+            \"TASKSTARTEDEVENT\",\n+            \"BUILDFINISHEDEVENT\",\n+            \"PROJECTFINISHEDEVENT\",\n+            \"TARGETFINISHEDEVENT\",\n+            \"HIGHMESSAGEEVENT\",",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Yes, I see, non-high priority messages are dropped. I really hope that we will not need non-high prio messages for a logger to work.",
              "createdAt": "2023-02-16T09:20:24Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =\n+        {\n+            \"BUILDSTARTEDEVENT\",\n+            \"PROJECTSTARTEDEVENT\",\n+            \"TARGETSTARTEDEVENT\",\n+            \"TASKSTARTEDEVENT\",\n+            \"BUILDFINISHEDEVENT\",\n+            \"PROJECTFINISHEDEVENT\",\n+            \"TARGETFINISHEDEVENT\",\n+            \"HIGHMESSAGEEVENT\",",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Dropping medium and low priority messages indeed helped perf, updated perf info",
              "createdAt": "2023-02-16T10:46:12Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =\n+        {\n+            \"BUILDSTARTEDEVENT\",\n+            \"PROJECTSTARTEDEVENT\",\n+            \"TARGETSTARTEDEVENT\",\n+            \"TASKSTARTEDEVENT\",\n+            \"BUILDFINISHEDEVENT\",\n+            \"PROJECTFINISHEDEVENT\",\n+            \"TARGETFINISHEDEVENT\",\n+            \"HIGHMESSAGEEVENT\",",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "#8463 will likely help further.",
              "createdAt": "2023-02-16T14:34:58Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =\n+        {\n+            \"BUILDSTARTEDEVENT\",\n+            \"PROJECTSTARTEDEVENT\",\n+            \"TARGETSTARTEDEVENT\",\n+            \"TASKSTARTEDEVENT\",\n+            \"BUILDFINISHEDEVENT\",\n+            \"PROJECTFINISHEDEVENT\",\n+            \"TARGETFINISHEDEVENT\",\n+            \"HIGHMESSAGEEVENT\",",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I will take a look, thanks!\r\n",
              "createdAt": "2023-02-16T16:35:18Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =\n+        {\n+            \"BUILDSTARTEDEVENT\",\n+            \"PROJECTSTARTEDEVENT\",\n+            \"TARGETSTARTEDEVENT\",\n+            \"TASKSTARTEDEVENT\",\n+            \"BUILDFINISHEDEVENT\",\n+            \"PROJECTFINISHEDEVENT\",\n+            \"TARGETFINISHEDEVENT\",\n+            \"HIGHMESSAGEEVENT\",",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Looks like we will need TASKFINISHED in current main:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/dfd8f413a80cd0865f968b2c0ad9b09c0df8c430/src/MSBuild/LiveLogger/LiveLogger.cs#L219-L232",
              "createdAt": "2023-02-15T23:14:13Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =\n+        {\n+            \"BUILDSTARTEDEVENT\",\n+            \"PROJECTSTARTEDEVENT\",\n+            \"TARGETSTARTEDEVENT\",\n+            \"TASKSTARTEDEVENT\",",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "No, TASKFINISHED is currently commented out. This is dead code. ",
              "createdAt": "2023-02-16T08:42:53Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =\n+        {\n+            \"BUILDSTARTEDEVENT\",\n+            \"PROJECTSTARTEDEVENT\",\n+            \"TARGETSTARTEDEVENT\",\n+            \"TASKSTARTEDEVENT\",",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I think it might be helpful to group these by started/finished, so  `BUILDSTARTEDEVENT;BUILDFINISHEDEVENT` could be next to each other.",
              "createdAt": "2023-02-15T23:18:01Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "It follows the grouping in the code where we register for those events. I am in favor to change both places according to your proposal.",
              "createdAt": "2023-02-16T08:40:49Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -20,14 +20,36 @@ internal class LiveLogger : ILogger\n         public LoggerVerbosity Verbosity { get; set; }\n         public string Parameters { get; set; }\n \n+        /// <summary>\n+        /// List of events the logger needs as parameters to the <see cref=\"ConfigurableForwardingLogger\"/>.\n+        /// </summary>\n+        /// <remarks>\n+        /// If LiveLogger runs as a distributed logger, MSBuild out-of-proc nodes might filter the events that will go to the main node using an instance of <see cref=\"ConfigurableForwardingLogger\"/> with the following parameters.\n+        /// </remarks>\n+        public static readonly string[] ConfigurableForwardingLoggerParameters =",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Ew, this is much harder than I wish it was.",
              "createdAt": "2023-02-15T23:18:41Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -3456,13 +3456,27 @@ private static bool DoesEnvironmentSupportLiveLogger()\n \n         private static void ProcessLiveLogger(\n             bool noConsoleLogger,\n+            List<DistributedLoggerRecord> distributedLoggerRecords,\n+            int cpuCount,\n             List<ILogger> loggers)\n         {\n-            // Check for flags and env variables\n             if (!noConsoleLogger)\n             {\n-                LiveLogger l = new LiveLogger();\n-                loggers.Add(l);\n+                // A central logger will be created for both single proc and multiproc.\n+                LiveLogger logger = new LiveLogger();\n+\n+                // Check to see if there is a possibility we will be logging from an out-of-proc node.\n+                // If so (we're multi-proc or the in-proc node is disabled), we register a distributed logger.\n+                if (cpuCount == 1 && !Traits.Instance.InProcNodeDisabled)\n+                {\n+                    loggers.Add(logger);\n+                }\n+                else\n+                {\n+                    // For performance, register this logger using the forwarding logger mechanism.\n+                    DistributedLoggerRecord forwardingLoggerRecord = CreateForwardingLoggerRecord(logger, string.Join(\";\", LiveLogger.ConfigurableForwardingLoggerParameters), LoggerVerbosity.Quiet);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "You thought that we might create a custom filtering implementation? I thought about that, but I noticed that current filtering needs are satisfied with standard ConfigurableForwardingLogger so I reused it. As for logic in this function, it copies logic for console logger in sense of when to make a central logger and when to make it distributed.",
              "createdAt": "2023-02-16T09:25:01Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -3456,13 +3456,27 @@ private static bool DoesEnvironmentSupportLiveLogger()\n \n         private static void ProcessLiveLogger(\n             bool noConsoleLogger,\n+            List<DistributedLoggerRecord> distributedLoggerRecords,\n+            int cpuCount,\n             List<ILogger> loggers)\n         {\n-            // Check for flags and env variables\n             if (!noConsoleLogger)\n             {\n-                LiveLogger l = new LiveLogger();\n-                loggers.Add(l);\n+                // A central logger will be created for both single proc and multiproc.\n+                LiveLogger logger = new LiveLogger();\n+\n+                // Check to see if there is a possibility we will be logging from an out-of-proc node.\n+                // If so (we're multi-proc or the in-proc node is disabled), we register a distributed logger.\n+                if (cpuCount == 1 && !Traits.Instance.InProcNodeDisabled)\n+                {\n+                    loggers.Add(logger);\n+                }\n+                else\n+                {\n+                    // For performance, register this logger using the forwarding logger mechanism.\n+                    DistributedLoggerRecord forwardingLoggerRecord = CreateForwardingLoggerRecord(logger, string.Join(\";\", LiveLogger.ConfigurableForwardingLoggerParameters), LoggerVerbosity.Quiet);",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Yeah, I think both decisions (use ConfigurableForwardingLogger, register in the same way as the `-dl` switch) are good. But it's uglier than I hoped.",
              "createdAt": "2023-02-16T14:34:03Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -3456,13 +3456,27 @@ private static bool DoesEnvironmentSupportLiveLogger()\n \n         private static void ProcessLiveLogger(\n             bool noConsoleLogger,\n+            List<DistributedLoggerRecord> distributedLoggerRecords,\n+            int cpuCount,\n             List<ILogger> loggers)\n         {\n-            // Check for flags and env variables\n             if (!noConsoleLogger)\n             {\n-                LiveLogger l = new LiveLogger();\n-                loggers.Add(l);\n+                // A central logger will be created for both single proc and multiproc.\n+                LiveLogger logger = new LiveLogger();\n+\n+                // Check to see if there is a possibility we will be logging from an out-of-proc node.\n+                // If so (we're multi-proc or the in-proc node is disabled), we register a distributed logger.\n+                if (cpuCount == 1 && !Traits.Instance.InProcNodeDisabled)\n+                {\n+                    loggers.Add(logger);\n+                }\n+                else\n+                {\n+                    // For performance, register this logger using the forwarding logger mechanism.\n+                    DistributedLoggerRecord forwardingLoggerRecord = CreateForwardingLoggerRecord(logger, string.Join(\";\", LiveLogger.ConfigurableForwardingLoggerParameters), LoggerVerbosity.Quiet);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "The intended way to use ConfigurableForwardingLogger from our own code seems quite ugly to me, yeah.",
              "createdAt": "2023-02-16T14:39:42Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -3456,13 +3456,27 @@ private static bool DoesEnvironmentSupportLiveLogger()\n \n         private static void ProcessLiveLogger(\n             bool noConsoleLogger,\n+            List<DistributedLoggerRecord> distributedLoggerRecords,\n+            int cpuCount,\n             List<ILogger> loggers)\n         {\n-            // Check for flags and env variables\n             if (!noConsoleLogger)\n             {\n-                LiveLogger l = new LiveLogger();\n-                loggers.Add(l);\n+                // A central logger will be created for both single proc and multiproc.\n+                LiveLogger logger = new LiveLogger();\n+\n+                // Check to see if there is a possibility we will be logging from an out-of-proc node.\n+                // If so (we're multi-proc or the in-proc node is disabled), we register a distributed logger.\n+                if (cpuCount == 1 && !Traits.Instance.InProcNodeDisabled)\n+                {\n+                    loggers.Add(logger);\n+                }\n+                else\n+                {\n+                    // For performance, register this logger using the forwarding logger mechanism.\n+                    DistributedLoggerRecord forwardingLoggerRecord = CreateForwardingLoggerRecord(logger, string.Join(\";\", LiveLogger.ConfigurableForwardingLoggerParameters), LoggerVerbosity.Quiet);",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      }
    ]
  }
}