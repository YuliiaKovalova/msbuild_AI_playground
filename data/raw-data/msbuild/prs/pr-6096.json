{
  "number": 6096,
  "title": "Bring XamlPreCompile up to date with roslyn targets",
  "body": "Fixes https://github.com/dotnet/roslyn/issues/46300\r\n\r\n### Context\r\n\r\nSource generators fail on projects that depend on the `XamlPreCompile` target because it removes analyzers for performance reasons. Because source generators are passed in via the analyzers collection, they are also removed, which causes build failures. Roslyn added the `/skipAnalyzers` flag in https://github.com/dotnet/roslyn/pull/46669 which allows the caller to keep the analyzers item group populated, skipping the analyzers and running the generators.\r\n\r\n### Changes Made\r\n\r\nChanged the `XamlPreCompile` target to match the roslyn CSC invocation, as it should.\r\n\r\n### Testing\r\n\r\nManually tested patching the file on VS preview and confirmed the project can succesfully build, where it didn't without the patch.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2021-01-28T19:32:54Z",
  "updatedAt": "2021-02-23T23:26:11Z",
  "closedAt": "2021-01-28T20:51:58Z",
  "mergedAt": "2021-01-28T20:51:58Z",
  "additions": 2,
  "deletions": 3,
  "changedFiles": 1,
  "headRefName": "add_skip_analyzers",
  "isDraft": false,
  "author": {
    "login": "chsienki"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "ecad7ad47d122a8a0fb3238f9598f1182dbce47f",
          "message": "Bring XamlPreCompile up to date with roslyn targets",
          "committedDate": "2021-01-28T19:56:42Z",
          "author": {
            "name": "Chris Sienkiewicz",
            "email": "chsienki@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@chsienki I tried applying the exact same change to `c:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\Microsoft.CSharp.CurrentVersion.targets`\r\nI can see it picks up the change (compiler fails if I make a typo in that file), but I'm still getting the same problem. Using `16.9.0 Preview 3.0`. Is there something else that's needed for this fix to work?\r\n\r\nRepro:\r\n1. Create a new WinUI3 desktop project.\r\n2. Add `Microsoft.Windows.CsWin32` nuget project\r\n3. Add `NativeMethods.txt` file to project, and add the text `Shell_NotifyIcon` to the text file.\r\n4. Compile.",
        "createdAt": "2021-01-29T04:07:03Z",
        "author": {
          "login": "dotMorten"
        }
      },
      {
        "body": "@dotMorten,\r\nThis didn't make it into preview 3; it should come out in preview 4 or 5, though cloud build failed for some reason, so we'll have to look into that.",
        "createdAt": "2021-01-29T17:04:20Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "In the interim, if you want to test this out, you can patch your install with it. See https://github.com/dotnet/msbuild/blob/master/documentation/Deploy-MSBuild.md, though note that as an experimental patch, unexpected things might go wrong that we haven't tested.",
        "createdAt": "2021-01-29T17:05:52Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind I just patched the .targets file that VS is using directly, by editing `:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\Microsoft.CSharp.CurrentVersion.targets`.\r\nShouldn't that accomplish the same thing?",
        "createdAt": "2021-01-29T17:13:12Z",
        "author": {
          "login": "dotMorten"
        }
      },
      {
        "body": "@dotMorten you'll need to have the corresponding roslyn version too. Any chance you can send us a binlog of the failure? (You can use the project system tools to get one from inside vs if necessary).\n\nGiven that binlogs can have somewhat sensitive information in them, feel free to email me chsienki@[ms] if you'd rather not post it publicly. \n\nThanks!",
        "createdAt": "2021-01-29T17:54:15Z",
        "author": {
          "login": "chsienki"
        }
      },
      {
        "body": "You can use a nightly build of 5.0.2xx from the installer repo for testing.  This change missed the snap for preview 4 so will a) need tactics approval (so should not have been merged yet but we don't need to proactively undo the change) and won't be in the SDK until the 5.0.200 GA release as we won't have a preview 5 release. ",
        "createdAt": "2021-01-29T19:56:31Z",
        "author": {
          "login": "marcpopMSFT"
        }
      },
      {
        "body": "Just to close this one out... Doesn't seem you need a new msbuild - the manual edit of the targets file seem to work. But there's a residual issue in the code generator, as mentioned in the comment here:  https://github.com/microsoft/CsWin32/issues/59#issuecomment-770071247",
        "createdAt": "2021-01-29T22:11:34Z",
        "author": {
          "login": "dotMorten"
        }
      },
      {
        "body": "I tried with VS16.9 Preview 5 that was released today and still seeing an issue.\r\nRepro: [App27.zip](https://github.com/dotnet/msbuild/files/6032309/App27.zip)\r\n![image](https://user-images.githubusercontent.com/1378165/108920916-60194d00-75ea-11eb-9daf-d9adbc49a928.png)\r\n\r\nI checked the contents of `C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\Microsoft.CSharp.CurrentVersion.targets` and it matches what's in master, except [the latest added commit](https://github.com/dotnet/msbuild/commit/05b750baed9aed0e9c72b3c72f771ec17afddcca)",
        "createdAt": "2021-02-23T23:18:28Z",
        "author": {
          "login": "dotMorten"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}