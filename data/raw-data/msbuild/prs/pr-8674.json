{
  "number": 8674,
  "title": "[main] Update dependencies from dotnet/roslyn",
  "body": "This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:848bf81b-14ec-482f-6736-08da008bd46a)\r\n## From https://github.com/dotnet/roslyn\r\n- **Subscription**: 848bf81b-14ec-482f-6736-08da008bd46a\r\n- **Build**: 20230521.1\r\n- **Date Produced**: May 21, 2023 4:16:32 PM UTC\r\n- **Commit**: 687921ffae8ad91a5464473cb1759fd463c345f2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Net.Compilers.Toolset**: [from 4.6.0-2.23171.5 to 4.7.0-2.23271.1][6]\r\n\r\n[6]: https://github.com/dotnet/roslyn/compare/48b13597fe...687921ffae\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:848bf81b-14ec-482f-6736-08da008bd46a)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2023-04-18T16:03:42Z",
  "updatedAt": "2023-05-23T20:36:14Z",
  "closedAt": "2023-05-23T20:36:13Z",
  "mergedAt": "2023-05-23T20:36:12Z",
  "additions": 4,
  "deletions": 4,
  "changedFiles": 3,
  "headRefName": "darc-main-a0aec00d-d482-4e39-96c7-5aacd70aca5b",
  "isDraft": false,
  "author": {
    "login": "dotnet-maestro"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "95f80dacf4c84e7bb3fa51e8647b8bb6c6e4291f",
          "message": "Update dependencies from https://github.com/dotnet/roslyn build 20230417.19\n\nMicrosoft.Net.Compilers.Toolset\n From Version 4.6.0-2.23171.5 -> To Version 4.7.0-1.23217.19",
          "committedDate": "2023-04-18T16:03:40Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "377228d28bb88118347b8cecaa50d3cc00b492e7",
          "message": "Merge branch 'main' into darc-main-a0aec00d-d482-4e39-96c7-5aacd70aca5b",
          "committedDate": "2023-04-19T22:33:23Z",
          "author": {
            "name": "Larry Ewing",
            "email": "lewing@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dc5864d14936f4fe570c7a8cc7f78a101e236a15",
          "message": "Adapt to new Roslyn package folder structure\n\nAs of dotnet/roslyn#67747, the name is just netcore.",
          "committedDate": "2023-04-21T20:59:03Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "954887c7c66fe36c85f175660bd2295acc8f6fe5",
          "message": "Merge branch 'main' into darc-main-a0aec00d-d482-4e39-96c7-5aacd70aca5b",
          "committedDate": "2023-04-23T19:15:30Z",
          "author": {
            "name": "Larry Ewing",
            "email": "lewing@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "609fe57726014829e89a350d7ce2e0a364e229c3",
          "message": "Update dependencies from https://github.com/dotnet/roslyn build 20230422.1\n\nMicrosoft.Net.Compilers.Toolset\n From Version 4.6.0-2.23171.5 -> To Version 4.7.0-1.23222.1",
          "committedDate": "2023-04-24T12:19:09Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cf27c7f22e853e15397f7788337a86922a68a368",
          "message": "Update dependencies from https://github.com/dotnet/roslyn build 20230501.1\n\nMicrosoft.Net.Compilers.Toolset\n From Version 4.6.0-2.23171.5 -> To Version 4.7.0-2.23251.1",
          "committedDate": "2023-05-01T12:38:35Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5a94238ad81e402eeb5f17a6ed0683c43c7e2685",
          "message": "Merge branch 'main' into darc-main-a0aec00d-d482-4e39-96c7-5aacd70aca5b",
          "committedDate": "2023-05-02T08:55:46Z",
          "author": {
            "name": "Marek Safar",
            "email": "marek.safar@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ec417f4d4c352c52000d1207dfbff19dfdee4f8f",
          "message": "Update dependencies from https://github.com/dotnet/roslyn build 20230505.2\n\nMicrosoft.Net.Compilers.Toolset\n From Version 4.6.0-2.23171.5 -> To Version 4.7.0-2.23255.2",
          "committedDate": "2023-05-08T12:38:41Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f8fe94c7cf7214de881f6d4ca09ac1afa4bdc6ab",
          "message": "Merge branch 'main' into darc-main-a0aec00d-d482-4e39-96c7-5aacd70aca5b",
          "committedDate": "2023-05-09T15:04:53Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "eebf066596a9f1c9b5a455617b0da748968f3080",
          "message": "Update dependencies from https://github.com/dotnet/roslyn build 20230512.3\n\nMicrosoft.Net.Compilers.Toolset\n From Version 4.6.0-2.23171.5 -> To Version 4.7.0-2.23262.3",
          "committedDate": "2023-05-15T12:36:52Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0f443e8d6f701d056022eec4c07f6b815b5e5e24",
          "message": "Merge branch 'main' into darc-main-a0aec00d-d482-4e39-96c7-5aacd70aca5b",
          "committedDate": "2023-05-17T21:06:12Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "894689f080a5e839a624aa41b779c8aa6cc91380",
          "message": "Update dependencies from https://github.com/dotnet/roslyn build 20230521.1\n\nMicrosoft.Net.Compilers.Toolset\n From Version 4.6.0-2.23171.5 -> To Version 4.7.0-2.23271.1",
          "committedDate": "2023-05-22T12:39:57Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "eecc545a4445f692394ac2515d5430aef0e8a8aa",
          "message": "Merge branch 'main' into darc-main-a0aec00d-d482-4e39-96c7-5aacd70aca5b",
          "committedDate": "2023-05-23T19:59:48Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald any idea what is going on here\r\n\r\ncc @jaredpar ",
        "createdAt": "2023-04-21T18:55:30Z",
        "author": {
          "login": "lewing"
        }
      },
      {
        "body": "Adapted to https://github.com/dotnet/roslyn/pull/67747.\r\n\r\n@lewing any particular reason you were looking at this?",
        "createdAt": "2023-04-21T19:18:34Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "just trying to make sure there is nothing more hiding in the package flow ahead of preview.4 freeze",
        "createdAt": "2023-04-21T19:58:42Z",
        "author": {
          "login": "lewing"
        }
      },
      {
        "body": "```\r\nD:\\a\\1\\s\\.dotnet\\sdk\\7.0.203\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ApiCompat.ValidatePackage.targets(39,5): error MSB4018: The \"Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask\" task failed unexpectedly.\r\nSystem.MissingMethodException: Method not found: 'Void Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions..ctor(Microsoft.CodeAnalysis.OutputKind, Boolean, System.String, System.String, System.String, System.Collections.Generic.IEnumerable`1<System.String>, Microsoft.CodeAnalysis.OptimizationLevel, Boolean, Boolean, System.String, System.String, System.Collections.Immutable.ImmutableArray`1<Byte>, System.Nullable`1<Boolean>, Microsoft.CodeAnalysis.Platform, Microsoft.CodeAnalysis.ReportDiagnostic, Int32, System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<System.String,Microsoft.CodeAnalysis.ReportDiagnostic>>, Boolean, Boolean, Microsoft.CodeAnalysis.XmlReferenceResolver, Microsoft.CodeAnalysis.SourceReferenceResolver, Microsoft.CodeAnalysis.MetadataReferenceResolver, Microsoft.CodeAnalysis.AssemblyIdentityComparer, Microsoft.CodeAnalysis.StrongNameProvider, Boolean, Microsoft.CodeAnalysis.MetadataImportOptions, Microsoft.CodeAnalysis.NullableContextOptions)'.\r\n   at Microsoft.DotNet.ApiCompatibility.AssemblySymbolLoader..ctor(Boolean resolveAssemblyReferences)\r\n   at Microsoft.DotNet.ApiCompatibility.AssemblySymbolLoaderFactory.Create(Boolean shouldResolveReferences)\r\n   at Microsoft.DotNet.ApiCompatibility.Runner.ApiCompatRunner.CreateAssemblySymbols(IReadOnlyList`1 metadataInformation, ApiCompatRunnerOptions options, Boolean& resolvedExternallyProvidedAssemblyReferences)\r\n   at Microsoft.DotNet.ApiCompatibility.Runner.ApiCompatRunner.ExecuteWorkItems()\r\n   at Microsoft.DotNet.ApiCompat.ValidatePackage.Run(Func`2 logFactory, Boolean generateSuppressionFile, String[] suppressionFiles, String suppressionOutputFile, String noWarn, Boolean enableRuleAttributesMustMatch, String[] excludeAttributesFiles, Boolean enableRuleCannotChangeParameterName, String packagePath, Boolean runApiCompat, Boolean enableStrictModeForCompatibleTfms, Boolean enableStrictModeForCompatibleFrameworksInPackage, Boolean enableStrictModeForBaselineValidation, String baselinePackagePath, String runtimeGraph, Dictionary`2 packageAssemblyReferences, Dictionary`2 baselinePackageAssemblyReferences)\r\n   at Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() \r\n```\r\n\r\nIt amuses me that the package-binary-compat-check task is failing with a binary compat failure, but . . . what?",
        "createdAt": "2023-04-21T21:43:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@dotnet/roslyn-analysis could someone take a look?",
        "createdAt": "2023-04-23T19:14:52Z",
        "author": {
          "login": "lewing"
        }
      },
      {
        "body": "cc @dotnet/dnr-codeflow",
        "createdAt": "2023-04-26T02:26:31Z",
        "author": {
          "login": "lewing"
        }
      },
      {
        "body": "I can repro the failure when building from 17.5.\r\n\r\nfuslog:\r\n\r\n```\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.DotNet.ApiCompatibility, Version=7.0.203.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/\r\nLOG: Initial PrivatePath = NULL\r\nLOG: Dynamic Base = NULL\r\nLOG: Cache Base = NULL\r\nLOG: AppName = MSBuild.exe\r\nCalling assembly : Microsoft.DotNet.ApiCompat.Task, Version=7.0.203.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51.\r\n===\r\nLOG: This bind starts in LoadFrom load context.\r\nWRN: Native image will not be probed in LoadFrom context. Native image will only be probed in default load context, like with Assembly.Load().\r\nLOG: Using application configuration file: C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe.Config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.DotNet.ApiCompatibility, Version=7.0.203.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nLOG: GAC Lookup was unsuccessful.\r\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.DotNet.ApiCompatibility.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.DotNet.ApiCompatibility/Microsoft.DotNet.ApiCompatibility.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.DotNet.ApiCompatibility.EXE.\r\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.DotNet.ApiCompatibility/Microsoft.DotNet.ApiCompatibility.EXE.\r\nLOG: Attempting download of new URL file:///C:/src/msbuild/.dotnet/sdk/7.0.203/Sdks/Microsoft.NET.Sdk/tools/net472/Microsoft.DotNet.ApiCompatibility.DLL.\r\nLOG: Assembly download was successful. Attempting setup of file: C:\\src\\msbuild\\.dotnet\\sdk\\7.0.203\\Sdks\\Microsoft.NET.Sdk\\tools\\net472\\Microsoft.DotNet.ApiCompatibility.dll\r\nLOG: Entering run-from-source setup phase.\r\nLOG: Assembly Name is: Microsoft.DotNet.ApiCompatibility, Version=7.0.203.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nLOG: Where-ref bind Codebase does not match what is found in default context. Keep the result in LoadFrom context.\r\nLOG: Binding succeeds. Returns assembly from C:\\src\\msbuild\\.dotnet\\sdk\\7.0.203\\Sdks\\Microsoft.NET.Sdk\\tools\\net472\\Microsoft.DotNet.ApiCompatibility.dll.\r\nLOG: Assembly is loaded in LoadFrom load context.\r\n```\r\n\r\n```\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.CodeAnalysis.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/\r\nLOG: Initial PrivatePath = NULL\r\nLOG: Dynamic Base = NULL\r\nLOG: Cache Base = NULL\r\nLOG: AppName = MSBuild.exe\r\nCalling assembly : Microsoft.DotNet.ApiCompatibility, Version=7.0.203.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51.\r\n===\r\nLOG: This bind starts in LoadFrom load context.\r\nWRN: Native image will not be probed in LoadFrom context. Native image will only be probed in default load context, like with Assembly.Load().\r\nLOG: Using application configuration file: C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe.Config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.CodeAnalysis.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\nLOG: GAC Lookup was unsuccessful.\r\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.CodeAnalysis.CSharp.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.CodeAnalysis.CSharp/Microsoft.CodeAnalysis.CSharp.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.CodeAnalysis.CSharp.EXE.\r\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.CodeAnalysis.CSharp/Microsoft.CodeAnalysis.CSharp.EXE.\r\nLOG: Attempting download of new URL file:///C:/src/msbuild/.dotnet/sdk/7.0.203/Sdks/Microsoft.NET.Sdk/tools/net472/Microsoft.CodeAnalysis.CSharp.DLL.\r\nLOG: Attempting download of new URL file:///C:/src/msbuild/.dotnet/sdk/7.0.203/Sdks/Microsoft.NET.Sdk/tools/net472/Microsoft.CodeAnalysis.CSharp/Microsoft.CodeAnalysis.CSharp.DLL.\r\nLOG: Attempting download of new URL file:///C:/src/msbuild/.dotnet/sdk/7.0.203/Sdks/Microsoft.NET.Sdk/tools/net472/Microsoft.CodeAnalysis.CSharp.EXE.\r\nLOG: Attempting download of new URL file:///C:/src/msbuild/.dotnet/sdk/7.0.203/Sdks/Microsoft.NET.Sdk/tools/net472/Microsoft.CodeAnalysis.CSharp/Microsoft.CodeAnalysis.CSharp.EXE.\r\nLOG: All probing URLs attempted and failed.\r\n```\r\n\r\nFrom a successful binlog it finds `CodeAnalysis.CSharp` in the package folder, maybe because it's using the toolset package all the time?\r\n\r\n```\r\nMicrosoft.DotNet.ApiCompat.Task.ValidatePackageTask\r\n    Assembly = S:\\msbuild\\.dotnet\\sdk\\7.0.203\\Sdks\\Microsoft.NET.Sdk\\targets\\..\\tools\\net472\\Microsoft.DotNet.ApiCompat.Task.dll\r\n    Parameters\r\n        NoWarn = ;1701;1702;1705;1591;NU1507;NU1603;NU5105;1701;1702;SYSLIB0011;SYSLIB0037;SYSLIB0044;RS0016;RS0017;;NU5131;1570;1572;1573;1587;IL2121;1701;1702\r\n        RuntimeGraph = S:\\msbuild\\.dotnet\\sdk\\7.0.203\\RuntimeIdentifierGraph.json\r\n        EnableStrictModeForCompatibleTfms = True\r\n        PackageAssemblyReferences\r\n            net472\r\n                MSBuildSourceProjectFile = S:\\msbuild\\src\\Deprecated\\Conversion\\Microsoft.Build.Conversion.csproj\r\n                ReferencePath = S:\\msbuild\\.packages\\microsoft.bcl.asyncinterfaces\\7.0.0\\lib\\net462\\Microsoft.Bcl.AsyncInterfaces.dll,S:\\msbuild\\artifacts\\obj\\Microsoft.Build\\Release\\net472\\ref\\Microsoft.Build.dll,S:\\msbuild\\artifacts\\obj\\Microsoft.Build.Engine\\Release\\net472\\ref\\Microsoft.Build.Engine.dll,S:\\msbuild\\artifacts\\obj\\Microsoft.Build.Framework\\Release\\net472\\ref\\Microsoft.Build.Framework.dll,S:\\msbuild\\.packages\\microsoft.io.redist\\6.0.0\\lib\\net472\\Microsoft.IO.Redist.dll,S:\\msbuild\\artifacts\\obj\\StringTools\\Release\\net472\\ref\\Microsoft.NET.StringTools.dll,S:\\msbuild\\.packages\\microsoft.visualstudio.setup.configuration.interop\\3.2.2146\\lib\\net35\\Microsoft.VisualStudio.Setup.Configuration.Interop.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\mscorlib.dll,S:\\msbuild\\.packages\\system.buffers\\4.5.1\\ref\\net45\\System.Buffers.dll,S:\\msbuild\\.packages\\system.collections.immutable\\7.0.0\\lib\\net462\\System.Collections.Immutable.dll,S:\\msbuild\\.packages\\system.configuration.configurationmanager\\7.0.0\\lib\\net462\\System.Configuration.ConfigurationManager.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Configuration.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Core.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Data.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Data.OracleClient.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Drawing.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.IO.Compression.FileSystem.dll,S:\\msbuild\\.packages\\system.memory\\4.5.5\\lib\\net461\\System.Memory.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Net.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Numerics.dll,S:\\msbuild\\.packages\\system.numerics.vectors\\4.5.0\\ref\\net46\\System.Numerics.Vectors.dll,S:\\msbuild\\.packages\\system.reflection.metadata\\7.0.0\\lib\\net462\\System.Reflection.Metadata.dll,S:\\msbuild\\.packages\\system.reflection.metadataloadcontext\\7.0.0\\lib\\net462\\System.Reflection.MetadataLoadContext.dll,S:\\msbuild\\.packages\\system.runtime.compilerservices.unsafe\\6.0.0\\lib\\net461\\System.Runtime.CompilerServices.Unsafe.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Runtime.Serialization.dll,S:\\msbuild\\.packages\\system.security.accesscontrol\\6.0.0\\lib\\net461\\System.Security.AccessControl.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Security.dll,S:\\msbuild\\.packages\\system.security.permissions\\7.0.0\\lib\\net462\\System.Security.Permissions.dll,S:\\msbuild\\.packages\\system.security.principal.windows\\5.0.0\\ref\\net461\\System.Security.Principal.Windows.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.ServiceProcess.dll,S:\\msbuild\\.packages\\system.text.encodings.web\\7.0.0\\lib\\net462\\System.Text.Encodings.Web.dll,S:\\msbuild\\.packages\\system.text.json\\7.0.0\\lib\\net462\\System.Text.Json.dll,S:\\msbuild\\.packages\\system.threading.tasks.dataflow\\7.0.0\\lib\\net462\\System.Threading.Tasks.Dataflow.dll,S:\\msbuild\\.packages\\system.threading.tasks.extensions\\4.5.4\\lib\\net461\\System.Threading.Tasks.Extensions.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Transactions.dll,S:\\msbuild\\.packages\\system.valuetuple\\4.5.0\\ref\\net47\\System.ValueTuple.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Xml.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\System.Xml.Linq.dll,C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\WindowsBase.dll\r\n                MSBuildSourceTargetName = GetReferencesForApiCompatValidatePackage\r\n                OriginalItemSpec = S:\\msbuild\\src\\Deprecated\\Conversion\\Microsoft.Build.Conversion.csproj\r\n        RoslynAssembliesPath = S:\\msbuild\\.packages\\microsoft.net.compilers.toolset\\4.7.0-1.23222.1\\build\\..\\tasks\\net472\r\n        BaselinePackageTargetPath = S:\\msbuild\\.packages\\microsoft.build.conversion.core\\17.6.0-preview-23178-11\\microsoft.build.conversion.core.17.6.0-preview-23178-11.nupkg\r\n        PackageTargetPath = S:\\msbuild\\artifacts\\packages\\Release\\Shipping\\Microsoft.Build.Conversion.Core.17.7.0-ci-23226-01.nupkg\r\n    Assembly loaded during TaskRun (Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask): Microsoft.DotNet.ApiCompatibility, Version=7.0.203.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 (location: S:\\msbuild\\.dotnet\\sdk\\7.0.203\\Sdks\\Microsoft.NET.Sdk\\tools\\net472\\Microsoft.DotNet.ApiCompatibility.dll, MVID: 1186e573-360e-4311-85c4-e06be7671abe, AppDomain: [Default])\r\n    Assembly loaded during TaskRun (Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask): Microsoft.DotNet.PackageValidation, Version=7.0.203.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 (location: S:\\msbuild\\.dotnet\\sdk\\7.0.203\\Sdks\\Microsoft.NET.Sdk\\tools\\net472\\Microsoft.DotNet.PackageValidation.dll, MVID: f82d0ce8-6232-4921-8384-216e76b6e042, AppDomain: [Default])\r\n    Assembly loaded during TaskRun (Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask): Microsoft.GeneratedCode, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (location: , MVID: 9d7171fc-3146-44a9-983b-06a8784e807a, AppDomain: [Default])\r\n    Assembly loaded during TaskRun (Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask): Microsoft.CodeAnalysis, Version=4.7.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (location: S:\\msbuild\\.packages\\microsoft.net.compilers.toolset\\4.7.0-1.23222.1\\tasks\\net472\\Microsoft.CodeAnalysis.dll, MVID: a8098514-21d5-4409-a050-924b3469ed11, AppDomain: [Default])\r\n    Assembly loaded during TaskRun (Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask): Microsoft.CodeAnalysis.CSharp, Version=4.7.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (location: S:\\msbuild\\.packages\\microsoft.net.compilers.toolset\\4.7.0-1.23222.1\\tasks\\net472\\Microsoft.CodeAnalysis.CSharp.dll, MVID: 17cfe251-bc40-4386-bef5-6d1cd74060a3, AppDomain: [Default])\r\n    Assembly loaded during TaskRun (Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask): netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 (location: C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\netstandard\\v4.0_2.0.0.0__cc7b13ffcd2ddd51\\netstandard.dll, MVID: 3a290359-4df5-45f3-88c2-228a7d84185a, AppDomain: [Default])\r\n    Executing 1 work item(s)...\r\n    Assembly loaded during TaskRun (Microsoft.DotNet.ApiCompat.Task.ValidatePackageTask): System.ValueTuple, Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 (location: C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ValueTuple\\v4.0_4.0.0.0__cc7b13ffcd2ddd51\\System.ValueTuple.dll, MVID: 1b57dc61-2a2b-406d-bb2c-afd7e8e5e6af, AppDomain: [Default])\r\n```",
        "createdAt": "2023-04-26T15:16:29Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@Forgind can you please pick up the investigation since you're kitten? Lower priority than 17.6 and 17.7-preview1 stuff.",
        "createdAt": "2023-04-26T15:22:04Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@steveharter noticed this locally and was sharing with @ViktorHofer.  \r\n\r\nI remember a similar version of this problem before \r\nhttps://github.com/dotnet/runtime/issues/59908\r\nhttps://github.com/dotnet/sdk/pull/22277\r\n\r\nIn that case it was due to torn state between roslyn assemblies.  I wonder if that could be the cause here as well and somehow the preloading that we do didn't help.",
        "createdAt": "2023-05-17T18:55:03Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "Here's a wild guess. This could be the result of the newly added `Microsoft.Net.Compilers.Toolset.Framework` nuget package. APICompat's target looks for the `Microsoft.Net.Compilers.Toolset` package only: https://github.com/dotnet/sdk/blob/838153aab0ab559f1a56c1de21f1967a9e37d1ac/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.ApiCompat.Common.targets#L23\r\n\r\nAlso, the use of `Contains` in that line seems wrong now with the newly added package.",
        "createdAt": "2023-05-17T20:50:24Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "> This could be the result of the newly added `Microsoft.Net.Compilers.Toolset.Framework` nuget package.\r\n\r\nI like the theory but I think it's not right, because the failing leg is \"use Visual Studio 17.5 to build the repo in release mode with SDK 7.0.203\" which shouldn't be aware of the `.Framework` package yet.\r\n\r\n> Also, the use of `Contains` in that line seems wrong now with the newly added package.\r\n\r\nThis still seems true though :)",
        "createdAt": "2023-05-17T20:59:39Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> I like the theory but I think it's not right, because the failing leg is \"use Visual Studio 17.5 to build the repo in release mode with SDK 7.0.203\" which shouldn't be aware of the .Framework package yet.\r\n\r\nYeah I just came to the same conclusion. Based on the binlog, the correct path is passed in to APICompat: `D:\\a\\1\\s\\.packages\\microsoft.net.compilers.toolset\\4.7.0-2.23262.3\\build\\..\\tasks\\net472`. That means that its probably the RoslynResolver that doesn't work anymore inside APICompat: https://github.com/dotnet/sdk/blob/838153aab0ab559f1a56c1de21f1967a9e37d1ac/src/ApiCompat/Microsoft.DotNet.ApiCompat.Shared/RoslynResolver.cs#L31-L34\r\n\r\nMy current guess is that before, the events were firing and resolving the assemblies from the custom path because the Task assembly had an assembly reference to the CodeAnalysis assemblies. With some refactoring this could have changed a few months ago so that its not ApiCompat.Task.dll that triggers the load of the Microsoft.CodeAnalysis assemblies but ApiCompatibility.dll which doesn't have the RoslynResolver enabled.",
        "createdAt": "2023-05-17T21:20:32Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "I think I understand this now. The problem is binding redirects on `System.Collections.Immutable`, kinda like this [break from last year on `System.Memory`](https://github.com/dotnet/msbuild/issues/7873#issuecomment-1227332842).\r\n\r\nSpecifically, [`MSBuild.exe.config` (in 17.5)](https://github.com/dotnet/msbuild/blob/fe79798bdb36571368176a6b9f8fdd15a5646500/src/MSBuild/app.amd64.config#L78-L83) pulls references up to `System.Collections.Immutable` 6.0.0. That _matches_ the Roslyn 4.6 dependency, so loading Roslyn up to 4.6 in the context of MSBuild 17.5 works great.\r\n\r\nHowever, Roslyn 4.7 has moved to SCI 7.0.0.0 ([as has MSBuild 17.6](https://github.com/dotnet/msbuild/pull/8347) but that's not relevant here because that AzDO machine definition is still on 17.6). That isn't automatically unified by the binding redirect (it's out of the range `0.0.0.0-6.0.0.0`) so the loader finds it next to Roslyn:\r\n\r\n```text\r\nCalling assembly : Microsoft.CodeAnalysis, Version=4.7.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35.\r\n...\r\nLOG: Assembly download was successful. Attempting setup of file: C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\System.Collections.Immutable.dll\r\nLOG: Entering run-from-source setup phase.\r\nLOG: Assembly Name is: System.Collections.Immutable, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nWRN: Comparing the assembly name resulted in the mismatch: Major Version\r\n...\r\nLOG: Attempting download of new URL file:///C:/.tools/.nuget/packages/microsoft.net.compilers.toolset/4.7.0-2.23262.3/tasks/net472/System.Collections.Immutable.DLL.\r\nLOG: Assembly download was successful. Attempting setup of file: C:\\.tools\\.nuget\\packages\\microsoft.net.compilers.toolset\\4.7.0-2.23262.3\\tasks\\net472\\System.Collections.Immutable.dll\r\nLOG: Entering run-from-source setup phase.\r\nLOG: Assembly Name is: System.Collections.Immutable, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: Where-ref bind Codebase does not match what is found in default context. Keep the result in LoadFrom context.\r\nLOG: Binding succeeds. Returns assembly from C:\\.tools\\.nuget\\packages\\microsoft.net.compilers.toolset\\4.7.0-2.23262.3\\tasks\\net472\\System.Collections.Immutable.dll.\r\nLOG: Assembly is loaded in LoadFrom load context.\r\n```\r\n\r\nHowever, the task references `Microsoft.DotNet.ApiCompatibility, Version=7.0.203.0` which depends on `System.Collections.Immutable, Version=5.0.0.0`. _That_ gets unified to 6.0.0.0 by the `MSBuild.exe.config` binding redirects to 6.0.0.0.\r\n\r\nThen the failure is\r\n\r\n```\r\nMethod not found: 'Void Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions..ctor(Microsoft.CodeAnalysis.OutputKind, Boolean, System.String, System.String, System.String, System.Collections.Generic.IEnumerable`1<System.String>, Microsoft.CodeAnalysis.OptimizationLevel, Boolean, Boolean, System.String, System.String, System.Collections.Immutable.ImmutableArray`1<Byte>, System.Nullable`1<Boolean>, Microsoft.CodeAnalysis.Platform, Microsoft.CodeAnalysis.ReportDiagnostic, Int32, System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<System.String,Microsoft.CodeAnalysis.ReportDiagnostic>>, Boolean, Boolean, Microsoft.CodeAnalysis.XmlReferenceResolver, Microsoft.CodeAnalysis.SourceReferenceResolver, Microsoft.CodeAnalysis.MetadataReferenceResolver, Microsoft.CodeAnalysis.AssemblyIdentityComparer, Microsoft.CodeAnalysis.StrongNameProvider, Boolean, Microsoft.CodeAnalysis.MetadataImportOptions, Microsoft.CodeAnalysis.NullableContextOptions)'.\r\n   at Microsoft.DotNet.ApiCompatibility.AssemblySymbolLoader..ctor(Boolean resolveAssemblyReferences)\r\n```\r\n\r\nThe mismatch is on ``System.Collections.Immutable.ImmutableArray`1<Byte>``. The calling assembly is asking for a version-6 ImmutableArray but the implementing assembly has a version-7 ImmutableArray.\r\n\r\nI think this is a problem that a user could run into for certain combinations of VS and SDK, but I don't know if it's a bug worth fixing, especially since VS 17.5 was STS and is now out of support. Our repo won't notice this problem in a couple of weeks after the build image is updated to VS 17.6, when MSBuild will binding redirect everything to 7 and unify again.",
        "createdAt": "2023-05-17T21:51:31Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Makes sense.  It\u2019s a type agreement problem. We roll forward to latest Roslyn but don\u2019t do so for its dependencies which overlap with ours (and the types we exchange with Roslyn).  I wonder if we should add more assemblies to the set that gets loaded from Roslyn path? \r\nhttps://github.com/dotnet/sdk/blob/10454f41ce95d767fb08e560a67da13ccba7c67d/src/ApiCompat/Microsoft.DotNet.ApiCompat.Shared/RoslynResolver.cs#L80",
        "createdAt": "2023-05-18T00:36:26Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "I think you might have to spin up an AppDomain to get that fully right, since MSBuild also uses SCI (but not on our public interface so having your own in the task that matches Roslyn would be fine). The loader was perfectly happy finding SCI 7 for Roslyn in the LoadFrom context, but it didn't do that when the task itself asked for SCI 5 since that was already satisfied.",
        "createdAt": "2023-05-18T13:29:32Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@MichalPavlik to unblock this codeflow, I think we could switch the `Windows Full Release (no bootstrap)` build definition to use the dnceng `windows.vs2022preview.amd64.open` queue instead of the current hosted windows queue. Could you try that?",
        "createdAt": "2023-05-18T18:34:13Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> I think you might have to spin up an AppDomain to get that fully right, since MSBuild also uses SCI (but not on our public interface so having your own in the task that matches Roslyn would be fine). The loader was perfectly happy finding SCI 7 for Roslyn in the LoadFrom context, but it didn't do that when the task itself asked for SCI 5 since that was already satisfied.\r\n\r\nWe already do some manual loading.  We've got two host/plugin releationships here.  MSBuild is hosting the task and needs to unify all the types it talks to the task with.  Luckily MSBuild controls this pretty well with a bindingRedirect hammer for it's own types and the framework unification for framework types (and is careful not to add more types to those interfaces).  This task is the \"host\" for roslyn but we didn't take care to unify all the assemblies in Roslyn's public API -- only Roslyn itself.  So we could look at all the assemblies that make up the public API and try to load those from the roslyn path.",
        "createdAt": "2023-05-19T16:02:56Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "> @MichalPavlik to unblock this codeflow, I think we could switch the `Windows Full Release (no bootstrap)` build definition to use the dnceng `windows.vs2022preview.amd64.open` queue instead of the current hosted windows queue. Could you try that?\r\n\r\nDoing this in #8789.",
        "createdAt": "2023-05-22T19:53:56Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}