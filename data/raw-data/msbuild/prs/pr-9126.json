{
  "number": 9126,
  "title": "Removing dead code unit tests and BinFmt enablement",
  "body": "Fixes #8925\r\n\r\n### Context\r\nFollowing types serialization is no more facilitated by BinFmt - so removing associated unit tests:\r\n* `InvalidProjectFileException` - all `BuildExceptionBase` exceptions tested via [`TestSerializationOfBuildExceptions`](https://github.com/dotnet/msbuild/blob/0cf89d3b27af71d0e065e4c69ee030cfe26b90c5/src/Build.UnitTests/BackEnd/BinaryTranslator_Tests.cs#L259); plus `InvalidProjectFileException` has it's own test: [`TestInvalidProjectFileException_NestedWithStack`](https://github.com/dotnet/msbuild/blob/0cf89d3b27af71d0e065e4c69ee030cfe26b90c5/src/Build.UnitTests/BackEnd/BinaryTranslator_Tests.cs#L282)\r\n* `LoggerException` - same as above\r\n* `ProjectStartedEventArgs` - serialized via translatable only\r\n* `AssemblyName_Ex` - serialized via translatable only. The edited test file already contained tests for both types of serialization\r\n* `CopyOnWriteDictionary` - not custom serialized on any codepath (possibly only via `TranslateDictionary` taking `IDictionary`)\r\n\r\n### Changes Made\r\nAppart from removing serialization tests of above mentioned types - removed the `EnableUnsafeBinaryFormatterSerialization` which was needed just because of those tests\r\n",
  "state": "MERGED",
  "createdAt": "2023-08-14T13:56:39Z",
  "updatedAt": "2023-08-21T13:08:44Z",
  "closedAt": "2023-08-21T13:08:40Z",
  "mergedAt": "2023-08-21T13:08:40Z",
  "additions": 14,
  "deletions": 296,
  "changedFiles": 9,
  "headRefName": "proto/remove-binfmt-enablement",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a5002dc893ec801d71b0bb430dbbfdf648d43353",
          "message": "Removing dead code unit tests and BinFmt enablement",
          "committedDate": "2023-08-14T13:46:28Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "899c91db4228ddcf635d52ce3393420023216f39",
          "message": "Facilitate tests that relied on BinFmt",
          "committedDate": "2023-08-15T08:03:44Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c87e8933ef9c962b97eb02a316178363b9e31e9f",
          "message": "Modify visibility",
          "committedDate": "2023-08-15T08:20:29Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@rokonec - can you have a look on fail of `Build_WithCustomBuildArgs_NetCore`? \r\n\r\n```\r\nSystem.NotSupportedException: BinaryFormatter serialization and deserialization are disabled within this application.\r\n```\r\n\r\nI thought this should have been caught - correct?",
        "createdAt": "2023-08-14T14:55:45Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> @rokonec - can you have a look on fail of `Build_WithCustomBuildArgs_NetCore`?\r\n> \r\n> ```\r\n> System.NotSupportedException: BinaryFormatter serialization and deserialization are disabled within this application.\r\n> ```\r\n> \r\n> I thought this should have been caught - correct?\r\n\r\nDiscussed offline - this is actually a wrong test (as it explicitly opts out from the checking functionality but do not assert on the BinFmt exception)",
        "createdAt": "2023-08-14T16:29:50Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "NIT: Is it still Theory with just one InlineData",
              "createdAt": "2023-08-21T11:46:57Z",
              "path": "src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs",
              "diffHunk": "@@ -61,10 +61,21 @@ public void TaskNodesDieAfterBuild()\n             }\n         }\n \n-        [Theory]\n+        [DotNetOnlyTheory]\n+        [InlineData(false)]\n+        // [InlineData(true)] <-- explicitly opting out on core will lead to node crash\n+        public void VariousParameterTypesCanBeTransmittedToAndReceivedFromTaskHost_NetCore(",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": "Good point.\r\nI wanted to preserve the argument (ond overall the same signature as for the FulFw test) to make it explicit that we do not want to test the legacy behavior for core (to prevent anyone from attempting to reverse add-it).",
              "createdAt": "2023-08-21T13:08:31Z",
              "path": "src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs",
              "diffHunk": "@@ -61,10 +61,21 @@ public void TaskNodesDieAfterBuild()\n             }\n         }\n \n-        [Theory]\n+        [DotNetOnlyTheory]\n+        [InlineData(false)]\n+        // [InlineData(true)] <-- explicitly opting out on core will lead to node crash\n+        public void VariousParameterTypesCanBeTransmittedToAndReceivedFromTaskHost_NetCore(",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}