{
  "number": 6971,
  "title": "MSBuild 17.0 release notes",
  "body": "I feel a bit bad condensing so much work into \"performance improvments\".\r\n",
  "state": "MERGED",
  "createdAt": "2021-10-19T17:00:19Z",
  "updatedAt": "2021-11-12T22:37:06Z",
  "closedAt": "2021-11-12T22:37:06Z",
  "mergedAt": "2021-11-12T22:37:06Z",
  "additions": 99,
  "deletions": 0,
  "changedFiles": 1,
  "headRefName": "relnotes-17",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "3d00784fc4301e88c897d85020ae9011f5581845",
          "message": "Raw commit dump",
          "committedDate": "2021-10-18T21:56:35Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a94b0ab4c4fc7ee6fb2ab0889251a21e6fc98eb",
          "message": "more relnotes",
          "committedDate": "2021-10-19T16:05:24Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "372293e979369154d2a2a38c8632e8366e67d218",
          "message": "first draft 17.0 relnotes complete",
          "committedDate": "2021-10-19T16:58:49Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6968363174c3aec0b9754addf6e4fc19525adfc2",
          "message": "Periodt.",
          "committedDate": "2021-10-19T20:18:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "super-nit: Missing period.",
              "createdAt": "2021-10-19T19:55:33Z",
              "path": "documentation/Changelog.md",
              "diffHunk": "@@ -1,5 +1,104 @@\n # MSBuild Changelog\n \n+## MSBuild 17.0.0\n+\n+This version of MSBuild shipped with Visual Studio 2022 version 17.0.0 and .NET SDK 6.0.100.\n+\n+### What's new\n+\n+* MSBuild now reports its version as `17` and uses Visual Studio 2022 versions of tasks where appropriate.\n+* MSBuild now targets .NET Framework 4.7.2 and .NET 6.0.\n+* 64-bit MSBuild is now used for builds from Visual Studio.\n+* Binary logs are smaller and have more information.\n+* `MSBuildCopyContentTransitively` is now on by default, ensuring consistency in output folders on incremental builds.\n+* The method `GetType()` can no longer be called in property functions.\n+\n+### Detailed release notes\n+\n+#### Added\n+\n+* Intrinsic tasks now log their location (#6397). Thanks, @KirillOsenkov!\n+* `TargetSkippedEventArgs` now has `TargetSkipReason` and `OriginalBuildEventContext` (#6402, #6577). Thanks, @KirillOsenkov!\n+* `TaskStarted` events now log line and column (#6399). Thanks, @KirillOsenkov!\n+* ETW trace events for PerformDependencyAnalysis (#6658), WriteLinesToFile (#6670), CopyUpToDate (#6661).\n+* If the environment variable `MSBuildDebugEngine` is set, MSBuild will create binary logs for all operations to `MSBUILDDEBUGPATH` regardless of how it is called (#6639, #6792).\n+* `ProjectReference`s can now negotiate `Platform` (#6655, #6724, #6889).\n+* Tasks can now call `TaskLoggingHelper.LogsMessagesOfImportance` to determine if any attached logger would preserve a log message before constructing it (to save time in the not-being-logged case) (#6381, #6737).\n+* Support referencing assemblies with generic attributes (#6735). Thanks, @davidwrighton!\n+* XSD-based MSBuild IntelliSense now supports `ImplicitUsings` and `Using` items (#6755), `InternalsVisibleTo` (#6778), Windows Forms properties (#6860), `DebugType` (#6849), and `SatelliteResourceLanguages` (#6861). Thanks, @pranavkm, @DamianEdwards, @RussKie, and @drewnoakes!\n+* Tasks can now call `TaskLoggingHelper.IsTaskInputLoggingEnabled` and avoid redundant logging of inputs (#6803).\n+* Support extracting resource namespace from C# source that uses file-scoped namespaces (#6881).\n+\n+#### Changed\n+\n+* The on-disk format of serialized caches has changed (#6350, #6324, #6490, #6674).\n+* MSBuild is now [signed with a new certificate](https://github.com/dotnet/announcements/issues/184) (#6448).\n+* `BuildParameters.DisableInprocNode` now applies to more processes (#6400).\n+* `VCTargetsPath` now defaults to `v170` (#6550).\n+* MSBuild no longer logs `Building with tools version \"Current\"` (#6627). Thanks, @KirillOsenkov!\n+* Text loggers now log properties and items at the end of evaluation (#6535).\n+* `MSBuildCopyContentTransitively` is now on by default, ensuring consistency in output folders on incremental builds (#6622, #6703).\n+* MSBuild on .NET 6 has improved task-assembly-reference fallback behavior (#6558).\n+* MSBuild features gated on the 16.8 changewave are now nonconfigurable (#6634).\n+* The deprecated import of `$(CoreCrossTargetingTargetsPath)` was removed (#6668). Thanks, @Nirmal4G!\n+* Improved error message for `MSB4213` (#6640).\n+* The method `GetType()` can no longer be called in property functions (#6769).\n+* MSBuild is now fully NGENed by Visual Studio setup (#6764).\n+* MSBuild (and Visual Studio) now reference `System.Text.Json` 5.0.2 (#6784). Thanks, @JakeRadMSFT!\n+* Default to SHA2 digest for ClickOnce manifest when certificate signing algorithm is sha256/384/512 (#6882).\n+\n+#### Fixed\n+\n+* Solution builds should work when using the secret environment variable `MSBUILDNOINPROCNODE` (#6385).\n+* Solution extensions can now use `BeforeTargets=\"ValidateSolutionConfiguration\"` (#6454).\n+* Performance improvements (#6529, #6556, #6598, #6632, #6669, #6671, #6666, #6678, #6680, #6705, #6595, #6716, #6786, #6816, #6832, #6845).\n+* Single-file ClickOnce publish includes file association icons (#6578).\n+* Improved robustness in error handling of libraries without resources (#6546).\n+* Fixed missing information in `Project`'s `DebuggerDisplay` (#6650).\n+* `ResolveAssemblyReferences` output paths are now output in normalized form (#6533).\n+* Improved handling of satellite assemblies in ClickOnce (#6665).\n+* Roslyn code analyzers are no longer run during XAML precompilation (#6676). Thanks, @jlaanstra!\n+* 64-bit API callers no longer need to set `MSBUILD_EXE_PATH` (#6683, #6746).\n+* `EvaluateStop` ETW events are now automatically correlated with `EvaluateStart` (#6725).\n+* Evaluation time is included in text performance traces (#6725).\n+* Add PackageDescription to `Microsoft.NET.StringTools` (#6740).\n+* Fixed deadlock between `ExecuteSubmission` and `LoggingService` (#6717).\n+* Narrowed conditions where MSBuild would blame NuGet for SDK resolution problems (#6742).\n+* `CombineTargetFrameworkInfoProperties` no longer fails on portable framework names (#6699).\n+* Avoid needless builds of `GenerateBindingRedirects` (#6726).\n+* The solution configuration is now passed to experimental cache plugins (#6738).\n+* Clearer errors when SDK resolvers throw exceptions (#6763).\n+* Improved errors from `InternableString.ExpensiveConvertToString` (#6798).\n+* Binding redirects for all `System.*` assemblies updated (#6830).\n+* Fixed deadlock between `BuildManager` and `LoggingService` (#6837).\n+* Log message arguments for warnings and errors (#6804). Thanks, @KirillOsenkov!\n+* Use static CoreClrAssemblyLoader for SDK resolvers (#6864). Thanks, @marcin-krystianc!\n+* Avoid break caused by fix and workaround for AL path colliding (#6884).\n+* Support private-use area Unicode characters in paths passed to `XslTransformation` (#6863, #6946). Thanks, @lanfeust69!\n+* Use the correct .NET host when called from a .NET 6.0 application (#6890).\n+\n+#### Infrastructure\n+\n+* This repo now builds with Arcade 6.0 (#6143).\n+* Use newer Ubuntu versions for Linux CI builds (#6488).\n+* MSBuild now uses [Arcade-powered source build](https://github.com/dotnet/source-build/tree/ba0b33e9f96354b8d07317c3cdf406ce666921f8/Documentation/planning/arcade-powered-source-build) (#6387).\n+* Improved repo issue templates and automation (#6557).\n+* Whitespace cleanup (#6565).\n+* This repo no longer needs to double-specify the SDK version (#6596).\n+* Simplify references to `TargetFramework` using new intrinsics (#5799).\n+* Reference the `Microsoft.DotNet.XUnitExtensions` package from Arcade instead of our fork (#6638).\n+* Use [`BannedApiAnalyzers`](https://www.nuget.org/packages/Microsoft.CodeAnalysis.BannedApiAnalyzers/) (#6675).\n+* Enable analyzers for the MSBuild repo with rules similar to `dotnet/runtime` (#5656). Thanks, @elachlan!\n+* Improved internal OptProf training scenarios (#6758).\n+* Delete Unreachable code (#6805). Thanks, @KirillOsenkov!\n+* Upgrade System.Net.Http package version used in tests (#6879).\n+\n+#### Documentation\n+\n+* Use GitHub-generated Markdown tables of contents (#6760).\n+* Fixed validation issues in docs build (#6744).\n+* Descriptions of labels in use in this repo (#6873)",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "Hey, if it was just one I did great :)\r\n\r\n```suggestion\r\n* Descriptions of labels in use in this repo (#6873).\r\n```",
              "createdAt": "2021-10-19T20:18:31Z",
              "path": "documentation/Changelog.md",
              "diffHunk": "@@ -1,5 +1,104 @@\n # MSBuild Changelog\n \n+## MSBuild 17.0.0\n+\n+This version of MSBuild shipped with Visual Studio 2022 version 17.0.0 and .NET SDK 6.0.100.\n+\n+### What's new\n+\n+* MSBuild now reports its version as `17` and uses Visual Studio 2022 versions of tasks where appropriate.\n+* MSBuild now targets .NET Framework 4.7.2 and .NET 6.0.\n+* 64-bit MSBuild is now used for builds from Visual Studio.\n+* Binary logs are smaller and have more information.\n+* `MSBuildCopyContentTransitively` is now on by default, ensuring consistency in output folders on incremental builds.\n+* The method `GetType()` can no longer be called in property functions.\n+\n+### Detailed release notes\n+\n+#### Added\n+\n+* Intrinsic tasks now log their location (#6397). Thanks, @KirillOsenkov!\n+* `TargetSkippedEventArgs` now has `TargetSkipReason` and `OriginalBuildEventContext` (#6402, #6577). Thanks, @KirillOsenkov!\n+* `TaskStarted` events now log line and column (#6399). Thanks, @KirillOsenkov!\n+* ETW trace events for PerformDependencyAnalysis (#6658), WriteLinesToFile (#6670), CopyUpToDate (#6661).\n+* If the environment variable `MSBuildDebugEngine` is set, MSBuild will create binary logs for all operations to `MSBUILDDEBUGPATH` regardless of how it is called (#6639, #6792).\n+* `ProjectReference`s can now negotiate `Platform` (#6655, #6724, #6889).\n+* Tasks can now call `TaskLoggingHelper.LogsMessagesOfImportance` to determine if any attached logger would preserve a log message before constructing it (to save time in the not-being-logged case) (#6381, #6737).\n+* Support referencing assemblies with generic attributes (#6735). Thanks, @davidwrighton!\n+* XSD-based MSBuild IntelliSense now supports `ImplicitUsings` and `Using` items (#6755), `InternalsVisibleTo` (#6778), Windows Forms properties (#6860), `DebugType` (#6849), and `SatelliteResourceLanguages` (#6861). Thanks, @pranavkm, @DamianEdwards, @RussKie, and @drewnoakes!\n+* Tasks can now call `TaskLoggingHelper.IsTaskInputLoggingEnabled` and avoid redundant logging of inputs (#6803).\n+* Support extracting resource namespace from C# source that uses file-scoped namespaces (#6881).\n+\n+#### Changed\n+\n+* The on-disk format of serialized caches has changed (#6350, #6324, #6490, #6674).\n+* MSBuild is now [signed with a new certificate](https://github.com/dotnet/announcements/issues/184) (#6448).\n+* `BuildParameters.DisableInprocNode` now applies to more processes (#6400).\n+* `VCTargetsPath` now defaults to `v170` (#6550).\n+* MSBuild no longer logs `Building with tools version \"Current\"` (#6627). Thanks, @KirillOsenkov!\n+* Text loggers now log properties and items at the end of evaluation (#6535).\n+* `MSBuildCopyContentTransitively` is now on by default, ensuring consistency in output folders on incremental builds (#6622, #6703).\n+* MSBuild on .NET 6 has improved task-assembly-reference fallback behavior (#6558).\n+* MSBuild features gated on the 16.8 changewave are now nonconfigurable (#6634).\n+* The deprecated import of `$(CoreCrossTargetingTargetsPath)` was removed (#6668). Thanks, @Nirmal4G!\n+* Improved error message for `MSB4213` (#6640).\n+* The method `GetType()` can no longer be called in property functions (#6769).\n+* MSBuild is now fully NGENed by Visual Studio setup (#6764).\n+* MSBuild (and Visual Studio) now reference `System.Text.Json` 5.0.2 (#6784). Thanks, @JakeRadMSFT!\n+* Default to SHA2 digest for ClickOnce manifest when certificate signing algorithm is sha256/384/512 (#6882).\n+\n+#### Fixed\n+\n+* Solution builds should work when using the secret environment variable `MSBUILDNOINPROCNODE` (#6385).\n+* Solution extensions can now use `BeforeTargets=\"ValidateSolutionConfiguration\"` (#6454).\n+* Performance improvements (#6529, #6556, #6598, #6632, #6669, #6671, #6666, #6678, #6680, #6705, #6595, #6716, #6786, #6816, #6832, #6845).\n+* Single-file ClickOnce publish includes file association icons (#6578).\n+* Improved robustness in error handling of libraries without resources (#6546).\n+* Fixed missing information in `Project`'s `DebuggerDisplay` (#6650).\n+* `ResolveAssemblyReferences` output paths are now output in normalized form (#6533).\n+* Improved handling of satellite assemblies in ClickOnce (#6665).\n+* Roslyn code analyzers are no longer run during XAML precompilation (#6676). Thanks, @jlaanstra!\n+* 64-bit API callers no longer need to set `MSBUILD_EXE_PATH` (#6683, #6746).\n+* `EvaluateStop` ETW events are now automatically correlated with `EvaluateStart` (#6725).\n+* Evaluation time is included in text performance traces (#6725).\n+* Add PackageDescription to `Microsoft.NET.StringTools` (#6740).\n+* Fixed deadlock between `ExecuteSubmission` and `LoggingService` (#6717).\n+* Narrowed conditions where MSBuild would blame NuGet for SDK resolution problems (#6742).\n+* `CombineTargetFrameworkInfoProperties` no longer fails on portable framework names (#6699).\n+* Avoid needless builds of `GenerateBindingRedirects` (#6726).\n+* The solution configuration is now passed to experimental cache plugins (#6738).\n+* Clearer errors when SDK resolvers throw exceptions (#6763).\n+* Improved errors from `InternableString.ExpensiveConvertToString` (#6798).\n+* Binding redirects for all `System.*` assemblies updated (#6830).\n+* Fixed deadlock between `BuildManager` and `LoggingService` (#6837).\n+* Log message arguments for warnings and errors (#6804). Thanks, @KirillOsenkov!\n+* Use static CoreClrAssemblyLoader for SDK resolvers (#6864). Thanks, @marcin-krystianc!\n+* Avoid break caused by fix and workaround for AL path colliding (#6884).\n+* Support private-use area Unicode characters in paths passed to `XslTransformation` (#6863, #6946). Thanks, @lanfeust69!\n+* Use the correct .NET host when called from a .NET 6.0 application (#6890).\n+\n+#### Infrastructure\n+\n+* This repo now builds with Arcade 6.0 (#6143).\n+* Use newer Ubuntu versions for Linux CI builds (#6488).\n+* MSBuild now uses [Arcade-powered source build](https://github.com/dotnet/source-build/tree/ba0b33e9f96354b8d07317c3cdf406ce666921f8/Documentation/planning/arcade-powered-source-build) (#6387).\n+* Improved repo issue templates and automation (#6557).\n+* Whitespace cleanup (#6565).\n+* This repo no longer needs to double-specify the SDK version (#6596).\n+* Simplify references to `TargetFramework` using new intrinsics (#5799).\n+* Reference the `Microsoft.DotNet.XUnitExtensions` package from Arcade instead of our fork (#6638).\n+* Use [`BannedApiAnalyzers`](https://www.nuget.org/packages/Microsoft.CodeAnalysis.BannedApiAnalyzers/) (#6675).\n+* Enable analyzers for the MSBuild repo with rules similar to `dotnet/runtime` (#5656). Thanks, @elachlan!\n+* Improved internal OptProf training scenarios (#6758).\n+* Delete Unreachable code (#6805). Thanks, @KirillOsenkov!\n+* Upgrade System.Net.Http package version used in tests (#6879).\n+\n+#### Documentation\n+\n+* Use GitHub-generated Markdown tables of contents (#6760).\n+* Fixed validation issues in docs build (#6744).\n+* Descriptions of labels in use in this repo (#6873)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}