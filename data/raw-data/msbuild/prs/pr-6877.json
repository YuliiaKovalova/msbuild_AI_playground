{
  "number": 6877,
  "title": "Clean up minimum Windows version checks",
  "body": "### Context\r\n\r\nPer https://docs.microsoft.com/en-us/visualstudio/releases/2022/system-requirements, Visual Studio 2022 is not supported on pre-Windows 10 OS.\r\n\r\n### Changes Made\r\n\r\nUpdated and removed Windows version checks accordingly.\r\n\r\n### Testing\r\n\r\nBuild and smoke test on Windows 10.\r\n",
  "state": "MERGED",
  "createdAt": "2021-09-22T10:12:23Z",
  "updatedAt": "2021-10-04T18:25:39Z",
  "closedAt": "2021-10-04T18:25:39Z",
  "mergedAt": "2021-10-04T18:25:39Z",
  "additions": 35,
  "deletions": 72,
  "changedFiles": 18,
  "headRefName": "minimum-windows-version-cleanup",
  "isDraft": false,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "84498ea92d9f73c1ad4cd4a2ad07c64c3f1d1a29",
          "message": "Clean up minimum Windows version checks",
          "committedDate": "2021-09-22T10:11:46Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5d6c1e8346ec5f342b72f455a5feb06391c0de3e",
          "message": "[Debug] Check which OS is used by the pipeline",
          "committedDate": "2021-09-22T12:11:04Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "afa86d40cd42f497337792ffe488ce1a54cfb490",
          "message": "Revert \"[Debug] Check which OS is used by the pipeline\"\n\nThis reverts commit 5d6c1e8346ec5f342b72f455a5feb06391c0de3e.",
          "committedDate": "2021-09-22T14:16:33Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "260639964a49bffe40233fc1b4cde76a8cae6be4",
          "message": "Guard against non-manifested host .exe's",
          "committedDate": "2021-09-22T14:17:39Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "726a8585081c957c1f6a07e4651c791658284f8e",
          "message": "Set s_executingMainEntryPoint only if FEATURE_OSVERSION is defined",
          "committedDate": "2021-09-22T14:29:45Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b4520c08278d31e19d3a994224f3d81b83b676d1",
          "message": "Revert \"Set s_executingMainEntryPoint only if FEATURE_OSVERSION is defined\"\n\nThis reverts commit 726a8585081c957c1f6a07e4651c791658284f8e.",
          "committedDate": "2021-10-01T06:12:06Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "32cfb7fab9af8c85200ec04dbc56c3671603e80b",
          "message": "Revert \"Guard against non-manifested host .exe's\"\n\nThis reverts commit 260639964a49bffe40233fc1b4cde76a8cae6be4.",
          "committedDate": "2021-10-01T06:12:20Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a6271b5a237809246ca7ac989d9540f19b4ddd67",
          "message": "Make Win7 the minimum version for Framework",
          "committedDate": "2021-10-01T06:28:14Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I'm not sure this is ok for .NET Core; .NET 6 is supported on Win7 and 8.1: https://github.com/dotnet/core/blob/main/release-notes/6.0/supported-os.md",
        "createdAt": "2021-09-22T14:21:50Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "True, but `FEATURE_OSVERSION` is defined only in .NET Framework builds so the entry point version check + error message should be OK to update. Generally we can assume >= Win7 everywhere in the codebase which led to some dead code removal opportunities.",
        "createdAt": "2021-09-22T14:26:08Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Just because VS stops supporting old windows doesn't mean we have to stop as well. Have we posted that we're not supporting old windows either?",
        "createdAt": "2021-09-27T15:31:23Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "My understanding is that Framework MSBuild doesn't officially ship outside of VS. It looks like in VS 2022 the \"Build Tools\" SKU doesn't have different minimum system requirements from the full installation either - which was the case in previous versions.\r\n\r\nSo technically I think it is true that the Framework build supports only 10 and newer. Doesn't of course mean that it doesn't work on Win7 and customers don't depend on such untested configurations.\r\n\r\nI agree that the check for minimum Windows version may be too aggressive. Especially since Core still supports Win7 and we don't seem to get much value from restricting Framework to >=10. On the other hand, we definitely don't support Windows 2000 which is what the error message currently says.\r\n\r\nHow about we unify the minimum version to Win7 everywhere for now? That would get around the ugliness with running in non-manifested exe's and still let us delete some of the ancient code.",
        "createdAt": "2021-09-29T08:51:42Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "> My understanding is that Framework MSBuild doesn't officially ship outside of VS.\r\n\r\nThat's correct, and we should follow the VS system requirements if it's helpful to do so.\r\n\r\n> How about we unify the minimum version to Win7 everywhere for now?\r\n\r\nThis is fine by me. ",
        "createdAt": "2021-09-29T14:20:28Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Few things:\r\nCan't you also check if Process.GetCurrentProcess().MainModule.FileName is msbuild.exe to know if we're hosted in something else?\r\nWe could be hosted in another process but spin out msbuild.exe worker nodes; wouldn't this mean they have the wrong idea?",
              "createdAt": "2021-09-27T14:42:48Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -89,6 +89,13 @@ public enum ExitType\n             ProjectCacheFailure\n         }\n \n+#if FEATURE_OSVERSION\n+        /// <summary>\n+        /// True if the Main method was invoked. False indicates that we're running hosted in another process (e.g. unit tests).",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "> Can't you also check if Process.GetCurrentProcess().MainModule.FileName is msbuild.exe to know if we're hosted in something else?\r\n\r\nThat would also work, with the small downside of potential false positives as anyone can name their process \"MSBuild\" but it is slower that setting/checking a flag. The host could be calling the `Main` method to circumvent the check but that's not something we support as a public API so I wouldn't worry about it much.\r\n\r\n> We could be hosted in another process but spin out msbuild.exe worker nodes; wouldn't this mean they have the wrong idea?\r\n\r\nMSBuild.exe has the correct manifest making Windows 10 (and later) not lie about its version, so if we're hosted and spin out an MSBuild.exe process, it's fine to be checking for `(10, 0)` there.",
              "createdAt": "2021-09-29T08:39:21Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -89,6 +89,13 @@ public enum ExitType\n             ProjectCacheFailure\n         }\n \n+#if FEATURE_OSVERSION\n+        /// <summary>\n+        /// True if the Main method was invoked. False indicates that we're running hosted in another process (e.g. unit tests).",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "It looks like this variable is set once and used once\u2014in a function that executes once.\r\n\r\nInstead of a new variable, what if we inlined it? In Main:\r\n```C#\r\nInitializationException.VerifyThrow(Environement.OSVersion.Platform == PlatformID.Win32NT && Environment.OSVersion.Version.Major >= 10, \"UnsupportedOS\");\r\n```\r\n\r\nand in Execute:\r\n```C#\r\nInitializationException.VerifyThrow(Environement.OSVersion.Platform == PlatformID.Win32NT && (Environment.OSVersion.Version.Major > 6 || (Environment.OSVersion.Version.Major == 6 && Environment.OSVersion.Version.Minor >= 2), \"UnsupportedOS\");\r\n```",
              "createdAt": "2021-09-29T14:45:16Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -89,6 +89,13 @@ public enum ExitType\n             ProjectCacheFailure\n         }\n \n+#if FEATURE_OSVERSION\n+        /// <summary>\n+        /// True if the Main method was invoked. False indicates that we're running hosted in another process (e.g. unit tests).\n+        /// </summary>\n+        private static bool s_executingMainEntryPoint;",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I didn't want to move the check to not break something. What you're suggesting would be fine I think, thank you!\r\n\r\nI have removed the variable and made us use Win7 as the minimum version, per the rationale [above](https://github.com/dotnet/msbuild/pull/6877#issuecomment-929973564).",
              "createdAt": "2021-10-01T06:49:40Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -89,6 +89,13 @@ public enum ExitType\n             ProjectCacheFailure\n         }\n \n+#if FEATURE_OSVERSION\n+        /// <summary>\n+        /// True if the Main method was invoked. False indicates that we're running hosted in another process (e.g. unit tests).\n+        /// </summary>\n+        private static bool s_executingMainEntryPoint;",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}