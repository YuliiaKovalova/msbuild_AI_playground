{
  "number": 6546,
  "title": "Catch ArgumentException as well as BadImageFormatException when failing because of libraries without resources",
  "body": "This was a heinous bug to repro.\r\n\r\nUsing VS 17.0.0+, create a blank UWP app with target platform version 16299 or 17134. Build Debug/x86.\r\nIf that doesn't work, clean and build again.\r\nIf that doesn't work, clean and build again.\r\n\r\nIt should work every time, but from my testing, every other clean-build cycle succeeds even following identical steps. Every other build clean-build cycle fails with a message saying an attempt was made to load a file with incorrect format. This is normally a BadImageFormatException and caught (see comment above), but it seems that with dev 17, that is sometimes (always?) wrapped in an ArgumentException and not caught. This fixes that problem by catching both.\r\n\r\nMaybe we should verify that the ArgumentException mentions BadImageFormatException before just continuing?\r\n\r\nTesting: Several attempted repros in a row succeeded. It had been pretty reliably failing every other time, so that was a shift.",
  "state": "MERGED",
  "createdAt": "2021-06-10T19:03:23Z",
  "updatedAt": "2021-06-29T10:01:36Z",
  "closedAt": "2021-06-29T10:01:36Z",
  "mergedAt": "2021-06-29T10:01:36Z",
  "additions": 6,
  "deletions": 3,
  "changedFiles": 1,
  "headRefName": "permit-wrapped-badimageformatexception",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "0c9cf6f7cac58369f76fdb4d04567e8752ed5ecb",
          "message": "Also catch ArgumentException",
          "committedDate": "2021-06-10T18:56:42Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3caf0616d7567d5cd1fec780a630930b2869bf16",
          "message": "Specify the ArgumentException wraps a BadImageFormatException",
          "committedDate": "2021-06-10T21:24:24Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f96d5f6877f51a290c47f470b8e1adba4db8c8c7",
          "message": "Update src/Tasks/GenerateResource.cs",
          "committedDate": "2021-06-14T16:00:00Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "The repro seems complicated by `every other clean-build cycle succeeds even following identical steps`. Not sure what could cause that\u2014marcpopMSFT suggested maybe creating a cache then invalidating it on subsequent builds, but if you create a cache, you should use it in the same step, and if you invalidate a cache, you shouldn't use that cache.\r\n\r\nThat the error message explicitly says it's a BadImageFormatException (even though it's an ArgumentException) and that we were previously catching BadImageFormatExceptions makes me fairly confident it's just a slight change in what error is being thrown. Furthermore, I tried cleaning and building several times with the blanket `catch (ArgumentException)` and the more specialized one I now have, and in both cases, the rate of failure went from 50% to 0% (in my tests), which suggests the same.",
        "createdAt": "2021-06-11T16:47:07Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there something where we can test an `InnerException` to validate that this is really the case?",
              "createdAt": "2021-06-10T19:42:57Z",
              "path": "src/Tasks/GenerateResource.cs",
              "diffHunk": "@@ -3151,10 +3151,13 @@ internal void ReadAssemblyResources(String name, String outFileOrDir)\n                 // We can't easily filter those.  We can simply skip them.\n                 return;\n             }\n-            catch (Exception e)\n+            catch (ArgumentException)\n+            {\n+                // BadImageFormatExceptions can be wrapped in ArgumentExceptions, so catch those, too.",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "We looked at this and found https://referencesource.microsoft.com/#mscorlib/system/reflection/module.cs,857",
              "createdAt": "2021-06-14T15:17:10Z",
              "path": "src/Tasks/GenerateResource.cs",
              "diffHunk": "@@ -3151,10 +3151,13 @@ internal void ReadAssemblyResources(String name, String outFileOrDir)\n                 // We can't easily filter those.  We can simply skip them.\n                 return;\n             }\n-            catch (Exception e)\n+            catch (ArgumentException)\n+            {\n+                // BadImageFormatExceptions can be wrapped in ArgumentExceptions, so catch those, too.",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Incorporated, thanks!",
              "createdAt": "2021-06-14T16:55:39Z",
              "path": "src/Tasks/GenerateResource.cs",
              "diffHunk": "@@ -3151,10 +3151,13 @@ internal void ReadAssemblyResources(String name, String outFileOrDir)\n                 // We can't easily filter those.  We can simply skip them.\n                 return;\n             }\n-            catch (Exception e)\n+            catch (ArgumentException)\n+            {\n+                // BadImageFormatExceptions can be wrapped in ArgumentExceptions, so catch those, too.",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                // BadImageFormatExceptions can be wrapped in ArgumentExceptions, so catch those, too. See https://referencesource.microsoft.com/#mscorlib/system/reflection/module.cs,857\r\n```",
              "createdAt": "2021-06-14T15:59:56Z",
              "path": "src/Tasks/GenerateResource.cs",
              "diffHunk": "@@ -3151,10 +3151,13 @@ internal void ReadAssemblyResources(String name, String outFileOrDir)\n                 // We can't easily filter those.  We can simply skip them.\n                 return;\n             }\n-            catch (Exception e)\n+            catch (ArgumentException e) when (e.InnerException is BadImageFormatException)\n+            {\n+                // BadImageFormatExceptions can be wrapped in ArgumentExceptions, so catch those, too.",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}