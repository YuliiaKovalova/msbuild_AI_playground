{
  "number": 5945,
  "title": "Enhance msb4064 unexpected task attribute error",
  "body": "This pull request fixes #3922.\r\n\r\nThe *MSB4064* error has been provided with additional information about the assembly such as it's version, full name, etc.\r\n\r\n---\r\n\r\nChanges provided within this commit contains:\r\n* modify the MSB4064 string in resources,\r\n* adjust it's usage in the code throwing this error,\r\n* run the default translations by compilation\r\n\r\n---\r\n\r\nResults:\r\n\r\nThe example of MSB4064 printed is presented below:\r\n![obraz](https://user-images.githubusercontent.com/70535775/103761554-23cc6600-5017-11eb-9064-47ec0146cfc3.png)\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2020-12-07T21:44:21Z",
  "updatedAt": "2021-02-09T00:22:43Z",
  "closedAt": "2021-02-09T00:22:32Z",
  "mergedAt": "2021-02-09T00:22:32Z",
  "additions": 53,
  "deletions": 36,
  "changedFiles": 16,
  "headRefName": "enhance-MSB4064-unexpected-task-attribute-error",
  "isDraft": false,
  "author": {
    "login": "BartoszKlonowski"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "4dc7d737f64ec0dfeaf6d603fc7a0b3f37fc13c9",
          "message": "Improve MSB4064 error message\n\nThis commit enhances the MSB4064 error with additional information and\ndetails such as:\n - assembly identity - it's full name containing the token ID, version\n   and name.",
          "committedDate": "2021-02-06T01:47:03Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      },
      {
        "commit": {
          "oid": "b3fba524bd918b7e5025f254c273e5dbef30b19c",
          "message": "Provide translations for modified MSB4064",
          "committedDate": "2021-02-06T01:47:04Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      },
      {
        "commit": {
          "oid": "3ba346a91a08c44034e7d81569879e2fb8243015",
          "message": "Add assembly location to the enhanced MSB4064 error\n\nThe enhanced MSB4064 error message has previously been implemented\nwithout assembly location. It has been added by this commit.\nNote that assembly parameter used for the error message has been\nreplaced with loadedAssembly parameter, due to having the null name\nproperty.",
          "committedDate": "2021-02-06T01:47:04Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      },
      {
        "commit": {
          "oid": "dcf7bebf8d899193e0f4379399e25a48fd16ea36",
          "message": "Fix: LoadedAssembly is null for ValidateNonExistantParameter\n\nIt turns out, that when executing the tests, the LoadedAssembly is null\nwhich breaks the run.\nTo avoid such situation, checking for null has been implemented, so in\ncase of no assembly loaded the type is checked and it's path and name is\nreturned to the user/developer.",
          "committedDate": "2021-02-06T13:37:49Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      },
      {
        "commit": {
          "oid": "86c6e188ff60fed888d19400f5a8b81d1010d4a5",
          "message": "Cover review findings - wrap UsingTask in brackets",
          "committedDate": "2021-02-08T23:01:50Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      },
      {
        "commit": {
          "oid": "a639c9256a383c5e1d8c4177b7e5dbb7e4da5f48",
          "message": "Apply latest string resources change",
          "committedDate": "2021-02-08T23:08:06Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "Bartosz-Klonowski@tlen.pl"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald  Perhaps what you feel that is missing here is a path (on local disk) to the assembly?\r\nThing is, that in my first approach to this, I've tried to use:\r\n```\r\n_taskFactoryWrapper.TaskFactoryLoadedType.Assembly.AssemblyLocation\r\n```\r\nbut when debugging it, this path has always been `null`.\r\nSo due to the fact that I couldn't find any better path-containing property/variable, I decided to not include the path in the error message, so there's no confusion in case of that path didn't really work for some user.\r\nI've tried to avoid the possible situation, where the error message would just display the empty space instead of correct path.",
        "createdAt": "2020-12-08T09:27:32Z",
        "author": {
          "login": "BartoszKlonowski"
        }
      },
      {
        "body": "> Perhaps what you feel that is missing here is a path (on local disk) to the assembly?\r\n> Thing is, that in my first approach to this, I've tried to use:\r\n> \r\n> ```\r\n> _taskFactoryWrapper.TaskFactoryLoadedType.Assembly.AssemblyLocation\r\n> ```\r\n> \r\n> but when debugging it, this path has always been `null`.\r\n> So due to the fact that I couldn't find any better path-containing property/variable, I decided to not include the path in the error message, so there's no confusion in case of that path didn't really work for some user.\r\n\r\nThis seems pretty plausible! It would definitely be nice to have the path (I'd strongly prefer that over assembly identity) but I agree with your tradeoffs, and this is better than nothing.\r\n\r\nIs that path `null` when you try with the minimal repro project I (just) shared in https://github.com/dotnet/msbuild/issues/3922#issuecomment-747095060?",
        "createdAt": "2020-12-16T23:09:39Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Answering your question: no, the path isn't null when reproducing the error with the example you've provided me with.\r\nI've pushed the changes and updated the PR's description - please check.",
        "createdAt": "2021-01-06T11:05:04Z",
        "author": {
          "login": "BartoszKlonowski"
        }
      },
      {
        "body": "It looks like LoadedAssembly is null for the ValidateNonExistantParameter (sic) test. It looks artificial to me, but are there any circumstances when it would be executing a task without loading an assembly? If so, maybe add a second error possibility depending on whether that exists?",
        "createdAt": "2021-01-07T18:41:46Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Looking through the code, `LoadedType.LoadedAssembly` is always checked for null, so apparently it can be null. My assumption is that tasks that are not loaded from assemblies have it set to null (like inline tasks for example). So you'll have to treat the null case somehow. Most basic is to revert to the old message if it's null. Another implementation is to revert to another message that writes out the task factory type, which hopefully should be enough to let the user guess where that task is coming from. The common case is to have assembly based tasks.\r\n\r\nRegarding tests, you have to update the mocked types to have an assembly, probably over here: https://github.com/dotnet/msbuild/blob/27981f15c4a62661691281ee52d3c5b7b7793068/src/Build.UnitTests/BackEnd/TaskExecutionHost_Tests.cs#L1159-L1166\r\n\r\nThen you need to write two tests: one when the assembly is null, and one when the assembly is not null, and assert the proper error message in both.",
        "createdAt": "2021-01-14T02:35:10Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@BartoszKlonowski, status update?",
        "createdAt": "2021-02-01T16:18:19Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind Thanks for asking, and sorry for such a long delay...\r\nNo update from my side - Unfortunatelly I have no time to work on this.\r\nIf you're asking because you'd like to take it, then let me know if you have any questions. Otherwise, I'll try to push that forward by the end of this week.\r\nLet me know.",
        "createdAt": "2021-02-01T18:50:05Z",
        "author": {
          "login": "BartoszKlonowski"
        }
      },
      {
        "body": "No worries! If you didn't want to work on it anymore, I was willing to try to get it ship-shape, since I think it's pretty close. End of this week (or end of next week) is fine. Thanks!",
        "createdAt": "2021-02-01T21:02:25Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Thanks @BartoszKlonowski!",
        "createdAt": "2021-02-09T00:22:43Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "super-nit: In many other error messages mentioning `UsingTask` I see it wrapped in angle brackets making it clear that it refers to an XML element. Also, a comma before the last `and` would be more consistent with the style of the rest of this file.",
              "createdAt": "2021-02-08T20:25:59Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1225,7 +1225,7 @@\n     <comment>{StrBegin=\"MSB4091: \"}</comment>\n   </data>\n   <data name=\"UnexpectedTaskAttribute\" xml:space=\"preserve\">\n-    <value>MSB4064: The \"{0}\" parameter is not supported by the \"{1}\" task. Verify the parameter exists on the task, and it is a settable public instance property.</value>\n+    <value>MSB4064: The \"{0}\" parameter is not supported by the \"{1}\" task loaded from assembly: {2} from the path: {3}. Verify that the parameter exists on the task, the UsingTask points to the correct assembly and it is a settable public instance property.</value>",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}