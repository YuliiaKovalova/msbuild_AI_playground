{
  "number": 5962,
  "title": "Exec: take EchoOff into account when command fails",
  "body": "@rainersigwald \r\n\r\nEchoOff is documented to:\r\n\r\n> If true, the task will not emit the expanded form of Command to the MSBuild log.",
  "state": "MERGED",
  "createdAt": "2020-12-11T03:55:31Z",
  "updatedAt": "2020-12-18T19:59:26Z",
  "closedAt": "2020-12-18T19:59:07Z",
  "mergedAt": "2020-12-18T19:59:07Z",
  "additions": 9,
  "deletions": 3,
  "changedFiles": 1,
  "headRefName": "error_echooff",
  "isDraft": false,
  "author": {
    "login": "tmds"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8a2b95b111404b3150a03e8e8825d4ec59bc1665",
          "message": "Exec: take EchoOff into account when command fails",
          "committedDate": "2020-12-11T03:49:55Z",
          "author": {
            "name": "Tom Deseyn",
            "email": "tom.deseyn@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bbab457b2040efd4af1da179a4c19d388faddffe",
          "message": "Log when exit code is not ignored.",
          "committedDate": "2020-12-11T04:15:22Z",
          "author": {
            "name": "Tom Deseyn",
            "email": "tom.deseyn@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "45e89b5de2aaed1d74776bbbe0003770f46f6cb2",
          "message": "Use '...' as Command when EchoOff",
          "committedDate": "2020-12-17T12:38:44Z",
          "author": {
            "name": "Tom Deseyn",
            "email": "tom.deseyn@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> The command exited with code {0}. (Command omitted because EchoOff was set to true.)?\r\n\r\nI think the parentheses at the end may easily go unnoticed.\r\n\r\n@Forgind do you like one of these?\r\n```\r\nThe command \"***\" exited with code -1.\r\nThe command \"(EchoOff)\" exited with code -1.\r\nThe command \"<<EchoOff>>\" exited with code -1.\r\n```",
        "createdAt": "2020-12-15T12:55:41Z",
        "author": {
          "login": "tmds"
        }
      },
      {
        "body": "Thanks, @tmds! ",
        "createdAt": "2020-12-18T19:59:26Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Hmm. Is it worth preserving this \"exited with code\" message if we use the scrubbed command from below? It _may_ be useful information, depending on situation--if it's an \"always fails with the same code, just go with it\" thing you probably don't need that; if it's a \"sometimes fails so this is just best effort\" it might help chase down a later failure caused by the failure.",
              "createdAt": "2020-12-15T15:32:57Z",
              "path": "src/Tasks/Exec.cs",
              "diffHunk": "@@ -336,17 +336,23 @@ protected override bool HandleTaskExecutionErrors()\n         {\n             if (IgnoreExitCode)\n             {\n-                Log.LogMessageFromResources(MessageImportance.Normal, \"Exec.CommandFailedNoErrorCode\", Command, ExitCode);\n+                // Don't log when EchoOff and IgnoreExitCode.\n+                if (!EchoOff)\n+                {\n+                    Log.LogMessageFromResources(MessageImportance.Normal, \"Exec.CommandFailedNoErrorCode\", Command, ExitCode);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I omitted the logging because it enables the user to take action on its own based on the output ExitCode of the Exec task.\r\nThis could be custom messages, or other a fail back action.\r\n\r\nI'm fine changing this to use the \"...\" placeholder.\r\n\r\nOr we can lower the importance when EchoOff (in addition to using the \"...\").\r\n\r\n@rainersigwald what do you prefer?",
              "createdAt": "2020-12-17T12:45:39Z",
              "path": "src/Tasks/Exec.cs",
              "diffHunk": "@@ -336,17 +336,23 @@ protected override bool HandleTaskExecutionErrors()\n         {\n             if (IgnoreExitCode)\n             {\n-                Log.LogMessageFromResources(MessageImportance.Normal, \"Exec.CommandFailedNoErrorCode\", Command, ExitCode);\n+                // Don't log when EchoOff and IgnoreExitCode.\n+                if (!EchoOff)\n+                {\n+                    Log.LogMessageFromResources(MessageImportance.Normal, \"Exec.CommandFailedNoErrorCode\", Command, ExitCode);",
              "author": {
                "login": "tmds"
              }
            },
            {
              "body": "I think as-is is ok; we'll see if anyone complains.",
              "createdAt": "2020-12-18T16:52:23Z",
              "path": "src/Tasks/Exec.cs",
              "diffHunk": "@@ -336,17 +336,23 @@ protected override bool HandleTaskExecutionErrors()\n         {\n             if (IgnoreExitCode)\n             {\n-                Log.LogMessageFromResources(MessageImportance.Normal, \"Exec.CommandFailedNoErrorCode\", Command, ExitCode);\n+                // Don't log when EchoOff and IgnoreExitCode.\n+                if (!EchoOff)\n+                {\n+                    Log.LogMessageFromResources(MessageImportance.Normal, \"Exec.CommandFailedNoErrorCode\", Command, ExitCode);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}