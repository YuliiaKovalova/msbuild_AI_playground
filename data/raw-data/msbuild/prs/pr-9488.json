{
  "number": 9488,
  "title": "Add message to  to indicate which process exactly hold the lock for the file for task Generate*Manifest",
  "body": "Fixes [#9465](https://github.com/dotnet/msbuild/issues/9465)\r\n\r\n### Context\r\nUnable to write manifest \u2018obj\\Debug\\bc.exe.manifest\u2019. The process cannot access the file \u2018C:\\Source\\bc\\bc\\obj\\Debug\\bc.exe.manifest\u2019 because it is being used by another process.\r\n\r\nWith limited error message, can't tell which process exactly hold the lock for the file. \r\n\r\n### Changes Made\r\nuse original the Copy task's \"name the process that holds the lock\" approach for the task GenerateManifestBase\r\n\r\n### Testing\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-12-04T07:54:15Z",
  "updatedAt": "2024-01-10T06:56:22Z",
  "closedAt": "2024-01-10T06:56:21Z",
  "mergedAt": "2024-01-10T06:56:20Z",
  "additions": 129,
  "deletions": 107,
  "changedFiles": 17,
  "headRefName": "jennybai/issue9465",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "0f4dec6b55c966cd9503efa06935cdbee992f478",
          "message": "Add more processes log for task GenerateManifest",
          "committedDate": "2023-12-04T07:02:59Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6c06c2db3d2fbc8070ee828d72112f47185e049a",
          "message": "Change the Resource name and content",
          "committedDate": "2023-12-04T07:40:56Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a002bd1540eec368cc7294a0aa26d82bb2f40d4b",
          "message": "Remove duplicate NativeMethodsShared.IsWindows check",
          "committedDate": "2023-12-29T08:40:17Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Please retarget this PR to vs17.9 branch, since this isn't a new feature.",
        "createdAt": "2023-12-06T12:35:12Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "> Please retarget this PR to vs17.9 branch, since this isn't a new feature.\r\n\r\ndone",
        "createdAt": "2023-12-11T03:04:33Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n                string lockedFileMessage = LockCheck.GetLockedFileMessage(OutputManifest.ItemSpec);\r\n```\r\n\r\n(The IsWindows check is built into GetLockedFileMessage.)",
              "createdAt": "2023-12-22T20:38:01Z",
              "path": "src/Tasks/GenerateManifestBase.cs",
              "diffHunk": "@@ -619,7 +619,13 @@ private bool WriteManifest()\n             }\n             catch (Exception ex)\n             {\n-                Log.LogErrorWithCodeFromResources(\"GenerateManifest.WriteOutputManifestFailed\", OutputManifest.ItemSpec, ex.Message);\n+                string lockedFileMessage = string.Empty;\n+                if (NativeMethodsShared.IsWindows)\n+                {\n+                    lockedFileMessage = LockCheck.GetLockedFileMessage(OutputManifest.ItemSpec);\n+                }",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "If have no this condition, it will haveerror CA1416: This call site is reachable on all platforms. 'LockCheck.GetLockedFileMessage(string)' is only supported on: 'windows'. (h \r\nttps://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1416)",
              "createdAt": "2023-12-25T06:44:35Z",
              "path": "src/Tasks/GenerateManifestBase.cs",
              "diffHunk": "@@ -619,7 +619,13 @@ private bool WriteManifest()\n             }\n             catch (Exception ex)\n             {\n-                Log.LogErrorWithCodeFromResources(\"GenerateManifest.WriteOutputManifestFailed\", OutputManifest.ItemSpec, ex.Message);\n+                string lockedFileMessage = string.Empty;\n+                if (NativeMethodsShared.IsWindows)\n+                {\n+                    lockedFileMessage = LockCheck.GetLockedFileMessage(OutputManifest.ItemSpec);\n+                }",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "I didn't notice there was a SupportedOSPlatform check around all of LockCheck. In that case, line 258 of LockCheck doesn't need the NativeMethodsShared.IsWindows check.",
              "createdAt": "2023-12-28T01:08:04Z",
              "path": "src/Tasks/GenerateManifestBase.cs",
              "diffHunk": "@@ -619,7 +619,13 @@ private bool WriteManifest()\n             }\n             catch (Exception ex)\n             {\n-                Log.LogErrorWithCodeFromResources(\"GenerateManifest.WriteOutputManifestFailed\", OutputManifest.ItemSpec, ex.Message);\n+                string lockedFileMessage = string.Empty;\n+                if (NativeMethodsShared.IsWindows)\n+                {\n+                    lockedFileMessage = LockCheck.GetLockedFileMessage(OutputManifest.ItemSpec);\n+                }",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Removed the duplicate one.",
              "createdAt": "2023-12-29T08:41:26Z",
              "path": "src/Tasks/GenerateManifestBase.cs",
              "diffHunk": "@@ -619,7 +619,13 @@ private bool WriteManifest()\n             }\n             catch (Exception ex)\n             {\n-                Log.LogErrorWithCodeFromResources(\"GenerateManifest.WriteOutputManifestFailed\", OutputManifest.ItemSpec, ex.Message);\n+                string lockedFileMessage = string.Empty;\n+                if (NativeMethodsShared.IsWindows)\n+                {\n+                    lockedFileMessage = LockCheck.GetLockedFileMessage(OutputManifest.ItemSpec);\n+                }",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "Thanks!",
              "createdAt": "2023-12-29T17:07:08Z",
              "path": "src/Tasks/GenerateManifestBase.cs",
              "diffHunk": "@@ -619,7 +619,13 @@ private bool WriteManifest()\n             }\n             catch (Exception ex)\n             {\n-                Log.LogErrorWithCodeFromResources(\"GenerateManifest.WriteOutputManifestFailed\", OutputManifest.ItemSpec, ex.Message);\n+                string lockedFileMessage = string.Empty;\n+                if (NativeMethodsShared.IsWindows)\n+                {\n+                    lockedFileMessage = LockCheck.GetLockedFileMessage(OutputManifest.ItemSpec);\n+                }",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}