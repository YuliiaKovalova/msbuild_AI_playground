{
  "number": 11534,
  "title": "add preview suffix in experimental CI Builds, enable expinsert",
  "body": "Fixes #11492 \r\n\r\n### Context\r\nwe added packages to feeds when developing whose version matched the ones we wanted to release, which lead to conflicts\r\n\r\n### Changes Made\r\n1. for experimental builds on release branches removes the branding so that the produced packages have -preview suffix which prevents conflicts in feeds\r\n2. ported experimental insertion pipeline to release branches\r\n3. add a step that in exp insertion selects a servicing target branch based on the branch prefix exp/vsXX.Y(Y)...\r\n\r\n### Testing\r\nMSBuild pipeline run: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=11123072&view=results\r\nExp Insertion: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=11123201&view=results\r\n### Notes\r\n- should merge flow to active vs17.* release branches",
  "state": "MERGED",
  "createdAt": "2025-03-04T11:59:10Z",
  "updatedAt": "2025-04-02T18:27:38Z",
  "closedAt": "2025-04-02T18:27:38Z",
  "mergedAt": "2025-04-02T18:27:38Z",
  "additions": 186,
  "deletions": 1,
  "changedFiles": 3,
  "headRefName": "exp/vs17.8-exppipelines",
  "isDraft": false,
  "author": {
    "login": "JanProvaznik"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JanProvaznik"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "06b1dcf8dc937822319ae9f3f8b5bb9d1552259d",
          "message": "remove release branding for experimental in CI Build",
          "committedDate": "2025-03-04T11:25:32Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6845001a0d55c834031fc353ebbf6ef59802fc6d",
          "message": "backport experimental insertion and add servicing branch selection logic",
          "committedDate": "2025-03-04T11:25:32Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "26ca9f53ae492f86a8e1badc2d124fe9731cdd39",
          "message": "fix removing versionkind",
          "committedDate": "2025-03-04T11:25:32Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d92a690f59a4a42843af8605c44fb2448de0a54e",
          "message": "bump version",
          "committedDate": "2025-03-04T12:46:19Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "01dc6d552e0fe81b18254f12fce37afe5082031e",
          "message": "simplify version suffix selection",
          "committedDate": "2025-03-06T12:37:39Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bef8225de1d98241199347a84a3840b070cd6834",
          "message": "fix comment",
          "committedDate": "2025-03-06T12:39:35Z",
          "author": {
            "name": "Jan Provazn\u00edk",
            "email": "janprovaznik@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald a friendly reminder",
        "createdAt": "2025-04-02T14:29:53Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't love editing files on disk for this. Would it be possible to instead pass\r\n\r\n`/p:DotNetFinalVersionKind=prerelease /p:PreReleaseVersionLabel=experimental` to the build command in this case?",
              "createdAt": "2025-03-05T16:11:29Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -146,6 +146,28 @@ extends:\n           inputs:\n             dropName: $(VisualStudio.DropName)\n \n+        # ensures we don't build and push experimental versions to official feeds as release versions\n+        - task: PowerShell@2\n+          displayName: 'Remove DotNetFinalVersionKind from Versions.props on experimental branch'\n+          condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/exp/')\n+          inputs:\n+            targetType: 'inline'\n+            script: |\n+              $versionsPath = \"eng/Versions.props\"\n+              [xml]$xml = Get-Content $versionsPath\n+\n+              # Find and remove the DotNetFinalVersionKind node no matter where it is\n+              $nodes = $xml.SelectNodes(\"//DotNetFinalVersionKind\")\n+              if ($nodes -and $nodes.Count -gt 0) {\n+                foreach ($node in $nodes) {\n+                  $node.ParentNode.RemoveChild($node) | Out-Null\n+                }\n+                $xml.Save($versionsPath)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Ah actually it looks like that doesn't help like I thought. What about conditions in the project XML itself on a \"This is experimental\" property set in this yaml?",
              "createdAt": "2025-03-05T16:13:07Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -146,6 +146,28 @@ extends:\n           inputs:\n             dropName: $(VisualStudio.DropName)\n \n+        # ensures we don't build and push experimental versions to official feeds as release versions\n+        - task: PowerShell@2\n+          displayName: 'Remove DotNetFinalVersionKind from Versions.props on experimental branch'\n+          condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/exp/')\n+          inputs:\n+            targetType: 'inline'\n+            script: |\n+              $versionsPath = \"eng/Versions.props\"\n+              [xml]$xml = Get-Content $versionsPath\n+\n+              # Find and remove the DotNetFinalVersionKind node no matter where it is\n+              $nodes = $xml.SelectNodes(\"//DotNetFinalVersionKind\")\n+              if ($nodes -and $nodes.Count -gt 0) {\n+                foreach ($node in $nodes) {\n+                  $node.ParentNode.RemoveChild($node) | Out-Null\n+                }\n+                $xml.Save($versionsPath)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Why wouldn't it help?\r\nWhen I ran locally `CIBuild.cmd /p:DotNetFinalVersionKind=` it built the packages with suffixes which I wanted.\r\nI'll delete the xml logic and test.\r\nThis logic comes [from arcade](https://github.com/dotnet/arcade/blob/1a6839fb255a0c804b868e3cc417fc7c61974184/src/Microsoft.DotNet.Arcade.Sdk/tools/Version.BeforeCommonTargets.targets#L130)\r\n\r\nactually `/p:SuppressFinalPackageVersion=true` is even better\r\n\r\n",
              "createdAt": "2025-03-05T22:06:17Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -146,6 +146,28 @@ extends:\n           inputs:\n             dropName: $(VisualStudio.DropName)\n \n+        # ensures we don't build and push experimental versions to official feeds as release versions\n+        - task: PowerShell@2\n+          displayName: 'Remove DotNetFinalVersionKind from Versions.props on experimental branch'\n+          condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/exp/')\n+          inputs:\n+            targetType: 'inline'\n+            script: |\n+              $versionsPath = \"eng/Versions.props\"\n+              [xml]$xml = Get-Content $versionsPath\n+\n+              # Find and remove the DotNetFinalVersionKind node no matter where it is\n+              $nodes = $xml.SelectNodes(\"//DotNetFinalVersionKind\")\n+              if ($nodes -and $nodes.Count -gt 0) {\n+                foreach ($node in $nodes) {\n+                  $node.ParentNode.RemoveChild($node) | Out-Null\n+                }\n+                $xml.Save($versionsPath)",
              "author": {
                "login": "JanProvaznik"
              }
            }
          ]
        }
      }
    ]
  }
}