{
  "number": 9833,
  "title": "Ensure no IOException/SecurityException is thrown when setting console output/input encoding",
  "body": "Fixes [AB#1985518](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1985518)\r\n\r\n\r\n### Summary\r\nPR #8503 added the custom language setting detection by env var `DOTNET_CLI_UI_LANGUAGE` as well as console output/input encoding settings on OSes that support UTF-8. This is also applied to FileLogger which is used by C++ Console project. Because devenv is a GUI process, setting console output/input encoding is not available and throws IOException. Then Building C++ Console project with VS fails with `Error: The handle is invalid`.\r\n\r\nTo fix this, when setting console output/input encoding is not available catch IOException/SecurityException but do nothing.\r\n\r\n### Customer Impact\r\nIt blocks building C++ Console project with VS when setting env var `DOTNET_CLI_UI_LANGUAGE`.\r\n\r\n### Regression?\r\nYes, building C++ Console project with VS 17.8.7 works well, but fails in 17.9.0.\r\n\r\n### Testing\r\nTested with VS 17.9.2 by deploying msbuild with this fix.\r\n![FixCplusplusConsole](https://github.com/dotnet/msbuild/assets/2950449/694cb3dc-b1b3-4e28-8738-41bbfc7c7e5c)\r\n\r\n\r\n### Risk\r\nLow",
  "state": "MERGED",
  "createdAt": "2024-03-07T07:03:59Z",
  "updatedAt": "2024-03-08T01:38:35Z",
  "closedAt": "2024-03-07T10:09:13Z",
  "mergedAt": "2024-03-07T10:09:13Z",
  "additions": 11,
  "deletions": 4,
  "changedFiles": 1,
  "headRefName": "encodingsetting",
  "isDraft": false,
  "author": {
    "login": "GangWang01"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8af7f72ea1dd40387c231394935fb279ac38738d",
          "message": "Ensure no IOException/SecurityException is thrown when setting console output encoding",
          "committedDate": "2024-03-07T07:04:50Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "/backport to vs17.9",
        "createdAt": "2024-03-07T10:09:26Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Started backporting to vs17.9: https://github.com/dotnet/msbuild/actions/runs/8186366754",
        "createdAt": "2024-03-07T10:09:38Z",
        "author": {
          "login": "github-actions"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "How did you arrive at these exceptions?",
              "createdAt": "2024-03-07T08:30:14Z",
              "path": "src/Framework/EncodingUtilities.cs",
              "diffHunk": "@@ -274,10 +274,17 @@ internal static Encoding BatchFileEncoding(string contents, string encodingSpeci\n             {\n                 if (CurrentPlatformIsWindowsAndOfficiallySupportsUTF8Encoding())\n                 {\n-                    // Setting both encodings causes a change in the CHCP, making it so we don't need to P-Invoke CHCP ourselves.\n-                    Console.OutputEncoding = Encoding.UTF8;\n-                    // If the InputEncoding is not set, the encoding will work in CMD but not in PowerShell, as the raw CHCP page won't be changed.\n-                    Console.InputEncoding = Encoding.UTF8;\n+                    try\n+                    {\n+                        // Setting both encodings causes a change in the CHCP, making it so we don't need to P-Invoke CHCP ourselves.\n+                        Console.OutputEncoding = Encoding.UTF8;\n+                        // If the InputEncoding is not set, the encoding will work in CMD but not in PowerShell, as the raw CHCP page won't be changed.\n+                        Console.InputEncoding = Encoding.UTF8;\n+                    }\n+                    catch (Exception ex) when (ex is IOException || ex is SecurityException)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "The bug has the callstack that throws IOException. For SecurityException, I didn't get but referred to https://github.com/dotnet/msbuild/blob/5089df85a739c170a6c3ab0493bd2c17b36d81d4/src/MSBuild/AutomaticEncodingRestorer.cs#L62-L65. I think it's reasonable to not set encoding when no enough access.",
              "createdAt": "2024-03-07T08:51:11Z",
              "path": "src/Framework/EncodingUtilities.cs",
              "diffHunk": "@@ -274,10 +274,17 @@ internal static Encoding BatchFileEncoding(string contents, string encodingSpeci\n             {\n                 if (CurrentPlatformIsWindowsAndOfficiallySupportsUTF8Encoding())\n                 {\n-                    // Setting both encodings causes a change in the CHCP, making it so we don't need to P-Invoke CHCP ourselves.\n-                    Console.OutputEncoding = Encoding.UTF8;\n-                    // If the InputEncoding is not set, the encoding will work in CMD but not in PowerShell, as the raw CHCP page won't be changed.\n-                    Console.InputEncoding = Encoding.UTF8;\n+                    try\n+                    {\n+                        // Setting both encodings causes a change in the CHCP, making it so we don't need to P-Invoke CHCP ourselves.\n+                        Console.OutputEncoding = Encoding.UTF8;\n+                        // If the InputEncoding is not set, the encoding will work in CMD but not in PowerShell, as the raw CHCP page won't be changed.\n+                        Console.InputEncoding = Encoding.UTF8;\n+                    }\n+                    catch (Exception ex) when (ex is IOException || ex is SecurityException)",
              "author": {
                "login": "GangWang01"
              }
            },
            {
              "body": "Looks good to me, though for the SecurityException it might be good to have low-pri message in binlog",
              "createdAt": "2024-03-07T09:21:34Z",
              "path": "src/Framework/EncodingUtilities.cs",
              "diffHunk": "@@ -274,10 +274,17 @@ internal static Encoding BatchFileEncoding(string contents, string encodingSpeci\n             {\n                 if (CurrentPlatformIsWindowsAndOfficiallySupportsUTF8Encoding())\n                 {\n-                    // Setting both encodings causes a change in the CHCP, making it so we don't need to P-Invoke CHCP ourselves.\n-                    Console.OutputEncoding = Encoding.UTF8;\n-                    // If the InputEncoding is not set, the encoding will work in CMD but not in PowerShell, as the raw CHCP page won't be changed.\n-                    Console.InputEncoding = Encoding.UTF8;\n+                    try\n+                    {\n+                        // Setting both encodings causes a change in the CHCP, making it so we don't need to P-Invoke CHCP ourselves.\n+                        Console.OutputEncoding = Encoding.UTF8;\n+                        // If the InputEncoding is not set, the encoding will work in CMD but not in PowerShell, as the raw CHCP page won't be changed.\n+                        Console.InputEncoding = Encoding.UTF8;\n+                    }\n+                    catch (Exception ex) when (ex is IOException || ex is SecurityException)",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "I don't think I'd do that now, though it would be kinda nice.",
              "createdAt": "2024-03-07T10:01:04Z",
              "path": "src/Framework/EncodingUtilities.cs",
              "diffHunk": "@@ -274,10 +274,17 @@ internal static Encoding BatchFileEncoding(string contents, string encodingSpeci\n             {\n                 if (CurrentPlatformIsWindowsAndOfficiallySupportsUTF8Encoding())\n                 {\n-                    // Setting both encodings causes a change in the CHCP, making it so we don't need to P-Invoke CHCP ourselves.\n-                    Console.OutputEncoding = Encoding.UTF8;\n-                    // If the InputEncoding is not set, the encoding will work in CMD but not in PowerShell, as the raw CHCP page won't be changed.\n-                    Console.InputEncoding = Encoding.UTF8;\n+                    try\n+                    {\n+                        // Setting both encodings causes a change in the CHCP, making it so we don't need to P-Invoke CHCP ourselves.\n+                        Console.OutputEncoding = Encoding.UTF8;\n+                        // If the InputEncoding is not set, the encoding will work in CMD but not in PowerShell, as the raw CHCP page won't be changed.\n+                        Console.InputEncoding = Encoding.UTF8;\n+                    }\n+                    catch (Exception ex) when (ex is IOException || ex is SecurityException)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}