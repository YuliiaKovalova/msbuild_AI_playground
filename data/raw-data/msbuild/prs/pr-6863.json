{
  "number": 6863,
  "title": "Initialize XmlReaders using StreamReaders",
  "body": "Fixes #6847\r\n\r\n### Context\r\nWhen XmlReader.Create is called and a file path is passed in, it's converted to a URI under the hood. This can mangle multi-byte characters. The solution (in the link above) is to initialize the XmlReader using a stream to the file instead of the path alone.\r\n\r\n### Changes Made\r\nCall XmlReader.Create with a stream that will detect encodings.\r\n\r\n### Testing\r\nTested using repro in #6847\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2021-09-16T19:14:16Z",
  "updatedAt": "2021-09-29T16:49:09Z",
  "closedAt": "2021-09-29T16:49:07Z",
  "mergedAt": "2021-09-29T16:49:07Z",
  "additions": 2,
  "deletions": 2,
  "changedFiles": 1,
  "headRefName": "xmlreader-streams",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "afe9c9738076f34ece68a953a9192eb6f6fdfa58",
          "message": "Initialize XmlReaders with a stream that can detect encodings",
          "committedDate": "2021-09-17T17:44:40Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "858187ad14b9d4bc51b049591de0a9f4e35768e0",
          "message": "Revert to simple streamreader passing into XmlReader.Create",
          "committedDate": "2021-09-17T18:26:00Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f6028a63d72d09be2e400f998da6ffcc9e153577",
          "message": "initialize XmlReaders with a stream and a baseuri",
          "committedDate": "2021-09-17T20:20:18Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Digging into the error a bit more, it looks like initializing the XmlReader with a FileScheme Uri causes funky behavior when transforming an Xslt doc that calls the `Document` function. The Document function looks up data in another document.\r\n\r\nFrom what I can tell, loading the document from a stream is causing issues when calling functions from the loaded xslt. When `Document` is called from `a.xml` and looks for `b.xml`, it now tries to find `b.xml` in the output bin directory from the current unit test project, _instead of_ temp where the files were generated.\r\n\r\n----\r\n\r\nA quick chat with Rainer showed that there's an overload to XmlReader.Create that takes a base path, and passing the original filepath ensures the path stays relative, solving the Document issue and the mangled character issue \ud83c\udf89",
        "createdAt": "2021-09-17T20:22:17Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "To-Do: Test an xslt doc calling the `Document` method for a file in the same unicode-style path that causes the error.",
        "createdAt": "2021-09-17T20:59:07Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> To-Do: Test an xslt doc calling the Document method for a file in the same unicode-style path that causes the error.\r\n\r\nIt fails\r\n\r\n![image](https://user-images.githubusercontent.com/4691428/133854571-f14a96d0-ed21-49c9-8beb-26a0d5284204.png)\r\n\r\n```\r\n\"C:\\src\\temp\\9-16\\11_25\\new\\???????????????'`?-?        ????U1[?????]U2[????]U3[?????]\\proj1\\proj1.csproj\" (default target) (1) ->\r\n(Foo target) ->\r\n  C:\\src\\temp\\9-16\\11_25\\new\\???????????????'`?-?       ????U1[?????]U2[????]U3[?????]\\proj1\\proj1.csproj(11,5): error MSB3703: Unable to execute transformation. An error occurred while loading document 'b.xml'. See InnerException for a c\r\nomplete description of the error.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.53\r\n```\r\n\r\nWe'd need to catch this exception and output a better string here.",
        "createdAt": "2021-09-17T21:22:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "imo we merge this and file an issue in the runtime tracking this",
        "createdAt": "2021-09-17T22:50:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Issue filed: https://github.com/dotnet/runtime/issues/59353",
        "createdAt": "2021-09-20T16:30:16Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Have you validated that these encoding assumptions are valid for arbitrary user XML (as opposed to project files)?",
              "createdAt": "2021-09-16T20:49:59Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -334,7 +335,7 @@ public XmlReader CreateReader(int itemPos)\n             {\n                 if (XmlMode == XmlModes.XmlFile)\n                 {\n-                    return XmlReader.Create(_data[itemPos]);\n+                    return XmlReader.Create(new StreamReader(_data[itemPos], new UTF8Encoding(encoderShouldEmitUTF8Identifier: false), detectEncodingFromByteOrderMarks: true));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I haven't. I've been poking around with this fix quite a bit now, maybe you'll have a better idea.\r\n\r\nThis fix is a bit overkill, all that's really needed is `new StreamReader(_data[itemPos])`. But there's a single failure in `XslDocumentFunctionWorks` that is somehow looking for `b.xml` in the bin directory of the running unit test that's very confusing. It occurs right as it's attempting to transform an xslt file",
              "createdAt": "2021-09-16T23:31:48Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -334,7 +335,7 @@ public XmlReader CreateReader(int itemPos)\n             {\n                 if (XmlMode == XmlModes.XmlFile)\n                 {\n-                    return XmlReader.Create(_data[itemPos]);\n+                    return XmlReader.Create(new StreamReader(_data[itemPos], new UTF8Encoding(encoderShouldEmitUTF8Identifier: false), detectEncodingFromByteOrderMarks: true));",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      }
    ]
  }
}