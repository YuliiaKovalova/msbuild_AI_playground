{
  "number": 7197,
  "title": "SA1626 single-line comment which begins with three forward slashes in\u2026",
  "body": "Relates to #7174\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1626.md",
  "state": "MERGED",
  "createdAt": "2022-01-02T08:15:55Z",
  "updatedAt": "2022-01-24T11:38:33Z",
  "closedAt": "2022-01-24T09:37:21Z",
  "mergedAt": "2022-01-24T09:37:21Z",
  "additions": 24,
  "deletions": 22,
  "changedFiles": 14,
  "headRefName": "SA1626",
  "isDraft": false,
  "author": {
    "login": "elachlan"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "3f0d6a9a2d49d06e60056d881504fb5d5a26c411",
          "message": "SA1626 single-line comment which begins with three forward slashes in a row",
          "committedDate": "2022-01-02T08:15:16Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e0c80f446e0c95e3addd9ccb0ae29522e5602c09",
          "message": "Update src/Build.UnitTests/BackEnd/BuildManager_Tests.cs\n\nCo-authored-by: Sam Harwell <sam@tunnelvisionlabs.com>",
          "committedDate": "2022-01-03T01:08:04Z",
          "author": {
            "name": "Lachlan Ennis",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e29752dabb714d08917e48f8fb7208edb4aafdf9",
          "message": "revert changes to deprecated",
          "committedDate": "2022-01-03T23:17:01Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ae63ed8b47924bfc945efed43ca086ce75955fca",
          "message": "Merge branch 'SA1626' of github.com:elachlan/msbuild into SA1626",
          "committedDate": "2022-01-03T23:17:25Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "93cf85bd350e9be25a4f951fcdb58e2d44cd1595",
          "message": "Merge branch 'main' into SA1626",
          "committedDate": "2022-01-21T08:37:21Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "775d6051bab0a3a4dbea6d22b8a20da3b478981d",
          "message": "Fix bad merge",
          "committedDate": "2022-01-21T09:03:00Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        /// <param name=\"shouldSerializeEntireState\"><see langword=\"true\"/> to serialize the entire project instance state; otherwise, <see langword=\"false\"/>.</param>\r\n```",
              "createdAt": "2022-01-02T23:49:38Z",
              "path": "src/Build.UnitTests/BackEnd/BuildManager_Tests.cs",
              "diffHunk": "@@ -3800,9 +3800,12 @@ public void OutOfProcFileBasedP2PBuildSucceeds()\n             }\n         }\n \n-        /// When a ProjectInstance based BuildRequestData is built out of proc, the node should\n+        /// <summary>\n+        /// When a <see cref=\"ProjectInstance\"/> based <see cref=\"BuildRequestData\"/> is built out of proc, the node should\n         /// not reload it from disk but instead fully utilize the entire translate project instance state\n-        /// to do the build\n+        /// to do the build.\n+        /// </summary>\n+        /// <param name=\"shouldSerializeEntireState\">Serializes the entire project instance state if true.</param>",
              "author": {
                "login": "sharwell"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\ud83d\udca1 Consider disabling the rule that requires parameters to have documentation in test projects. I can help complete this in a follow-up pull request if you file an issue for it.",
              "createdAt": "2022-01-02T23:50:05Z",
              "path": "src/Build.UnitTests/BackEnd/BuildManager_Tests.cs",
              "diffHunk": "@@ -3800,9 +3800,12 @@ public void OutOfProcFileBasedP2PBuildSucceeds()\n             }\n         }\n \n-        /// When a ProjectInstance based BuildRequestData is built out of proc, the node should\n+        /// <summary>\n+        /// When a <see cref=\"ProjectInstance\"/> based <see cref=\"BuildRequestData\"/> is built out of proc, the node should\n         /// not reload it from disk but instead fully utilize the entire translate project instance state\n-        /// to do the build\n+        /// to do the build.\n+        /// </summary>\n+        /// <param name=\"shouldSerializeEntireState\">Serializes the entire project instance state if true.</param>",
              "author": {
                "login": "sharwell"
              }
            },
            {
              "body": "@Forgind what are your thoughts on this? If the team chooses to do it, it probably should be done in #7192",
              "createdAt": "2022-01-03T01:10:35Z",
              "path": "src/Build.UnitTests/BackEnd/BuildManager_Tests.cs",
              "diffHunk": "@@ -3800,9 +3800,12 @@ public void OutOfProcFileBasedP2PBuildSucceeds()\n             }\n         }\n \n-        /// When a ProjectInstance based BuildRequestData is built out of proc, the node should\n+        /// <summary>\n+        /// When a <see cref=\"ProjectInstance\"/> based <see cref=\"BuildRequestData\"/> is built out of proc, the node should\n         /// not reload it from disk but instead fully utilize the entire translate project instance state\n-        /// to do the build\n+        /// to do the build.\n+        /// </summary>\n+        /// <param name=\"shouldSerializeEntireState\">Serializes the entire project instance state if true.</param>",
              "author": {
                "login": "elachlan"
              }
            },
            {
              "body": "Sounds reasonable to me. People don't really look at variables in test projects in the same way.",
              "createdAt": "2022-01-03T16:42:38Z",
              "path": "src/Build.UnitTests/BackEnd/BuildManager_Tests.cs",
              "diffHunk": "@@ -3800,9 +3800,12 @@ public void OutOfProcFileBasedP2PBuildSucceeds()\n             }\n         }\n \n-        /// When a ProjectInstance based BuildRequestData is built out of proc, the node should\n+        /// <summary>\n+        /// When a <see cref=\"ProjectInstance\"/> based <see cref=\"BuildRequestData\"/> is built out of proc, the node should\n         /// not reload it from disk but instead fully utilize the entire translate project instance state\n-        /// to do the build\n+        /// to do the build.\n+        /// </summary>\n+        /// <param name=\"shouldSerializeEntireState\">Serializes the entire project instance state if true.</param>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Technically should be something here, but these names were pretty clear in my opinion.",
              "createdAt": "2022-01-03T16:46:26Z",
              "path": "src/Build/Utilities/EngineFileUtilities.cs",
              "diffHunk": "@@ -225,9 +225,14 @@ private static bool MatchesLazyWildcard(string fileSpec)\n             return _regexMatchCache.Value.GetOrAdd(fileSpec, file => s_lazyWildCardExpansionRegexes.Any(regex => regex.IsMatch(fileSpec)));\n         }\n \n-        /// Returns a Func that will return true IFF its argument matches any of the specified filespecs\n-        /// Assumes filespec may be escaped, so it unescapes it\n+        /// <summary>\n+        /// Returns a Func that will return true IFF its argument matches any of the specified filespecs.\n+        /// Assumes filespec may be escaped, so it unescapes it.\n         /// The returned function makes no escaping assumptions or escaping operations. Its callers should control escaping.\n+        /// </summary>\n+        /// <param name=\"filespecsEscaped\"></param>\n+        /// <param name=\"currentDirectory\"></param>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I think this will be covered by another analyzer. Not 100% sure though.",
              "createdAt": "2022-01-03T20:46:24Z",
              "path": "src/Build/Utilities/EngineFileUtilities.cs",
              "diffHunk": "@@ -225,9 +225,14 @@ private static bool MatchesLazyWildcard(string fileSpec)\n             return _regexMatchCache.Value.GetOrAdd(fileSpec, file => s_lazyWildCardExpansionRegexes.Any(regex => regex.IsMatch(fileSpec)));\n         }\n \n-        /// Returns a Func that will return true IFF its argument matches any of the specified filespecs\n-        /// Assumes filespec may be escaped, so it unescapes it\n+        /// <summary>\n+        /// Returns a Func that will return true IFF its argument matches any of the specified filespecs.\n+        /// Assumes filespec may be escaped, so it unescapes it.\n         /// The returned function makes no escaping assumptions or escaping operations. Its callers should control escaping.\n+        /// </summary>\n+        /// <param name=\"filespecsEscaped\"></param>\n+        /// <param name=\"currentDirectory\"></param>",
              "author": {
                "login": "elachlan"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\ud83d\udca1 In the future, note that you can insert the markup text quickly by the following steps:\r\n\r\n1. Type `true` (or `false`)\r\n2. Press <kbd>Ctrl</kbd>+<kbd>Space</kbd>\r\n\r\nIt will immediately expand to `<see langword=\"true\"/>` (or `<see langword=\"false\"/>`).",
              "createdAt": "2022-01-03T16:56:01Z",
              "path": "src/Build.UnitTests/BackEnd/BuildManager_Tests.cs",
              "diffHunk": "@@ -3805,7 +3805,7 @@ public void OutOfProcFileBasedP2PBuildSucceeds()\n         /// not reload it from disk but instead fully utilize the entire translate project instance state\n         /// to do the build.\n         /// </summary>\n-        /// <param name=\"shouldSerializeEntireState\">Serializes the entire project instance state if true.</param>\n+        /// <param name=\"shouldSerializeEntireState\"><see langword=\"true\"/> to serialize the entire project instance state; otherwise, <see langword=\"false\"/>.</param>",
              "author": {
                "login": "sharwell"
              }
            },
            {
              "body": "I had no idea, that is really neat.",
              "createdAt": "2022-01-03T20:45:02Z",
              "path": "src/Build.UnitTests/BackEnd/BuildManager_Tests.cs",
              "diffHunk": "@@ -3805,7 +3805,7 @@ public void OutOfProcFileBasedP2PBuildSucceeds()\n         /// not reload it from disk but instead fully utilize the entire translate project instance state\n         /// to do the build.\n         /// </summary>\n-        /// <param name=\"shouldSerializeEntireState\">Serializes the entire project instance state if true.</param>\n+        /// <param name=\"shouldSerializeEntireState\"><see langword=\"true\"/> to serialize the entire project instance state; otherwise, <see langword=\"false\"/>.</param>",
              "author": {
                "login": "elachlan"
              }
            }
          ]
        }
      }
    ]
  }
}