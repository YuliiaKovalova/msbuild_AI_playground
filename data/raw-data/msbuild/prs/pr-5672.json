{
  "number": 5672,
  "title": "Detect whitespace in property name",
  "body": "Attempt at https://github.com/dotnet/msbuild/issues/5615\r\n\r\n- It is mentioned in https://github.com/dotnet/msbuild/issues/5615 that MSBuild should both error and warn about this so not sure which is the correct approach here. An error might break a lot of existing code, but it might be the correct thing to do (?).\r\n- Also not sure whether this warrants a new string error message, though I did create one. If so, should I commit my untranslated xlf files? I am not familiar with the i18n process in MSBuild.\r\n\r\nAny feedback welcome.",
  "state": "CLOSED",
  "createdAt": "2020-08-23T12:27:03Z",
  "updatedAt": "2020-11-05T05:54:33Z",
  "closedAt": "2020-11-04T17:19:32Z",
  "mergedAt": "2020-11-04T17:19:32Z",
  "author": {
    "login": "mfkl"
  },
  "labels": [],
  "additions": 134,
  "deletions": 4,
  "changedFiles": 17,
  "headRefName": "bugfix/5615",
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "cee8889bcfcc993eea04fca67eae4036a6205f0a",
          "message": "Detect whitespace in property name",
          "committedDate": "2020-10-18T09:20:45Z",
          "author": {
            "name": "Martin Finkel",
            "email": "finkel2804@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "529db6b4fc7752c965610fc6e393974032d97444",
          "message": "try adding xlf files",
          "committedDate": "2020-10-18T09:20:45Z",
          "author": {
            "name": "Martin Finkel",
            "email": "finkel2804@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e146514e93c18256495c365ee8eebeddf1b79581",
          "message": "remove extra line",
          "committedDate": "2020-10-18T09:20:45Z",
          "author": {
            "name": "Martin Finkel",
            "email": "finkel2804@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "062404aa556792cc1f5b164144197487174c9425",
          "message": "review feedback",
          "committedDate": "2020-10-18T09:20:45Z",
          "author": {
            "name": "Martin Finkel",
            "email": "finkel2804@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d209d1ef7c572bf26475846239429908acdd9ab8",
          "message": "update xlf files",
          "committedDate": "2020-10-18T09:20:46Z",
          "author": {
            "name": "Martin Finkel",
            "email": "finkel2804@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6bb1424e79a439f54a31c0575f9cbe90e10471a8",
          "message": "only check for whitespace inside properties",
          "committedDate": "2020-10-18T09:20:46Z",
          "author": {
            "name": "Martin Finkel",
            "email": "finkel2804@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "20297ad731ac36bb1e38203dbaf17dcee1ab5844",
          "message": "Parser tests: Add whitespace test",
          "committedDate": "2020-10-18T09:20:46Z",
          "author": {
            "name": "Martin Finkel",
            "email": "me@martinfinkel.com"
          }
        }
      },
      {
        "commit": {
          "oid": "359bafccacb646dbb0589ff8cd65a8eb4ead0a8f",
          "message": "Revert \"Parser tests: Add whitespace test\"\n\nThis reverts commit e624312d9d86db0c53322ceedc0f5a123890e121.",
          "committedDate": "2020-10-18T09:20:46Z",
          "author": {
            "name": "Martin Finkel",
            "email": "me@martinfinkel.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d418a4a9a69e1d94491577b6505c5bd868bbec28",
          "message": "don't reuse deprecated MSBuild error codes\n\nrename MSB4151 to MSB4259",
          "committedDate": "2020-10-18T09:20:46Z",
          "author": {
            "name": "Martin Finkel",
            "email": "me@martinfinkel.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e5ce9e308e571030a5bf512bf77ee99fcba9f2d4",
          "message": "Use ChangeWaves for whitespace check",
          "committedDate": "2020-10-18T10:01:02Z",
          "author": {
            "name": "Martin Finkel",
            "email": "me@martinfinkel.com"
          }
        }
      },
      {
        "commit": {
          "oid": "31ddd02af2d13606b9a6da66525a06b9cef346cd",
          "message": "rename whitespace to space",
          "committedDate": "2020-10-24T07:15:14Z",
          "author": {
            "name": "Martin Finkel",
            "email": "me@martinfinkel.com"
          }
        }
      },
      {
        "commit": {
          "oid": "813252035daf481f2f9680c14743048304ad258f",
          "message": "Use wave 16.10",
          "committedDate": "2020-10-24T07:15:41Z",
          "author": {
            "name": "Martin Finkel",
            "email": "me@martinfinkel.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Looking at the error, you might need to target it more precisely when someone uses property functions. `$([MSBuild]::ValueOrDefault('%(FullPath)', '')...` is expected.",
        "createdAt": "2020-08-24T01:56:37Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Thank you both for the feedback!\r\n\r\nTaken most of your remarks into account, now working on\r\n> Looking at the error, you might need to target it more precisely when someone uses property functions. $([MSBuild]::ValueOrDefault('%(FullPath)', '')... is expected.",
        "createdAt": "2020-08-28T11:37:29Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "> Would you mind making it more general by including all invalid characters rather than just whitespace?\r\n\r\nI have looked around a bit in docs and code, but I could not find such a list. \r\n\r\nWhat would you consider invalid characters? https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-special-characters?view=vs-2019?",
        "createdAt": "2020-08-28T14:28:27Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "> What would you consider invalid characters? https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-special-characters?view=vs-2019?\r\n\r\n@danmosemsft, is there a list somewhere of all the invalid characters?",
        "createdAt": "2020-08-28T21:03:00Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "I think this is the check to use:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/091189a221523360d07dbe53d2755e062d3912cc/src/Shared/XmlUtilities.cs#L118-L129",
        "createdAt": "2020-08-28T21:04:55Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hmmm `IsValidSubsequentElementNameCharacter` won't allow for expressions like\r\n```\r\n\"'$(CSharpCoreTargetsPath)' == '' or ('$(DesignTimeBuild)' == 'true' and $(CSharpCoreTargetsPath.Contains('Microsoft.Net.Compilers.1.0.0')))\"\r\n```\r\nIt fails on the dot `.`",
        "createdAt": "2020-08-31T16:49:03Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "Good point. Maybe exclude `.`, `[`, `]`, and `:`? I think those are the only relevant ones.\r\n\r\nUnless you have nested properties/items, in which case also @, $, %, (, and )...\r\n\r\nAnd also `!`?",
        "createdAt": "2020-08-31T17:10:06Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Including these extra valid character checks is failing a lot of tests, and the scope of the original PR is also quite larger than initially. There is an added perf consideration as well with this as mentioned in `LocateFirstInvalidElementNameCharacter`'s comments, which is called a lot. I'm a bit unsure on how to proceed.",
        "createdAt": "2020-09-04T15:19:04Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "I would limit the fix to just whitespace since that\u2019s the common mistake. I haven\u2019t looked at the code recently, but there should be a place in the parser/scanner where encountering a close paren would complete a property name; in that place, it should reject space.",
        "createdAt": "2020-09-04T15:44:27Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "We noticed that this only runs when looking at properties inside conditions. Would you mind making it work for all properties? After that, I think it's good.",
        "createdAt": "2020-09-18T16:45:06Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> We noticed that this only runs when looking at properties inside conditions. Would you mind making it work for all properties?\r\n\r\nCould you please share an example of such a property that I could use as a test case?\r\n\r\nI may be wrong, but my understanding is that the whitespace check here is done from `ParsePropertyOrItemMetadata` which is called for all MSBuild properties? If so, `IllFormedPropertyWhitespaceInCondition` should probably be renamed.",
        "createdAt": "2020-09-19T10:48:01Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "@Forgind, any feedback for @mfkl on this one?",
        "createdAt": "2020-09-25T17:23:07Z",
        "author": {
          "login": "stackedsax"
        }
      },
      {
        "body": "This is supposed to throw an error when seeing whitespace in a property correct? I'm not seeing it (for properties inside or outside conditions), unless you have to build a specific way? I tried building a bootstrap of this PR and building this (taken from #5615):\r\n```\r\n<Project>\r\n  <Target Name=\"t\">\r\n    <Warning Text=\"should print\" Condition=\"'$(MSBuildProjectFullPath)' != ''\"/>\r\n    <Warning Text=\"should warn on this line\" Condition=\"'$(MSBuildProjectFullPath )' != ''\"/>\r\n  </Target>\r\n</Project>\r\n```\r\nOutput when using standard `msbuild` and the bootstrapped msbuild are the same\r\n```\r\nProject \"C:\\src\\repros\\MSBuildPlayground\\proj.csproj\" on node 1 (default targets).\r\nC:\\src\\repros\\MSBuildPlayground\\proj.csproj(6,5): warning : should print\r\nDone Building Project \"C:\\src\\repros\\MSBuildPlayground\\proj.csproj\" (default targets).\r\n```\r\n\r\nNo error is being thrown.\r\n\r\nSame for building within a test:\r\n```\r\n        [Fact]\r\n        public void MyTest()\r\n        {\r\n\r\n            string project = $\"\" +\r\n                $\"<Project>\" +\r\n                $\"  <Target Name=\\\"Build\\\">\" +\r\n                $\"    <Warning Text=\\\"should print\\\" Condition=\\\"'$(MSBuildProjectFullPath)' != ''\\\"/>\" +\r\n                $\"    <Warning Text=\\\"should warn on this line\\\" Condition=\\\"'$(MSBuildProjectFullPath )' != ''\\\"/>\" +\r\n                $\"  </Target>\" +\r\n                $\"</Project>\";\r\n\r\n            MockLogger logger = ObjectModelHelpers.BuildProjectExpectSuccess(project);\r\n            logger.AssertLogContains(\"MSB4151\");\r\n        }\r\n```\r\n\r\nAm I missing something?",
        "createdAt": "2020-09-29T02:30:10Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Thanks for your message.\r\n\r\n> This is supposed to throw an error when seeing whitespace in a property correct? \r\n\r\nYes.\r\n\r\n> I'm not seeing it (for properties inside or outside conditions), unless you have to build a specific way? I tried building a bootstrap of this PR and building this (taken from #5615):\r\n> No error is being thrown.\r\n\r\nIndeed, I observe the same behavior with running `msbuild`.\r\n\r\n> Same for building within a test\r\n\r\nFor me it works when building within a unit test https://github.com/dotnet/msbuild/pull/5672/commits/e624312d9d86db0c53322ceedc0f5a123890e121, I can't explain yet why this test passes but `msbuild.exe` doesn't behave the same.\r\nBuilding in diagnostics verbosity reveals\r\n```\r\nTask \"Warning\" skipped, due to false condition; ('$(MSBuildProjectFullPath )' != '') was evaluated as ('' != '').\r\n```",
        "createdAt": "2020-10-01T12:01:27Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "Interesting! So this is actually far more complicated than I'd imagined when I last commented here. Your unit test works _unless_ you put quotes around the property, i.e.,\r\n```\r\nCondition=`'$(MSBuildProjectFullPath )' != ''`\r\n```\r\nNoting that there are also quotes around every instance in which @BenVillalobos used a malformed property, I suspect that this doesn't look inside strings, and that there are two ways MSBuild handles properties. (Why? I have no idea.)\r\n\r\nWe may have to talk internally about what the best way forward is. I would say this PR is a clear improvement on what previously existed, but on the other hand, it doesn't cover all cases, and I don't know the easiest way to extend it to cover all cases. I imagine you could put something in Expander.cs to look at properties as they're expanded, but I don't think there's an easy way (or any way?) to get the position of the space in that case.",
        "createdAt": "2020-10-01T20:31:45Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind any updates from your internal discussions about this one?  Would love to hear about what you've discovered.",
        "createdAt": "2020-10-14T04:57:37Z",
        "author": {
          "login": "stackedsax"
        }
      },
      {
        "body": "After talking it over, we think it best to take it roughly as-is. We think it should go behind a [change wave](https://github.com/dotnet/msbuild/blob/master/documentation/wiki/ChangeWaves.md) (talk to @BenVillalobos if you need help with that), and we should change the error code to something that isn't taken, but otherwise, this is about the best we can do.\r\n\r\nDoes that sound reasonable to you, @mfkl?",
        "createdAt": "2020-10-16T17:12:01Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "On change waves, here's a dev doc: https://github.com/dotnet/msbuild/blob/master/documentation/wiki/ChangeWaves-Dev.md any feedback on it would be appreciated! ",
        "createdAt": "2020-10-16T17:31:08Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> On change waves, here's a dev doc: https://github.com/dotnet/msbuild/blob/master/documentation/wiki/ChangeWaves-Dev.md any feedback on it would be appreciated!\r\n\r\nThanks!\r\n\r\nI guess the doc is clear, though my initial reaction when reading it was \"why was the opt-out strategy chosen over opt-in?\".\r\n\r\nI picked `Wave17_0` a bit randomly. Maybe some guidance on how to choose whether to create a new Wave or use an existing one would be a good idea? I don't know, that may be tightly related to the feature itself (e.g. what are the chances it breaks customers builds?) and your way of versioning msbuild and roadmap, not sure that's relevant in that doc.\r\n",
        "createdAt": "2020-10-18T10:19:27Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "Thanks for the feedback!\r\n\r\n> \"why was the opt-out strategy chosen over opt-in?\"\r\n\r\nFair question. Part of the drive for that is understanding the impact for some of these changes. If we hit a particularly hot path, it allows us to reevaluate the situation knowing that folks have a way out. It also gives us a better picture of how MSBuild is being used.\r\n\r\n> I picked Wave17_0 a bit randomly\r\n\r\n`Wave17_0` works. Note that this PR will have to wait a while to be merged until `master` becomes 17.0.",
        "createdAt": "2020-10-20T20:19:24Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I'd suggest moving to an earlier wave, probably 16.8 or 16.10.\r\n\r\nWe don't expect this to cause a problem 99% of the time, but someone theoretically could have properties with spaces that silently return empty strings and work around that, in which case this could break their build. If it were opt-in, we wouldn't find any customers like that, and we would never know whether there actually is anyone who relies on properties with spaces being turned into empty strings.",
        "createdAt": "2020-10-20T20:51:18Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> I'd suggest moving to an earlier wave, probably 16.8 or 16.10.\r\n\r\nOh whoops, I meant `16.10` there. `16.8` works as well but we should decide soon. @marcpopMSFT @rainersigwald thoughts?",
        "createdAt": "2020-10-20T21:55:27Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I'm having trouble analyzing the CI result, I can't find what is failing exactly or why. Is it something I did?",
        "createdAt": "2020-10-27T04:27:06Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "Doesn't look like it. I kicked off a new run. Since it was mono that failed, I'm guessing this flakiness will be fixed by #5831.",
        "createdAt": "2020-10-27T04:32:17Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Thanks, @mfkl!",
        "createdAt": "2020-11-04T17:19:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for the change @mfkl ",
        "createdAt": "2020-11-04T17:20:09Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}