{
  "number": 6055,
  "title": "Fix FindOnPathSucceeds failing on some Linux flavors",
  "body": "Fixes https://github.com/dotnet/msbuild/issues/4781, https://github.com/dotnet/msbuild/issues/3580.\r\n\r\n@Forgind ptal.",
  "state": "MERGED",
  "createdAt": "2021-01-21T15:17:34Z",
  "updatedAt": "2021-02-04T00:19:12Z",
  "closedAt": "2021-02-04T00:19:04Z",
  "mergedAt": "2021-02-04T00:19:03Z",
  "additions": 4,
  "deletions": 4,
  "changedFiles": 1,
  "headRefName": "find_on_path",
  "isDraft": false,
  "author": {
    "login": "tmds"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "6fe4052ccb902af3fc454a90b1b0e5c33bc721ca",
          "message": "Fix FindOnPathSucceeds failing on some Linux flavors",
          "committedDate": "2021-01-21T15:17:09Z",
          "author": {
            "name": "Tom Deseyn",
            "email": "tom.deseyn@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b96fd3528da0dcda952d9e7a08646fec563b3bb9",
          "message": "Fix ShouldBeOneOf argument.",
          "committedDate": "2021-01-21T16:34:09Z",
          "author": {
            "name": "Tom Deseyn",
            "email": "tom.deseyn@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5842a833a0efb437b71e85360552c93d913a6e8b",
          "message": "Remove ToLower",
          "committedDate": "2021-01-21T16:35:10Z",
          "author": {
            "name": "Tom Deseyn",
            "email": "tom.deseyn@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Thanks @tmds!",
        "createdAt": "2021-02-04T00:19:12Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\nYou shouldn't have to do ToLower here, since supposed to be case insensitive\u2014it doesn't seem like it's currently failing on Windows without it, but if we did want to fix it, I imagine changing the ShouldBe to take different casing would be a preferred fix.",
              "createdAt": "2021-01-21T15:53:30Z",
              "path": "src/Utilities.UnitTests/ToolTask_Tests.cs",
              "diffHunk": "@@ -679,22 +679,22 @@ public void ToolPathIsFoundWhenDirectoryExistsWithNameOfTool()\n         [Fact]\n         public void FindOnPathSucceeds()\n         {\n-            string expectedCmdPath;\n+            string[] expectedCmdPath;\n             string shellName;\n             if (NativeMethodsShared.IsWindows)\n             {\n-                expectedCmdPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.System), \"cmd.exe\");\n+                expectedCmdPath = new[] { Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.System).ToLower(), \"cmd.exe\") };",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This part invalidates the test because it's checking whether cmdPath is cmdPath, which should always be true.",
              "createdAt": "2021-01-21T15:54:04Z",
              "path": "src/Utilities.UnitTests/ToolTask_Tests.cs",
              "diffHunk": "@@ -679,22 +679,22 @@ public void ToolPathIsFoundWhenDirectoryExistsWithNameOfTool()\n         [Fact]\n         public void FindOnPathSucceeds()\n         {\n-            string expectedCmdPath;\n+            string[] expectedCmdPath;\n             string shellName;\n             if (NativeMethodsShared.IsWindows)\n             {\n-                expectedCmdPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.System), \"cmd.exe\");\n+                expectedCmdPath = new[] { Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.System).ToLower(), \"cmd.exe\") };\n                 shellName = \"cmd.exe\";\n             }\n             else\n             {\n-                expectedCmdPath = \"/bin/sh\";\n+                expectedCmdPath = new[] { \"/bin/sh\", \"/usr/bin/sh\" };\n                 shellName = \"sh\";\n             }\n \n-            string cmdPath = ToolTask.FindOnPath(shellName);\n+            string cmdPath = ToolTask.FindOnPath(shellName).ToLower();\n \n-            cmdPath.ShouldBe(expectedCmdPath, StringCompareShould.IgnoreCase);\n+            cmdPath.ShouldBeOneOf(expectedCmdPath, cmdPath);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}