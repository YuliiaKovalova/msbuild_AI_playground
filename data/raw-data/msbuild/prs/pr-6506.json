{
  "number": 6506,
  "title": "[automated] Merge branch 'vs16.11' => 'main'",
  "body": "I detected changes in the vs16.11 branch which have not been merged yet to main. I'm a robot and am [configured](https://github.com/dotnet/versions/blob/main/Maestro/subscriptions.json) to help you automatically keep main up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on vs16.11 by the following committers:\n\n* @cdmihai\n* @drewnoakes\n* @BenVillalobos\n* @rainersigwald\n* @Forgind\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout vs16.11\r\ngit pull --ff-only\r\ngit checkout main\r\ngit pull --ff-only\r\ngit merge --no-ff vs16.11\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/msbuild HEAD:merge/vs16.11-to-main\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/msbuild HEAD:merge/vs16.11-to-main\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/vs16.11-to-main'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/vs16.11-to-main main\r\ngit pull https://github.com/dotnet-maestro-bot/msbuild merge/vs16.11-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/msbuild HEAD:merge/vs16.11-to-main\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/vs16.11-to-main main\r\ngit pull git@github.com:dotnet-maestro-bot/msbuild merge/vs16.11-to-main\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/msbuild HEAD:merge/vs16.11-to-main\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n",
  "state": "MERGED",
  "createdAt": "2021-06-01T21:29:29Z",
  "updatedAt": "2021-06-02T18:48:36Z",
  "closedAt": "2021-06-02T18:48:36Z",
  "mergedAt": "2021-06-02T18:48:36Z",
  "additions": 1109,
  "deletions": 372,
  "changedFiles": 31,
  "headRefName": "merge/vs16.11-to-main",
  "isDraft": false,
  "author": {
    "login": "dotnet-maestro-bot"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "9866392c98184d0b5f2fe9af574f3fad45667fb5",
          "message": "Moves build into scale sets pool (#6471) (#6497)\n\nContext\r\nApplying https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_wiki/wikis/DevDiv.wiki/12566/Using-Scale-Set-pools-for-Build-Pipelines?anchor=drop-to-an-onprem-server\r\n\r\nChanges Made\r\n.vsts-dotnet.yml updated, few tasks versions bumped up\r\n\r\nTesting\r\nrun in azdo exp branch\r\n\r\nCo-authored-by: Roman Konecny <rokonecn@microsoft.com>",
          "committedDate": "2021-05-27T20:57:07Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f53acd0a2cb54a72c0efd267c7d8e325e1064673",
          "message": "Schedule proxy builds to inproc node (#6386)\n\nContext\r\nProxy builds are what project caches issue on cache hits. They are a cheap version of the expensive targets that were avoided by the cache. They need to produce the same properties and items the expensive target produced, but with none of the CPU / IO expensive stuff.\r\n\r\nThe proxy builds are super cheap because they only return properties / items. It is not worth scheduling them to out of proc nodes because:\r\n\r\nIPC overhead\r\nwhen they get scheduled to out of proc nodes they get re-evaluated. This is wasted computation because proxy builds are guaranteed to get evaluated on the scheduler node (where the inproc node resides)\r\nScheduling proxy builds to the inproc node makes a project cache build with full cache hits 16% faster.\r\n\r\nChanges Made\r\nDuplicated what the scheduler does to confine traversal projects to the inproc node, since those are also cheap.",
          "committedDate": "2021-05-27T20:58:00Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5656cb5368a16945fffc31215513bfd134ed0108",
          "message": "Use new variable for the AL tool path (#6484)\n\nFixes # #5981\r\n\r\nSummary\r\nMSBuild didn't support customers using the x64 AL.exe tool by default when their projects targeted x64. #6207 implemented a fix to include x64 in the path when relevant, but this commit mistakenly forgot to update one property name which results in an empty parameter being passed. This results in the x86 version of AL.exe being the default choice.\r\n\r\nThis fix changes the name of the property to the correct one that is set just before AL is called.\r\n\r\nCustomer Impact\r\nCustomer's that want to compile .resx files using 64-bit AL.exe require a workaround to do so. This change will allow this workaround to become default behavior.\r\n\r\nTesting\r\nCustomer did a manual fix here that manually set SdkToolsPathMaybeWithx64Architecture to the value that _ALExeToolPath would be and their build succeeded.\r\n\r\nRisk\r\nLow. The previous value is preserved when not on x64, and only appends the platform to the path to AL.exe when targeting x64.\r\n\r\nCode Reviewers\r\nDescription of fix\r\nRename property passed into AL from SdkToolsPathMaybeWithx64Architecture to _ALExeToolPath, which is set a few lines above the AL call.\r\n\r\nContext\r\n#6207 introduced logic to fix the above issue. Unfortunately we need to update one location (the one that matters) to use that newly created variable. I missed this during the refactor in this commit\r\n\r\nChanges Made\r\nUpdate the variable used for SdkToolsPath when calling AL.\r\n\r\nTesting\r\nSee the linked issue. The customer passing /p:SdkToolsPathMaybeWithx64Architecture=\"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\x64\\\" (the value that _ALExeToolPath has) fixed their issue.\r\n\r\nNotes\r\n_ALExeToolPath is defined just above the AL call that this PR modifies, if you're wondering where it came from.",
          "committedDate": "2021-05-28T06:47:12Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "485361da1ccf7beaef20b1e8262d2271dc2f613b",
          "message": "Update PublishTestResults patterns (#6489)\n\nThese should have been changed when we updated past .NET Core 2.1 but were missed.",
          "committedDate": "2021-05-28T06:50:58Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "03089df9508ede033195fdfaf5587927f5b45422",
          "message": "Stop MSBuildTaskHost from importing Microsoft.VisualStudio.Setup.Configuration.Interop (#6469)\n\nFixes AB#1329223\r\n\r\nContext\r\nWe're hitting issues with MSBuildTaskHost importing the Microsoft.VisualStudio.Setup.Configuration.Interop assembly, which is not being ngen'd properly. Turns out we don't need to import this package at all, so I've removed the packagereference along with un-defining constants when on net3.5 to prevent compilation errors.\r\n\r\nTesting\r\nTested a successful build with msbuildtaskhost.csproj\r\n\r\nNotes\r\nAlso don't define FEATURE_VISUALSTUDIOSETUP for MSBuildTaskHost.csproj[automated] Merge branch 'vs16.11' => 'main'",
          "committedDate": "2021-05-29T04:55:10Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "89bcb9d37d5e01797f283409be952b7b4e360bb9",
          "message": "Add common properties to XSD (#6500)\n\nAdding these allows them to be provided in Visual Studio's completion.\r\n\r\nProduceReferenceAssemblies\r\nUseWindowsForms\r\nUseWPF",
          "committedDate": "2021-05-29T04:58:41Z",
          "author": {
            "name": "Drew Noakes",
            "email": "git@drewnoakes.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2be2ece3eae4aaeb92c237001f12f5490b82c8cf",
          "message": "Make cache queries parallel (#6468)\n\nContext\r\nThe project cache was being queried serially. Oops.\r\nThis is because the monolithic BuildManager._syncLock was being held during the cache query, thus serializing all access.\r\n\r\nChanges Made\r\nImplements the 2nd option from the design doc: https://gist.github.com/cdmihai/0955cb217b2cbd66e18c89b20bf68319#2-reuse-how-the-buildmanager-offloads-parallel-work-to-build-nodes\r\n\r\nReverted code of ExecuteSubmission to what it was before project cache plugins.\r\nChanged ExecuteSubmission to either issue a cache request or a build request (until now it only issues build requests)\r\nThe cache request is sent to the ProjectCacheService which submits it to the thread pool. This achieves parallelization of cache requests\r\nEach cache request, on its own thread:\r\nevaluates the project if necessary\r\ndoes the cache query\r\nWhen a cache request finishes in the ProjectCacheService it is posted back on the BuildManager work queue thread and is handled by either skipping the build or doing a real build.\r\nDesign time builds were a pain to get right this time. Previously design time builds were easy to deal with because the BuildManager detected them early enough. Now they get detected later in the project cache service. The build manager detects this and shuts the cache service off when design time builds are detected.\r\n\r\nTesting\r\nAdded a parallel stress test. This should be a good test to both ensure the cache is queried in parallel and to stress test the concurrency in the engine.\r\n\r\nRisk assessment\r\nThis should make the non project cache logic less risky than it was before, since I took the project cache logic out of BuildManager and moved it to the ProjectCacheService.",
          "committedDate": "2021-06-01T21:26:53Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bf95687fce00d4dd910a7849adc89b6bdb439503",
          "message": "Merge branch 'main' into merge/vs16.11-to-main",
          "committedDate": "2021-06-01T23:25:33Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dbb80eeb828dfa80301422ba14485c27a88375ba",
          "message": "Update src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs",
          "committedDate": "2021-06-02T14:35:06Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nusing Microsoft.Build.Shared;\r\nusing Microsoft.Build.Shared.FileSystem;\r\n```",
              "createdAt": "2021-06-02T14:35:00Z",
              "path": "src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs",
              "diffHunk": "@@ -8,14 +8,24 @@\n using System.Reflection;\n using System.Threading;\n using System.Threading.Tasks;\n+using Microsoft.Build.BackEnd;\n using Microsoft.Build.BackEnd.Logging;\n+using Microsoft.Build.Construction;\n using Microsoft.Build.Execution;\n using Microsoft.Build.FileSystem;\n using Microsoft.Build.Framework;\n+using Microsoft.Build.Graph;\n using Microsoft.Build.Shared;",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}