{
  "number": 9860,
  "title": "Reintroduce FNV hashing",
  "body": "Fixes: #7131\r\n\r\n### Context\r\nContains changes from:\r\n* https://github.com/dotnet/msbuild/pull/9721\r\n* Last 2 commits is playing it save by putting the calling behind the changewave + preventing inlining - so that when opted out (from 17_10 ChangeWave), the new method body would not be loaded - and hence new StringTools functions would not be JITted. This way opting out of changewave can save anyone who is combining old version of StringTools with new version of Microsoft.Build\r\n\r\n### Usage\r\n\r\n```\r\n<!-- Works unchanged. Identical to [MSBuild]::StableStringHash($x, 'Legacy') -->\r\n[MSBuild]::StableStringHash($x)\r\n\r\n<!-- \r\n  $hashAlgo will currently allow:\r\n    'Legacy' - the legacy behavior (mimicking string.GetHashCode)\r\n    'Fnv1a32bit' - Fawler-Noll-Vo 1a 32bit\r\n    'Fnv1a32bitFast' - Custom, faster, Fawler-Noll-Vo 1a 32bit\r\n    'Fnv1a64bit' - Fawler-Noll-Vo 1a 64bit\r\n    'Fnv1a64bitFast' -  Custom, faster, Fawler-Noll-Vo 1a 64bit\r\n    'Sha256' - hex string of the Sha256 hash of the given string\r\n-->\r\n[MSBuild]::StableStringHash($x, $hashAlgo)\r\n```\r\n\r\n### Testing\r\n* Existing test on colissions extended for all overloads\r\n* Added test on expected output types\r\n\r\n### Documentation\r\n\r\nhttps://learn.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2022#msbuild-stablestringhash",
  "state": "MERGED",
  "createdAt": "2024-03-13T13:03:38Z",
  "updatedAt": "2024-03-18T14:01:51Z",
  "closedAt": "2024-03-18T14:01:50Z",
  "mergedAt": "2024-03-18T14:01:50Z",
  "additions": 253,
  "deletions": 43,
  "changedFiles": 6,
  "headRefName": "proto/stablestringhash-overloads",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "27b7ff172595eab2e41044b07ce55bc3a2e0ff96",
          "message": "Revert \"Revert \"Shorten UTD marker file (#9387)\" except Microsoft.Common.Curr\u2026\"\n\nThis reverts commit 5af9301a6d46fd40ab1420467d3291519f62c7e6.",
          "committedDate": "2024-03-13T12:34:18Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "krivanek.j@hotmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5269cd9672ebc16bbf3f751e2a2dd1247bf06c35",
          "message": "Make FNV hash compatible across endianness",
          "committedDate": "2024-03-13T12:34:19Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c81a652cb14d048f5c0ad683a038e3513677887d",
          "message": "Add StableStringHash intrinsic function overloads",
          "committedDate": "2024-03-13T12:34:19Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3bbaf986a57edbc1bfb342614cbb9b43bae7f046",
          "message": "Put StringTools functions references behind changewave",
          "committedDate": "2024-03-13T12:46:44Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "668b5cf4615a5fcdbaa4590886c113f20dd09158",
          "message": "Prevent StableStringHash inlining",
          "committedDate": "2024-03-13T13:00:43Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d247337f2432ff2e55ae5a31876e24dc97244e48",
          "message": "Move the changewave description to proper section",
          "committedDate": "2024-03-14T13:38:54Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1afd7ffc56c6b791067323c5d5dd3dfdf217df86",
          "message": "Merge branch 'main' into proto/stablestringhash-overloads",
          "committedDate": "2024-03-18T12:51:02Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Looks like the wrong section of the file. Should be under 17.**10**.",
              "createdAt": "2024-03-14T13:02:44Z",
              "path": "documentation/wiki/ChangeWaves.md",
              "diffHunk": "@@ -83,3 +83,4 @@ A wave of features is set to \"rotate out\" (i.e. become standard functionality) t\n - [Add Microsoft.IO.Redist for directory enumeration](https://github.com/dotnet/msbuild/pull/6771)\n - [Process-wide caching of ToolsetConfigurationSection](https://github.com/dotnet/msbuild/pull/6832)\n - [Normalize RAR output paths](https://github.com/dotnet/msbuild/pull/6533)\n+- [Introduce [MSBuild]::StableStringHash overloads](https://github.com/dotnet/msbuild/issues/9519)",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "Oh my... Thanks forthe catch!",
              "createdAt": "2024-03-14T13:39:19Z",
              "path": "documentation/wiki/ChangeWaves.md",
              "diffHunk": "@@ -83,3 +83,4 @@ A wave of features is set to \"rotate out\" (i.e. become standard functionality) t\n - [Add Microsoft.IO.Redist for directory enumeration](https://github.com/dotnet/msbuild/pull/6771)\n - [Process-wide caching of ToolsetConfigurationSection](https://github.com/dotnet/msbuild/pull/6832)\n - [Normalize RAR output paths](https://github.com/dotnet/msbuild/pull/6533)\n+- [Introduce [MSBuild]::StableStringHash overloads](https://github.com/dotnet/msbuild/issues/9519)",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\u2764\ufe0f",
              "createdAt": "2024-03-14T13:04:23Z",
              "path": "src/Build/Evaluation/IntrinsicFunctions.cs",
              "diffHunk": "@@ -397,12 +399,60 @@ internal static string ConvertFromBase64(string toDecode)\n             return Encoding.UTF8.GetString(Convert.FromBase64String(toDecode));\n         }\n \n+        internal enum StringHashingAlgorithm\n+        {\n+            // Legacy way of calculating StableStringHash - which was derived from string GetHashCode\n+            Legacy,\n+            // FNV-1a 32bit hash\n+            Fnv1a32bit,\n+            // Custom FNV-1a 32bit hash - optimized for speed by hashing by the whole chars (not individual bytes)\n+            Fnv1a32bitFast,\n+            // FNV-1a 64bit hash\n+            Fnv1a64bit,\n+            // Custom FNV-1a 64bit hash - optimized for speed by hashing by the whole chars (not individual bytes)\n+            Fnv1a64bitFast,\n+            // SHA256 hash - gets the hex string of the hash (with no prefix)\n+            Sha256\n+        }\n+\n         /// <summary>\n-        /// Hash the string independent of bitness and target framework.\n+        /// Legacy implementation that doesn't lead to JIT pulling the new functions from StringTools (so those must not be referenced anywhere in the function body)\n+        ///  - for cases where the calling code would erroneously load old version of StringTools alongside of the new version of Microsoft.Build.\n+        /// Should be removed once Wave17_10 is removed.\n         /// </summary>\n-        internal static int StableStringHash(string toHash)\n-        {\n-            return CommunicationsUtilities.GetHashCode(toHash);\n+        internal static object StableStringHashLegacy(string toHash)\n+            => CommunicationsUtilities.GetHashCode(toHash);\n+\n+        /// <summary>\n+        /// Hash the string independent of bitness, target framework and default codepage of the environment.\n+        /// We do not want this to be inlined, as then the Expander would call directly the new overload, and hence\n+        ///  JIT load the functions from StringTools - so we would not be able to prevent their loading with ChangeWave as we do now.",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "credit goes to @rokonec ",
              "createdAt": "2024-03-14T13:36:52Z",
              "path": "src/Build/Evaluation/IntrinsicFunctions.cs",
              "diffHunk": "@@ -397,12 +399,60 @@ internal static string ConvertFromBase64(string toDecode)\n             return Encoding.UTF8.GetString(Convert.FromBase64String(toDecode));\n         }\n \n+        internal enum StringHashingAlgorithm\n+        {\n+            // Legacy way of calculating StableStringHash - which was derived from string GetHashCode\n+            Legacy,\n+            // FNV-1a 32bit hash\n+            Fnv1a32bit,\n+            // Custom FNV-1a 32bit hash - optimized for speed by hashing by the whole chars (not individual bytes)\n+            Fnv1a32bitFast,\n+            // FNV-1a 64bit hash\n+            Fnv1a64bit,\n+            // Custom FNV-1a 64bit hash - optimized for speed by hashing by the whole chars (not individual bytes)\n+            Fnv1a64bitFast,\n+            // SHA256 hash - gets the hex string of the hash (with no prefix)\n+            Sha256\n+        }\n+\n         /// <summary>\n-        /// Hash the string independent of bitness and target framework.\n+        /// Legacy implementation that doesn't lead to JIT pulling the new functions from StringTools (so those must not be referenced anywhere in the function body)\n+        ///  - for cases where the calling code would erroneously load old version of StringTools alongside of the new version of Microsoft.Build.\n+        /// Should be removed once Wave17_10 is removed.\n         /// </summary>\n-        internal static int StableStringHash(string toHash)\n-        {\n-            return CommunicationsUtilities.GetHashCode(toHash);\n+        internal static object StableStringHashLegacy(string toHash)\n+            => CommunicationsUtilities.GetHashCode(toHash);\n+\n+        /// <summary>\n+        /// Hash the string independent of bitness, target framework and default codepage of the environment.\n+        /// We do not want this to be inlined, as then the Expander would call directly the new overload, and hence\n+        ///  JIT load the functions from StringTools - so we would not be able to prevent their loading with ChangeWave as we do now.",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}