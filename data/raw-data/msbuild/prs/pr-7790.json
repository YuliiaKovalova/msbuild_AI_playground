{
  "number": 7790,
  "title": "Update to net7.0",
  "body": "Fixes #\r\n\r\n### Context\r\n\r\n\r\n### Changes Made\r\n\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\nThis will be chipped away at over time.",
  "state": "MERGED",
  "createdAt": "2022-07-05T21:40:03Z",
  "updatedAt": "2022-09-19T18:35:41Z",
  "closedAt": "2022-09-19T18:22:57Z",
  "mergedAt": "2022-09-19T18:22:57Z",
  "additions": 81,
  "deletions": 38,
  "changedFiles": 20,
  "headRefName": "net7.0-here-we-go",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "6a81401977fc2ea39e9824cd76caea98efc92b30",
          "message": "Change 6's to 7's, then see what happens",
          "committedDate": "2022-07-05T22:00:57Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "40b07d3eab84b5dffc7fa73662578cf6f5084bfe",
          "message": "Add nowarn for SYSLIB warnings",
          "committedDate": "2022-07-20T19:24:44Z",
          "author": {
            "name": "Logan Bussell",
            "email": "loganbussell@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ea0b750ba085fdf88557200d42c622a035d06b63",
          "message": "Resolve CS8981: lowercase preserved types",
          "committedDate": "2022-07-20T19:29:01Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "21ab8aaed85b28dc56f9852e922ef0224d804bab",
          "message": "Net7.0 not net67.0",
          "committedDate": "2022-07-26T20:21:59Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5dad33d0eb170b40145a3dd195ccff96dfc218a3",
          "message": "Remove shipped api's causing errors, place them in unshipped apis",
          "committedDate": "2022-07-26T22:15:38Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a8ed36c1fc6e84c6d4e46308973bc2e4b65f03cf",
          "message": "Merge branch 'main' into net7.0-here-we-go",
          "committedDate": "2022-07-26T22:21:26Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0da734e94514e3cf1fb907d120a611791952346b",
          "message": "Do public interfaces need their functions marked as public???",
          "committedDate": "2022-07-26T22:28:22Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "65a9d3f6f05eca30e9e9afadae7d48848b0fe301",
          "message": "Merge branch 'net7.0-here-we-go' of https://github.com/benvillalobos/msbuild into net7.0-here-we-go",
          "committedDate": "2022-07-26T22:28:33Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c026de805bb936d1d622bd06000c670bcae13591",
          "message": "Ignore analyzer warnings, for now",
          "committedDate": "2022-07-27T18:07:46Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e25c75598aa4033a0d7349a8108fe18d2b873488",
          "message": "Revert \"Remove shipped api's causing errors, place them in unshipped apis\"\n\nThis reverts commit 5dad33d0eb170b40145a3dd195ccff96dfc218a3.",
          "committedDate": "2022-08-12T23:23:52Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "56f78e9a47b48980bc7601430f8e266a03f0999f",
          "message": "Workaround CS8347 & update to C# 11",
          "committedDate": "2022-08-15T22:25:07Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f52d41aca6ec3baaaf66aa488e254ea01535277a",
          "message": "Update net compilers toolset & use langversion 11.0",
          "committedDate": "2022-08-16T22:35:15Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e90588c7c6418716758be5df27457e97fec7c72a",
          "message": "Merge branch 'main' into net7.0-here-we-go",
          "committedDate": "2022-08-16T22:37:55Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "85ab2996013a2cbeedf42fd128817499294652ce",
          "message": "Compiler toolset does not have net7.0",
          "committedDate": "2022-08-17T19:00:34Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8ca87bb5e150e0a1419986397d512d2e528862bd",
          "message": "Revert \"Do public interfaces need their functions marked as public???\"\n\nThis reverts commit 0da734e94514e3cf1fb907d120a611791952346b.",
          "committedDate": "2022-08-17T21:04:55Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2151902098b54cf156725dd65b7c760dd0d386a0",
          "message": "Revert \"Add nowarn for SYSLIB warnings\"\n\nThis reverts commit 40b07d3eab84b5dffc7fa73662578cf6f5084bfe.",
          "committedDate": "2022-08-17T21:22:06Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e878f083b21a6883a57280a9924f1ac6987638cb",
          "message": "Revert \"Revert \"Add nowarn for SYSLIB warnings\"\"\n\nThis reverts commit 2151902098b54cf156725dd65b7c760dd0d386a0.",
          "committedDate": "2022-08-19T19:54:29Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "36cb62cec9f4344025b5d6da6df84c8da8368db7",
          "message": "One property to rule them all",
          "committedDate": "2022-08-19T23:03:24Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "261cf97dab772c3b114e407b76a7ba2e95fce4a5",
          "message": "Document new NoWarns",
          "committedDate": "2022-08-22T18:51:24Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f11ee627b7d7853148d04f48f0e6a8d32be2c915",
          "message": "Add API's that were removed",
          "committedDate": "2022-08-22T18:51:42Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6db9faf88d18dcaba81597fcc767b62645c9e870",
          "message": "Keep stringtools on latest",
          "committedDate": "2022-08-22T19:13:27Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1f066caa45809d1e97f61ef3675f7bbd9ece3eee",
          "message": "Leave context comment for scoped refs",
          "committedDate": "2022-08-22T20:07:28Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4aca04fb2d6f1c554e4493eb3fd0fd4bc78ff892",
          "message": "Merge remote-tracking branch 'upstream/main' into net7.0-here-we-go",
          "committedDate": "2022-09-16T17:00:15Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5227adc809b1a98e0583922e2d70e2183f00a8cd",
          "message": "Avoid SYSLIB0045 errors on core\n\nThe hash-creation overloads that take a string are obsolete as of\n.NET 7 RC1. Introduce `FEATURE_CRYPTOGRAPHIC_FACTORY_ALGORITHM_NAMES` to\navoid using them but preserve .NET Framework behavior exactly.",
          "committedDate": "2022-09-16T19:01:43Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "88bacdbecb5182778ba5c0a133316cedc0101501",
          "message": "Update to .NET 7.0.100-rc.1",
          "committedDate": "2022-09-16T19:02:46Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7754733d37dd91ef29719eb04da01357d6caff22",
          "message": "Revert \"Leave context comment for scoped refs\"\n\nThis reverts commit 1f066caa45809d1e97f61ef3675f7bbd9ece3eee.",
          "committedDate": "2022-09-16T19:09:12Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1426184d17c55c37a1e57daecd546e3492f1ca89",
          "message": "Revert \"Keep stringtools on latest\"\n\nThis reverts commit 6db9faf88d18dcaba81597fcc767b62645c9e870.",
          "committedDate": "2022-09-16T19:09:23Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d56006db85185a162794e6807e3211e64bc1ecb9",
          "message": "Revert \"Update net compilers toolset & use langversion 11.0\"\n\nThis reverts commit f52d41aca6ec3baaaf66aa488e254ea01535277a.",
          "committedDate": "2022-09-16T19:12:17Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2954cb0fab29664d0e714c141c8365a7de259299",
          "message": "Revert \"Workaround CS8347 & update to C# 11\"\n\nThis reverts commit 56f78e9a47b48980bc7601430f8e266a03f0999f.",
          "committedDate": "2022-09-16T19:12:25Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7db54b966202a120536cb0ecaff78252737d1f02",
          "message": "Style: Use TKey/TValue in CollectionsHelpers",
          "committedDate": "2022-09-16T20:45:12Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I would think about updating Arcade first, then our TF.",
        "createdAt": "2022-07-06T16:22:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hey @rainersigwald, @BenVillalobos, this will be needed for source-build in 7.0. I was testing this locally before I saw this PR, I am hitting the same issues as the CI here. Is there anything I can do to help move this along?",
        "createdAt": "2022-07-19T23:27:51Z",
        "author": {
          "login": "lbussell"
        }
      },
      {
        "body": "@lbussell We're in early stages of working on this (Read: I'm poking at this when I have time \ud83d\ude43). If you'd like to poke at it and offer some commits we can cherry-pick onto this branch, you're more than welcome! Feel free to PM me directly on this",
        "createdAt": "2022-07-19T23:46:36Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I pushed the branch I was working on to [here](https://github.com/lbussell/msbuild/commits/net7.0-tfm). The only thing I tried differently was adding nowarn for some of the SYSLIB errors, which gave more errors: [msbuild.txt](https://github.com/dotnet/msbuild/files/9151822/msbuild.txt)\r\n\r\n",
        "createdAt": "2022-07-20T16:08:00Z",
        "author": {
          "login": "lbussell"
        }
      },
      {
        "body": "@lbussell I cherry-picked your commit to resolve the future issues you were seeing. The \"This type is not part of the declared API\" wasn't showing up for me. Typically when those come up (which they shouldn't here?) you just do the VS suggested action of adding them to some Public.Shipped.API.txt file. Good news is I got a green build after that! Pushing it up to see if tests fail.\r\n\r\nAs for the issue that was nowarn'd around, it looks like the deprecations to AssemblyName are going to require us to rethink our use of `AssemblyName`. It looks like we use `AssemblyName` to gather information about the generated binaries. https://github.com/dotnet/runtime/issues/59061#issuecomment-922392861 suggests looking into the `System.Reflection.Metadata` namespace for gathering assembly info. Even if we could do that, it looks like we shouldn't use AssemblyName anymore, or we may need to create our own type. \r\n\r\nThe main culprits that need this type look like `ResolveAssemblyReference` and `BinaryTranslator`.\r\n\r\nBased on my (very) brief investigation, I don't think working around `AssemblyName` is a reasonable thing to get volunteer work on, though we appreciate the offer! \ud83d\ude2d \r\n\r\nRealistically, I suspect we'll be able to dig in more early next week.",
        "createdAt": "2022-07-20T19:46:46Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Not sure what's going on with CI, I don't see these errors locally",
        "createdAt": "2022-07-26T21:03:51Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Thinking about this some. Our build defines the netstandard/netcore public shipped API txt files to be the same. Now that we're moving to net7.0, technically none of the API's in \"netstandard\" have been shipped yet because we haven't shipped these API's in net7.0.\r\n\r\nNot 100% sure this is what's happening under the hood, but I'm going to clear out public api's shipped txt under netstandard and have VS fix it back into unshipped.",
        "createdAt": "2022-07-26T21:43:21Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "That _shouldn't_ be the problem but heck if I know what the actual problem is (doesn't repro on my machine either).",
        "createdAt": "2022-07-26T21:54:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Specifically removing the API's causing errors and having VS resolve them doesn't fix it.\r\n\r\nMarking functions as public \"because the analyzer didn't see it\" doesn't resolve it either",
        "createdAt": "2022-07-26T22:43:26Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@sharwell any guidance here? API's are clearly public, but the analyzers are complaining about them. Maybe I'm missing something",
        "createdAt": "2022-07-27T17:41:23Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Preventing the warning from AssemblyName's ProcessorArchitecture being deprecated will make our caches not deserialize properly. Solution: delete the cache once (or just build again, since it should just be a warning), and it'll work the second time.",
        "createdAt": "2022-08-02T18:43:20Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind 's commits for future reference: https://github.com/forgind/msbuild/tree/net7.0-here-we-go",
        "createdAt": "2022-08-03T23:44:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> @sharwell any guidance here? API's are clearly public, but the analyzers are complaining about them. Maybe I'm missing something\r\n\r\n@jaredpar I just realized @sharlwell is oof, any ideas?",
        "createdAt": "2022-08-12T23:21:20Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "You're running afoul of a bug in the new `ref` safety rules. It is upset about this constructor:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/3a92cefaf053c9377037d0af0c67736867cc9711/src/StringTools/InternableString.cs#L36\r\n\r\nIt believes the ctor may capture the parameter by `ref`. This is actually a bug in the current toolset. The RC SDK will compile this without error. Short term you can mark the reference as `scoped ref` and it will fix the problem. \r\n\r\n",
        "createdAt": "2022-08-13T00:09:17Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "Why use AssemblyName over Assembly.GetName().Name or .FullName?",
        "createdAt": "2022-08-19T04:58:27Z",
        "author": {
          "login": "AraHaan"
        }
      },
      {
        "body": "@AraHaan /shrug. We could change that, but there's still the task of obtaining the processor architecture, which we're exploring how to do in a reasonable way: https://github.com/dotnet/runtime/issues/74040",
        "createdAt": "2022-08-19T19:54:00Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> @AraHaan /shrug. We could change that, but there's still the task of obtaining the processor architecture, which we're exploring how to do in a reasonable way: [dotnet/runtime#74040](https://github.com/dotnet/runtime/issues/74040)\r\n\r\nSo basically getting the architecture of the assembly itself + the .NET Host (to compare and prevent loading the wrong architecture in the host architecture)?",
        "createdAt": "2022-08-19T23:13:12Z",
        "author": {
          "login": "AraHaan"
        }
      },
      {
        "body": "I've simplified things a bit for future generations: Most places that needed a manual change from `6` to `7` was replaced with a single property. I also added a comment including relevant places to modify when updating to net8.0+",
        "createdAt": "2022-08-19T23:13:15Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "On the comment will you need to update those files in the PR as well (the ones mentioned on it).",
        "createdAt": "2022-08-19T23:14:19Z",
        "author": {
          "login": "AraHaan"
        }
      },
      {
        "body": "@AraHaan Yep! \r\n\r\nEdit: Unfortunately they're scripts and it's nontrivial to have an msbuild property flow into those.",
        "createdAt": "2022-08-19T23:16:02Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Hi @BenVillalobos, what's the status of this? Can it be merged soon? Thanks!",
        "createdAt": "2022-09-06T17:42:48Z",
        "author": {
          "login": "lbussell"
        }
      },
      {
        "body": "This is not currently planned, because it breaks an SDK invariant (SDK tools should target LTS .NET). We have a meeting coming up to discuss a path forward with various stakeholders.",
        "createdAt": "2022-09-06T17:55:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Please consider adding the source-build team to the meeting if it's appropriate (myself, @crummel, @MichaelSimons). We were hoping to get this change in for RC2.",
        "createdAt": "2022-09-06T18:50:57Z",
        "author": {
          "login": "lbussell"
        }
      },
      {
        "body": "> This is not currently planned, because it breaks an SDK invariant (SDK tools should target LTS .NET). We have a meeting coming up to discuss a path forward with various stakeholders.\r\n\r\nI think it should be on for the .NET 7 SDK only, but yeah I would be ok with it targeting LTS for LTS sdk builds.",
        "createdAt": "2022-09-07T16:50:57Z",
        "author": {
          "login": "AraHaan"
        }
      },
      {
        "body": "@BenVillalobos @rainersigwald @jaredpar, from the discussion we had in the meeting, is the plan now to merge this to flush out any potential issues going forwards?",
        "createdAt": "2022-09-16T16:42:41Z",
        "author": {
          "login": "lbussell"
        }
      },
      {
        "body": "Yes, this is now The Plan again. ETA next week, hopefully early.",
        "createdAt": "2022-09-16T16:45:42Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Internal official build for good measure https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=6700270&view=results",
        "createdAt": "2022-09-16T20:49:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Just went over this with @rainersigwald, this looks good to go \ud83d\udc4d",
        "createdAt": "2022-09-19T18:10:13Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Potential workaround for our roslyn analyzer issue: https://github.com/dotnet/msbuild/issues/7903",
        "createdAt": "2022-09-19T18:22:54Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@lbussell I suspect sourcebuild will also want us on Arcade 7 and I'm working on that migration now.",
        "createdAt": "2022-09-19T18:35:41Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Add SYSLIB0037, SYSLIB0044, RS0016, and RS0017?",
              "createdAt": "2022-08-19T23:35:44Z",
              "path": "Directory.Build.props",
              "diffHunk": "@@ -38,7 +50,7 @@\n         SYSLIB0011: Removing binary formatter will happen as part of a larger .NET-wide effort.\n     -->",
              "author": {
                "login": "AraHaan"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Can we go to preview 7 since it's now out?",
              "createdAt": "2022-08-22T14:34:47Z",
              "path": "global.json",
              "diffHunk": "@@ -3,7 +3,7 @@\n     \"allowPrerelease\": true\n   },\n   \"tools\": {\n-    \"dotnet\": \"6.0.200\",\n+    \"dotnet\": \"7.0.100-preview.5.22307.18\",",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this be dropped or `latest`?",
              "createdAt": "2022-08-22T14:35:39Z",
              "path": "src/StringTools/StringTools.csproj",
              "diffHunk": "@@ -6,7 +6,7 @@\n     <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n     <IsPackable>true</IsPackable>\n     <GenerateReferenceAssemblySource>true</GenerateReferenceAssemblySource>\n-    <LangVersion>8.0</LangVersion>\n+    <LangVersion>11.0</LangVersion>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "If it's just there temporarily to work around the compiler bug we can leave it, but I don't know of a great reason to explicitly specify an old langver . . .",
              "createdAt": "2022-08-22T14:59:04Z",
              "path": "src/StringTools/StringTools.csproj",
              "diffHunk": "@@ -6,7 +6,7 @@\n     <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n     <IsPackable>true</IsPackable>\n     <GenerateReferenceAssemblySource>true</GenerateReferenceAssemblySource>\n-    <LangVersion>8.0</LangVersion>\n+    <LangVersion>11.0</LangVersion>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "11 was the workaround because that's what part of the error message gave, but we can move this to latest and never worry about it again (\ud83e\udd1e)",
              "createdAt": "2022-08-22T19:14:10Z",
              "path": "src/StringTools/StringTools.csproj",
              "diffHunk": "@@ -6,7 +6,7 @@\n     <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n     <IsPackable>true</IsPackable>\n     <GenerateReferenceAssemblySource>true</GenerateReferenceAssemblySource>\n-    <LangVersion>8.0</LangVersion>\n+    <LangVersion>11.0</LangVersion>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What's up with this removal?",
              "createdAt": "2022-08-22T14:45:37Z",
              "path": "src/Tasks/PublicAPI/netstandard/PublicAPI.Unshipped.txt",
              "diffHunk": "@@ -1,2 +0,0 @@\n-Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.get -> bool",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What motivated this change? Should it be `TKey` instead?",
              "createdAt": "2022-08-22T14:47:06Z",
              "path": "src/Build.OM.UnitTests/ObjectModelRemoting/RemoteProjectsProviderMock/CollectionsHelpers.cs",
              "diffHunk": "@@ -85,13 +85,13 @@ public static IList<MockProjectElementLinkRemoter> ExportCollection<T>(this Proj\n         }\n \n \n-        public static IDictionary<key, T> ImportDictionary<key, T, RMock>(this ProjectCollectionLinker importer, IDictionary<key, RMock> source)\n+        public static IDictionary<Key, T> ImportDictionary<Key, T, RMock>(this ProjectCollectionLinker importer, IDictionary<Key, RMock> source)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "The issue was \"don't declare types like this as lowercase\" so I just uppercased it. If TKey is what we should, thumbs up and I can make that change",
              "createdAt": "2022-08-22T22:15:45Z",
              "path": "src/Build.OM.UnitTests/ObjectModelRemoting/RemoteProjectsProviderMock/CollectionsHelpers.cs",
              "diffHunk": "@@ -85,13 +85,13 @@ public static IList<MockProjectElementLinkRemoter> ExportCollection<T>(this Proj\n         }\n \n \n-        public static IDictionary<key, T> ImportDictionary<key, T, RMock>(this ProjectCollectionLinker importer, IDictionary<key, RMock> source)\n+        public static IDictionary<Key, T> ImportDictionary<Key, T, RMock>(this ProjectCollectionLinker importer, IDictionary<Key, RMock> source)",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Yeah, I agree with this guideline: https://stackoverflow.com/a/1098058",
              "createdAt": "2022-08-23T13:45:54Z",
              "path": "src/Build.OM.UnitTests/ObjectModelRemoting/RemoteProjectsProviderMock/CollectionsHelpers.cs",
              "diffHunk": "@@ -85,13 +85,13 @@ public static IList<MockProjectElementLinkRemoter> ExportCollection<T>(this Proj\n         }\n \n \n-        public static IDictionary<key, T> ImportDictionary<key, T, RMock>(this ProjectCollectionLinker importer, IDictionary<key, RMock> source)\n+        public static IDictionary<Key, T> ImportDictionary<Key, T, RMock>(this ProjectCollectionLinker importer, IDictionary<Key, RMock> source)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Link to JaredPar's explanation on this since it's a workaround for a compiler bug.",
              "createdAt": "2022-08-22T14:58:26Z",
              "path": "src/StringTools/InternableString.Simple.cs",
              "diffHunk": "@@ -51,7 +51,7 @@ namespace Microsoft.NET.StringTools\n             /// </summary>\n             private int _charIndex;\n \n-            public Enumerator(ref InternableString spanBuilder)\n+            public Enumerator(scoped ref InternableString spanBuilder)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Putting `RS0016` and `RS0017` on this list makes me _really_ nervous, since it means we'll miss breaking API changes. Maybe we should consider switching to the [package baseline validator](https://docs.microsoft.com/dotnet/fundamentals/package-validation/baseline-version-validator) instead?",
              "createdAt": "2022-09-16T19:40:49Z",
              "path": "Directory.Build.props",
              "diffHunk": "@@ -36,9 +48,11 @@\n         CS1701 and CS1702 are by default ignored by Microsoft.NET.Sdk, but if you define the NoWarn property in Directory.Build.props,\n         you don't get those defaults.\n         SYSLIB0011: Removing binary formatter will happen as part of a larger .NET-wide effort.\n+        SYSLIB0037 & SYSLIB0044: The deprecated AssemblyName members could require a bigger refactor for us: https://github.com/dotnet/msbuild/issues/7902\n+        RS0016 & RS0017: Roslyn analyzers seem to be bugged, claiming that API's that exist don't and vise-versa: https://github.com/dotnet/msbuild/issues/7903\n     -->\n \n-    <NoWarn>$(NoWarn);NU1603;NU5105;1701;1702;SYSLIB0011</NoWarn>\n+    <NoWarn>$(NoWarn);NU1603;NU5105;1701;1702;SYSLIB0011;SYSLIB0037;SYSLIB0044;RS0016;RS0017;</NoWarn>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}