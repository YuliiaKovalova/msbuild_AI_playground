{
  "number": 10840,
  "title": "remove dead code from nativemethods",
  "body": "followup on https://github.com/dotnet/msbuild/pull/9223",
  "state": "OPEN",
  "createdAt": "2024-10-17T19:26:09Z",
  "updatedAt": "2024-11-08T22:55:30Z",
  "closedAt": null,
  "mergedAt": null,
  "additions": 13,
  "deletions": 54,
  "changedFiles": 3,
  "headRefName": "remove",
  "isDraft": false,
  "author": {
    "login": "kasperk81"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "66ad0a3fef30896bdefd2b6d4e4fe2b54f2c5519",
          "message": "remove dead code from nativemethods",
          "committedDate": "2024-10-17T19:23:39Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a287a60c67aa003f09e3a927afbc743a7bfa718d",
          "message": "match file.exists",
          "committedDate": "2024-10-17T19:24:56Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a1c661d00e59838bfc35c2ba5b357c6a28b47980",
          "message": "-",
          "committedDate": "2024-10-17T19:41:26Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "236b0948ffcaaf510da2f75d33baf6a89a59441b",
          "message": "-",
          "committedDate": "2024-10-17T21:45:16Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Hello @kasperk81 - thank you for your contribution! MSBuild team for sure appraciates contributions. Upfront heads up via bug or other form of discussion is preferred (plus an explicit confirmation of wanting to fix).\r\n\r\nMore details: https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Contributing-Code.md\r\n\r\nEach PR should ideally have motivation and goal in the description (links are big advantage, but important context should be part of the PR).\r\n\r\nBy no means would I want to kill the interest and flow :-) But it should be just little extra work that will save us considerable time.\r\n\r\n-----------------\r\nIn this specific PR - it mentiones it's a followup of the other PR that uses IO.Redist on NetFx, while here only single implementation is used - it's bit confusing to me. It looks great as code cleanup. Though as mentioned followup I'd expect the usage of IO.Redist or justification why not using it",
        "createdAt": "2024-10-20T17:35:40Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> while here only single implementation is used\r\n\r\nthe change in WindowsFileSystem.cs is following the other pr, MSBuildTaskHostFileSystem.cs is only built on netfx so it didn't required netcore tfm branch and that's the only difference there.",
        "createdAt": "2024-10-20T18:15:54Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "\r\n\r\n\r\n\r\n> > while here only single implementation is used\r\n> \r\n> the change in WindowsFileSystem.cs is following the other pr, MSBuildTaskHostFileSystem.cs is only built on netfx so it didn't required netcore tfm branch and that's the only difference there.\r\n\r\nIs it just code removal though? The previous implementation of `MSBuildTaskHostFileSystem.FileOrDirectoryExists` ended up in `FileOrDirectoryExistsWindows` https://github.com/dotnet/msbuild/blob/d8d42efee8dbe0aa0f08ed85e98327e315ba2b6c/src/Framework/NativeMethods.cs#L1865-L1869\r\n\r\n`Now it calls System.IO.[File|Directory]`\r\n\r\nIt looks like a change in a good direction. It however doesn't look like dead code removal. Let's please add a motivation + reaso ning  into PR description so that we can proceed with reviewing.\r\n",
        "createdAt": "2024-11-05T15:32:08Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "@JanKrivanek seems like we are reading too much into semantics in a simple code cleanup moving stuff from native to managed. not the first pr of its kind in this repo. p/invoking win32 api for file.exists check looks to be some legacy from 90s which is no longer needed as green ci status is showing up here",
        "createdAt": "2024-11-05T16:07:17Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "> p/invoking win32 api for file.exists check looks to be some legacy from 90s which is no longer needed as green ci status is showing up here\r\n\r\nHow did you evaluate the perf impact of this? Historically we've used a variety of P/Invokes on Windows because they could be tuned to be faster than the BCL mechanisms. Because of that I'm hesitant to remove any without some fairly detailed perf analysis work.",
        "createdAt": "2024-11-07T21:30:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "here is the benchmark https://gist.github.com/kasperk81/6e0c449a88ef95df8b30f1d9d5db4771\r\n\r\non windows vm\r\n```\r\n| Method                               | Mean     | Error     | StdDev    |\r\n|------------------------------------- |---------:|----------:|----------:|\r\n| FileExistsUsingPInvoke               | 1.760 ms | 0.0339 ms | 0.0487 ms |\r\n| FileExistsUsingPathExists            | 1.712 ms | 0.0336 ms | 0.0345 ms |\r\n| FileExistsUsingFileOrDirectoryExists | 1.751 ms | 0.0344 ms | 0.0422 ms |\r\n```\r\n\r\nno difference, if fraction of nano-seconds count then the change is better but i'd rule it out as noise. framework seems to be  doing an ok job",
        "createdAt": "2024-11-08T22:55:29Z",
        "author": {
          "login": "kasperk81"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}