{
  "number": 7217,
  "title": "Force `IncludeEvaluationPropertiesAndItems` if escape hatch is set",
  "body": "If there's an environment variable `MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION`, it should take precedence over the logic that sets it to false if any logger hasn't opted in.",
  "state": "MERGED",
  "createdAt": "2022-01-04T23:11:31Z",
  "updatedAt": "2022-01-05T20:49:23Z",
  "closedAt": "2022-01-05T18:12:38Z",
  "mergedAt": "2022-01-05T18:12:38Z",
  "additions": 11,
  "deletions": 3,
  "changedFiles": 1,
  "headRefName": "dev/kirillo/logEvaluationEscapeHatch",
  "isDraft": false,
  "author": {
    "login": "KirillOsenkov"
  },
  "milestone": {
    "title": "VS 17.1"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "90fe1aa36de1f2ac70f2f7124c105d4facb860f6",
          "message": "Force IncludeEvaluationPropertiesAndItems if escape hatch is set\n\nIf there's an environment variable MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION, it should take precedence over the logic that sets it to false if any logger hasn't opted in.",
          "committedDate": "2022-01-04T23:11:14Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I've done some testing, and aside from a strange surprise, this change works as expected. I've temporarily made the `BaseConsoleLogger` legacy locally (by commenting out the `IEventSource4` logic). So Console is legacy and `BinaryLogger` is modern.\r\n\r\n\u2705 == properties and items are at `ProjectEvaluationFinished`\r\n\u274c == properties and items are at `ProjectStarted`\r\n\r\n`MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION`: not set\r\n| | single process | /m |\r\n| --- | --- | --- |\r\n| Legacy logger present | \u2705 | \u274c | \r\n| No legacy logger (/noconlog) | \u2705 | \u2705 |\r\n\r\n`MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION`: 0\r\n| | single process | /m |\r\n| --- | --- | --- |\r\n| Legacy logger present | \u274c | \u274c | \r\n| No legacy logger (/noconlog) | \u274c | \u274c |\r\n\r\n`MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION`: 1\r\n| | single process | /m |\r\n| --- | --- | --- |\r\n| Legacy logger present | \u2705 | \u2705 | \r\n| No legacy logger (/noconlog) | \u2705 | \u2705 |\r\n\r\nNow the strange surprise is that for a single process build (not /m), if you have a legacy logger and the environment variable is not set, we will turn on the log properties and items on evaluation behavior. I can't explain it, but it's not a regression.\r\n\r\nAs far as I can see, we only have a single `EventSourceSink` in the single process case, and as soon as any logger enables the new behavior on it, it just sets to true. So the way we have central loggers, and forwarding loggers, and reusable loggers, and event source sinks, is just too confusing to me.",
        "createdAt": "2022-01-05T03:02:34Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I have confirmed that this PR is not a regression. In our main branch, if a legacy logger is present in single process build, we will still turn on the new behavior. This seems bad. However this PR does make it better by offering an escape hatch either way (to force it to off or to on).",
        "createdAt": "2022-01-05T03:06:24Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Here are the results from the main branch (without my PR):\r\n\r\n`MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION`: not set\r\n| | single process | /m |\r\n| --- | --- | --- |\r\n| Legacy logger present | \u2705 | \u274c | \r\n| No legacy logger (/noconlog) | \u2705 | \u2705 |\r\n\r\n`MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION`: 0\r\n| | single process | /m |\r\n| --- | --- | --- |\r\n| Legacy logger present | \u274c | \u274c | \r\n| No legacy logger (/noconlog) | \u274c | \u274c |\r\n\r\n`MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION`: 1\r\n| | single process | /m |\r\n| --- | --- | --- |\r\n| Legacy logger present | \u2705 | \u274c | \r\n| No legacy logger (/noconlog) | \u2705 | \u2705 |\r\n",
        "createdAt": "2022-01-05T03:13:17Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "The strange surprise is now a new issue: \r\nhttps://github.com/dotnet/msbuild/issues/7219",
        "createdAt": "2022-01-05T03:20:18Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}