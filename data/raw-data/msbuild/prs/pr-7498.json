{
  "number": 7498,
  "title": "Fix regex culture bug",
  "body": "Fixes https://github.com/dotnet/msbuild/issues/7154\r\n\r\n### Context\r\n\r\nThe CSC compiler does not unquote disabled warnings eg `/nowarn:1701,1702,1705,NETSDK1138,CS8969,\"IDE0161\",NU5105,RS0041,CA1416,1701,1702` will not disable `IDE0161`. MSBuild has logic to quote strings that it believes must be quoted to be passed on a command line. It has a bug causing it to do this over eagerly in the tr-TR culture, which exposes this compiler limitation.\r\n\r\nTo fix this Regex should use RegexOptions.CultureInvariant unless they are specifically intended to have culture specific  behavior. In this case the purpose is simply to determine whether a string needs to be quoted on a command line. An example is \"SYSLIB0003\". The `I` does not match `[a-z]` case insensitively in tr-TR culture because lower casing `I` does not produce `i` in this culture, it produces `\u0131`, which does not match the pattern. Assuming that it is safe to pass `I` on a command line in an OS set to Turkish culture -- I assume this is the case, but if it isn't, quoting will not help -- we can change the pattern to match in a culture invariant way. This causes the regex engine to operate more-or-less with en-US casing rules, so `I` and `i` are allowed. (Turkish `\u0131` or `\u0130` will still be quoted, see below.) \r\n\r\n### Changes Made\r\n\r\nAdded the option to the regex. Also added it to the other related one, even though it has no relevant parts in the pattern, for consistency. I did not add it to the place where MSBuild looks for \"error\" or \"warning\" -- it probably should be there, but as they don't include \"i\", it doesn't matter and can be changed separately.\r\n\r\n### Testing\r\n\r\nAdded test.\r\n\r\n### Notes\r\n\r\nNote: this does not address the issue that a quoted warning is not unquoted by the compiler. The code will still add quotes if eg., the string has a space in, and most likely this will then fail to be unquoted by the compiler. If htis is an issue then we should have a separate issue for it against the compiler.\r\n\r\nThis change makes things strictly better and solves the reported issue.\r\n\r\nBTW - this should be considered for backporting, as it makes it impossible for customers with their OS set to tr-TR (which I assume is most of our Turkish customers) to suppress any SYSLIBnnnn warnings, which many of our analyzers now emit.",
  "state": "MERGED",
  "createdAt": "2022-03-28T18:19:01Z",
  "updatedAt": "2022-03-29T15:53:24Z",
  "closedAt": "2022-03-28T20:18:53Z",
  "mergedAt": "2022-03-28T20:18:52Z",
  "additions": 22,
  "deletions": 2,
  "changedFiles": 2,
  "headRefName": "fix.regex",
  "isDraft": false,
  "author": {
    "login": "danmoseley"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c34eb484f1ddf0f9e1940c620b1eff169433f5a1",
          "message": "Fix regex culture bug",
          "committedDate": "2022-03-28T18:09:54Z",
          "author": {
            "name": "Dan Moseley",
            "email": "danmose@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "cc @Forgind ",
        "createdAt": "2022-03-28T18:20:57Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Can I open a followup for that? I don't have more cycles right now to write a test, plus want to keep this minimal so it can be backported.\r\n\r\nIt could also track fixing for the error/warning regexes eg https://github.com/danmoseley/msbuild/blob/c34eb484f1ddf0f9e1940c620b1eff169433f5a1/src/Shared/CanonicalError.cs#L55 although as I mention, that should have no percepitble effect.",
        "createdAt": "2022-03-28T18:30:56Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Yeah, sounds good to me",
        "createdAt": "2022-03-28T18:39:13Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "can we merge?",
        "createdAt": "2022-03-28T19:54:00Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Should we consider for backport? With the other issue, I guess that's two customers hit this. It's not a reasonable workaround to ask them to change their machine locale. OTOH it won't affect them unless they try to suppress a warning. On the third hand, IDEnnnn and SYSLIBnnnn warnings are increasingly likely if you use our analyzers, and NoWarn won't work for either of them.",
        "createdAt": "2022-03-28T23:27:26Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@baronfel @marcpopMSFT, thoughts on backporting? I don't have a strong objection but I'm not sure we have a good customer case for it at the moment. My temptation is to see if we get further reports that can't be resolved by upgrading to 17.2/6.0.300.",
        "createdAt": "2022-03-29T13:55:45Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This seems like an unmitigated good to me. The change to the running code is nicely localized, so the potential for broad negative impact seems small.",
        "createdAt": "2022-03-29T15:53:24Z",
        "author": {
          "login": "baronfel"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}