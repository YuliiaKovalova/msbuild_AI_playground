{
  "number": 7529,
  "title": "Handle whitespaces like .NET Framework",
  "body": "Fixes: #7074\r\nAffects: https://github.com/dotnet/winforms/issues/6977\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2022-04-08T14:13:04Z",
  "updatedAt": "2022-04-21T16:21:35Z",
  "closedAt": "2022-04-21T16:09:14Z",
  "mergedAt": "2022-04-21T16:09:14Z",
  "additions": 45,
  "deletions": 1,
  "changedFiles": 2,
  "headRefName": "kant/netfw-resx",
  "isDraft": false,
  "author": {
    "login": "kant2002"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "4cf27c37676fcc7ee299add7ad7a3999337c0d0b",
          "message": "Handle whitespaces like .NET Framework\n\nFixes: #7074\nAffects: https://github.com/dotnet/winforms/issues/6977",
          "committedDate": "2022-04-08T14:12:43Z",
          "author": {
            "name": "Andrii Kurdiumov",
            "email": "kant2002@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3f8e6dd40dc43675b6ddb8879b5e8d5e45c6cf5d",
          "message": "Apply suggestions from code review\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2022-04-12T15:44:54Z",
          "author": {
            "name": "Andrii Kurdiumov",
            "email": "kant2002@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald I'm done with the requested changes..",
        "createdAt": "2022-04-15T07:23:11Z",
        "author": {
          "login": "kant2002"
        }
      },
      {
        "body": "Thanks @kant2002!",
        "createdAt": "2022-04-21T16:09:21Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this what the .NET Framework path does? I would have expected it to be `\"StringValue\"` with no leading/trailing space.",
              "createdAt": "2022-04-08T14:18:11Z",
              "path": "src/Tasks.UnitTests/ResourceHandling/MSBuildResXReader_Tests.cs",
              "diffHunk": "@@ -37,6 +37,45 @@ public void ParsesSingleStringAsString()\n             AssertSingleStringResource(resxWithSingleString, \"StringResource\", \"StringValue\");\n         }\n \n+        [Fact]\n+        public void ParsesSingleStringWithoutPreserveAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\">\n+    <value> StringValue </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" StringValue \");",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Yes. I deliberately test that and was surprised as you are. It's weird, but seems to be that how it always was.",
              "createdAt": "2022-04-08T14:23:50Z",
              "path": "src/Tasks.UnitTests/ResourceHandling/MSBuildResXReader_Tests.cs",
              "diffHunk": "@@ -37,6 +37,45 @@ public void ParsesSingleStringAsString()\n             AssertSingleStringResource(resxWithSingleString, \"StringResource\", \"StringValue\");\n         }\n \n+        [Fact]\n+        public void ParsesSingleStringWithoutPreserveAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\">\n+    <value> StringValue </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" StringValue \");",
              "author": {
                "login": "kant2002"
              }
            },
            {
              "body": "Well, I am indeed surprised! Thanks for double-checking.",
              "createdAt": "2022-04-12T15:32:53Z",
              "path": "src/Tasks.UnitTests/ResourceHandling/MSBuildResXReader_Tests.cs",
              "diffHunk": "@@ -37,6 +37,45 @@ public void ParsesSingleStringAsString()\n             AssertSingleStringResource(resxWithSingleString, \"StringResource\", \"StringValue\");\n         }\n \n+        [Fact]\n+        public void ParsesSingleStringWithoutPreserveAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\">\n+    <value> StringValue </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" StringValue \");",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        public void ParsesSingleWhitespaceStringAsString()\r\n```\r\n\r\n\r\n?",
              "createdAt": "2022-04-12T15:33:48Z",
              "path": "src/Tasks.UnitTests/ResourceHandling/MSBuildResXReader_Tests.cs",
              "diffHunk": "@@ -37,6 +37,45 @@ public void ParsesSingleStringAsString()\n             AssertSingleStringResource(resxWithSingleString, \"StringResource\", \"StringValue\");\n         }\n \n+        [Fact]\n+        public void ParsesSingleStringWithoutPreserveAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\">\n+    <value> StringValue </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" StringValue \");\n+        }\n+\n+        [Fact]\n+        public void ParsesSingleEmptyStringAsString()",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        public void ParsesSingleWhitespaceStringAsString()\r\n```\r\n\r\n\r\n?",
              "createdAt": "2022-04-12T15:33:48Z",
              "path": "src/Tasks.UnitTests/ResourceHandling/MSBuildResXReader_Tests.cs",
              "diffHunk": "@@ -37,6 +37,45 @@ public void ParsesSingleStringAsString()\n             AssertSingleStringResource(resxWithSingleString, \"StringResource\", \"StringValue\");\n         }\n \n+        [Fact]\n+        public void ParsesSingleStringWithoutPreserveAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\">\n+    <value> StringValue </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" StringValue \");\n+        }\n+\n+        [Fact]\n+        public void ParsesSingleEmptyStringAsString()",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        public void ParsesSingleWhitespaceStringWithNoPreserveAsEmptyString()\r\n```\r\n\r\n?",
              "createdAt": "2022-04-12T15:34:18Z",
              "path": "src/Tasks.UnitTests/ResourceHandling/MSBuildResXReader_Tests.cs",
              "diffHunk": "@@ -37,6 +37,45 @@ public void ParsesSingleStringAsString()\n             AssertSingleStringResource(resxWithSingleString, \"StringResource\", \"StringValue\");\n         }\n \n+        [Fact]\n+        public void ParsesSingleStringWithoutPreserveAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\">\n+    <value> StringValue </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" StringValue \");\n+        }\n+\n+        [Fact]\n+        public void ParsesSingleEmptyStringAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\" xml:space=\"\"preserve\"\">\n+    <value> </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" \");\n+        }\n+\n+        [Fact]\n+        public void ParsesSingleEmptyStringWithNoPreserveAsString()",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        public void ParsesSingleWhitespaceStringWithNoPreserveAsEmptyString()\r\n```\r\n\r\n?",
              "createdAt": "2022-04-12T15:34:18Z",
              "path": "src/Tasks.UnitTests/ResourceHandling/MSBuildResXReader_Tests.cs",
              "diffHunk": "@@ -37,6 +37,45 @@ public void ParsesSingleStringAsString()\n             AssertSingleStringResource(resxWithSingleString, \"StringResource\", \"StringValue\");\n         }\n \n+        [Fact]\n+        public void ParsesSingleStringWithoutPreserveAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\">\n+    <value> StringValue </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" StringValue \");\n+        }\n+\n+        [Fact]\n+        public void ParsesSingleEmptyStringAsString()\n+        {\n+            var resxWithSingleString = MSBuildResXReader.GetResourcesFromString(\n+                ResXHelper.SurroundWithBoilerplate(\n+                    @\"<data name=\"\"StringResource\"\" xml:space=\"\"preserve\"\">\n+    <value> </value>\n+    <comment>Comment</comment>\n+  </data>\"));\n+\n+            AssertSingleStringResource(resxWithSingleString, \"StringResource\", \" \");\n+        }\n+\n+        [Fact]\n+        public void ParsesSingleEmptyStringWithNoPreserveAsString()",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}