{
  "number": 9396,
  "title": "Remove trailing whitespace",
  "body": "It's been driving me up the wall that half the time I or anyone else edits in an editor that respects `.editorconfig` we wind up with a bunch of irrelevant trailing-whitespace deletions. So let's just do all the deletions!\n\nFind and replace `\\s+$` in `{*.cs,*.props,*.targets}`, then reverted `src/Build.OM.UnitTests/Construction/WhiteSpacePreservation_Tests.cs` since it was explicitly working with whitespace.\n",
  "state": "MERGED",
  "createdAt": "2023-11-03T21:42:47Z",
  "updatedAt": "2023-11-06T23:12:21Z",
  "closedAt": "2023-11-06T23:12:20Z",
  "mergedAt": "2023-11-06T23:12:20Z",
  "additions": 5732,
  "deletions": 5733,
  "changedFiles": 744,
  "headRefName": "\ud83d\udd25trailing-whitespace\ud83d\udd25",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "9a0cef6f75bf13ffbbde956b8f7d7ad7d6e0d996",
          "message": "Remove trailing whitespace\n\nFind and replace `\\s+$` in `{*.cs,*.props,*.targets}`, then reverted\n`src/Build.OM.UnitTests/Construction/WhiteSpacePreservation_Tests.cs`\nsince it was explicitly working with whitespace.",
          "committedDate": "2023-11-03T18:46:18Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a0bb46aab8873d683d71a1d58367949b01f93d9e",
          "message": "Verify in RoslynCodeTaskFactory tests\n\nThese were basically already manual verification-against-last-known-good, let's formalize that.",
          "committedDate": "2023-11-03T21:42:34Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "09e6eec5a68787e58e91020b68d4f9a8cf52e0be",
          "message": "Add .git-blame-ignore-revs\n\nFor now point to a couple of whitespace-only changes.",
          "committedDate": "2023-11-06T17:11:39Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "315ee974696ed5ba6903fa64861139c816f7952a",
          "message": "Merge remote-tracking branch 'upstream/main'\n\nConflicts:\n\tsrc/Tasks.UnitTests/Exec_Tests.cs",
          "committedDate": "2023-11-06T20:31:20Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "`dotnet format whitespace` on steroids :-) (while so simple)",
        "createdAt": "2023-11-06T15:57:35Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Yeah I did that more at first but it changed a bunch of in-the-line spaces and that's not what's been annoying me :)",
        "createdAt": "2023-11-06T15:59:12Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Alert, alert: actual real changes in this file.",
              "createdAt": "2023-11-03T21:47:58Z",
              "path": "src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs",
              "diffHunk": "@@ -17,16 +17,31 @@\n using System.IO;\n #endif\n using Shouldly;\n+using VerifyTests;\n+using VerifyXunit;\n using Xunit;\n \n+using static VerifyXunit.Verifier;\n+\n #nullable disable\n \n namespace Microsoft.Build.Tasks.UnitTests\n {\n+    [UsesVerify]",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Can you explain for the unenlightened how this is figuring out what it should be? I tend to trust hardcoded 'expected' values, whereas I'm a bit more finnicky about autogenerating them.",
              "createdAt": "2023-11-06T21:50:46Z",
              "path": "src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs",
              "diffHunk": "@@ -1190,18 +766,10 @@ private void TryLoadTaskBodyAndExpectFailure(string taskBody, string expectedErr\n                 taskInfo.CodeType.ShouldBe(expectedCodeType.Value);\n             }\n \n-            if (expectedSourceCode != null)\n+            if (verifySource)\n             {\n-                NormalizeRuntime(taskInfo.SourceCode)\n-                    .ShouldBe(NormalizeRuntime(expectedSourceCode), StringCompareShould.IgnoreLineEndings);\n+                Verify(taskInfo.SourceCode, _verifySettings).GetAwaiter().GetResult();",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Oh, the files are below. Well, I'm not sure if I like it more or less, but that at least makes me feel more comfortable, so \ud83d\udc4d",
              "createdAt": "2023-11-06T21:52:31Z",
              "path": "src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs",
              "diffHunk": "@@ -1190,18 +766,10 @@ private void TryLoadTaskBodyAndExpectFailure(string taskBody, string expectedErr\n                 taskInfo.CodeType.ShouldBe(expectedCodeType.Value);\n             }\n \n-            if (expectedSourceCode != null)\n+            if (verifySource)\n             {\n-                NormalizeRuntime(taskInfo.SourceCode)\n-                    .ShouldBe(NormalizeRuntime(expectedSourceCode), StringCompareShould.IgnoreLineEndings);\n+                Verify(taskInfo.SourceCode, _verifySettings).GetAwaiter().GetResult();",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Yeah, it uses [`Verify`](https://github.com/VerifyTests/Verify) which we started using for similar snapshot testing for `-terminallogger` but I like it.",
              "createdAt": "2023-11-06T22:41:33Z",
              "path": "src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs",
              "diffHunk": "@@ -1190,18 +766,10 @@ private void TryLoadTaskBodyAndExpectFailure(string taskBody, string expectedErr\n                 taskInfo.CodeType.ShouldBe(expectedCodeType.Value);\n             }\n \n-            if (expectedSourceCode != null)\n+            if (verifySource)\n             {\n-                NormalizeRuntime(taskInfo.SourceCode)\n-                    .ShouldBe(NormalizeRuntime(expectedSourceCode), StringCompareShould.IgnoreLineEndings);\n+                Verify(taskInfo.SourceCode, _verifySettings).GetAwaiter().GetResult();",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}