{
  "number": 10221,
  "title": "Extend BuildCheck-feature-threat-model.md",
  "body": "### Fixes\r\n #10136, #10137\r\n\r\n### Context\r\nAdd public documentation for custom BuildCheck rules.",
  "state": "MERGED",
  "createdAt": "2024-06-11T10:11:45Z",
  "updatedAt": "2024-06-14T12:53:29Z",
  "closedAt": "2024-06-14T12:53:29Z",
  "mergedAt": "2024-06-14T12:53:29Z",
  "additions": 16,
  "deletions": 0,
  "changedFiles": 1,
  "headRefName": "dev/ykovalova/extend_build_check_docs",
  "isDraft": false,
  "author": {
    "login": "YuliiaKovalova"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "131294f8ed70fa0a15464d1d3a45a4fc8b86a18e",
          "message": "Extend BuildCheck-feature-threat-model.md",
          "committedDate": "2024-06-11T10:09:50Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7a773fc5b0fc5eb0e96fd8870b5bca93cba8ca9c",
          "message": "Update BuildCheck-feature-threat-model.md",
          "committedDate": "2024-06-11T14:21:11Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Those are great samples and likely they might hep some users, but I'd be less nervous if we wouldn't put any 3rd pty tools suggestions. This is because I do not see into nuances of marketing and market compliancy policies so I'd prefer nothing like that possibly being a concern",
              "createdAt": "2024-06-11T12:17:42Z",
              "path": "documentation/specs/proposed/BuildCheck-feature-threat-model.md",
              "diffHunk": "@@ -35,6 +35,26 @@ Detecting unsecure packages is not MSBuild responsibility and is currently out o\n Custom analyzers are delivered as regular nuget packages by MSBuild `<PackageReference />` element.\n Users is expected to implement process to detect and warn about known malicious custom analyzers.\n \n+#### Important Notice:\n+Users should not add untrusted build analyzers to their projects. The use of untrusted or unverified 3rd party analyzers can introduce security risks and vulnerabilities into the build process. Always ensure that any build analyzers integrated into your projects come from reputable sources and have been thoroughly vetted.\n+\n+To ensure a secure and reliable build environment, the following steps should be taken:\n+\n+#### Use Dedicated Security Tools:\n+Utilize specialized security tools and services to scan and monitor 3rd party analyzer packages and their dependencies. Some widely used tools include:\n+\n+- OWASP Dependency-Check: An open-source tool that identifies project dependencies and checks if there are any known, publicly disclosed vulnerabilities.\n+- Snyk: A tool that continuously monitors for vulnerabilities in open-source libraries and dependencies.\n+- WhiteSource: Provides comprehensive analysis and detection of vulnerabilities in open-source components.",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "@baronfel please take a look",
              "createdAt": "2024-06-11T12:22:08Z",
              "path": "documentation/specs/proposed/BuildCheck-feature-threat-model.md",
              "diffHunk": "@@ -35,6 +35,26 @@ Detecting unsecure packages is not MSBuild responsibility and is currently out o\n Custom analyzers are delivered as regular nuget packages by MSBuild `<PackageReference />` element.\n Users is expected to implement process to detect and warn about known malicious custom analyzers.\n \n+#### Important Notice:\n+Users should not add untrusted build analyzers to their projects. The use of untrusted or unverified 3rd party analyzers can introduce security risks and vulnerabilities into the build process. Always ensure that any build analyzers integrated into your projects come from reputable sources and have been thoroughly vetted.\n+\n+To ensure a secure and reliable build environment, the following steps should be taken:\n+\n+#### Use Dedicated Security Tools:\n+Utilize specialized security tools and services to scan and monitor 3rd party analyzer packages and their dependencies. Some widely used tools include:\n+\n+- OWASP Dependency-Check: An open-source tool that identifies project dependencies and checks if there are any known, publicly disclosed vulnerabilities.\n+- Snyk: A tool that continuously monitors for vulnerabilities in open-source libraries and dependencies.\n+- WhiteSource: Provides comprehensive analysis and detection of vulnerabilities in open-source components.",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "I agree, we can remove the examples here so that we're not prioritizing any specific option and instead offering general guidance like in the subsequent sections. ",
              "createdAt": "2024-06-11T14:09:34Z",
              "path": "documentation/specs/proposed/BuildCheck-feature-threat-model.md",
              "diffHunk": "@@ -35,6 +35,26 @@ Detecting unsecure packages is not MSBuild responsibility and is currently out o\n Custom analyzers are delivered as regular nuget packages by MSBuild `<PackageReference />` element.\n Users is expected to implement process to detect and warn about known malicious custom analyzers.\n \n+#### Important Notice:\n+Users should not add untrusted build analyzers to their projects. The use of untrusted or unverified 3rd party analyzers can introduce security risks and vulnerabilities into the build process. Always ensure that any build analyzers integrated into your projects come from reputable sources and have been thoroughly vetted.\n+\n+To ensure a secure and reliable build environment, the following steps should be taken:\n+\n+#### Use Dedicated Security Tools:\n+Utilize specialized security tools and services to scan and monitor 3rd party analyzer packages and their dependencies. Some widely used tools include:\n+\n+- OWASP Dependency-Check: An open-source tool that identifies project dependencies and checks if there are any known, publicly disclosed vulnerabilities.\n+- Snyk: A tool that continuously monitors for vulnerabilities in open-source libraries and dependencies.\n+- WhiteSource: Provides comprehensive analysis and detection of vulnerabilities in open-source components.",
              "author": {
                "login": "baronfel"
              }
            }
          ]
        }
      }
    ]
  }
}