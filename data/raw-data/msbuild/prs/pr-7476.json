{
  "number": 7476,
  "title": "Fix missing transitive dependencies",
  "body": "Fixes #7475\r\n\r\n### Context\r\nIn #7053 there's a subtle bug which is highly dependent on node ordering (which makes it even repro differently or not at all on different machines...).\r\n\r\nSpecifically, `traversedReferences` is \"reset\" every time `GetTransitiveProjectReferencesExcludingSelf` is called. So we can end up in a state where a node is in the `transitiveReferenceCache` but not in `traversedReferences`. In that case, `GetTransitiveProjectReferencesExcludingSelfHelper` will add the cached transitive references to the `traversedReferences` set, but *not* `incompleteReferencesOfDirectlyReferencingNode`, so the referencing node loses these transitive references.\r\n\r\n### Changes Made\r\nI reworked the `GetTransitiveProjectReferencesExcludingSelf` method to a more straightforward approach. First it checks the cache. Then it creates a new set for the transitive references for this node and immediately adds it to the cache (note the set will be mutated later). This helps cycle handling (this avoids the StackOverflow from #6925, but does make the transitive references incorrect in the cycle case, but that's fine since we'll error later anyway when doing proper cycle detection). Then just iterate the references, add them and add the recursion into their transitive references.\r\n\r\n### Testing\r\nCovered by existing UTs and manually tested on a local repro I had. Unfortunately I can't add UTs for this since the repro is dependent on ordering and is seemingly machine-dependent.",
  "state": "MERGED",
  "createdAt": "2022-03-18T16:56:21Z",
  "updatedAt": "2022-03-21T20:39:38Z",
  "closedAt": "2022-03-21T19:40:09Z",
  "mergedAt": "2022-03-21T19:40:09Z",
  "additions": 18,
  "deletions": 40,
  "changedFiles": 1,
  "headRefName": "fix-graph-transitivity-bug",
  "isDraft": false,
  "author": {
    "login": "dfederm"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Partner request",
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "7e56698e563a37740e63d86c454a20bd93f81f85",
          "message": "Fix missing transitive dependnecies",
          "committedDate": "2022-03-18T16:46:40Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e808bfa7440ae0c5caf35919ce02558d683f2887",
          "message": "Perf tuning",
          "committedDate": "2022-03-18T17:26:36Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "84af901ff081210fb5e663dfde37eef1c43e77f9",
          "message": "Remove dead variable",
          "committedDate": "2022-03-18T18:23:04Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": []
  }
}