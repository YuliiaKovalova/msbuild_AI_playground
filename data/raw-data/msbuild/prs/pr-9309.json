{
  "number": 9309,
  "title": "Add a job for experimental Framework MSBuild insertion to a pipeline",
  "body": "### Context\r\nWe need to add an extra job to .exp-insertions.yml pipeline for creating experimental Framework MSBuild.\r\n\r\n### Changes Made\r\n- Pipeline refactored, a job added\r\n- Fixed bug in deploy script code path for Framework MSBuild\r\n\r\n### Testing\r\nManual run of the pipeline\r\n",
  "state": "MERGED",
  "createdAt": "2023-10-06T12:59:43Z",
  "updatedAt": "2023-10-12T08:03:39Z",
  "closedAt": "2023-10-12T08:03:39Z",
  "mergedAt": "2023-10-12T08:03:39Z",
  "additions": 185,
  "deletions": 92,
  "changedFiles": 2,
  "headRefName": "dev/AR-May/make-exp-msbuild",
  "isDraft": false,
  "author": {
    "login": "AR-May"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "85851fa106b3ff2f0b89086d6f1be14b687a114a",
          "message": "add jobs to pipeline",
          "committedDate": "2023-10-06T12:39:37Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "85d6353aeeaa93aacedd1bcdf3f9be145adfc9d0",
          "message": "Refactoring",
          "committedDate": "2023-10-06T12:59:07Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b68a025c610e778b69f601bbfe62c665a2c6506d",
          "message": "get drop app via restore",
          "committedDate": "2023-10-09T15:35:08Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "303b7b280c771ab53737a18c089594d4dc225194",
          "message": "Refactor restore",
          "committedDate": "2023-10-11T12:22:44Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Could you link to the successful run, please?",
        "createdAt": "2023-10-10T18:53:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Could you link to the successful run, please?\r\n\r\nSure, [this link](https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=8522158&view=results).",
        "createdAt": "2023-10-11T12:54:29Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "By any chance - is this available in any internal nugets feed?\r\nDownloading an exe from remote endpoint sounds bit concerning",
              "createdAt": "2023-10-09T11:07:45Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,186 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - powershell: |\n+      mkdir \"$(Pipeline.Workspace)/artifacts\"\n+      \n+      $ToolsFolder = \"$(Pipeline.Workspace)/tools\"\n+      mkdir \"$ToolsFolder\"\n+      $DropZipFile = \"$ToolsFolder/drop.zip\"\n+      $DropExePath = \"$ToolsFolder/drop/lib/net45/drop.exe\"\n+      \n+      Write-Host \"Downloading drop.exe\"\n+      $webClient = New-Object 'System.Net.WebClient'\n+      $webClient.Downloadfile(\"$(_DropExeUri)\", $DropZipFile)",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "hm, right. I will try to find something.",
              "createdAt": "2023-10-09T11:21:27Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,186 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - powershell: |\n+      mkdir \"$(Pipeline.Workspace)/artifacts\"\n+      \n+      $ToolsFolder = \"$(Pipeline.Workspace)/tools\"\n+      mkdir \"$ToolsFolder\"\n+      $DropZipFile = \"$ToolsFolder/drop.zip\"\n+      $DropExePath = \"$ToolsFolder/drop/lib/net45/drop.exe\"\n+      \n+      Write-Host \"Downloading drop.exe\"\n+      $webClient = New-Object 'System.Net.WebClient'\n+      $webClient.Downloadfile(\"$(_DropExeUri)\", $DropZipFile)",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Changed that the drop app is downloaded using nuget internal feed.",
              "createdAt": "2023-10-09T15:42:09Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,186 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - powershell: |\n+      mkdir \"$(Pipeline.Workspace)/artifacts\"\n+      \n+      $ToolsFolder = \"$(Pipeline.Workspace)/tools\"\n+      mkdir \"$ToolsFolder\"\n+      $DropZipFile = \"$ToolsFolder/drop.zip\"\n+      $DropExePath = \"$ToolsFolder/drop/lib/net45/drop.exe\"\n+      \n+      Write-Host \"Downloading drop.exe\"\n+      $webClient = New-Object 'System.Net.WebClient'\n+      $webClient.Downloadfile(\"$(_DropExeUri)\", $DropZipFile)",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "No longer needed, right?\r\n```suggestion\r\n```",
              "createdAt": "2023-10-10T18:33:56Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,195 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Right, thanks for pointing this out!",
              "createdAt": "2023-10-11T12:11:36Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,195 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why this specific old version?",
              "createdAt": "2023-10-10T18:43:54Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,195 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - task: NuGetToolInstaller@0\n+    inputs:\n+      versionSpec: '4.9.2'",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Hmm, it is the version that is currently used for restoring the tools: https://github.com/dotnet/msbuild/blob/a9341111228592c25c43ecf6858e7b39e525b5a1/.vsts-dotnet.yml#L100\r\nBut I guess the newer version would work too, I will remove specifying the version.",
              "createdAt": "2023-10-11T12:15:05Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,195 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - task: NuGetToolInstaller@0\n+    inputs:\n+      versionSpec: '4.9.2'",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Can we not use msbuild/dotnet build to restore? nuget.exe is old and busted.",
              "createdAt": "2023-10-10T18:44:28Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,195 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - task: NuGetToolInstaller@0\n+    inputs:\n+      versionSpec: '4.9.2'\n+\n+  - task: NuGetCommand@2",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I tried, but using the dotnet build or MSBuild for restoring this project leads to [errors](https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=8522071&view=logs&j=063f674e-38db-59b9-8dc6-bda499493784&t=9f2fdca3-b554-5196-7e4d-780d69ac46ff).\r\nNuGet restore on the other hand is what is already used in our build pipeline, and it works fine.",
              "createdAt": "2023-10-11T12:18:43Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,195 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - task: NuGetToolInstaller@0\n+    inputs:\n+      versionSpec: '4.9.2'\n+\n+  - task: NuGetCommand@2",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\r\n```suggestion\r\n      Write-Host \"Detected drop.exe version: $dropAppVersion\"\r\n```",
              "createdAt": "2023-10-10T18:51:08Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,195 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - task: NuGetToolInstaller@0\n+    inputs:\n+      versionSpec: '4.9.2'\n+\n+  - task: NuGetCommand@2\n+    displayName: Restore internal tools\n+    inputs:\n+      command: restore\n+      feedsToUse: config\n+      restoreSolution: '$(Build.SourcesDirectory)\\DotNet-msbuild-Trusted\\eng\\common\\internal\\Tools.csproj'\n+      nugetConfigPath: 'NuGet.config'\n+      restoreDirectory: '$(Build.SourcesDirectory)\\DotNet-msbuild-Trusted\\.packages'\n+\n+  - powershell: |\n+      mkdir \"$(Pipeline.Workspace)/artifacts\"\n+      \n+      $dropAppDirectory = Get-ChildItem -Directory -Path \"$(Build.SourcesDirectory)/DotNet-msbuild-Trusted/.packages/drop.app\"\n+      $dropAppVersion = $dropAppDirectory.Name\n+      Write-Host \"Detected dotnet version: $dropAppVersion\"",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Right, I will fix this!",
              "createdAt": "2023-10-11T12:12:33Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,195 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _DropExeUri\n+    value: \"https://artifacts.dev.azure.com/CloudBuild/_apis/drop/client/exe\"\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n+\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json \n+      $MSBuildDropPath = $json.Tools.MSBuild.Locations\n+      Write-Host \"##vso[task.setvariable variable=MSBuildDropPath]$MSBuildDropPath\"\n+      Write-Host \"MSBuild Drop Path directory: $MSBuildDropPath\"\n+    displayName: Get Retail MSBuild Drop Path\n+\n+  - task: NuGetToolInstaller@0\n+    inputs:\n+      versionSpec: '4.9.2'\n+\n+  - task: NuGetCommand@2\n+    displayName: Restore internal tools\n+    inputs:\n+      command: restore\n+      feedsToUse: config\n+      restoreSolution: '$(Build.SourcesDirectory)\\DotNet-msbuild-Trusted\\eng\\common\\internal\\Tools.csproj'\n+      nugetConfigPath: 'NuGet.config'\n+      restoreDirectory: '$(Build.SourcesDirectory)\\DotNet-msbuild-Trusted\\.packages'\n+\n+  - powershell: |\n+      mkdir \"$(Pipeline.Workspace)/artifacts\"\n+      \n+      $dropAppDirectory = Get-ChildItem -Directory -Path \"$(Build.SourcesDirectory)/DotNet-msbuild-Trusted/.packages/drop.app\"\n+      $dropAppVersion = $dropAppDirectory.Name\n+      Write-Host \"Detected dotnet version: $dropAppVersion\"",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "In the future: consider passing a pattern here, `bin/` is big and we don't need all of it.",
              "createdAt": "2023-10-11T21:42:41Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,192 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Sure, I will add it to the refactoring ideas, I have an issue for them.",
              "createdAt": "2023-10-12T07:07:20Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,192 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't think I understand where this file comes from--what repo? How is it updated?",
              "createdAt": "2023-10-11T22:01:24Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,192 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n+\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json ",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "In the resources there is a CloudBuildConfig repo which main branch I checkout. Better way to get this file is also in the refactoring issue, since we need only one file from the repo, not everything.",
              "createdAt": "2023-10-12T07:09:37Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,192 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n+\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json ",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "It is updated by CloudBuild team when they have a new retail MSBuild.",
              "createdAt": "2023-10-12T07:10:06Z",
              "path": ".exp-insertions.yml",
              "diffHunk": "@@ -23,105 +29,192 @@ parameters:\n variables:\n   - name: _MsBuildCiPipelineId\n     value: 9434\n+  - name: _MSBuildConfigFilePath\n+    value: \"config/batmon/Q-Prod-Co3/Coordinator/ToolsReleaseConfig-GeneralPublic.json\"\n+  - name: VSVersion\n+    value: ${{parameters.VSVersionName}}\n \n pool:\n   vmImage: windows-latest\n \n-steps:\n-- powershell: |\n-    mkdir '$(System.ArtifactsDirectory)/installer'\n-\n-    $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n-    $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n-\n-    foreach ($sdk in $sdks)\n-    {\n-      Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n-      Invoke-WebRequest `\n-        -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n-        -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n-    }\n-    mkdir '$(Pipeline.Workspace)/artifacts'\n-    \n-  displayName: Download latest dotnet sdks\n+resources:\n+  repositories: \n+    - repository: CloudBuildConfig\n+      type: git\n+      name: CloudBuild/CloudBuildConfig\n+      endpoint: CloudBuild_Test\n+      ref: refs/heads/main \n \n-# Download latest build artifacts for a branch from MSBuild Build CI\n-- ${{ if eq(parameters.MSBuildBuildID, 'default') }}:\n-  - task: DownloadBuildArtifacts@1\n-    inputs:\n-      buildType: specific\n-      project: DevDiv\n-      pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: latestFromBranch\n-      branchName: '${{parameters.MSBuildBranch}}'  \n-      artifactName: bin\n-      downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"  \n-    displayName: Download latest msbuild from branch\n+jobs:\n+- job: CreateExpDotnet\n+  displayName: Create Experimental Dotnet\n+  condition: ne('${{ parameters.DotnetInstallerChannel }}', 'none')\n+  steps:\n+  - powershell: |\n+      mkdir '$(System.ArtifactsDirectory)/installer'\n+\n+      $dotnetChannel = '${{parameters.DotnetInstallerChannel}}'\n+      $sdks = \"dotnet-sdk-win-x64.zip\", \"dotnet-sdk-linux-x64.tar.gz\"\n+\n+      foreach ($sdk in $sdks)\n+      {\n+        Write-Host \"Downloading dotnet $sdk from channel $dotnetChannel\"\n+        Invoke-WebRequest `\n+          -Uri \"https://aka.ms/dotnet/$dotnetChannel/daily/$sdk\" `\n+          -OutFile \"$(System.ArtifactsDirectory)/installer/$sdk\"\n+      }\n+      mkdir '$(Pipeline.Workspace)/artifacts'\n+    displayName: Download latest dotnet sdks\n \n-# Download build artifacts for MSBuild Build CI specific build\n-- ${{ if ne(parameters.MSBuildBuildID, 'default') }}:\n   - task: DownloadBuildArtifacts@1\n     inputs:\n       buildType: specific\n       project: DevDiv\n       pipeline: $(_MsBuildCiPipelineId) \n-      buildVersionToDownload: specific\n-      buildId: ${{parameters.MSBuildBuildID}} \n+      ${{ if eq(parameters.MSBuildBuildID, 'default') }}: \n+        buildVersionToDownload: latestFromBranch\n+        branchName: '${{parameters.MSBuildBranch}}'\n+      ${{ else }}:\n+        buildVersionToDownload: specific\n+        buildId: ${{parameters.MSBuildBuildID}} \n       artifactName: bin\n       downloadPath: '$(System.ArtifactsDirectory)/msbuild/artifacts/bin'\n-      itemPattern: \"MSBuild.Bootstrap/**\"\n-    displayName: Download specified msbuild build\n-    \n-- powershell: |\n-    $sdk = \"dotnet-sdk-win-x64\"\n+    displayName: Download msbuild artifacts\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n-    Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-win-x64\"\n+\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.zip\"\n+      Expand-Archive \"$(System.ArtifactsDirectory)/installer/$sdk.zip\" -DestinationPath \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n     \n-    $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\"\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n+      Write-Host \"Compressing dotnet sdk files\"\n+      Get-ChildItem -Path \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" | Compress-Archive -DestinationPath \"$(Pipeline.Workspace)/artifacts/$sdk.zip\"\n \n-  displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n+    displayName: Dogfood msbuild dlls to dotnet sdk win-x64\n \n-- powershell: |\n-    $sdk = \"dotnet-sdk-linux-x64\"\n+  - powershell: |\n+      $sdk = \"dotnet-sdk-linux-x64\"\n     \n-    mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      mkdir \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n-    tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n+      Write-Host \"Extracting $(System.ArtifactsDirectory)/installer/$sdk.tar.gz\"\n+      tar -xzvf \"$(System.ArtifactsDirectory)/installer/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\"\n \n-    $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n-    $dotnetVersion = $dotnetDirectory.Name\n-    Write-Host \"Detected dotnet version: $dotnetVersion\"\n+      $dotnetDirectory = Get-ChildItem -Directory -Path $(Pipeline.Workspace)/exp-dotnet/$sdk/sdk\n+      $dotnetVersion = $dotnetDirectory.Name\n+      Write-Host \"Detected dotnet version: $dotnetVersion\"\n     \n-    Write-Host \"Updating MSBuild dlls.\"\n-    $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n-      -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n-      -bootstrapDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin/MSBuild.Bootstrap\" `\n-      -configuration Release `\n-      -makeBackup $false\n+      Write-Host \"Updating MSBuild dlls.\"\n+      $(Build.SourcesDirectory)/scripts/Deploy-MSBuild.ps1 `\n+        -destination \"$(Pipeline.Workspace)/exp-dotnet/$sdk/sdk/$dotnetVersion\" `\n+        -binDirectory \"$(System.ArtifactsDirectory)/msbuild/artifacts/bin\" `\n+        -configuration Release `\n+        -makeBackup $false\n     \n-    Write-Host \"Compressing dotnet sdk files\"\n-    tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n-  displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n-\n-- task: PublishPipelineArtifact@1\n-  inputs:\n-    targetPath: '$(Pipeline.Workspace)/artifacts'\n-    artifactName: ExperimentalDotnet\n-    parallel: true\n-  condition: always()\n-  displayName: Publish crank assests artifacts\n+      Write-Host \"Compressing dotnet sdk files\"\n+      tar -czvf \"$(Pipeline.Workspace)/artifacts/$sdk.tar.gz\" -C \"$(Pipeline.Workspace)/exp-dotnet/$sdk\" .\n+    displayName: Dogfood msbuild dlls to dotnet sdk linux-x64\n+\n+  - task: PublishPipelineArtifact@1\n+    inputs:\n+      targetPath: '$(Pipeline.Workspace)/artifacts'\n+      artifactName: ExperimentalDotnet\n+      parallel: true\n+    condition: always()\n+    displayName: Publish crank assests artifacts\n+\n+\n+- job: CreateExpMSBuild\n+  displayName: \"Create Experimental MSBuild\"\n+  condition: ne('${{ parameters.VSVersionName }}', 'none')\n+  steps:\n+  - checkout: self\n+\n+  - checkout: CloudBuildConfig\n+\n+  - powershell: |\n+      $json = (Get-Content \"$(Build.SourcesDirectory)/CloudBuildConfig/$(_MSBuildConfigFilePath)\" -Raw) | ConvertFrom-Json ",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      }
    ]
  }
}