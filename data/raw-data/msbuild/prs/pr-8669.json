{
  "number": 8669,
  "title": "Avoid package dependencies on inbox libraries",
  "body": "- System.Security.Principal.Windows is inbox since net6.0\r\n- System.Net.Http is inbox since netcoreapp2.0\r\n- System.Reflection.Metadata is inbox since netcoreapp2.0\r\n- System.Threading.Tasks.Dataflow is inbox since netcoreapp2.0\r\n- Remove System.Net.Http package references which aren't needed as they underlying assembly is inbox on both .NETFramework and .NETCoreApp.\r\n\r\nBy avoiding the dependencies, we minimize the dependency graph and with that the attack surface.\r\n\r\ncc @MichaelSimons (removes netstandard1.x dependencies)",
  "state": "MERGED",
  "createdAt": "2023-04-15T08:38:42Z",
  "updatedAt": "2023-05-03T15:02:06Z",
  "closedAt": "2023-04-19T01:49:46Z",
  "mergedAt": "2023-04-19T01:49:46Z",
  "additions": 7,
  "deletions": 18,
  "changedFiles": 12,
  "headRefName": "MSBuildDontReferenceInboxLibsOnNetCoreApp",
  "isDraft": false,
  "author": {
    "login": "ViktorHofer"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "ViktorHofer"
      }
    ]
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "515fd70f25862de09f7abba625a114e1f9d4ef65",
          "message": "Avoid package dependencies on inbox libraries\n\n- System.Security.Principal.Windows is inbox since net6.0\n- System.Net.Http is inbox since netcoreapp2.0\n- System.Resources.Extensions is inbox since netcoreapp2.0\n- System.Reflection.Metadata is inbox since netcoreapp2.0\n- System.Threading.Tasks.Dataflow is inbox since netcoreapp2.0\n\nBy avoiding the dependencies, we minimize the dependency graph and with\nthat the attack surface.",
          "committedDate": "2023-04-15T09:13:39Z",
          "author": {
            "name": "Viktor Hofer",
            "email": "viktor.hofer@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5d2d93b5fe6a6d449ef1005a77f38448f6f1c82c",
          "message": "Remove unused System.Net.Http package references",
          "committedDate": "2023-04-15T09:49:38Z",
          "author": {
            "name": "Viktor Hofer",
            "email": "viktor.hofer@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I don't have permissions to hit the merge button.",
        "createdAt": "2023-04-17T13:59:16Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "@dotnet/kitten will merge when appropriate.",
        "createdAt": "2023-04-17T14:01:08Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Just curious as I haven't stumbled upon such a policy in our stack yet. Does that mean that only dotnet/kitten (which I assume is a rotational assignment) is allowed to merge PRs into dotnet/msbuild?",
        "createdAt": "2023-04-17T14:11:39Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "Yes, that's the general policy--the idea is to minimize the likelihood of causing regressions in Visual Studio, since we can't run their test suite inline with ours in PRs.",
        "createdAt": "2023-04-17T14:20:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I tried to bring this back but leave `<PackageVersion Include=\"System.Net.Http\" Version=\"$(SystemNetHttpVersion)\" />` so NuGet transitive pinning would pull only that version, but it doesn't appear to have worked--my packages folder after restore has both 4.3.0.\r\n\r\n@jeffkl do you know of anything that might have caused that? I tried to repro on a trivial new project referencing Shouldly 3.0.0 (which I think is the source of the problem for us) but it seemed fine there, so something more subtle might be going on in the MSBuild repo.",
        "createdAt": "2023-04-28T14:22:56Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I was going to open an issue for upgrading Shouldly/3.0.0 to 4.2.1 in the msbuild repo. Unfortunately there are >100 errors that would need to be resolved, presumably because of API changes.",
        "createdAt": "2023-04-28T14:48:57Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "> @jeffkl do you know of anything that might have caused that? I tried to repro on a trivial new project referencing Shouldly 3.0.0 (which I think is the source of the problem for us) but it seemed fine there, so something more subtle might be going on in the MSBuild repo.\r\n\r\nNot off the top of my head, the assets file should explain it.",
        "createdAt": "2023-05-03T15:02:05Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}