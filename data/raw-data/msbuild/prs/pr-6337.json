{
  "number": 6337,
  "title": "Fix TasksCanAddRecursiveDirBuiltInMetadata()",
  "body": "Don't use Program Files\\Reference Assemblies as that might not exist for 64-bit.\r\n\r\nPass ITestOutputLogger to MockLogger to get the full log in case of failure.\r\n\r\nSearch for a log substring that will only be there in case of success. Even successful logs can contain [] when the file is at the root of the directory so RecursiveDir will be empty.\r\n\r\nFixes https://github.com/dotnet/msbuild/issues/6267",
  "state": "MERGED",
  "createdAt": "2021-04-10T00:59:50Z",
  "updatedAt": "2021-04-22T17:23:28Z",
  "closedAt": "2021-04-22T17:23:26Z",
  "mergedAt": "2021-04-22T17:23:25Z",
  "additions": 11,
  "deletions": 13,
  "changedFiles": 1,
  "headRefName": "dev/kirillo/recursiveDirTest",
  "isDraft": false,
  "author": {
    "login": "KirillOsenkov"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "5fe95effc3b1205b6996120bc15094e97736a201",
          "message": "Fix TasksCanAddRecursiveDirBuiltInMetadata()\n\nDon't use Program Files\\Reference Assemblies as that might not exist for 64-bit.\n\nPass ITestOutputLogger to MockLogger to get the full log in case of failure.\n\nSearch for a log substring that will only be there in case of success. Even successful logs can contain [] when the file is at the root of the directory so RecursiveDir will be empty.",
          "committedDate": "2021-04-10T00:58:59Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7c5e6a4eb8c13387ff54dbd83f3d769796b6b6dd",
          "message": "Fix test on Unix.",
          "committedDate": "2021-04-10T01:29:02Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fd6214db7ccd285436e4f46d64d3890153476a1c",
          "message": "Update src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs\n\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2021-04-12T16:40:44Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "KirillOsenkov@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6208e8634899a1372cd3b2ed89322d69bfed3211",
          "message": "Add using Shouldly;",
          "committedDate": "2021-04-12T19:37:03Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n            project.Build(\"t\", new[] { logger }).ShouldBeTrue();\r\n```",
              "createdAt": "2021-04-12T14:59:18Z",
              "path": "src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs",
              "diffHunk": "@@ -328,31 +328,30 @@ public void MSBuildLastTaskResult()\n         /// else could let the item get corrupt (inconsistent values for Filename and FullPath, for example)\n         /// </summary>\n         [Fact]\n-        [Trait(\"Category\", \"netcore-osx-failing\")]\n-        [Trait(\"Category\", \"netcore-linux-failing\")]\n-        [Trait(\"Category\", \"mono-osx-failing\")]\n         public void TasksCanAddRecursiveDirBuiltInMetadata()\n         {\n-            MockLogger logger = new MockLogger();\n+            MockLogger logger = new MockLogger(this._testOutput);\n \n-            string projectFileContents = ObjectModelHelpers.CleanupFileContents(@\"\n-<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'>\n+            string projectFileContents = ObjectModelHelpers.CleanupFileContents($@\"\n+<Project>\n <Target Name='t'>\n- <CreateItem Include='$(programfiles)\\reference assemblies\\**\\*.dll;'>\n+ <CreateItem Include='{Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)}\\**\\*.dll'>\n    <Output TaskParameter='Include' ItemName='x' />\n  </CreateItem>\n <Message Text='@(x)'/>\n- <Message Text='[%(x.RecursiveDir)]'/>                    \n+ <Message Text='[%(x.RecursiveDir)]'/>\n </Target>\n </Project>\");\n \n             Project project = new Project(XmlReader.Create(new StringReader(projectFileContents)));\n-            List<ILogger> loggers = new List<ILogger>();\n-            loggers.Add(logger);\n-            bool result = project.Build(\"t\", loggers);\n+            bool result = project.Build(\"t\", new[] { logger });\n \n             Assert.True(result);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}