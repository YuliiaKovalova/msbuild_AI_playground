{
  "number": 7868,
  "title": "Fix for Scheduler using build parameter from previous build",
  "body": "This is a minor bug fix which ensures the Scheduler always uses the latest value for `BuildParameters.DisableInProcNode` rather than the value provided in the first build.\r\n\r\nNote that the Scheduler is an `IBuildComponent` which has the same lifetime as the `BuildManager`. However, `BuildParameters` is per build, so caching a value from `BuildParameters` would be incorrect.",
  "state": "MERGED",
  "createdAt": "2022-08-08T21:10:27Z",
  "updatedAt": "2022-08-29T17:07:27Z",
  "closedAt": "2022-08-27T18:36:47Z",
  "mergedAt": "2022-08-27T18:36:47Z",
  "additions": 10,
  "deletions": 16,
  "changedFiles": 4,
  "headRefName": "fix-scheduler-caching-value",
  "isDraft": false,
  "author": {
    "login": "dfederm"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c6e93c292a91cd686b475b51566fd0733551d973",
          "message": "Fix for Scheduler using build parameter from previous build",
          "committedDate": "2022-08-08T21:08:24Z",
          "author": {
            "name": "David Federman",
            "email": "david.federman@outlook.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b876f28664439cc3ca8677169ad984df2f5dee78",
          "message": "Fix UTs...",
          "committedDate": "2022-08-08T22:59:19Z",
          "author": {
            "name": "David Federman",
            "email": "david.federman@outlook.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "The test failures are a known flaky thing at this point. I told them to rerun; hopefully they pass this time.",
        "createdAt": "2022-08-09T17:01:53Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Looked at one of the test failures. (9 failed in the group I looked at.) It's setting the env var in the test, so capturing its value at process start makes it effectively unsettable for the test. One option:\r\n```suggestion\r\n            ? (BuildEnvironmentHelper.Instance.RunningTests ? Environment.GetEnvironmentVariable(\"MSBUILDNOINPROCNODE\") == \"1\" : InprocNodeDisabledViaEnvironmentVariable) || _componentHost.BuildParameters.DisableInProcNode\r\n```\r\n\r\n(Not 100% sure if that's available here, but I think it is.)",
              "createdAt": "2022-08-08T22:11:11Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +146,9 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)\n+            ? InprocNodeDisabledViaEnvironmentVariable || _componentHost.BuildParameters.DisableInProcNode",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Bah, I ran some UTs but apparently not all I guess",
              "createdAt": "2022-08-08T22:12:33Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +146,9 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)\n+            ? InprocNodeDisabledViaEnvironmentVariable || _componentHost.BuildParameters.DisableInProcNode",
              "author": {
                "login": "dfederm"
              }
            },
            {
              "body": "If you want to go further, you should be able to eke out a tiny, unimportant perf improvement if you make a function for calling Environment.GetEnvironmentVariable(\"MSBUILDNOINPROCNODE\") == \"1\" then just cache that. Might even be more readable.",
              "createdAt": "2022-08-08T22:14:41Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +146,9 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)\n+            ? InprocNodeDisabledViaEnvironmentVariable || _componentHost.BuildParameters.DisableInProcNode",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "`Traits` effecitvely does the `RunningTests` thing, so I'll move the env var there.",
              "createdAt": "2022-08-08T22:59:48Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +146,9 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)\n+            ? InprocNodeDisabledViaEnvironmentVariable || _componentHost.BuildParameters.DisableInProcNode",
              "author": {
                "login": "dfederm"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "It'd be nice if you could cache this, as it was before, but invalidate it when we start a new build. Not an important difference, though.",
              "createdAt": "2022-08-09T17:04:25Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +143,10 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should be 17_4",
              "createdAt": "2022-08-15T15:48:22Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +143,10 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc\n+            => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "On that note, can you also update https://github.com/dotnet/msbuild/blob/main/documentation/wiki/ChangeWaves.md?",
              "createdAt": "2022-08-15T17:10:39Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +143,10 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc\n+            => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "This matches the existing logic though. See the removed code below.",
              "createdAt": "2022-08-15T17:12:54Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +143,10 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc\n+            => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)",
              "author": {
                "login": "dfederm"
              }
            },
            {
              "body": "To clarify, I moved this code from the ctor to the getter so that it's re-evaluated each time and not only once when the Scheduler is constructed. This is because the BuildParameters values may change over the lifetime of the Scheduler, so it needs to be read every time.",
              "createdAt": "2022-08-15T17:15:45Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +143,10 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc\n+            => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)",
              "author": {
                "login": "dfederm"
              }
            },
            {
              "body": "You're right; ignore us.",
              "createdAt": "2022-08-15T17:17:52Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +143,10 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc\n+            => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Ah I didn't catch that on the first go-round. Thanks for the clarification",
              "createdAt": "2022-08-15T17:18:05Z",
              "path": "src/Build/BackEnd/Components/Scheduler/Scheduler.cs",
              "diffHunk": "@@ -144,7 +143,10 @@ internal class Scheduler : IScheduler\n         /// <summary>\n         /// Flag used for debugging by forcing all scheduling to go out-of-proc.\n         /// </summary>\n-        internal bool ForceAffinityOutOfProc { get; private set; }\n+        internal bool ForceAffinityOutOfProc\n+            => ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0)",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      }
    ]
  }
}