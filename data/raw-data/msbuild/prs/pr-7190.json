{
  "number": 7190,
  "title": "CA2241 Provide correct arguments to formatting methods",
  "body": "Relates to #7174",
  "state": "MERGED",
  "createdAt": "2021-12-30T21:56:47Z",
  "updatedAt": "2022-01-26T08:20:39Z",
  "closedAt": "2022-01-26T08:17:41Z",
  "mergedAt": "2022-01-26T08:17:41Z",
  "additions": 9,
  "deletions": 56,
  "changedFiles": 2,
  "headRefName": "CA2241",
  "isDraft": false,
  "author": {
    "login": "elachlan"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "e9ee9b72340fb3d636bc416973fcc13884ac48a5",
          "message": "CA2241 Provide correct arguments to formatting methods",
          "committedDate": "2021-12-30T21:56:21Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dc678b5225048191ddd1055615e6780187cfdb77",
          "message": "Group tests and remove duplicate checks",
          "committedDate": "2021-12-30T23:01:12Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d231c1a8f6ca2836259c5128c549f0deae47ed7b",
          "message": "Revert CodeAnalysis.ruleset",
          "committedDate": "2022-01-08T05:56:58Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9a1f37e92446a2863df38e182ccea1201ebf1b0e",
          "message": "Merge branch 'master' into CA2241",
          "committedDate": "2022-01-08T05:57:05Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3533a63f972ac613880562d31fd0b2736d475809",
          "message": "enable warning on CA2241",
          "committedDate": "2022-01-08T05:57:43Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Looking at all these tests, they don't really feel substantively different from each other, and many check the same thing twice. Maybe condense into one test?",
              "createdAt": "2021-12-30T22:25:39Z",
              "path": "src/Build.UnitTests/FileUtilitiesRegex_Tests.cs",
              "diffHunk": "@@ -525,64 +525,46 @@ public void MatchLengthStartWithUncPatternNoShare()\n         [Fact]\n         public void UncPatternEmptyString_LegacyRegex()\n         {\n-            string winDirectory = string.Format(\"\", _directoryStart);\n-            string unixDirectory = string.Format(\"\", _altDirectoryStart);\n-\n-            UncPattern.IsMatch(winDirectory).ShouldBe(false);\n-            UncPattern.IsMatch(unixDirectory).ShouldBe(false);\n+            UncPattern.IsMatch(string.Empty).ShouldBe(false);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "How are those changes?",
              "createdAt": "2021-12-30T23:01:53Z",
              "path": "src/Build.UnitTests/FileUtilitiesRegex_Tests.cs",
              "diffHunk": "@@ -525,64 +525,46 @@ public void MatchLengthStartWithUncPatternNoShare()\n         [Fact]\n         public void UncPatternEmptyString_LegacyRegex()\n         {\n-            string winDirectory = string.Format(\"\", _directoryStart);\n-            string unixDirectory = string.Format(\"\", _altDirectoryStart);\n-\n-            UncPattern.IsMatch(winDirectory).ShouldBe(false);\n-            UncPattern.IsMatch(unixDirectory).ShouldBe(false);\n+            UncPattern.IsMatch(string.Empty).ShouldBe(false);",
              "author": {
                "login": "elachlan"
              }
            },
            {
              "body": "@Forgind I disagree pretty strongly with this recommendation, because it violates the test principle that a test should fail for only one reason. Here the new test could fail if one of the implementations fails but it wouldn't be super clear from the failure which one.\r\n\r\n@elachlan don't bother reverting though; this isn't a huge deal and you already did the unification.",
              "createdAt": "2022-01-11T16:21:49Z",
              "path": "src/Build.UnitTests/FileUtilitiesRegex_Tests.cs",
              "diffHunk": "@@ -525,64 +525,46 @@ public void MatchLengthStartWithUncPatternNoShare()\n         [Fact]\n         public void UncPatternEmptyString_LegacyRegex()\n         {\n-            string winDirectory = string.Format(\"\", _directoryStart);\n-            string unixDirectory = string.Format(\"\", _altDirectoryStart);\n-\n-            UncPattern.IsMatch(winDirectory).ShouldBe(false);\n-            UncPattern.IsMatch(unixDirectory).ShouldBe(false);\n+            UncPattern.IsMatch(string.Empty).ShouldBe(false);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "That's fair. I was borderline on suggesting just removing the legacy tests entirely\u2014they test Regex, which isn't even in MSBuild. FileUtilitiesRegex.IsUncPattern and FileUtilitiesRegex.StartsWithUncPattern both just call FileUtilitiesRegex.StartsWithUncPatternMatchLength, so it all felt like one test to me. It's possible that won't be true in the future, though.",
              "createdAt": "2022-01-11T17:11:15Z",
              "path": "src/Build.UnitTests/FileUtilitiesRegex_Tests.cs",
              "diffHunk": "@@ -525,64 +525,46 @@ public void MatchLengthStartWithUncPatternNoShare()\n         [Fact]\n         public void UncPatternEmptyString_LegacyRegex()\n         {\n-            string winDirectory = string.Format(\"\", _directoryStart);\n-            string unixDirectory = string.Format(\"\", _altDirectoryStart);\n-\n-            UncPattern.IsMatch(winDirectory).ShouldBe(false);\n-            UncPattern.IsMatch(unixDirectory).ShouldBe(false);\n+            UncPattern.IsMatch(string.Empty).ShouldBe(false);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Up to the team, I don't mind either way. Just let me know what you want me to do. If there isn't any changes then is this okay to merge?",
              "createdAt": "2022-01-12T10:34:55Z",
              "path": "src/Build.UnitTests/FileUtilitiesRegex_Tests.cs",
              "diffHunk": "@@ -525,64 +525,46 @@ public void MatchLengthStartWithUncPatternNoShare()\n         [Fact]\n         public void UncPatternEmptyString_LegacyRegex()\n         {\n-            string winDirectory = string.Format(\"\", _directoryStart);\n-            string unixDirectory = string.Format(\"\", _altDirectoryStart);\n-\n-            UncPattern.IsMatch(winDirectory).ShouldBe(false);\n-            UncPattern.IsMatch(unixDirectory).ShouldBe(false);\n+            UncPattern.IsMatch(string.Empty).ShouldBe(false);",
              "author": {
                "login": "elachlan"
              }
            }
          ]
        }
      }
    ]
  }
}