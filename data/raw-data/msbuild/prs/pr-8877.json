{
  "number": 8877,
  "title": "Add hook for a post-Directory.Build.props import",
  "body": "Fixes #8876\r\n\r\n### Context\r\nThe SDK has logic it wants to run immediately after importing Directory.Build.props. This adds a hook for that so the SDK doesn't have to manually import it, disable importing Microsoft.Common.props, then re-implement part of it.\r\n\r\n### Changes Made\r\n\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-06-13T18:16:16Z",
  "updatedAt": "2023-06-16T02:07:38Z",
  "closedAt": "2023-06-16T02:07:37Z",
  "mergedAt": "2023-06-16T02:07:37Z",
  "additions": 8,
  "deletions": 0,
  "changedFiles": 2,
  "headRefName": "post-d.b.p-import",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "f0dc67a76d980ca6ea3bff4547d76b69692c70c9",
          "message": "Add hook for a post-Directory.Build.props import",
          "committedDate": "2023-06-13T18:13:28Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "02f0370e8f426e0addd1a92c8547a41c9a1b2ab8",
          "message": "Update src/Tasks/Microsoft.Common.props\n\nCo-authored-by: Jeff Kluge <jeffkl@microsoft.com>",
          "committedDate": "2023-06-13T18:38:01Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fa179a9b4d25bcc18e020fd78b9560acf8852afb",
          "message": "Add more hooks",
          "committedDate": "2023-06-13T18:59:03Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n  <Import Project=\"$(CustomAfterDirectoryBuildProps)\" Condition=\"'$(CustomAfterDirectoryBuildProps)' != ''\" />\r\n```\r\nThere's a common naming pattern for this sort of import extension, `CustomBeforeNameOfFile` and `CustomAfterNameOfFile`.  I would suggest we stick with this pattern.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/f0dc67a76d980ca6ea3bff4547d76b69692c70c9/src/Tasks/Microsoft.Common.props#L78-L79",
              "createdAt": "2023-06-13T18:20:53Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -31,6 +31,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n   <Import Project=\"$(DirectoryBuildPropsPath)\" Condition=\"'$(ImportDirectoryBuildProps)' == 'true' and exists('$(DirectoryBuildPropsPath)')\"/>\n \n+  <Import Project=\"$(AfterDirectoryBuildPropsImport)\" Condition=\"'$(AfterDirectoryBuildPropsImport)' != ''\" />",
              "author": {
                "login": "jeffkl"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Does it make sense to do a Before and After import here as well as doing the same for `Directory.Build.targets`?  ",
              "createdAt": "2023-06-13T18:21:30Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -31,6 +31,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n   <Import Project=\"$(DirectoryBuildPropsPath)\" Condition=\"'$(ImportDirectoryBuildProps)' == 'true' and exists('$(DirectoryBuildPropsPath)')\"/>\n \n+  <Import Project=\"$(AfterDirectoryBuildPropsImport)\" Condition=\"'$(AfterDirectoryBuildPropsImport)' != ''\" />",
              "author": {
                "login": "jeffkl"
              }
            },
            {
              "body": "This seems reasonable, but I'm not sure whether there is real customer need for it. Are you aware of anyone who would use those?",
              "createdAt": "2023-06-13T18:38:46Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -31,6 +31,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n   <Import Project=\"$(DirectoryBuildPropsPath)\" Condition=\"'$(ImportDirectoryBuildProps)' == 'true' and exists('$(DirectoryBuildPropsPath)')\"/>\n \n+  <Import Project=\"$(AfterDirectoryBuildPropsImport)\" Condition=\"'$(AfterDirectoryBuildPropsImport)' != ''\" />",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I'm sure that people would use it if it existed.  My main suggestion is that if there's no point in only added an After import, the pattern is pretty well established that you should have a Before and After import for maximum extensibility.  And if we're going to add this for Directory.Build.props we might as well add it for Directory.Build.targets at the same time.  ",
              "createdAt": "2023-06-13T18:42:02Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -31,6 +31,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n   <Import Project=\"$(DirectoryBuildPropsPath)\" Condition=\"'$(ImportDirectoryBuildProps)' == 'true' and exists('$(DirectoryBuildPropsPath)')\"/>\n \n+  <Import Project=\"$(AfterDirectoryBuildPropsImport)\" Condition=\"'$(AfterDirectoryBuildPropsImport)' != ''\" />",
              "author": {
                "login": "jeffkl"
              }
            },
            {
              "body": "Yeah, I agree with @jeffkl. Might as well be principled about the additions.\r\n\r\nWeakest case IMO is before-`Directory.Build.props`; there is very little way to influence that--but there is some, so let's do it.",
              "createdAt": "2023-06-13T18:53:30Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -31,6 +31,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n   <Import Project=\"$(DirectoryBuildPropsPath)\" Condition=\"'$(ImportDirectoryBuildProps)' == 'true' and exists('$(DirectoryBuildPropsPath)')\"/>\n \n+  <Import Project=\"$(AfterDirectoryBuildPropsImport)\" Condition=\"'$(AfterDirectoryBuildPropsImport)' != ''\" />",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}