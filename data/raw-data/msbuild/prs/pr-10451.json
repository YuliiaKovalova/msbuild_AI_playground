{
  "number": 10451,
  "title": "Retarget to .NET 9",
  "body": "Fixes #10280\r\n\r\n### Context\r\n.NET 9 is in preview 6. \r\nConsuming the latest Arcade + retargeting the the msbuild core version to .net 9.\r\n\r\n### Changes Made\r\n- Upgrade the Target framework from .net8 to .net9\r\n- `darc update-dependencies --channel \".NET Eng - Latest\" --name \"Microsoft.DotNet.Arcade.Sdk\"`\r\n- Version of xunit provided by arcade.sdk reverted, not to introduce the changes in one PR. \r\n- ApiCompat warnings supressed by `dotnet pack /p:GenerateCompatibilitySuppressionFile=true`\r\n- Addressing affected test behavior by .NET 9 Preview 6 breaking change: https://learn.microsoft.com/en-us/dotnet/core/compatibility/core-libraries/9.0/empty-env-variable. To delete the env var we need to pass the `null` value\r\n- Addressed https://github.com/dotnet/msbuild/issues/9720\r\n- Addressed https://github.com/dotnet/msbuild/issues/9366\r\n\r\n### Testing\r\n- Existing tests should pass\r\n- Exp insertion: https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/569166\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2024-07-26T12:26:19Z",
  "updatedAt": "2024-08-07T16:53:13Z",
  "closedAt": "2024-08-05T13:34:30Z",
  "mergedAt": null,
  "additions": 3693,
  "deletions": 5056,
  "changedFiles": 184,
  "headRefName": "dev/f-alizada/retarget-to-dotnet9",
  "isDraft": false,
  "author": {
    "login": "f-alizada"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8a851fa9f6bf719659ef57c3603b43f8ea0df9eb",
          "message": "Move to .net 9 preview 5 and update the code accordingly",
          "committedDate": "2024-07-26T10:52:23Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "078d66debfe86e288258990b7bae8641b3cf09a0",
          "message": "Bring latest changes from .net eng latest",
          "committedDate": "2024-07-26T13:52:18Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7c847454348103f64ad8b8bf9a4135100055064a",
          "message": "Update all to retarget",
          "committedDate": "2024-07-26T15:28:48Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2fc61e3781dd9775ab2e7eaedebd47ccfdb0473c",
          "message": "Update dependencies",
          "committedDate": "2024-07-29T07:45:59Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4167334dd536fab0457ceb1c8df3010678f30d1c",
          "message": "Update compilers toolset",
          "committedDate": "2024-07-29T08:55:11Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c0d8bd9a2c63cc2af406cfea024b605241214b39",
          "message": "Merge branch 'main' into dev/f-alizada/retarget-to-dotnet9",
          "committedDate": "2024-07-29T08:58:17Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "104755925+f-alizada@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a1466217c049e36122ce7abe9b5e10129946f262",
          "message": "Update the xliff-tasks",
          "committedDate": "2024-07-29T09:35:51Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "afae9e1fd4964166de39c29962ed3e60f4f4a1ea",
          "message": "Remove the workarounds",
          "committedDate": "2024-07-29T12:22:24Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "03e94e8858926548b903fc5a961efe402bfe6898",
          "message": "Apply darc updates",
          "committedDate": "2024-07-29T12:51:43Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0fd54324ef0c72a2e87302684eb725455ef4513b",
          "message": "fix product dependency",
          "committedDate": "2024-07-29T12:55:09Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "55ff1147fc8003019bdcc8c709a299ee4c24056a",
          "message": "update the dotnet used",
          "committedDate": "2024-07-30T07:20:03Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "06fddd96aad6724522ad2b6441ddb8b1f46fab97",
          "message": "Version updates",
          "committedDate": "2024-07-30T07:34:35Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cb17acc5cccc9dde5f0817cb16a6c6ab3a9eb3e6",
          "message": "Merge branch 'main' into dev/f-alizada/retarget-to-dotnet9",
          "committedDate": "2024-07-30T07:37:05Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5933e024c742e95b37a5a7b808a1214831390346",
          "message": "Merge branch 'main' into dev/f-alizada/retarget-to-dotnet9",
          "committedDate": "2024-07-31T10:36:02Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "92641eaab1091ecaa8d10d18aa04d701c1bbbe95",
          "message": "Address one failed test",
          "committedDate": "2024-07-31T12:58:06Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0bb8d83e7845e3924346d6eb59badde40e1cbf5d",
          "message": "Solve warning",
          "committedDate": "2024-07-31T13:09:23Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "213b35d8affa0ad79f5091a68807833e2d550463",
          "message": "Revert the changes",
          "committedDate": "2024-07-31T15:36:39Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f2d177c55e7ab789cab8fc48a1278b25154bb116",
          "message": "Update the dependencies",
          "committedDate": "2024-07-31T15:45:09Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b1d5272fb1317c5a4863884f21db34a1b173fd71",
          "message": "Merge branch 'main' into dev/f-alizada/retarget-to-dotnet9",
          "committedDate": "2024-08-01T07:16:19Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "104755925+f-alizada@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f56b22502421d0598d2ea77dd512ef1365089919",
          "message": "revert xunitextensions and nuget",
          "committedDate": "2024-08-01T07:48:06Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a0bf36fae19fba61b18ea4f20b9087fe13e990de",
          "message": "Revert roslyn updates",
          "committedDate": "2024-08-01T08:02:19Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "552b04852df3bbd59fe4b3b9176e7dba13f443c5",
          "message": "fix merge conflicts",
          "committedDate": "2024-08-01T08:37:00Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "80402aac8dd5c9f15b7e7e8726b5b99928855008",
          "message": "Update the version of the bootstrap sdk",
          "committedDate": "2024-08-01T09:18:10Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "16f94a84276285f9a56ea241805df9b551325ac2",
          "message": "Merge branch 'main' into dev/f-alizada/retarget-to-dotnet9",
          "committedDate": "2024-08-01T09:18:52Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "104755925+f-alizada@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7020f32c6809f04859da73058ae199d1587f1088",
          "message": "To cleanup the envvar use null",
          "committedDate": "2024-08-01T11:03:19Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "50fe2709fa05b65c520820d33be57397805ba411",
          "message": "Copy tests cleanup of env vars",
          "committedDate": "2024-08-01T11:20:55Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0f4837985bab667edef8f6ddd88be4e34fe75fc6",
          "message": "Update the reset of visual studio version",
          "committedDate": "2024-08-01T12:36:37Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0f83e3aae41c05f1baefb03afa76ebfee61e072d",
          "message": "Update the tests: reset the env variable, double to long fix",
          "committedDate": "2024-08-01T13:50:08Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d3fd57a41e10c542ef008082d7143a277921544d",
          "message": "Remove sourceBuild",
          "committedDate": "2024-08-01T14:01:49Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "496a553c83c4b7074fb6120304cd0dbc39cf15e9",
          "message": "Update the compatability files and the source build ignore list",
          "committedDate": "2024-08-01T16:16:39Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "89ccd5f9c70bcbdbdebcfdaa60918949c96f1fa6",
          "message": "revert unrelated upgrades",
          "committedDate": "2024-08-01T16:46:42Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3c3f62d2e7673e2e818fc10a3f3738a7b7649715",
          "message": "freeze versions of xunit used",
          "committedDate": "2024-08-02T07:46:01Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a9288f865d1373e933c3a42a39e621b475be1f5",
          "message": "Revert readExactly for .net 9",
          "committedDate": "2024-08-02T08:15:31Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "45661907c9e890e74a1446c291369ca051f9119e",
          "message": "Address PR comments. Adjust the severities",
          "committedDate": "2024-08-02T09:11:05Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0b5b19d16afb1831479ca5d9744dffc02da3f4c9",
          "message": "Merge branch 'main' into dev/f-alizada/retarget-to-dotnet9",
          "committedDate": "2024-08-02T13:53:12Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "104755925+f-alizada@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "60f5dc55348a759b9e57b3e78c12bada146089ea",
          "message": "Address PR comments",
          "committedDate": "2024-08-05T10:14:26Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "11ab426d2f8adcbceab3187d3c857e206087fd65",
          "message": "Merge branch 'dev/f-alizada/retarget-to-dotnet9' of https://github.com/f-alizada/msbuild into dev/f-alizada/retarget-to-dotnet9",
          "committedDate": "2024-08-05T10:14:35Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5cb3cb3cc9643b1599b9717ec8a7ce0c974e16d2",
          "message": "Address PR comments revert unrelated changes",
          "committedDate": "2024-08-05T11:39:05Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "49256164ed3d7e940e11bd09e3f8701418428ad4",
          "message": "Update the Intermediate arcade version",
          "committedDate": "2024-08-05T11:53:46Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> Excluding the changes in eng folder\r\n\r\nYou can't skip `eng/`, only `eng/common`! We have scary stuff in there :)",
        "createdAt": "2024-08-02T19:28:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Closing this PR with respect to the new PR with more clear history and less changes: https://github.com/dotnet/msbuild/pull/10484\r\nA lot of learnings from here :) Thank you everyone for review ",
        "createdAt": "2024-08-05T13:34:30Z",
        "author": {
          "login": "f-alizada"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Ah, I forgot we haven't merged #10282! This shouldn't be necessary after that.",
              "createdAt": "2024-07-26T14:20:37Z",
              "path": "scripts/Deploy-MSBuild.ps1",
              "diffHunk": "@@ -76,7 +76,7 @@ else {\n if ($runtime -eq \"Desktop\") {\n     $targetFramework = \"net472\"\n } else {\n-    $targetFramework = \"net8.0\"\n+    $targetFramework = \"net9.0\"",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "the Deploy-MSBuild doesn't need to be updated? \r\nI have update that due to the fact that instructions of this script will be outdated if upgraded to the net9. \r\ncc: @YuliiaKovalova ",
              "createdAt": "2024-08-02T07:57:34Z",
              "path": "scripts/Deploy-MSBuild.ps1",
              "diffHunk": "@@ -76,7 +76,7 @@ else {\n if ($runtime -eq \"Desktop\") {\n     $targetFramework = \"net472\"\n } else {\n-    $targetFramework = \"net8.0\"\n+    $targetFramework = \"net9.0\"",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "Closing, please feel free to reopen the comment if it is not the case",
              "createdAt": "2024-08-02T13:53:01Z",
              "path": "scripts/Deploy-MSBuild.ps1",
              "diffHunk": "@@ -76,7 +76,7 @@ else {\n if ($runtime -eq \"Desktop\") {\n     $targetFramework = \"net472\"\n } else {\n-    $targetFramework = \"net8.0\"\n+    $targetFramework = \"net9.0\"",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\u2764\ufe0f ",
              "createdAt": "2024-07-27T20:53:38Z",
              "path": ".editorconfig",
              "diffHunk": "@@ -413,5 +413,13 @@ dotnet_diagnostic.IDE0300.severity = suggestion\n dotnet_diagnostic.IDE0301.severity = suggestion\n dotnet_diagnostic.IDE0305.severity = suggestion\n \n+\n+# Remove unnecessary equality operator  IDE0100 (https://learn.microsoft.com/en-gb/dotnet/fundamentals/code-analysis/style-rules/ide0100)\n+# Making it a suggestion to have a flexibility for future\n+dotnet_diagnostic.IDE0100.severity = suggestion\n+\n+# File header should match the template, making it error since couple of files met in the code base without any header\n+dotnet_diagnostic.IDE0073.severity = error",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why did you choose to warning-disable these instead of doing it in editorconfig?",
              "createdAt": "2024-07-31T21:50:19Z",
              "path": "src/Tasks/ManifestUtil/ManifestReader.cs",
              "diffHunk": "@@ -138,7 +142,10 @@ public static Manifest ReadManifest(string manifestType, string path, bool prese\n             using (Stream s = File.Open(path, FileMode.Open, FileAccess.Read, FileShare.Read))\n             {\n                 byte[] buffer = new byte[2];\n+#pragma warning disable CA2022 // Avoid inexact read with 'Stream.Read' The check of bytes happens later in the code. In case of invalid document the exception is expected later",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "The only reason was: Turning off the warning globally will affect future contributions and will not report possible error/warnings",
              "createdAt": "2024-08-01T07:06:36Z",
              "path": "src/Tasks/ManifestUtil/ManifestReader.cs",
              "diffHunk": "@@ -138,7 +142,10 @@ public static Manifest ReadManifest(string manifestType, string path, bool prese\n             using (Stream s = File.Open(path, FileMode.Open, FileAccess.Read, FileShare.Read))\n             {\n                 byte[] buffer = new byte[2];\n+#pragma warning disable CA2022 // Avoid inexact read with 'Stream.Read' The check of bytes happens later in the code. In case of invalid document the exception is expected later",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should we switch to `ReadExactly` and polyfill it on net472?",
              "createdAt": "2024-07-31T21:52:46Z",
              "path": "src/Tasks/ManifestUtil/PathUtil.cs",
              "diffHunk": "@@ -162,7 +162,9 @@ public static bool IsPEFile(string path)\n             byte[] buffer = new byte[2];\n             using (Stream s = File.Open(path, FileMode.Open, FileAccess.Read, FileShare.Read))\n             {\n+#pragma warning disable CA2022 // Avoid inexact read with 'Stream.Read'\n                 s.Read(buffer, 0, 2);\n+#pragma warning restore CA2022 // Avoid inexact read with 'Stream.Read'",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "For the scnarios where only 2 bytes are read, I decided to leave the s.Read and rely on the xml parser and proper exception handling. \r\nThe plan is to use `ReadExactly` for cases when reading the files from 0 to filLength. and disable warning for net472.",
              "createdAt": "2024-08-01T07:10:20Z",
              "path": "src/Tasks/ManifestUtil/PathUtil.cs",
              "diffHunk": "@@ -162,7 +162,9 @@ public static bool IsPEFile(string path)\n             byte[] buffer = new byte[2];\n             using (Stream s = File.Open(path, FileMode.Open, FileAccess.Read, FileShare.Read))\n             {\n+#pragma warning disable CA2022 // Avoid inexact read with 'Stream.Read'\n                 s.Read(buffer, 0, 2);\n+#pragma warning restore CA2022 // Avoid inexact read with 'Stream.Read'",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nThe `netstandard2.0` target of this build is configured only to output reference assemblies; at runtime MSBuild will be `net9.0` or `net472`. Please use the `net9.0`-targeted assemblies for .NET 9+ scenarios.\r\n```",
              "createdAt": "2024-07-31T21:53:15Z",
              "path": "src/Utilities/README.md",
              "diffHunk": "@@ -7,6 +7,6 @@ This package contains `Microsoft.Build.Utilities.Core.dll`, which defines helper\n * [`Logger`](https://docs.microsoft.com/dotnet/api/microsoft.build.utilities.logger), a base class for custom logging functionality.\n \n ### netstandard2.0 target\n-The `netstandard2.0` target of this build is configured only to output reference assemblies; at runtime MSBuild will be `net8.0` or `net472`. Please use the `net8.0`-targeted assemblies for .NET 8+ scenarios.\n+The `netstandard2.0` target of this build is configured only to output reference assemblies; at runtime MSBuild will be `net9.0` or `net472`. Please use the `net9.0`-targeted assemblies for .NET 8+ scenarios.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I am glad to have this explanation and link now but I'm not sure it deserves a comment.\r\n\r\n```suggestion\r\n            if (input == ReadOnlySpan<char>.Empty)\r\n```",
              "createdAt": "2024-07-31T21:54:03Z",
              "path": "src/Shared/FileMatcher.cs",
              "diffHunk": "@@ -1673,7 +1673,7 @@ internal static bool IsMatch(string input, string pattern)\n         /// <param name=\"pattern\">Pattern against which string is matched.</param>\n         internal static bool IsMatch(ReadOnlySpan<char> input, string pattern)\n         {\n-            if (input == null)\n+            if (input == ReadOnlySpan<char>.Empty) // Comparing ReadOnlySpan with null in this scenario transforms the null to ReadOnlySpan Empty (https://github.com/dotnet/runtime/issues/84265)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What's the right exception type to throw? Should this use `ThrowInternalError` instead?",
              "createdAt": "2024-07-31T21:55:26Z",
              "path": "src/Shared/FileMatcher.cs",
              "diffHunk": "@@ -1673,7 +1673,7 @@ internal static bool IsMatch(string input, string pattern)\n         /// <param name=\"pattern\">Pattern against which string is matched.</param>\n         internal static bool IsMatch(ReadOnlySpan<char> input, string pattern)\n         {\n-            if (input == null)\n+            if (input == ReadOnlySpan<char>.Empty) // Comparing ReadOnlySpan with null in this scenario transforms the null to ReadOnlySpan Empty (https://github.com/dotnet/runtime/issues/84265)\n             {\n                 throw new ArgumentNullException(nameof(input));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I reverted the change back to null detection, to resolve the failing tests first.  I'll investigate if we even need this check ",
              "createdAt": "2024-08-01T14:18:44Z",
              "path": "src/Shared/FileMatcher.cs",
              "diffHunk": "@@ -1673,7 +1673,7 @@ internal static bool IsMatch(string input, string pattern)\n         /// <param name=\"pattern\">Pattern against which string is matched.</param>\n         internal static bool IsMatch(ReadOnlySpan<char> input, string pattern)\n         {\n-            if (input == null)\n+            if (input == ReadOnlySpan<char>.Empty) // Comparing ReadOnlySpan with null in this scenario transforms the null to ReadOnlySpan Empty (https://github.com/dotnet/runtime/issues/84265)\n             {\n                 throw new ArgumentNullException(nameof(input));",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "Internal error added. ",
              "createdAt": "2024-08-02T09:41:41Z",
              "path": "src/Shared/FileMatcher.cs",
              "diffHunk": "@@ -1673,7 +1673,7 @@ internal static bool IsMatch(string input, string pattern)\n         /// <param name=\"pattern\">Pattern against which string is matched.</param>\n         internal static bool IsMatch(ReadOnlySpan<char> input, string pattern)\n         {\n-            if (input == null)\n+            if (input == ReadOnlySpan<char>.Empty) // Comparing ReadOnlySpan with null in this scenario transforms the null to ReadOnlySpan Empty (https://github.com/dotnet/runtime/issues/84265)\n             {\n                 throw new ArgumentNullException(nameof(input));",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "we disable one xunit analyzer in `eng/Common.globalconfig` already; move these there?",
              "createdAt": "2024-07-31T21:56:33Z",
              "path": ".editorconfig",
              "diffHunk": "@@ -413,5 +413,21 @@ dotnet_diagnostic.IDE0300.severity = suggestion\n dotnet_diagnostic.IDE0301.severity = suggestion\n dotnet_diagnostic.IDE0305.severity = suggestion\n \n+\n+# Remove unnecessary equality operator  IDE0100 (https://learn.microsoft.com/en-gb/dotnet/fundamentals/code-analysis/style-rules/ide0100)\n+# Making it a suggestion to have a flexibility for future\n+dotnet_diagnostic.IDE0100.severity = suggestion\n+\n+# File header should match the template, making it error since couple of files met in the code base without any header\n+dotnet_diagnostic.IDE0073.severity = error\n+\n # Temporarily disable SA1010 \"Opening square brackets should not be preceded by a space\" until https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/3687 is fixed\n dotnet_diagnostic.SA1010.severity = none\n+\n+\n+#TODO:fix all xUnit new warning \n+dotnet_diagnostic.xUnit1031.severity = suggestion\n+dotnet_diagnostic.xUnit1048.severity = suggestion\n+dotnet_diagnostic.xUnit2020.severity = suggestion\n+dotnet_diagnostic.xUnit1012.severity = suggestion\n+dotnet_diagnostic.xUnit2029.severity = suggestion",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "This is removed completely, since the version of xunit was set explicitly. \r\nAnd will be upgraded once this PR is merged",
              "createdAt": "2024-08-02T08:16:19Z",
              "path": ".editorconfig",
              "diffHunk": "@@ -413,5 +413,21 @@ dotnet_diagnostic.IDE0300.severity = suggestion\n dotnet_diagnostic.IDE0301.severity = suggestion\n dotnet_diagnostic.IDE0305.severity = suggestion\n \n+\n+# Remove unnecessary equality operator  IDE0100 (https://learn.microsoft.com/en-gb/dotnet/fundamentals/code-analysis/style-rules/ide0100)\n+# Making it a suggestion to have a flexibility for future\n+dotnet_diagnostic.IDE0100.severity = suggestion\n+\n+# File header should match the template, making it error since couple of files met in the code base without any header\n+dotnet_diagnostic.IDE0073.severity = error\n+\n # Temporarily disable SA1010 \"Opening square brackets should not be preceded by a space\" until https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/3687 is fixed\n dotnet_diagnostic.SA1010.severity = none\n+\n+\n+#TODO:fix all xUnit new warning \n+dotnet_diagnostic.xUnit1031.severity = suggestion\n+dotnet_diagnostic.xUnit1048.severity = suggestion\n+dotnet_diagnostic.xUnit2020.severity = suggestion\n+dotnet_diagnostic.xUnit1012.severity = suggestion\n+dotnet_diagnostic.xUnit2029.severity = suggestion",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Could we migrate to the new xunit in a separate PR so everything's not quite so jumbled together?",
              "createdAt": "2024-07-31T21:59:38Z",
              "path": "src/Build.UnitTests/BackEnd/BuildManager_Tests.cs",
              "diffHunk": "@@ -1516,7 +1516,7 @@ public void CancelledBuildWithUnexecutedSubmission()\n         /// <summary>\n         /// A canceled build\n         /// </summary>\n-        [Fact(Timeout = 20_000)]\n+        [Fact]",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why was this removed?",
              "createdAt": "2024-08-02T16:20:38Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -98,7 +91,6 @@\n     <Dependency Name=\"Microsoft.Net.Compilers.Toolset\" Version=\"4.11.0-3.24378.3\">\n       <Uri>https://github.com/dotnet/roslyn</Uri>\n       <Sha>5e3a11e2e7f952da93f9d35bd63a2fa181c0608b</Sha>\n-      <SourceBuild RepoName=\"roslyn\" ManagedOnly=\"true\" />",
              "author": {
                "login": "MichaelSimons"
              }
            },
            {
              "body": "After new arkade sdk was consumed, the source build was failing on this one, with errors: https://dev.azure.com/dnceng-public/public/_build/results?buildId=762782&view=logs&j=c316b76e-5b95-5e79-2740-62e92f13eebd&t=e33df8ad-5872-5105-0672-039423de0ed3 Only place <SourceBuild> elements on source-build intermediate nupkgs.\r\n",
              "createdAt": "2024-08-02T16:36:13Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -98,7 +91,6 @@\n     <Dependency Name=\"Microsoft.Net.Compilers.Toolset\" Version=\"4.11.0-3.24378.3\">\n       <Uri>https://github.com/dotnet/roslyn</Uri>\n       <Sha>5e3a11e2e7f952da93f9d35bd63a2fa181c0608b</Sha>\n-      <SourceBuild RepoName=\"roslyn\" ManagedOnly=\"true\" />",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "The correct fix is to add the corresponding soucebuild intermediate dependency (ideally right after this dependency)\r\n\r\n```\r\n    <Dependency Name=\"Microsoft.SourceBuild.Intermediate.roslyn\" Version=\"4.11.0-3.24378.3\">\r\n      <Uri>https://github.com/dotnet/roslyn</Uri>\r\n      <Sha>5e3a11e2e7f952da93f9d35bd63a2fa181c0608b</Sha>\r\n      <SourceBuild RepoName=\"roslyn\" ManagedOnly=\"true\" />\r\n    </Dependency>\r\n```\r\n\r\nThen delete the change to https://github.com/dotnet/msbuild/pull/10451/files#diff-f88ce4026366ce74fb1a981785c542757617abf4393a33ca34465a5e9a0dd343\r\n\r\n\r\n",
              "createdAt": "2024-08-02T16:51:06Z",
              "path": "eng/Version.Details.xml",
              "diffHunk": "@@ -98,7 +91,6 @@\n     <Dependency Name=\"Microsoft.Net.Compilers.Toolset\" Version=\"4.11.0-3.24378.3\">\n       <Uri>https://github.com/dotnet/roslyn</Uri>\n       <Sha>5e3a11e2e7f952da93f9d35bd63a2fa181c0608b</Sha>\n-      <SourceBuild RepoName=\"roslyn\" ManagedOnly=\"true\" />",
              "author": {
                "login": "MichaelSimons"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Have we confirmed with dnceng that this is what they want for our LTS branch?",
              "createdAt": "2024-08-02T16:34:23Z",
              "path": "global.json",
              "diffHunk": "@@ -3,13 +3,13 @@\n     \"allowPrerelease\": true\n   },\n   \"tools\": {\n-    \"dotnet\": \"8.0.201\",\n+    \"dotnet\": \"9.0.100-preview.6.24328.19\",\n     \"vs\": {\n       \"version\": \"17.8.0\"\n     },\n     \"xcopy-msbuild\": \"17.8.5\"\n   },\n   \"msbuild-sdks\": {\n-    \"Microsoft.DotNet.Arcade.Sdk\": \"8.0.0-beta.24376.1\"\n+    \"Microsoft.DotNet.Arcade.Sdk\": \"9.0.0-beta.24379.1\"",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Filed the issue: https://github.com/dotnet/dnceng/issues/3713",
              "createdAt": "2024-08-02T17:11:31Z",
              "path": "global.json",
              "diffHunk": "@@ -3,13 +3,13 @@\n     \"allowPrerelease\": true\n   },\n   \"tools\": {\n-    \"dotnet\": \"8.0.201\",\n+    \"dotnet\": \"9.0.100-preview.6.24328.19\",\n     \"vs\": {\n       \"version\": \"17.8.0\"\n     },\n     \"xcopy-msbuild\": \"17.8.5\"\n   },\n   \"msbuild-sdks\": {\n-    \"Microsoft.DotNet.Arcade.Sdk\": \"8.0.0-beta.24376.1\"\n+    \"Microsoft.DotNet.Arcade.Sdk\": \"9.0.0-beta.24379.1\"",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't think I understand this test change. Can you elaborate on the reasoning?",
              "createdAt": "2024-08-02T16:39:44Z",
              "path": "src/Build.UnitTests/Evaluation/ExpanderFunction_Tests.cs",
              "diffHunk": "@@ -162,23 +162,26 @@ public void TryConvertToLongGivenDoubleWithLongMaxValueShouldNotThrow()\n             _ = Should.NotThrow(() => Expander<IProperty, IItem>.Function<IProperty>.TryConvertToLong((double)long.MaxValue, out _));\n         }\n \n-        [Fact]\n-        public void TryConvertToLongGivenDoubleWithLongMaxValue()\n+        [WindowsFullFrameworkOnlyFact]\n+        public void TryConvertToLongGivenDoubleWithLongMaxValueFramework()",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "The test previously introduced here https://github.com/dotnet/msbuild/commit/0f6ed65aea401b96a639c8b84db7d0688a48591d\r\nTesting different behaviour on different archtitecture. \r\nHowever after moving to .net 9 the precision is not lost hence we are receveing the expected outcome of what was written: \r\n\r\n```\r\nresult.ShouldBeTrue();\r\nactual.ShouldBe(longMaxValue);\r\n```\r\nThis is true only for .NET 9 target, and the Framework left as it is. ",
              "createdAt": "2024-08-05T08:56:13Z",
              "path": "src/Build.UnitTests/Evaluation/ExpanderFunction_Tests.cs",
              "diffHunk": "@@ -162,23 +162,26 @@ public void TryConvertToLongGivenDoubleWithLongMaxValueShouldNotThrow()\n             _ = Should.NotThrow(() => Expander<IProperty, IItem>.Function<IProperty>.TryConvertToLong((double)long.MaxValue, out _));\n         }\n \n-        [Fact]\n-        public void TryConvertToLongGivenDoubleWithLongMaxValue()\n+        [WindowsFullFrameworkOnlyFact]\n+        public void TryConvertToLongGivenDoubleWithLongMaxValueFramework()",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I'd still prefer a polyfill here so the source can just unconditionally say `ReadExactly`",
              "createdAt": "2024-08-02T16:41:23Z",
              "path": "src/Tasks/ResolveKeySource.cs",
              "diffHunk": "@@ -127,7 +127,15 @@ private bool ResolveAssemblyKey()\n                             fs = File.OpenRead(KeyFile);\n                             int fileLength = (int)fs.Length;\n                             var keyBytes = new byte[fileLength];\n+#if NET7_0_OR_GREATER\n+                            // fail fast in case the file is not read till the end\n+                            fs.ReadExactly(keyBytes, 0, fileLength);\n+#else\n+#pragma warning disable CA2022 // Avoid inexact read with 'Stream.Read'\n+                            // TODO: Read the count of read bytes and check if it matches the expected length, if not raise an exception\n                             fs.Read(keyBytes, 0, fileLength);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Let's track that than. It feels that it'd be outside of scope of retargetting change.",
              "createdAt": "2024-08-02T17:04:35Z",
              "path": "src/Tasks/ResolveKeySource.cs",
              "diffHunk": "@@ -127,7 +127,15 @@ private bool ResolveAssemblyKey()\n                             fs = File.OpenRead(KeyFile);\n                             int fileLength = (int)fs.Length;\n                             var keyBytes = new byte[fileLength];\n+#if NET7_0_OR_GREATER\n+                            // fail fast in case the file is not read till the end\n+                            fs.ReadExactly(keyBytes, 0, fileLength);\n+#else\n+#pragma warning disable CA2022 // Avoid inexact read with 'Stream.Read'\n+                            // TODO: Read the count of read bytes and check if it matches the expected length, if not raise an exception\n                             fs.Read(keyBytes, 0, fileLength);",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Please preserve the comments where the suppressions aren't removed.",
              "createdAt": "2024-08-02T16:42:04Z",
              "path": "src/Tasks/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -1,10 +1,6 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <!-- https://learn.microsoft.com/en-us/dotnet/fundamentals/package-validation/diagnostic-ids -->\n <Suppressions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n-<!-- For ease of logging the \"not supported on Core\" message, these tasks are a\n-         TaskRequiresFramework on netstandard/netcore. Since the type is sealed there,\n-         that shouldn't cause any implementation problems since no one can derive\n-         from it and try to call TaskExtension.Log. -->",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Please _add_ a comment for these new suppressions.",
              "createdAt": "2024-08-02T16:42:25Z",
              "path": "src/Tasks/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -71,12 +67,55 @@\n     <Left>ref/netstandard2.0/Microsoft.Build.Tasks.Core.dll</Left>\n     <Right>ref/net472/Microsoft.Build.Tasks.Core.dll</Right>\n   </Suppression>\n-\n-  <!-- PKV004 for netstandard2.0-supporting TFs that we do not have runtime assemblies for.\n-       This is intentional, because you can only use MSBuild in the context of a .NET SDK\n-       (on net7.0, as of MSBuild 17.4) or in the context of Visual Studio (net472), but we\n-       have previously shipped netstandard2.0 packages, and if you want to support both\n-       runtime contexts it still makes sense to target that. -->\n+  <Suppression>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Can these go to `Versions.props`? that's where I'd normally look.",
              "createdAt": "2024-08-02T16:44:42Z",
              "path": "Directory.Build.props",
              "diffHunk": "@@ -87,4 +87,13 @@\n     <EnableNETAnalyzers>true</EnableNETAnalyzers>\n   </PropertyGroup>\n \n+  <!--  Freeze the version for the current upgrade of the sdk. \n+        TODO:Delete the lines below once the Retargeting merged. \n+  -->  \n+  <PropertyGroup>\n+      <XUnitVersion>2.4.2</XUnitVersion>\n+      <XUnitAnalyzersVersion>1.1.0</XUnitAnalyzersVersion>\n+      <XUnitRunnerConsoleVersion>$(XUnitVersion)</XUnitRunnerConsoleVersion>\n+      <XUnitRunnerVisualStudioVersion>2.4.3</XUnitRunnerVisualStudioVersion>\n+  </PropertyGroup>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Can nullcheck operator be used here?\r\n\r\n```suggestion\r\n            _env.SetEnvironmentVariable(\"MSBUILD_SDKREFERENCE_PROPERTY_EXPANSION_MODE\", data.Mode.?ToString());\r\n            \r\n```",
              "createdAt": "2024-08-02T16:58:06Z",
              "path": "src/Build.UnitTests/Evaluation/ProjectSdkImplicitImport_Tests.cs",
              "diffHunk": "@@ -631,7 +631,16 @@ public override string ToString()\n         internal void SdkPropertiesAreExpanded(SdkPropertiesAreExpandedCase data)\n         {\n             _env.SetEnvironmentVariable(\"MSBuildSDKsPath\", _testSdkRoot);\n-            _env.SetEnvironmentVariable(\"MSBUILD_SDKREFERENCE_PROPERTY_EXPANSION_MODE\", data.Mode.ToString());\n+\n+            if (data.Mode.HasValue)\n+            {\n+                _env.SetEnvironmentVariable(\"MSBUILD_SDKREFERENCE_PROPERTY_EXPANSION_MODE\", data.Mode.ToString());\n+            }\n+            else\n+            {\n+                _env.SetEnvironmentVariable(\"MSBUILD_SDKREFERENCE_PROPERTY_EXPANSION_MODE\", null);\n+            }\n+            ",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This might deserve a comment",
              "createdAt": "2024-08-02T16:59:24Z",
              "path": "src/Build/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -128,17 +72,7 @@\n     <IsBaselineSuppression>true</IsBaselineSuppression>\n   </Suppression>\n   <Suppression>\n-    <DiagnosticId>CP0011</DiagnosticId>\n-    <Target>F:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity.Error</Target>\n-    <Left>ref/net8.0/Microsoft.Build.dll</Left>\n-    <Right>ref/net8.0/Microsoft.Build.dll</Right>\n-    <IsBaselineSuppression>true</IsBaselineSuppression>\n-  </Suppression>\n-  <Suppression>\n-    <DiagnosticId>CP0011</DiagnosticId>\n-    <Target>F:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity.Warning</Target>\n-    <Left>ref/net8.0/Microsoft.Build.dll</Left>\n-    <Right>ref/net8.0/Microsoft.Build.dll</Right>\n-    <IsBaselineSuppression>true</IsBaselineSuppression>\n+    <DiagnosticId>PKV006</DiagnosticId>",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this right? How can net8.0 it occur?",
              "createdAt": "2024-08-02T17:00:12Z",
              "path": "src/Build/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -128,17 +72,7 @@\n     <IsBaselineSuppression>true</IsBaselineSuppression>\n   </Suppression>\n   <Suppression>\n-    <DiagnosticId>CP0011</DiagnosticId>\n-    <Target>F:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity.Error</Target>\n-    <Left>ref/net8.0/Microsoft.Build.dll</Left>\n-    <Right>ref/net8.0/Microsoft.Build.dll</Right>\n-    <IsBaselineSuppression>true</IsBaselineSuppression>\n-  </Suppression>\n-  <Suppression>\n-    <DiagnosticId>CP0011</DiagnosticId>\n-    <Target>F:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity.Warning</Target>\n-    <Left>ref/net8.0/Microsoft.Build.dll</Left>\n-    <Right>ref/net8.0/Microsoft.Build.dll</Right>\n-    <IsBaselineSuppression>true</IsBaselineSuppression>\n+    <DiagnosticId>PKV006</DiagnosticId>\n+    <Target>net8.0</Target>",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "The Diagnostic id is PKV006. \r\n> The target framework is dropped in the latest version.\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/fundamentals/apicompat/diagnostic-ids\r\n",
              "createdAt": "2024-08-02T17:19:12Z",
              "path": "src/Build/CompatibilitySuppressions.xml",
              "diffHunk": "@@ -128,17 +72,7 @@\n     <IsBaselineSuppression>true</IsBaselineSuppression>\n   </Suppression>\n   <Suppression>\n-    <DiagnosticId>CP0011</DiagnosticId>\n-    <Target>F:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity.Error</Target>\n-    <Left>ref/net8.0/Microsoft.Build.dll</Left>\n-    <Right>ref/net8.0/Microsoft.Build.dll</Right>\n-    <IsBaselineSuppression>true</IsBaselineSuppression>\n-  </Suppression>\n-  <Suppression>\n-    <DiagnosticId>CP0011</DiagnosticId>\n-    <Target>F:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity.Warning</Target>\n-    <Left>ref/net8.0/Microsoft.Build.dll</Left>\n-    <Right>ref/net8.0/Microsoft.Build.dll</Right>\n-    <IsBaselineSuppression>true</IsBaselineSuppression>\n+    <DiagnosticId>PKV006</DiagnosticId>\n+    <Target>net8.0</Target>",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      }
    ]
  }
}