{
  "number": 7018,
  "title": "Switch to PublicApiAnalyzers",
  "body": "Abandon GenAPI for the new hotness in public API change tracking, which\r\n\r\n1. Is a Roslyn analyzer.\r\n2. Works cross-platform.\r\n3. Has clear messages.\r\n4. Actually tracks the API, instead of making us do it manually on review.\r\n\r\nBased off the `vs17.0` branch so I didn't accidentally canonize new API.",
  "state": "MERGED",
  "createdAt": "2021-11-05T18:40:03Z",
  "updatedAt": "2021-11-22T17:08:37Z",
  "closedAt": "2021-11-22T17:08:37Z",
  "mergedAt": "2021-11-22T17:08:37Z",
  "additions": 11100,
  "deletions": 12755,
  "changedFiles": 50,
  "headRefName": "publicapianalyzers",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": {
    "title": "VS 17.1"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Our Own Build",
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "cec7356e349487f55b6e5473e6d848b99ca0559f",
          "message": "Adopt Microsoft.CodeAnalysis.PublicApiAnalyzers\n\nThis is the modern replacement for GenAPI that Roslyn itself has been\nusing for a while, and it makes clearer errors and works cross-platform.",
          "committedDate": "2021-11-05T18:29:03Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c63588b84edcd25c7127748687b051ee2fc9f82b",
          "message": "GenerateReferenceAssemblySource for StringTools\n\nThis is also public, shipping API.",
          "committedDate": "2021-11-05T18:29:03Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "260122eedc818f87785a4d6c4c76f86cecff4187",
          "message": "Create PublicAPI files\n\nwith\n\n  <Target Name=\"CreatePublicAPI\" BeforeTargets=\"BeforeBuild\">\n    <MakeDir Directories=\"@(AdditionalFiles->'%(RootDir)%(Directory)')\" />\n    <Touch Files=\"@(AdditionalFiles)\" AlwaysCreate=\"true\" />\n  </Target>",
          "committedDate": "2021-11-05T18:29:18Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "32978be87a79b89fc82fb61ddbcb1bbb16206ca7",
          "message": "Fix all RS0016 in solution via VS",
          "committedDate": "2021-11-05T18:29:18Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "07387d23338057af823f7c2e561f6303600af38b",
          "message": "Promote current API surface to Shipped\n\nGet-ChildItem -Recurse PublicAPI.Shipped.txt | % {Remove-Item $_}\nGet-ChildItem -Recurse PublicAPI.Unshipped.txt | % {Rename-Item $_ PublicAPI.Shipped.txt -Force ; New-Item $_ -ItemType file}",
          "committedDate": "2021-11-05T18:29:18Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0f3070e52d026f5d5225aa48bac2d3af7e8f532f",
          "message": "Turn on nullability for StringTools API",
          "committedDate": "2021-11-05T18:29:19Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "99f6c4dd9301520a3e187d761e23bc65c4bd1144",
          "message": "Disable RS0037 'annotate nullability in API'\n\nThe vast majority of our API is not nullable aware so disable this.",
          "committedDate": "2021-11-05T18:29:19Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4cf2513222b1d2d90ca7f99bb0e94f9354ef8d3e",
          "message": "Annotate GetOrCreateEntry's cacheHit param",
          "committedDate": "2021-11-05T18:29:19Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1c0b20d75b6edabe7991ca2be99aeacc3a204d76",
          "message": "Genericize 'see' references in doc text\n\nThe generic parameter was correct but this avoids this C# error:\n\nerror CS1658: Type parameter declaration must be an identifier not a type. See also error CS0081.",
          "committedDate": "2021-11-05T18:29:19Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d6aeafc5114ff0833f46ef7e8c8a6af723b1ebed",
          "message": "Remove GenAPI\n\nThe new PublicAPI.Shipped.txt stuff should do the trick.",
          "committedDate": "2021-11-05T18:29:19Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2f47dc410d2acb98dc68182bdaee85461504c8e7",
          "message": "Merge remote-tracking branch 'upstream/main' into publicapianalyzers",
          "committedDate": "2021-11-05T20:29:13Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c42fa307ca5075ebdbd334749be9556b62464200",
          "message": "fixup! Remove GenAPI",
          "committedDate": "2021-11-05T21:23:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "030958cb65e584e174c53aa11237d124160295cc",
          "message": "Remove WaitForDebugger from public API\n\nThis is used only in Debug and the difference is only the one thing\nso I don't think it's worth having separate Debug/Release APIs.",
          "committedDate": "2021-11-05T21:33:43Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "89cd7156398c8fcbd59795c28c160e746eda4d28",
          "message": "Add \"release\" doc\n\nPrimarily to give a place to mention what we now need to do for\nPublicApiAnalyzers.",
          "committedDate": "2021-11-10T18:43:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "90ae0e4d88cdff845c957e5e94d235c29f594fd5",
          "message": "Move public API text files to src\n\nThis allows us to delete the `ref` folder entirely.\n\nThis was an intermediate state of D.B.targets:\n\n```\n  <PropertyGroup Condition=\"'$(GenerateReferenceAssemblySource)' == 'true'\">\n    <GenAPIAssemblyName>$(AssemblyName)</GenAPIAssemblyName>\n    <GenAPIAssemblyName Condition=\"'$(GenAPIAssemblyName)' == ''\">$(MSBuildProjectName)</GenAPIAssemblyName>\n    <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'\">net</GenAPIShortFrameworkIdentifier>\n    <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'\">netstandard</GenAPIShortFrameworkIdentifier>\n    <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp'\">netstandard</GenAPIShortFrameworkIdentifier>\n    <PublicApiTfm Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'\">net</PublicApiTfm>\n    <PublicApiTfm Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework' and $([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')) == '3.5'\">net35</PublicApiTfm>\n    <PublicApiTfm Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'\">netstandard</PublicApiTfm>\n    <PublicApiTfm Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp'\">netstandard</PublicApiTfm>\n\n    <GenAPIFolderPath>$(RepoRoot)ref\\$(GenAPIAssemblyName)\\$(GenAPIShortFrameworkIdentifier)\\</GenAPIFolderPath>\n  </PropertyGroup>\n\n  <ItemGroup Condition=\"'$(GenerateReferenceAssemblySource)' == 'true'\">\n    <!-- Ensure API stability for shipping packages -->\n    <PackageReference Include=\"Microsoft.CodeAnalysis.PublicApiAnalyzers\" PrivateAssets=\"all\" />\n\n    <AdditionalFiles Include=\"PublicAPI/$(PublicApiTfm)/PublicAPI.Shipped.txt\" />\n    <AdditionalFiles Include=\"PublicAPI/$(PublicApiTfm)/PublicAPI.Unshipped.txt\" />\n  </ItemGroup>\n\n  <Target Name=\"MovePublicAPI\" BeforeTargets=\"BeforeBuild\" Condition=\"'$(GenerateReferenceAssemblySource)' == 'true'\">\n    <MakeDir Directories=\"$(MSBuildProjectDirectory)/PublicAPI/$(PublicApiTfm)\" />\n    <Copy SourceFiles=\"$(GenAPIFolderPath)PublicAPI.Shipped.txt;$(GenAPIFolderPath)PublicAPI.Unshipped.txt\"\n      DestinationFolder=\"$(MSBuildProjectDirectory)/PublicAPI/$(PublicApiTfm)\" />\n  </Target>\n  ```",
          "committedDate": "2021-11-10T20:53:54Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d0a27a0723322de2a16a38dcee7343b92386ec82",
          "message": "Merge remote-tracking branch 'upstream/main' into publicapianalyzers\n\nConflicts:\n\tref/Microsoft.Build/net/Microsoft.Build.cs\n\tref/Microsoft.Build/netstandard/Microsoft.Build.cs",
          "committedDate": "2021-11-17T15:56:56Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@ladipro, I'd especially like your review on this because of the StringTools API-tracking stuff.",
        "createdAt": "2021-11-05T18:40:29Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The merge I just pushed will demonstrate what the errors look like in CI (that's totally why I'm doing it, nothing to do with laziness).",
        "createdAt": "2021-11-05T19:36:33Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Not too bad IMO:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1456841&view=results\r\n\r\n![image](https://user-images.githubusercontent.com/3347530/140570767-763e11de-06f4-427a-823e-35ccb8b3b964.png)\r\n\r\nNow I'll push a better merge.",
        "createdAt": "2021-11-05T19:55:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Now I'll push a better merge.\r\n\r\nLet my failure to do this be a WARNING and a CAVEAT to this: I used \"fix all in project\" and it only did the first TF of that project. You can instead use \"fix all in **solution**\" to get everything (per https://github.com/dotnet/roslyn-analyzers/issues/4954#issuecomment-669135752).",
        "createdAt": "2021-11-05T20:32:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> What is supposed to go into the `Unshipped` files?\r\n\r\nLol, yeah, we should write up some docs. The PublicApiAnalyzers process goes like this:\r\n\r\n1. The analyzer keeps the `PublicAPI.*.txt` files updated. \r\n2. New API surface goes into `PublicAPI.Unshipped.txt`.\r\n3. At release time, we must manually promote the `Unshipped` public API to `Shipped`\r\n\r\nThe idea is to distinguish between new public API surface in a given release (can still be changed if we figure out a better API shape, because we don't have to maintain compat with daily builds) and shipped public API surface (which we shouldn't change because someone might be using it).\r\n\r\nI'll write up a doc.",
        "createdAt": "2021-11-08T15:15:25Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I noticed GenAPITargetPath wasn't used before. Was it getting picked up somewhere else in the build, or was this an unused property?",
              "createdAt": "2021-11-05T21:04:36Z",
              "path": "src/Directory.Build.targets",
              "diffHunk": "@@ -74,23 +74,21 @@\n     <AdditionalFiles Include=\"$(MSBuildThisFileDirectory)BannedSymbols.txt\" />\n   </ItemGroup>\n \n-  <!-- GenAPI settings -->\n-  <PropertyGroup Condition=\"'$(MonoBuild)' == 'true'\">\n-    <!-- Disable reference assembly source when building for Mono, as some APIs are excluded when compiling for Mono -->\n-    <GenerateReferenceAssemblySource>false</GenerateReferenceAssemblySource>\n-  </PropertyGroup>\n-\n-  <PropertyGroup Condition=\"'$(GenerateReferenceAssemblySource)' == 'true' and $([MSBuild]::IsOSPlatform('windows'))\">\n+  <PropertyGroup Condition=\"'$(GenerateReferenceAssemblySource)' == 'true'\">\n     <GenAPIAssemblyName>$(AssemblyName)</GenAPIAssemblyName>\n     <GenAPIAssemblyName Condition=\"'$(GenAPIAssemblyName)' == ''\">$(MSBuildProjectName)</GenAPIAssemblyName>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'\">net</GenAPIShortFrameworkIdentifier>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'\">netstandard</GenAPIShortFrameworkIdentifier>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp'\">netstandard</GenAPIShortFrameworkIdentifier>\n-    <GenAPITargetPath>$(RepoRoot)ref\\$(GenAPIAssemblyName)\\$(GenAPIShortFrameworkIdentifier)\\$(GenAPIAssemblyName).cs</GenAPITargetPath>",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "It was used in the GenAPI package's targets somewhere.",
              "createdAt": "2021-11-05T21:06:51Z",
              "path": "src/Directory.Build.targets",
              "diffHunk": "@@ -74,23 +74,21 @@\n     <AdditionalFiles Include=\"$(MSBuildThisFileDirectory)BannedSymbols.txt\" />\n   </ItemGroup>\n \n-  <!-- GenAPI settings -->\n-  <PropertyGroup Condition=\"'$(MonoBuild)' == 'true'\">\n-    <!-- Disable reference assembly source when building for Mono, as some APIs are excluded when compiling for Mono -->\n-    <GenerateReferenceAssemblySource>false</GenerateReferenceAssemblySource>\n-  </PropertyGroup>\n-\n-  <PropertyGroup Condition=\"'$(GenerateReferenceAssemblySource)' == 'true' and $([MSBuild]::IsOSPlatform('windows'))\">\n+  <PropertyGroup Condition=\"'$(GenerateReferenceAssemblySource)' == 'true'\">\n     <GenAPIAssemblyName>$(AssemblyName)</GenAPIAssemblyName>\n     <GenAPIAssemblyName Condition=\"'$(GenAPIAssemblyName)' == ''\">$(MSBuildProjectName)</GenAPIAssemblyName>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'\">net</GenAPIShortFrameworkIdentifier>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'\">netstandard</GenAPIShortFrameworkIdentifier>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp'\">netstandard</GenAPIShortFrameworkIdentifier>\n-    <GenAPITargetPath>$(RepoRoot)ref\\$(GenAPIAssemblyName)\\$(GenAPIShortFrameworkIdentifier)\\$(GenAPIAssemblyName).cs</GenAPITargetPath>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Got it, and we're not using them anymore so should we get rid of some of these variables? Or proactively rename them to match the analyzer we're moving to.\r\n\r\nConsider this a nit though.",
              "createdAt": "2021-11-05T21:27:44Z",
              "path": "src/Directory.Build.targets",
              "diffHunk": "@@ -74,23 +74,21 @@\n     <AdditionalFiles Include=\"$(MSBuildThisFileDirectory)BannedSymbols.txt\" />\n   </ItemGroup>\n \n-  <!-- GenAPI settings -->\n-  <PropertyGroup Condition=\"'$(MonoBuild)' == 'true'\">\n-    <!-- Disable reference assembly source when building for Mono, as some APIs are excluded when compiling for Mono -->\n-    <GenerateReferenceAssemblySource>false</GenerateReferenceAssemblySource>\n-  </PropertyGroup>\n-\n-  <PropertyGroup Condition=\"'$(GenerateReferenceAssemblySource)' == 'true' and $([MSBuild]::IsOSPlatform('windows'))\">\n+  <PropertyGroup Condition=\"'$(GenerateReferenceAssemblySource)' == 'true'\">\n     <GenAPIAssemblyName>$(AssemblyName)</GenAPIAssemblyName>\n     <GenAPIAssemblyName Condition=\"'$(GenAPIAssemblyName)' == ''\">$(MSBuildProjectName)</GenAPIAssemblyName>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'\">net</GenAPIShortFrameworkIdentifier>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard'\">netstandard</GenAPIShortFrameworkIdentifier>\n     <GenAPIShortFrameworkIdentifier Condition=\"$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp'\">netstandard</GenAPIShortFrameworkIdentifier>\n-    <GenAPITargetPath>$(RepoRoot)ref\\$(GenAPIAssemblyName)\\$(GenAPIShortFrameworkIdentifier)\\$(GenAPIAssemblyName).cs</GenAPITargetPath>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      }
    ]
  }
}