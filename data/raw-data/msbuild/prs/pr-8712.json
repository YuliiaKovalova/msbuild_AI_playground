{
  "number": 8712,
  "title": "Deemphasize MSBUILDDEBUGENGINE in binlog doc\r",
  "body": "At least one person skimmed over the section we wanted to emphasize (`-bl`) and focused on `MSBUILDDEBUGENGINE`, sharing lower-fidelity logs that are harder to understand.\r\n\r\nRemove the \"Preferred way\" callout--it's preferred in that section but not in general. Add a section header for command-line builds. Add some samples there.",
  "state": "MERGED",
  "createdAt": "2023-04-27T18:00:39Z",
  "updatedAt": "2023-05-05T12:41:00Z",
  "closedAt": "2023-05-01T20:38:38Z",
  "mergedAt": "2023-05-01T20:38:38Z",
  "additions": 19,
  "deletions": 3,
  "changedFiles": 1,
  "headRefName": "binlog-deemphasize-env",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "175407968519b05234cefe78547ebd1c903cc666",
          "message": "Deemphasize MSBUILDDEBUGENGINE in binlog doc\r\n\r\nAt least one person skimmed over the section we wanted to emphasize (`-bl`) and focused on `MSBUILDDEBUGENGINE`, sharing lower-fidelity logs that are harder to understand.\r\n\r\nRemove the \"Preferred way\" callout--it's preferred in that section but not in general. Add a section header for command-line builds. Add some samples there.",
          "committedDate": "2023-04-27T18:00:22Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Do you want to add \"preferred way\" or \"preferred way for command-line builds\" to this header?",
              "createdAt": "2023-04-27T18:38:54Z",
              "path": "documentation/wiki/Providing-Binary-Logs.md",
              "diffHunk": "@@ -6,23 +6,37 @@ However, you should be aware what type of information is captured in the binary\n \n \u26a0 NOTE: some build environments make secrets available using environment variables. Before sharing a binary log, make sure it does not expose API tokens or other important secrets.\n \n+## Capturing Binary Logs for command-line builds",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "That seems a bit much to me, but I pushed a change to try to both explain why VS is different and also emphasize the command-line option. Look ok?",
              "createdAt": "2023-04-28T17:22:54Z",
              "path": "documentation/wiki/Providing-Binary-Logs.md",
              "diffHunk": "@@ -6,23 +6,37 @@ However, you should be aware what type of information is captured in the binary\n \n \u26a0 NOTE: some build environments make secrets available using environment variables. Before sharing a binary log, make sure it does not expose API tokens or other important secrets.\n \n+## Capturing Binary Logs for command-line builds",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I'm a bit concerned someone might read that and think binlogs from VS aren't trustworthy at all. If something only reproduces from VS, I can tell it must be doing something different from a command line build...but what? How is it different? When does it build that the command line doesn't or vice versa? I think I'd be ok if I had some assurance that building from within VS isn't wrong or if I didn't see that at all, but I think this version raises more questions than it answers, personally.",
              "createdAt": "2023-04-28T21:24:19Z",
              "path": "documentation/wiki/Providing-Binary-Logs.md",
              "diffHunk": "@@ -6,23 +6,37 @@ However, you should be aware what type of information is captured in the binary\n \n \u26a0 NOTE: some build environments make secrets available using environment variables. Before sharing a binary log, make sure it does not expose API tokens or other important secrets.\n \n+## Capturing Binary Logs for command-line builds",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "ok",
              "createdAt": "2023-04-28T21:29:17Z",
              "path": "documentation/wiki/Providing-Binary-Logs.md",
              "diffHunk": "@@ -6,23 +6,37 @@ However, you should be aware what type of information is captured in the binary\n \n \u26a0 NOTE: some build environments make secrets available using environment variables. Before sharing a binary log, make sure it does not expose API tokens or other important secrets.\n \n+## Capturing Binary Logs for command-line builds",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "@rainersigwald I see this has already been merged (and the changes look good!), but I wanted to provide feedback that using `>` in a sample block (both here and below) isn't ideal:\r\n\r\n- It's already in a `batch`/`powershell` block and formatted appropriately.\r\n- If someone copy/pastes it directly, then it doesn't work, because `>` is a redirection character.\r\n\r\n(No need to create a new PR for this, but please keep in mind for future edits)",
              "createdAt": "2023-05-05T12:40:59Z",
              "path": "documentation/wiki/Providing-Binary-Logs.md",
              "diffHunk": "@@ -6,23 +6,37 @@ However, you should be aware what type of information is captured in the binary\n \n \u26a0 NOTE: some build environments make secrets available using environment variables. Before sharing a binary log, make sure it does not expose API tokens or other important secrets.\n \n+## Capturing Binary Logs for command-line builds\n+\n You can create a binary log by passing the `-bl` parameter to MSBuild (`MSBuild.exe` or `dotnet build`). You can explore the contents of the generated .binlog file using [MSBuild Structured Log Viewer](http://msbuildlog.com/) or in your browser using [Live Structured Log Viewer](https://live.msbuildlog.com). Note: We don't capture any data from binary logs viewed on your browser.\n \n+Examples:\n+\n+```sh\n+dotnet build -bl\n+dotnet build -bl:SpecificStep.binlog\n+MSBuild.exe -bl:ServiceRelease.binlog -p:Configuration=Release\n+```\n+\n [More details about binary logs](Binary-Log.md)\n \n ## Capturing Binary Logs Through Visual Studio\n-### (Preferred way) Capturing logs for all MSBuild invocations\n+\n+### Capturing logs for all MSBuild invocations\n+\n Set `MSBUILDDEBUGENGINE` environment variable to `'1'` and (optionally) set `MSBUILDDEBUGPATH` to an existing destination folder to store the captured logs. Then start Visual Studio from the same shell to inherit the environment:\n \n `cmd:`\n-```\n+\n+```batch\n > SET MSBUILDDEBUGENGINE=1",
              "author": {
                "login": "machish"
              }
            }
          ]
        }
      }
    ]
  }
}