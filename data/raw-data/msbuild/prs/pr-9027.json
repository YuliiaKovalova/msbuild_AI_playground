{
  "number": 9027,
  "title": "Rename liveLogger to be terminallogger",
  "body": "Fixes #8915\r\n\r\n### Context\r\nFor live logger it has a couple of previous names mentioned in the original issue. Now the agreed name is terminal logger.\r\n\r\n### Changes Made\r\nRename live logger to terminal logger in the source code including comments and doc.\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-07-13T08:43:07Z",
  "updatedAt": "2023-07-21T01:58:22Z",
  "closedAt": "2023-07-21T01:58:18Z",
  "mergedAt": "2023-07-21T01:58:18Z",
  "additions": 143,
  "deletions": 135,
  "changedFiles": 36,
  "headRefName": "logger-namingchange",
  "isDraft": false,
  "author": {
    "login": "GangWang01"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "4998acd24b34ff1664bff2380a9759aed41aa60b",
          "message": "Rename liveLogger to be terminallogger",
          "committedDate": "2023-07-13T11:43:14Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7facddbb63879c63c4070bd5f6aa5059e5ada175",
          "message": "Keep supporting command line switches for live logger",
          "committedDate": "2023-07-19T06:43:03Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "92cc37c1355c7dfaa646b73cee9344a1f1a76fa1",
          "message": "Keep supporting MSBUILDLIVELOGGER for existing use",
          "committedDate": "2023-07-19T07:16:52Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4cca8003ac5a5d69d4fdc548c4931444e1aa75e5",
          "message": "Merge branch 'main' into logger-namingchange",
          "committedDate": "2023-07-20T06:49:14Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "It's a breaking change to stop supporting the `-livelogger` and `-ll` command line switches. I don't think I'm willing to do that.",
              "createdAt": "2023-07-13T14:16:40Z",
              "path": "src/MSBuild/CommandLineSwitches.cs",
              "diffHunk": "@@ -246,7 +246,7 @@ private struct ParameterizedSwitchInfo\n             new ParameterizedSwitchInfo(  new string[] { \"fileloggerparameters7\", \"flp7\" },     ParameterizedSwitch.FileLoggerParameters7,      null,                           false,          \"MissingFileLoggerParameterError\",     true,   false),\n             new ParameterizedSwitchInfo(  new string[] { \"fileloggerparameters8\", \"flp8\" },     ParameterizedSwitch.FileLoggerParameters8,      null,                           false,          \"MissingFileLoggerParameterError\",     true,   false),\n             new ParameterizedSwitchInfo(  new string[] { \"fileloggerparameters9\", \"flp9\" },     ParameterizedSwitch.FileLoggerParameters9,      null,                           false,          \"MissingFileLoggerParameterError\",     true,   false),\n-            new ParameterizedSwitchInfo(  new string[] { \"livelogger\", \"ll\", \"terminallogger\", \"tl\" }, ParameterizedSwitch.LiveLogger,          null,                           true,          null,                                  true,   true),",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "The switches for live logger were added back.",
              "createdAt": "2023-07-20T06:51:06Z",
              "path": "src/MSBuild/CommandLineSwitches.cs",
              "diffHunk": "@@ -246,7 +246,7 @@ private struct ParameterizedSwitchInfo\n             new ParameterizedSwitchInfo(  new string[] { \"fileloggerparameters7\", \"flp7\" },     ParameterizedSwitch.FileLoggerParameters7,      null,                           false,          \"MissingFileLoggerParameterError\",     true,   false),\n             new ParameterizedSwitchInfo(  new string[] { \"fileloggerparameters8\", \"flp8\" },     ParameterizedSwitch.FileLoggerParameters8,      null,                           false,          \"MissingFileLoggerParameterError\",     true,   false),\n             new ParameterizedSwitchInfo(  new string[] { \"fileloggerparameters9\", \"flp9\" },     ParameterizedSwitch.FileLoggerParameters9,      null,                           false,          \"MissingFileLoggerParameterError\",     true,   false),\n-            new ParameterizedSwitchInfo(  new string[] { \"livelogger\", \"ll\", \"terminallogger\", \"tl\" }, ParameterizedSwitch.LiveLogger,          null,                           true,          null,                                  true,   true),",
              "author": {
                "login": "GangWang01"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Please continue to support the `MSBUILDLIVELOGGER` approach. It's fine to add and change all the docs to `MSBUILDTERMINALLOGGER`, though.",
              "createdAt": "2023-07-13T14:18:48Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2514,69 +2514,69 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n             return invokeBuild;\n         }\n \n-        private static bool ProcessLiveLoggerConfiguration(CommandLineSwitches commandLineSwitches)\n+        private static bool ProcessTerminalLoggerConfiguration(CommandLineSwitches commandLineSwitches)\n         {\n-            string liveLoggerArg;\n+            string terminalloggerArg;\n \n             // Command line wins, so check it first\n-            if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.LiveLogger))\n+            if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.TerminalLogger))\n             {\n                 // There's a switch set, but there might be more than one\n-                string[] switches = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.LiveLogger];\n+                string[] switches = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.TerminalLogger];\n \n-                liveLoggerArg = switches[switches.Length - 1];\n+                terminalloggerArg = switches[switches.Length - 1];\n \n                 // if the switch was set but not to an explicit value, the value is \"auto\"\n-                if (string.IsNullOrEmpty(liveLoggerArg))\n+                if (string.IsNullOrEmpty(terminalloggerArg))\n                 {\n-                    liveLoggerArg = \"auto\";\n+                    terminalloggerArg = \"auto\";\n                 }\n             }\n             else\n             {\n-                liveLoggerArg = Environment.GetEnvironmentVariable(\"MSBUILDLIVELOGGER\");",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "If both `MSBUILDLIVELOGGER` and `MSBUILDTERMINALLOGGER` are configured, which one takes precedence?",
              "createdAt": "2023-07-14T10:47:41Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2514,69 +2514,69 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n             return invokeBuild;\n         }\n \n-        private static bool ProcessLiveLoggerConfiguration(CommandLineSwitches commandLineSwitches)\n+        private static bool ProcessTerminalLoggerConfiguration(CommandLineSwitches commandLineSwitches)\n         {\n-            string liveLoggerArg;\n+            string terminalloggerArg;\n \n             // Command line wins, so check it first\n-            if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.LiveLogger))\n+            if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.TerminalLogger))\n             {\n                 // There's a switch set, but there might be more than one\n-                string[] switches = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.LiveLogger];\n+                string[] switches = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.TerminalLogger];\n \n-                liveLoggerArg = switches[switches.Length - 1];\n+                terminalloggerArg = switches[switches.Length - 1];\n \n                 // if the switch was set but not to an explicit value, the value is \"auto\"\n-                if (string.IsNullOrEmpty(liveLoggerArg))\n+                if (string.IsNullOrEmpty(terminalloggerArg))\n                 {\n-                    liveLoggerArg = \"auto\";\n+                    terminalloggerArg = \"auto\";\n                 }\n             }\n             else\n             {\n-                liveLoggerArg = Environment.GetEnvironmentVariable(\"MSBUILDLIVELOGGER\");",
              "author": {
                "login": "GangWang01"
              }
            },
            {
              "body": "The new/more correct name, `MSBUILDTERMINALLOGGER`.",
              "createdAt": "2023-07-14T16:07:27Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2514,69 +2514,69 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n             return invokeBuild;\n         }\n \n-        private static bool ProcessLiveLoggerConfiguration(CommandLineSwitches commandLineSwitches)\n+        private static bool ProcessTerminalLoggerConfiguration(CommandLineSwitches commandLineSwitches)\n         {\n-            string liveLoggerArg;\n+            string terminalloggerArg;\n \n             // Command line wins, so check it first\n-            if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.LiveLogger))\n+            if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.TerminalLogger))\n             {\n                 // There's a switch set, but there might be more than one\n-                string[] switches = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.LiveLogger];\n+                string[] switches = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.TerminalLogger];\n \n-                liveLoggerArg = switches[switches.Length - 1];\n+                terminalloggerArg = switches[switches.Length - 1];\n \n                 // if the switch was set but not to an explicit value, the value is \"auto\"\n-                if (string.IsNullOrEmpty(liveLoggerArg))\n+                if (string.IsNullOrEmpty(terminalloggerArg))\n                 {\n-                    liveLoggerArg = \"auto\";\n+                    terminalloggerArg = \"auto\";\n                 }\n             }\n             else\n             {\n-                liveLoggerArg = Environment.GetEnvironmentVariable(\"MSBUILDLIVELOGGER\");",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "added the support `MSBUILDLIVELOGGER ` back.",
              "createdAt": "2023-07-20T06:55:06Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2514,69 +2514,69 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n             return invokeBuild;\n         }\n \n-        private static bool ProcessLiveLoggerConfiguration(CommandLineSwitches commandLineSwitches)\n+        private static bool ProcessTerminalLoggerConfiguration(CommandLineSwitches commandLineSwitches)\n         {\n-            string liveLoggerArg;\n+            string terminalloggerArg;\n \n             // Command line wins, so check it first\n-            if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.LiveLogger))\n+            if (commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.TerminalLogger))\n             {\n                 // There's a switch set, but there might be more than one\n-                string[] switches = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.LiveLogger];\n+                string[] switches = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.TerminalLogger];\n \n-                liveLoggerArg = switches[switches.Length - 1];\n+                terminalloggerArg = switches[switches.Length - 1];\n \n                 // if the switch was set but not to an explicit value, the value is \"auto\"\n-                if (string.IsNullOrEmpty(liveLoggerArg))\n+                if (string.IsNullOrEmpty(terminalloggerArg))\n                 {\n-                    liveLoggerArg = \"auto\";\n+                    terminalloggerArg = \"auto\";\n                 }\n             }\n             else\n             {\n-                liveLoggerArg = Environment.GetEnvironmentVariable(\"MSBUILDLIVELOGGER\");",
              "author": {
                "login": "GangWang01"
              }
            }
          ]
        }
      }
    ]
  }
}