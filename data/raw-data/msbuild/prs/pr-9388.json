{
  "number": 9388,
  "title": "Fix TL failure on MSBUILDNOINPROCNODE env variable",
  "body": "Fixes #9322\r\n\r\n### Context\r\nIn an attempt to build an invalid project with MSBUILDNOINPROCNODE=1, the exception \"Out of boundary\" was thrown.\r\n\r\n\r\n### Changes Made\r\nAdd a check before accessing the array element by index.\r\n\r\n### Testing\r\nUTs are added\r\n",
  "state": "MERGED",
  "createdAt": "2023-11-02T11:24:40Z",
  "updatedAt": "2023-11-06T20:11:48Z",
  "closedAt": "2023-11-06T20:11:47Z",
  "mergedAt": "2023-11-06T20:11:47Z",
  "additions": 35,
  "deletions": 17,
  "changedFiles": 2,
  "headRefName": "dev/ykovalova/address_TL_crash",
  "isDraft": false,
  "author": {
    "login": "YuliiaKovalova"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "47955616c27e9a0c513e7107027ed87263f799ae",
          "message": "fix TL failure of invalid project input",
          "committedDate": "2023-11-02T11:21:08Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9d62912480d4b102ff50c4e65d95b1515b9509fc",
          "message": "fix review comment",
          "committedDate": "2023-11-02T13:49:52Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "28c18a2455bf177e7d5fc1bf78b005ed1a883a3f",
          "message": "Update comment\n\nCo-authored-by: Ladi Prosek <ladi.prosek@gmail.com>",
          "committedDate": "2023-11-02T16:11:37Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "832b9ccf62a6679e9f5e142b5d4e1a6d00dbdeb9",
          "message": "fix review comments",
          "committedDate": "2023-11-06T10:09:17Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "788ec881e628fc128f71245b9e3043b478e2f9c2",
          "message": "Merge branch 'dev/ykovalova/address_TL_crash' of https://github.com/YuliiaKovalova/msbuild into dev/ykovalova/address_TL_crash",
          "committedDate": "2023-11-06T10:13:15Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Another option: Make `_nodes` a `List<NodeStatus>` and resize to accommodate the highest node ID seen. That would break the reliance of internal node numbering with no/negligible perf impact.",
        "createdAt": "2023-11-02T12:53:15Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "> I don't think this fix is addressing the root cause of the issue. It rather hides it by suppressing the live output.\r\n> \r\n> The crash is caused by the fact that single-process build passes 1 as `nodeCount` to the logger's `Initialize` method, but the out-of-proc node created with `MSBUILDNOINPROCNODE=1` has `NodeId` of 2.\r\n> \r\n> It may be reasonable to simply use `nodeIndex = Math.Min(nodeIndex, _nodes.Length - 1)` but we should be sure that it only kicks in in this scenario, i.e. that we don't end up with two nodes using the same `_nodes` slot. Another safe option would be to create the `_nodes` array one bigger than what's indicated by `nodeCount`.\r\n> \r\n> To see why the current fix does not fully work, please try a long-running build with `MSBUILDNOINPROCNODE=1` and see if live output is working.\r\n\r\nOh, I see! thank you for letting me know. ",
        "createdAt": "2023-11-02T13:23:53Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n\r\n```suggestion\r\n        // When MSBUILDNOINPROCNODE enabled, NodeId's reported by build start with 2. We need to reserve an extra spot for this case. \r\n```",
              "createdAt": "2023-11-02T15:52:54Z",
              "path": "src/MSBuild/TerminalLogger/TerminalLogger.cs",
              "diffHunk": "@@ -196,7 +196,8 @@ internal TerminalLogger(ITerminal terminal)\n     /// <inheritdoc/>\n     public void Initialize(IEventSource eventSource, int nodeCount)\n     {\n-        _nodes = new NodeStatus[nodeCount];\n+        // When MSBUILDNOINPROCNODE enabled, NodeId reported by build equals 2. We need to reserve an extra spot for this case. ",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I suspect the repro project can be simplified to:\r\n\r\n```xml\r\n            <Project>\r\n              <Target Name='Build' />\r\n            </Project>\r\n```",
              "createdAt": "2023-11-02T15:57:51Z",
              "path": "src/Build.UnitTests/TerminalLoggerConfiguration_Tests.cs",
              "diffHunk": "@@ -232,6 +231,30 @@ public void TerminalLoggerDefaultOff(string defaultValue)\n         ShouldNotBeTerminalLog(output);\n     }\n \n+    [WindowsFullFrameworkOnlyTheory]\n+    [InlineData(\"1\")]\n+    [InlineData(\"0\")]\n+    public void TerminalLoggerOnInvalidProjectBuild(string msbuildinprocnodeState)\n+    {\n+        var projectFile = _env.CreateFile(_env.CreateFolder(createFolder: true), \"myProjBroken.proj\", $\"\"\"\n+            <Project>\n+              <Target Name='Build'>\n+                <RegisterAssembly Assemblies=\"nonexistent.dll\" />\n+              </Target>\n+            </Project>",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why restrict to Windows/full framework only?",
              "createdAt": "2023-11-02T19:31:24Z",
              "path": "src/Build.UnitTests/TerminalLoggerConfiguration_Tests.cs",
              "diffHunk": "@@ -232,6 +231,30 @@ public void TerminalLoggerDefaultOff(string defaultValue)\n         ShouldNotBeTerminalLog(output);\n     }\n \n+    [WindowsFullFrameworkOnlyTheory]",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I guess it's because the bug doesn't reproduce with `dotnet build`. Not sure why, may be worth investigating.",
              "createdAt": "2023-11-02T20:14:14Z",
              "path": "src/Build.UnitTests/TerminalLoggerConfiguration_Tests.cs",
              "diffHunk": "@@ -232,6 +231,30 @@ public void TerminalLoggerDefaultOff(string defaultValue)\n         ShouldNotBeTerminalLog(output);\n     }\n \n+    [WindowsFullFrameworkOnlyTheory]",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "The reason is more trivial:\r\n\"The task \"RegisterAssembly\" is not supported on the .NET Core version of MSBuild. Please use the .NET Framework version of MSBuild.\"",
              "createdAt": "2023-11-03T14:31:38Z",
              "path": "src/Build.UnitTests/TerminalLoggerConfiguration_Tests.cs",
              "diffHunk": "@@ -232,6 +231,30 @@ public void TerminalLoggerDefaultOff(string defaultValue)\n         ShouldNotBeTerminalLog(output);\n     }\n \n+    [WindowsFullFrameworkOnlyTheory]",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "Does it really require the RegisterAssembly task to reproduce though? https://github.com/dotnet/msbuild/pull/9388#discussion_r1380379337",
              "createdAt": "2023-11-03T14:35:14Z",
              "path": "src/Build.UnitTests/TerminalLoggerConfiguration_Tests.cs",
              "diffHunk": "@@ -232,6 +231,30 @@ public void TerminalLoggerDefaultOff(string defaultValue)\n         ShouldNotBeTerminalLog(output);\n     }\n \n+    [WindowsFullFrameworkOnlyTheory]",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}