{
  "number": 7165,
  "title": "Remove all checks regarding $(MSBuildAssemblyVersion) being set or not",
  "body": "Fixes #5190\r\n\r\n### Context\r\n\r\n`$(MSBuildAssemblyVersion)` is a built-in property which returns the MSBuild Assembly version as you may expect. In various props/targets it's used to detect whether MSBuild v4 is running, and at this point that's never the case that MSBuild v4 (or any MSBuild for that matter) would be using these props/targets.\r\n\r\nMy understanding is that the props/targets which ship with the .NET Framework and *do* ship with MSBuild v4 are distributed separately and not part of this repo.\r\n\r\n### Changes Made\r\nRemoved all conditions where the existence of `$(MSBuildAssemblyVersion)` was used.\r\n",
  "state": "MERGED",
  "createdAt": "2021-12-21T22:19:24Z",
  "updatedAt": "2022-01-07T17:15:13Z",
  "closedAt": "2022-01-07T17:12:44Z",
  "mergedAt": "2022-01-07T17:12:44Z",
  "additions": 115,
  "deletions": 760,
  "changedFiles": 7,
  "headRefName": "dfederm/remove-msbuildassemblyversion-checks",
  "isDraft": false,
  "author": {
    "login": "dfederm"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "805147e81b9be549da1a5eed0c3a591f3f5a428b",
          "message": "Remove all checks regarding $(MSBuildAssemblyVersion) being set or not",
          "committedDate": "2021-12-21T22:15:40Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "54b0a61f68461d8093aef37061b7e5b3afd488a5",
          "message": "Update src/Tasks/Microsoft.Common.props\n\nCo-authored-by: Nirmal Guru <Nirmal4G@gmail.com>",
          "committedDate": "2021-12-22T12:10:02Z",
          "author": {
            "name": "David Federman",
            "email": "david.federman@outlook.com"
          }
        }
      },
      {
        "commit": {
          "oid": "10d75a8b32a342904ed462b5d6ff4c41041f7914",
          "message": "Update src/Tasks/Microsoft.Common.props\n\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2021-12-22T22:53:53Z",
          "author": {
            "name": "David Federman",
            "email": "david.federman@outlook.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Should fix #5190. We could also remove the `xmlns` too!\r\n\r\nThis could be a part of the larger refactoring that'll lead into #1686.",
        "createdAt": "2021-12-22T06:39:36Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> Should fix #5190. We could also remove the `xmlns` too!\r\n\r\nSure, I'll take care of xmlns in a separate PR :)",
        "createdAt": "2021-12-22T12:10:50Z",
        "author": {
          "login": "dfederm"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Removed the reference to the \"Microsoft.Common.props.d folder\" since as far as I can tell, it never actually existed? Even in the PR which added this comment, it didn't seem to apply then either.",
              "createdAt": "2021-12-21T22:20:27Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -63,72 +63,19 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n   <Import Project=\"$(MSBuildProjectExtensionsPath)$(MSBuildProjectFile).*.props\" Condition=\"'$(ImportProjectExtensionProps)' == 'true' and exists('$(MSBuildProjectExtensionsPath)')\" />\n \n   <!--\n-        Import wildcard \"ImportBefore\" props files if we're actually in a 12.0+ project (rather than a project being\n-        treated as 4.0)\n+          Wildcard imports come from $(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\\ folder.",
              "author": {
                "login": "dfederm"
              }
            },
            {
              "body": "The reason for the weird naming is given the comments itself.\r\n\r\n> Unfortunately, there is already a file named \"Microsoft.Common.props\" in this directory so we have to have a slightly different directory name to hold extensions.\r\n\r\nBut the actual path is `$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Imports\\$(MSBuildThisFile)\\` for `Microsoft.Common.props`.",
              "createdAt": "2021-12-22T06:27:42Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -63,72 +63,19 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n   <Import Project=\"$(MSBuildProjectExtensionsPath)$(MSBuildProjectFile).*.props\" Condition=\"'$(ImportProjectExtensionProps)' == 'true' and exists('$(MSBuildProjectExtensionsPath)')\" />\n \n   <!--\n-        Import wildcard \"ImportBefore\" props files if we're actually in a 12.0+ project (rather than a project being\n-        treated as 4.0)\n+          Wildcard imports come from $(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\\ folder.",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should I just avoid the property altogether and inline the value in the import below? There's no condition on the property, so it's not overridable without global properties. Perhaps someone could possibly be using the value of the property later? Not sure.",
              "createdAt": "2021-12-21T22:21:56Z",
              "path": "src/Tasks/Microsoft.Common.targets",
              "diffHunk": "@@ -16,102 +16,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n <Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n \n-  <!--\n-       In VS 2010 SP1 and VS 2012, both supported for asset compatibility, the MSBuild installed\n-       as part of them did not enforce using the local ToolsVersion (4.0) in all cases, but instead\n-       just used whatever ToolsVersion was in the project file if it existed on the machine, and\n-       only forced 4.0 if that ToolsVersion did not exist.\n-\n-       Moving forward, we do want to enforce a single acting ToolsVersion per version of Visual Studio,\n-       but in order to approximate this behavior on VS 2010 SP1 and VS 2012 as well, we've redirected\n-       the targets:  If we're building using 4.X MSBuild (which doesn't define the new reserved\n-       property, MSBuildAssemblyVersion), we'll point right back at the 4.0 targets, which still exist\n-       as part of the .NET Framework.  Only if we're using the new MSBuild will we point to the current\n-       targets.\n-   -->\n-\n-  <Choose>\n-    <When Condition=\"'$(MSBuildAssemblyVersion)' == ''\">\n-      <PropertyGroup>\n-        <CommonTargetsPath>$(MSBuildFrameworkToolsPath)\\Microsoft.Common.targets</CommonTargetsPath>\n-      </PropertyGroup>\n-    </When>\n-    <Otherwise>\n-      <PropertyGroup>\n-        <CommonTargetsPath>$(MSBuildToolsPath)\\Microsoft.Common.CurrentVersion.targets</CommonTargetsPath>\n-      </PropertyGroup>\n-    </Otherwise>\n-  </Choose>\n-\n-  <PropertyGroup Condition=\"'$(MSBuildAssemblyVersion)' == ''\">\n-     <!--\n-          Overrides for the Microsoft.Common.targets extension targets. Used to make sure that only the imports we specify\n-          (hard-coded to 4.0 locations) are used, not the 12.0 locations that would be used by default.\n-\n-          NOTE: This logic is duplicated in Microsoft.VisualBasic.targets and in Microsoft.CSharp.targets because those two files\n-          import Microsoft.Common.targets from the current directory and thus don't get the benefit of the redirections, so for\n-          any changes to this logic in this file, please also edit the other two.\n-      -->\n-    <ImportByWildcardBefore40MicrosoftCommonTargets Condition=\"'$(ImportByWildcardBefore40MicrosoftCommonTargets)' == ''\">$(ImportByWildcardBeforeMicrosoftCommonTargets)</ImportByWildcardBefore40MicrosoftCommonTargets>\n-    <ImportByWildcardBefore40MicrosoftCommonTargets Condition=\"'$(ImportByWildcardBefore40MicrosoftCommonTargets)' == ''\">true</ImportByWildcardBefore40MicrosoftCommonTargets>\n-\n-    <ImportByWildcardAfter40MicrosoftCommonTargets Condition=\"'$(ImportByWildcardAfter40MicrosoftCommonTargets)' == ''\">$(ImportByWildcardAfterMicrosoftCommonTargets)</ImportByWildcardAfter40MicrosoftCommonTargets>\n-    <ImportByWildcardAfter40MicrosoftCommonTargets Condition=\"'$(ImportByWildcardAfter40MicrosoftCommonTargets)' == ''\">true</ImportByWildcardAfter40MicrosoftCommonTargets>\n-\n-    <ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets Condition=\"'$(ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets)' == ''\">$(ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets)</ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets>\n-    <ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets Condition=\"'$(ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets)' == ''\">true</ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets>\n-\n-    <ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets Condition=\"'$(ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets)' == ''\">$(ImportUserLocationsByWildcardAfterMicrosoftCommonTargets)</ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets>\n-    <ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets Condition=\"'$(ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets)' == ''\">true</ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets>\n-\n-    <ImportByWildcardBeforeMicrosoftCommonTargets>false</ImportByWildcardBeforeMicrosoftCommonTargets>\n-    <ImportByWildcardAfterMicrosoftCommonTargets>false</ImportByWildcardAfterMicrosoftCommonTargets>\n-    <ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets>false</ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets>\n-    <ImportUserLocationsByWildcardAfterMicrosoftCommonTargets>false</ImportUserLocationsByWildcardAfterMicrosoftCommonTargets>\n-\n-    <CustomBeforeMicrosoftCommonTargets Condition=\"'$(CustomBeforeMicrosoftCommonTargets)' == ''\">$(MSBuildExtensionsPath)\\v4.0\\Custom.Before.Microsoft.Common.targets</CustomBeforeMicrosoftCommonTargets>\n-    <CustomAfterMicrosoftCommonTargets Condition=\"'$(CustomAfterMicrosoftCommonTargets)' == ''\">$(MSBuildExtensionsPath)\\v4.0\\Custom.After.Microsoft.Common.targets</CustomAfterMicrosoftCommonTargets>\n-  </PropertyGroup>\n-\n-  <PropertyGroup Condition=\"'$(MSBuildAssemblyVersion)' == '' and ('$(TargetFrameworkIdentifier)' == '.NETFramework' or '$(TargetFrameworkIdentifier)' == 'Silverlight' or ('$(TargetFrameworkIdentifier)' == '' and ('$(TargetRuntime)' == 'Managed' or '$(TargetRuntime)' == '')))\">\n-     <!--\n-          Overrides for the Microsoft.NETFramework.props extension targets. Used to make sure that only the imports we specify\n-          (hard-coded to 4.0 locations) are used, not the 12.0 locations that would be used by default. Required because\n-          Microsoft.Common.targets imports it from the current directory, so we don't get a chance to redirect these in its\n-          own redirection targets.\n-\n-          NOTE: This logic is duplicated in Microsoft.VisualBasic.targets and in Microsoft.CSharp.targets because those two files\n-          import Microsoft.Common.targets from the current directory and thus don't get the benefit of these redirections either,\n-          so for any changes to this logic in this file, please also edit the other two.\n-      -->\n-    <ImportByWildcardBefore40MicrosoftNetFrameworkProps Condition=\"'$(ImportByWildcardBefore40MicrosoftNetFrameworkProps)' == ''\">$(ImportByWildcardBeforeMicrosoftNetFrameworkProps)</ImportByWildcardBefore40MicrosoftNetFrameworkProps>\n-    <ImportByWildcardBefore40MicrosoftNetFrameworkProps Condition=\"'$(ImportByWildcardBefore40MicrosoftNetFrameworkProps)' == ''\">true</ImportByWildcardBefore40MicrosoftNetFrameworkProps>\n-\n-    <ImportByWildcardAfter40MicrosoftNetFrameworkProps Condition=\"'$(ImportByWildcardAfter40MicrosoftNetFrameworkProps)' == ''\">$(ImportByWildcardAfterMicrosoftNetFrameworkProps)</ImportByWildcardAfter40MicrosoftNetFrameworkProps>\n-    <ImportByWildcardAfter40MicrosoftNetFrameworkProps Condition=\"'$(ImportByWildcardAfter40MicrosoftNetFrameworkProps)' == ''\">true</ImportByWildcardAfter40MicrosoftNetFrameworkProps>\n-\n-    <ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps Condition=\"'$(ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps)' == ''\">$(ImportUserLocationsByWildcardBeforeMicrosoftNetFrameworkProps)</ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps>\n-    <ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps Condition=\"'$(ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps)' == ''\">true</ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps>\n-\n-    <ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps Condition=\"'$(ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps)' == ''\">$(ImportUserLocationsByWildcardAfterMicrosoftNetFrameworkProps)</ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps>\n-    <ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps Condition=\"'$(ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps)' == ''\">true</ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps>\n-\n-    <ImportByWildcardBeforeMicrosoftNetFrameworkProps>false</ImportByWildcardBeforeMicrosoftNetFrameworkProps>\n-    <ImportByWildcardAfterMicrosoftNetFrameworkProps>false</ImportByWildcardAfterMicrosoftNetFrameworkProps>\n-    <ImportUserLocationsByWildcardBeforeMicrosoftNetFrameworkProps>false</ImportUserLocationsByWildcardBeforeMicrosoftNetFrameworkProps>\n-    <ImportUserLocationsByWildcardAfterMicrosoftNetFrameworkProps>false</ImportUserLocationsByWildcardAfterMicrosoftNetFrameworkProps>\n+  <PropertyGroup>\n+    <CommonTargetsPath>$(MSBuildToolsPath)\\Microsoft.Common.CurrentVersion.targets</CommonTargetsPath>",
              "author": {
                "login": "dfederm"
              }
            },
            {
              "body": "Let the property be. As far as I know, some external and 3rd party targets still refer to this property.",
              "createdAt": "2021-12-22T06:30:17Z",
              "path": "src/Tasks/Microsoft.Common.targets",
              "diffHunk": "@@ -16,102 +16,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n <Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n \n-  <!--\n-       In VS 2010 SP1 and VS 2012, both supported for asset compatibility, the MSBuild installed\n-       as part of them did not enforce using the local ToolsVersion (4.0) in all cases, but instead\n-       just used whatever ToolsVersion was in the project file if it existed on the machine, and\n-       only forced 4.0 if that ToolsVersion did not exist.\n-\n-       Moving forward, we do want to enforce a single acting ToolsVersion per version of Visual Studio,\n-       but in order to approximate this behavior on VS 2010 SP1 and VS 2012 as well, we've redirected\n-       the targets:  If we're building using 4.X MSBuild (which doesn't define the new reserved\n-       property, MSBuildAssemblyVersion), we'll point right back at the 4.0 targets, which still exist\n-       as part of the .NET Framework.  Only if we're using the new MSBuild will we point to the current\n-       targets.\n-   -->\n-\n-  <Choose>\n-    <When Condition=\"'$(MSBuildAssemblyVersion)' == ''\">\n-      <PropertyGroup>\n-        <CommonTargetsPath>$(MSBuildFrameworkToolsPath)\\Microsoft.Common.targets</CommonTargetsPath>\n-      </PropertyGroup>\n-    </When>\n-    <Otherwise>\n-      <PropertyGroup>\n-        <CommonTargetsPath>$(MSBuildToolsPath)\\Microsoft.Common.CurrentVersion.targets</CommonTargetsPath>\n-      </PropertyGroup>\n-    </Otherwise>\n-  </Choose>\n-\n-  <PropertyGroup Condition=\"'$(MSBuildAssemblyVersion)' == ''\">\n-     <!--\n-          Overrides for the Microsoft.Common.targets extension targets. Used to make sure that only the imports we specify\n-          (hard-coded to 4.0 locations) are used, not the 12.0 locations that would be used by default.\n-\n-          NOTE: This logic is duplicated in Microsoft.VisualBasic.targets and in Microsoft.CSharp.targets because those two files\n-          import Microsoft.Common.targets from the current directory and thus don't get the benefit of the redirections, so for\n-          any changes to this logic in this file, please also edit the other two.\n-      -->\n-    <ImportByWildcardBefore40MicrosoftCommonTargets Condition=\"'$(ImportByWildcardBefore40MicrosoftCommonTargets)' == ''\">$(ImportByWildcardBeforeMicrosoftCommonTargets)</ImportByWildcardBefore40MicrosoftCommonTargets>\n-    <ImportByWildcardBefore40MicrosoftCommonTargets Condition=\"'$(ImportByWildcardBefore40MicrosoftCommonTargets)' == ''\">true</ImportByWildcardBefore40MicrosoftCommonTargets>\n-\n-    <ImportByWildcardAfter40MicrosoftCommonTargets Condition=\"'$(ImportByWildcardAfter40MicrosoftCommonTargets)' == ''\">$(ImportByWildcardAfterMicrosoftCommonTargets)</ImportByWildcardAfter40MicrosoftCommonTargets>\n-    <ImportByWildcardAfter40MicrosoftCommonTargets Condition=\"'$(ImportByWildcardAfter40MicrosoftCommonTargets)' == ''\">true</ImportByWildcardAfter40MicrosoftCommonTargets>\n-\n-    <ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets Condition=\"'$(ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets)' == ''\">$(ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets)</ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets>\n-    <ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets Condition=\"'$(ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets)' == ''\">true</ImportUserLocationsByWildcardBefore40MicrosoftCommonTargets>\n-\n-    <ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets Condition=\"'$(ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets)' == ''\">$(ImportUserLocationsByWildcardAfterMicrosoftCommonTargets)</ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets>\n-    <ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets Condition=\"'$(ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets)' == ''\">true</ImportUserLocationsByWildcardAfter40MicrosoftCommonTargets>\n-\n-    <ImportByWildcardBeforeMicrosoftCommonTargets>false</ImportByWildcardBeforeMicrosoftCommonTargets>\n-    <ImportByWildcardAfterMicrosoftCommonTargets>false</ImportByWildcardAfterMicrosoftCommonTargets>\n-    <ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets>false</ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets>\n-    <ImportUserLocationsByWildcardAfterMicrosoftCommonTargets>false</ImportUserLocationsByWildcardAfterMicrosoftCommonTargets>\n-\n-    <CustomBeforeMicrosoftCommonTargets Condition=\"'$(CustomBeforeMicrosoftCommonTargets)' == ''\">$(MSBuildExtensionsPath)\\v4.0\\Custom.Before.Microsoft.Common.targets</CustomBeforeMicrosoftCommonTargets>\n-    <CustomAfterMicrosoftCommonTargets Condition=\"'$(CustomAfterMicrosoftCommonTargets)' == ''\">$(MSBuildExtensionsPath)\\v4.0\\Custom.After.Microsoft.Common.targets</CustomAfterMicrosoftCommonTargets>\n-  </PropertyGroup>\n-\n-  <PropertyGroup Condition=\"'$(MSBuildAssemblyVersion)' == '' and ('$(TargetFrameworkIdentifier)' == '.NETFramework' or '$(TargetFrameworkIdentifier)' == 'Silverlight' or ('$(TargetFrameworkIdentifier)' == '' and ('$(TargetRuntime)' == 'Managed' or '$(TargetRuntime)' == '')))\">\n-     <!--\n-          Overrides for the Microsoft.NETFramework.props extension targets. Used to make sure that only the imports we specify\n-          (hard-coded to 4.0 locations) are used, not the 12.0 locations that would be used by default. Required because\n-          Microsoft.Common.targets imports it from the current directory, so we don't get a chance to redirect these in its\n-          own redirection targets.\n-\n-          NOTE: This logic is duplicated in Microsoft.VisualBasic.targets and in Microsoft.CSharp.targets because those two files\n-          import Microsoft.Common.targets from the current directory and thus don't get the benefit of these redirections either,\n-          so for any changes to this logic in this file, please also edit the other two.\n-      -->\n-    <ImportByWildcardBefore40MicrosoftNetFrameworkProps Condition=\"'$(ImportByWildcardBefore40MicrosoftNetFrameworkProps)' == ''\">$(ImportByWildcardBeforeMicrosoftNetFrameworkProps)</ImportByWildcardBefore40MicrosoftNetFrameworkProps>\n-    <ImportByWildcardBefore40MicrosoftNetFrameworkProps Condition=\"'$(ImportByWildcardBefore40MicrosoftNetFrameworkProps)' == ''\">true</ImportByWildcardBefore40MicrosoftNetFrameworkProps>\n-\n-    <ImportByWildcardAfter40MicrosoftNetFrameworkProps Condition=\"'$(ImportByWildcardAfter40MicrosoftNetFrameworkProps)' == ''\">$(ImportByWildcardAfterMicrosoftNetFrameworkProps)</ImportByWildcardAfter40MicrosoftNetFrameworkProps>\n-    <ImportByWildcardAfter40MicrosoftNetFrameworkProps Condition=\"'$(ImportByWildcardAfter40MicrosoftNetFrameworkProps)' == ''\">true</ImportByWildcardAfter40MicrosoftNetFrameworkProps>\n-\n-    <ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps Condition=\"'$(ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps)' == ''\">$(ImportUserLocationsByWildcardBeforeMicrosoftNetFrameworkProps)</ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps>\n-    <ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps Condition=\"'$(ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps)' == ''\">true</ImportUserLocationsByWildcardBefore40MicrosoftNetFrameworkProps>\n-\n-    <ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps Condition=\"'$(ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps)' == ''\">$(ImportUserLocationsByWildcardAfterMicrosoftNetFrameworkProps)</ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps>\n-    <ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps Condition=\"'$(ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps)' == ''\">true</ImportUserLocationsByWildcardAfter40MicrosoftNetFrameworkProps>\n-\n-    <ImportByWildcardBeforeMicrosoftNetFrameworkProps>false</ImportByWildcardBeforeMicrosoftNetFrameworkProps>\n-    <ImportByWildcardAfterMicrosoftNetFrameworkProps>false</ImportByWildcardAfterMicrosoftNetFrameworkProps>\n-    <ImportUserLocationsByWildcardBeforeMicrosoftNetFrameworkProps>false</ImportUserLocationsByWildcardBeforeMicrosoftNetFrameworkProps>\n-    <ImportUserLocationsByWildcardAfterMicrosoftNetFrameworkProps>false</ImportUserLocationsByWildcardAfterMicrosoftNetFrameworkProps>\n+  <PropertyGroup>\n+    <CommonTargetsPath>$(MSBuildToolsPath)\\Microsoft.Common.CurrentVersion.targets</CommonTargetsPath>",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n          Wildcard imports come from $(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Imports\\Microsoft.Common.props\\ directory.\r\n          This is very similar to the same extension point used in Microsoft.Common.targets, which is located in\r\n          the $(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.targets\\ directory.\r\n          Unfortunately, there is already a file named \"Microsoft.Common.props\" in this directory\r\n          so, we have to have a slightly different directory name to hold extensions.\r\n```",
              "createdAt": "2021-12-22T06:48:39Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -63,72 +63,19 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n   <Import Project=\"$(MSBuildProjectExtensionsPath)$(MSBuildProjectFile).*.props\" Condition=\"'$(ImportProjectExtensionProps)' == 'true' and exists('$(MSBuildProjectExtensionsPath)')\" />\n \n   <!--\n-        Import wildcard \"ImportBefore\" props files if we're actually in a 12.0+ project (rather than a project being\n-        treated as 4.0)\n+          Wildcard imports come from $(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\\ folder.\n+          This is very similar to the same extension point used in Microsoft.Common.targets, which is located in\n+          the $(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.targets\\ directory.",
              "author": {
                "login": "Nirmal4G"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "tiny nit:\r\n```suggestion\r\n          Unfortunately, there is already a file named \"Microsoft.Common.props\" in this directory,\r\n          so we have to have a slightly different directory name to hold extensions.\r\n```",
              "createdAt": "2021-12-22T22:22:35Z",
              "path": "src/Tasks/Microsoft.Common.props",
              "diffHunk": "@@ -63,72 +63,21 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n   <Import Project=\"$(MSBuildProjectExtensionsPath)$(MSBuildProjectFile).*.props\" Condition=\"'$(ImportProjectExtensionProps)' == 'true' and exists('$(MSBuildProjectExtensionsPath)')\" />\n \n   <!--\n-        Import wildcard \"ImportBefore\" props files if we're actually in a 12.0+ project (rather than a project being\n-        treated as 4.0)\n+          Wildcard imports come from $(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Imports\\Microsoft.Common.props\\ directory.\n+          This is very similar to the same extension point used in Microsoft.Common.targets, which is located in\n+          the $(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.targets\\ directory.\n+          Unfortunately, there is already a file named \"Microsoft.Common.props\" in this directory\n+          so, we have to have a slightly different directory name to hold extensions.",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}