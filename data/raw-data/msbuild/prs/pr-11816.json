{
  "number": 11816,
  "title": "Add more log to improve error handling for optional-logger failures",
  "body": "Fixes #\r\nFix the issue Improve error handling for optional-logger failures #9560\r\n\r\n### Context\r\nWhen using optional loggers with MSBuild, the error messages generated for invalid logger assemblies are not clear, making it difficult for users to diagnose issues. \r\n\r\n### Changes Made\r\nAdd more information for optional-logger failures \r\n\r\n### Testing\r\nI have performed testing for various exception to validate the changes. The following cases was successfully tested: IOException, BadImageFormatException, MemberAccessException, TargetInvocationException\r\n\r\nI was unbale to reproduce 2 cases: SecurityException, ReflectionTypeLoadException\r\n\r\n### Notes\r\n",
  "state": "OPEN",
  "createdAt": "2025-05-09T08:10:01Z",
  "updatedAt": "2025-05-27T14:06:26Z",
  "closedAt": null,
  "mergedAt": null,
  "additions": 211,
  "deletions": 5,
  "changedFiles": 7,
  "headRefName": "dev/huulinhnguyen/issue9560",
  "isDraft": false,
  "author": {
    "login": "huulinhnguyen-dev"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "YuliiaKovalova"
      },
      {
        "login": "surayya-MS"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "848a048a9be414706c6065a1619143368a8c3947",
          "message": "Add more log to improve error handling for optional-logger failures",
          "committedDate": "2025-05-09T08:09:00Z",
          "author": {
            "name": "Linh Nguyen",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f0fe68a34bc64ee4c3e152c0a5bebcf2a2431910",
          "message": "Change the test output",
          "committedDate": "2025-05-12T03:00:48Z",
          "author": {
            "name": "Linh Nguyen",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c9dae4a3e9d697caa95ca714edf876d65244f702",
          "message": "change the way output is checked so it can run on multiple os",
          "committedDate": "2025-05-12T03:33:05Z",
          "author": {
            "name": "Linh Nguyen",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6b8bd70c2896b373c79dc6679fb670d292ce2a58",
          "message": "change the way output is checked so it can run on multiple os and fix the error when run the pipeline",
          "committedDate": "2025-05-12T08:08:21Z",
          "author": {
            "name": "Linh Nguyen",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ab682850c422433b0b866d29af210b9e3b10bea2",
          "message": "Update logic code for BadImageException",
          "committedDate": "2025-05-12T08:53:18Z",
          "author": {
            "name": "Linh Nguyen",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f0596b7ede724d804e4eeedba8634cf29b2c4343",
          "message": "Merge branch 'main' into dev/huulinhnguyen/issue9560",
          "committedDate": "2025-05-12T08:54:01Z",
          "author": {
            "name": "huulinh99",
            "email": "43189610+huulinh99@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a6b41d205aa6380c0c374e87745dfd3811b3481a",
          "message": "Merge branch 'main' into dev/huulinhnguyen/issue9560",
          "committedDate": "2025-05-12T09:56:01Z",
          "author": {
            "name": "huulinh99",
            "email": "43189610+huulinh99@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bfddd357a05fdfa0b1853416ddd34f870ce7436a",
          "message": "Merge branch 'main' into dev/huulinhnguyen/issue9560",
          "committedDate": "2025-05-13T01:42:13Z",
          "author": {
            "name": "huulinh99",
            "email": "43189610+huulinh99@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1563b84803d45266c6116eec0fbaebc9bec691dd",
          "message": "Added the code have been deleted by mistake",
          "committedDate": "2025-05-13T02:00:46Z",
          "author": {
            "name": "Linh Nguyen",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ee11fbabc724ac4802a4dce1d3e7476c4c1448f8",
          "message": "Merge branch 'dev/huulinhnguyen/issue9560' of https://github.com/huulinh99/msbuild into dev/huulinhnguyen/issue9560",
          "committedDate": "2025-05-13T02:01:04Z",
          "author": {
            "name": "Linh Nguyen",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ebddb09b8ceed3ec57a79ab6e1d92f1a3d309556",
          "message": "Update unit test by using TestAssets folder instead of prepare in code",
          "committedDate": "2025-05-16T02:13:44Z",
          "author": {
            "name": "Linh Nguyen",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "04e150159e42869bd9017be53392f5048aa0f47c",
          "message": "Refactor code and remove unused code",
          "committedDate": "2025-05-19T08:00:52Z",
          "author": {
            "name": "huulinh99",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e0ff90cd6049d280a435905e1c520dd8b0a500a6",
          "message": "Remove space",
          "committedDate": "2025-05-19T08:13:58Z",
          "author": {
            "name": "huulinh99",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "690382f44faa8e9ec7452918252ba9409fcd15ca",
          "message": "Remove unsued code",
          "committedDate": "2025-05-19T08:59:51Z",
          "author": {
            "name": "huulinh99",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dd85f06b12947fbc0e89da454eded930da25a009",
          "message": "Update PR",
          "committedDate": "2025-05-20T06:09:04Z",
          "author": {
            "name": "huulinh99",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a7bf48b8af3667a3414878922125a697b83624ee",
          "message": "Update PR",
          "committedDate": "2025-05-20T06:23:09Z",
          "author": {
            "name": "huulinh99",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "db54c676e3d670d7addbd8e170ace3648fde408b",
          "message": "Update PR",
          "committedDate": "2025-05-20T07:10:35Z",
          "author": {
            "name": "huulinh99",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7958e586dd3a6ab487d121e3735a74ccb9833906",
          "message": "Update csproj file",
          "committedDate": "2025-05-20T07:30:41Z",
          "author": {
            "name": "huulinh99",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1a16ab9c851394f8787228ef524a4cac45a12514",
          "message": "Add common method ReportOptionalLoggerCreation",
          "committedDate": "2025-05-23T09:10:00Z",
          "author": {
            "name": "huulinh99",
            "email": "huulinhnguyen99@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@dotnet-policy-service agree",
        "createdAt": "2025-05-09T08:42:10Z",
        "author": {
          "login": "huulinhnguyen-dev"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Consider adding a method `ReportOptionalLoggerCreation(string loggerName, Exception e)`",
              "createdAt": "2025-05-15T02:54:30Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4420,14 +4420,17 @@ private static bool CreateAndConfigureLogger(\n             }\n             catch (IOException e) when (!loggerDescription.IsOptional)\n             {\n+                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", loggerDescription.Name, e.Message));",
              "author": {
                "login": "KirillOsenkov"
              }
            },
            {
              "body": "Thank you so much for your comment. I have added a common function",
              "createdAt": "2025-05-23T09:18:39Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4420,14 +4420,17 @@ private static bool CreateAndConfigureLogger(\n             }\n             catch (IOException e) when (!loggerDescription.IsOptional)\n             {\n+                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", loggerDescription.Name, e.Message));",
              "author": {
                "login": "huulinhnguyen-dev"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "did you leave Console.WriteLine accidentally here and on the line 4479? ",
              "createdAt": "2025-05-27T12:55:09Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4420,26 +4420,27 @@ private static bool CreateAndConfigureLogger(\n             }\n             catch (IOException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (BadImageFormatException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (SecurityException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (ReflectionTypeLoadException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (MemberAccessException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (TargetInvocationException e) when (!loggerDescription.IsOptional)\n             {\n+                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", loggerDescription.Name, e.Message));",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "Oh, I see, you want to have it displayed in console",
              "createdAt": "2025-05-27T12:57:55Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -4420,26 +4420,27 @@ private static bool CreateAndConfigureLogger(\n             }\n             catch (IOException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (BadImageFormatException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (SecurityException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (ReflectionTypeLoadException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (MemberAccessException e) when (!loggerDescription.IsOptional)\n             {\n-                InitializationException.Throw(\"XMake.LoggerCreationError\", unquotedParameter, e, false);\n+                ReportOptionalLoggerCreation(loggerDescription.Name, unquotedParameter, e);\n             }\n             catch (TargetInvocationException e) when (!loggerDescription.IsOptional)\n             {\n+                Console.WriteLine(ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"OptionalLoggerCreationMessage\", loggerDescription.Name, e.Message));",
              "author": {
                "login": "YuliiaKovalova"
              }
            }
          ]
        }
      }
    ]
  }
}