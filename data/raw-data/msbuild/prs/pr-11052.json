{
  "number": 11052,
  "title": "Support 'IfDifferent' for CopyToOutputDirectory",
  "body": "Fixes #8743\r\n\r\n### Context\r\n`CopyToOutputDirectory` currently has only `PreserveNewest` and `Always` (and `Never` - not considered here).\r\n`Always` is unnecessery perf hit, but is only workaround for situations where destination file can change between builds (e.g. someone is copying DB, storage file, config file etc. - that can be altered during test runs).\r\n\r\nSo let's support a mode that allows copying if the file is different - doesn't have to be newer.\r\n\r\nAt the same time - `Always` should actually be only used in those cases - so let's make it possible to glabaly opt-in for such change in behavior.\r\n\r\n### Changes Made\r\n* Added 'IfDifferent' metadata and it's recognition\r\n* Added $(SkipUnchangedFilesOnCopyAlways) property that changes behavior of `Always` to `IfDifferent`\r\n\r\n### Testing\r\nTailored tests added in #11054\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2024-11-29T15:37:39Z",
  "updatedAt": "2024-12-05T16:05:38Z",
  "closedAt": "2024-12-05T16:05:35Z",
  "mergedAt": "2024-12-05T16:05:35Z",
  "additions": 73,
  "deletions": 9,
  "changedFiles": 2,
  "headRefName": "proto/copy-if-different",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "0956b020b01015be9eeaadad4389182b1ee47ede",
          "message": "Support Copy=IfDifferent",
          "committedDate": "2024-11-29T14:08:05Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "39ee4c95a6fc8ba2f9d8b7dcb37f36c8dd8f5cdd",
          "message": "Format",
          "committedDate": "2024-11-29T15:31:06Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9c446ab9441fb40b9cd5059274d9a481152ee6f7",
          "message": "Update xsd",
          "committedDate": "2024-11-29T16:34:56Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4cd1d2da499f8c02dfd07b412233a0ddfbaf2485",
          "message": "clarify comment",
          "committedDate": "2024-12-04T18:52:00Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Can we keep the original comment and just add the \"backwards compatibility\" to it?",
              "createdAt": "2024-12-02T18:13:50Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -5316,8 +5331,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n       Outputs=\"@(_SourceItemsToCopyToOutputDirectory->'$(OutDir)%(TargetPath)')\">\n \n     <!--\n-        Not using SkipUnchangedFiles=\"true\" because the application may want to change\n-        one of these files and not have an incremental build replace it.\n+        Not using SkipUnchangedFiles=\"true\" because we anyways copy only the ones with newer timestamp.",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "This is actually not for back-compat, but the filtering is already done before the task runs.\r\nI restated the comment to:\r\n\r\n```\r\nNot using SkipUnchangedFiles=\"true\" because the items we pass in are already only those that have newer timestampts in the source (determined by _GetCopyToOutputDirectoryItemsFromThisProject).\r\n```\r\n\r\nPlease have a look if it makes more sense",
              "createdAt": "2024-12-04T18:54:30Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -5316,8 +5331,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n       Outputs=\"@(_SourceItemsToCopyToOutputDirectory->'$(OutDir)%(TargetPath)')\">\n \n     <!--\n-        Not using SkipUnchangedFiles=\"true\" because the application may want to change\n-        one of these files and not have an incremental build replace it.\n+        Not using SkipUnchangedFiles=\"true\" because we anyways copy only the ones with newer timestamp.",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "The `DoCopyIfNecessary` that is used by the copy task in this case is doing it's check by\r\n`(SkipUnchangedFiles && IsMatchingSizeAndTimeStamp(sourceFileState, destinationFileState))`\r\nIf I understand this correctly, this is same for both PreserveNewest and IfDifferent(or at least I found no other check)\r\nThe way the IfDifferent properties above are set up also makes me think that IfDifferent behavior is identical to KeepNewest.\r\nIs this correct or did I miss something please?\r\nIf it is correct, why do we introduce it?\r\nIf I am mistaken, what did I miss please?",
              "createdAt": "2024-12-03T11:07:47Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -5366,6 +5385,37 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n   </Target>\n \n+  <!--\n+    ============================================================\n+                                        _CopyDifferingSourceItemsToOutputDirectory\n+\n+    Copy files that have the CopyToOutputDirectory attribute set to 'IfDifferent'.\n+    ============================================================\n+    -->\n+  <Target\n+      Name=\"_CopyDifferingSourceItemsToOutputDirectory\"\n+      Condition=\" '@(_SourceItemsToCopyToOutputDirectoryIfDifferent)' != '' \">\n+\n+    <!--\n+        Using SkipUnchangedFiles=\"true\" because we want only differing files.\n+        -->\n+    <Copy",
              "author": {
                "login": "SimaTian"
              }
            },
            {
              "body": "There is one slight difference - KeepNewest doesn't copy the file if it changes in the destination after the previous build.\r\n\r\nThat can lead to unfortunate behaviors - e.g. when you are deploying config file, or DB or something like that during your build, but can alter it as part of tests - then new build wont reset the state - and that forces ppl to use 'Always'.\r\n\r\nThere are couple other similar scenarios - that's why the 'IfDifferent' was introduced",
              "createdAt": "2024-12-04T18:39:06Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -5366,6 +5385,37 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n   </Target>\n \n+  <!--\n+    ============================================================\n+                                        _CopyDifferingSourceItemsToOutputDirectory\n+\n+    Copy files that have the CopyToOutputDirectory attribute set to 'IfDifferent'.\n+    ============================================================\n+    -->\n+  <Target\n+      Name=\"_CopyDifferingSourceItemsToOutputDirectory\"\n+      Condition=\" '@(_SourceItemsToCopyToOutputDirectoryIfDifferent)' != '' \">\n+\n+    <!--\n+        Using SkipUnchangedFiles=\"true\" because we want only differing files.\n+        -->\n+    <Copy",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}