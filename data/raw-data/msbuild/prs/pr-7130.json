{
  "number": 7130,
  "title": "Enable nullable reference types by default ",
  "body": "### Context\r\n\r\nIn https://github.com/dotnet/msbuild/pull/7093#discussion_r759775351 we observed that adding `#nullable enable` would better document the intended nullness of values.\r\n\r\nIt would be good if new code was `#nullable enable` by default.\r\n\r\n### Changes Made\r\n\r\nThis turns C# 9's nullable reference types on by default for all projects in the solution, and opts out unannotated files by adding `#nullable disable` to them.\r\n\r\nThis has two nice properties:\r\n\r\n1. New code will be written with nullability in mind as the feature will be on by default.\r\n2. It's easy to find unannotated code by searching for `#nullable disable`.\r\n\r\n### Testing\r\n\r\nCI. The nullable reference types feature does not impact code at runtime, other than the addition of metadata.\r\n\r\n### Notes\r\n\r\nWe have taken this approach in the .NET Project System and in CPS, and it's worked very well for us.\r\n\r\nCode under `Deprecated` is unchanged.\r\n\r\nThis is the kind of change a team should discuss first. I was curious if it'd be an easy change for MSBuild and by the time I had an answer, I also had a PR. I will not be offended if this is not a change you wish to make at this time.",
  "state": "MERGED",
  "createdAt": "2021-12-06T23:22:45Z",
  "updatedAt": "2022-01-07T22:05:59Z",
  "closedAt": "2022-01-07T17:11:38Z",
  "mergedAt": "2022-01-07T17:11:38Z",
  "additions": 2833,
  "deletions": 38,
  "changedFiles": 1429,
  "headRefName": "dev/drnoakes/nullable-by-default",
  "isDraft": false,
  "author": {
    "login": "drewnoakes"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "cc006b994e5ef15c9c392502b88c2a3ee62972af",
          "message": "Enable nullable reference types by default\n\nThis turns C# 9's nullable reference types on by default for all projects in the solution, and opts out unannotated files by adding `#nullable disable` to them.\n\nThis has two nice properties:\n\n1. New code will be written with nullability in mind as the feature will be on by default.\n2. It's easy to find unannotated code by searching for `#nullable disable`.\n\nWe have taken this approach in the .NET Project System and in CPS, and it's worked very well for us.\n\nCode under `Deprecated` is unchanged.",
          "committedDate": "2021-12-07T02:22:59Z",
          "author": {
            "name": "Drew Noakes",
            "email": "git@drewnoakes.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1d7f189de5e83930964443a4653fbc731f43e000",
          "message": "Fix nullability warnings in CopyOnWriteDictionary",
          "committedDate": "2021-12-07T02:22:59Z",
          "author": {
            "name": "Drew Noakes",
            "email": "git@drewnoakes.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d7724ddea287eaacdff9298d81ed9a14d347318c",
          "message": "Fix nullability warnings in CopyOnWritePropertyDictionary_Tests",
          "committedDate": "2021-12-07T02:23:00Z",
          "author": {
            "name": "Drew Noakes",
            "email": "git@drewnoakes.com"
          }
        }
      },
      {
        "commit": {
          "oid": "65f31506e6dda38db2f7353a5a64413955dda03b",
          "message": "Merge branch 'main' into dev/drnoakes/nullable-by-default",
          "committedDate": "2021-12-17T12:07:24Z",
          "author": {
            "name": "Drew Noakes",
            "email": "git@drewnoakes.com"
          }
        }
      },
      {
        "commit": {
          "oid": "446aeb0480655192f567af0875978877696a2b85",
          "message": "Move #nullable directive outside of #if",
          "committedDate": "2021-12-17T12:08:47Z",
          "author": {
            "name": "Drew Noakes",
            "email": "git@drewnoakes.com"
          }
        }
      },
      {
        "commit": {
          "oid": "70143bef46685c8f713129cbd6915bb78ff14ba4",
          "message": "Merge remote-tracking branch 'upstream/main' into dev/drnoakes/nullable-by-default",
          "committedDate": "2022-01-02T12:08:13Z",
          "author": {
            "name": "Drew Noakes",
            "email": "git@drewnoakes.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I think I'm on board with this? I wasn't willing to do it myself and I still find the approach kinda ugly, but it does encourage modernization and make the old-and-busted unannotated files stand out. And I don't have a better approach--without a mechanism to enforce \"new files get nullable enabled by default/if you do major surgery in a file enable it\" we were just kinda sitting still.",
        "createdAt": "2021-12-06T23:29:45Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I made this change with a regex, matching on `^namespace `.\r\n\r\nThere are a lot of file changes here and reviewing is a pain. The strategy I used to validate this approach was review all files that had more or less than two line changes (the addition of `#nullable disable\\n\\n`). To do this:\r\n\r\n```\r\n$ git show cc006b994e5ef15c9c392502b88c2a3ee62972af --stat | grep -v \" 2 \"\r\n src/Build.UnitTests/BackEnd/IntegrationTests.cs                      | 4 +++-\r\n src/Build.UnitTests/BackEnd/TaskBuilder_Tests.cs                     | 3 +++\r\n src/Build.UnitTests/ConsoleOutputAlignerTests.cs                     | 1 -\r\n src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs                | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/CacheContext.cs            | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/CacheResult.cs             | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/PluginLoggerBase.cs        | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/PluginTargetResult.cs      | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs  | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/ProjectCacheItem.cs        | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/ProjectCachePluginBase.cs  | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs     | 1 -\r\n src/Build/BackEnd/Components/ProjectCache/ProxyTargets.cs            | 1 -\r\n src/Build/Logging/BinaryLogger/BinaryLogRecordKind.cs                | 4 +++-\r\n src/Build/Logging/ParallelLogger/ConsoleOutputAligner.cs             | 1 -\r\n src/Deprecated/Conversion/Microsoft.Build.Conversion.csproj          | 3 ++-\r\n src/Deprecated/Engine/Microsoft.Build.Engine.csproj                  | 3 ++-\r\n src/Directory.Build.props                                            | 1 +\r\n src/Framework/FileClassifier.cs                                      | 1 -\r\n src/Framework/ImmutableFilesTimestampCache.cs                        | 1 -\r\n src/Framework/TestInfo.cs                                            | 4 +++-\r\n src/Shared/ExceptionHandling.cs                                      | 4 ++++\r\n src/Shared/RegisteredTaskObjectCacheBase.cs                          | 3 ++-\r\n src/Shared/UnitTests/TestAssemblyInfo.cs                             | 5 +++--\r\n src/StringTools/StringTools.csproj                                   | 3 +--\r\n src/Tasks/GetCompatiblePlatform.cs                                   | 1 -\r\n```\r\n\r\nThe one-line changes are all removals of `#nullable enable` that previously existed.\r\n\r\nI reviewed all the others. There were some incorrect substitutions in code blocks. I've fixed those.\r\n\r\nThe other changes here look good to me.",
        "createdAt": "2021-12-07T10:06:42Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "> I made this change with a regex, matching on `^namespace `.\r\n\r\nI [learned this morning](https://devblogs.microsoft.com/visualstudio/whats-new-in-net-productivity-with-visual-studio-2022/) that there's a VS refactoring to do this!\r\n\r\nWe discussed this with the team and we're planning to go ahead with this approach--thanks for piloting it out for us!",
        "createdAt": "2021-12-16T17:36:33Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Just move this above the `#if`s?",
              "createdAt": "2021-12-16T17:49:25Z",
              "path": "src/Shared/ExceptionHandling.cs",
              "diffHunk": "@@ -2,6 +2,8 @@\n // Licensed under the MIT license. See LICENSE file in the project root for full license information.\n \n #if BUILDINGAPPXTASKS\n+#nullable disable\n+",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Fixed. Merged latest main and resolved conflict.",
              "createdAt": "2021-12-17T12:09:17Z",
              "path": "src/Shared/ExceptionHandling.cs",
              "diffHunk": "@@ -2,6 +2,8 @@\n // Licensed under the MIT license. See LICENSE file in the project root for full license information.\n \n #if BUILDINGAPPXTASKS\n+#nullable disable\n+",
              "author": {
                "login": "drewnoakes"
              }
            }
          ]
        }
      }
    ]
  }
}