{
  "number": 6695,
  "title": "Absolutize ref assembly path",
  "body": "Fixes #6543 \r\n\r\n### Context\r\n\r\n#6560 made `TargetRefPath` relative by mistake, which broke build in Visual Studio.\r\n\r\n### Changes Made\r\n\r\nUse `MSBuildProjectDirectory` to properly root the path.\r\n\r\n### Testing\r\n\r\nVerified that VS build works with this fix.\r\n\r\n### Notes\r\n\r\n```\r\n0:010> !pe\r\nException object: 0000020fa4de3a90\r\nException type:   System.IO.DirectoryNotFound\r\nExceptionMessage:          Could not find a part of the path 'C:\\WINDOWS\\system32\\obj\\Debug\\net6.0\\ref\\HelloWorld.dll'.\r\n\r\n0:010> !clrstack\r\nOS Thread Id: 0x95c (10)        Child SP               IP Call Site\r\n000000bc6023cf88 00007ffb12634ed9 [HelperMethodFrame: 000000bc6023cf88]\r\n000000bc6023d070 00007ffb037dba49 System.IO.__Error.WinIOError(Int32, System.String)\r\n000000bc6023d0c0 00007ffb0408d7e6 System.IO.File.InternalCopy(System.String, System.String, Boolean, Boolean)\r\n000000bc6023d150 00007ffaa7303d70 Microsoft.CodeAnalysis.BuildTasks.CopyRefAssembly.Copy()\r\n000000bc6023d1b0 00007ffaa7303bad Microsoft.CodeAnalysis.BuildTasks.CopyRefAssembly.Execute()\r\n```",
  "state": "MERGED",
  "createdAt": "2021-07-21T09:24:05Z",
  "updatedAt": "2021-07-22T08:27:22Z",
  "closedAt": "2021-07-21T20:46:47Z",
  "mergedAt": "2021-07-21T20:46:47Z",
  "additions": 1,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "fix-ref-path",
  "isDraft": false,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "9315c8a0a118984b9ef1fb84f1f08365fcff213d",
          "message": "Absolutize ref assembly path",
          "committedDate": "2021-07-21T09:19:51Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> It sounds like we should take this quickly, but can you explain why TargetRefPath was not an absolute path the previous way? It seems like it calls from IntrinsicFunctions.NormalizePath into FileUtilities.NormalizePath, then FileUtilities.GetFullPath, which calls various other GetFullPath methods depending on OS and (on Windows) if it's a UNC path.\r\n\r\nIntrinsicFunctions.NormalizePath indeed creates an absolute path but it is based on the current directory if passed a relative one. This is fine in basic builds because current directory == project directory. But it breaks in VS where, apparently, current directory is `C:\\WINDOWS\\system32` and probably in many other scenarios.",
        "createdAt": "2021-07-21T20:44:48Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Correct, apologies for the misleading title. Setting `IntermediateOutputPath` to an absolute path should actually not make this fail. `NormalizePath` internally calls `Path.Combine` which is documented to:\r\n\r\n_... if an argument other than the first contains a rooted path, any previous path components are ignored, and the returned string begins with that rooted path component._",
        "createdAt": "2021-07-21T22:00:32Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "> Correct, apologies for the misleading title. Setting `IntermediateOutputPath` to an absolute path should actually not make this fail. `NormalizePath` internally calls `Path.Combine` which is documented to:\r\n> \r\n> _... if an argument other than the first contains a rooted path, any previous path components are ignored, and the returned string begins with that rooted path component._\r\n\r\nOoh, nice! Didn't realize Combine was that smart.",
        "createdAt": "2021-07-21T22:05:59Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there validation that `$(IntermediateOutputPath)` is not an absolute path here?",
              "createdAt": "2021-07-21T14:42:01Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -325,7 +325,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <TargetPath Condition=\" '$(TargetPath)' == '' \">$(TargetDir)$(TargetFileName)</TargetPath>\n \n     <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' and ('$(ProduceReferenceAssemblyInOutDir)' == 'true' or '$([MSBuild]::AreFeaturesEnabled(17.0))' != 'true' ) \">$([MSBuild]::NormalizePath($(TargetDir), 'ref', $(TargetFileName)))</TargetRefPath>\n-    <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' \">$([MSBuild]::NormalizePath($(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>\n+    <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' \">$([MSBuild]::NormalizePath($(MSBuildProjectDirectory), $(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>",
              "author": {
                "login": "jaredpar"
              }
            },
            {
              "body": "Yes, it is defined here:\r\nhttps://github.com/dotnet/msbuild/blob/6dba77a45e3af8fe3058040b870bd5a5eb045962/src/Tasks/Microsoft.Common.CurrentVersion.targets#L159-L163\r\n\r\nThe default `$(IntermediateOutputPath)` ends up being something like `obj\\Debug` or `obj\\x64\\Debug`.",
              "createdAt": "2021-07-21T20:41:20Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -325,7 +325,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <TargetPath Condition=\" '$(TargetPath)' == '' \">$(TargetDir)$(TargetFileName)</TargetPath>\n \n     <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' and ('$(ProduceReferenceAssemblyInOutDir)' == 'true' or '$([MSBuild]::AreFeaturesEnabled(17.0))' != 'true' ) \">$([MSBuild]::NormalizePath($(TargetDir), 'ref', $(TargetFileName)))</TargetRefPath>\n-    <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' \">$([MSBuild]::NormalizePath($(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>\n+    <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' \">$([MSBuild]::NormalizePath($(MSBuildProjectDirectory), $(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "That would still mean that users could make this fail with something like `msbuild myProj.csproj /p:IntermediateOutputPath=C:\\foo\\bar`, right?",
              "createdAt": "2021-07-21T21:39:00Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -325,7 +325,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <TargetPath Condition=\" '$(TargetPath)' == '' \">$(TargetDir)$(TargetFileName)</TargetPath>\n \n     <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' and ('$(ProduceReferenceAssemblyInOutDir)' == 'true' or '$([MSBuild]::AreFeaturesEnabled(17.0))' != 'true' ) \">$([MSBuild]::NormalizePath($(TargetDir), 'ref', $(TargetFileName)))</TargetRefPath>\n-    <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' \">$([MSBuild]::NormalizePath($(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>\n+    <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' \">$([MSBuild]::NormalizePath($(MSBuildProjectDirectory), $(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Probably not. It calls `Path.Combine` internally which behaves nicely:\r\n![image](https://user-images.githubusercontent.com/25249058/126610104-6b19029c-a030-4648-b14f-794c4a02f88e.png)\r\n",
              "createdAt": "2021-07-22T08:27:21Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -325,7 +325,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <TargetPath Condition=\" '$(TargetPath)' == '' \">$(TargetDir)$(TargetFileName)</TargetPath>\n \n     <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' and ('$(ProduceReferenceAssemblyInOutDir)' == 'true' or '$([MSBuild]::AreFeaturesEnabled(17.0))' != 'true' ) \">$([MSBuild]::NormalizePath($(TargetDir), 'ref', $(TargetFileName)))</TargetRefPath>\n-    <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' \">$([MSBuild]::NormalizePath($(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>\n+    <TargetRefPath Condition=\" '$(TargetRefPath)' == '' and '$(ProduceReferenceAssembly)' == 'true' \">$([MSBuild]::NormalizePath($(MSBuildProjectDirectory), $(IntermediateOutputPath), 'ref', $(TargetFileName)))</TargetRefPath>",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      }
    ]
  }
}