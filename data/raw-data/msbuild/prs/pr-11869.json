{
  "number": 11869,
  "title": "Reset buildComplete after restore to ensure Ctrl+C will be respected \u2026",
  "body": "Fixes https://github.com/dotnet/msbuild/issues/11680\r\n\r\n### Context\r\nWhen dotnet build --framework net10.0, the msbuild args are with /target:Restore. so, it will restore only at first. , after restore successfully, it will set static property s_buildComplete. When build and ctrl+c, the s_buildComplete has been set and s_cancelComplete.Set(); So,  ctrl+c is not respected when build and ctrl+c\r\n\r\n### Changes Made\r\nResets the build completion event on every main() invocation\r\n\r\n### Testing\r\nTest manually with dotnet build ./test/dotnet.Tests/ --framework net10.0 in dotnet/sdk\r\n![image](https://github.com/user-attachments/assets/eca3f2d8-1ba8-4eca-97f6-5714ed6fd3b3)\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2025-05-20T10:13:08Z",
  "updatedAt": "2025-05-26T14:38:02Z",
  "closedAt": "2025-05-26T14:38:02Z",
  "mergedAt": "2025-05-26T14:38:02Z",
  "additions": 3,
  "deletions": 0,
  "changedFiles": 1,
  "headRefName": "dev/jennybai/issue11680",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "4d1ea6bf0ce3236bc54cccbf3700faab4bda7ef6",
          "message": "Reset buildComplete after restore to ensure Ctrl+C will be respected in the build phase",
          "committedDate": "2025-05-20T10:07:25Z",
          "author": {
            "name": "Jenny Bai (BEYONDSOFT CONSULTING INC)",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3d10c7fafda9a3fb4d12ad9b39cf37fd142e2b39",
          "message": "Reset buildComplete on every main invocation",
          "committedDate": "2025-05-21T01:55:15Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fbca72f59eaac5940af7e2bd22a4c9bc211ee42b",
          "message": "Move buildComplete set to Execute method",
          "committedDate": "2025-05-23T10:08:14Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "after discussion with @rainersigwald - this change should be executed on every main() invocation\r\n\r\nPlease adjust the code and test it.",
              "createdAt": "2025-05-20T14:11:27Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -1620,6 +1620,11 @@ internal static bool BuildProject(\n \n                             if (!restoreOnly)\n                             {\n+                                // Reset buildComplete after restore to ensure Ctrl+C will be respected in the build phase.\n+                                // This fixes an issue where Ctrl+C doesn't cancel the build when --framework is used,\n+                                // because the restore operation has already set s_buildComplete.\n+                                s_buildComplete.Reset();",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "Updated",
              "createdAt": "2025-05-21T07:54:20Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -1620,6 +1620,11 @@ internal static bool BuildProject(\n \n                             if (!restoreOnly)\n                             {\n+                                // Reset buildComplete after restore to ensure Ctrl+C will be respected in the build phase.\n+                                // This fixes an issue where Ctrl+C doesn't cancel the build when --framework is used,\n+                                // because the restore operation has already set s_buildComplete.\n+                                s_buildComplete.Reset();",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Can you actually move this into `Execute()`? For the we're-just-starting-a-Server-request scenario we don't have to do this.",
              "createdAt": "2025-05-21T15:11:04Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -251,6 +251,9 @@ string[] args\n             // Initialize OpenTelemetry infrastructure\n             OpenTelemetryManager.Instance.Initialize(isStandalone: true);\n \n+            // Resets the build completion event, signaling that a new build process is starting.\n+            s_buildComplete.Reset();",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Thanks for your suggestions. Updated",
              "createdAt": "2025-05-23T10:34:15Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -251,6 +251,9 @@ string[] args\n             // Initialize OpenTelemetry infrastructure\n             OpenTelemetryManager.Instance.Initialize(isStandalone: true);\n \n+            // Resets the build completion event, signaling that a new build process is starting.\n+            s_buildComplete.Reset();",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      }
    ]
  }
}