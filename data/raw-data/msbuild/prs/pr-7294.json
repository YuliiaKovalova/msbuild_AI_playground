{
  "number": 7294,
  "title": "Account for ARM64 in ProcessorArchitecture Tests",
  "body": "Fixes #7292\r\n\r\n### Context\r\nProcessorArchitecture unit tests needed to be updated to account for arm64 machines.\r\n\r\n### Changes Made\r\nAccounts for arm64 as a valid processor architecture\r\n\r\n### Testing\r\nTested locally on an m1 mac.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2022-01-13T22:22:10Z",
  "updatedAt": "2025-03-20T15:42:14Z",
  "closedAt": "2022-01-26T08:20:31Z",
  "mergedAt": "2022-01-26T08:20:30Z",
  "additions": 14,
  "deletions": 2,
  "changedFiles": 2,
  "headRefName": "arm64-processorarch-ut",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "fdc0f9351c72b8b8d0a7b46765bb2a0f36101b07",
          "message": "Account for ARM64 in ProcessorArchitecture Tests",
          "committedDate": "2022-01-13T22:21:05Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1ac3a70e559088148d08dd54e2cd219e9ff2e8ec",
          "message": "Add arm64 case when checking bitness",
          "committedDate": "2022-01-14T23:37:58Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "071fdc6970f41caab2c18dc14525ab9672b1f451",
          "message": "Return ARM processor arch when looking for 32-bit ARM64",
          "committedDate": "2022-01-14T23:40:02Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Tested this on my m1 mac and got a successful `./build.sh --test`",
        "createdAt": "2022-01-14T23:43:48Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "super-nit: The comment should have `ARM64` to match the rest of the assertions in this method.",
              "createdAt": "2022-01-19T15:17:51Z",
              "path": "src/Utilities.UnitTests/ProcessorArchitecture_Tests.cs",
              "diffHunk": "@@ -35,6 +36,7 @@ public void ValidateProcessorArchitectureStrings()\n             ProcessorArchitecture.AMD64.ShouldBe(\"AMD64\"); // \"AMD64 ProcessorArchitecture isn't correct\"\n             ProcessorArchitecture.MSIL.ShouldBe(\"MSIL\"); // \"MSIL ProcessorArchitecture isn't correct\"\n             ProcessorArchitecture.ARM.ShouldBe(\"ARM\"); // \"ARM ProcessorArchitecture isn't correct\"\n+            ProcessorArchitecture.ARM64.ShouldBe(\"ARM64\"); // \"ARM ProcessorArchitecture isn't correct\"",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "It looks like the original purpose of `ConvertDotNetFrameworkArchitectureToProcessorArchitecture` was to make it possible to compose 32-bit paths on AMD64. The AMD64 .NET Framework environment is special in that it guarantees the presence of the x86 version of .NET Framework + SDKs.\r\n\r\nI don't believe this applies to ARM, be it Core or Framework. In fact, `ProcessorArchitectures.ARM` is not a supported architecture at all and should be removed. Together with `IA64` \ud83d\ude09 \r\n\r\nNo harm in the way it is written now as the scenarios just don't exist but high-level I don't think the code makes sense. If you look at where the result of this method is used (outside of tests), you'll see it's very AMD64 / x86 centric. I wonder if other architectures (so only `ARM64` as everything else is dead) shouldn't be handled differently in the top-level ToolLocationHelper methods.\r\n\r\nJust a nit/rant, totally OK to leave it as is.",
              "createdAt": "2022-01-19T15:43:54Z",
              "path": "src/Utilities/ToolLocationHelper.cs",
              "diffHunk": "@@ -3399,7 +3399,8 @@ internal static string ConvertDotNetFrameworkArchitectureToProcessorArchitecture\n             switch (architecture)\n             {\n                 case DotNetFrameworkArchitecture.Bitness32:\n-                    if (ProcessorArchitecture.CurrentProcessArchitecture == ProcessorArchitecture.ARM)\n+                    if (ProcessorArchitecture.CurrentProcessArchitecture == ProcessorArchitecture.ARM ||\n+                        ProcessorArchitecture.CurrentProcessArchitecture == ProcessorArchitecture.ARM64)",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}