{
  "number": 7270,
  "title": "SA1504 All accessors should be single-line or multi-line",
  "body": "Relates to #7174\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1504.md",
  "state": "MERGED",
  "createdAt": "2022-01-12T07:59:53Z",
  "updatedAt": "2022-01-21T11:06:02Z",
  "closedAt": "2022-01-21T08:42:41Z",
  "mergedAt": "2022-01-21T08:42:41Z",
  "additions": 79,
  "deletions": 19,
  "changedFiles": 10,
  "headRefName": "SA1504",
  "isDraft": false,
  "author": {
    "login": "elachlan"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "fb1eb3b4fbacb3c82a20921a7686a08714aeb0a9",
          "message": "SA1504 All accessors should be single-line or multi-line",
          "committedDate": "2022-01-12T07:59:32Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "aac5ca3aa4dabb5cbe4dcfa684c0ece9eb0cf43f",
          "message": "Fix weird code fix error",
          "committedDate": "2022-01-12T08:08:29Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4b514938bca490ddeb6d9089636614addeaaaec6",
          "message": "Fix missing comment",
          "committedDate": "2022-01-13T11:49:51Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6f37db8d42637298b15a65f19ce575a18d58ada9",
          "message": "Fix missing comment",
          "committedDate": "2022-01-18T22:27:44Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I think this is a temporary test failure.",
        "createdAt": "2022-01-12T08:42:29Z",
        "author": {
          "login": "elachlan"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this comment deleted intentionally?",
              "createdAt": "2022-01-13T10:39:06Z",
              "path": "src/Tasks/GenerateResource.cs",
              "diffHunk": "@@ -259,11 +259,13 @@ public string StronglyTypedLanguage\n         {\n             set\n             {\n-                // Since this string is passed directly into the framework, we don't want to\n-                // try to validate it -- that might prevent future expansion of supported languages.",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This property looks like a candidate for the single-line version. Would this not fix the warning?\r\n\r\n```C#\r\n            get { return InitialTargets; }\r\n            set { InitialTargets = value; }\r\n```\r\n\r\nSame for a couple of similar props in this PR.",
              "createdAt": "2022-01-13T10:43:49Z",
              "path": "src/Build/Instance/ProjectInstance.cs",
              "diffHunk": "@@ -1074,8 +1080,14 @@ public bool IsImmutable\n         {\n             [DebuggerStepThrough]\n             get\n-            { return InitialTargets; }\n-            set { InitialTargets = value; }\n+            {\n+                return InitialTargets;\n+            }\n+\n+            set\n+            {\n+                InitialTargets = value;\n+            }",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "I tried, but I still get an error because of the `[DebuggerStepThrough]` attribute. We need to probably raise another issue for the analyzer.",
              "createdAt": "2022-01-13T11:50:53Z",
              "path": "src/Build/Instance/ProjectInstance.cs",
              "diffHunk": "@@ -1074,8 +1080,14 @@ public bool IsImmutable\n         {\n             [DebuggerStepThrough]\n             get\n-            { return InitialTargets; }\n-            set { InitialTargets = value; }\n+            {\n+                return InitialTargets;\n+            }\n+\n+            set\n+            {\n+                InitialTargets = value;\n+            }",
              "author": {
                "login": "elachlan"
              }
            },
            {
              "body": "Raised an issue at https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/3434",
              "createdAt": "2022-01-13T11:56:54Z",
              "path": "src/Build/Instance/ProjectInstance.cs",
              "diffHunk": "@@ -1074,8 +1080,14 @@ public bool IsImmutable\n         {\n             [DebuggerStepThrough]\n             get\n-            { return InitialTargets; }\n-            set { InitialTargets = value; }\n+            {\n+                return InitialTargets;\n+            }\n+\n+            set\n+            {\n+                InitialTargets = value;\n+            }",
              "author": {
                "login": "elachlan"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is it unintentionally missing comment also?",
              "createdAt": "2022-01-13T13:19:04Z",
              "path": "src/Build/Evaluation/LazyItemEvaluator.OrderedItemDataCollection.cs",
              "diffHunk": "@@ -52,10 +52,13 @@ internal Builder(ImmutableList<ItemData>.Builder listBuilder)\n \n                 public ItemData this[int index]\n                 {\n-                    get { return _listBuilder[index]; }\n+                    get\n+                    {\n+                        return _listBuilder[index];\n+                    }\n+\n                     set\n                     {\n-                        // Update the dictionary if it exists.",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      }
    ]
  }
}