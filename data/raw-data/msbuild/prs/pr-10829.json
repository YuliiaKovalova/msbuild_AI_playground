{
  "number": 10829,
  "title": "Fix build with langversion preview",
  "body": "> /vmr/src/msbuild/src/Build/Evaluation/Profiler/EvaluationLocationPrettyPrinterBase.cs(78,24): error CS0121: The call is ambiguous between the following methods or properties: 'string.Join(string?, params ReadOnlySpan<object?>)' and 'string.Join(string?, params ReadOnlySpan<string?>)' [/vmr/src/msbuild/src/Build/Microsoft.Build.csproj::TargetFramework=net9.0]\r\n\r\npr https://github.com/dotnet/sdk/pull/44011/checks?check_run_id=31628922599\r\nbuild https://dev.azure.com/dnceng-public/public/_build/results?buildId=844822&view=logs&jobId=f0f4e1eb-2872-579b-17f7-75dc26fbb285&j=f0f4e1eb-2872-579b-17f7-75dc26fbb285&t=e5ca527a-fe4f-597c-4330-d9b726220892",
  "state": "MERGED",
  "createdAt": "2024-10-16T17:35:17Z",
  "updatedAt": "2024-10-17T07:00:13Z",
  "closedAt": "2024-10-17T06:59:31Z",
  "mergedAt": "2024-10-17T06:59:31Z",
  "additions": 3,
  "deletions": 4,
  "changedFiles": 2,
  "headRefName": "patch-2",
  "isDraft": false,
  "author": {
    "login": "kasperk81"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8dc7b5b353d074373300d39d471ed86a17c565f8",
          "message": "Fix build with langversion preview",
          "committedDate": "2024-10-16T17:34:19Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e7ba933f0f7be5db190b1ff56d5554fd4a75bb68",
          "message": "AnalysisLevel=preview fix",
          "committedDate": "2024-10-16T17:36:23Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fdb2c37204de419790c4e0d9e74b8ffe44090040",
          "message": "feedback",
          "committedDate": "2024-10-16T17:47:13Z",
          "author": {
            "name": "kasperk81",
            "email": "83082615+kasperk81@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@surayya-MS can you please merge this to unblock sdk codeflow? https://github.com/dotnet/sdk/pull/44011",
        "createdAt": "2024-10-17T06:56:08Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "> @surayya-MS can you please merge this to unblock sdk codeflow? [dotnet/sdk#44011](https://github.com/dotnet/sdk/pull/44011)\r\n\r\nsure, since it's approved",
        "createdAt": "2024-10-17T06:59:23Z",
        "author": {
          "login": "surayya-MS"
        }
      },
      {
        "body": "Thank you!",
        "createdAt": "2024-10-17T07:00:11Z",
        "author": {
          "login": "kasperk81"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "AFAICT, the better fix is to remove the `[` and `]`, then it becomes an expanded params call to either string[] or `ReadOnlySpan<string>`, depending on the TFM you're building against.\r\n\r\nIf for some reason you're building against a new TFM but hoping that it magically works against an older one, this does force it to go to the older codepath (and allocate the array in order to do so)",
              "createdAt": "2024-10-16T17:45:52Z",
              "path": "src/Build/Evaluation/Profiler/EvaluationLocationPrettyPrinterBase.cs",
              "diffHunk": "@@ -75,7 +75,7 @@ protected static string GetElementOrConditionText(string description, Evaluation\n         protected void AppendDefaultHeaderWithSeparator(StringBuilder stringBuilder, string separator)\n         {\n             stringBuilder.AppendLine(\n-                string.Join(separator, [\"Id\", \"ParentId\", \"Pass\", \"File\", \"Line #\", \"Expression\", \"Inc (ms)\", \"Inc (%)\", \"Exc (ms)\",\n+                string.Join(separator, (string[])[\"Id\", \"ParentId\", \"Pass\", \"File\", \"Line #\", \"Expression\", \"Inc (ms)\", \"Inc (%)\", \"Exc (ms)\",",
              "author": {
                "login": "bartonjs"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this required/related to the main overload-resolution change?",
              "createdAt": "2024-10-16T18:09:10Z",
              "path": "src/Build/Definition/ToolsetRegistryReader.cs",
              "diffHunk": "@@ -63,7 +62,7 @@ internal ToolsetRegistryReader(PropertyDictionary<ProjectPropertyInstance> envir\n         internal ToolsetRegistryReader(PropertyDictionary<ProjectPropertyInstance> environmentProperties, PropertyDictionary<ProjectPropertyInstance> globalProperties, RegistryKeyWrapper msbuildRegistryWrapper)\n             : base(environmentProperties, globalProperties)\n         {\n-            error.VerifyThrowArgumentNull(msbuildRegistryWrapper, nameof(msbuildRegistryWrapper));\n+            ErrorUtilities.VerifyThrowArgumentNull(msbuildRegistryWrapper, nameof(msbuildRegistryWrapper));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "it was an analyzer error with `LangVersion=preview` and `AnalysisLevel=preview`:\r\n `error CS8981: The type name 'error' only contains lower-cased ascii characters. Such names may become reserved for the language.`",
              "createdAt": "2024-10-16T18:15:47Z",
              "path": "src/Build/Definition/ToolsetRegistryReader.cs",
              "diffHunk": "@@ -63,7 +62,7 @@ internal ToolsetRegistryReader(PropertyDictionary<ProjectPropertyInstance> envir\n         internal ToolsetRegistryReader(PropertyDictionary<ProjectPropertyInstance> environmentProperties, PropertyDictionary<ProjectPropertyInstance> globalProperties, RegistryKeyWrapper msbuildRegistryWrapper)\n             : base(environmentProperties, globalProperties)\n         {\n-            error.VerifyThrowArgumentNull(msbuildRegistryWrapper, nameof(msbuildRegistryWrapper));\n+            ErrorUtilities.VerifyThrowArgumentNull(msbuildRegistryWrapper, nameof(msbuildRegistryWrapper));",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "Is the sourcebuild leg really changing our langversion? That seems bad for unrelated reasons.\r\n\r\nAlso how do you know? I don't see this error in the SDK build failure.\r\n\r\nBut in any case this change is fine, it was ugly before :)\r\n",
              "createdAt": "2024-10-16T18:20:29Z",
              "path": "src/Build/Definition/ToolsetRegistryReader.cs",
              "diffHunk": "@@ -63,7 +62,7 @@ internal ToolsetRegistryReader(PropertyDictionary<ProjectPropertyInstance> envir\n         internal ToolsetRegistryReader(PropertyDictionary<ProjectPropertyInstance> environmentProperties, PropertyDictionary<ProjectPropertyInstance> globalProperties, RegistryKeyWrapper msbuildRegistryWrapper)\n             : base(environmentProperties, globalProperties)\n         {\n-            error.VerifyThrowArgumentNull(msbuildRegistryWrapper, nameof(msbuildRegistryWrapper));\n+            ErrorUtilities.VerifyThrowArgumentNull(msbuildRegistryWrapper, nameof(msbuildRegistryWrapper));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "i saw how runtime repo builds it. runtime repo has LangVersion=preview and AnalysisLevel=preview to avoid \"VMR is now on latest roslyn complaining\". so good idea to use preview. i used that locally to repro.",
              "createdAt": "2024-10-16T18:26:44Z",
              "path": "src/Build/Definition/ToolsetRegistryReader.cs",
              "diffHunk": "@@ -63,7 +62,7 @@ internal ToolsetRegistryReader(PropertyDictionary<ProjectPropertyInstance> envir\n         internal ToolsetRegistryReader(PropertyDictionary<ProjectPropertyInstance> environmentProperties, PropertyDictionary<ProjectPropertyInstance> globalProperties, RegistryKeyWrapper msbuildRegistryWrapper)\n             : base(environmentProperties, globalProperties)\n         {\n-            error.VerifyThrowArgumentNull(msbuildRegistryWrapper, nameof(msbuildRegistryWrapper));\n+            ErrorUtilities.VerifyThrowArgumentNull(msbuildRegistryWrapper, nameof(msbuildRegistryWrapper));",
              "author": {
                "login": "kasperk81"
              }
            }
          ]
        }
      }
    ]
  }
}