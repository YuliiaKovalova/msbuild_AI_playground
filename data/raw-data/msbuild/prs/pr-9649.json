{
  "number": 9649,
  "title": "ToolTask process start separated to another function",
  "body": "Fix for https://github.com/dotnet/msbuild/issues/9404\r\n\r\n### Context\r\nWe currently do not send the cancelation event to tasks being run by `ToolTask`, as such, many children task take a long time to cancel, and sometimes they finish executing before said cancelation. \r\nThis change makes it possible for inherited classes to access the process and check the cancelation event during execution.\r\n\r\n### Changes Made\r\nSeparated the start of the process to another function that is overridable, as well as exposing the process information.\r\n\r\n### Notes\r\n\r\nIssue will only be closed once C++ team has incorporated this change into the `CustomBuild` task.\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2024-01-16T19:08:43Z",
  "updatedAt": "2024-08-07T10:10:51Z",
  "closedAt": "2024-01-19T16:05:22Z",
  "mergedAt": "2024-01-19T16:05:22Z",
  "additions": 14,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "9404",
  "isDraft": false,
  "author": {
    "login": "maridematte"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "9ddf85e66214f997057aec17f33b278f4bd909c3",
          "message": "Separated process start to another function",
          "committedDate": "2024-01-16T19:08:01Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "79ebf7b5b79416108639b234aa208f17033c2c42",
          "message": "Adjusted Start function",
          "committedDate": "2024-01-17T17:19:52Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2bd0e1317044d23a62dd555a9478b93e910e3095",
          "message": "Added bigger description on the method",
          "committedDate": "2024-01-18T18:03:07Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a17b8c2faa3fff74a4db92f6e169f04422cf5629",
          "message": "Adjusted commend on new function for PR review",
          "committedDate": "2024-01-19T14:10:05Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Hey @olgaark, wanted to check if something like this is enough to help solve the issue described",
        "createdAt": "2024-01-16T19:09:40Z",
        "author": {
          "login": "maridematte"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "StartToolProcess would be more descriptive. \r\nAnd it should be\r\nproc = Start*(proc) as override will return a different process object.",
              "createdAt": "2024-01-16T19:31:40Z",
              "path": "src/Utilities/ToolTask.cs",
              "diffHunk": "@@ -714,7 +720,7 @@ private string GetTemporaryResponseFile(string responseFileCommands, out string\n                 ExitCode = -1;\n \n                 // Start the process\n-                proc.Start();\n+                StartTask(proc);",
              "author": {
                "login": "olgaark"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Please add good doc comments. The more, the better, as this will end up on learn.microsoft.com as public API documentation.",
              "createdAt": "2024-01-17T21:21:22Z",
              "path": "src/Utilities/ToolTask.cs",
              "diffHunk": "@@ -658,6 +658,17 @@ private string GetTemporaryResponseFile(string responseFileCommands, out string\n             return startInfo;\n         }\n \n+        /// <summary>\n+        /// Starts the process during task execution\n+        /// </summary>\n+        /// <param name=\"proc\"></param>\n+        /// <returns></returns>",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: Delete or fill in properly",
              "createdAt": "2024-01-18T18:53:25Z",
              "path": "src/Utilities/ToolTask.cs",
              "diffHunk": "@@ -658,6 +658,19 @@ private string GetTemporaryResponseFile(string responseFileCommands, out string\n             return startInfo;\n         }\n \n+        /// <summary>\n+        /// Expect task to override this method if they need information about the process or process events during task execution.\n+        /// Implementation should make sure that the task is started in this method.\n+        /// Starts the process during task execution. \n+        /// </summary>\n+        /// <param name=\"proc\">Process that will be executed by ToolTask</param>\n+        /// <returns></returns>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n        /// Expect tasks to override this method if they need information about the tool process or its process events,\r\n        /// or if they want to customize process creation.\r\n```",
              "createdAt": "2024-01-19T07:52:29Z",
              "path": "src/Utilities/ToolTask.cs",
              "diffHunk": "@@ -659,9 +659,11 @@ private string GetTemporaryResponseFile(string responseFileCommands, out string\n         }\n \n         /// <summary>\n-        /// Starts the process during task execution\n+        /// Expect task to override this method if they need information about the process or process events during task execution.",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        /// <param name=\"proc\">Fully populated <see cref=\"Process\"/> instance representing the tool process to be started.</param>\r\n        /// <returns>A started process. This could be <paramref name=\"proc\"/> or another <see cref=\"Process\"/> instance.</returns>\r\n```",
              "createdAt": "2024-01-19T08:03:39Z",
              "path": "src/Utilities/ToolTask.cs",
              "diffHunk": "@@ -659,9 +659,11 @@ private string GetTemporaryResponseFile(string responseFileCommands, out string\n         }\n \n         /// <summary>\n-        /// Starts the process during task execution\n+        /// Expect task to override this method if they need information about the process or process events during task execution.\n+        /// Implementation should make sure that the task is started in this method.\n+        /// Starts the process during task execution. \n         /// </summary>\n-        /// <param name=\"proc\"></param>\n+        /// <param name=\"proc\">Process that will be executed by ToolTask</param>\n         /// <returns></returns>",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: `task` -> `process`? Or maybe remove this line as this is included in the `<param>` and `<returns>` sections below?",
              "createdAt": "2024-01-19T15:18:57Z",
              "path": "src/Utilities/ToolTask.cs",
              "diffHunk": "@@ -659,12 +659,12 @@ private string GetTemporaryResponseFile(string responseFileCommands, out string\n         }\n \n         /// <summary>\n-        /// Expect task to override this method if they need information about the process or process events during task execution.\n+        /// We expect tasks to override this method if they need information about the tool process or its process events during task execution.\n         /// Implementation should make sure that the task is started in this method.",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "I went with `task` as it is what is written in the other comments for function in the `ToolTask`. I think we can leave it as it described the intention of the method, and it also adds that this function will be called during the execution.",
              "createdAt": "2024-01-19T15:23:19Z",
              "path": "src/Utilities/ToolTask.cs",
              "diffHunk": "@@ -659,12 +659,12 @@ private string GetTemporaryResponseFile(string responseFileCommands, out string\n         }\n \n         /// <summary>\n-        /// Expect task to override this method if they need information about the process or process events during task execution.\n+        /// We expect tasks to override this method if they need information about the tool process or its process events during task execution.\n         /// Implementation should make sure that the task is started in this method.",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "I see, makes sense to leave it then. Thank you!",
              "createdAt": "2024-01-19T15:39:48Z",
              "path": "src/Utilities/ToolTask.cs",
              "diffHunk": "@@ -659,12 +659,12 @@ private string GetTemporaryResponseFile(string responseFileCommands, out string\n         }\n \n         /// <summary>\n-        /// Expect task to override this method if they need information about the process or process events during task execution.\n+        /// We expect tasks to override this method if they need information about the tool process or its process events during task execution.\n         /// Implementation should make sure that the task is started in this method.",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}