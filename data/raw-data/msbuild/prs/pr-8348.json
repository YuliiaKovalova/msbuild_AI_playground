{
  "number": 8348,
  "title": "Replacing traits used to skip certain test cases with custom `Theory` and `Fact` attributes",
  "body": "Related to https://github.com/dotnet/msbuild/issues/8329\r\n\r\n### Context\r\nCurrent approach skipping test cases using traits doesn't skip tests cases when running in VS.\r\nIn CI tests are ignored as never existed, without any messages.\r\n\r\n### Changes Made\r\nImplemented platform specific `Theory` and `Fact` attributes\r\nApplied them instead `PlatformSpecific`  and `SkipOnTargetFramework` traits.\r\nCreated `LongPathSupportDisabledFactAttribute` to handle tests only allowed when long path support is disabled (though those  tests never run, see https://github.com/dotnet/msbuild/issues/8349)\r\nRemoved attributes and traits related to mono.\r\n\r\n### Testing\r\nManually tested in VS to see that the tests are indeed skipped with proper error message.\r\nChecked CI runs too.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-01-24T12:27:46Z",
  "updatedAt": "2023-01-31T11:45:05Z",
  "closedAt": "2023-01-31T11:45:04Z",
  "mergedAt": "2023-01-31T11:45:04Z",
  "additions": 753,
  "deletions": 1154,
  "changedFiles": 107,
  "headRefName": "custom-fact-theory",
  "isDraft": false,
  "author": {
    "login": "vlada-shubina"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "6e3dca4d1555a4b59c78c783a5207441e9bcde7e",
          "message": "implemented custom platform specific Theory and Fact attributes\n\napplied them to easy cases",
          "committedDate": "2023-01-26T17:32:11Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ebab00304237ce9de49c2f749e8a6e2661670342",
          "message": "added target framework specific theory-fact attributes, replaced usage of `SkipOnTargetFramework`",
          "committedDate": "2023-01-26T17:32:12Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fec0aa338215e788b8e0de4dfc3c65699fb934cf",
          "message": "implemented `LongPathSupportEnabledFactAttribute` for tests that only run when long path support is enabled",
          "committedDate": "2023-01-26T17:32:12Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e191182b5f366d69167a6ca61ba8c97a0db7a3d0",
          "message": "cleaned up mono-related attributes",
          "committedDate": "2023-01-26T17:32:13Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c0a8d28f702a9c9b522d31f93f7d76704b02db7c",
          "message": "inverted condition - misunderstood the logic first",
          "committedDate": "2023-01-26T17:32:14Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d3b28222196a5bd4391a100e8d7b230d5f72b0d9",
          "message": "addressed the feedback: renaming and removing `IsRunningOnNetStandard`",
          "committedDate": "2023-01-26T17:32:14Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e52cd9a3d15cbff8bd0bfa561eb8728ccd0c6d18",
          "message": "moved `CustomXunitAttributesUtilities` to `Xunit.NetCore.Extensions`",
          "committedDate": "2023-01-30T14:19:01Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "982fea9953d7114cbdb5e16427c2244ff7e463d9",
          "message": "removed usage NativeMethodsShared.IsWindows to skip the tests",
          "committedDate": "2023-01-30T14:39:50Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "The SDK repo has something similar. I wonder if it wouldn't be worth aligning the names and signatures (or just copying those attributes).\r\nExample: https://github.com/dotnet/sdk/blob/main/src/Tests/Microsoft.NET.TestFramework/Attributes/PlatformSpecificFact.cs",
        "createdAt": "2023-01-24T13:45:03Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "> The SDK repo has something similar. I wonder if it wouldn't be worth aligning the names and signatures (or just copying those attributes). Example: https://github.com/dotnet/sdk/blob/main/src/Tests/Microsoft.NET.TestFramework/Attributes/PlatformSpecificFact.cs\r\n\r\nSDK has most of this attributes too: https://github.com/dotnet/sdk/blob/main/src/Tests/Microsoft.NET.TestFramework/Attributes/WindowsOnlyFactAttribute.cs for example.\r\n\r\nI just added the additional message as many tests gave the reason why they are skipped in comment which won't be visible in anywhere else.\r\n\r\nThe next step will be to try to contribute to [arcade](https://github.com/dotnet/arcade/tree/main/src/Microsoft.DotNet.XUnitExtensions) with same attributes. \r\n\r\nIf those are approved, they can be used from any repo using the arcade: sdk / installer / msbuild, and others.",
        "createdAt": "2023-01-24T14:20:25Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "> Ah, I'm blind.\r\n> \r\n> That's a great plan. Although I'm still finding it odd that this functionality is not already in arcade. We (and the SDK) cannot be the first teams hitting this. Is there a way to make the tests honor the existing traits outside of `build -test`? Whether they show as skipped or are completely filtered is not a big deal, IMO.\r\n\r\nTraits is meant to be used for categorization; and not skipping the tests. Test Explorer UX is built around this: filtering and grouping by traits.\r\n\r\nThe \"skipping\" features based on traits in arcade were implemented long ago, note that they also have custom XUnit runner. The feature this PR is using is quite new: https://github.com/xunit/xunit/issues/2073. I believe it's just legacy way of doing it as https://github.com/xunit/xunit/issues/2073 was not available at the time and there was a need for this feature.  \r\nI can ask people around if they know anything about this part. \r\n\r\nimo, the reason why it is implemented in each repo separately simply as it's very easy to do it; but i agree it's not a great practice.",
        "createdAt": "2023-01-24T14:51:54Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "The tests marked with `LongPathSupportDisabledFactAttribute` are never run on CI, and locally in most case too.\r\nThey need Windows OS where long path support is disabled, but it's not the case for CI.\r\n\r\nCreated issue to address that: https://github.com/dotnet/msbuild/issues/8349",
        "createdAt": "2023-01-24T17:22:37Z",
        "author": {
          "login": "vlada-shubina"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: .NET Standard is not really something to be running on. How about replacing `IsRunningOn...` with `IsBuiltAgainst...`?",
              "createdAt": "2023-01-24T14:35:39Z",
              "path": "src/Xunit.NetCore.Extensions/Utilities.cs",
              "diffHunk": "@@ -0,0 +1,32 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+namespace Xunit.NetCore.Extensions\n+{\n+    internal static class Utilities\n+    {\n+#if NETFRAMEWORK\n+        public static bool IsRunningOnNet => false;\n+\n+        public static bool IsRunningOnNetStandard => false;\n+\n+        public static bool IsRunningOnNetFramework => true;\n+#elif NETSTANDARD\n+        public static bool IsRunningOnNet => false;\n+\n+        public static bool IsRunningOnNetFramework => false;\n+\n+        public static bool IsRunningOnNetStandard => true;",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "I removed `standard` - indeed it's never used. If needed - it can be added; and changed the property names as suggested.",
              "createdAt": "2023-01-24T22:09:52Z",
              "path": "src/Xunit.NetCore.Extensions/Utilities.cs",
              "diffHunk": "@@ -0,0 +1,32 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+namespace Xunit.NetCore.Extensions\n+{\n+    internal static class Utilities\n+    {\n+#if NETFRAMEWORK\n+        public static bool IsRunningOnNet => false;\n+\n+        public static bool IsRunningOnNetStandard => false;\n+\n+        public static bool IsRunningOnNetFramework => true;\n+#elif NETSTANDARD\n+        public static bool IsRunningOnNet => false;\n+\n+        public static bool IsRunningOnNetFramework => false;\n+\n+        public static bool IsRunningOnNetStandard => true;",
              "author": {
                "login": "vlada-shubina"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Looks like these conditions could be cleaned up too.",
              "createdAt": "2023-01-27T16:05:10Z",
              "path": "src/Build.UnitTests/Definition/ToolsetReader_Tests.cs",
              "diffHunk": "@@ -92,7 +92,7 @@ private void DeleteTestRegistryKey()\n         /// Test to make sure machine.config file has the section registered\n         /// and we are picking it up from there.\n         /// </summary>\n-        [Fact]\n+        [WindowsOnlyFact]\n         public void GetToolsetDataFromConfiguration_SectionNotRegisteredInConfigFile()\n         {\n             if (!NativeMethodsShared.IsWindows)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Removed obsolete conditions too",
              "createdAt": "2023-01-30T14:21:41Z",
              "path": "src/Build.UnitTests/Definition/ToolsetReader_Tests.cs",
              "diffHunk": "@@ -92,7 +92,7 @@ private void DeleteTestRegistryKey()\n         /// Test to make sure machine.config file has the section registered\n         /// and we are picking it up from there.\n         /// </summary>\n-        [Fact]\n+        [WindowsOnlyFact]\n         public void GetToolsetDataFromConfiguration_SectionNotRegisteredInConfigFile()\n         {\n             if (!NativeMethodsShared.IsWindows)",
              "author": {
                "login": "vlada-shubina"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why does this need to be in Shared instead of made public in this assembly?",
              "createdAt": "2023-01-27T16:10:22Z",
              "path": "src/Xunit.NetCore.Extensions/Xunit.NetCore.Extensions.csproj",
              "diffHunk": "@@ -9,4 +9,7 @@\n   <ItemGroup>\n     <PackageReference Include=\"xunit.core\" />\n   </ItemGroup>\n+  <ItemGroup>\n+    <Compile Include=\"..\\Shared\\UnitTests\\CustomXunitAttributesUtilities.cs\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "No need for that, moved to `Xunit.NetCore.Extensions`.",
              "createdAt": "2023-01-30T14:22:31Z",
              "path": "src/Xunit.NetCore.Extensions/Xunit.NetCore.Extensions.csproj",
              "diffHunk": "@@ -9,4 +9,7 @@\n   <ItemGroup>\n     <PackageReference Include=\"xunit.core\" />\n   </ItemGroup>\n+  <ItemGroup>\n+    <Compile Include=\"..\\Shared\\UnitTests\\CustomXunitAttributesUtilities.cs\" />",
              "author": {
                "login": "vlada-shubina"
              }
            }
          ]
        }
      }
    ]
  }
}