{
  "number": 7234,
  "title": "CA5384 Asymmetric encryption algorithm DSA is weak. Switch to an RSA \u2026",
  "body": "Relates to #7174\r\nhttps://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/CA5384",
  "state": "CLOSED",
  "createdAt": "2022-01-08T06:49:34Z",
  "updatedAt": "2022-01-18T04:37:56Z",
  "closedAt": "2022-01-12T18:43:44Z",
  "mergedAt": null,
  "additions": 0,
  "deletions": 28,
  "changedFiles": 1,
  "headRefName": "CA5384",
  "isDraft": false,
  "author": {
    "login": "elachlan"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1fea1d30670e0ae06ca8d2a1ddeab8d3c23ec59d",
          "message": "CA5384 Asymmetric encryption algorithm DSA is weak. Switch to an RSA with at least 2048 key size, ECDH or ECDSA algorithm instead.",
          "committedDate": "2022-01-08T06:48:42Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Sounds like this one should be closed, right?",
        "createdAt": "2022-01-12T18:43:44Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> Sounds like this one should be closed, right?\r\n\r\nI am not sure. Would the DSA functionality be called from outside of msbuild? If so maybe we need to add an suppression attribute for this analyzer?",
        "createdAt": "2022-01-12T21:17:10Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Not a bad idea, but personally, I'd prefer to not touch it until someone complains.",
        "createdAt": "2022-01-18T04:37:56Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "It looks like this is called via reflection, and I don't think it should be removed. I think we should not enable this rule, because I don't understand the compatibility implications of removing support for this style of signing at build time.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/1fea1d30670e0ae06ca8d2a1ddeab8d3c23ec59d/src/Tasks/ManifestUtil/CngLightup.cs#L520-L530",
              "createdAt": "2022-01-10T18:36:03Z",
              "path": "src/Tasks/ManifestUtil/CngLightup.cs",
              "diffHunk": "@@ -115,30 +111,6 @@ internal static RSA GetRSAPrivateKey(X509Certificate2 cert)\n             return s_getRsaPrivateKey(cert);\n         }\n \n-        internal static DSA GetDSAPublicKey(X509Certificate2 cert)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Ahh bummer, I thought we could get away with it because it wasn't referenced anywhere and it was not a public API. \r\n\r\nThe code you linked is a private function, it is called via GetDSAPublicKey/GetDSAPrivateKey:\r\nhttps://github.com/dotnet/msbuild/blob/14efa06d736aabb3af01ff827fff9426518f5fac/src/Tasks/ManifestUtil/CngLightup.cs#L118-L140\r\n\r\nThe above methods call BindCoreDelegate is using reflection to call System.Security.Cryptography.X509Certificates.**DSACertificateExtensions**.GetDSAPublicKey/GetDSAPrivateKey\r\n\r\nAdditionally, CngLightup is only used when `RUNTIME_TYPE_NETCORE=false`.\r\n\r\nThe only public exposed functions I see that end up calling CNGLightup are in src/Tasks/ManifestUtil/SecurityUtil.cs\r\n\r\nAll calls end up in:\r\nhttps://github.com/dotnet/msbuild/blob/14efa06d736aabb3af01ff827fff9426518f5fac/src/Tasks/ManifestUtil/SecurityUtil.cs#L599\r\n\r\nIf the file being signed is a portable executable it will use `signtool.exe` via `SignPEFileInternal`, if it isn't it will then call GetRSAPrivateKey and throw an `OnlyRSACertsAreAllowed` error if its null.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/14efa06d736aabb3af01ff827fff9426518f5fac/src/Tasks/ManifestUtil/SecurityUtil.cs#L625-L637\r\n\r\nThere is then the file header comment, which I think might mean this file is pulled in externally somewhere?:\r\nhttps://github.com/dotnet/msbuild/blob/518c041f4511a6bc23eb40703b69a94ea46c65fd/src/Tasks/ManifestUtil/CngLightup.cs#L14-L17\r\n",
              "createdAt": "2022-01-10T22:04:11Z",
              "path": "src/Tasks/ManifestUtil/CngLightup.cs",
              "diffHunk": "@@ -115,30 +111,6 @@ internal static RSA GetRSAPrivateKey(X509Certificate2 cert)\n             return s_getRsaPrivateKey(cert);\n         }\n \n-        internal static DSA GetDSAPublicKey(X509Certificate2 cert)",
              "author": {
                "login": "elachlan"
              }
            }
          ]
        }
      }
    ]
  }
}