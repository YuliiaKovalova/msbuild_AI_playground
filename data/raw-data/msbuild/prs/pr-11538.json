{
  "number": 11538,
  "title": "Opt-in .sln parsing with Microsoft.VisualStudio.SolutionPersistence",
  "body": "### Context\r\nRequire opt-in (instead of -out) to .sln parsing with the new parser from Microsoft.VisualStudio.SolutionPersistence.\r\nthis is https://github.com/dotnet/msbuild/pull/11487 targeted 17.14. We decided to revert the change in 17.13\r\n\r\n### Changes Made\r\n1. Reverted [Revert \".slnx support - use the new parser for .sln and .slnx (#10836)\" ](https://github.com/dotnet/msbuild/pull/11488)\r\n2. Added `MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN` as an opt-in environment variable instead of requiring changewave opt-out to return to the MSBuild-internal solution parser.\r\n3. Fixed tests\r\n\r\n### Testing\r\nChanged tests to opt-in to .sln parsing with the new parser from Microsoft.VisualStudio.SolutionPersistence.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2025-03-04T18:19:06Z",
  "updatedAt": "2025-03-11T12:58:32Z",
  "closedAt": "2025-03-07T16:30:07Z",
  "mergedAt": "2025-03-07T16:30:07Z",
  "additions": 1259,
  "deletions": 1483,
  "changedFiles": 10,
  "headRefName": "optin-sln-new-parser",
  "isDraft": false,
  "author": {
    "login": "surayya-MS"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "surayya-MS"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "3940a3fc9db5086fcd8eb530fd8cc08718012b0e",
          "message": "revert \"Revert \".slnx support - use the new parser for .sln and .slnx (#10836)\"\"",
          "committedDate": "2025-03-04T17:57:14Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0e31a6ccdef94d8a288e29a5654925f14671862e",
          "message": "opt-in sln parsing with SolutionPersistence",
          "committedDate": "2025-03-04T18:01:36Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "aa3b36fd78ab1b4c53d1ace6f6f5aad839ecbca0",
          "message": "add SlnParsingWithSolutionPersistenceOptIn to Traits",
          "committedDate": "2025-03-04T18:04:13Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dd37cd3926eda5b6d9421310dedd7ad606b9dff7",
          "message": "bring back comment about revertin .sln parsing with SolutionPersistence in ChangeWaves",
          "committedDate": "2025-03-04T18:04:51Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7178ce83a79d63933e03afc5c717749b0594a792",
          "message": "fix tests",
          "committedDate": "2025-03-04T18:05:12Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8646fda40c71a6ac9cee00467eb3b45998c09ae1",
          "message": "remove empty line",
          "committedDate": "2025-03-04T18:13:38Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2fd10d73baedeb2b5bff59c7bbdc3a9ba2380bbd",
          "message": "Merge branch 'main' into optin-sln-new-parser",
          "committedDate": "2025-03-07T07:55:38Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7fc8ababcd07d276c673ec8b513a4f3dde356d1e",
          "message": "opt-in and -out of sln parsing with the new parser in SolutionFileTests",
          "committedDate": "2025-03-07T09:27:05Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0917ec28a7775a8e3ae17d3aaf5380d58b238764",
          "message": "fix tests without using common testenv",
          "committedDate": "2025-03-07T11:20:47Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "58309f65686862af29303450165145e7b5327bf0",
          "message": "Merge branch 'main' into optin-sln-new-parser",
          "committedDate": "2025-03-07T11:42:52Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "114938397+surayya-MS@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "79ba2cbd78b4df1838d46928a2f1489eb5049f4e",
          "message": "fix tests",
          "committedDate": "2025-03-07T13:45:39Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e6ab62fa155bf41f59d3463a40d6cd81e78ecadb",
          "message": "Merge remote-tracking branch 'origin/optin-sln-new-parser' into optin-sln-new-parser",
          "committedDate": "2025-03-07T14:22:39Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8eda5980b8389be0c9890db39aaf47f3ed91369b",
          "message": "fix",
          "committedDate": "2025-03-07T14:55:43Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "39ab325ffa16de67718d20973146d1e3038f4a2e",
          "message": "rename env var to MSBUILD_PARSE_SLN_WITH_SOLUTIONPERSISTENCE",
          "committedDate": "2025-03-07T15:05:49Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c63d270b4e6b65168c6672efa31c6777280d6419",
          "message": "fix closing bracket",
          "committedDate": "2025-03-07T15:24:03Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "eb3aea8b3b9494e587bd7c2ceb97dcd02896d36e",
          "message": "change ParseSolutionHelper to call SolutionFile.Parse",
          "committedDate": "2025-03-07T15:42:39Z",
          "author": {
            "name": "Surayya Huseyn Zada",
            "email": "shuseynzada@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "the changes are exactly same as in https://github.com/dotnet/msbuild/pull/11487/files#diff-047e3c8fd3315f9a08db8ca4fabd30b15f324080bebc140fe1652e5d8f8af4d1\r\nexcept for the version bump. You can chek this for easier review",
        "createdAt": "2025-03-04T18:20:58Z",
        "author": {
          "login": "surayya-MS"
        }
      },
      {
        "body": "Can we also update the SolutionPersistence package to the latest version https://github.com/microsoft/vs-solutionpersistence/releases/tag/v1.0.52 ?\r\nhttps://github.com/dotnet/msbuild/blob/d0473775c2797d723bfc55ca6e33184c2bbacbff/eng/Versions.props#L43\r\n\r\nIt has a fix for an issue that broke a test in the sdk repo.",
        "createdAt": "2025-03-04T23:39:39Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "> Can we also update the SolutionPersistence package to the latest version https://github.com/microsoft/vs-solutionpersistence/releases/tag/v1.0.52 ?\r\n> \r\n> https://github.com/dotnet/msbuild/blob/d0473775c2797d723bfc55ca6e33184c2bbacbff/eng/Versions.props#L43\r\n> \r\n> It has a fix for an issue that broke a test in the sdk repo.\r\n\r\nYes, we'll update in the next PR",
        "createdAt": "2025-03-05T07:45:12Z",
        "author": {
          "login": "surayya-MS"
        }
      },
      {
        "body": "https://github.com/dotnet/sdk/pull/47328 is upgrading to 1.0.52 for 9.0.2 which has fixes for the issues reported in msbuild issue tracker (source-build-externals is also updated)",
        "createdAt": "2025-03-07T01:13:37Z",
        "author": {
          "login": "kasperk81"
        }
      },
      {
        "body": "/backport to vs17.14",
        "createdAt": "2025-03-11T12:54:49Z",
        "author": {
          "login": "maridematte"
        }
      },
      {
        "body": "Started backporting to _vs17.14_: https://github.com/dotnet/msbuild/actions/runs/13788533134",
        "createdAt": "2025-03-11T12:55:02Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "@maridematte an error occurred while backporting to \"vs17.14\", please check the run log for details!\n\nError: @maridematte is not a repo collaborator, backporting is not allowed. If you're a collaborator please make sure your dotnet team membership visibility is set to Public on https://github.com/orgs/dotnet/people?query=maridematte",
        "createdAt": "2025-03-11T12:55:25Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "/backport to vs17.14",
        "createdAt": "2025-03-11T12:58:18Z",
        "author": {
          "login": "maridematte"
        }
      },
      {
        "body": "Started backporting to _vs17.14_: https://github.com/dotnet/msbuild/actions/runs/13788605583",
        "createdAt": "2025-03-11T12:58:31Z",
        "author": {
          "login": "github-actions"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I see that a lot of tests have been deleted. Do we not need them anymore?",
              "createdAt": "2025-03-05T09:59:58Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -148,146 +126,33 @@ public void ParseSolutionWithDifferentSpacing()\n         public void ParseSolution_EmptyProjectName()\n         {\n             string solutionFileContents =\n-                           @\"\n-                Microsoft Visual Studio Solution File, Format Version 9.00\n-                # Visual Studio 2005\n-                Project('{Project GUID}') = '', 'src\\.proj', '{0ABED153-9451-483C-8140-9E8D7306B216}'\n-                EndProject\n-                Global\n-                    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-                        Debug|AnyCPU = Debug|AnyCPU\n-                        Release|AnyCPU = Release|AnyCPU\n-                    EndGlobalSection\n-                    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Debug|AnyCPU.ActiveCfg = Debug|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Debug|AnyCPU.Build.0 = Debug|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Release|AnyCPU.ActiveCfg = Release|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Release|AnyCPU.Build.0 = Release|AnyCPU\n-                    EndGlobalSection\n-                    GlobalSection(SolutionProperties) = preSolution\n-                        HideSolutionNode = FALSE\n-                    EndGlobalSection\n-                EndGlobal\n-                \";\n-\n-            SolutionFile solution = ParseSolutionHelper(solutionFileContents);\n-\n-            Assert.StartsWith(\"EmptyProjectName\", solution.ProjectsInOrder[0].ProjectName);\n-            Assert.Equal(\"src\\\\.proj\", solution.ProjectsInOrder[0].RelativePath);\n-            Assert.Equal(\"{0ABED153-9451-483C-8140-9E8D7306B216}\", solution.ProjectsInOrder[0].ProjectGuid);\n-        }\n-\n-        /// <summary>\n-        /// Test some characters that are valid in a file name but that also could be\n-        /// considered a delimiter by a parser. Does quoting work for special characters?\n-        /// </summary>\n-        [Fact]\n-        public void ParseSolutionWhereProjectNameHasSpecialCharacters()",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "This is because we've recently reverted [.slnx support - use the new parser for .sln and .slnx #10836](https://github.com/dotnet/msbuild/pull/10836) in  https://github.com/dotnet/msbuild/pull/11488. And in this PR I re-apply the change. Back then I moved most of the tests to `SolutionFile_OldParser_Tests` - the full description is in `Testing` section of https://github.com/dotnet/msbuild/pull/10836 description",
              "createdAt": "2025-03-07T07:32:12Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -148,146 +126,33 @@ public void ParseSolutionWithDifferentSpacing()\n         public void ParseSolution_EmptyProjectName()\n         {\n             string solutionFileContents =\n-                           @\"\n-                Microsoft Visual Studio Solution File, Format Version 9.00\n-                # Visual Studio 2005\n-                Project('{Project GUID}') = '', 'src\\.proj', '{0ABED153-9451-483C-8140-9E8D7306B216}'\n-                EndProject\n-                Global\n-                    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n-                        Debug|AnyCPU = Debug|AnyCPU\n-                        Release|AnyCPU = Release|AnyCPU\n-                    EndGlobalSection\n-                    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Debug|AnyCPU.ActiveCfg = Debug|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Debug|AnyCPU.Build.0 = Debug|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Release|AnyCPU.ActiveCfg = Release|AnyCPU\n-                        {0ABED153-9451-483C-8140-9E8D7306B216}.Release|AnyCPU.Build.0 = Release|AnyCPU\n-                    EndGlobalSection\n-                    GlobalSection(SolutionProperties) = preSolution\n-                        HideSolutionNode = FALSE\n-                    EndGlobalSection\n-                EndGlobal\n-                \";\n-\n-            SolutionFile solution = ParseSolutionHelper(solutionFileContents);\n-\n-            Assert.StartsWith(\"EmptyProjectName\", solution.ProjectsInOrder[0].ProjectName);\n-            Assert.Equal(\"src\\\\.proj\", solution.ProjectsInOrder[0].RelativePath);\n-            Assert.Equal(\"{0ABED153-9451-483C-8140-9E8D7306B216}\", solution.ProjectsInOrder[0].ProjectGuid);\n-        }\n-\n-        /// <summary>\n-        /// Test some characters that are valid in a file name but that also could be\n-        /// considered a delimiter by a parser. Does quoting work for special characters?\n-        /// </summary>\n-        [Fact]\n-        public void ParseSolutionWhereProjectNameHasSpecialCharacters()",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n\r\n```suggestion\r\n\r\n        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));\r\n```",
              "createdAt": "2025-03-05T19:08:58Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -145,6 +145,7 @@ public Traits()\n \n         // for VS17.14\n         public readonly bool TelemetryOptIn = IsEnvVarOneOrTrue(\"MSBUILD_TELEMETRY_OPTIN\");\n+        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I'd also think about calling it `MSBUILD_PARSE_SLN_WITH_SOLUTIONPERSISTENCE` which reads slightly clearer to me.",
              "createdAt": "2025-03-05T19:10:57Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -145,6 +145,7 @@ public Traits()\n \n         // for VS17.14\n         public readonly bool TelemetryOptIn = IsEnvVarOneOrTrue(\"MSBUILD_TELEMETRY_OPTIN\");\n+        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "In the suggested change the code is the same as before. Could you please tell what your first preferred name for the opt-in was?",
              "createdAt": "2025-03-07T07:49:30Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -145,6 +145,7 @@ public Traits()\n \n         // for VS17.14\n         public readonly bool TelemetryOptIn = IsEnvVarOneOrTrue(\"MSBUILD_TELEMETRY_OPTIN\");\n+        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));",
              "author": {
                "login": "surayya-MS"
              }
            },
            {
              "body": "I like `MSBUILD_PARSE_SLN_WITH_SOLUTIONPERSISTENCE`. I'm going to use this",
              "createdAt": "2025-03-07T15:05:05Z",
              "path": "src/Framework/Traits.cs",
              "diffHunk": "@@ -145,6 +145,7 @@ public Traits()\n \n         // for VS17.14\n         public readonly bool TelemetryOptIn = IsEnvVarOneOrTrue(\"MSBUILD_TELEMETRY_OPTIN\");\n+        public readonly bool SlnParsingWithSolutionPersistenceOptIn = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\"));",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This makes sense to me, but should we do it opted-in _and_ opted-out of the behavior in that case?",
              "createdAt": "2025-03-05T19:12:33Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -24,8 +24,21 @@ namespace Microsoft.Build.UnitTests.Construction\n     /// <summary>\n     /// Tests for the parts of SolutionFile that are surfaced as public API",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "thanks! done",
              "createdAt": "2025-03-07T09:44:42Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -24,8 +24,21 @@ namespace Microsoft.Build.UnitTests.Construction\n     /// <summary>\n     /// Tests for the parts of SolutionFile that are surfaced as public API",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this codepath explicitly unset the opt-in?",
              "createdAt": "2025-03-05T19:13:55Z",
              "path": "src/Build.UnitTests/Construction/SolutionFile_OldParser_Tests.cs",
              "diffHunk": "@@ -794,18 +802,13 @@ public void ParseFirstProjectLineWhereProjectPathHasBackslash()\n         /// </summary>\n         /// <param name=\"solutionFileContents\"></param>\n         /// <returns></returns>\n-        internal static SolutionFile ParseSolutionHelper(string solutionFileContents)\n+        internal static SolutionFile ParseSolutionHelper(TestEnvironment testEnvironment, string solutionFileContents)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "No, it doesn't reset the opt-in.\r\n\r\nI looked more into this and now see that using shared `TestEnvironment` approach was incorrect, because once i set env variable in one code path, the shared `TestEnvironment` for all tests now has it which results in using the new parser in all tests. Thanks for pointing this out!\r\n\r\nI changed it back to create `TestEnvironment` for each test individually.\r\n\r\nThe reason I changed it in the first place is because of the failing tests in `SolutionProjectGenerator_Tests`. They failed in the PR for 17.13 last time too. All those tests call `SolutionProjectGenerator.Generate`. It calls `SolutionFile.UseNewParser` which depends on the opt-in env var being set.\r\nhttps://github.com/dotnet/msbuild/blob/e837c398ec84c7e63b9ad98f372cf4ea561ab11b/src/Build/Construction/Solution/SolutionProjectGenerator.cs#L692-L703\r\nSo, I changed those few failing tests to create the `TestEnvironment` outside of the `ParseSolutionHelper` method, so the env with the set opt-in would be available for `SolutionProjectGenerator.Generate` call",
              "createdAt": "2025-03-07T11:38:24Z",
              "path": "src/Build.UnitTests/Construction/SolutionFile_OldParser_Tests.cs",
              "diffHunk": "@@ -794,18 +802,13 @@ public void ParseFirstProjectLineWhereProjectPathHasBackslash()\n         /// </summary>\n         /// <param name=\"solutionFileContents\"></param>\n         /// <returns></returns>\n-        internal static SolutionFile ParseSolutionHelper(string solutionFileContents)\n+        internal static SolutionFile ParseSolutionHelper(TestEnvironment testEnvironment, string solutionFileContents)",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "`MSBUILD_LEGACY_SLN_PARSER=0` (it's anyway a soon-to-be-legacy) or `MSBUILD_NEW_SLN_PARSER=1`.",
              "createdAt": "2025-03-07T15:08:53Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -715,7 +715,7 @@ private static SolutionFile ParseSolutionHelper(string solutionFileContents, boo\n             {\n                 if (isOptInSlnParsingWithNewParser)\n                 {\n-                    testEnvironment.SetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\", \"1\");\n+                    testEnvironment.SetEnvironmentVariable(\"MSBUILD_PARSE_SLN_WITH_SOLUTIONPERSISTENCE\", \"1\");",
              "author": {
                "login": "kasperk81"
              }
            },
            {
              "body": "thanks for suggestions!\r\nBecause this is opt-in (instead of -out), `MSBUILD_NEW_SLN_PARSER` is more suitable. But I like `MSBUILD_PARSE_SLN_WITH_SOLUTIONPERSISTENCE` name more. We will deprecate old parser in the future anyway",
              "createdAt": "2025-03-07T15:21:34Z",
              "path": "src/Build.OM.UnitTests/Construction/SolutionFile_Tests.cs",
              "diffHunk": "@@ -715,7 +715,7 @@ private static SolutionFile ParseSolutionHelper(string solutionFileContents, boo\n             {\n                 if (isOptInSlnParsingWithNewParser)\n                 {\n-                    testEnvironment.SetEnvironmentVariable(\"MSBUILD_SLN_PARSING_SOLUTIONPERSISTENCE_OPTIN\", \"1\");\n+                    testEnvironment.SetEnvironmentVariable(\"MSBUILD_PARSE_SLN_WITH_SOLUTIONPERSISTENCE\", \"1\");",
              "author": {
                "login": "surayya-MS"
              }
            }
          ]
        }
      }
    ]
  }
}