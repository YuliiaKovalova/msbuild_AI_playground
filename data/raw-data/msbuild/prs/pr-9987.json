{
  "number": 9987,
  "title": "Fix oversharing of build results in ResultsCache",
  "body": "Fixes #9458\r\n\r\n### Context\r\n\r\n#9565 had to be reverted because the assumption that results with `BuildRequestDataFlags.ProvideSubsetOfStateAfterBuild` don't have to be cached broke design-time builds in Visual Studio.\r\n\r\n### Changes Made\r\n\r\nRe-did the change, now with full handling of `BuildRequestDataFlags.ProvideSubsetOfStateAfterBuild`.\r\n\r\n### Testing\r\n\r\nNew and existing unit tests, experimental insertion, manual testing with the problematic design-time build scenario.\r\n\r\n### Notes\r\n\r\nCompared to #9565, we now:\r\n- Copy the flags from the original `BuildResult` in the `BuildResult` copy constructor.\r\n- Have `ProjectInstance` remember the project state filter it was created from.\r\n- Implement `IsSubsetOf` operator on `RequestedProjectState`.\r\n- Use the `IsSubsetOf` to determine if a request with `ProvideSubsetOfStateAfterBuild` can be satisfied by the cache.\r\n- Don't consider `SkipNonexistentTargets` to be a flag affecting build results.\r\n",
  "state": "MERGED",
  "createdAt": "2024-04-10T12:29:37Z",
  "updatedAt": "2024-04-19T14:39:44Z",
  "closedAt": "2024-04-19T14:39:38Z",
  "mergedAt": "2024-04-19T14:39:38Z",
  "additions": 586,
  "deletions": 31,
  "changedFiles": 9,
  "headRefName": "9458-build-cache",
  "isDraft": false,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1185ec749e9c3049d9cde64e833a8eecc627e9b0",
          "message": "Revert \"revert changes for \"ResultsCache ignores some of the BuildRequest data,..\" (#9718)\"\n\nThis reverts commit 553649bd6d8765beaead2f6ccee45c041afc3bb3.",
          "committedDate": "2024-04-10T12:30:09Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "31ae8135759bffa57617a38f2c9ae252e9771e30",
          "message": "Fix up the revert",
          "committedDate": "2024-04-10T12:31:05Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6488acc9754c57ea0e553afd3498ca18c5e72e14",
          "message": "Implement request/result compatibility test",
          "committedDate": "2024-04-10T12:31:09Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "91a9c7b316f8640eaabddaddd157ffd613e8d533",
          "message": "Disable SA1010",
          "committedDate": "2024-04-10T12:31:09Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0d816cb3295c62b97864e5add3f6df07d86e0f34",
          "message": "Add ProjectInstance.RequestedProjectStateFilter",
          "committedDate": "2024-04-10T12:31:09Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0352f2fd1f7b6d121a62fccf5da9b5cfc0e9b361",
          "message": "Add DeepClone and IsSubsetOf to RequestedProjectState",
          "committedDate": "2024-04-10T12:31:09Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9335dbe0fd061ade1949765a1dd877f7557f5f24",
          "message": "Call IsSubsetOf from ResultsCache",
          "committedDate": "2024-04-10T12:31:09Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d24ccfc07f95d69614a2f81d4225a22fe53c59d5",
          "message": "Update existing and add new tests",
          "committedDate": "2024-04-10T12:31:09Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3122ed87a11239bc070c91ec5fa9e2c7e700f95d",
          "message": "Copy all state in BuildResult copy ctor",
          "committedDate": "2024-04-11T12:04:24Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "10d9c3addbd500077859f694802f10f7019dbdca",
          "message": "Make DeepCloneItemsWithMetadata more meaningful",
          "committedDate": "2024-04-11T12:05:21Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a29be1a4d44414baca8749996577e98fc3474c7f",
          "message": "Update change wave entry",
          "committedDate": "2024-04-11T12:05:42Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "73b3c3effad2115505038dbd66986d5693c18db0",
          "message": "Tweak comments",
          "committedDate": "2024-04-11T12:24:02Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ee2afbff8039291f7f0ae4cec290974d883cd0f5",
          "message": "Use bit operations instead of HasFlag",
          "committedDate": "2024-04-16T08:12:16Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b8441095835abdb9ea6e7cad58766a3ea904d6e0",
          "message": "Remove SkipNonexistentTargets from FlagsAffectingBuildResults",
          "committedDate": "2024-04-18T15:01:01Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I have removed `SkipNonexistentTargets` from the flags that have to match. This is a cache of target results so if the target is there, it has to exist. Re-tested everything and will merge tomorrow if there are no objections.",
        "createdAt": "2024-04-18T15:27:25Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Doesn't HasFlag box on Framework? I vaguely remember that it's suprisingly better to do the boolean operations.",
              "createdAt": "2024-04-16T02:35:33Z",
              "path": "src/Build/BackEnd/Components/Caching/ResultsCache.cs",
              "diffHunk": "@@ -328,6 +344,50 @@ private static bool CheckResults(BuildResult result, List<string> targets, HashS\n             return returnValue;\n         }\n \n+        /// <summary>\n+        /// Returns true if the flags and project state filter of the given build request are compatible with the given build result.\n+        /// </summary>\n+        /// <param name=\"buildRequest\">The current build request.</param>\n+        /// <param name=\"buildResult\">The candidate build result.</param>\n+        /// <returns>True if the flags and project state filter of the build request is compatible with the build result.</returns>\n+        private static bool AreBuildResultFlagsCompatible(BuildRequest buildRequest, BuildResult buildResult)\n+        {\n+            BuildRequestDataFlags buildRequestDataFlags = buildRequest.BuildRequestDataFlags;\n+            BuildRequestDataFlags buildResultDataFlags = buildResult.BuildRequestDataFlags;\n+\n+            if ((buildRequestDataFlags & FlagsAffectingBuildResults) != (buildResultDataFlags & FlagsAffectingBuildResults))\n+            {\n+                // Mismatch in flags that can affect build results -> not compatible.\n+                return false;\n+            }\n+\n+            if (buildRequestDataFlags.HasFlag(BuildRequestDataFlags.ProvideProjectStateAfterBuild))",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Indeed, seems to box on Core as well. Fixed, thank you.",
              "createdAt": "2024-04-16T08:13:06Z",
              "path": "src/Build/BackEnd/Components/Caching/ResultsCache.cs",
              "diffHunk": "@@ -328,6 +344,50 @@ private static bool CheckResults(BuildResult result, List<string> targets, HashS\n             return returnValue;\n         }\n \n+        /// <summary>\n+        /// Returns true if the flags and project state filter of the given build request are compatible with the given build result.\n+        /// </summary>\n+        /// <param name=\"buildRequest\">The current build request.</param>\n+        /// <param name=\"buildResult\">The candidate build result.</param>\n+        /// <returns>True if the flags and project state filter of the build request is compatible with the build result.</returns>\n+        private static bool AreBuildResultFlagsCompatible(BuildRequest buildRequest, BuildResult buildResult)\n+        {\n+            BuildRequestDataFlags buildRequestDataFlags = buildRequest.BuildRequestDataFlags;\n+            BuildRequestDataFlags buildResultDataFlags = buildResult.BuildRequestDataFlags;\n+\n+            if ((buildRequestDataFlags & FlagsAffectingBuildResults) != (buildResultDataFlags & FlagsAffectingBuildResults))\n+            {\n+                // Mismatch in flags that can affect build results -> not compatible.\n+                return false;\n+            }\n+\n+            if (buildRequestDataFlags.HasFlag(BuildRequestDataFlags.ProvideProjectStateAfterBuild))",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}