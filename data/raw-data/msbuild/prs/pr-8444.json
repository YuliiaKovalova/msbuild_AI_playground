{
  "number": 8444,
  "title": "BuildManager instances acquire its own BuildTelemetry instance",
  "body": "Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1708215\r\n\r\n### Context\r\nIn VS there are multiple instances of BuildManager called asynchronously. For DTB and normal build and maybe other which I have not identified yet.\r\n\r\n### Changes Made\r\nBuildManager instances acquire its own BuildTelemetry instance as oppose to sharing single BuildTelemetry instance in non thread safe manner.\r\n\r\n### Testing\r\nLocally\r\n",
  "state": "MERGED",
  "createdAt": "2023-02-13T16:32:03Z",
  "updatedAt": "2023-02-17T07:41:15Z",
  "closedAt": "2023-02-17T07:41:14Z",
  "mergedAt": "2023-02-17T07:41:14Z",
  "additions": 67,
  "deletions": 51,
  "changedFiles": 7,
  "headRefName": "rokonec/fix-telemetry-thread-safety",
  "isDraft": false,
  "author": {
    "login": "rokonec"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "13584e79ee39a80f6f99f03b4cab11e2a919f7e6",
          "message": "BuildManager instances own its own BuildTelemetry instance.",
          "committedDate": "2023-02-13T16:28:23Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "27e5abf5c903660991c59e5c50a0d7b1c945cc17",
          "message": "Renaming BuildTelemetry to PartialBuildTelemetry",
          "committedDate": "2023-02-14T14:58:47Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> So if I understand it correctly there is an implicit assumption that `KnownTelemetry.BuildTelemetry` is used serially\r\n\r\nYes `KnownTelemetry.BuildTelemetry` is not thread safe and shall be used serially only to enrich telemetry data of soon to be started build. Current code does it. By creating new instance for each `BuildManager`, build manager code do handle it in thread safe manner.\r\n\r\nBTW, in last commit I  have renamed `BuildTelemetry` to `PartialBuildTelemetry` to better describe its intent.",
        "createdAt": "2023-02-14T15:11:03Z",
        "author": {
          "login": "rokonec"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I know this is just copy of preexisting code - but I'd be more defencive here:\r\n\r\n```suggestion\r\n                    _buildTelemetry.Project ??= requestData.ProjectGraphEntryPoints?.FirstOrDefault()?.ProjectFile;\r\n```",
              "createdAt": "2023-02-15T11:10:01Z",
              "path": "src/Build/BackEnd/BuildManager/BuildManager.cs",
              "diffHunk": "@@ -852,12 +869,12 @@ public GraphBuildSubmission PendBuildRequest(GraphBuildRequestData requestData)\n \n                 var newSubmission = new GraphBuildSubmission(this, GetNextSubmissionId(), requestData);\n \n-                if (KnownTelemetry.BuildTelemetry != null)\n+                if (_buildTelemetry != null)\n                 {\n                     // Project graph can have multiple entry points, for purposes of identifying event for same build project,\n                     // we believe that including only one entry point will provide enough precision.\n-                    KnownTelemetry.BuildTelemetry.Project ??= requestData.ProjectGraphEntryPoints?.FirstOrDefault().ProjectFile;\n-                    KnownTelemetry.BuildTelemetry.Target ??= string.Join(\",\", requestData.TargetNames);\n+                    _buildTelemetry.Project ??= requestData.ProjectGraphEntryPoints?.FirstOrDefault().ProjectFile;",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Aaah - it's a `struct` - all good then",
              "createdAt": "2023-02-15T11:10:26Z",
              "path": "src/Build/BackEnd/BuildManager/BuildManager.cs",
              "diffHunk": "@@ -852,12 +869,12 @@ public GraphBuildSubmission PendBuildRequest(GraphBuildRequestData requestData)\n \n                 var newSubmission = new GraphBuildSubmission(this, GetNextSubmissionId(), requestData);\n \n-                if (KnownTelemetry.BuildTelemetry != null)\n+                if (_buildTelemetry != null)\n                 {\n                     // Project graph can have multiple entry points, for purposes of identifying event for same build project,\n                     // we believe that including only one entry point will provide enough precision.\n-                    KnownTelemetry.BuildTelemetry.Project ??= requestData.ProjectGraphEntryPoints?.FirstOrDefault().ProjectFile;\n-                    KnownTelemetry.BuildTelemetry.Target ??= string.Join(\",\", requestData.TargetNames);\n+                    _buildTelemetry.Project ??= requestData.ProjectGraphEntryPoints?.FirstOrDefault().ProjectFile;",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}