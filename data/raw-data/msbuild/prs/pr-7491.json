{
  "number": 7491,
  "title": "Logs warning message when property AllowFailureWithoutError is set to\u2026",
  "body": "\u2026 True\r\n\r\nFixes #6633\r\n\r\n### Context\r\n No messages are logged at all if the build fails and AllowFailureWithoutError is set to True.\r\n\r\n### Changes Made\r\nMoved the logic check for AllowFailureWithoutError to the nested if-else statement so that a warning message is logged if AllowFailureWithoutError is set to True and if AllowFailureWithoutError is set to False then an error is logged instead.\r\n\r\n### Testing\r\nAdded line to relevant Unit Test to check for warning messages in cases where AllowFailureWithoutError is set to True.\r\n\r\n### Notes\r\n",
  "state": "CLOSED",
  "createdAt": "2022-03-26T17:58:48Z",
  "updatedAt": "2022-12-26T11:42:23Z",
  "closedAt": "2022-10-06T21:24:12Z",
  "mergedAt": null,
  "additions": 2,
  "deletions": 2,
  "changedFiles": 2,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "FrtLoop"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "fdd575b9295d24c696823e2e694a844d124f6840",
          "message": "Logs warning message when property AllowFailureWithoutError is set to True",
          "committedDate": "2022-03-26T17:42:26Z",
          "author": {
            "name": "GeneDuLac",
            "email": "78236996+GeneDuLac@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7491) <br/>All CLA requirements met.",
        "createdAt": "2022-03-26T17:59:01Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/not_signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7491) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7491) before we can accept your contribution.<br/><br/>:x: FrtLoop [sign now](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7491)<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla.dotnetfoundation.org/check/dotnet/msbuild?pullRequest=7491) it.</sub>",
        "createdAt": "2022-03-26T17:59:01Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "Closing this for now. Feel free to reopen it when you're ready.",
        "createdAt": "2022-10-06T21:24:12Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Team triage: We think the AllowFailureWithoutError half of this should log a message instead of a warning. (ContinueOnError should still be a warning, of course.) Thanks!",
              "createdAt": "2022-03-28T15:39:33Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs",
              "diffHunk": "@@ -960,11 +960,10 @@ private async Task<WorkUnitResult> ExecuteInstantiatedTask(ITaskExecutionHost ta\n                     && !taskResult // and it returned false\n                     && !taskLoggingContext.HasLoggedErrors // and it didn't log any errors\n                     && (be is TaskHost th ? th.BuildRequestsSucceeded : false)\n-                    && (be is IBuildEngine7 be7 ? !be7.AllowFailureWithoutError : true) // and it's not allowed to fail unless it logs an error\n                     && !(_cancellationToken.CanBeCanceled && _cancellationToken.IsCancellationRequested)) // and it wasn't cancelled\n                 {\n                     // Then decide how to log MSB4181\n-                    if (_continueOnError == ContinueOnError.WarnAndContinue)\n+                    if (_continueOnError == ContinueOnError.WarnAndContinue || (be is IBuildEngine7 be7 && be7.AllowFailureWithoutError))",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "@FrtLoop, did you see our suggestion?",
              "createdAt": "2022-04-21T03:33:26Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs",
              "diffHunk": "@@ -960,11 +960,10 @@ private async Task<WorkUnitResult> ExecuteInstantiatedTask(ITaskExecutionHost ta\n                     && !taskResult // and it returned false\n                     && !taskLoggingContext.HasLoggedErrors // and it didn't log any errors\n                     && (be is TaskHost th ? th.BuildRequestsSucceeded : false)\n-                    && (be is IBuildEngine7 be7 ? !be7.AllowFailureWithoutError : true) // and it's not allowed to fail unless it logs an error\n                     && !(_cancellationToken.CanBeCanceled && _cancellationToken.IsCancellationRequested)) // and it wasn't cancelled\n                 {\n                     // Then decide how to log MSB4181\n-                    if (_continueOnError == ContinueOnError.WarnAndContinue)\n+                    if (_continueOnError == ContinueOnError.WarnAndContinue || (be is IBuildEngine7 be7 && be7.AllowFailureWithoutError))",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "@FrtLoop, are you planning to get back to this soon? Otherwise, I might close it until you're ready.",
              "createdAt": "2022-07-17T17:45:43Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs",
              "diffHunk": "@@ -960,11 +960,10 @@ private async Task<WorkUnitResult> ExecuteInstantiatedTask(ITaskExecutionHost ta\n                     && !taskResult // and it returned false\n                     && !taskLoggingContext.HasLoggedErrors // and it didn't log any errors\n                     && (be is TaskHost th ? th.BuildRequestsSucceeded : false)\n-                    && (be is IBuildEngine7 be7 ? !be7.AllowFailureWithoutError : true) // and it's not allowed to fail unless it logs an error\n                     && !(_cancellationToken.CanBeCanceled && _cancellationToken.IsCancellationRequested)) // and it wasn't cancelled\n                 {\n                     // Then decide how to log MSB4181\n-                    if (_continueOnError == ContinueOnError.WarnAndContinue)\n+                    if (_continueOnError == ContinueOnError.WarnAndContinue || (be is IBuildEngine7 be7 && be7.AllowFailureWithoutError))",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}