{
  "number": 6763,
  "title": "Fail Builds Fast When SDKResolvers Throw Exceptions",
  "body": "Fixes #6762 \r\n\r\n### Context\r\nWhen SDK Resolvers fail, we currently log a warning and try to continue the build. This leads to a failure at some point in the future, which is confusing for customers.\r\n\r\n### Changes Made\r\n- SdkResolverService now catches exceptions and throws an `SdkResolverException`\r\n- Evaluator catches SdkResolverException and fails the build, providing the inner-error message along with `MSB4242`.\r\n- MSB4243 freed up. See notes below\r\n\r\n### Testing\r\nTested on a local standalone sdk. See comments below.\r\n\r\n### Notes\r\n- MSB4242 now has a slightly different meaning. It's a catch-all \"sdk resolvers failed somehow\" exception. It will then report whatever the resolver's message was, so the resolver's error codes had to had to be removed. Removing the other error codes prevents this sort of message: `MSB4242: Sdk Resolver Failure: MSB4243: blah blah`.",
  "state": "MERGED",
  "createdAt": "2021-08-17T01:18:41Z",
  "updatedAt": "2021-09-01T21:30:20Z",
  "closedAt": "2021-09-01T21:30:20Z",
  "mergedAt": "2021-09-01T21:30:20Z",
  "additions": 2729,
  "deletions": 120,
  "changedFiles": 23,
  "headRefName": "resolvers-failfast",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a1bd10d5bbaf0e3cf19df723a71995270497579d",
          "message": "Promote MSB4242 to error and make a clearer message. ResolveSdk returns early when and logs an error when we fail to resolve an SDK",
          "committedDate": "2021-08-23T21:02:17Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bd30988be4fbf66caf0a13778705c857f9e26b8c",
          "message": "Update test for new functionality",
          "committedDate": "2021-08-23T21:02:19Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0b4c1ac217d124820778d2f278d61b828acd1a40",
          "message": "Propogate exception up to evaluator. Pass formatted message from sdkresolverservice",
          "committedDate": "2021-08-23T21:02:20Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "01953af0b7654a9c2fdc08f887920252cc9046ba",
          "message": "Update test to check that sdkresolvers actually throw",
          "committedDate": "2021-08-23T21:02:20Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5a0b480693c2e257b665014800413b3e00c650de",
          "message": "Add new SdkResolverException",
          "committedDate": "2021-08-23T21:02:20Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "37870fa116b27256dea9e6c40cdf26e6940da890",
          "message": "Remove trailing period to format stacked messages better",
          "committedDate": "2021-08-23T21:02:20Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2cafba5160f7c017c625951102d3615ddcbd9d7a",
          "message": "Add basic documentation for sdk resolvers failing fast",
          "committedDate": "2021-08-23T21:02:20Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dd0b2ef9c7b3a942a6708faf791a6b97cfb70c85",
          "message": "Log exception.ToString() when an sdkresolver fails to include the stack trace.",
          "committedDate": "2021-08-24T18:38:47Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "63e6a6d7f2ba3f017f3d6ccdb9b8635b5fedfb7c",
          "message": "Test now ensures SdkResolverException's message is populated",
          "committedDate": "2021-08-24T21:06:57Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8caa2d9e2f6ade63e2fffd81674b99e85b67fea9",
          "message": "Comment use of exception.Message",
          "committedDate": "2021-08-24T21:09:45Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4b553ab1089d57ccf61cb373a7bd347ca123a0d3",
          "message": "Check SdkResolverException fields directly",
          "committedDate": "2021-08-24T21:30:45Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@dsplaisted what's the easiest way to reproduce a generic resolver exception?",
        "createdAt": "2021-08-17T22:23:29Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Go into the sdk-manifests folder of your .NET SDK and update one of the json files (for example `C:\\Program Files\\dotnet\\sdk-manifests\\6.0.100\\microsoft.net.sdk.android\\WorkloadManifest.json` to be invalid json (after making a backup, of course).\r\n\r\nI think that should trigger an exception.\r\n\r\nYou may want to use a separate local SDK for testing this so that your changes don't prevent you from building all projects on your system.  Let me know if you need help with that, the `artifacts\\sdk-build-env.bat` and `eng\\dogfood.cmd` scripts in the SDK repo set the environment variables that you would need to in order to use a local SDK.",
        "createdAt": "2021-08-17T22:28:22Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "@jeffkl FYI. Does this PR sound reasonable?",
        "createdAt": "2021-08-18T17:49:44Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos Yeah ideally a resolver would never throw an exception unless there's a bug.  The idea with the original design was to keep trying other resolvers as a fallback in case another can handle it.  But at the moment there are only 3 resolvers:\r\n\r\n1. .NET Core SDK resolver - Resolves SDKs in the .NET Core SDK\r\n2. NuGet SDK resolver - Resolves SDKs from a NuGet package\r\n3. Default SDK resolver - Resolves SDKs next to MSBuild\r\n\r\nNone of these really \"fall back\" to another if there's an error, so it does make sense to just fail evaluation if something is wrong.",
        "createdAt": "2021-08-18T18:08:16Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "> Go into the sdk-manifests folder of your .NET SDK and update one of the json files (for example C:\\Program Files\\dotnet\\sdk-manifests\\6.0.100\\microsoft.net.sdk.android\\WorkloadManifest.json to be invalid json (after making a backup, of course).\r\nI think that should trigger an exception.\r\n\r\nConfirmed the fix works locally when I do this on a standalone sdk.\r\n\r\n### Old Error\r\n```\r\nPS C:\\src\\temp\\8-18> C:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\dotnet.exe build\r\nMicrosoft (R) Build Engine version 17.0.0-dev-21418-01+d592862ed for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\src\\temp\\8-18\\8-18.csproj : warning MSB4242: The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed to run. 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\sdk\\6.0.100-preview.7.21379.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.props(14,3): warning MSB4242: The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed to run. 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\sdk\\6.0.100-preview.7.21379.14\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.props(14,38): error MSB4236: The SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator' specified could not be found. [C:\\src\\temp\\8-18\\8-18.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\n### New Error\r\n```\r\nPS C:\\src\\temp\\8-18> C:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\dotnet.exe build\r\nMicrosoft (R) Build Engine version 17.0.0-dev-21418-01+92d5334ca for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\src\\temp\\8-18\\8-18.csproj : error MSB4242: The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\": 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\src\\temp\\8-18\\8-18.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n\r\nBuild FAILED.\r\n```\r\n\r\nPR is ready for review.\r\n\r\n> None of these really \"fall back\" to another if there's an error, so it does make sense to just fail evaluation if something is wrong.\r\n\r\nAre resolvers _eventually_ expected to fall back? Even in the event of an exception? It looks like resolvers can already log errors and continue. It's specifically when they throw that they won't be able to fall back.\r\n\r\nIMO that behavior is fine, and each resolver should catch exceptions and turn them into errors if they want some future resolver to pick up where it couldn't. Thoughts?",
        "createdAt": "2021-08-18T18:54:00Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> Are resolvers eventually expected to fall back?\r\n\r\nThe functionality is there because we'll continue on if an error occurs.  The only thing is that there's no logic for a resolver to come back and say the error is fatal.  We could add a new value to the SDK result so that the contract is:\r\n\r\n* Unhandled exceptions fail evaluation for a particular SDK resolver\r\n-or-\r\n* Returning \"Fatal\" error disables fallbacks if an SDK resolver knows that something _should_ have worked but didn't.\r\n\r\nI'm not a fan of having unhandled exceptions be the only way a resolver can fail evaluation since we have an API.  For the above case when WorkloadManifest.json has invalid JSON, the SDK resolver could catch that and wrap it in a different exception that might affect what is logged.  ",
        "createdAt": "2021-08-18T19:08:36Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "This is way better, but there are still two errors and the second one is not really accurate:\r\n\r\n> C:\\src\\temp\\8-18\\8-18.csproj : error MSB4242: The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\": 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\src\\temp\\8-18\\8-18.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n\r\nIf possible I would like it if we could just fail with the SDK resolver error (MSB4242) and not the SDK not found error (MSB4236).",
        "createdAt": "2021-08-18T19:35:37Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "@dsplaisted This is slightly more annoying than expected. The way it currently works is:\r\n\r\nSDKResolverService logs an error when an exception is thrown. It returns the result, which is picked up by the evaluator which needs to fail the build immediately. \r\n\r\nThe problem is it needs to fail the build with a message.\r\n\r\nWe could defer the message that the resolver service would have logged, but the evaluator doesn't have enough info to properly log that message (resolver name, exception message).\r\n\r\nI propose we give `SdkResult` an `Enumberable<string> Args` field that we populate when an exception is thrown. This would allow Evaluator to log the error and any extra info needed based on resource.\r\n\r\nDo you know what's expected to populate `Errors` and `Warnings` of an SDKResult? Is it the code? Is it the resource name of the message? Full error message? I'm thinking of using either the resource name or the code and special casing them in the evaluator.",
        "createdAt": "2021-08-19T18:53:52Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "If we need to add error information to SdkResult, then I would just have it be a string, and it should be localized and formatted before being set on the SdkResult.\r\n\r\nWe might also be able to communicate the error back to the evaluator by letting the exception propogate, or by throwing a new one with the right information.",
        "createdAt": "2021-08-19T19:05:47Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "> We might also be able to communicate the error back to the evaluator by letting the exception propogate, or by throwing a new one with the right information.\r\n\r\ngoing with this. As a result I've had to turn MSB4242 into a generic \"SDK Resolver Failed: {0}\" message, passing the exception's message as the arg. Where the exception's message is the SDKResolverService's error pulled from resources and string.formatted. \r\n\r\nI had to remove the error codes from the NuGet exception message and generic sdk resolver exception message. Otherwise we would see \"MSB4242: SDK Resolver failure: MSB4243 NuGet SDK failure....\"",
        "createdAt": "2021-08-19T19:50:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Using this method:\r\n> Go into the sdk-manifests folder of your .NET SDK and update one of the json files (for example C:\\Program Files\\dotnet\\sdk-manifests\\6.0.100\\microsoft.net.sdk.android\\WorkloadManifest.json to be invalid json (after making a backup, of course).\r\nI think that should trigger an exception.\r\n\r\n### New Error Message:\r\n```\r\nC:\\src\\temp\\8-18>\"C:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\dotnet.exe\" build    \r\nMicrosoft (R) Build Engine version 17.0.0-dev-21420-01+5df152759 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\src\\temp\\8-18\\8-18.csproj : error MSB4242: SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"'s' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\"\".\r\n\r\nBuild FAILED.\r\n\r\nC:\\src\\temp\\8-18\\8-18.csproj : error MSB4242: SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"'s' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\"\".\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.15\r\n```",
        "createdAt": "2021-08-20T19:31:02Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "adding `microsoft.net.workload.foo` to the `sdk-manifests/version` folder to break the resolver in a different way. \r\n\r\n### New Message:\r\n```\r\nC:\\src\\temp\\8-18>\"C:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\dotnet.exe\" build\r\nMicrosoft (R) Build Engine version 17.0.0-dev-21420-01+5df152759 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\src\\temp\\8-18\\8-18.csproj : error MSB4242: SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"Could not find file 'C:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\sdk-manifests\\6.0.100\\microsoft.net.workload.test\\WorkloadManifest.json'.\"\".\r\n\r\nBuild FAILED.\r\n\r\nC:\\src\\temp\\8-18\\8-18.csproj : error MSB4242: SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"Could not find file 'C:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\sdk-manifests\\6.0.100\\microsoft.net.workload.test\\WorkloadManifest.json'.\"\".\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.25\r\n```\r\nGoing to remove the trailing `.` on MSB4242 to make the messages slightly less messy.",
        "createdAt": "2021-08-20T19:36:17Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2021-08-20T22:28:56Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2021-08-20T22:29:06Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "@rainersigwald https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-use-project-sdk this was the closest thing I could find relating to any sdk resolver docs. Should we have a file in this repo that has documentation on resolvers?",
        "createdAt": "2021-08-23T16:30:43Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Yeah, put something in the specs folder please.",
        "createdAt": "2021-08-23T17:04:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald added a very rough document that specifically mentions resolvers failing the build quickly with msb4242. Let me know if we should add more. I'd prefer to keep the doc update specific to what this PR covers, then make an issue that tracks adding more detail to the doc.\r\n\r\n",
        "createdAt": "2021-08-23T21:12:15Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2021-08-30T17:40:21Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2021-08-30T17:40:31Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2021-08-31T23:28:16Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2021-08-31T23:28:25Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "Looks like it's \r\n`Running tests: D:\\a\\1\\s\\artifacts\\bin\\Microsoft.Build.CommandLine.UnitTests\\Debug\\net472\\Microsoft.Build.CommandLine.UnitTests.dll [net472|x86]` that's the problem. Something in there seems to be hanging or waiting for some state that isn't happening. I can't repro on my machine though.",
        "createdAt": "2021-08-31T23:29:06Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "/azp run",
        "createdAt": "2021-09-01T17:09:30Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2021-09-01T17:09:39Z",
        "author": {
          "login": "azure-pipelines"
        }
      },
      {
        "body": "CI passed twice in a row. Must have been some flakiness. @dotnet/kitten ",
        "createdAt": "2021-09-01T21:25:57Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n            _logger.Errors.Single().Code.ShouldBe(\"MSB4242\");\r\n```\r\n\r\nLittle trick, though this isn't the best use of it. Single throws if Errors is not a singleton.",
              "createdAt": "2021-08-20T15:35:49Z",
              "path": "src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs",
              "diffHunk": "@@ -93,8 +93,9 @@ public void AssertErrorLoggedWhenResolverThrows()\n \n             var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false);\n \n-            result.Path.ShouldBe(\"resolverpath1\");\n-            _logger.Warnings.Select(i => i.Message).ShouldBe(new [] { \"The SDK resolver \\\"MockSdkResolverThrows\\\" failed to run. EXMESSAGE\" });\n+            result.Path.ShouldBe(null);\n+            _logger.ErrorCount.ShouldBe(1);\n+            _logger.Errors.First().Code.ShouldBe(\"MSB4242\");",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I know this wasn't in the warning, but maybe include all of e as an inner exception? (Also elsewhere) Then we can stack trace, etc.\r\n\r\nAlso, should the Exception (including above) be more specific?",
              "createdAt": "2021-08-20T15:38:02Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -124,14 +124,12 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC\n                     // than give them a generic error, we want to give a more specific message.  This exception cannot be caught by\n                     // the resolver itself because it is usually thrown before the class is loaded\n                     // MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable \"{0}\" to the folder that contains the required NuGet assemblies. {1}\n-                    loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), \"CouldNotRunNuGetSdkResolver\", MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message);\n-                    continue;\n+                    throw new Exception(string.Format(ResourceUtilities.GetResourceString(\"CouldNotRunNuGetSdkResolver\"), MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message));\n                 }\n                 catch (Exception e)\n                 {\n-                    // MSB4242: The SDK resolver \"{0}\" failed to run. {1}\n-                    loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), \"CouldNotRunSdkResolver\", sdkResolver.Name, e.Message);\n-                    continue;\n+                    // MSB4242: The SDK resolver \"{0}\" failed while attempting to resolve the SDK \"{1}\": {2}\n+                    throw new Exception(string.Format(ResourceUtilities.GetResourceString(\"SDKResolverFailed\"), sdkResolver.Name, sdk.ToString(), e.Message));",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "> I know this wasn't in the warning, but maybe include all of e as an inner exception? (Also elsewhere) Then we can stack trace, etc.\r\n\r\nMakes sense\r\n\r\n",
              "createdAt": "2021-08-20T18:51:49Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -124,14 +124,12 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC\n                     // than give them a generic error, we want to give a more specific message.  This exception cannot be caught by\n                     // the resolver itself because it is usually thrown before the class is loaded\n                     // MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable \"{0}\" to the folder that contains the required NuGet assemblies. {1}\n-                    loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), \"CouldNotRunNuGetSdkResolver\", MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message);\n-                    continue;\n+                    throw new Exception(string.Format(ResourceUtilities.GetResourceString(\"CouldNotRunNuGetSdkResolver\"), MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message));\n                 }\n                 catch (Exception e)\n                 {\n-                    // MSB4242: The SDK resolver \"{0}\" failed to run. {1}\n-                    loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), \"CouldNotRunSdkResolver\", sdkResolver.Name, e.Message);\n-                    continue;\n+                    // MSB4242: The SDK resolver \"{0}\" failed while attempting to resolve the SDK \"{1}\": {2}\n+                    throw new Exception(string.Format(ResourceUtilities.GetResourceString(\"SDKResolverFailed\"), sdkResolver.Name, sdk.ToString(), e.Message));",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there a particular exception we expect this to throw?",
              "createdAt": "2021-08-20T15:39:01Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -1785,7 +1785,14 @@ private List<ProjectRootElement> ExpandAndLoadImports(string directoryOfImportin\n                 }\n \n                 // Combine SDK path with the \"project\" relative path\n-                sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                try\n+                {\n+                    sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                }\n+                catch (Exception e)",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I was thinking of creating an `SdkResolverException` of some kind, but couldn't think of anything specific to add to it. In theory it could hold the resolver's name, sdk name, basically whatever's being used in this string.format. Then the evaluator would do exactly what's happening here.\r\n\r\nNow that I'm actively thinking about it, having the evaluator check specifically for an sdkresolverexception might make more sense. If anything else throws (outside of the resolvers actually resolving) then we'd immediately be aware of a new case.",
              "createdAt": "2021-08-20T18:51:48Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -1785,7 +1785,14 @@ private List<ProjectRootElement> ExpandAndLoadImports(string directoryOfImportin\n                 }\n \n                 // Combine SDK path with the \"project\" relative path\n-                sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                try\n+                {\n+                    sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                }\n+                catch (Exception e)",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Yeah, I don't think we should be throwing the base `Exception` class.  There may already be an exception type defined that would make sense here, so we might not need to create a new one.  @rainersigwald, any suggestiens?",
              "createdAt": "2021-08-20T18:54:29Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -1785,7 +1785,14 @@ private List<ProjectRootElement> ExpandAndLoadImports(string directoryOfImportin\n                 }\n \n                 // Combine SDK path with the \"project\" relative path\n-                sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                try\n+                {\n+                    sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                }\n+                catch (Exception e)",
              "author": {
                "login": "dsplaisted"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Assert `MockSdkResolverThrows` and `EXMESSAGE` still?",
              "createdAt": "2021-08-24T02:43:45Z",
              "path": "src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs",
              "diffHunk": "@@ -85,16 +85,14 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi\n         }\n \n         [Fact]\n-        public void AssertErrorLoggedWhenResolverThrows()\n+        public void AssertResolverThrows()\n         {\n             SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeErrorResolver: true));\n \n             SdkReference sdk = new SdkReference(\"1sdkName\", \"version1\", \"minimumVersion\");\n \n-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false);\n-\n-            result.Path.ShouldBe(\"resolverpath1\");\n-            _logger.Warnings.Select(i => i.Message).ShouldBe(new [] { \"The SDK resolver \\\"MockSdkResolverThrows\\\" failed to run. EXMESSAGE\" });\n+            // When an SDK resolver throws, the expander will catch it and stop the build.\n+            Should.Throw<SdkResolverException>(() => SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "No warnings or errors are logged in this codepath anymore, and there are other tests that verify warnings/errors.",
              "createdAt": "2021-08-24T19:02:02Z",
              "path": "src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs",
              "diffHunk": "@@ -85,16 +85,14 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi\n         }\n \n         [Fact]\n-        public void AssertErrorLoggedWhenResolverThrows()\n+        public void AssertResolverThrows()\n         {\n             SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeErrorResolver: true));\n \n             SdkReference sdk = new SdkReference(\"1sdkName\", \"version1\", \"minimumVersion\");\n \n-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false);\n-\n-            result.Path.ShouldBe(\"resolverpath1\");\n-            _logger.Warnings.Select(i => i.Message).ShouldBe(new [] { \"The SDK resolver \\\"MockSdkResolverThrows\\\" failed to run. EXMESSAGE\" });\n+            // When an SDK resolver throws, the expander will catch it and stop the build.\n+            Should.Throw<SdkResolverException>(() => SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false));",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I was asking (confusingly) if we should verify that the exception's data fields were populated correctly.",
              "createdAt": "2021-08-24T19:53:19Z",
              "path": "src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs",
              "diffHunk": "@@ -85,16 +85,14 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi\n         }\n \n         [Fact]\n-        public void AssertErrorLoggedWhenResolverThrows()\n+        public void AssertResolverThrows()\n         {\n             SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeErrorResolver: true));\n \n             SdkReference sdk = new SdkReference(\"1sdkName\", \"version1\", \"minimumVersion\");\n \n-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false);\n-\n-            result.Path.ShouldBe(\"resolverpath1\");\n-            _logger.Warnings.Select(i => i.Message).ShouldBe(new [] { \"The SDK resolver \\\"MockSdkResolverThrows\\\" failed to run. EXMESSAGE\" });\n+            // When an SDK resolver throws, the expander will catch it and stop the build.\n+            Should.Throw<SdkResolverException>(() => SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Added checks to ensure `MockSdkResolverThrows` and `EXMESSAGE` are contained in the exception's message.",
              "createdAt": "2021-08-24T21:05:35Z",
              "path": "src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs",
              "diffHunk": "@@ -85,16 +85,14 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi\n         }\n \n         [Fact]\n-        public void AssertErrorLoggedWhenResolverThrows()\n+        public void AssertResolverThrows()\n         {\n             SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeErrorResolver: true));\n \n             SdkReference sdk = new SdkReference(\"1sdkName\", \"version1\", \"minimumVersion\");\n \n-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false);\n-\n-            result.Path.ShouldBe(\"resolverpath1\");\n-            _logger.Warnings.Select(i => i.Message).ShouldBe(new [] { \"The SDK resolver \\\"MockSdkResolverThrows\\\" failed to run. EXMESSAGE\" });\n+            // When an SDK resolver throws, the expander will catch it and stop the build.\n+            Should.Throw<SdkResolverException>(() => SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation(\"file\"), \"sln\", \"projectPath\", interactive: false, isRunningInVisualStudio: false));",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "So I know this is what was here before, but `Exception.Message` is a bit of a code smell since it hides information (specifically the stack at the point of failure). Should that just be\r\n```suggestion\r\n                    throw new SdkResolverException(\"CouldNotRunNuGetSdkResolver\", sdkResolver, sdk, e, MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.ToString());\r\n```\r\n\r\n?",
              "createdAt": "2021-08-24T02:45:50Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -123,15 +123,13 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC\n                     // to load NuGet assemblies at runtime which could fail if the user is not running installed MSBuild.  Rather\n                     // than give them a generic error, we want to give a more specific message.  This exception cannot be caught by\n                     // the resolver itself because it is usually thrown before the class is loaded\n-                    // MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable \"{0}\" to the folder that contains the required NuGet assemblies. {1}\n-                    loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), \"CouldNotRunNuGetSdkResolver\", MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message);\n-                    continue;\n+                    // The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable \"{0}\" to the folder that contains the required NuGet assemblies. {1}\n+                    throw new SdkResolverException(\"CouldNotRunNuGetSdkResolver\", sdkResolver, sdk, e, MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "It looks like `ProjectErrorUtilities.ThrowInvalidProject` prepends the error code to every line of the stack trace. Looks a little messy, is this still preferred? (this is with the Evaluator throwing using `e.Message`)\r\n\r\n```\r\nBuild FAILED.\r\n\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242: SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.Text.Json.JsonReaderException: 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes) in System.Text.Json.dll:token 0x60000de+0x0\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenUntilAfterAllCommentsAreSkipped(Byte marker) in System.Text.Json.dll:token 0x6000315+0x1fc\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker) in System.Text.Json.dll:token 0x6000311+0x3c\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker) in System.Text.Json.dll:token 0x6000310+0x24\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ReadSingleSegment() in System.Text.Json.dll:token 0x60002fc+0x113\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.Read() in System.Text.Json.dll:token 0x60002e8+0x8\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.Utf8JsonStreamReader.Read() in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x60000ef+0x12f\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinition(WorkloadId id, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000082+0x2ff\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinitions(Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600007c+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String id, String informationalPath, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000079+0x124\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String manifestId, Stream manifestStream, String informationalPath) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000084+0x23\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.LoadManifestsFromProvider(IWorkloadManifestProvider manifestProvider) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600009e+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.Create(IWorkloadManifestProvider manifestProvider, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000099+0x8a\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x6000019+0x5b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.WorkloadSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext resolverContext, SdkResultFactory factory) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x600001c+0x50\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\SdkResolverService.cs:line 118\"\"\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```",
              "createdAt": "2021-08-24T18:25:01Z",
              "path": "src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs",
              "diffHunk": "@@ -123,15 +123,13 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC\n                     // to load NuGet assemblies at runtime which could fail if the user is not running installed MSBuild.  Rather\n                     // than give them a generic error, we want to give a more specific message.  This exception cannot be caught by\n                     // the resolver itself because it is usually thrown before the class is loaded\n-                    // MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable \"{0}\" to the folder that contains the required NuGet assemblies. {1}\n-                    loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), \"CouldNotRunNuGetSdkResolver\", MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message);\n-                    continue;\n+                    // The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable \"{0}\" to the folder that contains the required NuGet assemblies. {1}\n+                    throw new SdkResolverException(\"CouldNotRunNuGetSdkResolver\", sdkResolver, sdk, e, MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message);",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Likewise here this seems like it might be able to be better. `e.InnerException.ToString()`?",
              "createdAt": "2021-08-24T02:46:56Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -1785,7 +1785,14 @@ private List<ProjectRootElement> ExpandAndLoadImports(string directoryOfImportin\n                 }\n \n                 // Combine SDK path with the \"project\" relative path\n-                sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                try\n+                {\n+                    sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                }\n+                catch (SdkResolverException e)\n+                {\n+                    ProjectErrorUtilities.ThrowInvalidProject(importElement.SdkLocation, \"SDKResolverCriticalFailure\", e.Message);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "If we log the inner exception's message here we lose the stack trace & resource message that was logged when the resolver failed and end up with:\r\n\r\n```\r\nC:\\src\\issues\\6763-sdkresolvers\\console>\"C:\\Users\\bevillal\\Downloads\\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\\dotnet.exe\" build\r\nMicrosoft (R) Build Engine version 17.0.0-dev-21424-01+2cafba516 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242: SDK Resolver Failure: \"'s' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\"\r\n\r\nBuild FAILED.\r\n\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242: SDK Resolver Failure: \"'s' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\"\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.18\r\n```\r\n\r\nSee the above comment for what it would look like if we use `e.ToString()`\r\n\r\n\r\nBelow is `e.ToString()` with the resolverservice logging its `e.ToString()`. This is just too verbose imo.\r\n\r\n```\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242: SDK Resolver Failure: \"Microsoft.Build.BackEnd.SdkResolution.SdkResolverException: The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.Text.Json.JsonReaderException: 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes) in System.Text.Json.dll:token 0x60000de+0x0\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenUntilAfterAllCommentsAreSkipped(Byte marker) in System.Text.Json.dll:token 0x6000315+0x1fc\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker) in System.Text.Json.dll:token 0x6000311+0x3c\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker) in System.Text.Json.dll:token 0x6000310+0x24\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ReadSingleSegment() in System.Text.Json.dll:token 0x60002fc+0x113\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.Read() in System.Text.Json.dll:token 0x60002e8+0x8\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.Utf8JsonStreamReader.Read() in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x60000ef+0x12f\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinition(WorkloadId id, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000082+0x2ff\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinitions(Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600007c+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String id, String informationalPath, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000079+0x124\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String manifestId, Stream manifestStream, String informationalPath) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000084+0x23\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.LoadManifestsFromProvider(IWorkloadManifestProvider manifestProvider) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600009e+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.Create(IWorkloadManifestProvider manifestProvider, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000099+0x8a\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x6000019+0x5b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.WorkloadSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext resolverContext, SdkResultFactory factory) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x600001c+0x50\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\SdkResolverService.cs:line 118\"\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:  ---> System.Text.Json.JsonReaderException: 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes) in System.Text.Json.dll:token 0x60000de+0x0\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenUntilAfterAllCommentsAreSkipped(Byte marker) in System.Text.Json.dll:token 0x6000315+0x1fc\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker) in System.Text.Json.dll:token 0x6000311+0x3c\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker) in System.Text.Json.dll:token 0x6000310+0x24\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ReadSingleSegment() in System.Text.Json.dll:token 0x60002fc+0x113\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.Read() in System.Text.Json.dll:token 0x60002e8+0x8\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.Utf8JsonStreamReader.Read() in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x60000ef+0x12f\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinition(WorkloadId id, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000082+0x2ff\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinitions(Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600007c+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String id, String informationalPath, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000079+0x124\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String manifestId, Stream manifestStream, String informationalPath) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000084+0x23\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.LoadManifestsFromProvider(IWorkloadManifestProvider manifestProvider) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600009e+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.Create(IWorkloadManifestProvider manifestProvider, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000099+0x8a\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x6000019+0x5b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.WorkloadSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext resolverContext, SdkResultFactory factory) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x600001c+0x50\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\SdkResolverService.cs:line 118\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    --- End of inner exception stack trace ---\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\SdkResolverService.cs:line 132\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.<>n__0(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in Microsoft.Build.dll:token 0x600169e+0x0\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.<>c__DisplayClass3_0.<ResolveSdk>b__1() in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\CachingSdkResolverService.cs:line 55\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode) in System.Private.CoreLib.dll:token 0x60013b6+0x1c\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor) in System.Private.CoreLib.dll:token 0x60013b7+0x22\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Lazy`1.CreateValue() in System.Private.CoreLib.dll:token 0x60013bc+0x74\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Lazy`1.get_Value() in System.Private.CoreLib.dll:token 0x60013c2+0xa\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\CachingSdkResolverService.cs:line 58\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.MainNodeSdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\MainNodeSdkResolverService.cs:line 95\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError) in C:\\src\\git\\msbuild\\src\\Build\\Evaluation\\Evaluator.cs:line 1790\"\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nBelow is `e.InnerException.ToString()` when resolverservice logs its `e.ToString()`. Here we don't get which sdkresolver failed resolving which sdk.\r\n\r\n```\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242: SDK Resolver Failure: \"System.Text.Json.JsonReaderException: 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes) in System.Text.Json.dll:token 0x60000de+0x0\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenUntilAfterAllCommentsAreSkipped(Byte marker) in System.Text.Json.dll:token 0x6000315+0x1fc\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker) in System.Text.Json.dll:token 0x6000311+0x3c\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker) in System.Text.Json.dll:token 0x6000310+0x24\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ReadSingleSegment() in System.Text.Json.dll:token 0x60002fc+0x113\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.Read() in System.Text.Json.dll:token 0x60002e8+0x8\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.Utf8JsonStreamReader.Read() in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x60000ef+0x12f\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinition(WorkloadId id, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000082+0x2ff\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinitions(Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600007c+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String id, String informationalPath, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000079+0x124\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String manifestId, Stream manifestStream, String informationalPath) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000084+0x23\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.LoadManifestsFromProvider(IWorkloadManifestProvider manifestProvider) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600009e+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.Create(IWorkloadManifestProvider manifestProvider, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000099+0x8a\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x6000019+0x5b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.WorkloadSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext resolverContext, SdkResultFactory factory) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x600001c+0x50\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\SdkResolverService.cs:line 118\"\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nAnd here is evaluator logging `e.Message` while resolverservice logs `e.ToString()`. This one is ideal because we get:\r\n1. Overall MSB4242.\r\n2. Which SDKresolver failed, and which SDK it failed to resolve\r\n3. Inner exception ('s' is an invalid...)\r\n4. Stack trace\r\n\r\n```\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242: SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.Text.Json.JsonReaderException: 's' is an invalid start of a property name. Expected a '\"'. LineNumber: 14 | BytePositionInLine: 8.\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes) in System.Text.Json.dll:token 0x60000de+0x0\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenUntilAfterAllCommentsAreSkipped(Byte marker) in System.Text.Json.dll:token 0x6000315+0x1fc\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker) in System.Text.Json.dll:token 0x6000311+0x3c\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker) in System.Text.Json.dll:token 0x6000310+0x24\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.ReadSingleSegment() in System.Text.Json.dll:token 0x60002fc+0x113\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at System.Text.Json.Utf8JsonReader.Read() in System.Text.Json.dll:token 0x60002e8+0x8\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.Utf8JsonStreamReader.Read() in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x60000ef+0x12f\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinition(WorkloadId id, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000082+0x2ff\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadDefinitions(Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600007c+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String id, String informationalPath, Utf8JsonStreamReader& reader) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000079+0x124\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestReader.ReadWorkloadManifest(String manifestId, Stream manifestStream, String informationalPath) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000084+0x23\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.LoadManifestsFromProvider(IWorkloadManifestProvider manifestProvider) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x600009e+0x2b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.Create(IWorkloadManifestProvider manifestProvider, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadManifestReader.dll:token 0x6000099+0x8a\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x6000019+0x5b\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.WorkloadSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext resolverContext, SdkResultFactory factory) in Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll:token 0x600001c+0x50\r\nC:\\src\\issues\\6763-sdkresolvers\\console\\console.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio) in C:\\src\\git\\msbuild\\src\\Build\\BackEnd\\Components\\SdkResolution\\SdkResolverService.cs:line 118\"\"\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nGoing with the last one unless another is preferred.",
              "createdAt": "2021-08-24T18:37:30Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -1785,7 +1785,14 @@ private List<ProjectRootElement> ExpandAndLoadImports(string directoryOfImportin\n                 }\n \n                 // Combine SDK path with the \"project\" relative path\n-                sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                try\n+                {\n+                    sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                }\n+                catch (SdkResolverException e)\n+                {\n+                    ProjectErrorUtilities.ThrowInvalidProject(importElement.SdkLocation, \"SDKResolverCriticalFailure\", e.Message);",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "That last one looks good. A bit chatty but this is always a resolver bug so I prefer to get a bunch of info out. Please comment the Message call so it stands out to future code smellers.",
              "createdAt": "2021-08-24T19:57:47Z",
              "path": "src/Build/Evaluation/Evaluator.cs",
              "diffHunk": "@@ -1785,7 +1785,14 @@ private List<ProjectRootElement> ExpandAndLoadImports(string directoryOfImportin\n                 }\n \n                 // Combine SDK path with the \"project\" relative path\n-                sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                try\n+                {\n+                    sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);\n+                }\n+                catch (SdkResolverException e)\n+                {\n+                    ProjectErrorUtilities.ThrowInvalidProject(importElement.SdkLocation, \"SDKResolverCriticalFailure\", e.Message);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}