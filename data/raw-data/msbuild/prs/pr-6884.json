{
  "number": 6884,
  "title": "Avoid appending x64 to AL path if x64 is already appended",
  "body": "Fixes users who previously worked around the issue of msbuild not using the x64 version of AL.exe.\r\n\r\n### Context\r\n\r\n\r\n### Changes Made\r\nOnly append `x64\\` to `_AlExeToolPath` when `PlatformTarget` == `x64` AND `_AlExeToolPath` doesn't already end with `x64\\`\r\n\r\n### Testing\r\nTested locally\r\n\r\n### Notes",
  "state": "MERGED",
  "createdAt": "2021-09-23T18:06:16Z",
  "updatedAt": "2021-09-27T16:42:46Z",
  "closedAt": "2021-09-27T16:42:45Z",
  "mergedAt": "2021-09-27T16:42:45Z",
  "additions": 1,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "alpath-appending-x64",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "d0a7769ebb3afdeeb12be0d7543bc05aff78ab0f",
          "message": "Check that x64 is not already part of the path before appending. This avoids breaks with customers previous workarounds",
          "committedDate": "2021-09-23T18:17:37Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2d0770d9cddaeb48fd0ac713d6974af6d221d909",
          "message": "Add parens",
          "committedDate": "2021-09-24T20:28:32Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "There is a missing `)`. So, `.EndsWith('x64\\')` -> `.EndsWith('x64\\'))`\r\n\r\nGood news is, this change gets rid of a ton of **MSB3084** warnings I was getting. Here's the warning I was getting in case others report it:\r\n\r\nTask attempted to find \"al.exe\" in two locations. 1) Under the \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\x64\\x64\\\" processor specific directory which is generated based on SdkToolsPath 2) The x86 specific directory under \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\x64\\x64\\\" which is specified by the SDKToolsPath property. You may be able to solve the problem by doing one of the following:  1) Set the \"SDKToolsPath\" property to the location of the Microsoft Windows SDK.",
              "createdAt": "2021-09-24T19:54:43Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -3878,7 +3878,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n     <PropertyGroup>\n       <_ALExeToolPath>$(TargetFrameworkSDKToolsDirectory)</_ALExeToolPath>\n-      <_ALExeToolPath Condition=\"'$(PlatformTarget)' == 'x64'\">$(TargetFrameworkSDKToolsDirectory)$(PlatformTarget)\\</_ALExeToolPath>\n+      <_ALExeToolPath Condition=\"'$(PlatformTarget)' == 'x64' and !$(_ALExeToolPath.EndsWith('x64\\')\">$(TargetFrameworkSDKToolsDirectory)x64\\</_ALExeToolPath>",
              "author": {
                "login": "jhennessey"
              }
            },
            {
              "body": "ah good catch!\r\n\r\nDo you happen to know where it had `x64\\` appended prior to this target running? The original issue suggested it was never getting appended, but it sounds like other packages were manually appending it and now this is conflicting.",
              "createdAt": "2021-09-24T20:30:06Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -3878,7 +3878,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n     <PropertyGroup>\n       <_ALExeToolPath>$(TargetFrameworkSDKToolsDirectory)</_ALExeToolPath>\n-      <_ALExeToolPath Condition=\"'$(PlatformTarget)' == 'x64'\">$(TargetFrameworkSDKToolsDirectory)$(PlatformTarget)\\</_ALExeToolPath>\n+      <_ALExeToolPath Condition=\"'$(PlatformTarget)' == 'x64' and !$(_ALExeToolPath.EndsWith('x64\\')\">$(TargetFrameworkSDKToolsDirectory)x64\\</_ALExeToolPath>",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "> Do you happen to know where it had x64\\ appended prior to this target running? The original issue suggested it was never getting appended, but it sounds like other packages were manually appending it and now this is conflicting.\r\n\r\nOh, geez...It looks like someone implemented a suggestion from [stackoverflow](https://stackoverflow.com/questions/25365616/alink-warning-al1073-referenced-assembly-mscorlib-dll-targets-a-different-p/41945190#41945190)  in our codebase to alleviate `AL1073` warnings. So your fix in #6484 means that can be removed. Kindly disregard \ud83d\ude0a.",
              "createdAt": "2021-09-24T21:15:09Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -3878,7 +3878,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n \n     <PropertyGroup>\n       <_ALExeToolPath>$(TargetFrameworkSDKToolsDirectory)</_ALExeToolPath>\n-      <_ALExeToolPath Condition=\"'$(PlatformTarget)' == 'x64'\">$(TargetFrameworkSDKToolsDirectory)$(PlatformTarget)\\</_ALExeToolPath>\n+      <_ALExeToolPath Condition=\"'$(PlatformTarget)' == 'x64' and !$(_ALExeToolPath.EndsWith('x64\\')\">$(TargetFrameworkSDKToolsDirectory)x64\\</_ALExeToolPath>",
              "author": {
                "login": "jhennessey"
              }
            }
          ]
        }
      }
    ]
  }
}