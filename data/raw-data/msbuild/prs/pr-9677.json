{
  "number": 9677,
  "title": "Respect response files (ignoreProjectExtensions) property",
  "body": "Fixes #9507\r\n\r\n### Context\r\nThe ignoreProjectExtensions are not respected if specidified in response file on project level. \r\nThe exception will be thrown in case there are ambiguous files identified in provided directory. Example:\r\nDirectiory contains: \r\n>     1.sln \r\n>     2.csproj \r\n\r\nThe build fails since there are multiple files identified to build. \r\nIgnoreProjectExtensions: .sln solves the situation but when specified in response file on project level the error will raise before the usage of the response file. \r\n\r\n### Changes Made\r\nIdentifying projectFile was extracted from CheckAndGatherProjectAutoResponseFile, and moved to ProcessCommandLineSwitches. \r\n\r\n### Testing\r\nAdded specific to the case test case\r\nAll existing tests should pass ",
  "state": "MERGED",
  "createdAt": "2024-01-24T09:44:48Z",
  "updatedAt": "2024-06-14T10:04:42Z",
  "closedAt": "2024-02-06T10:51:23Z",
  "mergedAt": "2024-02-06T10:51:23Z",
  "additions": 55,
  "deletions": 11,
  "changedFiles": 2,
  "headRefName": "dev/f-alizada/respect-response-file",
  "isDraft": false,
  "author": {
    "login": "f-alizada"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "f-alizada"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "fd00549168c2a95551d7d53d703254e1900f83fd",
          "message": "Respect response files (ignoreProjectExtensions) property",
          "committedDate": "2024-01-24T09:30:46Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "291800f449ed4530449f66c006def8dc3fcf4acd",
          "message": "Address PR review",
          "committedDate": "2024-01-25T08:23:39Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7d317c72eb8b792a01d99ccdf673904461393d3c",
          "message": "Merge branch 'main' into dev/f-alizada/respect-response-file",
          "committedDate": "2024-01-29T10:01:07Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ddafe9ce9b86343715c6237075d46831e0b6c733",
          "message": "Merge branch 'main' into dev/f-alizada/respect-response-file",
          "committedDate": "2024-02-05T08:49:18Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "56d360a17a3cc32b4c5b3074e5b5ac2b25a8d6ff",
          "message": "Address PR comments",
          "committedDate": "2024-02-05T08:59:04Z",
          "author": {
            "name": "Farhad Alizada",
            "email": "falizada@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "You can (and should) `TestEnvironment` here (look for usages of `_env` in this test file for samples).\r\nCleanup will than be taken care off byt the env",
              "createdAt": "2024-01-24T19:31:53Z",
              "path": "src/MSBuild.UnitTests/XMake_Tests.cs",
              "diffHunk": "@@ -1524,6 +1524,44 @@ public void ResponseFileInProjectDirectoryButCommandLineNoAutoResponseSwitch()\n             }\n         }\n \n+        /// <summary>\n+        /// Directory.Build.rsp in the directory of the specified project/solution should be respected when searching the files (solution/proj) to build.\n+        /// </summary>\n+        [Fact]\n+        public void ResponseFileInProjectDirectoryWithSolutionProjectDifferentNamesShouldBeRespected()\n+        {\n+            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString(\"N\"));\n+            string projectPath = Path.Combine(directory, \"projectFile.proj\");\n+            string solutionPath = Path.Combine(directory, \"solutionFile.sln\");\n+            string rspPath = Path.Combine(directory, \"Directory.Build.rsp\");",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Thank you for pointing out, updated",
              "createdAt": "2024-01-25T08:27:48Z",
              "path": "src/MSBuild.UnitTests/XMake_Tests.cs",
              "diffHunk": "@@ -1524,6 +1524,44 @@ public void ResponseFileInProjectDirectoryButCommandLineNoAutoResponseSwitch()\n             }\n         }\n \n+        /// <summary>\n+        /// Directory.Build.rsp in the directory of the specified project/solution should be respected when searching the files (solution/proj) to build.\n+        /// </summary>\n+        [Fact]\n+        public void ResponseFileInProjectDirectoryWithSolutionProjectDifferentNamesShouldBeRespected()\n+        {\n+            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString(\"N\"));\n+            string projectPath = Path.Combine(directory, \"projectFile.proj\");\n+            string solutionPath = Path.Combine(directory, \"solutionFile.sln\");\n+            string rspPath = Path.Combine(directory, \"Directory.Build.rsp\");",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "@JanKrivanek The pr #9682  tries to resolve the possible future comments like that. At least for this file :)  ",
              "createdAt": "2024-01-25T12:39:21Z",
              "path": "src/MSBuild.UnitTests/XMake_Tests.cs",
              "diffHunk": "@@ -1524,6 +1524,44 @@ public void ResponseFileInProjectDirectoryButCommandLineNoAutoResponseSwitch()\n             }\n         }\n \n+        /// <summary>\n+        /// Directory.Build.rsp in the directory of the specified project/solution should be respected when searching the files (solution/proj) to build.\n+        /// </summary>\n+        [Fact]\n+        public void ResponseFileInProjectDirectoryWithSolutionProjectDifferentNamesShouldBeRespected()\n+        {\n+            string directory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString(\"N\"));\n+            string projectPath = Path.Combine(directory, \"projectFile.proj\");\n+            string solutionPath = Path.Combine(directory, \"solutionFile.sln\");\n+            string rspPath = Path.Combine(directory, \"Directory.Build.rsp\");",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Even if rethorical, questions can be confusing in code comments",
              "createdAt": "2024-01-24T19:51:36Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2556,6 +2556,9 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n                                                            commandLine);\n                     }\n \n+                    // why not process the project parameter here?",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "100% agree, this was my initial idea to move the logic one level up from inner methods, will remove the comment thank you for noticing! ",
              "createdAt": "2024-01-24T19:58:11Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2556,6 +2556,9 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n                                                            commandLine);\n                     }\n \n+                    // why not process the project parameter here?",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "Removed, thanks one more time. ",
              "createdAt": "2024-01-25T08:24:19Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2556,6 +2556,9 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n                                                            commandLine);\n                     }\n \n+                    // why not process the project parameter here?",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "A modern minimal test project doesn't require this boilerplate any more if you want to shorten it.\r\n```suggestion\r\n            var content = ObjectModelHelpers.CleanupFileContents(\"<Project><Target Name='t'><Message Text='Completed'/></Target></Project>\");\r\n```",
              "createdAt": "2024-01-30T15:29:22Z",
              "path": "src/MSBuild.UnitTests/XMake_Tests.cs",
              "diffHunk": "@@ -1442,6 +1442,23 @@ public void ResponseFileInProjectDirectoryButCommandLineNoAutoResponseSwitch()\n             output.ShouldContain(\"[A=]\");\n         }\n \n+        /// <summary>\n+        /// Directory.Build.rsp in the directory of the specified project/solution should be respected when searching the files (solution/proj) to build.\n+        /// </summary>\n+        [Fact]\n+        public void ResponseFileInProjectDirectoryWithSolutionProjectDifferentNamesShouldBeRespected()\n+        {\n+            var directory = _env.CreateFolder();\n+            var content = ObjectModelHelpers.CleanupFileContents(\"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Message Text='Completed'/></Target></Project>\");",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Updated thank you! ",
              "createdAt": "2024-02-05T09:15:41Z",
              "path": "src/MSBuild.UnitTests/XMake_Tests.cs",
              "diffHunk": "@@ -1442,6 +1442,23 @@ public void ResponseFileInProjectDirectoryButCommandLineNoAutoResponseSwitch()\n             output.ShouldContain(\"[A=]\");\n         }\n \n+        /// <summary>\n+        /// Directory.Build.rsp in the directory of the specified project/solution should be respected when searching the files (solution/proj) to build.\n+        /// </summary>\n+        [Fact]\n+        public void ResponseFileInProjectDirectoryWithSolutionProjectDifferentNamesShouldBeRespected()\n+        {\n+            var directory = _env.CreateFolder();\n+            var content = ObjectModelHelpers.CleanupFileContents(\"<Project ToolsVersion='msbuilddefaulttoolsversion' xmlns='msbuildnamespace'><Target Name='t'><Message Text='Completed'/></Target></Project>\");",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What's the motivation for `FixFilePath` here?",
              "createdAt": "2024-01-30T18:17:21Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2912,18 +2914,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine\n             return commandLineSwitches;\n         }\n \n-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)\n+        private static string GetProjectDirectory(string[] projectSwitchParameters)\n         {\n-            bool found = false;\n+            string projectDirectory = \".\";\n+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"It should not be possible to specify more than 1 project at a time.\");\n \n-            // figure out what project we are building\n-            projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);\n+            if (projectSwitchParameters.Length == 1)\n+            {\n+                var projectFile = FileUtilities.FixFilePath(projectSwitchParameters[0]);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "To properly handle the path provided in case we are running in unix like os.  The codebase was basically cloned from ProcessProjectSwitch. \r\nBoth those methods could be called separately but we have the case when they called one after another, and just possibly not to change behaviour of the method it was left the same. ",
              "createdAt": "2024-02-05T10:18:21Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2912,18 +2914,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine\n             return commandLineSwitches;\n         }\n \n-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)\n+        private static string GetProjectDirectory(string[] projectSwitchParameters)\n         {\n-            bool found = false;\n+            string projectDirectory = \".\";\n+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"It should not be possible to specify more than 1 project at a time.\");\n \n-            // figure out what project we are building\n-            projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);\n+            if (projectSwitchParameters.Length == 1)\n+            {\n+                var projectFile = FileUtilities.FixFilePath(projectSwitchParameters[0]);",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "I don't think I fully understand why `ProcessProjectSwitch` has it but \"it's just like that\" is plenty of justification.",
              "createdAt": "2024-02-05T14:33:43Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2912,18 +2914,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine\n             return commandLineSwitches;\n         }\n \n-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)\n+        private static string GetProjectDirectory(string[] projectSwitchParameters)\n         {\n-            bool found = false;\n+            string projectDirectory = \".\";\n+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"It should not be possible to specify more than 1 project at a time.\");\n \n-            // figure out what project we are building\n-            projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);\n+            if (projectSwitchParameters.Length == 1)\n+            {\n+                var projectFile = FileUtilities.FixFilePath(projectSwitchParameters[0]);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "It isn't now, so this assert is good, but I'd change the comment since some users have asked for this (though I can't find an issue).\r\n```suggestion\r\n            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"Expect exactly one project at a time.\");\r\n```",
              "createdAt": "2024-01-30T18:19:47Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2912,18 +2914,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine\n             return commandLineSwitches;\n         }\n \n-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)\n+        private static string GetProjectDirectory(string[] projectSwitchParameters)\n         {\n-            bool found = false;\n+            string projectDirectory = \".\";\n+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"It should not be possible to specify more than 1 project at a time.\");",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Updated the text, thank you! ",
              "createdAt": "2024-02-05T09:16:18Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2912,18 +2914,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine\n             return commandLineSwitches;\n         }\n \n-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)\n+        private static string GetProjectDirectory(string[] projectSwitchParameters)\n         {\n-            bool found = false;\n+            string projectDirectory = \".\";\n+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"It should not be possible to specify more than 1 project at a time.\");",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This combination of calls reads slightly oddly to me. Should you normalize the path before passing it to FileExists?",
              "createdAt": "2024-01-30T18:24:51Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2912,18 +2914,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine\n             return commandLineSwitches;\n         }\n \n-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)\n+        private static string GetProjectDirectory(string[] projectSwitchParameters)\n         {\n-            bool found = false;\n+            string projectDirectory = \".\";\n+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"It should not be possible to specify more than 1 project at a time.\");\n \n-            // figure out what project we are building\n-            projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);\n+            if (projectSwitchParameters.Length == 1)\n+            {\n+                var projectFile = FileUtilities.FixFilePath(projectSwitchParameters[0]);\n+\n+                if (FileSystems.Default.DirectoryExists(projectFile))\n+                {\n+                    // the provided argument value is actually the directory\n+                    projectDirectory = projectFile;\n+                }\n+                else\n+                {\n+                    InitializationException.VerifyThrow(FileSystems.Default.FileExists(projectFile), \"ProjectNotFoundError\", projectFile);\n+                    projectDirectory = Path.GetDirectoryName(Path.GetFullPath(projectFile));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "May I clarify which scenarios it should cover? (normalizing the path before verification)?",
              "createdAt": "2024-02-05T09:57:47Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2912,18 +2914,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine\n             return commandLineSwitches;\n         }\n \n-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)\n+        private static string GetProjectDirectory(string[] projectSwitchParameters)\n         {\n-            bool found = false;\n+            string projectDirectory = \".\";\n+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"It should not be possible to specify more than 1 project at a time.\");\n \n-            // figure out what project we are building\n-            projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);\n+            if (projectSwitchParameters.Length == 1)\n+            {\n+                var projectFile = FileUtilities.FixFilePath(projectSwitchParameters[0]);\n+\n+                if (FileSystems.Default.DirectoryExists(projectFile))\n+                {\n+                    // the provided argument value is actually the directory\n+                    projectDirectory = projectFile;\n+                }\n+                else\n+                {\n+                    InitializationException.VerifyThrow(FileSystems.Default.FileExists(projectFile), \"ProjectNotFoundError\", projectFile);\n+                    projectDirectory = Path.GetDirectoryName(Path.GetFullPath(projectFile));",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "Looking at this I don't think it's worth changing anything.",
              "createdAt": "2024-02-05T14:36:36Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2912,18 +2914,43 @@ private static CommandLineSwitches CombineSwitchesRespectingPriority(CommandLine\n             return commandLineSwitches;\n         }\n \n-        private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine, out string projectFile)\n+        private static string GetProjectDirectory(string[] projectSwitchParameters)\n         {\n-            bool found = false;\n+            string projectDirectory = \".\";\n+            ErrorUtilities.VerifyThrow(projectSwitchParameters.Length <= 1, \"It should not be possible to specify more than 1 project at a time.\");\n \n-            // figure out what project we are building\n-            projectFile = ProcessProjectSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project], commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.IgnoreProjectExtensions], Directory.GetFiles);\n+            if (projectSwitchParameters.Length == 1)\n+            {\n+                var projectFile = FileUtilities.FixFilePath(projectSwitchParameters[0]);\n+\n+                if (FileSystems.Default.DirectoryExists(projectFile))\n+                {\n+                    // the provided argument value is actually the directory\n+                    projectDirectory = projectFile;\n+                }\n+                else\n+                {\n+                    InitializationException.VerifyThrow(FileSystems.Default.FileExists(projectFile), \"ProjectNotFoundError\", projectFile);\n+                    projectDirectory = Path.GetDirectoryName(Path.GetFullPath(projectFile));",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}