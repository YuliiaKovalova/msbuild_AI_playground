{
  "number": 9721,
  "title": "Reintroduce FNV hashing",
  "body": "Fixes: #9519, #7131\r\n\r\n### Context\r\nContains changes from:\r\n* Commit 1: https://github.com/dotnet/msbuild/pull/9387 (it was later reverted - https://github.com/dotnet/msbuild/pull/9520 - so first commit is reversal of that change)\r\n* Commit 2: https://github.com/dotnet/msbuild/pull/9489\r\n* Following commit(s): And change supporting choosing the hashing via an optional intrinsic function param.\r\n\r\n### Usage\r\n\r\n```\r\n<!-- Works unchanged. Identical to [MSBuild]::StableStringHash($x, 'Legacy') -->\r\n[MSBuild]::StableStringHash($x)\r\n\r\n<!-- \r\n  $hashAlgo will currently allow:\r\n    'Legacy' - the legacy behavior (mimicking string.GetHashCode)\r\n    'Fnv1a32bit' - Fawler-Noll-Vo 1a 32bit\r\n    'Fnv1a32bitFast' - Custom, faster, Fawler-Noll-Vo 1a 32bit\r\n    'Fnv1a64bit' - Fawler-Noll-Vo 1a 64bit\r\n    'Fnv1a64bitFast' -  Custom, faster, Fawler-Noll-Vo 1a 64bit\r\n    'Sha256' - hex string of the Sha256 hash of the given string\r\n-->\r\n[MSBuild]::StableStringHash($x, $hashAlgo)\r\n```\r\n\r\n### Testing\r\n* Existing test on colissions extended for all overloads\r\n* Added test on expected output types\r\n\r\n### Documentation\r\n\r\nOnce PR content is agreed I'll create Doc bug + PR to update https://learn.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2022#msbuild-stablestringhash\r\nWe might not possibly document all the supported algos as of now.",
  "state": "MERGED",
  "createdAt": "2024-02-08T12:33:24Z",
  "updatedAt": "2024-03-13T12:47:06Z",
  "closedAt": "2024-02-16T11:27:22Z",
  "mergedAt": "2024-02-16T11:27:22Z",
  "additions": 236,
  "deletions": 42,
  "changedFiles": 5,
  "headRefName": "revert-9520-revert-stablestringhash",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c12067d68d9637f707351716de11dc76388b45fe",
          "message": "Revert \"Revert \"Shorten UTD marker file (#9387)\" except Microsoft.Common.Curr\u2026\"\n\nThis reverts commit 5af9301a6d46fd40ab1420467d3291519f62c7e6.",
          "committedDate": "2024-02-08T12:30:07Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "krivanek.j@hotmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e94460ac368227f9e0fa7df3d15d24698e6a1d36",
          "message": "Make FNV hash compatible across endianness",
          "committedDate": "2024-02-08T12:37:30Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e1be5b9719d08a2be7e6f6e8adb12ca7774f8537",
          "message": "Add StableStringHash intrinsic function overloads",
          "committedDate": "2024-02-08T13:42:57Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "FYI @KirillOsenkov - this is using the faster versions of FNV from MSBuildStructuredLog (the source and your meassurements are linked in the code)",
        "createdAt": "2024-02-08T13:50:25Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> LGTM! Asking out of curiocity: Is there anything additionally that needs to be done in binarylog viewer after this is merged?\r\n\r\nGood question.\r\nAs a rule of thumb - Viewer needs changes when there is an addition of new derivative of BuildEventArgs or a change in definition of any existing derivatives of BuildEventArgs.\r\nIn this case we are adding property function overloads - this will not have any impact on BuildEventArgs",
        "createdAt": "2024-02-13T13:20:16Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}