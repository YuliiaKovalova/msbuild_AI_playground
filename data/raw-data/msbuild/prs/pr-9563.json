{
  "number": 9563,
  "title": "When time increases by a digit, overwrite NodeStatus",
  "body": "Fixes #9562 by triggering a full-line redraw when the length of the duration string increases.\r\n\r\n\r\nhttps://github.com/dotnet/msbuild/assets/3347530/415828bf-09e9-480f-86c2-010ba26c8eea\r\n",
  "state": "MERGED",
  "createdAt": "2023-12-19T18:39:33Z",
  "updatedAt": "2023-12-21T09:59:16Z",
  "closedAt": "2023-12-21T09:59:15Z",
  "mergedAt": "2023-12-21T09:59:15Z",
  "additions": 274,
  "deletions": 88,
  "changedFiles": 46,
  "headRefName": "tl-digit-muncher",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "3ea3c4996ce70371dd188278a0aba84c10415ff3",
          "message": "When time increases by a digit, overwrite NodeStatus\n\nFixes #9562 by triggering a full-line redraw when the length of the duration string increases.",
          "committedDate": "2023-12-20T11:43:06Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "35460fdd849b38b541639f3d08d8b299ce61b3e2",
          "message": "Introduce StopwatchAbstraction",
          "committedDate": "2023-12-20T11:43:06Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5e2442415c32e6b8a12fee99c4cdc1b53169d702",
          "message": "Use MockStopwatch and turn off scrubbing of timestamps in tl tests",
          "committedDate": "2023-12-20T11:43:06Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "15536e9da150e76c9192b5948d66cf257f4e206c",
          "message": "Emit build-started events in PrintRestore tests\n\nWithout these, the total build elapsed time was surprisingly high (from a timestamp-0 base).",
          "committedDate": "2023-12-20T11:43:06Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cde27684573dcb0bb13481e3622d22c99c9d2b1e",
          "message": "Add regression test for timestamp length",
          "committedDate": "2023-12-20T11:43:06Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9c0df3c013964953cd296fa54435901a3d819efb",
          "message": "Preserve Verify artifacts in PR builds\n\nBased on https://github.com/VerifyTests/Verify/blob/52606c47a07b0c10e53fcfa9809a4e5eb181f51a/docs/wiz/Linux_Other_Cli_xUnit_AzureDevOps.md#getting-received-in-output-on-azure-devops\n\n* Add double quotes around echo argument\n* Use forward slash on *nix\n\nCo-authored-by: Ladi Prosek <laprosek@microsoft.com>",
          "committedDate": "2023-12-20T11:43:07Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ef18b606d8f6a7f26172eca79ccd7a9681cf38e6",
          "message": "Switch to tuple\n\nCo-authored-by: Ladi Prosek <ladi.prosek@gmail.com>",
          "committedDate": "2023-12-20T11:50:39Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Hello! I noticed that you're targeting one of our servicing branches. Please consider updating the version.",
        "createdAt": "2023-12-19T18:39:39Z",
        "author": null
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "As I understand it, you have it set to copy the results that came back from the verify tests when they fail (nice!) but it only applies to windows full, windows core, and macos. Any reason you chose those three and not others? If it's so hard to get these back, it also makes me wonder about the relative value of verify vs. shouldly, but it isn't my place to opine on that.",
              "createdAt": "2023-12-19T20:52:06Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -35,6 +35,11 @@ jobs:\n       mergeTestResults: true\n     continueOnError: true\n     condition: always()\n+  - task: CmdLine@2",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Because we have some `UniqueForOSPlatform()` tests, there are three sets of snapshots checked in, for Windows, macOS, and Linux. It's nontrivial to produce the baselines for all three OSes, so this eases getting back a set of results from each OS, which is why only one of the Windows jobs (chosen arbitrarily) uploads.",
              "createdAt": "2023-12-19T21:42:40Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -35,6 +35,11 @@ jobs:\n       mergeTestResults: true\n     continueOnError: true\n     condition: always()\n+  - task: CmdLine@2",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Not your problem, but thinking about abstractions like this that are useful for testing but mean that in release code, you have an object that points to another object and doesn't really have any further purpose, I'm wondering if it would be a nice (runtime?) feature to essentially inline an object if it doesn't do anything but send redirect requests to one specific inner object.",
              "createdAt": "2023-12-19T20:58:12Z",
              "path": "src/MSBuild/TerminalLogger/SystemStopwatch.cs",
              "diffHunk": "@@ -0,0 +1,24 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System.Diagnostics;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+internal sealed class SystemStopwatch : StopwatchAbstraction",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "The JIT can indeed inline method calls in many cases, and (without actually checking) I'd expect that here, especially post Dynamic PGO which should see that at (real non-test) runtime there's only ever one type of `StopwatchAbstraction` used.",
              "createdAt": "2023-12-19T21:38:02Z",
              "path": "src/MSBuild/TerminalLogger/SystemStopwatch.cs",
              "diffHunk": "@@ -0,0 +1,24 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System.Diagnostics;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+internal sealed class SystemStopwatch : StopwatchAbstraction",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: I am still slightly ruffled by the avoidable allocations made on each frame-render. Would you consider\r\n\r\n```suggestion\r\n    private readonly (NodeStatus nodeStatus, int durationLength)[] _nodes;\r\n```\r\n\r\nor does it feel like a an unnecessary micro optimization?",
              "createdAt": "2023-12-20T09:43:43Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -17,6 +17,7 @@ internal sealed class NodesFrame\n     private const int MaxColumn = 120;\n \n     private readonly NodeStatus[] _nodes;\n+    private readonly int[] _durationLength;",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "The allocations were bugging me too, I will absolutely consider that :)",
              "createdAt": "2023-12-20T11:46:31Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -17,6 +17,7 @@ internal sealed class NodesFrame\n     private const int MaxColumn = 120;\n \n     private readonly NodeStatus[] _nodes;\n+    private readonly int[] _durationLength;",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}