{
  "number": 6234,
  "title": "Pass SolutionFilterName as a property",
  "body": "Fixes internally reported bug\r\n### Context\r\nI had previously added SolutionFilterName as a property. I missed one place it needed to be added for it to be passed properly to BuildRequests. This manifested as build failures in unusual cases when the engine generated a metaproj, didn't save it to disk\u2014only into a cache, then queried the cache to see whether a project had already been built with the same name/guid/global properties. Because the third changed, it failed to recognize it and failed the build.\r\n\r\n### Changes Made\r\nAdded the property in the one missing spot.\r\n\r\n### Testing\r\n@jeffkl showed me it working on one repro on his computer. I intend to try it on another repro shortly.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2021-03-09T20:40:48Z",
  "updatedAt": "2021-03-11T16:32:43Z",
  "closedAt": "2021-03-11T08:28:34Z",
  "mergedAt": "2021-03-11T08:28:34Z",
  "additions": 33,
  "deletions": 1,
  "changedFiles": 2,
  "headRefName": "solutionfiltername-fix",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "bug",
    "regression",
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "bf72f920fe5bc687d5ed392f0c667b07bcc0c387",
          "message": "Pass SolutionFilterName as a property",
          "committedDate": "2021-03-09T20:33:27Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "faf1b133b6c78a5eb9062b23c2daa6800197f63f",
          "message": "Add unit test",
          "committedDate": "2021-03-10T17:34:14Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "super-nit: Can the test solution file be simplified by removing x64 and/or Debug configurations, for example?",
              "createdAt": "2021-03-10T06:39:19Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -749,6 +750,74 @@ public void SolutionConfigurationWithDependencies()\n             Helpers.VerifyAssertLineByLine(expected, solutionConfigurationContents);\n         }\n \n+        /// <summary>\n+        /// This test forces a metaproj to be generated as part of the build. Since metaproj files are not written to disk, it will fail if its cached form does not align\n+        /// with the version that is being built as when a property is part of the version added to the cache, but that version is not passed to the BuildManager.\n+        /// </summary>\n+        [Fact]\n+        public void SolutionGeneratingMetaproj()\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                TransientTestFile proj1 = env.CreateFile(\"A.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj2 = env.CreateFile(\"B.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj3 = env.CreateFile(\"C.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj = env.CreateFile(\"mysln.sln\",\n+                @$\"\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio 11\n+Project(`{\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\"}`) = `A`, `{proj1.Path}`, `{\"{786E302A-96CE-43DC-B640-D6B6CC9BF6C0}\"}`\n+EndProject\n+Project(`{\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\"}`) = `B`, `{proj2.Path}`, `{\"{881C1674-4ECA-451D-85B6-D7C59B7F16FA}\"}`\n+    ProjectSection(ProjectDependencies) = postProject\n+        {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"} = {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"}\n+    EndProjectSection\n+EndProject\n+Project(`{\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\"}`) = `C`, `{proj3.Path}`, `{\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"}`\n+EndProject\n+Global\n+    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n+        Debug|Any CPU = Debug|Any CPU\n+        Debug|x64 = Debug|x64\n+        Release|Any CPU = Release|Any CPU\n+        Release|x64 = Release|x64\n+    EndGlobalSection\n+    GlobalSection(ProjectConfigurationPlatforms) = preSolution\n+        {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+        {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+        {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"}.Debug|x64.ActiveCfg = Debug|Any CPU",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "The email thread that started this had two project dependencies, does testing one project dependency cover the `N` project dependencies scenario?",
              "createdAt": "2021-03-10T17:49:05Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -749,6 +750,37 @@ public void SolutionConfigurationWithDependencies()\n             Helpers.VerifyAssertLineByLine(expected, solutionConfigurationContents);\n         }\n \n+        /// <summary>\n+        /// This test forces a metaproj to be generated as part of the build. Since metaproj files are not written to disk, it will fail if its cached form does not align\n+        /// with the version that is being built as when a property is part of the version added to the cache, but that version is not passed to the BuildManager.\n+        /// </summary>\n+        [Fact]\n+        public void SolutionGeneratingMetaproj()\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                TransientTestFile proj1 = env.CreateFile(\"A.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj2 = env.CreateFile(\"B.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj3 = env.CreateFile(\"C.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj = env.CreateFile(\"mysln.sln\",\n+                @$\"\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio 11\n+Project(`{\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\"}`) = `A`, `{proj1.Path}`, `{\"{786E302A-96CE-43DC-B640-D6B6CC9BF6C0}\"}`\n+EndProject\n+Project(`{\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\"}`) = `B`, `{proj2.Path}`, `{\"{881C1674-4ECA-451D-85B6-D7C59B7F16FA}\"}`\n+    ProjectSection(ProjectDependencies) = postProject\n+        {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"} = {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"}",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "Yes. I ran this test before and after the change, and it failed before and passed after.\r\n\r\nWhat's important is that it has to build a metaproj.",
              "createdAt": "2021-03-10T18:36:02Z",
              "path": "src/Build.UnitTests/Construction/SolutionProjectGenerator_Tests.cs",
              "diffHunk": "@@ -749,6 +750,37 @@ public void SolutionConfigurationWithDependencies()\n             Helpers.VerifyAssertLineByLine(expected, solutionConfigurationContents);\n         }\n \n+        /// <summary>\n+        /// This test forces a metaproj to be generated as part of the build. Since metaproj files are not written to disk, it will fail if its cached form does not align\n+        /// with the version that is being built as when a property is part of the version added to the cache, but that version is not passed to the BuildManager.\n+        /// </summary>\n+        [Fact]\n+        public void SolutionGeneratingMetaproj()\n+        {\n+            using (TestEnvironment env = TestEnvironment.Create())\n+            {\n+                TransientTestFile proj1 = env.CreateFile(\"A.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj2 = env.CreateFile(\"B.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj3 = env.CreateFile(\"C.csproj\", @\"<Project><Target Name=\"\"Printer\"\"><Message Importance=\"\"high\"\" Text=\"\"print string\"\" /></Target></Project>\");\n+                TransientTestFile proj = env.CreateFile(\"mysln.sln\",\n+                @$\"\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio 11\n+Project(`{\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\"}`) = `A`, `{proj1.Path}`, `{\"{786E302A-96CE-43DC-B640-D6B6CC9BF6C0}\"}`\n+EndProject\n+Project(`{\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\"}`) = `B`, `{proj2.Path}`, `{\"{881C1674-4ECA-451D-85B6-D7C59B7F16FA}\"}`\n+    ProjectSection(ProjectDependencies) = postProject\n+        {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"} = {\"{4A727FF8-65F2-401E-95AD-7C8BBFBE3167}\"}",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}