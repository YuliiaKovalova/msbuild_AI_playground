{
  "number": 9871,
  "title": "Fix api doc warning",
  "body": "Fixes [#9766](https://github.com/dotnet/msbuild/issues/9766)\r\n\r\n### Context\r\nThere are some documentation issues we should fix: https://github.com/dotnet/msbuild-api-docs/pull/39#issuecomment-1953148132\r\n\r\n[msbuild-api-docs/xml/Microsoft.Build.Construction/ProjectRootElement.xml](https://github.com/dotnet/msbuild-api-docs/blob/smoke-test/msbuild-api-docs/xml/Microsoft.Build.Construction/ProjectRootElement.xml)\r\nLine 0, Column 0: [Warning: xref-not-found - [See documentation](https://review.learn.microsoft.com/en-us/help/platform/validation-ref/xref-not-found?branch=main)] Cross reference not found: 'Microsoft.Build.Construction.ProjectRootElement.MarkDirty(System.String,System.String)'.\r\n\r\n[msbuild-api-docs/xml/Microsoft.Build.Framework.XamlTypes/BaseProperty.xml](https://github.com/dotnet/msbuild-api-docs/blob/smoke-test/msbuild-api-docs/xml/Microsoft.Build.Framework.XamlTypes/BaseProperty.xml)\r\nLine 0, Column 0: [Warning: disallowed-html-tag - [See documentation](https://review.learn.microsoft.com/help/contribute/validation-ref/disallowed-html-tag?branch=main)] HTML tag 'seealso' isn't allowed.  Replace it with approved Markdown or escape the brackets if the content is a placeholder.\r\n\r\n[msbuild-api-docs/xml/Microsoft.Build.Framework/BuildEventArgs.xml](https://github.com/dotnet/msbuild-api-docs/blob/smoke-test/msbuild-api-docs/xml/Microsoft.Build.Framework/BuildEventArgs.xml)\r\nLine 0, Column 0: [Warning: xref-not-found - [See documentation](https://review.learn.microsoft.com/en-us/help/platform/validation-ref/xref-not-found?branch=main)] Cross reference not found: 'Microsoft.Build.Framework.BuildEventArgs.timestamp'.\r\n\r\n[msbuild-api-docs/xml/Microsoft.Build.Framework/CustomBuildEventArgs.xml](https://github.com/dotnet/msbuild-api-docs/blob/smoke-test/msbuild-api-docs/xml/Microsoft.Build.Framework/CustomBuildEventArgs.xml)\r\nLine 0, Column 0: [Warning: disallowed-html-tag - [See documentation](https://review.learn.microsoft.com/help/contribute/validation-ref/disallowed-html-tag?branch=main)] HTML tag 'see' isn't allowed.  Replace it with approved Markdown or escape the brackets if the content is a placeholder.\r\nLine 0, Column 0: [Warning: disallowed-html-tag - [See documentation](https://review.learn.microsoft.com/help/contribute/validation-ref/disallowed-html-tag?branch=main)] HTML tag 'see' isn't allowed.  Replace it with approved Markdown or escape the brackets if the content is a placeholder.\r\nLine 0, Column 0: [Warning: disallowed-html-tag - [See documentation](https://review.learn.microsoft.com/help/contribute/validation-ref/disallowed-html-tag?branch=main)] HTML tag 'see' isn't allowed.  Replace it with approved Markdown or escape the brackets if the content is a placeholder.\r\n\r\n### Changes Made\r\nUpdate the link",
  "state": "MERGED",
  "createdAt": "2024-03-15T06:02:08Z",
  "updatedAt": "2024-04-02T11:30:13Z",
  "closedAt": "2024-04-02T11:30:12Z",
  "mergedAt": "2024-04-02T11:30:12Z",
  "additions": 6,
  "deletions": 6,
  "changedFiles": 4,
  "headRefName": "dev/jenny/issue9766",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "11d58181fd8320163c2a59c35a193d7a27bcf55f",
          "message": "Fix api doc warning",
          "committedDate": "2024-03-15T05:59:15Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "585e302cd12a92c060beda65fafdd575493b55d0",
          "message": "Remove the non public cref",
          "committedDate": "2024-03-29T07:53:18Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bdb3355cff20f48e1848aacd8e555c1c6a6fa950",
          "message": "Remove the unuseful word",
          "committedDate": "2024-03-29T07:55:36Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "This is different class and docs for `ProjectRootElementLink.MarkDirty` is missing. I believe that internal implementation details shall not be mentioned in public methods and consequent generated public documentation.\r\nI recommend moving sentence ` This operation marks the\r\nobject as dirty (see <see cref=\"ProjectRootElementLink.MarkDirty\"/> for side effects) .` into method body as regular // comment without using <see ",
              "createdAt": "2024-03-15T09:27:14Z",
              "path": "src/Build/Construction/ProjectRootElement.cs",
              "diffHunk": "@@ -1649,7 +1649,7 @@ public void ReloadFrom(string path, bool throwIfUnsavedChanges = true, bool? pre\n         /// <summary>\n         /// Reload the existing project root element from the given <paramref name=\"reader\"/>\n         /// A reload operation completely replaces the state of this <see cref=\"ProjectRootElement\"/> object. This operation marks the\n-        /// object as dirty (see <see cref=\"ProjectRootElement.MarkDirty\"/> for side effects).\n+        /// object as dirty (see <see cref=\"ProjectRootElementLink.MarkDirty\"/> for side effects) .",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": "Agree, I was scratching my head seeing this one. I wasn't sure if we want to keep the info, but we can definitely move it from xmldoc to somewhere else.",
              "createdAt": "2024-03-15T13:01:22Z",
              "path": "src/Build/Construction/ProjectRootElement.cs",
              "diffHunk": "@@ -1649,7 +1649,7 @@ public void ReloadFrom(string path, bool throwIfUnsavedChanges = true, bool? pre\n         /// <summary>\n         /// Reload the existing project root element from the given <paramref name=\"reader\"/>\n         /// A reload operation completely replaces the state of this <see cref=\"ProjectRootElement\"/> object. This operation marks the\n-        /// object as dirty (see <see cref=\"ProjectRootElement.MarkDirty\"/> for side effects).\n+        /// object as dirty (see <see cref=\"ProjectRootElementLink.MarkDirty\"/> for side effects) .",
              "author": {
                "login": "MichalPavlik"
              }
            },
            {
              "body": "I changed from ProjectRootElement.MarkDirty to ProjectRootElementLink.MarkDirty since the ProjectRootElement.MarkDirty is internal ,  ProjectRootElementLink.MarkDirty is public and remote to the ProjectRootElement.MarkDirty.\r\n\r\nIf the internal implementation details should not be mentioned in public methods. I think we also need to update https://github.com/dotnet/msbuild/blob/00833d9f8772bc99c48ccbebc013aa0a6d5ee622/src/Build/ObjectModelRemoting/ConstructionObjectLinks/ProjectRootElementLink.cs#L210-L214  which doc https://review.learn.microsoft.com/en-us/dotnet/api/microsoft.build.objectmodelremoting.projectrootelementlink.markdirty?view=msbuild-17-netcore&branch=main",
              "createdAt": "2024-03-18T02:58:03Z",
              "path": "src/Build/Construction/ProjectRootElement.cs",
              "diffHunk": "@@ -1649,7 +1649,7 @@ public void ReloadFrom(string path, bool throwIfUnsavedChanges = true, bool? pre\n         /// <summary>\n         /// Reload the existing project root element from the given <paramref name=\"reader\"/>\n         /// A reload operation completely replaces the state of this <see cref=\"ProjectRootElement\"/> object. This operation marks the\n-        /// object as dirty (see <see cref=\"ProjectRootElement.MarkDirty\"/> for side effects).\n+        /// object as dirty (see <see cref=\"ProjectRootElementLink.MarkDirty\"/> for side effects) .",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "After some thinking, I would say that the easiest thing to do is to remove non-public member cref (and keep the name for now) to make analyzer happy. But we should think more how to document these public APIs - probably in different issue.\r\n\r\n@ladipro, any thoughts?",
              "createdAt": "2024-03-20T14:37:44Z",
              "path": "src/Build/Construction/ProjectRootElement.cs",
              "diffHunk": "@@ -1649,7 +1649,7 @@ public void ReloadFrom(string path, bool throwIfUnsavedChanges = true, bool? pre\n         /// <summary>\n         /// Reload the existing project root element from the given <paramref name=\"reader\"/>\n         /// A reload operation completely replaces the state of this <see cref=\"ProjectRootElement\"/> object. This operation marks the\n-        /// object as dirty (see <see cref=\"ProjectRootElement.MarkDirty\"/> for side effects).\n+        /// object as dirty (see <see cref=\"ProjectRootElementLink.MarkDirty\"/> for side effects) .",
              "author": {
                "login": "MichalPavlik"
              }
            },
            {
              "body": "\r\nRemoved the non public cref",
              "createdAt": "2024-03-29T07:56:39Z",
              "path": "src/Build/Construction/ProjectRootElement.cs",
              "diffHunk": "@@ -1649,7 +1649,7 @@ public void ReloadFrom(string path, bool throwIfUnsavedChanges = true, bool? pre\n         /// <summary>\n         /// Reload the existing project root element from the given <paramref name=\"reader\"/>\n         /// A reload operation completely replaces the state of this <see cref=\"ProjectRootElement\"/> object. This operation marks the\n-        /// object as dirty (see <see cref=\"ProjectRootElement.MarkDirty\"/> for side effects).\n+        /// object as dirty (see <see cref=\"ProjectRootElementLink.MarkDirty\"/> for side effects) .",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      }
    ]
  }
}