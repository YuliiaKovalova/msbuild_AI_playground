{
  "number": 6711,
  "title": "[main] Update dependencies from dotnet/arcade",
  "body": "This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:93d865d2-823f-4e4d-e0b6-08d91b0a84f2)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 93d865d2-823f-4e4d-e0b6-08d91b0a84f2\r\n- **Build**: 20210729.2\r\n- **Date Produced**: 7/29/2021 7:20 PM\r\n- **Commit**: 62a8aafffd4c68ef887680f6837abdff906a662c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21369.3 to 6.0.0-beta.21379.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21369.3 to 6.0.0-beta.21379.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e97027c...62a8aaf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:93d865d2-823f-4e4d-e0b6-08d91b0a84f2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2021-07-26T19:09:27Z",
  "updatedAt": "2021-08-02T18:21:44Z",
  "closedAt": "2021-08-02T18:20:23Z",
  "mergedAt": "2021-08-02T18:20:23Z",
  "additions": 21,
  "deletions": 13,
  "changedFiles": 9,
  "headRefName": "darc-main-d484a0e6-ddaa-44fe-8415-92626fffb0b0",
  "isDraft": false,
  "author": {
    "login": "dotnet-maestro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "27cfef9d4c743aef4c6b86ac8d1515bbb657db29",
          "message": "Update dependencies from https://github.com/dotnet/arcade build 20210720.12\n\nMicrosoft.DotNet.XUnitExtensions , Microsoft.DotNet.Arcade.Sdk\n From Version 6.0.0-beta.21365.11 -> To Version 6.0.0-beta.21370.12",
          "committedDate": "2021-07-26T19:09:05Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a81f4298582c191f581477c5b0f9a36d5741e0f5",
          "message": "Update dependencies from https://github.com/dotnet/arcade build 20210723.11\n\nMicrosoft.DotNet.XUnitExtensions , Microsoft.DotNet.Arcade.Sdk\n From Version 6.0.0-beta.21370.12 -> To Version 6.0.0-beta.21373.11",
          "committedDate": "2021-07-26T19:09:24Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3e806d890b823a4c40f473a59d04b0b6ad5a1b7a",
          "message": "Update dependencies from https://github.com/dotnet/arcade build 20210726.4\n\nMicrosoft.DotNet.XUnitExtensions , Microsoft.DotNet.Arcade.Sdk\n From Version 6.0.0-beta.21365.11 -> To Version 6.0.0-beta.21376.4",
          "committedDate": "2021-07-27T12:32:24Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0dd95e843f2366117c3b82dd93993fb45749d2f2",
          "message": "Remove SNKP and disable CA1416\n\nThe former isn't supported anymore, and the latter is wrong (at least in the running code\u2014I didn't check the tests).",
          "committedDate": "2021-07-27T22:11:47Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1ed51c36dda4412d556a07b7a6b710ea8a0b1117",
          "message": "Merge https://github.com/dotnet/msbuild into darc-main-d484a0e6-ddaa-44fe-8415-92626fffb0b0",
          "committedDate": "2021-07-27T22:12:42Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f43788e7236ca0026f08cf5a8c3cb0c8b5868646",
          "message": "Update dependencies from https://github.com/dotnet/arcade build 20210727.2\n\nMicrosoft.DotNet.XUnitExtensions , Microsoft.DotNet.Arcade.Sdk\n From Version 6.0.0-beta.21369.3 -> To Version 6.0.0-beta.21377.2",
          "committedDate": "2021-07-28T12:32:40Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b612dafb16ee1cd007bf661b0f9a53204bf1aa48",
          "message": "Update dependencies from https://github.com/dotnet/arcade build 20210728.2\n\nMicrosoft.DotNet.XUnitExtensions , Microsoft.DotNet.Arcade.Sdk\n From Version 6.0.0-beta.21369.3 -> To Version 6.0.0-beta.21378.2",
          "committedDate": "2021-07-29T12:40:35Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fccce76fe550164f09033bcbc464a84a4be50ca4",
          "message": "Update dependencies from https://github.com/dotnet/arcade build 20210729.2\n\nMicrosoft.DotNet.XUnitExtensions , Microsoft.DotNet.Arcade.Sdk\n From Version 6.0.0-beta.21369.3 -> To Version 6.0.0-beta.21379.2",
          "committedDate": "2021-07-30T12:28:46Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b6e19f165d1daa4fce7c38531384d5224c4159d5",
          "message": "Add comment",
          "committedDate": "2021-07-30T15:12:58Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fe5c14c3e01117256a66926ac7425925ab0b0409",
          "message": "Merge branch 'main' into darc-main-d484a0e6-ddaa-44fe-8415-92626fffb0b0",
          "committedDate": "2021-08-02T17:35:02Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@ladipro (Are you still kitten?) Are we waiting for anything before merging this?",
        "createdAt": "2021-07-29T21:58:09Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "@Forgind You were doing this in the RAR-precache branch, right? Probably best to work through the issues in this PR rather than there.",
              "createdAt": "2021-07-27T19:18:23Z",
              "path": "global.json",
              "diffHunk": "@@ -3,7 +3,7 @@\n     \"allowPrerelease\": true\n   },\n   \"tools\": {\n-    \"dotnet\": \"6.0.100-preview.4.21255.9\",\n+    \"dotnet\": \"6.0.100-preview.6.21355.2\",",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Instead of doing this, can you follow the guidance on this warning? https://docs.microsoft.com/en-us/dotnet/core/compatibility/code-analysis/5.0/ca1416-platform-compatibility-analyzer#recommended-action\r\n\r\nSpecifically, I'd expect to see this call annotated with `[SupportedOSPlatform(\"windows\")]`, which will require annotating or conditionalizing up the chain.",
              "createdAt": "2021-07-30T03:46:54Z",
              "path": "src/Shared/NativeMethodsShared.cs",
              "diffHunk": "@@ -632,6 +632,7 @@ internal static bool IsMaxPathLegacyWindows()\n             }\n         }\n \n+#pragma warning disable CA1416",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "The guidance I followed is right below the guidance you suggested.\r\n\r\nAlso, [SupportedOSPlatform(\"windows\")] was introduced in .net 6, as was OperatingSystem.IsWindows(), so I would have to ifdef around the attribute or IsWindows check. That's pretty terrible, so I don't think that's a good idea.",
              "createdAt": "2021-07-30T14:38:11Z",
              "path": "src/Shared/NativeMethodsShared.cs",
              "diffHunk": "@@ -632,6 +632,7 @@ internal static bool IsMaxPathLegacyWindows()\n             }\n         }\n \n+#pragma warning disable CA1416",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "At the very least this needs a comment.",
              "createdAt": "2021-07-30T14:40:54Z",
              "path": "src/Shared/NativeMethodsShared.cs",
              "diffHunk": "@@ -632,6 +632,7 @@ internal static bool IsMaxPathLegacyWindows()\n             }\n         }\n \n+#pragma warning disable CA1416",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I can add one. It doesn't change anything, but I should correct myself: it was introduced in .net 5, not .net 6.",
              "createdAt": "2021-07-30T14:46:12Z",
              "path": "src/Shared/NativeMethodsShared.cs",
              "diffHunk": "@@ -632,6 +632,7 @@ internal static bool IsMaxPathLegacyWindows()\n             }\n         }\n \n+#pragma warning disable CA1416",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I'm still unclear on whether it's ok to make this change in the .NET Framework version of MSBuild where this API is available and works. Can you elaborate on your reasoning there?",
              "createdAt": "2021-07-30T03:48:19Z",
              "path": "src/Shared/AssemblyNameExtension.cs",
              "diffHunk": "@@ -160,7 +159,6 @@ private AssemblyNameExtension(SerializationInfo info, StreamingContext context)\n                     HashAlgorithm = hashAlgorithm,\n                     VersionCompatibility = versionCompatibility,\n                     CodeBase = codeBase,\n-                    KeyPair = keyPair",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "AssemblyNameExtension is internal, so customers can't use it without making a custom MSBuild. We don't rely on the KeyPair part because otherwise, the .net 6 code wouldn't run. So we don't need KeyPair, and customers can't need KeyPair, so we should be able to remove it and stop serializing/deserializing it.",
              "createdAt": "2021-07-30T14:42:43Z",
              "path": "src/Shared/AssemblyNameExtension.cs",
              "diffHunk": "@@ -160,7 +159,6 @@ private AssemblyNameExtension(SerializationInfo info, StreamingContext context)\n                     HashAlgorithm = hashAlgorithm,\n                     VersionCompatibility = versionCompatibility,\n                     CodeBase = codeBase,\n-                    KeyPair = keyPair",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "> We don't rely on the KeyPair part because otherwise, the .net 6 code wouldn't run. So we don't need KeyPair\r\n\r\nThis doesn't obviously follow for me. I get that we don't need it _on .NET 6+_. But it's never used/compared in .NET Framework scenarios?",
              "createdAt": "2021-07-30T14:45:42Z",
              "path": "src/Shared/AssemblyNameExtension.cs",
              "diffHunk": "@@ -160,7 +159,6 @@ private AssemblyNameExtension(SerializationInfo info, StreamingContext context)\n                     HashAlgorithm = hashAlgorithm,\n                     VersionCompatibility = versionCompatibility,\n                     CodeBase = codeBase,\n-                    KeyPair = keyPair",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I won't say I took a deep look at every use, but I tried to briefly look at all our uses (outside tests) to see if they were #ifdef'd on platform, and the ones that were didn't seem to use StrongNameKeyPair. I was a little thrown by \"GetPublicKeyToken\" and wondered if that was a use, but it seems to still exist on .net 6 without throwing deprecated warnings, so I think it's something else. If you want me to, I can put the removal under an ifdef'd change wave or, if it makes you really uncomfortable, just ifdef it out, but then we may be serializing and deserializing something on .net framework for no reason.",
              "createdAt": "2021-07-30T15:03:00Z",
              "path": "src/Shared/AssemblyNameExtension.cs",
              "diffHunk": "@@ -160,7 +159,6 @@ private AssemblyNameExtension(SerializationInfo info, StreamingContext context)\n                     HashAlgorithm = hashAlgorithm,\n                     VersionCompatibility = versionCompatibility,\n                     CodeBase = codeBase,\n-                    KeyPair = keyPair",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Ok, I think this is what I was looking for (from https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assemblyname.keypair?view=net-5.0#remarks):\r\n\r\n> When the runtime loads an assembly, it does not set the KeyPair property. The getter for the property is only useful if the user set the property before using the AssemblyName object to create a dynamic assembly, and subsequently wants to retrieve the key pair.\r\n\r\nSince we use this in RAR, which is not interested in dynamic assemblies, it will always be `null`, so dropping it is ok.",
              "createdAt": "2021-07-30T15:26:23Z",
              "path": "src/Shared/AssemblyNameExtension.cs",
              "diffHunk": "@@ -160,7 +159,6 @@ private AssemblyNameExtension(SerializationInfo info, StreamingContext context)\n                     HashAlgorithm = hashAlgorithm,\n                     VersionCompatibility = versionCompatibility,\n                     CodeBase = codeBase,\n-                    KeyPair = keyPair",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}