{
  "number": 7239,
  "title": "Disable SA1122 (Use string.Empty for empty strings)",
  "body": "Relates to #7174\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1122.md",
  "state": "MERGED",
  "createdAt": "2022-01-08T08:48:03Z",
  "updatedAt": "2022-01-12T21:52:50Z",
  "closedAt": "2022-01-12T16:53:25Z",
  "mergedAt": "2022-01-12T16:53:25Z",
  "additions": 1,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "SA1122",
  "isDraft": false,
  "author": {
    "login": "elachlan"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "536043efdf30c86f5e30b540dd1c88f3c57c10aa",
          "message": "Disable SA1122",
          "committedDate": "2022-01-11T04:46:57Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Error:\r\n`.packages/microsoft.codeanalysis.collections/4.0.0-4.21379.20/contentFiles/cs/netstandard2.0/Internal/ThrowHelper.cs(274,28): error SA1122: (NETCORE_ENGINEERING_TELEMETRY=Build) Use string.Empty for empty strings`\r\n\r\nThe issue is in microsoft.codeanalysis.collections. I am unsure how to fix it, other than fixing it upstream.",
        "createdAt": "2022-01-08T09:14:01Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@sharwell, apparently `\"\"` is already interned by the compiler. Was the idea of SA1122 to reduce string allocations? or is the hardcoded string used for another purpose?\r\n\r\nBased on my reading, the advantage is in readability and to reduce the chance of a hidden zero width space character.\r\n\r\nThere was acutally one disadvantage that I saw:\r\n\"Another difference is that String.Empty generates larger CIL code\"\r\nhttps://stackoverflow.com/a/17386465/908889\r\n\r\nIt also isn't a constant:\r\nhttps://stackoverflow.com/questions/507923/why-isnt-string-empty-a-constant\r\n\r\nWhich results in some usages being incorrect:\r\nhttps://stackoverflow.com/a/13703103/908889\r\n\r\nruntime also turned down adding a constant and suggested using `\"\"`:\r\nhttps://github.com/dotnet/runtime/issues/60508",
        "createdAt": "2022-01-09T01:36:05Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@Forgind You may want to review this with the team? We can set the analyzer to none if it isn't helpful.",
        "createdAt": "2022-01-09T03:05:50Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@rainersigwald Should we just disable this rule?",
        "createdAt": "2022-01-10T23:41:12Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "IMO this rule is more tedious than it's worth.",
        "createdAt": "2022-01-11T00:15:58Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "If the team gives the okay, I will mark the severity for this analyzer as none.",
        "createdAt": "2022-01-11T03:04:08Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "In dotnet/runtime we prefer \"\" . I think string.Empty is a useless vestige.",
        "createdAt": "2022-01-11T04:02:45Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}