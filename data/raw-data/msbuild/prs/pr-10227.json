{
  "number": 10227,
  "title": "Fix build check build submission errors",
  "body": "Fixes [#10071](https://github.com/dotnet/msbuild/issues/10071)\r\n\r\n### Context\r\nWhile building with buildcheck enabled and MSBUILDNOINPROCNODE=1\r\nSeverity of the rule set to Error, does not reported to the all build:\r\n![image](https://github.com/dotnet/msbuild/assets/26814373/e415e064-b930-4c75-a6de-2c4a7ed7bd56) \r\nThis is since buildcheck error is not added into the _warningsAsErrorsByProject, WarningsAsErrors == null && _warningsAsErrorsByProject == null is true all the time.   so HasBuildSubmissionLoggedErrors always return false.\r\nhttps://github.com/dotnet/msbuild/blob/843bfa584a08401b30e4c0b21a3c0b534568877e/src/Build/BackEnd/Components/Logging/LoggingService.cs#L577-L587\r\n\r\nTreat warning as errors or message, the buildcheckResultWarning doesn't initialize the code. So when the code of  BuildWarningEventArgs is null. ShouldTreatWarningAsError returns false all the time. \r\nhttps://github.com/dotnet/msbuild/blob/a9c95c7251503f85493d3f3bb43780ffa8104589/src/Build/BackEnd/Components/Logging/LoggingService.cs#L1897-L1908\r\n### Changes Made\r\n1. when buildEventArgs is BuildErrorEventArgs, treat  BuildErrorEventArgs' related warnings as errors\r\n\r\n2. Initialize the code of BuildCheckResultWarning that is inherited from BuildWarningEventArgs\r\n\r\n### Testing\r\nManually testing on local now\r\n\r\nset MSBUILDNOINPROCNODE=1 and change the build_check.BC0101.Severity= Error\r\ndotnet  D:\\WORK\\msbuild\\artifacts\\bin\\bootstrap\\net8.0\\MSBuild\\MSBuild.dll FooBar.csproj /m:1 -nr:False -restore -analyze\r\n![image](https://github.com/dotnet/msbuild/assets/26814373/0f26c698-207b-4337-9594-1b1d356891aa)\r\n\r\nChange build_check.BC0101.Severity= warning\r\ndotnet  D:\\WORK\\msbuild\\artifacts\\bin\\bootstrap\\net8.0\\MSBuild\\MSBuild.dll FooBar.csproj /m:1 -nr:False -restore -analyze -warnaserror\r\n![image](https://github.com/dotnet/msbuild/assets/26814373/33b00206-9880-4b25-8c5d-1d548b3f3105)\r\n\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2024-06-12T06:38:44Z",
  "updatedAt": "2024-07-09T03:21:27Z",
  "closedAt": "2024-07-09T03:21:26Z",
  "mergedAt": "2024-07-09T03:21:26Z",
  "additions": 14,
  "deletions": 5,
  "changedFiles": 3,
  "headRefName": "jenny/issue10071",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "f188670edb2ee5c7ac18313d7247442eeae5d542",
          "message": "submit build check result errors",
          "committedDate": "2024-06-12T06:37:09Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1c5b1dac9b8fd31e7a0f3be82f0ee8355b11e696",
          "message": "collect the buildcheck errors",
          "committedDate": "2024-06-28T09:47:13Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d81f60992f7d4213955580fe4fd210e08de70c9c",
          "message": "refactor the comments",
          "committedDate": "2024-06-28T10:39:51Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e63c23e8e4138fd9966e845f9c5f0e3a5ef27a55",
          "message": "fix the logic that treat warning as errors",
          "committedDate": "2024-07-01T09:29:26Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "abe141729b5992762b39543df5e1e75ae163bb00",
          "message": "Update format message and add code for build check error",
          "committedDate": "2024-07-05T10:30:47Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a92697e1e246d93abe44a04a7446ca777b5ca041",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jenny/issue10071",
          "committedDate": "2024-07-05T10:46:12Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "176165b338833bcbfe03c3f4989a50ef46c022f0",
          "message": "Fix the space",
          "committedDate": "2024-07-05T11:09:34Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Will add a test after figured out the reason of flaky test SampleAnalyzerIntegrationTest https://github.com/dotnet/msbuild/issues/10036",
        "createdAt": "2024-06-12T08:44:28Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "We should probably handle the warning + ShouldTreatWarningAsError as well",
              "createdAt": "2024-06-14T21:12:05Z",
              "path": "src/Build/BackEnd/Components/Logging/LoggingService.cs",
              "diffHunk": "@@ -1592,6 +1593,12 @@ private void RouteBuildEvent(object loggingEvent)\n                 _buildSubmissionIdsThatHaveLoggedErrors.Add(errorEvent.BuildEventContext?.SubmissionId ?? BuildEventContext.InvalidSubmissionId);\n             }\n \n+            if (buildEventArgs is BuildCheckResultError checkResultError)",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "So there is one condition build with -err:BC0101",
              "createdAt": "2024-06-25T09:32:18Z",
              "path": "src/Build/BackEnd/Components/Logging/LoggingService.cs",
              "diffHunk": "@@ -1592,6 +1593,12 @@ private void RouteBuildEvent(object loggingEvent)\n                 _buildSubmissionIdsThatHaveLoggedErrors.Add(errorEvent.BuildEventContext?.SubmissionId ?? BuildEventContext.InvalidSubmissionId);\n             }\n \n+            if (buildEventArgs is BuildCheckResultError checkResultError)",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "Updated with new fix",
              "createdAt": "2024-07-01T10:10:42Z",
              "path": "src/Build/BackEnd/Components/Logging/LoggingService.cs",
              "diffHunk": "@@ -1592,6 +1593,12 @@ private void RouteBuildEvent(object loggingEvent)\n                 _buildSubmissionIdsThatHaveLoggedErrors.Add(errorEvent.BuildEventContext?.SubmissionId ?? BuildEventContext.InvalidSubmissionId);\n             }\n \n+            if (buildEventArgs is BuildCheckResultError checkResultError)",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "@JanKrivanek please help review",
              "createdAt": "2024-07-08T06:13:34Z",
              "path": "src/Build/BackEnd/Components/Logging/LoggingService.cs",
              "diffHunk": "@@ -1592,6 +1593,12 @@ private void RouteBuildEvent(object loggingEvent)\n                 _buildSubmissionIdsThatHaveLoggedErrors.Add(errorEvent.BuildEventContext?.SubmissionId ?? BuildEventContext.InvalidSubmissionId);\n             }\n \n+            if (buildEventArgs is BuildCheckResultError checkResultError)",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "In the future we should populate the location here from the result.Location (that currently is not structured, so bit of refactor will be needed).\r\n\r\nNot needed in a scope of this PR",
              "createdAt": "2024-07-08T07:13:33Z",
              "path": "src/Framework/BuildCheck/BuildCheckEventArgs.cs",
              "diffHunk": "@@ -107,7 +107,8 @@ internal override void CreateFromStream(BinaryReader reader, int version)\n }\n internal sealed class BuildCheckResultWarning : BuildWarningEventArgs\n {\n-    public BuildCheckResultWarning(IBuildCheckResult result)\n+    public BuildCheckResultWarning(IBuildCheckResult result, string code)\n+        : base(subcategory: null, code: code, file: null, lineNumber: 0, columnNumber: 0, endLineNumber: 0, endColumnNumber: 0, message: result.FormatMessage(), helpKeyword: null, senderName: null)",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}