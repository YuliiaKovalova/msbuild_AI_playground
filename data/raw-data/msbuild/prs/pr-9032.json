{
  "number": 9032,
  "title": "Fix TaskRegistry mutability",
  "body": "Fixes [ADO#1801351](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1801351) and [ADO#1801341](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1801341)\r\n\r\nReuses chunk of changes from https://github.com/dotnet/msbuild/pull/8861\r\n\r\n### Context\r\nTaskRegistry should be logically immutable after initialization and sharing is possible and ok, but there can be actual writes on first access which needs to be made thread safe\r\n\r\n### Changes Made\r\n* Clarified some confusing comments\r\n* Simplified TaskRegistry contract to allow only single shot initialization after which TaskRegistry is logically immutable\r\n* `ProjectImportPathMatch` and `ToolSet` adjustment to better express immutability\r\n\r\n### Testing\r\nExisting unit tests\r\n",
  "state": "MERGED",
  "createdAt": "2023-07-13T15:28:50Z",
  "updatedAt": "2023-07-14T14:02:19Z",
  "closedAt": "2023-07-14T14:02:15Z",
  "mergedAt": "2023-07-14T14:02:15Z",
  "additions": 200,
  "deletions": 153,
  "changedFiles": 6,
  "headRefName": "proto/TaskRegistryMutability",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "50eebaea85c211895cb6e56a7d245fab1cfad6b4",
          "message": "Fix TaskRegistry mutability",
          "committedDate": "2023-07-13T16:23:19Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fe586ea964f0558559987fdf806ebd6928f229b3",
          "message": "Adjust wordings based on suggestions",
          "committedDate": "2023-07-14T13:10:48Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Do we need a localized string for this, if it's a debug-only internal error? Can this be `VerifyThrowInternal` with an unlocalized string instead?",
              "createdAt": "2023-07-13T15:52:58Z",
              "path": "src/Build/Instance/TaskRegistry.cs",
              "diffHunk": "@@ -229,17 +285,20 @@ internal Toolset Toolset\n             where I : class, IItem\n         {\n             ErrorUtilities.VerifyThrowInternalNull(directoryOfImportingFile, nameof(directoryOfImportingFile));\n+#if DEBUG\n+            ErrorUtilities.VerifyThrow(!taskRegistry._isInitialized, \"TaskFactoryDoubleInitialize\");",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "message: TaskFactory vs TaskRegistry?",
              "createdAt": "2023-07-14T13:04:37Z",
              "path": "src/Build/Instance/TaskRegistry.cs",
              "diffHunk": "@@ -229,17 +283,20 @@ internal Toolset Toolset\n             where I : class, IItem\n         {\n             ErrorUtilities.VerifyThrowInternalNull(directoryOfImportingFile, nameof(directoryOfImportingFile));\n+#if DEBUG\n+            ErrorUtilities.VerifyThrowInternalError(!taskRegistry._isInitialized, \"Attempt to modify TaskFactory after it was initialized.\");",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "message: TaskFactory vs TaskRegistry?",
              "createdAt": "2023-07-14T13:05:09Z",
              "path": "src/Build/Instance/TaskRegistry.cs",
              "diffHunk": "@@ -396,6 +453,9 @@ internal Toolset Toolset\n             TargetLoggingContext targetLoggingContext,\n             ElementLocation elementLocation)\n         {\n+#if DEBUG\n+            ErrorUtilities.VerifyThrowInternalError(_isInitialized, \"Attempt to read from TaskFactory before its initialization was finished.\");",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      }
    ]
  }
}