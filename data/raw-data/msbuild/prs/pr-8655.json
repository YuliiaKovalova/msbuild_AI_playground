{
  "number": 8655,
  "title": "Add Xml default resolver parameter for XslCompiledTransform.Transform",
  "body": "Fixes [#8570](https://github.com/dotnet/msbuild/issues/8570) part 1\r\n\r\n### Context\r\nUseTrustedSettings parameter for XslTransformation task is ignored when using dotnet build since the resolver is not setting.\r\n\r\n### Changes Made\r\nUse an [XslCompiledTransform.Transform](https://learn.microsoft.com/dotnet/api/system.xml.xsl.xslcompiledtransform.transform?view=netstandard-2.0) overload that takes an XmlResolver parameter.\r\nAdd the info log message when the UseTrustedSettings is opted-in on the Task\r\n\r\n### Testing\r\nEnable the earlier disabled test  XslDocumentFunctionWorks() on net7.0\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-04-12T03:42:48Z",
  "updatedAt": "2023-07-13T14:57:12Z",
  "closedAt": "2023-05-16T10:38:16Z",
  "mergedAt": "2023-05-16T10:38:16Z",
  "additions": 96,
  "deletions": 15,
  "changedFiles": 18,
  "headRefName": "jennybai/issue8570",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "3089684012508edfd18555df1ef97ef482359f5b",
          "message": "Add xml default resolver for xslct.Transform",
          "committedDate": "2023-04-12T03:32:13Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d053b0032f9332e7a26dd096cb02a7ea6a726007",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jennybai/issue8570",
          "committedDate": "2023-04-25T03:11:28Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0df29b692859b3588a975eb8810a70398e81738c",
          "message": "Log the ex.ToString() in the low-prio message, so it shows up in -diag log or binlog. And the recursively (concatenated) error in the error message.",
          "committedDate": "2023-04-25T10:26:26Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b642163a172a064e67e177ebc0beecd16478280b",
          "message": "wrap the flattened exception messages",
          "committedDate": "2023-04-26T07:39:05Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8aa776725ff17d614a6270dec32ae57ea59b5b14",
          "message": "make the method static as suggested",
          "committedDate": "2023-04-26T09:25:20Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a2b4f8f115531bba44ab949097845850c4687dbf",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jennybai/issue8570",
          "committedDate": "2023-04-27T03:15:05Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ac6cd5200111838c7f27d38eb9de9c0dc77bde85",
          "message": "Add the info log message when the UseTrustedSettings  is true",
          "committedDate": "2023-04-27T08:19:16Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1d59a8567ed8169aa0731bde70e0c585b604a6ea",
          "message": "format",
          "committedDate": "2023-04-27T08:19:34Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cf87ef1f3b50bfdf8086c069d85abcfb4d60a9b4",
          "message": "Move the log out of the loop",
          "committedDate": "2023-04-27T09:05:03Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b2803ab2675433c1e0d535b819014eb29cc0d964",
          "message": "Merge branch 'jennybai/issue8570' of https://github.com/dotnet/msbuild into jennybai/issue8570",
          "committedDate": "2023-05-05T06:42:04Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0883df03ec9c15cce08e153a5796b7fd9383f1f6",
          "message": "Refactor resource string",
          "committedDate": "2023-05-05T10:13:28Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Thanks @JaynieBai for updating this PR.\r\n\r\nCan you please as well add the info log message when the `UseTrustedSettings` is opted-in on the Task? \r\n\r\nThis was suggested by security during the approval for this. The formulation can be something like: `\"You are enabling relaxed XSLT security settings via UseTrustedSettings parameter. For more details on security implications of this settings please see https://aka.ms/msbuild/xsltransformation-task\"`. It should be localized.",
        "createdAt": "2023-04-26T10:24:36Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> Thanks @JaynieBai for updating this PR.\r\n> \r\n> Can you please as well add the info log message when the `UseTrustedSettings` is opted-in on the Task?\r\n> \r\n> This was suggested by security during the approval for this. The formulation can be something like: `\"You are enabling relaxed XSLT security settings via UseTrustedSettings parameter. For more details on security implications of this settings please see https://aka.ms/msbuild/xsltransformation-task\"`. It should be localized.\r\n\r\nHave added the log before the transform. Here is output\r\n![image](https://user-images.githubusercontent.com/26814373/234804104-299d3cdb-c1f1-490c-b409-425cde3f2fc5.png)\r\n\r\n\r\n",
        "createdAt": "2023-04-27T08:26:03Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "@JaynieBai \r\n\r\nI'm sorry to bother you, but how and when does this fix get delivered? I see the fix was merged almost 2 months ago, but the Azure DevOps build is still failing, as is my local build. \r\n\r\nThe ADO build and my local build report using MSBuild version 17.6.8+c70978d4d for .NET \r\n",
        "createdAt": "2023-07-13T14:42:21Z",
        "author": {
          "login": "edstegman"
        }
      },
      {
        "body": "@edstegman the fix will be in MSBuild 17.7, which will release with Visual Studio 17.7 \"soon\".",
        "createdAt": "2023-07-13T14:57:11Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "The `FEATURE_COMPILED_XSL` is defined allways, except for Mono: https://github.com/dotnet/msbuild/blob/cc3db358d34ad4cd1ec0c67e17582d7ca2a15040/src/Directory.BeforeCommon.targets#L24\r\nSince we no longer support Mono (per @ladipro), we can remove all occurences of this symbol alltogether\r\n\r\n",
              "createdAt": "2023-04-12T09:41:33Z",
              "path": "src/Tasks.UnitTests/XslTransformation_Tests.cs",
              "diffHunk": "@@ -68,12 +68,10 @@ public sealed class XslTransformation_Tests\n         private readonly string _xslDocument = \"<xsl:stylesheet version=\\\"1.0\\\" xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\" xmlns:msxsl=\\\"urn:schemas-microsoft-com:xslt\\\" exclude-result-prefixes=\\\"msxsl\\\"><xsl:output method=\\\"xml\\\" indent=\\\"yes\\\"/><xsl:template match=\\\"@* | node()\\\"><surround><xsl:copy><xsl:apply-templates select=\\\"@* | node()\\\"/></xsl:copy></surround></xsl:template></xsl:stylesheet>\";\n \n \n-#if FEATURE_COMPILED_XSL",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "These constants are defined in net472, not including net7 since condition `<PropertyGroup Condition=\"$(TargetFramework.StartsWith('net4')) Or $(TargetFramework.StartsWith('net3'))\">`  we also need to verify they work on .net7 before removing all occurrences of this symbol altogether\r\nhttps://github.com/dotnet/msbuild/blob/6300d22b25cc1bcb634663bd7087e31d8312bb15/src/Directory.BeforeCommon.targets#L17-L74",
              "createdAt": "2023-04-25T10:10:23Z",
              "path": "src/Tasks.UnitTests/XslTransformation_Tests.cs",
              "diffHunk": "@@ -68,12 +68,10 @@ public sealed class XslTransformation_Tests\n         private readonly string _xslDocument = \"<xsl:stylesheet version=\\\"1.0\\\" xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\" xmlns:msxsl=\\\"urn:schemas-microsoft-com:xslt\\\" exclude-result-prefixes=\\\"msxsl\\\"><xsl:output method=\\\"xml\\\" indent=\\\"yes\\\"/><xsl:template match=\\\"@* | node()\\\"><surround><xsl:copy><xsl:apply-templates select=\\\"@* | node()\\\"/></xsl:copy></surround></xsl:template></xsl:stylesheet>\";\n \n \n-#if FEATURE_COMPILED_XSL",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "Sorry my bad, you are right. Making sure we are supporting precompiled XSLT on core as well is out of scope of this PR - so please disregard this comment",
              "createdAt": "2023-04-25T10:19:08Z",
              "path": "src/Tasks.UnitTests/XslTransformation_Tests.cs",
              "diffHunk": "@@ -68,12 +68,10 @@ public sealed class XslTransformation_Tests\n         private readonly string _xslDocument = \"<xsl:stylesheet version=\\\"1.0\\\" xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\" xmlns:msxsl=\\\"urn:schemas-microsoft-com:xslt\\\" exclude-result-prefixes=\\\"msxsl\\\"><xsl:output method=\\\"xml\\\" indent=\\\"yes\\\"/><xsl:template match=\\\"@* | node()\\\"><surround><xsl:copy><xsl:apply-templates select=\\\"@* | node()\\\"/></xsl:copy></surround></xsl:template></xsl:stylesheet>\";\n \n \n-#if FEATURE_COMPILED_XSL",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This seems to be copy-pasted code from https://github.com/dotnet/msbuild/blob/main/src/Tasks/DownloadFile.cs#L131-L139\r\nLet's extract it (e.g. into `TaskLoggingHelper`) and call into that from both locations.\r\n\r\nIdealy it would reuse the unwrapping code from [`LogErrorFromException`](https://github.com/dotnet/msbuild/blob/main/src/Shared/TaskLoggingHelper.cs#L892), but add ability to specify the resource string (so adding overload of `LogErrorWithCodeFromResources` that would accept Exception parameter). This way we'd have single code for unwrapping exceptions, influencable via environment variable.\r\n(this was discussed as the optional separate PR for the same issue)\r\n\r\n",
              "createdAt": "2023-04-25T13:00:25Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -174,7 +175,15 @@ public override bool Execute()\n             }\n             catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))\n             {\n-                Log.LogErrorWithCodeFromResources(\"XslTransform.TransformError\", e.Message);\n+                StringBuilder flattenedMessage = new StringBuilder(e.Message);\n+                Exception excep = e;\n+                while (excep.InnerException != null)\n+                {\n+                    excep = excep.InnerException;\n+                    flattenedMessage.Append(\" ---> \").Append(excep.Message);\n+                }\n+                Log.LogErrorWithCodeFromResources(\"XslTransform.TransformError\", flattenedMessage.ToString());\n+                Log.LogMessage(MessageImportance.Low, e.ToString());",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Thanks. Have wrapped that in the method GetInnerExceptionMessageString. ",
              "createdAt": "2023-04-26T07:56:58Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -174,7 +175,15 @@ public override bool Execute()\n             }\n             catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))\n             {\n-                Log.LogErrorWithCodeFromResources(\"XslTransform.TransformError\", e.Message);\n+                StringBuilder flattenedMessage = new StringBuilder(e.Message);\n+                Exception excep = e;\n+                while (excep.InnerException != null)\n+                {\n+                    excep = excep.InnerException;\n+                    flattenedMessage.Append(\" ---> \").Append(excep.Message);\n+                }\n+                Log.LogErrorWithCodeFromResources(\"XslTransform.TransformError\", flattenedMessage.ToString());\n+                Log.LogMessage(MessageImportance.Low, e.ToString());",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "Thanks!",
              "createdAt": "2023-04-26T08:01:01Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -174,7 +175,15 @@ public override bool Execute()\n             }\n             catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))\n             {\n-                Log.LogErrorWithCodeFromResources(\"XslTransform.TransformError\", e.Message);\n+                StringBuilder flattenedMessage = new StringBuilder(e.Message);\n+                Exception excep = e;\n+                while (excep.InnerException != null)\n+                {\n+                    excep = excep.InnerException;\n+                    flattenedMessage.Append(\" ---> \").Append(excep.Message);\n+                }\n+                Log.LogErrorWithCodeFromResources(\"XslTransform.TransformError\", flattenedMessage.ToString());\n+                Log.LogMessage(MessageImportance.Low, e.ToString());",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: could be static",
              "createdAt": "2023-04-26T08:00:52Z",
              "path": "src/Shared/TaskLoggingHelper.cs",
              "diffHunk": "@@ -503,6 +503,23 @@ public void LogMessageFromResources(MessageImportance importance, string message\n #endif\n         }\n \n+        /// <summary>\n+        /// Flatten the inner exception message\n+        /// </summary>\n+        /// <param name=\"e\">Exception to flatten.</param>\n+        /// <returns></returns>\n+        public string GetInnerExceptionMessageString(Exception e)",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This will get logged redundantly for each input - please move outside of the loop",
              "createdAt": "2023-04-27T08:44:19Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -165,7 +165,11 @@ public override bool Execute()\n                     {\n                         using (XmlReader xr = xmlinput.CreateReader(i))\n                         {\n-                            xslct.Transform(xr, arguments, xmlWriter);\n+                            if (UseTrustedSettings)\n+                            {\n+                                Log.LogMessageFromResources(MessageImportance.High, \"XslTransform.SecuritySettingsViaUseTrustedSettings\");",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Nice catch. Thank you.  That's sad with ignoring the loop.",
              "createdAt": "2023-04-27T09:10:49Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -165,7 +165,11 @@ public override bool Execute()\n                     {\n                         using (XmlReader xr = xmlinput.CreateReader(i))\n                         {\n-                            xslct.Transform(xr, arguments, xmlWriter);\n+                            if (UseTrustedSettings)\n+                            {\n+                                Log.LogMessageFromResources(MessageImportance.High, \"XslTransform.SecuritySettingsViaUseTrustedSettings\");",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    <value>You are enabling relaxed XSLT security settings via the UseTrustedSettings parameter. For more details on security implications of this setting please see https://aka.ms/msbuild/xsltransformation-task</value>\r\n```",
              "createdAt": "2023-04-28T21:47:09Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -2329,6 +2329,9 @@\n   </data>\n   <data name=\"XslTransform.UseTrustedSettings\" xml:space=\"preserve\">\n     <value>The usage of the document() method and embedded scripts is prohibited by default, due to risks of foreign code execution.  If \"{0}\" is a trusted source that requires those constructs, please set the \"UseTrustedSettings\" parameter to \"true\" to allow their execution.</value>\n+  </data>\n+  <data name=\"XslTransform.SecuritySettingsViaUseTrustedSettings\" xml:space=\"preserve\">\n+    <value>You are enabling relaxed XSLT security settings via UseTrustedSettings parameter. For more details on security implications of this settings please see https://aka.ms/msbuild/xsltransformation-task</value>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "It feels weird to me to always pass the resolver, even when not trusted. I see though that it's also always passed to the constructors of the `XslCompiledTransform`.\r\n\r\nShould we pass it only when `UseTrustedSettings` is true?",
              "createdAt": "2023-05-01T14:08:51Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -159,13 +159,18 @@ public override bool Execute()\n             // Do the transformation.\n             try\n             {\n+                if (UseTrustedSettings)\n+                {\n+                    Log.LogMessageFromResources(MessageImportance.High, \"XslTransform.SecuritySettingsViaUseTrustedSettings\");\n+                }\n+\n                 for (int i = 0; i < xmlinput.Count; i++)\n                 {\n                     using (XmlWriter xmlWriter = XmlWriter.Create(_outputPaths[i].ItemSpec, xslct.OutputSettings))\n                     {\n                         using (XmlReader xr = xmlinput.CreateReader(i))\n                         {\n-                            xslct.Transform(xr, arguments, xmlWriter);\n+                            xslct.Transform(xr, arguments, xmlWriter, new XmlUrlResolver());",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Since .NET Core does not allow resolving external URIs for XML by default. So, add that default resolver explicitly.  If the UseTrustedSettings is false, it won't allow the XSLT document() function. The XmlUrlResolver that resolves the document function won't work.\r\nIf the UseTrustedSettings is false and there is document, it will report the following error before resolve the document.\r\n![image](https://user-images.githubusercontent.com/26814373/236431370-2b2d572e-428e-4a54-887e-9a34472d0dc1.png)\r\n",
              "createdAt": "2023-05-05T10:12:22Z",
              "path": "src/Tasks/XslTransformation.cs",
              "diffHunk": "@@ -159,13 +159,18 @@ public override bool Execute()\n             // Do the transformation.\n             try\n             {\n+                if (UseTrustedSettings)\n+                {\n+                    Log.LogMessageFromResources(MessageImportance.High, \"XslTransform.SecuritySettingsViaUseTrustedSettings\");\n+                }\n+\n                 for (int i = 0; i < xmlinput.Count; i++)\n                 {\n                     using (XmlWriter xmlWriter = XmlWriter.Create(_outputPaths[i].ItemSpec, xslct.OutputSettings))\n                     {\n                         using (XmlReader xr = xmlinput.CreateReader(i))\n                         {\n-                            xslct.Transform(xr, arguments, xmlWriter);\n+                            xslct.Transform(xr, arguments, xmlWriter, new XmlUrlResolver());",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      }
    ]
  }
}