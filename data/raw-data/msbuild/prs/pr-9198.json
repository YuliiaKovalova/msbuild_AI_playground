{
  "number": 9198,
  "title": "Add Extended messages data to binary log",
  "body": "Fixes #9091\r\n\r\n### Context\r\nWe have introducing new extended event args (error, warn, message, custom) so time ago. \r\nThis PR is about logging extended data into binary log and will serve for modifying bin log viewer as well.\r\n\r\n### Changes Made\r\nAdd `BuildEventArgsFieldFlags.Extended` and implement related code.\r\n\r\n### Testing\r\nUnit tests\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-08-31T17:00:01Z",
  "updatedAt": "2023-10-02T11:32:27Z",
  "closedAt": "2023-10-02T11:32:27Z",
  "mergedAt": "2023-10-02T11:32:27Z",
  "additions": 270,
  "deletions": 75,
  "changedFiles": 14,
  "headRefName": "rokonec/extended-data-binlog",
  "isDraft": false,
  "author": {
    "login": "rokonec"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "94f8bd298234f96d2f263e3fc306c3df2e975063",
          "message": "Fix comment",
          "committedDate": "2023-08-31T16:38:31Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3cbbb30b881648dcd8b86cdab7d02030a31c46fd",
          "message": "Using BuildEventArgsFieldFlags",
          "committedDate": "2023-09-01T13:19:36Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fc0c845c255d8d920021cb8d0219768aebbb7fce",
          "message": "Remove unsafe from ReadGuid",
          "committedDate": "2023-09-06T09:25:44Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3f8212ad348e37fc516d3d0c5291abca529770a2",
          "message": "Enable nullabel for ExtendedDataFields and change it into immutable.",
          "committedDate": "2023-09-06T09:33:10Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d87d14f279cfe8ef82bb1804024babe3b2bca121",
          "message": "Minor refactoring and cleaning",
          "committedDate": "2023-09-06T09:33:50Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "059b22ce753d178a68c12f89107dd72b25a94d02",
          "message": "Fix nulability",
          "committedDate": "2023-09-06T13:08:44Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@KirillOsenkov I suppose we shall 1st release forward compatible log viewer. We can do it in two phases:\r\n1) make it read new file version\r\n2) UI changes to somehow show extended data\r\n\r\nWhile I can easily do 1 for 2 I might need some help.\r\nWe expect that after C++ teams implement extended error logs people might start to need it frequently.",
        "createdAt": "2023-08-31T17:04:57Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "Do we have a design document or a wiki page outlining the problem space, the motivation and the proposed approach? What do we know about the existing usage of the \"exotic\" event args? Do we have a list of teams/scenarios depending on these?\r\n\r\nAs we discover scenarios and knowledge, let's add to the doc. I'm sure we'll break someone, so would be nice to point them to the doc. I've always felt uncertainty about the exotic event args - they're ancient and it's unclear who if anyone is still using them and for what. Would also help to know these scenarios so we can test and validate.",
        "createdAt": "2023-08-31T18:35:49Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@KirillOsenkov \r\n\r\nResearch of usage custom event arguments was concluded in:\r\nhttps://github.com/dotnet/msbuild/issues/8825\r\n\r\nCustom event arguments has been deprecated for dotnet core msbuild in favor of new messages containing general purpose transparent payload. See https://github.com/dotnet/msbuild/pull/8917\r\n\r\nI would not care too much about binlog supporting rare needs for custom events args.\r\nHowever, for close future, C++ team is improving VS with enhanced structured errors and warnings info json format called SARIF. These structured data comes from C++ compiler.\r\n\r\nWe believe, that there can be substantial value in capturing and showing such info in log viewer. And this PR is the part of such effort.",
        "createdAt": "2023-08-31T21:18:04Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "Sounds good. I'm missing a ton of context, but superficially everything seems fine.\r\n\r\nSee if you can utilize BuildEventArgsFieldFlags in any way:\r\nhttps://source.dot.net/#Microsoft.Build/Logging/BinaryLogger/BuildEventArgsFieldFlags.cs,58948e4bf96933c9,references\r\n\r\nPerhaps you can avoid writing a boolean to see if extended data is present if you can write a single bit in the flags.",
        "createdAt": "2023-08-31T21:51:02Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@KirillOsenkov I have totally missed `BuildEventArgsFieldFlags`. Have just simplified and rewritten it. Good catch. Thx",
        "createdAt": "2023-09-01T13:21:31Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "It is ready for review. I just left it in Draft so it is not merged before we release compatible log viewer.",
        "createdAt": "2023-09-01T14:10:50Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "Looks OK as far as I can see",
        "createdAt": "2023-09-05T00:20:45Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Can we define it with nullables?\r\nThen we e.g. could use `ReadString` vs `ReadOptionalString` for the `ExtendedType`",
              "createdAt": "2023-09-04T13:43:18Z",
              "path": "src/Build/Logging/BinaryLogger/ExtendedDataFields.cs",
              "diffHunk": "@@ -0,0 +1,14 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+#nullable disable",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Also changed to immutable (removed property setters - what was I thinking :-)",
              "createdAt": "2023-09-06T09:35:02Z",
              "path": "src/Build/Logging/BinaryLogger/ExtendedDataFields.cs",
              "diffHunk": "@@ -0,0 +1,14 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+#nullable disable",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Adding extra unnecessary whitespace",
              "createdAt": "2023-09-05T00:19:21Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs",
              "diffHunk": "@@ -672,7 +697,7 @@ private void WriteMessageFields(BuildMessageEventArgs e, bool writeMessage = tru\n             }\n         }\n \n-        private void WriteArguments(object[] arguments)\n+            private void WriteArguments(object[] arguments)",
              "author": {
                "login": "KirillOsenkov"
              }
            },
            {
              "body": "Good catch. I should probably change my approach of reviewing my diffs without whitespace changes",
              "createdAt": "2023-09-06T08:30:54Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs",
              "diffHunk": "@@ -672,7 +697,7 @@ private void WriteMessageFields(BuildMessageEventArgs e, bool writeMessage = tru\n             }\n         }\n \n-        private void WriteArguments(object[] arguments)\n+            private void WriteArguments(object[] arguments)",
              "author": {
                "login": "rokonec"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "No need to add an extra empty line here",
              "createdAt": "2023-09-05T00:19:32Z",
              "path": "src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs",
              "diffHunk": "@@ -465,6 +484,7 @@ private void Write(BuildMessageEventArgs e)\n             }\n         }\n \n+",
              "author": {
                "login": "KirillOsenkov"
              }
            }
          ]
        }
      }
    ]
  }
}