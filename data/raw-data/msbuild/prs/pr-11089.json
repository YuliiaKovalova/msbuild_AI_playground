{
  "number": 11089,
  "title": "basic expander refactor",
  "body": "extracting the TryExecuteWellKnownFunction and argument parsing to a separate file.\r\n\r\nFixes #9975\r\npartial fix at best. Extracting the area into separate files. Further refactoring unfortunately had a performance impact so I've settled for containing the ugly area.\r\n\r\n### Context\r\nTryExecuteWellKnownFunction is MSBuild performance hack to avoid reflection since it's slow.\r\nTogether with argument parsing, this is some 1500 lines of code that was in the Expander.cs making it hard to navigate.\r\n\r\n### Testing\r\nexisting tests should be sufficient as I did no changes to the logic and just moved stuff around. There were some rough edges that I had to clean but I hope our current test battery will be sufficient.\r\n\r\n### Notes\r\nWe should look into Reflection.Emit, custom IL generation could be a way to get rid of this hack in a performant manner. I'll add it on my to-learn list for Fridays.\r\n",
  "state": "MERGED",
  "createdAt": "2024-12-05T11:47:30Z",
  "updatedAt": "2025-01-17T09:10:39Z",
  "closedAt": "2025-01-17T09:10:37Z",
  "mergedAt": "2025-01-17T09:10:37Z",
  "additions": 1443,
  "deletions": 1361,
  "changedFiles": 5,
  "headRefName": "refactor_expander_basic",
  "isDraft": false,
  "author": {
    "login": "SimaTian"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "99917909140307432256cca33b8e9baf29d12a68",
          "message": "basic refactor of expander",
          "committedDate": "2025-01-02T15:39:35Z",
          "author": {
            "name": "SimaTian",
            "email": "tom.bartonek@volny.cz"
          }
        }
      },
      {
        "commit": {
          "oid": "152fbf753108396b7a4455a7dc2b7255d977c600",
          "message": "Merge branch 'main' into refactor_expander_basic",
          "committedDate": "2025-01-02T15:40:09Z",
          "author": {
            "name": "Tomas Bartonek",
            "email": "tom.bartonek@volny.cz"
          }
        }
      },
      {
        "commit": {
          "oid": "4398a191d9b8009af82fedb69db34d33e5cc9fcb",
          "message": "updating name according to a review comment",
          "committedDate": "2025-01-16T11:02:50Z",
          "author": {
            "name": "SimaTian",
            "email": "tom.bartonek@volny.cz"
          }
        }
      },
      {
        "commit": {
          "oid": "1f696a70705cc88109717839cfe43612d1c407fa",
          "message": "file name update",
          "committedDate": "2025-01-16T11:07:36Z",
          "author": {
            "name": "SimaTian",
            "email": "tom.bartonek@volny.cz"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: Please consider `ArgumentParser` name as it's more aligned with C# recommended naming convention.",
              "createdAt": "2025-01-16T10:41:32Z",
              "path": "src/Build/Evaluation/Expander/ArgumentParsing.cs",
              "diffHunk": "@@ -0,0 +1,422 @@\n+\ufeff// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Globalization;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+\n+namespace Microsoft.Build.Evaluation.Expander\n+{\n+    internal class ArgumentParsing",
              "author": {
                "login": "MichalPavlik"
              }
            }
          ]
        }
      }
    ]
  }
}