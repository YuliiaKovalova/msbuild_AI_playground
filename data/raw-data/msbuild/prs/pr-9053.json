{
  "number": 9053,
  "title": "Right justify target and duration in terminallogger",
  "body": "Right-justify target and duration. To do this, I changed the localization mechanism for in-progress targets to be a bit less flexible at the translation level (the order is now fixed in code), but that allows determining a bunch of per-message length characteristics, unlocking right-justification and context-aware truncation.\r\n\r\n![right-justified-gnome-terminal](https://github.com/dotnet/msbuild/assets/3347530/cabe61bf-5c5c-4e74-b6f1-349f5fcb1323)\r\n\r\n![right-justified-max-width](https://github.com/dotnet/msbuild/assets/3347530/6cc2ff1d-2976-46c0-88f1-33a518f313da)",
  "state": "MERGED",
  "createdAt": "2023-07-19T22:24:22Z",
  "updatedAt": "2023-12-13T16:59:39Z",
  "closedAt": "2023-12-11T16:27:38Z",
  "mergedAt": "2023-12-11T16:27:38Z",
  "additions": 377,
  "deletions": 489,
  "changedFiles": 29,
  "headRefName": "right-justify",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": {
    "title": "VS 17.9"
  },
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "93b60a937cf1ae044fbfcd8fd3e0124413fa337a",
          "message": "Pull NodesFrame to own file",
          "committedDate": "2023-11-29T16:23:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b78c640272d4e479b0ee54ee6192c4243c5bf69e",
          "message": "File for NodeStatus",
          "committedDate": "2023-11-29T16:24:13Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "566d823495404e2ede10ffaa1c2e6554ad38195f",
          "message": "Preserve NodeStatus in frame\n\nInstead of the rendered string, with its invisible control characters.",
          "committedDate": "2023-11-29T16:24:17Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e50041a57b698ea069d226a2caab0d4e8b89f7ca",
          "message": "De-record NodeStatus\n\nI wanted control over equality, and we don't need the auto-generated stuff.",
          "committedDate": "2023-11-29T16:24:17Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8f8dd687e999b35f6c5dfe366fbbcf455bae56d2",
          "message": "Right justify output\n\nMove cursor right (it stops at end of line), then back to justify the\noutput. This makes the localization less flexible since the formatting +\njustification is handled in code, but makes it a lot easier to\nunderstand. In the future reordering in translations would need to be\nhandled fairly carefully.\n\nAvoid a bunch of overwrite problems by simplifiying the\nshould-we-do-a-fancy-overwrite decision to \"is just time tick\" or \"just\noverwrite it all\".",
          "committedDate": "2023-11-29T16:24:17Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Looks good !",
        "createdAt": "2023-12-01T09:36:04Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Would love feedback on this const. 120 feels reasonably wide but I regularly have wider terminals. However it's enough to not overlap stuff ~ever in my usage that I've noticed, and still \"within sight\".",
              "createdAt": "2023-08-01T21:34:48Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -0,0 +1,135 @@\n+// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+\n+using System.Text;\n+using Microsoft.Build.Shared;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+/// <summary>\n+/// Capture states on nodes to be rendered on display.\n+/// </summary>\n+internal sealed class NodesFrame\n+{\n+    private const int MaxColumn = 120;",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "what does this impact?\r\n\r\nThe majority of respondents in our survey had terminals in the 600-800x200-300 range, because they were used inside of another application.",
              "createdAt": "2023-08-01T21:45:37Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -0,0 +1,135 @@\n+// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+\n+using System.Text;\n+using Microsoft.Build.Shared;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+/// <summary>\n+/// Capture states on nodes to be rendered on display.\n+/// </summary>\n+internal sealed class NodesFrame\n+{\n+    private const int MaxColumn = 120;",
              "author": {
                "login": "baronfel"
              }
            },
            {
              "body": "It is the \"maximum width\" of the \"right justification\". So \"right justify unless that's more than 120 chars wide, then just put it there\".\r\n\r\nBetter gif:\r\n\r\n![right-justified-max-width](https://github.com/dotnet/msbuild/assets/3347530/6cc2ff1d-2976-46c0-88f1-33a518f313da)\r\n",
              "createdAt": "2023-08-01T21:49:10Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -0,0 +1,135 @@\n+// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+\n+using System.Text;\n+using Microsoft.Build.Shared;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+/// <summary>\n+/// Capture states on nodes to be rendered on display.\n+/// </summary>\n+internal sealed class NodesFrame\n+{\n+    private const int MaxColumn = 120;",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Gotcha - that seems very reasonable.",
              "createdAt": "2023-08-01T21:51:54Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -0,0 +1,135 @@\n+// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+\n+using System.Text;\n+using Microsoft.Build.Shared;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+/// <summary>\n+/// Capture states on nodes to be rendered on display.\n+/// </summary>\n+internal sealed class NodesFrame\n+{\n+    private const int MaxColumn = 120;",
              "author": {
                "login": "baronfel"
              }
            },
            {
              "body": "nit: could we discover this from the terminal itself via control codes?",
              "createdAt": "2023-10-30T20:55:28Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -0,0 +1,135 @@\n+// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+\n+using System.Text;\n+using Microsoft.Build.Shared;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+/// <summary>\n+/// Capture states on nodes to be rendered on display.\n+/// </summary>\n+internal sealed class NodesFrame\n+{\n+    private const int MaxColumn = 120;",
              "author": {
                "login": "baronfel"
              }
            },
            {
              "body": "Do we want to discover it from the terminal, or have a cap? Having done a 4k fullscreen terminal window with full right justification . . . I think we want a cap. I'm not tied to 120 chars as the cap though.",
              "createdAt": "2023-10-30T21:11:49Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -0,0 +1,135 @@\n+// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+\n+using System.Text;\n+using Microsoft.Build.Shared;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+/// <summary>\n+/// Capture states on nodes to be rendered on display.\n+/// </summary>\n+internal sealed class NodesFrame\n+{\n+    private const int MaxColumn = 120;",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Definitely something we can revisit based on feedback \ud83d\udc4d ",
              "createdAt": "2023-10-30T21:14:04Z",
              "path": "src/MSBuild/TerminalLogger/NodesFrame.cs",
              "diffHunk": "@@ -0,0 +1,135 @@\n+// Licensed to the .NET Foundation under one or more agreements.\n+// The .NET Foundation licenses this file to you under the MIT license.\n+\n+using System;\n+using System.Collections.Generic;\n+\n+using System.Text;\n+using Microsoft.Build.Shared;\n+\n+namespace Microsoft.Build.Logging.TerminalLogger;\n+\n+/// <summary>\n+/// Capture states on nodes to be rendered on display.\n+/// </summary>\n+internal sealed class NodesFrame\n+{\n+    private const int MaxColumn = 120;",
              "author": {
                "login": "baronfel"
              }
            }
          ]
        }
      }
    ]
  }
}