{
  "number": 7481,
  "title": "Allow overriding MSBuildRuntimeType to \"Full\" on RUNTIME_TYPE_NETCORE",
  "body": "### Context\r\nWe have scenarios in internal build tools where MSBuild evaluation is executed in the parse phase under a .NET 6.0 process, prior the build phase which builds projects using full framework ```msbuild.exe```. As evaluation results in the parse phase must match the build phase for prediction to be accurate, ```MSBuildRuntimeType``` must be set to ```\"Full\"``` in both cases - so we currently solve this by launching a separate process under full framework which runs evaluation / parsing and serializes results back to the main process.\r\n\r\nHowever, this serialization incurs a significant amount of overhead on large repos. Instead, by having the option of forcing ```MSBuildRuntimeType=Full``` when on ```RUNTIME_TYPE_NETCORE```, we would be able to evaluate these projects in-process for the majority of repos.\r\n\r\n### Changes Made\r\n- Added a new environment variable\r\n```MsBuildForceEvaluateAsFullFramework```\r\n- Added conditions to set ```MSBuildRuntimeType=\"Full\"``` when this env var is set\r\n\r\n### Testing\r\nRan multiple validation runs across all repos on internal build tools to validate this approach works, comparing evaluation / parser results of the \"forced\" runtime vs \"actual\".\r\n",
  "state": "MERGED",
  "createdAt": "2022-03-21T19:35:46Z",
  "updatedAt": "2022-03-22T19:56:02Z",
  "closedAt": "2022-03-22T19:56:02Z",
  "mergedAt": "2022-03-22T19:56:02Z",
  "additions": 8,
  "deletions": 2,
  "changedFiles": 3,
  "headRefName": "dev/chcasta/msbuildruntime-override-pr",
  "isDraft": false,
  "author": {
    "login": "ccastanedaucf"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a0c8a2ca2915b5006b1b5de866e789e4ad6d202a",
          "message": "Allow overriding MSBuildRuntimeType to \"Full\"",
          "committedDate": "2022-03-21T16:21:26Z",
          "author": {
            "name": "Christian Castaneda",
            "email": "chcasta@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "32853f86564bb28a1ae2c837dc724f39ed232d10",
          "message": "Nit: Invert conditions",
          "committedDate": "2022-03-21T19:48:27Z",
          "author": {
            "name": "Christian Castaneda",
            "email": "chcasta@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Nit: I'd invert these conditions since you have to define both sides anyway.",
              "createdAt": "2022-03-21T19:42:04Z",
              "path": "src/Build/Definition/Toolset.cs",
              "diffHunk": "@@ -921,7 +921,7 @@ private void InitializeProperties(ILoggingService loggingServices, BuildEventCon\n \n                     reservedProperties.Add(ProjectPropertyInstance.Create(ReservedPropertyNames.msbuildRuntimeType,\n #if RUNTIME_TYPE_NETCORE\n-                        \"Core\",\n+                        !Traits.Instance.ForceEvaluateAsFullFramework ? \"Core\" : \"Full\",",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}