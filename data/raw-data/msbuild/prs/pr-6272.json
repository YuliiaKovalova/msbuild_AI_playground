{
  "number": 6272,
  "title": "Handle unsupported paths in ProjectInSolution.AbsolutePath",
  "body": "### Context\r\nRecreating https://github.com/dotnet/msbuild/pull/6238 to merge into 16.9.\r\n\r\n### Notes\r\nCreated by branching off of upstream/vs16.9 and cherry-picking each commit.\r\n\r\nSign off for 16.9.3 is 4/12\r\n\r\n/cc: @jeffkl @donovan-ecargo",
  "state": "CLOSED",
  "createdAt": "2021-03-16T20:12:42Z",
  "updatedAt": "2021-03-16T20:29:20Z",
  "closedAt": "2021-03-16T20:29:20Z",
  "mergedAt": null,
  "additions": 46,
  "deletions": 7,
  "changedFiles": 2,
  "headRefName": "fix-solutionproject-absolutepath-16.9",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "ec3b457e2488fb78bdd771207ab2fe29c91157fc",
          "message": "Handle unsupported paths in ProjectInSolution.AbsolutePath\n\n#5950 introduced a call to `Path.GetFullPath()` to get a path that is normalized.  However, in some cases Visual Studio stores unsupported paths which will cause `Path.GetFullPath()` to throw.\n\n`Path.GetFullPath()` can also throw a `PathTooLongException` which is now handled.\n\nFixes #6236",
          "committedDate": "2021-03-16T20:10:47Z",
          "author": {
            "name": "Jeff Kluge",
            "email": "jeffkl@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d3e1f82b99803d80729d9a5c51bfafada4bc8a21",
          "message": "Call Uri.TryCreate() to see if the relative path is a URI before trying to normalize the path",
          "committedDate": "2021-03-16T20:10:52Z",
          "author": {
            "name": "Jeff Kluge",
            "email": "jeffkl@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1f81fdd8e9fe142dc3898a840917ccfd379e3792",
          "message": "Reduce complexity of the solution file used in the unit test",
          "committedDate": "2021-03-16T20:10:57Z",
          "author": {
            "name": "Jeff Kluge",
            "email": "jeffkl@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Its been a while since I did servicing, but I was wondering if it would be better to cherry-pick the actual commit that went into main?\r\n\r\nhttps://github.com/dotnet/msbuild/commit/f137b7032fecb71025335e846bd38eba60ca9972\r\n\r\nI think that would make it easier to tell what commits are in main and what commits are in this branch?  The commits you cherry-picked are from my branch and not the squashed commit that went in.  But again, I might not fully know what the best option is either.  Here's a draft PR of the cherry-pick from main to vs16.9: https://github.com/dotnet/msbuild/pull/6273",
        "createdAt": "2021-03-16T20:19:13Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl I think you're right. The process should have been to merge into vs16.9, then vs16.9 would flow into master, merging the squashed commit. Let's go with your PR (thanks for making that btw).",
        "createdAt": "2021-03-16T20:22:57Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}