{
  "number": 9299,
  "title": "[ClickOnce] Update how ClickOnce chooses to publish items from the None group and\u2026",
  "body": "Fixes [AB#1889893](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1889893/)\r\n\r\n### Summary\r\n\r\nRespect publish profile for items copied from transitive project references in ClickOnce.\r\n\r\n### Customer Impact\r\n\r\nClickOnce publish includes additional files irrespective of publish profile for .NET 5+ projects.\r\n\r\n### Regression?\r\n\r\nYes, new files are unconditionally published w.r.t. 17.7.\r\n\r\n### Testing\r\n\r\nValidated the specific scenarios with sample Forms projects.Regression testing by CTI team.\r\n\r\n### Risk\r\n\r\nMedium-low. The majority of the change is in ClickOnce-specific targets, but there's an item-name change that affects all projects. This to a \u201cprivate\u201d (initial-underscore-named) item and the change shouldn\u2019t be observable outside the targets in question (the original item is still populated, just at a slightly later time).\r\n\r\n### Context\r\n\r\nhttps://github.com/dotnet/msbuild/pull/9211\r\nhttps://github.com/dotnet/msbuild/pull/9209\r\n\r\n1. Above PRs added handling for ClickOnce publishing of items from the None group and content items from P2P references. However, it is publishing these items by default w/o checking if they have been opted in for publishing in the ClickOnce profile created in VS. Also the new behavior should only be applicable for apps targeting .NET>=5 and apps targeting .NET FX 4.X should not include these items for publishing at all.\r\n\r\n2. The change does not consider the MSBuildCopyContentTransitive property which decides how transitive content is computed. Depending on the value of MSBuildCopyContentTransitive, the _RecursiveTargetForContentCopying property is set to the target that will compute the transitive content.\r\n\r\n### Changes Made\r\n\r\n1. Items from the None group and content items from from P2P references that need to be published is now determined based on their presence in the PublishFiles collection and the extension of the files. This matches the logic used on the tooling side in VS. When items are opted into for publishing, they get added to the PublishFiles collection. DLL/EXE files are published by default. \r\nTo exclude these items from being considered for ClickOnce publish, the PublishProcol property is also being checked. This property is not set during publish of .NET FX 4.X projects.\r\n\r\n2. ClickOnce target is taking dependency on target set in the _RecursiveTargetForContentCopying property instead of GetCopyToOutputDirectoryItems directly. Setting of DeploymentComputeClickOnceManifestInfoDependsOn property is moved to a later point after the _RecursiveTargetForContentCopying value has been set.\r\n \r\n\r\n### Testing\r\nTesting done with Forms apps with content items specific to the scenario described.\r\nCTI has covered regression testing with these changes.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-10-02T23:24:02Z",
  "updatedAt": "2023-10-13T21:02:50Z",
  "closedAt": "2023-10-13T21:02:50Z",
  "mergedAt": "2023-10-13T21:02:50Z",
  "additions": 41,
  "deletions": 23,
  "changedFiles": 1,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "sujitnayak"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Servicing-approved"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "eefbaaddcc2067b0afed3f4e3e2423f5ca00e8e1",
          "message": "Update how ClickOnce chooses to publish items from the None group and content items from reference project to match thebehavior in VS tooling.",
          "committedDate": "2023-10-03T18:10:35Z",
          "author": {
            "name": "Sujit Nayak",
            "email": "sujitn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I am changing the name from _TransitiveItemsToCopyToOutputDirectory to _CopyToOutputDirectoryTransitiveItems b/c otherwise _TransitiveItemsToCopyToOutputDirectory items are duplicated. They get added in this target and the caller then adds the returned items into the same item group.",
              "createdAt": "2023-10-03T00:27:01Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -5001,7 +5009,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n   <Target\n     Name=\"_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences\"\n     DependsOnTargets=\"_PopulateCommonStateForGetCopyToOutputDirectoryItems;_AddOutputPathToGlobalPropertiesToRemove\"\n-    Returns=\"@(_TransitiveItemsToCopyToOutputDirectory)\">\n+    Returns=\"@(_CopyToOutputDirectoryTransitiveItems)\">",
              "author": {
                "login": "sujitnayak"
              }
            }
          ]
        }
      }
    ]
  }
}