{
  "number": 8100,
  "title": "Build multitargeting nodes w/ GeneratePackageOnBuild (#8056)",
  "body": "Fixes #8056 \r\n\r\n### Context\r\n As described in #8056, in graph builds the only target called on referenced multitargeting nodes with the `GeneratePackageOnBuild` property set to `true` is `GetTargetFrameworks`, so `Pack` never gets executed and no `*.nupkg` file is created.\r\n\r\n### Changes Made\r\nIf an outer build node has the `GeneratePackageOnBuild` property set to `true`, then add `Build` to its target list, which will result in `Pack` getting hooked and called.\r\n\r\n### Testing\r\nVerified that a referenced outer build node with the `GeneratePackageOnBuild` property set to `true` has `Build` added to its target list.\r\n",
  "state": "CLOSED",
  "createdAt": "2022-10-28T14:43:54Z",
  "updatedAt": "2022-10-28T17:20:33Z",
  "closedAt": "2022-10-28T17:20:32Z",
  "mergedAt": null,
  "additions": 77,
  "deletions": 6,
  "changedFiles": 4,
  "headRefName": "BuildGeneratePackageOnBuildMultitargetingNodes",
  "isDraft": true,
  "author": {
    "login": "DmitriyShepelev"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "cb29cabc70fd1ca8cc3fc14c9ab34e1dcf99e114",
          "message": "Build multitargeting nodes w/ GeneratePackageOnBuild (#8056)",
          "committedDate": "2022-10-28T14:24:55Z",
          "author": {
            "name": "Dmitriy Shepelev",
            "email": "dshepelev@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I believe there are a couple issues here.\r\n\r\n1. I don't believe \"GeneratePackageOnBuild\" is \"special\" here wrt the graph.\r\n2. Consider when A -> B and B multitargets and has `GeneratePackageOnBuild`, then building A without `/graph` would not produce the package. I believe with your changes it would.\r\n\r\nThere's a little bit of nuance with multitargeting and whatever the entry-points are. ie, outer builds in general only have `GetTargetFrameworks` invoked, unless they're an entry-point in which case their default targets are invoked.",
              "createdAt": "2022-10-28T15:02:26Z",
              "path": "src/Build/Graph/ProjectGraph.cs",
              "diffHunk": "@@ -636,18 +636,24 @@ private string DebuggerDisplayString()\n                 var targetsToPropagate = ProjectInterpretation.TargetsToPropagate.FromProjectAndEntryTargets(node.ProjectInstance, requestedTargets);\n \n                 // Queue the project references for visitation, if the edge hasn't already been traversed.\n-                foreach (var referenceNode in node.ProjectReferences)\n+                foreach (ProjectGraphNode referenceNode in node.ProjectReferences)\n                 {\n-                    var applicableTargets = targetsToPropagate.GetApplicableTargetsForReference(referenceNode.ProjectInstance);\n+                    ProjectInstance projectInstance = referenceNode.ProjectInstance;\n+                    ImmutableList<string> applicableTargets = targetsToPropagate.GetApplicableTargetsForReference(projectInstance);\n \n                     if (applicableTargets.IsEmpty)\n                     {\n                         continue;\n                     }\n \n-                    var expandedTargets = ExpandDefaultTargets(\n+                    if (ProjectInterpretation.IsOuterBuildWithGeneratePackageOnBuildPropertySetToTrue(projectInstance))",
              "author": {
                "login": "dfederm"
              }
            }
          ]
        }
      }
    ]
  }
}