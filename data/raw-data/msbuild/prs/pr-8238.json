{
  "number": 8238,
  "title": "Localize strings of link error messages on non-Windows",
  "body": "Fixes [#8231](https://github.com/dotnet/msbuild/issues/8231)\r\n\r\n### Changes Made\r\nCreate resouse string and pass the log object as a parameter in the  MakeHardLink function\r\n\r\n### Testing\r\nTest locally\r\n",
  "state": "MERGED",
  "createdAt": "2022-12-13T05:44:22Z",
  "updatedAt": "2023-03-03T21:12:09Z",
  "closedAt": "2023-01-20T07:03:47Z",
  "mergedAt": "2023-01-20T07:03:47Z",
  "additions": 103,
  "deletions": 29,
  "changedFiles": 18,
  "headRefName": "jennbybai/issue8231",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "73b71ce5dd70264bfca670bdeb331758d47b8487",
          "message": "Localize strings on hardlink failure on non-Windows",
          "committedDate": "2022-12-13T05:38:19Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f1cc9063fbdf540799a2ca8efbd5d477f3e32a66",
          "message": "Update symlinks non-localized  string",
          "committedDate": "2022-12-14T07:51:24Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fb292330bed5537eb151c5112c4052fd9e91bef5",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jennbybai/issue8231",
          "committedDate": "2023-01-05T02:47:37Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "105712c9c35f3222d2471610fded93b695440062",
          "message": "Localize the symlink string",
          "committedDate": "2023-01-05T07:46:26Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "936353d74c4add1fa364b6177186b9f492cac99a",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jennbybai/issue8231",
          "committedDate": "2023-01-11T08:57:11Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1532c65dff98ab568008de07f4948fb6e4412249",
          "message": "Wrap error code and error message",
          "committedDate": "2023-01-12T11:17:53Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2f5078bd661db8c02c253b51e87847c156aa237a",
          "message": "Format code\n\nCo-authored-by: Forgind <12969783+Forgind@users.noreply.github.com>",
          "committedDate": "2023-01-20T05:24:00Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this move significant?",
              "createdAt": "2022-12-13T21:56:57Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -2336,6 +2327,16 @@ public void CopyToDestinationFolderWithHardLinkFallbackTooManyLinks()\n                     SkipUnchangedFiles = true\n                 };\n \n+                // Exhaust the number (1024) of directory entries that can be created for a file",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Yes, in order to use the TaskLoggingHelper\uff0cit should be after initializing the Copy object.",
              "createdAt": "2022-12-14T04:12:12Z",
              "path": "src/Tasks.UnitTests/Copy_Tests.cs",
              "diffHunk": "@@ -2336,6 +2327,16 @@ public void CopyToDestinationFolderWithHardLinkFallbackTooManyLinks()\n                     SkipUnchangedFiles = true\n                 };\n \n+                // Exhaust the number (1024) of directory entries that can be created for a file",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This same line also appears in MakeSymbolicLink; you should change that one, too.",
              "createdAt": "2022-12-13T22:20:46Z",
              "path": "src/Tasks/NativeMethods.cs",
              "diffHunk": "@@ -813,7 +813,7 @@ internal static bool MakeHardLink(string newFileName, string exitingFileName, re\n             else\n             {\n                 hardLinkCreated = link(exitingFileName, newFileName) == 0;\n-                errorMessage = hardLinkCreated ? null : \"The link() library call failed with the following error code: \" + Marshal.GetLastWin32Error();\n+                errorMessage = hardLinkCreated ? null : log.GetResourceMessage(\"Copy.LinklibraryFailedPrefix\") + Marshal.GetLastWin32Error();",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Done",
              "createdAt": "2022-12-14T08:39:59Z",
              "path": "src/Tasks/NativeMethods.cs",
              "diffHunk": "@@ -813,7 +813,7 @@ internal static bool MakeHardLink(string newFileName, string exitingFileName, re\n             else\n             {\n                 hardLinkCreated = link(exitingFileName, newFileName) == 0;\n-                errorMessage = hardLinkCreated ? null : \"The link() library call failed with the following error code: \" + Marshal.GetLastWin32Error();\n+                errorMessage = hardLinkCreated ? null : log.GetResourceMessage(\"Copy.LinklibraryFailedPrefix\") + Marshal.GetLastWin32Error();",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't think the user needs to know what function was called internally. I'd expect something like\n``` \nFailed to link '{0}' to '{1}'. Error code {2}.\n```\nOr the same without the paths.",
              "createdAt": "2022-12-14T05:58:34Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The link() library call failed with the following error code: </value>",
              "author": {
                "login": "danmoseley"
              }
            },
            {
              "body": "I seem to recall this is part of a longer error message (definitely not confusing), which would mean they get that as well.\r\n\r\nI don't feel strongly about mentioning link(); my argument in favor of this version is that it tells people not to look for the subsequent error code in MSBuild. I don't think that's a super strong argument.",
              "createdAt": "2022-12-15T00:46:11Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The link() library call failed with the following error code: </value>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "The log should be similar with https://github.com/dotnet/msbuild/pull/8211#issue-1472875383.  The bold text will be replaced with the current localized string. Sorry, I don't have a non-windows system on my hand now.\r\n\r\n\"CopyFiles:\r\nCreating hard link to copy \"Program.cs\" to \"c:\\MyProject\\Destination\\Program.cs\".\r\nCould not use a hard link to copy \"Program.cs\" to \"c:\\MyProject\\Destination\\Program.cs\". Copying the file with symbolic link instead. The system cannot move the file to a different disk drive. (Exception from HRESULT: 0\r\nx80070011)\r\nCreating symbolic link to copy \"Program.cs\" to \"c:\\MyProject\\Destination\\Program.cs\".\r\nCould not use a link to copy \"Program.cs\" to \"c:\\MyProject\\Destination\\Program.cs\". Copying the file instead. **A required privilege is not held by the client. (Exception from HRESULT: 0x80070522)**\r\nCopying file from \"E:\\Test\\ConsoleApp2\\ConsoleApp2\\Program.cs\" to \"c:\\MyProject\\Destination\\Program.cs\".\r\nDone Building Project \"E:\\Test\\ConsoleApp2\\ConsoleApp2\\ConsoleApp2.csproj\" (default targets).\"",
              "createdAt": "2022-12-15T07:34:31Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The link() library call failed with the following error code: </value>",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "FYI: https://github.com/dotnet/msbuild/pull/8213#discussion_r1061545472\r\n(if we'd mention the API, we should mention it properly)",
              "createdAt": "2023-01-04T16:22:19Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The link() library call failed with the following error code: </value>",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "done",
              "createdAt": "2023-01-05T09:19:21Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The link() library call failed with the following error code: </value>",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "We usually try to support localizing order of arguments as well as the words in the message, so I think this should ideally be\r\n\r\n```suggestion\r\n    <value>The {0} library call failed with error code {1}</value>\r\n```\r\n\r\nInstead of having it be a prefix and appending after getting the localized string.\r\n\r\nHere that looks like it might be complicated because of how the string is handled in `MakeSymbolicLink`. Could that take a format string as an input, instead of the current approach?",
              "createdAt": "2023-01-09T17:16:53Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The {0} library call failed with the following error code: </value>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "> Could that take a format string as an input, instead of the current approach?\r\n\r\nI think we can't do it like that. Since MakeSymbolicLink is defined in Framework and can't reference TaskLoggingHelper. So I pass the string errorMessagePrefix = \"\"(formated from the resource) to MakeSymbolicLink function. And real error code is  Marshal.GetLastWin32Error(), that returns the error code returned by the last unmanaged function symlink in MakeSymbolicLink.  ",
              "createdAt": "2023-01-10T09:55:04Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The {0} library call failed with the following error code: </value>",
              "author": {
                "login": "JaynieBai"
              }
            },
            {
              "body": "The alternative can be that `MakeSymbolicLink` would get back just the error code:\r\n\r\n```\r\nMakeSymbolicLink(string newFileName, string exitingFileName, ref string systemError)\r\n```\r\n\r\nWhere `systemError` is either the descriptive HR string (on Win) or error code number (non-win) and the caller would then take care about wrapping it to logger-friendly, localized message (as caller has access to `TaskLoggingHelper`)\r\n",
              "createdAt": "2023-01-11T09:52:14Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The {0} library call failed with the following error code: </value>",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Yeah, that's a good suggestion. Thanks a lot",
              "createdAt": "2023-01-12T11:25:46Z",
              "path": "src/Tasks/Resources/Strings.resx",
              "diffHunk": "@@ -221,6 +221,9 @@\n \n         If this bucket overflows, pls. contact 'vsppbdev'.\n   -->\n+  <data name=\"Copy.LinklibraryFailedPrefix\">\n+    <value>The {0} library call failed with the following error code: </value>",
              "author": {
                "login": "JaynieBai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n                    errorMessage = Log.FormatResourceString(\"Copy.NonWindowsLinkErrorMessage\", \"symlink()\", errorMessage);\r\n```\r\n\r\nWe normally aim for all on one line or one argument per line.",
              "createdAt": "2023-01-19T19:29:05Z",
              "path": "src/Tasks/Copy.cs",
              "diffHunk": "@@ -302,7 +302,12 @@ private void LogDiagnostic(string message, params object[] messageArgs)\n             if (!hardLinkCreated && UseSymboliclinksIfPossible)\n             {\n                 TryCopyViaLink(SymbolicLinkComment, MessageImportance.Normal, sourceFileState, destinationFileState, ref destinationFileExists, out symbolicLinkCreated, ref errorMessage, (source, destination, errMessage) => NativeMethodsShared.MakeSymbolicLink(destination, source, ref errorMessage));\n-                if(!symbolicLinkCreated)\n+                if (!NativeMethodsShared.IsWindows)\n+                {\n+                    errorMessage = Log.FormatResourceString(\"Copy.NonWindowsLinkErrorMessage\"\n+                    , \"symlink()\", errorMessage);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This resource doesn't seem to exist?",
              "createdAt": "2023-03-03T20:55:50Z",
              "path": "src/Tasks/NativeMethods.cs",
              "diffHunk": "@@ -808,7 +809,7 @@ internal static bool MakeHardLink(string newFileName, string exitingFileName, re\n             else\n             {\n                 hardLinkCreated = link(exitingFileName, newFileName) == 0;\n-                errorMessage = hardLinkCreated ? null : \"The link() library call failed with the following error code: \" + Marshal.GetLastWin32Error();\n+                errorMessage = hardLinkCreated ? null : log.FormatResourceString(\"Copy.LinklibraryFailedPrefix\", \"link()\", Marshal.GetLastWin32Error());",
              "author": {
                "login": "lewing"
              }
            },
            {
              "body": "That's awkward. Will fix\u2014thanks for pointing that out!",
              "createdAt": "2023-03-03T21:12:08Z",
              "path": "src/Tasks/NativeMethods.cs",
              "diffHunk": "@@ -808,7 +809,7 @@ internal static bool MakeHardLink(string newFileName, string exitingFileName, re\n             else\n             {\n                 hardLinkCreated = link(exitingFileName, newFileName) == 0;\n-                errorMessage = hardLinkCreated ? null : \"The link() library call failed with the following error code: \" + Marshal.GetLastWin32Error();\n+                errorMessage = hardLinkCreated ? null : log.FormatResourceString(\"Copy.LinklibraryFailedPrefix\", \"link()\", Marshal.GetLastWin32Error());",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}