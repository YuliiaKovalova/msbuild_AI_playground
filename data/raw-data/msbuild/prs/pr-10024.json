{
  "number": 10024,
  "title": "Check version bump on release branches' update",
  "body": "Fixes #9960\r\n\r\n### Context\r\n`VersionPrefix` should be updated on each commit to our service branches (vsXX.YY) to prevent clashes of the produced packages with same version that would cause issues later down the VS insertion pipeline.\r\n\r\nThough currently we use GH polices to inform us about this, it still requires user action and can be prone to errors.\r\n\r\n### Changes Made\r\nAdd a build step checking version bump on release branches' update. If it's not updated, fail the run with the message asking to update the version.\r\n\r\nNeed to backport to active release branches.\r\n\r\n### Testing\r\nTested with test PR #10017.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2024-04-17T05:59:17Z",
  "updatedAt": "2024-04-19T12:03:04Z",
  "closedAt": "2024-04-19T10:33:49Z",
  "mergedAt": "2024-04-19T10:33:49Z",
  "additions": 36,
  "deletions": 0,
  "changedFiles": 1,
  "headRefName": "vs-check-version-update",
  "isDraft": false,
  "author": {
    "login": "GangWang01"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a893214af18606ba13a7cf2e405743c690d2999f",
          "message": "Check version bump on release branches' update",
          "committedDate": "2024-04-17T05:45:34Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bdddf3cce0177963da51c2c78a5720e6936319c7",
          "message": "Skip check version bump on release branch update for initial commit to release branch or the change from dotnet bot",
          "committedDate": "2024-04-18T12:00:24Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "63fff4d2fd5e92720252151af95d90dff3973af8",
          "message": "Remove the exception for dependencies update by dotnet-maestro[bot]",
          "committedDate": "2024-04-19T09:54:09Z",
          "author": {
            "name": "Gang Wang",
            "email": "v-gaw@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@JanKrivanek do we need to backport to active release branches?",
        "createdAt": "2024-04-19T11:15:43Z",
        "author": {
          "login": "GangWang01"
        }
      },
      {
        "body": "> @JanKrivanek do we need to backport to active release branches?\r\n\r\nYeah - good point!",
        "createdAt": "2024-04-19T11:42:37Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "/backport to vs17.10\r\n/backport to vs17.9\r\n/backport to vs17.7",
        "createdAt": "2024-04-19T11:44:15Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Started backporting to vs17.10: https://github.com/dotnet/msbuild/actions/runs/8752995312",
        "createdAt": "2024-04-19T11:44:26Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "/backport to vs17.9",
        "createdAt": "2024-04-19T11:46:19Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "/backport to vs17.7",
        "createdAt": "2024-04-19T11:46:23Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Started backporting to vs17.9: https://github.com/dotnet/msbuild/actions/runs/8753015552",
        "createdAt": "2024-04-19T11:46:30Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "Started backporting to vs17.7: https://github.com/dotnet/msbuild/actions/runs/8753015998",
        "createdAt": "2024-04-19T11:46:35Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "@JanKrivanek backporting to vs17.9 failed, the patch most likely resulted in conflicts:\n\n```shell\n$ git am --3way --ignore-whitespace --keep-non-patch changes.patch\n\nApplying: Check version bump on release branches' update\nUsing index info to reconstruct a base tree...\nM\t.vsts-dotnet-ci.yml\nFalling back to patching base and 3-way merge...\nAuto-merging .vsts-dotnet-ci.yml\nCONFLICT (content): Merge conflict in .vsts-dotnet-ci.yml\nerror: Failed to merge in the changes.\nhint: Use 'git am --show-current-patch=diff' to see the failed patch\nPatch failed at 0001 Check version bump on release branches' update\nWhen you have resolved this problem, run \"git am --continue\".\nIf you prefer to skip this patch, run \"git am --skip\" instead.\nTo restore the original branch and stop patching, run \"git am --abort\".\nError: The process '/usr/bin/git' failed with exit code 128\n```\n\nPlease backport manually!",
        "createdAt": "2024-04-19T11:46:51Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "@JanKrivanek an error occurred while backporting to vs17.9, please check the run log for details!\n\nError: git am failed, most likely due to a merge conflict.",
        "createdAt": "2024-04-19T11:46:51Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "@JanKrivanek backporting to vs17.7 failed, the patch most likely resulted in conflicts:\n\n```shell\n$ git am --3way --ignore-whitespace --keep-non-patch changes.patch\n\nApplying: Check version bump on release branches' update\nUsing index info to reconstruct a base tree...\nM\t.vsts-dotnet-ci.yml\nFalling back to patching base and 3-way merge...\nAuto-merging .vsts-dotnet-ci.yml\nCONFLICT (content): Merge conflict in .vsts-dotnet-ci.yml\nerror: Failed to merge in the changes.\nhint: Use 'git am --show-current-patch=diff' to see the failed patch\nPatch failed at 0001 Check version bump on release branches' update\nWhen you have resolved this problem, run \"git am --continue\".\nIf you prefer to skip this patch, run \"git am --skip\" instead.\nTo restore the original branch and stop patching, run \"git am --abort\".\nError: The process '/usr/bin/git' failed with exit code 128\n```\n\nPlease backport manually!",
        "createdAt": "2024-04-19T11:47:00Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "@JanKrivanek an error occurred while backporting to vs17.7, please check the run log for details!\n\nError: git am failed, most likely due to a merge conflict.",
        "createdAt": "2024-04-19T11:47:00Z",
        "author": {
          "login": "github-actions"
        }
      },
      {
        "body": "Backported manually to vs17.7 https://github.com/dotnet/msbuild/pull/10042\r\nvs17.9 and vs17.10 will get the change via the flow\r\n",
        "createdAt": "2024-04-19T12:03:03Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "We should limit this to the release branches only",
              "createdAt": "2024-04-17T10:10:35Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -4,7 +4,38 @@ trigger:\n - vs*\n \n jobs:\n+- job: CheckVersionBumpOnReleaseBranches\n+  displayName: \"Check Version Bump On Release Branches\"\n+  steps:\n+  - powershell: |\n+      $versionsFile = \"eng/Versions.props\"\n+      $changedFiles = git diff --name-only HEAD HEAD~1\n+      $changedVersionsFile = $changedFiles | Where-Object { $_ -eq $versionsFile }\n+      $isVersionBumped = $false\n+      if ($changedVersionsFile -ne $null) {\n+        $difference = git diff HEAD~1 $versionsFile\n+        $changedContent = $difference -join \" \"\n+        $pattern = '-\\s*<VersionPrefix>\\d+\\.\\d+\\.(?<previous>\\d+)<\\/VersionPrefix>.* \\+\\s*<VersionPrefix>\\d+\\.\\d+\\.(?<current>\\d+)<\\/VersionPrefix>'\n+        if ($changedContent -match $pattern) {\n+          try {\n+            $previousPatch = [Convert]::ToInt32($Matches.previous)\n+            $currentPatch = [Convert]::ToInt32($Matches.current)\n+            if ($currentPatch -gt $previousPatch) {\n+              $isVersionBumped = $true\n+            }\n+          } catch {\n+            Write-Output \"An error occurred during conversion: $_\"\n+          }\n+        }\n+      }\n+      if (-not $isVersionBumped) {\n+        throw \"Hello! I noticed that you're targeting one of our servicing branches. Please consider updating the version.\"\n+      }\n+    condition: startsWith(variables['System.PullRequest.TargetBranch'], 'vs')",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "The condition that the target branch of pull request starting with `vs` does this. Isn't it enough?",
              "createdAt": "2024-04-18T08:33:34Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -4,7 +4,38 @@ trigger:\n - vs*\n \n jobs:\n+- job: CheckVersionBumpOnReleaseBranches\n+  displayName: \"Check Version Bump On Release Branches\"\n+  steps:\n+  - powershell: |\n+      $versionsFile = \"eng/Versions.props\"\n+      $changedFiles = git diff --name-only HEAD HEAD~1\n+      $changedVersionsFile = $changedFiles | Where-Object { $_ -eq $versionsFile }\n+      $isVersionBumped = $false\n+      if ($changedVersionsFile -ne $null) {\n+        $difference = git diff HEAD~1 $versionsFile\n+        $changedContent = $difference -join \" \"\n+        $pattern = '-\\s*<VersionPrefix>\\d+\\.\\d+\\.(?<previous>\\d+)<\\/VersionPrefix>.* \\+\\s*<VersionPrefix>\\d+\\.\\d+\\.(?<current>\\d+)<\\/VersionPrefix>'\n+        if ($changedContent -match $pattern) {\n+          try {\n+            $previousPatch = [Convert]::ToInt32($Matches.previous)\n+            $currentPatch = [Convert]::ToInt32($Matches.current)\n+            if ($currentPatch -gt $previousPatch) {\n+              $isVersionBumped = $true\n+            }\n+          } catch {\n+            Write-Output \"An error occurred during conversion: $_\"\n+          }\n+        }\n+      }\n+      if (-not $isVersionBumped) {\n+        throw \"Hello! I noticed that you're targeting one of our servicing branches. Please consider updating the version.\"\n+      }\n+    condition: startsWith(variables['System.PullRequest.TargetBranch'], 'vs')",
              "author": {
                "login": "GangWang01"
              }
            },
            {
              "body": "Sorry - I'm blind :-)\r\nYes - this is perfectly fine!",
              "createdAt": "2024-04-19T09:37:19Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -4,7 +4,38 @@ trigger:\n - vs*\n \n jobs:\n+- job: CheckVersionBumpOnReleaseBranches\n+  displayName: \"Check Version Bump On Release Branches\"\n+  steps:\n+  - powershell: |\n+      $versionsFile = \"eng/Versions.props\"\n+      $changedFiles = git diff --name-only HEAD HEAD~1\n+      $changedVersionsFile = $changedFiles | Where-Object { $_ -eq $versionsFile }\n+      $isVersionBumped = $false\n+      if ($changedVersionsFile -ne $null) {\n+        $difference = git diff HEAD~1 $versionsFile\n+        $changedContent = $difference -join \" \"\n+        $pattern = '-\\s*<VersionPrefix>\\d+\\.\\d+\\.(?<previous>\\d+)<\\/VersionPrefix>.* \\+\\s*<VersionPrefix>\\d+\\.\\d+\\.(?<current>\\d+)<\\/VersionPrefix>'\n+        if ($changedContent -match $pattern) {\n+          try {\n+            $previousPatch = [Convert]::ToInt32($Matches.previous)\n+            $currentPatch = [Convert]::ToInt32($Matches.current)\n+            if ($currentPatch -gt $previousPatch) {\n+              $isVersionBumped = $true\n+            }\n+          } catch {\n+            Write-Output \"An error occurred during conversion: $_\"\n+          }\n+        }\n+      }\n+      if (-not $isVersionBumped) {\n+        throw \"Hello! I noticed that you're targeting one of our servicing branches. Please consider updating the version.\"\n+      }\n+    condition: startsWith(variables['System.PullRequest.TargetBranch'], 'vs')",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What happens if this is the initial commit on a new release branch - then it'll probably fail, correct?\r\n\r\nWe might prevent that by looking for `<DotNetFinalVersionKind>release</DotNetFinalVersionKind>` and if that is not present in the previous commit - than version bump is not required.\r\n\r\n\r\nSee e.g.: https://github.com/dotnet/msbuild/pull/9935/files",
              "createdAt": "2024-04-17T10:16:19Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -4,7 +4,38 @@ trigger:\n - vs*\n \n jobs:\n+- job: CheckVersionBumpOnReleaseBranches\n+  displayName: \"Check Version Bump On Release Branches\"\n+  steps:\n+  - powershell: |\n+      $versionsFile = \"eng/Versions.props\"\n+      $changedFiles = git diff --name-only HEAD HEAD~1\n+      $changedVersionsFile = $changedFiles | Where-Object { $_ -eq $versionsFile }\n+      $isVersionBumped = $false\n+      if ($changedVersionsFile -ne $null) {\n+        $difference = git diff HEAD~1 $versionsFile",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Yes, it will fail for the initial commit. I will fix it. \r\nAlso we need to consider dependency update on release branch that doesn't need to bump up the version, e.g. https://github.com/dotnet/msbuild/pull/9574/files#diff-1ea18ff65faa2ae6fed570b83747086d0317f5e4bc325064f6c14319a9c4ff67.",
              "createdAt": "2024-04-18T08:39:33Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -4,7 +4,38 @@ trigger:\n - vs*\n \n jobs:\n+- job: CheckVersionBumpOnReleaseBranches\n+  displayName: \"Check Version Bump On Release Branches\"\n+  steps:\n+  - powershell: |\n+      $versionsFile = \"eng/Versions.props\"\n+      $changedFiles = git diff --name-only HEAD HEAD~1\n+      $changedVersionsFile = $changedFiles | Where-Object { $_ -eq $versionsFile }\n+      $isVersionBumped = $false\n+      if ($changedVersionsFile -ne $null) {\n+        $difference = git diff HEAD~1 $versionsFile",
              "author": {
                "login": "GangWang01"
              }
            },
            {
              "body": "Thank you!\r\n\r\nBtw. the pattern might possibly match even if we move the tag from separate line (e.g. https://github.com/dotnet/msbuild/pull/9661/files) - but that sounds as very acceptable limitation.\r\n\r\nI have couple nit picking asks:\r\n* please comment the `$initialCommitPattern` regex - mentioning that 'DotNetFinalVersionKind' is expected to be added only during the initial setup of the branch\r\n* do not exclude the meastro PRs - we need to bump the version on majority of those as well - so it's better to mandate it for all",
              "createdAt": "2024-04-19T08:25:15Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -4,7 +4,38 @@ trigger:\n - vs*\n \n jobs:\n+- job: CheckVersionBumpOnReleaseBranches\n+  displayName: \"Check Version Bump On Release Branches\"\n+  steps:\n+  - powershell: |\n+      $versionsFile = \"eng/Versions.props\"\n+      $changedFiles = git diff --name-only HEAD HEAD~1\n+      $changedVersionsFile = $changedFiles | Where-Object { $_ -eq $versionsFile }\n+      $isVersionBumped = $false\n+      if ($changedVersionsFile -ne $null) {\n+        $difference = git diff HEAD~1 $versionsFile",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "> Btw. the pattern might possibly match even if we move the tag from separate line (e.g. https://github.com/dotnet/msbuild/pull/9661/files) - but that sounds as very acceptable limitation.\r\nYes, the pattern for checking version bump up matches no matter the tag `DotNetFinalVersionKind` is on the same line or not.\r\n\r\nI will resolve others.",
              "createdAt": "2024-04-19T09:51:30Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -4,7 +4,38 @@ trigger:\n - vs*\n \n jobs:\n+- job: CheckVersionBumpOnReleaseBranches\n+  displayName: \"Check Version Bump On Release Branches\"\n+  steps:\n+  - powershell: |\n+      $versionsFile = \"eng/Versions.props\"\n+      $changedFiles = git diff --name-only HEAD HEAD~1\n+      $changedVersionsFile = $changedFiles | Where-Object { $_ -eq $versionsFile }\n+      $isVersionBumped = $false\n+      if ($changedVersionsFile -ne $null) {\n+        $difference = git diff HEAD~1 $versionsFile",
              "author": {
                "login": "GangWang01"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        throw \"Hello! I noticed that you're targeting one of our servicing branches. You need to increase the revision version number (the last part) of 'VersionPrefix' in eng/Versions.props.\"\r\n```",
              "createdAt": "2024-04-19T08:27:20Z",
              "path": ".vsts-dotnet-ci.yml",
              "diffHunk": "@@ -4,7 +4,47 @@ trigger:\n - vs*\n \n jobs:\n+- job: CheckVersionBumpOnReleaseBranches\n+  displayName: \"Check Version Bump On Release Branches\"\n+  steps:\n+  - powershell: |\n+      $versionsFile = \"eng/Versions.props\"\n+      $changedFiles = git diff --name-only HEAD HEAD~1\n+      $changedVersionsFile = $changedFiles | Where-Object { $_ -eq $versionsFile }\n+      $isInitialCommit = $false\n+      $isVersionBumped = $false\n+      if ($changedVersionsFile -ne $null) {\n+        $difference = git diff HEAD~1 $versionsFile\n+        $changedContent = $difference -join \" \"\n+        $initialCommitPattern = '-\\s*<VersionPrefix>\\d+\\.\\d+\\.\\d+<\\/VersionPrefix> \\+\\s*<VersionPrefix>\\d+\\.\\d+\\.\\d+<\\/VersionPrefix>.*<DotNetFinalVersionKind>release<\\/DotNetFinalVersionKind>'\n+        $isInitialCommit = $changedContent -match $initialCommitPattern\n+        $pattern = '-\\s*<VersionPrefix>\\d+\\.\\d+\\.(?<previous>\\d+)<\\/VersionPrefix>.* \\+\\s*<VersionPrefix>\\d+\\.\\d+\\.(?<current>\\d+)<\\/VersionPrefix>'\n+        if (!($isInitialCommit) -and ($changedContent -match $pattern)) {\n+          try {\n+            $previousPatch = [Convert]::ToInt32($Matches.previous)\n+            $currentPatch = [Convert]::ToInt32($Matches.current)\n+            if ($currentPatch -gt $previousPatch) {\n+              $isVersionBumped = $true\n+            }\n+          } catch {\n+            Write-Host \"An error occurred during conversion: $_\"\n+          }\n+        }\n+      }\n+\n+      $url = \"https://api.github.com/repos/dotnet/msbuild/pulls/$(System.PullRequest.PullRequestNumber)\"\n+      Write-Host \"Get PR information from $url\"\n+      $response = Invoke-RestMethod -Uri $url -Method Get\n+      $isDotnetBot = $response.user.login -eq \"dotnet-maestro[bot]\"\n+\n+      if (!($isInitialCommit -or $isDotnetBot -or $isVersionBumped)) {\n+        throw \"Hello! I noticed that you're targeting one of our servicing branches. Please consider updating the version.\"",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}