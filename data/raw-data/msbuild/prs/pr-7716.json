{
  "number": 7716,
  "title": "Fix #7671: add `PreserveWhitespace` flag to `XslTransformation`",
  "body": "`PreserveWhitespace` option to use `XmlSpace.Preserve` with\r\n`XPathDocument`.\r\n\r\nFixes #7671\r\n\r\n### Context\r\nShould fix whitespace issue with XSLT files\r\n\r\n### Changes Made\r\nAdding a new public property to the class `XslTransformation`. If it `PreserveWhitespace` is set to true, the produced file will preserve whitespaces.",
  "state": "MERGED",
  "createdAt": "2022-06-18T01:53:45Z",
  "updatedAt": "2022-12-29T12:15:07Z",
  "closedAt": "2022-07-20T18:12:16Z",
  "mergedAt": "2022-07-20T18:12:16Z",
  "additions": 995,
  "deletions": 3,
  "changedFiles": 11,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "shadyalfred"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8de0d4d5a1d2d1cdde69744be60135087c9372ac",
          "message": "Fix #7671: add `PreserveWhitespace` flag to `XslTransformation`\n\n`PreserveWhitespace` option to use `XmlSpace.Preserve` with\n`XPathDocument`.",
          "committedDate": "2022-06-18T01:43:16Z",
          "author": {
            "name": "Shady Alfred",
            "email": "shadyalfred98@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "960ef368dfa63597e4fb1b9768aab9a38fee8586",
          "message": "Fix: Move from PublicAPI.Shipped to PublicAPI.Unshipped",
          "committedDate": "2022-06-20T19:45:21Z",
          "author": {
            "name": "Shady Alfred",
            "email": "shadyalfred98@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "982bf28b34e0ffdb3ed4379106f2503f88f8c465",
          "message": "Add test case for Xslt ` PreserveWhitespace` flag",
          "committedDate": "2022-06-20T20:32:55Z",
          "author": {
            "name": "Shady Alfred",
            "email": "shadyalfred98@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "23c7a17b2135aebdd0de7b5e4488ba9ebc2592d3",
          "message": "Fix `XsltPreserveWhitespace` test case",
          "committedDate": "2022-06-20T22:20:27Z",
          "author": {
            "name": "Shady Alfred",
            "email": "shadyalfred98@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "badb57b9ca920f4094e9b6d887fd81933db0b4ed",
          "message": "Revert `_xslDocument`",
          "committedDate": "2022-06-28T19:36:01Z",
          "author": {
            "name": "Shady Alfred",
            "email": "shadyalfred98@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6530f9b89a82021e866928f62f024f6cb1e2d5c1",
          "message": "Add `xml` and `xsl` files for testing",
          "committedDate": "2022-06-28T19:36:27Z",
          "author": {
            "name": "Shady Alfred",
            "email": "shadyalfred98@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ef54c9ad08e75b791bddd328829f7f85543680e3",
          "message": "Use sila's `xml` and `xsl` files to test whitespaces",
          "committedDate": "2022-06-28T19:37:17Z",
          "author": {
            "name": "Shady Alfred",
            "email": "shadyalfred98@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ad9378613c75b015e46732af4a83b95d72defea2",
          "message": "Merge branch 'main' into main",
          "committedDate": "2022-07-15T19:03:35Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7716) <br/>All CLA requirements met.",
        "createdAt": "2022-06-18T01:53:58Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/not_signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7716) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7716) before we can accept your contribution.<br/><br/>:x: shadyalfred [sign now](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7716)<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla.dotnetfoundation.org/check/dotnet/msbuild?pullRequest=7716) it.</sub>",
        "createdAt": "2022-06-18T01:53:58Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "I'm not sure how to test it. I've tried this 982bf28b34e0ffdb3ed4379106f2503f88f8c465 but I don't think it's the correct way to test it",
        "createdAt": "2022-06-20T20:40:23Z",
        "author": {
          "login": "shadyalfred"
        }
      },
      {
        "body": "Thanks @shadyalfred!",
        "createdAt": "2022-07-20T18:12:23Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "These new lines should go into `PublicAPI.Unshipped.txt`, since they haven't (yet!) gone into a public release. The distinction helps us understand what public API we can modify (things that haven't yet released), and what we can't (changing or removing things that have been released would be a breaking change).\r\n\r\nIf you use Visual Studio or another IDE that can handle Roslyn code fixers, this should be available as a \"quick fix\" action.",
              "createdAt": "2022-06-20T14:47:31Z",
              "path": "src/Tasks/PublicAPI/net/PublicAPI.Shipped.txt",
              "diffHunk": "@@ -2242,6 +2242,8 @@ Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath.get -> Microsoft.Buil\n Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath.set -> void\n Microsoft.Build.Tasks.XslTransformation.XslContent.get -> string\n Microsoft.Build.Tasks.XslTransformation.XslContent.set -> void\n+Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.get -> bool\n+Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.set -> void",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I'm using vscode, so I edited them manually. I moved them from `PublicAPI.Shipped.txt` to `PublicAPI.Unshipped.txt`\r\n\r\n960ef368dfa63597e4fb1b9768aab9a38fee8586",
              "createdAt": "2022-06-20T20:35:34Z",
              "path": "src/Tasks/PublicAPI/net/PublicAPI.Shipped.txt",
              "diffHunk": "@@ -2242,6 +2242,8 @@ Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath.get -> Microsoft.Buil\n Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath.set -> void\n Microsoft.Build.Tasks.XslTransformation.XslContent.get -> string\n Microsoft.Build.Tasks.XslTransformation.XslContent.set -> void\n+Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.get -> bool\n+Microsoft.Build.Tasks.XslTransformation.PreserveWhitespace.set -> void",
              "author": {
                "login": "shadyalfred"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "To make this a more robust test, maybe make weird whitespace changes in the input and output files?",
              "createdAt": "2022-06-27T15:15:55Z",
              "path": "src/Tasks.UnitTests/XslTransformation_Tests.cs",
              "diffHunk": "@@ -848,6 +863,57 @@ public void XsltDocumentThrowsError()\n             CleanUp(dir);\n         }\n \n+        /// <summary>\n+        /// Xslt PreserveWhitespace = true\n+        /// </summary>\n+        [Fact]\n+        public void XsltPreserveWhitespace()\n+        {\n+            string dir;\n+            TaskItem[] xmlPaths;\n+            TaskItem xslPath;\n+            TaskItem[] outputPaths;\n+            MockEngine engine;\n+            Prepare(out dir, out xmlPaths, out xslPath, out _, out outputPaths, out _, out _, out engine);\n+\n+            // load transformed xsl and assert it is well formatted\n+            {\n+                XslTransformation t = new XslTransformation();\n+                \n+                t.BuildEngine = engine;\n+                t.XslInputPath = xslPath;\n+                t.XmlInputPaths = xmlPaths;\n+                t.OutputPaths = outputPaths;\n+                t.Parameters = _xslParameters;\n+                t.PreserveWhitespace = true;\n+\n+                t.Execute();\n+                Console.WriteLine(engine.Log);\n+                using (StreamReader sr = new StreamReader(t.OutputPaths[0].ItemSpec))\n+                {\n+                    string fileContents = sr.ReadToEnd();\n+                    Assert.Equal(\n+@\"<?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I've tried to add another xml document with extra whitespaces\r\n```csharp\r\n        private readonly string _xmlDocument3 =\r\n@\"<root\r\n    Name=\"\"param1\"\"\r\n    Value=\"\"value111\"\">\r\n\r\n    <abc>\r\n\r\n        <cde/>\r\n\r\n\r\n    </abc>\r\n\r\n</root>\";\r\n```\r\nBut toggling `PreserveWhitespace` from true to false doesn't change the output.\r\nIt's always the same\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<surround>\r\n  <root>\r\n    <surround Name=\"param1\" />\r\n    <surround Value=\"value111\" />\r\n    <surround>\r\n\r\n    </surround>\r\n    <surround>\r\n      <abc>\r\n        <surround>\r\n\r\n        </surround>\r\n        <surround>\r\n          <cde />\r\n        </surround>\r\n        <surround>\r\n\r\n\r\n    </surround>\r\n      </abc>\r\n    </surround>\r\n    <surround>\r\n\r\n</surround>\r\n  </root>\r\n</surround>\r\n```\r\n\r\nMaybe only certain xsl transformations mess up the whitespaces. I've tried to look up the [xsl file](https://github.com/NMertsch/msbuild-xsltransformation-issue/blob/main/xsl/fdl2proto.xsl) used in the project where this issue happens but it was too complicated to add as a test case, and I think it imports some libraries or something.",
              "createdAt": "2022-06-27T19:29:04Z",
              "path": "src/Tasks.UnitTests/XslTransformation_Tests.cs",
              "diffHunk": "@@ -848,6 +863,57 @@ public void XsltDocumentThrowsError()\n             CleanUp(dir);\n         }\n \n+        /// <summary>\n+        /// Xslt PreserveWhitespace = true\n+        /// </summary>\n+        [Fact]\n+        public void XsltPreserveWhitespace()\n+        {\n+            string dir;\n+            TaskItem[] xmlPaths;\n+            TaskItem xslPath;\n+            TaskItem[] outputPaths;\n+            MockEngine engine;\n+            Prepare(out dir, out xmlPaths, out xslPath, out _, out outputPaths, out _, out _, out engine);\n+\n+            // load transformed xsl and assert it is well formatted\n+            {\n+                XslTransformation t = new XslTransformation();\n+                \n+                t.BuildEngine = engine;\n+                t.XslInputPath = xslPath;\n+                t.XmlInputPaths = xmlPaths;\n+                t.OutputPaths = outputPaths;\n+                t.Parameters = _xslParameters;\n+                t.PreserveWhitespace = true;\n+\n+                t.Execute();\n+                Console.WriteLine(engine.Log);\n+                using (StreamReader sr = new StreamReader(t.OutputPaths[0].ItemSpec))\n+                {\n+                    string fileContents = sr.ReadToEnd();\n+                    Assert.Equal(\n+@\"<?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?>",
              "author": {
                "login": "shadyalfred"
              }
            },
            {
              "body": "Could you use the xsl file you referenced but cut out some of the more complicated parts? Real examples often make for the best tests.\r\n\r\nI'm a little confused by the output you're seeing. What are all the surround elements? It seems like something isn't working as expected.",
              "createdAt": "2022-06-28T16:32:27Z",
              "path": "src/Tasks.UnitTests/XslTransformation_Tests.cs",
              "diffHunk": "@@ -848,6 +863,57 @@ public void XsltDocumentThrowsError()\n             CleanUp(dir);\n         }\n \n+        /// <summary>\n+        /// Xslt PreserveWhitespace = true\n+        /// </summary>\n+        [Fact]\n+        public void XsltPreserveWhitespace()\n+        {\n+            string dir;\n+            TaskItem[] xmlPaths;\n+            TaskItem xslPath;\n+            TaskItem[] outputPaths;\n+            MockEngine engine;\n+            Prepare(out dir, out xmlPaths, out xslPath, out _, out outputPaths, out _, out _, out engine);\n+\n+            // load transformed xsl and assert it is well formatted\n+            {\n+                XslTransformation t = new XslTransformation();\n+                \n+                t.BuildEngine = engine;\n+                t.XslInputPath = xslPath;\n+                t.XmlInputPaths = xmlPaths;\n+                t.OutputPaths = outputPaths;\n+                t.Parameters = _xslParameters;\n+                t.PreserveWhitespace = true;\n+\n+                t.Execute();\n+                Console.WriteLine(engine.Log);\n+                using (StreamReader sr = new StreamReader(t.OutputPaths[0].ItemSpec))\n+                {\n+                    string fileContents = sr.ReadToEnd();\n+                    Assert.Equal(\n+@\"<?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I think the surround tags are just what the xsl document, which is provided in the Unit Test file, does.\r\n```csharp\r\nprivate readonly string _xslDocument = \"<xsl:stylesheet version=\\\"1.0\\\" xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\" xmlns:msxsl=\\\"urn:schemas-microsoft-com:xslt\\\" exclude-result-prefixes=\\\"msxsl\\\"><xsl:output method=\\\"xml\\\" indent=\\\"yes\\\"/><xsl:template match=\\\"@* | node()\\\"><surround><xsl:copy><xsl:apply-templates select=\\\"@* | node()\\\"/></xsl:copy></surround></xsl:template></xsl:stylesheet>\";\r\n ```\r\n I haven't worked with xsl files before, so I'm not sure. Can you link some docs about them so that I can understand the [xsl file](https://github.com/NMertsch/msbuild-xsltransformation-issue/blob/main/xsl/fdl2proto.xsl) better? I think the transformation mentioned in the [issue](https://github.com/dotnet/msbuild/issues/7671) is about `fdl2proto`, not sure what are these tho.",
              "createdAt": "2022-06-28T18:08:15Z",
              "path": "src/Tasks.UnitTests/XslTransformation_Tests.cs",
              "diffHunk": "@@ -848,6 +863,57 @@ public void XsltDocumentThrowsError()\n             CleanUp(dir);\n         }\n \n+        /// <summary>\n+        /// Xslt PreserveWhitespace = true\n+        /// </summary>\n+        [Fact]\n+        public void XsltPreserveWhitespace()\n+        {\n+            string dir;\n+            TaskItem[] xmlPaths;\n+            TaskItem xslPath;\n+            TaskItem[] outputPaths;\n+            MockEngine engine;\n+            Prepare(out dir, out xmlPaths, out xslPath, out _, out outputPaths, out _, out _, out engine);\n+\n+            // load transformed xsl and assert it is well formatted\n+            {\n+                XslTransformation t = new XslTransformation();\n+                \n+                t.BuildEngine = engine;\n+                t.XslInputPath = xslPath;\n+                t.XmlInputPaths = xmlPaths;\n+                t.OutputPaths = outputPaths;\n+                t.Parameters = _xslParameters;\n+                t.PreserveWhitespace = true;\n+\n+                t.Execute();\n+                Console.WriteLine(engine.Log);\n+                using (StreamReader sr = new StreamReader(t.OutputPaths[0].ItemSpec))\n+                {\n+                    string fileContents = sr.ReadToEnd();\n+                    Assert.Equal(\n+@\"<?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?>",
              "author": {
                "login": "shadyalfred"
              }
            },
            {
              "body": "I've added the documents used [here](https://github.com/NMertsch/msbuild-xsltransformation-issue) and used it in the test. Now toggling the `PreserveWhitespace` makes the test fail or pass.",
              "createdAt": "2022-06-28T21:57:06Z",
              "path": "src/Tasks.UnitTests/XslTransformation_Tests.cs",
              "diffHunk": "@@ -848,6 +863,57 @@ public void XsltDocumentThrowsError()\n             CleanUp(dir);\n         }\n \n+        /// <summary>\n+        /// Xslt PreserveWhitespace = true\n+        /// </summary>\n+        [Fact]\n+        public void XsltPreserveWhitespace()\n+        {\n+            string dir;\n+            TaskItem[] xmlPaths;\n+            TaskItem xslPath;\n+            TaskItem[] outputPaths;\n+            MockEngine engine;\n+            Prepare(out dir, out xmlPaths, out xslPath, out _, out outputPaths, out _, out _, out engine);\n+\n+            // load transformed xsl and assert it is well formatted\n+            {\n+                XslTransformation t = new XslTransformation();\n+                \n+                t.BuildEngine = engine;\n+                t.XslInputPath = xslPath;\n+                t.XmlInputPaths = xmlPaths;\n+                t.OutputPaths = outputPaths;\n+                t.Parameters = _xslParameters;\n+                t.PreserveWhitespace = true;\n+\n+                t.Execute();\n+                Console.WriteLine(engine.Log);\n+                using (StreamReader sr = new StreamReader(t.OutputPaths[0].ItemSpec))\n+                {\n+                    string fileContents = sr.ReadToEnd();\n+                    Assert.Equal(\n+@\"<?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?>",
              "author": {
                "login": "shadyalfred"
              }
            }
          ]
        }
      }
    ]
  }
}