{
  "number": 10027,
  "title": "Notify MSBuild TerminalLogger of project cache plugin run",
  "body": "### Context\r\nWith MSBuild terminal logger (TL) enabled, project cache plugin (PCP) command-line output suppresses important information, which indicates whether projects have finished upon cache hits.\r\n\r\nWith both TL and PCP enabled (for \"Cache Hit\" scenario):\r\n```\r\nMSBuild version 17.11.0-dev-24217-01+5d2331ee1 for .NET Framework\r\nRestore complete (8.4s)\r\n\r\nBuild succeeded in 38.4s\r\n```\r\n\r\n### Changes Made\r\nAdds information per-project to determine whether the project is classified as a cache plugin project, which occurs when the cache plugin target is called (prior to `GetTargetPath` or `Build`). For cache plugin projects that are built, the scenario remains the same (the output path is shown). For cache plugin projects that result in a hit, indicate the output path as well to indicate build progression.\r\n\r\n### Testing\r\nThis was tested with a custom package on the project cache plugin side to invoke the custom target and custom MSBuild bits, with TL and PCP enabled.\r\n\"Cache Hit\" output:\r\n```\r\nMSBuild version 17.11.0-dev-24222-01+69635ee15 for .NET Framework\r\nRestore complete (5.0s)\r\n  CloudBuild.Core succeeded (0.4s) \u2192 c:\\src\\CloudBuild\\private\\Common\\CloudBuild.Core\\src\\bin\\x64\\Debug\\CloudBuild.Core.dll\r\n  CloudBuild.Common succeeded (0.0s) \u2192 c:\\src\\CloudBuild\\private\\Common\\CloudBuild.Common\\src\\bin\\x64\\Debug\\CloudBuild.Common.dll\r\n  QuickBuild.Hosting succeeded (0.0s) \u2192 bin\\x64\\Debug\\QuickBuild.Hosting.dll\r\n\r\nBuild succeeded in 24.3s\r\n```\r\n\r\n\"Cache Hit\" (binlog):\r\n![image](https://github.com/dotnet/msbuild/assets/89041446/95b56304-1ed4-41a4-9292-743796a7829f)\r\n\r\n\r\n\"Cache Miss\" output (same as before change):\r\n```\r\nMSBuild version 17.11.0-dev-24222-01+69635ee15 for .NET Framework\r\nRestore complete (2.8s)\r\n  CloudBuild.Core succeeded (0.0s) \u2192 c:\\src\\CloudBuild\\private\\Common\\CloudBuild.Core\\src\\bin\\x64\\Debug\\CloudBuild.Core.dll\r\n  CloudBuild.Common succeeded (0.0s) \u2192 c:\\src\\CloudBuild\\private\\Common\\CloudBuild.Common\\src\\bin\\x64\\Debug\\CloudBuild.Common.dll\r\n  QuickBuild.Hosting succeeded (19.0s) \u2192 bin\\x64\\Debug\\QuickBuild.Hosting.dll\r\n\r\nBuild succeeded in 40.0s\r\n```\r\n\"Cache Miss\" (binlog):\r\n![image](https://github.com/dotnet/msbuild/assets/89041446/7d299509-5973-41ee-b776-691a28e02c58)\r\n\r\n### Notes\r\nN/A",
  "state": "MERGED",
  "createdAt": "2024-04-17T18:36:34Z",
  "updatedAt": "2024-05-07T19:44:42Z",
  "closedAt": "2024-05-07T19:44:42Z",
  "mergedAt": "2024-05-07T19:44:42Z",
  "additions": 43,
  "deletions": 5,
  "changedFiles": 2,
  "headRefName": "dev/mruxmohan/pcp-telemetry-logger",
  "isDraft": false,
  "author": {
    "login": "mruxmohan4"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "755fdd60aa91b5cd667b2cf2333c13fd3a424800",
          "message": "Notify MSBuild TerminalLogger of project cache plugin starting",
          "committedDate": "2024-04-25T15:53:20Z",
          "author": {
            "name": "Meera Ruxmohan",
            "email": "mruxmohan@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2fd646fab998eadae18c873029fbd90851274608",
          "message": "PR feedback",
          "committedDate": "2024-04-25T17:50:33Z",
          "author": {
            "name": "Meera Ruxmohan",
            "email": "mruxmohan@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "/azp run",
        "createdAt": "2024-05-07T18:09:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2024-05-07T18:09:47Z",
        "author": {
          "login": "azure-pipelines"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Comment intention here please, it's a bit too complicated to just scan and grok.",
              "createdAt": "2024-04-25T15:31:30Z",
              "path": "src/MSBuild/TerminalLogger/TerminalLogger.cs",
              "diffHunk": "@@ -707,6 +716,21 @@ private void UpdateNodeStatus(BuildEventContext buildEventContext, NodeStatus? n\n     /// </summary>\n     private void TargetFinished(object sender, TargetFinishedEventArgs e)\n     {\n+        var buildEventContext = e.BuildEventContext;",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Running these checks on every TargetFinished feels a bit expensive to me even though it's mostly just a string comparison. Do you think it would make sense to store a bool `_hasUsedCache` and check that early to make it even cheaper?",
              "createdAt": "2024-04-25T15:33:57Z",
              "path": "src/MSBuild/TerminalLogger/TerminalLogger.cs",
              "diffHunk": "@@ -707,6 +716,21 @@ private void UpdateNodeStatus(BuildEventContext buildEventContext, NodeStatus? n\n     /// </summary>\n     private void TargetFinished(object sender, TargetFinishedEventArgs e)\n     {\n+        var buildEventContext = e.BuildEventContext;\n+        if (_restoreContext is null\n+            && buildEventContext is not null\n+            && e.TargetName == \"GetTargetPath\"\n+            && _projects.TryGetValue(new ProjectContext(buildEventContext), out Project? project))",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Yes, that makes sense to do, thanks for the suggestion!",
              "createdAt": "2024-04-25T15:35:48Z",
              "path": "src/MSBuild/TerminalLogger/TerminalLogger.cs",
              "diffHunk": "@@ -707,6 +716,21 @@ private void UpdateNodeStatus(BuildEventContext buildEventContext, NodeStatus? n\n     /// </summary>\n     private void TargetFinished(object sender, TargetFinishedEventArgs e)\n     {\n+        var buildEventContext = e.BuildEventContext;\n+        if (_restoreContext is null\n+            && buildEventContext is not null\n+            && e.TargetName == \"GetTargetPath\"\n+            && _projects.TryGetValue(new ProjectContext(buildEventContext), out Project? project))",
              "author": {
                "login": "mruxmohan4"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    private const string _cachePluginStartTarget = \"_CachePluginRunStart\";\r\n```",
              "createdAt": "2024-04-25T17:45:41Z",
              "path": "src/MSBuild/TerminalLogger/TerminalLogger.cs",
              "diffHunk": "@@ -202,6 +202,16 @@ public ProjectContext(BuildEventContext context)\n     /// </summary>\n     private DateTime? _testEndTime;\n \n+    /// <summary>\n+    /// Name of target that identifies the project cache plugin run has just started.\n+    /// </summary>\n+    private static string _cachePluginStartTarget = \"_CachePluginRunStart\";",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}