{
  "number": 9050,
  "title": "Error log the invalid the target name ",
  "body": "Fixes [#9039](https://github.com/dotnet/msbuild/issues/9036)\r\n\r\n### Context\r\nIt will have unhandled exception when specify a target with invalid character when building a solution.\r\nFor an individual project the error is a much cleaner, but it's still a bit misleading\r\n\r\n### Changes Made\r\nAdd invalid target name analysis in the method ProcessTargetSwitch\r\n\r\n### Testing\r\nProcessInvalidTargetSwitch()\r\n![image](https://github.com/dotnet/msbuild/assets/26814373/45460be8-9213-4e27-920f-1db4daf7d540)\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-07-19T07:45:49Z",
  "updatedAt": "2023-07-27T04:39:15Z",
  "closedAt": "2023-07-27T04:39:14Z",
  "mergedAt": "2023-07-27T04:39:14Z",
  "additions": 128,
  "deletions": 1,
  "changedFiles": 17,
  "headRefName": "jennybai/issue9039",
  "isDraft": false,
  "author": {
    "login": "JaynieBai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "51fcd8669db6375689fa7d0c8eebf2b63bc34c93",
          "message": "Parse the invalid the target name",
          "committedDate": "2023-07-19T07:44:00Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5e66010c3968a765845eacedba9fd5c4e46dd3f2",
          "message": "Update related test case",
          "committedDate": "2023-07-19T09:06:58Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3f42c6355f663fc7f97bb2877667e25a7ea224ce",
          "message": "Revert \"Update related test case\"\n\nThis reverts commit 5e66010c3968a765845eacedba9fd5c4e46dd3f2.",
          "committedDate": "2023-07-20T08:34:22Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7f1aeb25074ebdc45cea9cac954c520c3c3ed4c4",
          "message": "Revert \"Parse the invalid the target name\"\n\nThis reverts commit 51fcd8669db6375689fa7d0c8eebf2b63bc34c93.",
          "committedDate": "2023-07-20T08:35:07Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4fc8828964da9f3d6fe090d3ebcc925a5c315c45",
          "message": "Process the invalid target",
          "committedDate": "2023-07-20T09:31:55Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5c698815dc3373ba13c57278552d2fc863c8dc6f",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into jennybai/issue9039",
          "committedDate": "2023-07-21T03:02:43Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "849a7a194fd6a760d696e391e64546a8c4020e19",
          "message": "Add test case",
          "committedDate": "2023-07-21T09:32:06Z",
          "author": {
            "name": "Jenny Bai",
            "email": "v-jennybai@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> Did you consider putting a `IndexOfAny(XMakeElements.InvalidTargetNameCharacters)` check in the target-specification code in `xmake.cs`? That might be slightly less invasive than this, while accomplishing very similar goals.\r\n\r\nThanks. Your suggestion way is better. I have updated that.",
        "createdAt": "2023-07-20T09:58:33Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I think this makes more sense as an `ArgumentException`--the project _would be_ invalid if the operation was allowed to succeed, but isn't inherently invalid at the start of the operation. But the argument is definitely wrong.",
              "createdAt": "2023-07-19T14:50:08Z",
              "path": "src/Build/Construction/ProjectTargetElement.cs",
              "diffHunk": "@@ -109,7 +109,7 @@ public string Name\n                 int indexOfSpecialCharacter = unescapedValue.IndexOfAny(XMakeElements.InvalidTargetNameCharacters);\n                 if (indexOfSpecialCharacter >= 0)\n                 {\n-                    ErrorUtilities.ThrowArgument(\"OM_NameInvalid\", unescapedValue, unescapedValue[indexOfSpecialCharacter]);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This feels like the wrong layer to put this check. If the project itself had it, we would already have thrown \"invalid project\"--so can we instead check at the point where it was defined?",
              "createdAt": "2023-07-19T15:45:42Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs",
              "diffHunk": "@@ -412,12 +412,19 @@ private async Task ProcessTargetStack(ITaskBuilder taskBuilder)\n                 switch (currentTargetEntry.State)\n                 {\n                     case TargetEntryState.Dependencies:\n-                        // Ensure we are dealing with a target which actually exists.\n+                        var targetName = currentTargetEntry.Name;\n+                        int indexOfSpecialCharacter = targetName.IndexOfAny(XMakeElements.InvalidTargetNameCharacters);\n+                        if (indexOfSpecialCharacter >= 0)\n+                        {\n+                            ProjectErrorUtilities.ThrowInvalidProject(currentTargetEntry.ReferenceLocation, \"NameInvalid\", targetName, targetName[indexOfSpecialCharacter]);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}