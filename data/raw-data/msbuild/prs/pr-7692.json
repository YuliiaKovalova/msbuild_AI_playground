{
  "number": 7692,
  "title": "Allow Opt-In When Importing Platforms from ProjectConfiguration",
  "body": "### Context\r\nDuring SetPlatform negotiation, a .nativeproj or .vcxproj will have its ProjectConfiguration parsed to dynamically create `Platforms`. This behavior overrides any previously-defined `Platforms`.\r\n\r\n### Changes Made\r\nAllow per-project opt out of importing Platforms from ProjectConfiguration.\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2022-06-08T21:50:25Z",
  "updatedAt": "2022-07-21T19:45:13Z",
  "closedAt": "2022-07-14T03:14:29Z",
  "mergedAt": "2022-07-14T03:14:29Z",
  "additions": 1,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "setplatform-stop-config-from-overriding-platforms",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open",
    "Area: SetPlatform"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "050c0dc1409f6a7754ec09edd7dac842b740d1ad",
          "message": "ProjectConfiguration appends to Platforms",
          "committedDate": "2022-06-08T21:48:15Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0a92fc28b9cbd09485bb54fe92fdec485d7152b5",
          "message": "Allow opt-out of importing Platforms from ProjectConfiguration",
          "committedDate": "2022-07-12T19:19:39Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "784b5a49f4b75a40a0025cc2b250fc9c921ecf52",
          "message": "Update src/Tasks/Microsoft.Common.CurrentVersion.targets\n\nCo-authored-by: Nirmal Guru <Nirmal4G@gmail.com>",
          "committedDate": "2022-07-13T17:18:17Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c855832b9233f14f8f3dc1889df797c226285530",
          "message": "Remove appending to Platforms",
          "committedDate": "2022-07-13T17:18:58Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Is there a bug motivating this? I'm wondering when parsing the ProjectConfiguration is insufficient.",
        "createdAt": "2022-06-08T23:14:07Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "LGTM. the platforms override did not work with my scenario as we don't use configuration. This allows for platform negotiation to take place properly with the correct platforms property.\r\n\r\nTested the changes in my scenario and it worked as expected.",
        "createdAt": "2022-06-08T23:16:32Z",
        "author": {
          "login": "MIchaelRShea"
        }
      },
      {
        "body": "> Is there a bug motivating this? I'm wondering when parsing the ProjectConfiguration is insufficient.\r\n\r\nWhile integrating platform negotiation, Michael hit an issue where `Platforms` from `ProjectConfiguration` (imported elsewhere) was overriding `Platforms` entirely.\r\n",
        "createdAt": "2022-06-09T19:14:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "In what case is the Platforms derived from ProjectConfiguration not sufficient?",
        "createdAt": "2022-06-13T15:20:45Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> In what case is the Platforms derived from ProjectConfiguration not sufficient?\r\n\r\nWhen it completely overrides `Platforms` defined in a specific project. The properties defined in the project itself should take priority over anything imported.",
        "createdAt": "2022-06-15T18:30:16Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Platforms is no longer appended to, and there's an opt out for this behavior. PR should be good to go \ud83d\udc4d",
        "createdAt": "2022-07-13T17:20:52Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "This still leaves duplicates here. One solution is to gather all the platforms in a separate item, then de-duplicate it and finally add it here. Seems like overkill but is there any other way? like a property function! maybe?",
              "createdAt": "2022-06-26T09:31:52Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1892,7 +1892,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         <Platforms>$(Platforms)</Platforms>\n         <!-- .vcxproj and .nativeproj contain a `ProjectConfiguration` item that have `Platform` metadata within.\n              Build the `Platforms` property from that. -->\n-        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\n+        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>",
              "author": {
                "login": "Nirmal4G"
              }
            },
            {
              "body": "Also, `Win32` should map to `x86` in this case.",
              "createdAt": "2022-06-26T09:32:27Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1892,7 +1892,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         <Platforms>$(Platforms)</Platforms>\n         <!-- .vcxproj and .nativeproj contain a `ProjectConfiguration` item that have `Platform` metadata within.\n              Build the `Platforms` property from that. -->\n-        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\n+        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>",
              "author": {
                "login": "Nirmal4G"
              }
            },
            {
              "body": "> This still leaves duplicates here.\r\n\r\ntrue, this is meant to be a \"better than it is now, but enables critical scenario\" type PR. Without this, the user has no way to define project-level `Platforms` without it being overridden entirely by some import that's still required (because legacy reasons) but not relevant in terms of `Platforms`.\r\n\r\nIn terms of de-duping, having a `Distinct` for a semicolon-delimited property would be really convenient here, but shouldn't hold back this PR.\r\n\r\ndouble checking, @MIchaelRShea this unblocks you right? \ud83d\ude04 ",
              "createdAt": "2022-07-01T18:43:11Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1892,7 +1892,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         <Platforms>$(Platforms)</Platforms>\n         <!-- .vcxproj and .nativeproj contain a `ProjectConfiguration` item that have `Platform` metadata within.\n              Build the `Platforms` property from that. -->\n-        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\n+        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I think what would work better is to allow this to be skipped with a property IE getplatformsfromconfig != true. since project configuration isn't really relevant to most our projects so it may add in some odd platforms that the project doesn't build as",
              "createdAt": "2022-07-11T17:00:18Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1892,7 +1892,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         <Platforms>$(Platforms)</Platforms>\n         <!-- .vcxproj and .nativeproj contain a `ProjectConfiguration` item that have `Platform` metadata within.\n              Build the `Platforms` property from that. -->\n-        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\n+        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>",
              "author": {
                "login": "MIchaelRShea"
              }
            },
            {
              "body": "Gotcha. Made it into an opt out via setting `ImportProjectConfigurationPlatforms` to false in the referenced project.\r\n\r\nAt this point it doesn't sound like we need it to append to $(Platforms) anymore right? Unless you can think of some scenario where this is useful.",
              "createdAt": "2022-07-12T19:20:50Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1892,7 +1892,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         <Platforms>$(Platforms)</Platforms>\n         <!-- .vcxproj and .nativeproj contain a `ProjectConfiguration` item that have `Platform` metadata within.\n              Build the `Platforms` property from that. -->\n-        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\n+        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I agree I don't think it needs to bring in platform, cant think of a scenario where both is needed since platforms can always be updated to include everything needed.",
              "createdAt": "2022-07-13T14:37:39Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1892,7 +1892,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         <Platforms>$(Platforms)</Platforms>\n         <!-- .vcxproj and .nativeproj contain a `ProjectConfiguration` item that have `Platform` metadata within.\n              Build the `Platforms` property from that. -->\n-        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\n+        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>",
              "author": {
                "login": "MIchaelRShea"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "`Import~` could mean targets import. Better be clear that we're using the item named `ProjectConfiguration`.\r\n\r\n```suggestion\r\n        <Platforms Condition=\"'$(UsePlatformFromProjectConfiguration)' != 'false' and '@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\r\n```",
              "createdAt": "2022-07-13T04:33:49Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1892,7 +1892,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         <Platforms>$(Platforms)</Platforms>\n         <!-- .vcxproj and .nativeproj contain a `ProjectConfiguration` item that have `Platform` metadata within.\n              Build the `Platforms` property from that. -->\n-        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\n+        <Platforms Condition=\"'$(ImportProjectConfigurationPlatforms)' != 'false' and '@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>",
              "author": {
                "login": "Nirmal4G"
              }
            },
            {
              "body": "Agreed, thanks!",
              "createdAt": "2022-07-13T17:19:19Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1892,7 +1892,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n         <Platforms>$(Platforms)</Platforms>\n         <!-- .vcxproj and .nativeproj contain a `ProjectConfiguration` item that have `Platform` metadata within.\n              Build the `Platforms` property from that. -->\n-        <Platforms Condition=\"'@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>\n+        <Platforms Condition=\"'$(ImportProjectConfigurationPlatforms)' != 'false' and '@(ProjectConfiguration)' != '' and ('$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj')\">$(Platforms);@(ProjectConfiguration->'%(Platform)'->Distinct())</Platforms>",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      }
    ]
  }
}