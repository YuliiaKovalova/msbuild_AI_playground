{
  "number": 4079,
  "title": "Perf: Reduce string.Split(), .Trim() params char[] and params string[] allocations",
  "body": "Reduce useless gen0 collections on implicit params char[] and params string[] for string.Split() and string.Trim() across the codebase by using a common set of static arrays.\r\nRecommended by: https://blog.marcgravell.com/2013/11/allocaction-allocation-allocation.html",
  "state": "MERGED",
  "createdAt": "2019-01-16T00:49:14Z",
  "updatedAt": "2021-10-12T00:00:35Z",
  "closedAt": "2019-01-22T20:07:04Z",
  "mergedAt": "2019-01-22T20:07:04Z",
  "additions": 131,
  "deletions": 92,
  "changedFiles": 49,
  "headRefName": "dev/erikmav/stringSplitAllocations",
  "isDraft": false,
  "author": {
    "login": "erikmav"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "9c2a54342b0763a885968a2fc344c415bc24073a",
          "message": "Perf: Reduce params char[] and params string[] allocations across the codebase by using a common set of static arrays\nRecommended by: https://blog.marcgravell.com/2013/11/allocaction-allocation-allocation.html",
          "committedDate": "2019-01-16T00:46:29Z",
          "author": {
            "name": "Erik Mavrinac",
            "email": "erikmav@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1d338560e88de0b59d48e0839f389ac12a55231d",
          "message": "Add in string.Trim() - there's only one instance in the codebase with non-empty param list",
          "committedDate": "2019-01-16T01:05:41Z",
          "author": {
            "name": "Erik Mavrinac",
            "email": "erikmav@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6716cd302418626df38c9003ea3acc6a32e3f044",
          "message": "Add unsaved files",
          "committedDate": "2019-01-16T01:32:23Z",
          "author": {
            "name": "Erik Mavrinac",
            "email": "erikmav@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2fe82978ad367a2435a829b2b75683f557fe48f6",
          "message": "Fix up references to shared constants from within ms.build.tasks.dll compilation",
          "committedDate": "2019-01-17T22:39:09Z",
          "author": {
            "name": "Erik Mavrinac",
            "email": "erikmav@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0ddb3403591ad90b0bdcbbb4ec55e732ce3cf5e1",
          "message": "empty change to rerun tests",
          "committedDate": "2019-01-17T23:55:20Z",
          "author": {
            "name": "Erik Mavrinac",
            "email": "erikmav@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "44ccdc72b9e6b7268ca70a23e3e077ce57e9980b",
          "message": "PR comment - adjust commenting",
          "committedDate": "2019-01-18T23:14:16Z",
          "author": {
            "name": "Erik Mavrinac",
            "email": "erikmav@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "390acc9aaea75185572d80524cdf39739773334e",
          "message": "Restore whitespace in LICENSE",
          "committedDate": "2019-01-18T23:19:14Z",
          "author": {
            "name": "Erik Mavrinac",
            "email": "erikmav@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "This might the thing causing the compilation errors: https://github.com/Microsoft/msbuild/blob/6716cd302418626df38c9003ea3acc6a32e3f044/src/Shared/Constants.cs#L8-L13",
        "createdAt": "2019-01-17T19:20:03Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Thanks, Mihai, fixed in 4th commit.",
        "createdAt": "2019-01-17T22:41:21Z",
        "author": {
          "login": "erikmav"
        }
      },
      {
        "body": "In .NET Core 2.0+ there is a `String.Split` overload that takes a `char` but it was not backported.",
        "createdAt": "2019-01-22T03:13:09Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I don't think it's worth the extra complexity of splitting this to take advantage of the core single-char overload. Let's do this, then if that measures hot we can fix it.",
        "createdAt": "2019-01-22T18:41:05Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Baffled by cla-bot; going to close/reopen to try to poke it.",
        "createdAt": "2019-01-22T18:41:31Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> I don't think it's worth the extra complexity of splitting this to take advantage of the core single-char overload. Let's do this, then if that measures hot we can fix it.\r\n\r\nYep agreed, just mentioning it for the sake of anyone observing. \ud83d\ude04 ",
        "createdAt": "2019-01-22T19:33:06Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I'd rather cite this once in the commit notes rather than at every instance. It's not _that_ earth-shattering of an idea :)",
              "createdAt": "2019-01-18T18:57:59Z",
              "path": "src/Build/Construction/Solution/SolutionConfigurationInSolution.cs",
              "diffHunk": "@@ -14,6 +14,10 @@ public sealed class SolutionConfigurationInSolution\n         /// </summary>\n         internal const char ConfigurationPlatformSeparator = '|';\n \n+        // One-time allocation to avoid implicit allocations for Split(), Trim().\n+        // https://blog.marcgravell.com/2013/11/allocaction-allocation-allocation.html",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there a distinction between this, where you removed the private name, versus others where you kept the private name but pointed it to the `MSBuildConstants` one?",
              "createdAt": "2019-01-18T19:02:28Z",
              "path": "src/Tasks/ResolveSDKReference.cs",
              "diffHunk": "@@ -61,11 +61,6 @@ public class ResolveSDKReference : TaskExtension\n         /// </summary>\n         private const string SDKPlatformVersion = \"PlatformVersion\";\n \n-        /// <summary>\n-        /// Split char for strings\n-        /// </summary>\n-        private static readonly char[] s_semicolonSplitChar = { ';' };",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Typically I left the existing name alone when its name has more semantic meaning locally or a good doc comment. Example from XMake.cs where I left the alias because of the comment:\r\n\r\n        /// <summary>\r\n        /// This is a set of wildcard chars which can cause a file extension to be invalid \r\n        /// </summary>\r\n        private static readonly char[] s_wildcards = MSBuildConstants.WildcardChars;\r\n\r\nExample from ToolsetConfigurationREader.cs:\r\n\r\n        private static readonly char[] s_separatorForExtensionsPathSearchPaths = MSBuildConstants.SemicolonChar;\r\n",
              "createdAt": "2019-01-18T23:09:24Z",
              "path": "src/Tasks/ResolveSDKReference.cs",
              "diffHunk": "@@ -61,11 +61,6 @@ public class ResolveSDKReference : TaskExtension\n         /// </summary>\n         private const string SDKPlatformVersion = \"PlatformVersion\";\n \n-        /// <summary>\n-        /// Split char for strings\n-        /// </summary>\n-        private static readonly char[] s_semicolonSplitChar = { ';' };",
              "author": {
                "login": "erikmav"
              }
            },
            {
              "body": "IIRC I agree with all of your decisions on that axis \ud83d\udc4d",
              "createdAt": "2019-01-22T18:40:08Z",
              "path": "src/Tasks/ResolveSDKReference.cs",
              "diffHunk": "@@ -61,11 +61,6 @@ public class ResolveSDKReference : TaskExtension\n         /// </summary>\n         private const string SDKPlatformVersion = \"PlatformVersion\";\n \n-        /// <summary>\n-        /// Split char for strings\n-        /// </summary>\n-        private static readonly char[] s_semicolonSplitChar = { ';' };",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}