{
  "number": 3502,
  "title": "Propagate fileSystem to Get*OfFileAbove intrinsic methods",
  "body": "GetDirectoryNameOfFileAbove is called twice per each project evaluation to search for Directory.Build.{Props|Targets}",
  "state": "MERGED",
  "createdAt": "2018-07-10T21:53:46Z",
  "updatedAt": "2020-12-30T22:52:56Z",
  "closedAt": "2018-07-16T23:51:13Z",
  "mergedAt": "2018-07-16T23:51:13Z",
  "additions": 583,
  "deletions": 332,
  "changedFiles": 42,
  "headRefName": "propagateCachesToPropertyFunctionCalls",
  "isDraft": false,
  "author": {
    "login": "cdmihai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "68dbc04992370136a832e83f41471f8ccc97c586",
          "message": "Propagate fileSystem to Get*OfFileAbove intrinsic methods\n\n- Propagate IFileSystem to Expander\n- Propagate IFileSystem to IEvaluatorData.InitializeForEvaluation",
          "committedDate": "2018-07-14T00:00:14Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "67a8b0fcabe230df4a9506f314038d0b75777faf",
          "message": "Make tests line ending independent",
          "committedDate": "2018-07-14T00:00:42Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Well, improvements are quite marginal for this one.\r\n\r\nProject | src\\msbuild.master 1st run | src\\msbuild.master 2nd run | Improvement | src\\msbuild.mihai 1st run | src\\msbuild.mihai 2nd run | Improvement\r\n-- | -- | -- | -- | -- | -- | --\r\nDotnetConsoleProject | 34.401 | 29.7608 | 13.48856 | 34.6137 | 29.9222 | 13.55388 | \u00a0\r\nDotnetWebProject | 48.6614 | 37.363 | 23.2184 | 48.9981 | 37.4618 | 23.54438 | \u00a0\r\nDotnetMvcProject | 55.222 | 39.7424 | 28.03158 | 55.2012 | 39.7505 | 27.98979 | \u00a0\r\nPicasso | 258.1242 | 226.3237 | 12.31984 | 256.54 | 223.2164 | 12.98963 | \u00a0\r\nSmallP2POldCsproj | 46.4664 | 42.4101 | 8.729534 | 46.622 | 42.4295 | 8.992536 | \u00a0\r\nSmallP2PNewCsproj | 166.6562 | 135.4448 | 18.72802 | 174.0983 | 132.8031 | 23.71947 | \u00a0\r\nLargeP2POldCsproj | 752.8776 | 700.571 | 6.947557 | 751.2062 | 695.5654 | 7.406861 | \u00a0\r\nGenerated_100_100_v150 | 1209.729 | 1197.162 | 1.038844 | 1192.789 | 1167.486 | 2.121331 | \u00a0\r\nOrchardCore | 2264.233 | 1654.686 | 26.92068 | 2245.285 | 1631.354 | 27.34313 | \u00a0\r\nRoslyn | 3429.948 | 2869.029 | 16.35358 | 3420.434 | 2846.373 | 16.78327 | \u00a0\r\nWebLargeCore | 2485.726 | 1929.288 | 22.38535 | 2452.99 | 1877.997 | 23.44051 | \u00a0\r\n\r\n### DesignTimeBuild Time (ms) (src\\msbuild.master vs src\\msbuild.mihai)\r\nTest | Overall | Significant \u03b4  | Value\r\n:--- | :--- | :--- | :---\r\nDotnetConsoleProject | ::ok_hand: | no | 36.7149 -> 36.6435 (-0.194%)\r\nDotnetWebProject | :red_circle: | yes | 228.024 -> 230.341 (1.016%)\r\nDotnetMvcProject | :white_check_mark: | yes | 234.8998 -> 231.1865 (-1.581%)\r\nPicasso | :red_circle: | yes | 1580.0867 -> 1594.6862 (0.924%)\r\nSmallP2POldCsproj | :white_check_mark: | yes | 69.6224 -> 68.906 (-1.029%)\r\nSmallP2PNewCsproj | :white_check_mark: | yes | 667.7962 -> 662.9372 (-0.728%)\r\nLargeP2POldCsproj | :white_check_mark: | yes | 11873.1952 -> 11656.5876 (-1.824%)\r\nOrchardCore | ::ok_hand: | no | 49870.8521 -> 49824.5871 (-0.093%)\r\n\r\n### DesignTimeBuild Memory (bytes) (src\\msbuild.master vs src\\msbuild.mihai)\r\nTest | Overall | Significant \u03b4  | Value\r\n:--- | :--- | :--- | :---\r\nDotnetConsoleProject | :ok_hand: | no | 6280990 -> 6281925 (0.015%)\r\nDotnetWebProject | :white_check_mark: | yes | 21288329 -> 18432103 (-13.417%)\r\nDotnetMvcProject | :red_circle: | yes | 19855062 -> 22225215 (11.937%)\r\nPicasso | :red_circle: | yes | 182404154 -> 190770650 (4.587%)\r\nSmallP2POldCsproj | :red_circle: | yes | 8609422 -> 8624300 (0.173%)\r\nSmallP2PNewCsproj | ::ok_hand: | no | 91924977 -> 90977263 (-1.031%)\r\nLargeP2POldCsproj | :ok_hand: | no | 1178803330 -> 1179750990 (0.08%)\r\nOrchardCore | :red_circle: | yes | 2649344735 -> 2718773904 (2.621%)\r\n\r\n### SerialEvaluationIsolatedContext Time (ms) (src\\msbuild.master vs src\\msbuild.mihai)\r\nTest | Overall | Significant \u03b4  | Value\r\n:--- | :--- | :--- | :---\r\nDotnetConsoleProject | ::ok_hand: | no | 35.5723 -> 35.4818 (-0.254%)\r\nDotnetWebProject | ::ok_hand: | no | 49.8711 -> 49.7872 (-0.168%)\r\nDotnetMvcProject | ::ok_hand: | no | 56.5646 -> 56.4538 (-0.196%)\r\nPicasso | :ok_hand: | no | 309.9398 -> 310.8799 (0.303%)\r\nSmallP2POldCsproj | :white_check_mark: | yes | 52.9788 -> 52.5433 (-0.822%)\r\nSmallP2PNewCsproj | :ok_hand: | no | 214.3202 -> 214.9843 (0.31%)\r\nLargeP2POldCsproj | :white_check_mark: | yes | 936.4889 -> 927.3946 (-0.971%)\r\nOrchardCore | :red_circle: | yes | 3332.7359 -> 3357.6386 (0.747%)\r\n\r\n### SerialEvaluationIsolatedContext Memory (bytes) (src\\msbuild.master vs src\\msbuild.mihai)\r\nTest | Overall | Significant \u03b4  | Value\r\n:--- | :--- | :--- | :---\r\nDotnetConsoleProject | :ok_hand: | no | 5725914 -> 5726013 (0.002%)\r\nDotnetWebProject | :ok_hand: | no | 7740970 -> 7743134 (0.028%)\r\nDotnetMvcProject | :ok_hand: | no | 8449754 -> 8449926 (0.002%)\r\nPicasso | :red_circle: | yes | 10035967 -> 11411881 (13.71%)\r\nSmallP2POldCsproj | :red_circle: | yes | 7056500 -> 7063888 (0.105%)\r\nSmallP2PNewCsproj | ::ok_hand: | no | 15053136 -> 14795673 (-1.71%)\r\nLargeP2POldCsproj | :ok_hand: | no | 39511750 -> 40205092 (1.755%)\r\nOrchardCore | :ok_hand: | no | 70989782 -> 71626202 (0.896%)\r\n\r\n### SerialEvaluationSharedContextSecondRun Time (ms) (src\\msbuild.master vs src\\msbuild.mihai)\r\nTest | Overall | Significant \u03b4  | Value\r\n:--- | :--- | :--- | :---\r\nDotnetConsoleProject | :red_circle: | yes | 29.8801 -> 30.0111 (0.438%)\r\nDotnetWebProject | :red_circle: | yes | 37.4633 -> 37.6057 (0.38%)\r\nDotnetMvcProject | ::ok_hand: | no | 39.8958 -> 39.8448 (-0.128%)\r\nPicasso | :white_check_mark: | yes | 226.7592 -> 223.3359 (-1.51%)\r\nSmallP2POldCsproj | :ok_hand: | no | 42.4807 -> 42.488 (0.017%)\r\nSmallP2PNewCsproj | :white_check_mark: | yes | 135.2763 -> 132.9333 (-1.732%)\r\nLargeP2POldCsproj | :white_check_mark: | yes | 701.4799 -> 696.1635 (-0.758%)\r\nGenerated_100_100_v150 | :white_check_mark: | yes | 1197.4505 -> 1167.8513 (-2.472%)\r\nOrchardCore | :white_check_mark: | yes | 1649.4145 -> 1633.3662 (-0.973%)\r\nRoslyn | :white_check_mark: | yes | 2862.7464 -> 2843.2493 (-0.681%)\r\nWebLargeCore | :white_check_mark: | yes | 1936.5894 -> 1882.983 (-2.768%)\r\n\r\n### SerialEvaluationSharedContextSecondRun Memory (bytes) (src\\msbuild.master vs src\\msbuild.mihai)\r\nTest | Overall | Significant \u03b4  | Value\r\n:--- | :--- | :--- | :---\r\nDotnetConsoleProject | :ok_hand: | no | 5567645 -> 5567756 (0.002%)\r\nDotnetWebProject | :white_check_mark: | yes | 6918229 -> 6917155 (-0.016%)\r\nDotnetMvcProject | :white_check_mark: | yes | 7377763 -> 7376620 (-0.015%)\r\nPicasso | :white_check_mark: | yes | 36646671 -> 36630819 (-0.043%)\r\nSmallP2POldCsproj | :white_check_mark: | yes | 6984658 -> 6976312 (-0.119%)\r\nSmallP2PNewCsproj | :white_check_mark: | yes | 23279547 -> 23269250 (-0.044%)\r\nLargeP2POldCsproj | ::ok_hand: | no | 37696488 -> 36918931 (-2.063%)\r\nGenerated_100_100_v150 | :red_circle: | yes | 46510125 -> 46534649 (0.053%)\r\nOrchardCore | :white_check_mark: | yes | 61072955 -> 60927423 (-0.238%)\r\nRoslyn | :ok_hand: | no | 92033491 -> 94774830 (2.979%)\r\nWebLargeCore | :ok_hand: | no | 80647116 -> 80655779 (0.011%)\r\n\r\n### SerialEvaluationSharedContext Time (ms) (src\\msbuild.master vs src\\msbuild.mihai)\r\nTest | Overall | Significant \u03b4  | Value\r\n:--- | :--- | :--- | :---\r\nDotnetConsoleProject | :red_circle: | yes | 34.508 -> 34.7275 (0.636%)\r\nDotnetWebProject | :red_circle: | yes | 48.7895 -> 49.0791 (0.594%)\r\nDotnetMvcProject | ::ok_hand: | no | 55.3327 -> 55.3157 (-0.031%)\r\nPicasso | :white_check_mark: | yes | 257.8464 -> 256.0725 (-0.688%)\r\nSmallP2POldCsproj | :red_circle: | yes | 46.5192 -> 46.7229 (0.438%)\r\nSmallP2PNewCsproj | ::ok_hand: | no | 170.6644 -> 170.3756 (-0.169%)\r\nLargeP2POldCsproj | :white_check_mark: | yes | 753.5642 -> 751.3674 (-0.292%)\r\nGenerated_100_100_v150 | :white_check_mark: | yes | 1210.5778 -> 1191.783 (-1.553%)\r\nOrchardCore | :white_check_mark: | yes | 2261.6568 -> 2246.9862 (-0.649%)\r\nRoslyn | ::ok_hand: | no | 3425.4661 -> 3421.513 (-0.115%)\r\nWebLargeCore | :white_check_mark: | yes | 2485.941 -> 2454.3823 (-1.269%)\r\n\r\n### SerialEvaluationSharedContext Memory (bytes) (src\\msbuild.master vs src\\msbuild.mihai)\r\nTest | Overall | Significant \u03b4  | Value\r\n:--- | :--- | :--- | :---\r\nDotnetConsoleProject | :ok_hand: | no | 5788869 -> 5788892 (0%)\r\nDotnetWebProject | :white_check_mark: | yes | 7792765 -> 7792484 (-0.004%)\r\nDotnetMvcProject | ::ok_hand: | no | 8498127 -> 8496812 (-0.015%)\r\nPicasso | :ok_hand: | no | 12221157 -> 13074989 (6.987%)\r\nSmallP2POldCsproj | :white_check_mark: | yes | 7058620 -> 7051017 (-0.108%)\r\nSmallP2PNewCsproj | ::ok_hand: | no | 19026072 -> 18491971 (-2.807%)\r\nLargeP2POldCsproj | ::ok_hand: | no | 38109463 -> 37941004 (-0.442%)\r\nGenerated_100_100_v150 | :ok_hand: | no | 46830815 -> 46883421 (0.112%)\r\nOrchardCore | :ok_hand: | no | 60780638 -> 62736758 (3.218%)\r\nRoslyn | :ok_hand: | no | 90040788 -> 91268295 (1.363%)\r\nWebLargeCore | :ok_hand: | no | 65645185 -> 68951338 (5.036%)",
        "createdAt": "2018-07-11T04:08:21Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@dotnet-bot test OSX10.13 Build for CoreCLR",
        "createdAt": "2018-07-16T20:49:57Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "You've done a few tests like this and it's nice and compact but I'm worried that when a failure comes around it'll take a long time to figure out what the correct behavior was supposed to be. Should we instead have two tests with clearer execution paths?",
              "createdAt": "2018-07-11T16:14:02Z",
              "path": "src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs",
              "diffHunk": "@@ -430,10 +430,118 @@ public void ContextCachesExistenceChecksInConditions(EvaluationContext.SharingPo\n                 );\n         }\n \n+        [Theory]\n+        [InlineData(EvaluationContext.SharingPolicy.Isolated)]\n+        [InlineData(EvaluationContext.SharingPolicy.Shared)]\n+        public void ContextCachesExistenceChecksInGetDirectoryNameOfFileAbove(EvaluationContext.SharingPolicy policy)\n+        {\n+            var context = EvaluationContext.Create(policy);\n+\n+            var subdirectory = _env.DefaultTestDirectory.CreateDirectory(\"subDirectory\");\n+            var subdirectoryFile = subdirectory.CreateFile(\"a\");\n+            _env.DefaultTestDirectory.CreateFile(\"a\");\n+\n+            int evaluationCount = 0;\n+\n+            EvaluateProjects(\n+                new []\n+                {\n+                    $@\"<Project>\n+                      <PropertyGroup>\n+                        <SearchedPath>$([MSBuild]::GetDirectoryNameOfFileAbove('{subdirectory.Path}', 'a'))</SearchedPath>\n+                      </PropertyGroup>\n+                    </Project>\"\n+                },\n+                context,\n+                project =>\n+                {\n+                    evaluationCount++;\n+\n+                    var searchedPath = project.GetProperty(\"SearchedPath\");\n+\n+                    switch (policy)\n+                    {\n+                        case EvaluationContext.SharingPolicy.Shared:\n+                            searchedPath.EvaluatedValue.ShouldBe(subdirectory.Path);\n+                            break;\n+                        case EvaluationContext.SharingPolicy.Isolated:\n+                            searchedPath.EvaluatedValue.ShouldBe(\n+                                evaluationCount == 1\n+                                    ? subdirectory.Path\n+                                    : _env.DefaultTestDirectory.Path);\n+                            break;\n+                        default:\n+                            throw new ArgumentOutOfRangeException(nameof(policy), policy, null);\n+                    }\n+\n+                    if (evaluationCount == 1)\n+                    {\n+                        // this will cause the upper file to get picked up in the Isolated policy\n+                        subdirectoryFile.Delete();\n+                    }\n+                });\n+\n+            evaluationCount.ShouldBe(2);\n+        }\n+\n+        [Theory]\n+        [InlineData(EvaluationContext.SharingPolicy.Isolated)]\n+        [InlineData(EvaluationContext.SharingPolicy.Shared)]\n+        public void ContextCachesExistenceChecksInGetPathOfFileAbove(EvaluationContext.SharingPolicy policy)\n+        {\n+            var context = EvaluationContext.Create(policy);\n+\n+            var subdirectory = _env.DefaultTestDirectory.CreateDirectory(\"subDirectory\");\n+            var subdirectoryFile = subdirectory.CreateFile(\"a\");\n+            var rootFile = _env.DefaultTestDirectory.CreateFile(\"a\");\n+\n+            int evaluationCount = 0;\n+\n+            EvaluateProjects(\n+                new []\n+                {\n+                    $@\"<Project>\n+                      <PropertyGroup>\n+                        <SearchedPath>$([MSBuild]::GetPathOfFileAbove('a', '{subdirectory.Path}'))</SearchedPath>\n+                      </PropertyGroup>\n+                    </Project>\"\n+                },\n+                context,\n+                project =>\n+                {\n+                    evaluationCount++;\n+\n+                    var searchedPath = project.GetProperty(\"SearchedPath\");\n+\n+                    switch (policy)\n+                    {\n+                        case EvaluationContext.SharingPolicy.Shared:\n+                            searchedPath.EvaluatedValue.ShouldBe(subdirectoryFile.Path);\n+                            break;\n+                        case EvaluationContext.SharingPolicy.Isolated:\n+                            searchedPath.EvaluatedValue.ShouldBe(\n+                                evaluationCount == 1\n+                                    ? subdirectoryFile.Path\n+                                    : rootFile.Path);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}