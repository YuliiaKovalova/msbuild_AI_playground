{
  "number": 7999,
  "title": "Undeclared projects needs to be normalized and case insensitive so that the current project can be ignored properly",
  "body": "",
  "state": "MERGED",
  "createdAt": "2022-09-21T21:08:25Z",
  "updatedAt": "2022-11-27T13:43:29Z",
  "closedAt": "2022-10-07T14:57:57Z",
  "mergedAt": "2022-10-07T14:57:57Z",
  "additions": 4,
  "deletions": 2,
  "changedFiles": 2,
  "headRefName": "dev/erickul/targetfixes",
  "isDraft": false,
  "author": {
    "login": "erickulcyk"
  },
  "milestone": {
    "title": "VS 17.5"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "54da005eb3bff55886ddf2fe90d64b0dca6282f6",
          "message": "Undeclared projects needs to be normalized and case insensitive so that the current project can be ignored properly",
          "committedDate": "2022-09-21T21:06:47Z",
          "author": {
            "name": "Eric Kulcyk",
            "email": "erickul@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a5bcdf72e6c6265b03fb928c777c360d224c56a7",
          "message": "Use platform-based case sensitivity",
          "committedDate": "2022-10-06T20:32:44Z",
          "author": {
            "name": "Eric Kulcyk",
            "email": "erickul@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@erickulcyk, did you see rainersigwald's comment?",
        "createdAt": "2022-10-06T19:41:05Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7999) <br/>All CLA requirements met.",
        "createdAt": "2022-10-06T20:33:08Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/not_signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7999) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7999) before we can accept your contribution.<br/><br/>:x: erickulcyk [sign now](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=7999)<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla.dotnetfoundation.org/check/dotnet/msbuild?pullRequest=7999) it.</sub>",
        "createdAt": "2022-10-06T20:33:08Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "@Forgind Do I need to be added to authorized users to be able to merge?",
        "createdAt": "2022-10-06T22:00:42Z",
        "author": {
          "login": "erickulcyk"
        }
      },
      {
        "body": "Merged! Thanks @erickulcyk!",
        "createdAt": "2022-10-07T14:58:08Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "We have a heuristic for \"should we attempt to be case-sensitive\" that can fit here:\r\n\r\n```suggestion\r\n            var declaredProjects = new HashSet<string>(projectReferenceItems.Count + 1, FileUtilities.PathComparison);\r\n```",
              "createdAt": "2022-09-26T15:20:00Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs",
              "diffHunk": "@@ -1037,15 +1037,15 @@ private List<string> GetUndeclaredProjects(MSBuild msbuildTask)\n \n             var projectReferenceItems = _buildRequestEntry.RequestConfiguration.Project.GetItems(ItemTypeNames.ProjectReference);\n \n-            var declaredProjects = new HashSet<string>(projectReferenceItems.Count);\n+            var declaredProjects = new HashSet<string>(projectReferenceItems.Count + 1, StringComparer.OrdinalIgnoreCase);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "> I'm not sure about OrdinalIgnoreCase here. People can (and sometimes do) have two projects identical but for casing, and this would break that scenario. Can you provide a compelling example for which we need OrdinalIgnoreCase here?\r\n\r\n@Forgind the issue was that the current project somehow ended up with a different case than what it was testing against.  So the it errored saying f:\\foo.csproj is not allowed to call F:\\foo.csproj",
              "createdAt": "2022-10-06T20:11:19Z",
              "path": "src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs",
              "diffHunk": "@@ -1037,15 +1037,15 @@ private List<string> GetUndeclaredProjects(MSBuild msbuildTask)\n \n             var projectReferenceItems = _buildRequestEntry.RequestConfiguration.Project.GetItems(ItemTypeNames.ProjectReference);\n \n-            var declaredProjects = new HashSet<string>(projectReferenceItems.Count);\n+            var declaredProjects = new HashSet<string>(projectReferenceItems.Count + 1, StringComparer.OrdinalIgnoreCase);",
              "author": {
                "login": "erickulcyk"
              }
            }
          ]
        }
      }
    ]
  }
}