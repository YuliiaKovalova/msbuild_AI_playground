{
  "number": 10496,
  "title": "fix out of proc buildCheck invocation",
  "body": "Fixes #10176\r\n\r\n### Context\r\nWhen BuildCheck was run in scope of out of pross execution, using BuildContext form the event was causing error `\"ContextID {0} should have been in the ID-to-project file mapping but wasn't!\".`\r\n\r\n### Changes Made\r\nJan's assumption was correct here:\r\nhttps://github.com/dotnet/msbuild/issues/10176#issuecomment-2142664255\r\nLoggingService on the receiving side doesn't have `_projectFileMap` populated, so on the attempt to read from it, exception was thrown.\r\n\r\nOn existing customization in `ProjectStartedEventArgs` handling we already have ContextID and ProjectFile to fill `_projectFileMap` if it's out of proc environment. When a BuildCheck event pops up, it's gracefully handled .\r\n\r\n### Testing\r\nThe existing test was covering this gap\r\nhttps://github.com/dotnet/msbuild/blob/6bc91d5e2d3d8a199fdbe367ed015b55daf57046/src/BuildCheck.UnitTests/EndToEndTests.cs#L40\r\n\r\nOnce I removed workaround https://github.com/dotnet/msbuild/pull/10184/commits/bff8a4ea049f8c2c1ac7a84a9cb1e1c8a902c87d, it failed.\r\n",
  "state": "MERGED",
  "createdAt": "2024-08-07T16:00:08Z",
  "updatedAt": "2024-08-08T08:05:40Z",
  "closedAt": "2024-08-08T08:05:40Z",
  "mergedAt": "2024-08-08T08:05:40Z",
  "additions": 34,
  "deletions": 13,
  "changedFiles": 3,
  "headRefName": "dev/ykovalova/fix_outOfProc_buildCheck_execution",
  "isDraft": false,
  "author": {
    "login": "YuliiaKovalova"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "7b324618b2218ec7612ba003f8d7c3b81ef34cb0",
          "message": "fix out of proc buildCheck",
          "committedDate": "2024-08-07T15:59:54Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "52de99c90e685cf11dfd644792e0c3a2865c9c52",
          "message": "remove workaround",
          "committedDate": "2024-08-07T16:39:39Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "41fbe9cb0eea9d119150600095145027dcb05925",
          "message": "fix test failures",
          "committedDate": "2024-08-07T16:43:59Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f0323c3b27ac865625439a90664553bdd9ecdb41",
          "message": "remove extra using",
          "committedDate": "2024-08-07T16:45:26Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Not for this PR - but this feels strange. Editorconfig file should be collocated with the sources - so it should be created as transient file together with the project files (then we wouldn'tt need to handle its deletion)",
              "createdAt": "2024-08-07T17:24:35Z",
              "path": "src/BuildCheck.UnitTests/EndToEndTests.cs",
              "diffHunk": "@@ -242,9 +254,12 @@ public void CustomAnalyzerTest_WithEditorConfig(string analysisCandidate, string\n     {\n         using (var env = TestEnvironment.Create())\n         {\n-            var analysisCandidatePath = Path.Combine(TestAssetsRootPath, analysisCandidate);\n+            string analysisCandidatePath = Path.Combine(TestAssetsRootPath, analysisCandidate);\n+\n+            // Can't use Transitive environment due to the need to dogfood local nuget packages.\n             AddCustomDataSourceToNugetConfig(analysisCandidatePath);\n-            File.WriteAllText(Path.Combine(analysisCandidatePath, EditorConfigFileName), ReadEditorConfig(\n+            string editorConfigName = Path.Combine(analysisCandidatePath, EditorConfigFileName);",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "I wish I could, but the problem is with local nugets that I need to use as a part of projects. These are not visible from transient folder.",
              "createdAt": "2024-08-07T18:06:27Z",
              "path": "src/BuildCheck.UnitTests/EndToEndTests.cs",
              "diffHunk": "@@ -242,9 +254,12 @@ public void CustomAnalyzerTest_WithEditorConfig(string analysisCandidate, string\n     {\n         using (var env = TestEnvironment.Create())\n         {\n-            var analysisCandidatePath = Path.Combine(TestAssetsRootPath, analysisCandidate);\n+            string analysisCandidatePath = Path.Combine(TestAssetsRootPath, analysisCandidate);\n+\n+            // Can't use Transitive environment due to the need to dogfood local nuget packages.\n             AddCustomDataSourceToNugetConfig(analysisCandidatePath);\n-            File.WriteAllText(Path.Combine(analysisCandidatePath, EditorConfigFileName), ReadEditorConfig(\n+            string editorConfigName = Path.Combine(analysisCandidatePath, EditorConfigFileName);",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "Gotcha",
              "createdAt": "2024-08-07T18:55:56Z",
              "path": "src/BuildCheck.UnitTests/EndToEndTests.cs",
              "diffHunk": "@@ -242,9 +254,12 @@ public void CustomAnalyzerTest_WithEditorConfig(string analysisCandidate, string\n     {\n         using (var env = TestEnvironment.Create())\n         {\n-            var analysisCandidatePath = Path.Combine(TestAssetsRootPath, analysisCandidate);\n+            string analysisCandidatePath = Path.Combine(TestAssetsRootPath, analysisCandidate);\n+\n+            // Can't use Transitive environment due to the need to dogfood local nuget packages.\n             AddCustomDataSourceToNugetConfig(analysisCandidatePath);\n-            File.WriteAllText(Path.Combine(analysisCandidatePath, EditorConfigFileName), ReadEditorConfig(\n+            string editorConfigName = Path.Combine(analysisCandidatePath, EditorConfigFileName);",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}