{
  "number": 8987,
  "title": "Change to faster modulo",
  "body": "RetrievableEntryHashset is basically a modified subset of Hashset in the core libraries.\r\n\r\nAnd that version is using the fastmod trick from Daniel Lemire https://lemire.me/blog/2019/02/08/faster-remainders-when-the-divisor-is-a-constant-beating-compilers-and-libdivide/ see https://github.com/dotnet/runtime/pull/406\r\n\r\nCopy HashHelpers.cs from https://github.com/dotnet/runtime/blob/main/src/libraries/System.Private.CoreLib/src/System/Collections/HashHelpers.cs to pick up that improvement. Note: no perf testing would have happened with the .NET Framework JIT. It's conceivable that this is somehow a deoptimization there (but I have no reason to believe it would be). I don't know how to measure perf but it's hard to imagine that this kind of change would show up there.",
  "state": "CLOSED",
  "createdAt": "2023-06-30T23:42:13Z",
  "updatedAt": "2023-07-01T11:58:45Z",
  "closedAt": "2023-07-01T11:58:45Z",
  "mergedAt": null,
  "additions": 72,
  "deletions": 36,
  "changedFiles": 2,
  "headRefName": "lemire",
  "isDraft": false,
  "author": {
    "login": "danmoseley"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "7a8181acefb7517451fbc4526c831e6ae9a3e7ce",
          "message": "lemire",
          "committedDate": "2023-06-30T23:38:56Z",
          "author": {
            "name": "Dan Moseley",
            "email": "danmose@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": []
  }
}