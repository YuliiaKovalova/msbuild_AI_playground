{
  "number": 11677,
  "title": "Use newer maintenance-packages at runtime",
  "body": "Visual Studio 17.14 updated to newer versions of the assemblies built in https://github.com/dotnet/maintenance-packages, which caused some performance regressions related to the mismatch between MSBuild.exe and devenv.exe dependencies (AB#2359731).\r\n\r\nWe hoped to fix this by taking the same update (#11038), but that caused functional problems: applications that use MSBuildLocator to build or manipulate projects using the MSBuild API are broken by updates to some dependencies (`System.Memory`, as in https://github.com/dotnet/msbuild/issues/7873#issuecomment-1227332842, and now `System.Threading.Task.Extensions`). This means that a straightforward update to those packages breaks all API consumers _including_ users of Roslyn's `MSBuildWorkspace`, since the `Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.exe` shipped in current versions of Roslyn uses `System.Threading.Tasks.Extensions` 4.2.0.1. We backed that out in #11659 to avoid the break.\r\n\r\nAfter consulting with a great group of experts (thanks @ericstj, @ViktorHofer, @AArnott!), we arrived at this design:\r\n\r\n* Continue building MSBuild assemblies against the same versions of the references that we did in 17.13.\r\n* Ship and binding-redirect to the new (matched to VS) versions of the references.\r\n\r\nThis means that\r\n\r\n1. an application that worked against 17.13 and is unchanged will continue working, since the assembly-level metadata that the .NET Framework assembly loader looks at is unchanged.\r\n1. VS and `MSBuild.exe` dependency versions match at runtime.\r\n1. VS and `MSBuild.exe` dependency versions are updated.\r\n2. An application may choose to update and binding-redirect to newer versions, which is fine because the new assemblies are what we use in VS and `MSBuild.exe`.\r\n\r\nAn [experimental insertion](https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/624738) (Microsoft-internal link) validates that this fixes the `MethodsJitted` regression caused when VS updated, causing the mismatch.",
  "state": "MERGED",
  "createdAt": "2025-04-03T16:33:20Z",
  "updatedAt": "2025-04-04T13:38:08Z",
  "closedAt": "2025-04-04T13:38:07Z",
  "mergedAt": "2025-04-04T13:38:07Z",
  "additions": 82,
  "deletions": 38,
  "changedFiles": 8,
  "headRefName": "exp/maintenance-packages-but-lies",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "924c11af7431c0d075097c8c973f58327f9fa3dd",
          "message": "Build against old versions of maintenance-packages\n\nAvoids problems caused by updating references in MSBuild for core types\nthat are likely to be used in applications that use MSBuildLocator to\ncall our API: if we update our baked-in references, we will break some\nof them, including Roslyn's MSBuildWorkspace BuildHost. If instead we\nbake in the same references we've been using, but ship and binding\nredirect to the newer versions, we can update (at runtime in normal\noperation) while still being functional in older executables that\nship a stale version (and thus don't binding redirect to a new version).",
          "committedDate": "2025-04-01T20:55:29Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8262f613de6d482eb0112e50fbddd2f91ef52861",
          "message": "fixup! Build against old versions of maintenance-packages",
          "committedDate": "2025-04-03T16:03:33Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6b7f6cba1c0fbaea4cd8770ddc9a75ec6e7e0f61",
          "message": "Merge remote-tracking branch 'upstream/vs17.14' into exp/maintenance-packages-but-lies",
          "committedDate": "2025-04-03T16:03:53Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "609618475263692760398c992c790354ddd68acd",
          "message": "Reapply \"Update assembly versions to latest for packages that recently shipped\" (#11659)\n\nThis reverts commit 026c880a6ea3020d5b88790f685541dce8a7ad7c.",
          "committedDate": "2025-04-03T16:07:59Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "61c8b5ccf8108d7ed418b92501ddfe926aed93e6",
          "message": "Update scary System.Memory-update comment",
          "committedDate": "2025-04-03T17:05:08Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "21a8362204c7d4e72e99400ae987b3448b8a1005",
          "message": "Fix S.M binding redirect range",
          "committedDate": "2025-04-03T20:47:35Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I should update this.",
              "createdAt": "2025-04-03T16:37:49Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -20,28 +20,18 @@\n     <UsingToolVSSDK>true</UsingToolVSSDK>\n   </PropertyGroup>\n   <!-- Production Dependencies -->\n-  <!-- Condition consumption of maintenance-packages dependencies based on source build.\n-       This is to prevent \"package downgrade\" errors coming from other packages that are\n-       already consuming the newest version of these same dependencies. -->\n-  <PropertyGroup Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">\n-    <!-- Use newest package versions. -->\n-    <SystemMemoryVersion>4.6.0</SystemMemoryVersion>\n-    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(DotNetBuildSourceOnly)' != 'true'\">\n-    <!-- Keep using older versions. Upgrade carefully. -->\n+  <PropertyGroup>\n+    <!-- manually maintained versions -->\n     <!--\n         Modifying the version of System.Memory is very high impact and causes downstream breaks in third-party tooling that uses the MSBuild API.\n         When updating the version of System.Memory file a breaking change here: https://github.com/dotnet/docs/issues/new?assignees=gewarren&labels=breaking-change%2CPri1%2Cdoc-idea&template=breaking-change.yml&title=%5BBreaking+change%5D%3A+\n         and follow the guidelines written here (internal-link): https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/1796/How-to-add-a-Known-Issue\n     -->",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "```suggestion\r\n    <!--\r\n        Modifying the version of System.Memory is very high impact and causes downstream breaks in third-party tooling that uses the MSBuild API.\r\n        As a result, we CONTINUE TO REFERENCE the old versions at build time, so those are the versions that get embedded into MSBuild assemblies.\r\n        However, we can update, binding-redirect to, and distribute the newest version (that matches the VS-referenced versions) in order to get the benefits of updating.\r\n        See uses of $(UseFrozenMaintenancePackageVersions) for details.\r\n    -->\r\n```",
              "createdAt": "2025-04-03T16:45:39Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -20,28 +20,18 @@\n     <UsingToolVSSDK>true</UsingToolVSSDK>\n   </PropertyGroup>\n   <!-- Production Dependencies -->\n-  <!-- Condition consumption of maintenance-packages dependencies based on source build.\n-       This is to prevent \"package downgrade\" errors coming from other packages that are\n-       already consuming the newest version of these same dependencies. -->\n-  <PropertyGroup Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">\n-    <!-- Use newest package versions. -->\n-    <SystemMemoryVersion>4.6.0</SystemMemoryVersion>\n-    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(DotNetBuildSourceOnly)' != 'true'\">\n-    <!-- Keep using older versions. Upgrade carefully. -->\n+  <PropertyGroup>\n+    <!-- manually maintained versions -->\n     <!--\n         Modifying the version of System.Memory is very high impact and causes downstream breaks in third-party tooling that uses the MSBuild API.\n         When updating the version of System.Memory file a breaking change here: https://github.com/dotnet/docs/issues/new?assignees=gewarren&labels=breaking-change%2CPri1%2Cdoc-idea&template=breaking-change.yml&title=%5BBreaking+change%5D%3A+\n         and follow the guidelines written here (internal-link): https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/1796/How-to-add-a-Known-Issue\n     -->",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "We are about to generate a new build that updates all these packages again because there was a problem with Unsafe AssemblyVersion, so please wait until we publish the new packages so we can add them here.\r\n\r\nWe'll be updating once again Microsoft.IO.Redist, System.Memory, System.Net.WebSockets.WebSocketProtocol, System.Runtime.CompilerServices.Unsafe, and System.Threading.Tasks.Extensions.\r\n\r\nhttps://github.com/dotnet/maintenance-packages/pull/221\r\n\r\n",
              "createdAt": "2025-04-03T19:36:41Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -20,28 +20,19 @@\n     <UsingToolVSSDK>true</UsingToolVSSDK>\n   </PropertyGroup>\n   <!-- Production Dependencies -->\n-  <!-- Condition consumption of maintenance-packages dependencies based on source build.\n-       This is to prevent \"package downgrade\" errors coming from other packages that are\n-       already consuming the newest version of these same dependencies. -->\n-  <PropertyGroup Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">\n-    <!-- Use newest package versions. -->\n-    <SystemMemoryVersion>4.6.0</SystemMemoryVersion>\n-    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(DotNetBuildSourceOnly)' != 'true'\">\n-    <!-- Keep using older versions. Upgrade carefully. -->\n+  <PropertyGroup>\n+    <!-- manually maintained versions -->\n     <!--\n         Modifying the version of System.Memory is very high impact and causes downstream breaks in third-party tooling that uses the MSBuild API.\n-        When updating the version of System.Memory file a breaking change here: https://github.com/dotnet/docs/issues/new?assignees=gewarren&labels=breaking-change%2CPri1%2Cdoc-idea&template=breaking-change.yml&title=%5BBreaking+change%5D%3A+\n-        and follow the guidelines written here (internal-link): https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/1796/How-to-add-a-Known-Issue\n+        As a result, we CONTINUE TO REFERENCE the old versions at build time, so those are the versions that get embedded into MSBuild assemblies.\n+        However, we can update, binding-redirect to, and distribute the newest version (that matches the VS-referenced versions) in order to get the benefits of updating.\n+        See uses of $(UseFrozenMaintenancePackageVersions) for details.\n     -->\n-    <SystemMemoryVersion>4.5.5</SystemMemoryVersion>\n-    <SystemRuntimeCompilerServicesUnsafeVersion>6.0.0</SystemRuntimeCompilerServicesUnsafeVersion>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <!-- manually maintained versions -->\n-    <MicrosoftIORedistVersion>6.0.1</MicrosoftIORedistVersion>\n+    <SystemMemoryVersion>4.6.0</SystemMemoryVersion>\n+    <SystemThreadingTasksExtensionsVersion>4.6.0</SystemThreadingTasksExtensionsVersion>\n+    <MicrosoftIORedistVersion>6.1.0</MicrosoftIORedistVersion>\n     <MicrosoftVisualStudioOpenTelemetryVersion>0.2.104-beta</MicrosoftVisualStudioOpenTelemetryVersion>\n+    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>",
              "author": {
                "login": "carlossanlop"
              }
            },
            {
              "body": "I think I'd prefer to defer this to another change, like #11655. This gets us to match what the current VS 17.14 branch does. I'd be happy to move others later.",
              "createdAt": "2025-04-03T19:40:37Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -20,28 +20,19 @@\n     <UsingToolVSSDK>true</UsingToolVSSDK>\n   </PropertyGroup>\n   <!-- Production Dependencies -->\n-  <!-- Condition consumption of maintenance-packages dependencies based on source build.\n-       This is to prevent \"package downgrade\" errors coming from other packages that are\n-       already consuming the newest version of these same dependencies. -->\n-  <PropertyGroup Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">\n-    <!-- Use newest package versions. -->\n-    <SystemMemoryVersion>4.6.0</SystemMemoryVersion>\n-    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(DotNetBuildSourceOnly)' != 'true'\">\n-    <!-- Keep using older versions. Upgrade carefully. -->\n+  <PropertyGroup>\n+    <!-- manually maintained versions -->\n     <!--\n         Modifying the version of System.Memory is very high impact and causes downstream breaks in third-party tooling that uses the MSBuild API.\n-        When updating the version of System.Memory file a breaking change here: https://github.com/dotnet/docs/issues/new?assignees=gewarren&labels=breaking-change%2CPri1%2Cdoc-idea&template=breaking-change.yml&title=%5BBreaking+change%5D%3A+\n-        and follow the guidelines written here (internal-link): https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/1796/How-to-add-a-Known-Issue\n+        As a result, we CONTINUE TO REFERENCE the old versions at build time, so those are the versions that get embedded into MSBuild assemblies.\n+        However, we can update, binding-redirect to, and distribute the newest version (that matches the VS-referenced versions) in order to get the benefits of updating.\n+        See uses of $(UseFrozenMaintenancePackageVersions) for details.\n     -->\n-    <SystemMemoryVersion>4.5.5</SystemMemoryVersion>\n-    <SystemRuntimeCompilerServicesUnsafeVersion>6.0.0</SystemRuntimeCompilerServicesUnsafeVersion>\n-  </PropertyGroup>\n-  <PropertyGroup>\n-    <!-- manually maintained versions -->\n-    <MicrosoftIORedistVersion>6.0.1</MicrosoftIORedistVersion>\n+    <SystemMemoryVersion>4.6.0</SystemMemoryVersion>\n+    <SystemThreadingTasksExtensionsVersion>4.6.0</SystemThreadingTasksExtensionsVersion>\n+    <MicrosoftIORedistVersion>6.1.0</MicrosoftIORedistVersion>\n     <MicrosoftVisualStudioOpenTelemetryVersion>0.2.104-beta</MicrosoftVisualStudioOpenTelemetryVersion>\n+    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is there any particular reason you deviate from the norm I see in this file and elsewhere, where the high bound of the old version is equal to the new version? i.e. Do you mean to exclude 4.0.1.3 from the redirect?",
              "createdAt": "2025-04-03T19:38:36Z",
              "path": "src/MSBuild/app.amd64.config",
              "diffHunk": "@@ -190,13 +190,13 @@\n         </dependentAssembly>\n         <dependentAssembly>\n           <assemblyIdentity name=\"System.Memory\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\n-          <bindingRedirect oldVersion=\"0.0.0.0-4.0.1.2\" newVersion=\"4.0.1.2\" />\n-          <codeBase version=\"4.0.1.2\" href=\"..\\System.Memory.dll\"/>\n+          <bindingRedirect oldVersion=\"0.0.0.0-4.0.1.2\" newVersion=\"4.0.2.0\" />",
              "author": {
                "login": "AArnott"
              }
            },
            {
              "body": "No, nice catch!",
              "createdAt": "2025-04-03T19:40:53Z",
              "path": "src/MSBuild/app.amd64.config",
              "diffHunk": "@@ -190,13 +190,13 @@\n         </dependentAssembly>\n         <dependentAssembly>\n           <assemblyIdentity name=\"System.Memory\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\n-          <bindingRedirect oldVersion=\"0.0.0.0-4.0.1.2\" newVersion=\"4.0.1.2\" />\n-          <codeBase version=\"4.0.1.2\" href=\"..\\System.Memory.dll\"/>\n+          <bindingRedirect oldVersion=\"0.0.0.0-4.0.1.2\" newVersion=\"4.0.2.0\" />",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "```suggestion\r\n          <bindingRedirect oldVersion=\"0.0.0.0-4.0.2.0\" newVersion=\"4.0.2.0\" />\r\n```",
              "createdAt": "2025-04-03T20:47:17Z",
              "path": "src/MSBuild/app.amd64.config",
              "diffHunk": "@@ -190,13 +190,13 @@\n         </dependentAssembly>\n         <dependentAssembly>\n           <assemblyIdentity name=\"System.Memory\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\n-          <bindingRedirect oldVersion=\"0.0.0.0-4.0.1.2\" newVersion=\"4.0.1.2\" />\n-          <codeBase version=\"4.0.1.2\" href=\"..\\System.Memory.dll\"/>\n+          <bindingRedirect oldVersion=\"0.0.0.0-4.0.1.2\" newVersion=\"4.0.2.0\" />",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Not for this PR but if you don't have any objections, we should later group the maintenance-packages PackageVersion items together, either inside their own PropertyGroup or all together under the same comment.",
              "createdAt": "2025-04-03T19:42:26Z",
              "path": "eng/Packages.props",
              "diffHunk": "@@ -34,6 +34,7 @@\n     <PackageVersion Include=\"System.Text.Json\" Version=\"$(SystemTextJsonVersion)\" />\n     <PackageVersion Include=\"System.Threading.Channels\" Version=\"$(SystemThreadingChannelsVersion)\" />\n     <PackageVersion Include=\"System.Threading.Tasks.Dataflow\" Version=\"$(SystemThreadingTasksDataflowVersion)\" />\n+    <PackageVersion Include=\"System.Threading.Tasks.Extensions\" Version=\"$(SystemThreadingTasksExtensionsVersion)\" />",
              "author": {
                "login": "carlossanlop"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why net472 specifically? Just wondering since 4.6.2 is the [minimum supported](https://learn.microsoft.com/en-us/lifecycle/products/microsoft-net-framework).\r\n\r\nI suppose it's because the minimum supported version by Microsoft.IO.Redist is 4.7.2?",
              "createdAt": "2025-04-03T19:45:49Z",
              "path": "src/Directory.Build.targets",
              "diffHunk": "@@ -138,6 +138,52 @@\n \n   <Import Project=\"$(BUILD_STAGINGDIRECTORY)\\MicroBuild\\Plugins\\MicroBuild.Plugins.IBCMerge.*\\**\\build\\MicroBuild.Plugins.*.targets\" Condition=\"'$(BUILD_STAGINGDIRECTORY)' != '' and $(TargetFramework.StartsWith('net4')) and '$(MicroBuild_EnablePGO)' != 'false'\" />\n \n+  <PropertyGroup>\n+    <UseFrozenMaintenancePackageVersions Condition=\"'$(UseFrozenMaintenancePackageVersions)' == '' AND '$(IsUnitTestProject)' != 'true' AND $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net472')) AND '$(OutputType)' != 'exe'\">true</UseFrozenMaintenancePackageVersions>",
              "author": {
                "login": "carlossanlop"
              }
            },
            {
              "body": "Yeah this is repo-specific; I mean \"is .NET Framework but not our net35 stuff\". I'll comment in a follow-up.",
              "createdAt": "2025-04-03T20:36:55Z",
              "path": "src/Directory.Build.targets",
              "diffHunk": "@@ -138,6 +138,52 @@\n \n   <Import Project=\"$(BUILD_STAGINGDIRECTORY)\\MicroBuild\\Plugins\\MicroBuild.Plugins.IBCMerge.*\\**\\build\\MicroBuild.Plugins.*.targets\" Condition=\"'$(BUILD_STAGINGDIRECTORY)' != '' and $(TargetFramework.StartsWith('net4')) and '$(MicroBuild_EnablePGO)' != 'false'\" />\n \n+  <PropertyGroup>\n+    <UseFrozenMaintenancePackageVersions Condition=\"'$(UseFrozenMaintenancePackageVersions)' == '' AND '$(IsUnitTestProject)' != 'true' AND $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net472')) AND '$(OutputType)' != 'exe'\">true</UseFrozenMaintenancePackageVersions>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I suppose since these are frozen, we're ok with having the frameworks in these paths hardcoded.",
              "createdAt": "2025-04-03T19:46:54Z",
              "path": "src/Directory.Build.targets",
              "diffHunk": "@@ -138,6 +138,52 @@\n \n   <Import Project=\"$(BUILD_STAGINGDIRECTORY)\\MicroBuild\\Plugins\\MicroBuild.Plugins.IBCMerge.*\\**\\build\\MicroBuild.Plugins.*.targets\" Condition=\"'$(BUILD_STAGINGDIRECTORY)' != '' and $(TargetFramework.StartsWith('net4')) and '$(MicroBuild_EnablePGO)' != 'false'\" />\n \n+  <PropertyGroup>\n+    <UseFrozenMaintenancePackageVersions Condition=\"'$(UseFrozenMaintenancePackageVersions)' == '' AND '$(IsUnitTestProject)' != 'true' AND $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net472')) AND '$(OutputType)' != 'exe'\">true</UseFrozenMaintenancePackageVersions>\n+\n+    <FrozenMicrosoftIORedistVersion>6.0.1</FrozenMicrosoftIORedistVersion>\n+    <FrozenSystemMemoryVersion>4.5.5</FrozenSystemMemoryVersion>\n+    <FrozenSystemRuntimeCompilerServicesUnsafeVersion>6.0.0</FrozenSystemRuntimeCompilerServicesUnsafeVersion>\n+    <FrozenSystemThreadingTasksExtensionsVersion>4.5.4</FrozenSystemThreadingTasksExtensionsVersion>\n+    <FrozenSystemBuffersVersion>4.5.1</FrozenSystemBuffersVersion>\n+    <FrozenSystemNumericsVectorsVersion>4.5.0</FrozenSystemNumericsVectorsVersion>\n+  </PropertyGroup>\n+\n+  <ItemGroup Condition=\"'$(UseFrozenMaintenancePackageVersions)' == 'true'\">\n+    <PackageDownload Include=\"Microsoft.IO.Redist\" Version=\"[$(FrozenMicrosoftIORedistVersion)]\" />\n+    <PackageDownload Include=\"System.Memory\" Version=\"[$(FrozenSystemMemoryVersion)]\" />\n+    <PackageDownload Include=\"System.Runtime.CompilerServices.Unsafe\" Version=\"[$(FrozenSystemRuntimeCompilerServicesUnsafeVersion)]\" />\n+    <PackageDownload Include=\"System.Threading.Tasks.Extensions\" Version=\"[$(FrozenSystemThreadingTasksExtensionsVersion)]\" />\n+    <PackageDownload Include=\"System.Buffers\" Version=\"[$(FrozenSystemBuffersVersion)]\" />\n+    <PackageDownload Include=\"System.Numerics.Vectors\" Version=\"[$(FrozenSystemNumericsVectorsVersion)]\" />\n+  </ItemGroup>\n+\n+  <!-- Work around maintenance-packages updates breaking stuff -->\n+  <Target Name=\"ReplaceCompileReferencesWithOlderMaintenancePackagesVersions\"\n+          BeforeTargets=\"ResolveAssemblyReferences\"\n+          Condition=\"$(UseFrozenMaintenancePackageVersions) == 'true'\">\n+\n+    <ItemGroup>\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'Microsoft.IO.Redist' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenMicrosoftIORedistVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)microsoft.io.redist\\$(FrozenMicrosoftIORedistVersion)\\lib\\net472\\Microsoft.IO.Redist.dll\" />\n+\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'System.Buffers' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenSystemBuffersVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)system.buffers\\$(FrozenSystemBuffersVersion)\\lib\\net461\\System.Buffers.dll\" />\n+\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'System.Memory' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenSystemMemoryVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)system.memory\\$(FrozenSystemMemoryVersion)\\lib\\net461\\System.Memory.dll\" />\n+\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'System.Numerics.Vectors' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenSystemNumericsVectorsVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)system.numerics.vectors\\$(FrozenSystemNumericsVectorsVersion)\\lib\\net46\\System.Numerics.Vectors.dll\" />\n+\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'System.Runtime.CompilerServices.Unsafe' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenSystemRuntimeCompilerServicesUnsafeVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)system.runtime.compilerservices.unsafe\\$(FrozenSystemRuntimeCompilerServicesUnsafeVersion)\\lib\\net461\\System.Runtime.CompilerServices.Unsafe.dll\" />",
              "author": {
                "login": "carlossanlop"
              }
            },
            {
              "body": "Exactly my thinking as I resigned myself to it . . .",
              "createdAt": "2025-04-03T20:36:20Z",
              "path": "src/Directory.Build.targets",
              "diffHunk": "@@ -138,6 +138,52 @@\n \n   <Import Project=\"$(BUILD_STAGINGDIRECTORY)\\MicroBuild\\Plugins\\MicroBuild.Plugins.IBCMerge.*\\**\\build\\MicroBuild.Plugins.*.targets\" Condition=\"'$(BUILD_STAGINGDIRECTORY)' != '' and $(TargetFramework.StartsWith('net4')) and '$(MicroBuild_EnablePGO)' != 'false'\" />\n \n+  <PropertyGroup>\n+    <UseFrozenMaintenancePackageVersions Condition=\"'$(UseFrozenMaintenancePackageVersions)' == '' AND '$(IsUnitTestProject)' != 'true' AND $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net472')) AND '$(OutputType)' != 'exe'\">true</UseFrozenMaintenancePackageVersions>\n+\n+    <FrozenMicrosoftIORedistVersion>6.0.1</FrozenMicrosoftIORedistVersion>\n+    <FrozenSystemMemoryVersion>4.5.5</FrozenSystemMemoryVersion>\n+    <FrozenSystemRuntimeCompilerServicesUnsafeVersion>6.0.0</FrozenSystemRuntimeCompilerServicesUnsafeVersion>\n+    <FrozenSystemThreadingTasksExtensionsVersion>4.5.4</FrozenSystemThreadingTasksExtensionsVersion>\n+    <FrozenSystemBuffersVersion>4.5.1</FrozenSystemBuffersVersion>\n+    <FrozenSystemNumericsVectorsVersion>4.5.0</FrozenSystemNumericsVectorsVersion>\n+  </PropertyGroup>\n+\n+  <ItemGroup Condition=\"'$(UseFrozenMaintenancePackageVersions)' == 'true'\">\n+    <PackageDownload Include=\"Microsoft.IO.Redist\" Version=\"[$(FrozenMicrosoftIORedistVersion)]\" />\n+    <PackageDownload Include=\"System.Memory\" Version=\"[$(FrozenSystemMemoryVersion)]\" />\n+    <PackageDownload Include=\"System.Runtime.CompilerServices.Unsafe\" Version=\"[$(FrozenSystemRuntimeCompilerServicesUnsafeVersion)]\" />\n+    <PackageDownload Include=\"System.Threading.Tasks.Extensions\" Version=\"[$(FrozenSystemThreadingTasksExtensionsVersion)]\" />\n+    <PackageDownload Include=\"System.Buffers\" Version=\"[$(FrozenSystemBuffersVersion)]\" />\n+    <PackageDownload Include=\"System.Numerics.Vectors\" Version=\"[$(FrozenSystemNumericsVectorsVersion)]\" />\n+  </ItemGroup>\n+\n+  <!-- Work around maintenance-packages updates breaking stuff -->\n+  <Target Name=\"ReplaceCompileReferencesWithOlderMaintenancePackagesVersions\"\n+          BeforeTargets=\"ResolveAssemblyReferences\"\n+          Condition=\"$(UseFrozenMaintenancePackageVersions) == 'true'\">\n+\n+    <ItemGroup>\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'Microsoft.IO.Redist' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenMicrosoftIORedistVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)microsoft.io.redist\\$(FrozenMicrosoftIORedistVersion)\\lib\\net472\\Microsoft.IO.Redist.dll\" />\n+\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'System.Buffers' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenSystemBuffersVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)system.buffers\\$(FrozenSystemBuffersVersion)\\lib\\net461\\System.Buffers.dll\" />\n+\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'System.Memory' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenSystemMemoryVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)system.memory\\$(FrozenSystemMemoryVersion)\\lib\\net461\\System.Memory.dll\" />\n+\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'System.Numerics.Vectors' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenSystemNumericsVectorsVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)system.numerics.vectors\\$(FrozenSystemNumericsVectorsVersion)\\lib\\net46\\System.Numerics.Vectors.dll\" />\n+\n+      <Reference Remove=\"@(Reference)\" Condition=\"'%(Reference.NuGetPackageId)' == 'System.Runtime.CompilerServices.Unsafe' and $([MSBuild]::VersionGreaterThan(%(Reference.NuGetPackageVersion), '$(FrozenSystemRuntimeCompilerServicesUnsafeVersion)'))\" />\n+      <Reference Include=\"$(NuGetPackageRoot)system.runtime.compilerservices.unsafe\\$(FrozenSystemRuntimeCompilerServicesUnsafeVersion)\\lib\\net461\\System.Runtime.CompilerServices.Unsafe.dll\" />",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "6.0.1.0 is the value that was wrong in the latest published Unsafe package. We just fixed it to be 6.0.3.0, so we will have to update this after we ship the new version to nuget.org.\r\n\r\nhttps://github.com/dotnet/maintenance-packages/blob/f62ca0009b038cab4725a720f386623a969d73ad/src/System.Runtime.CompilerServices.Unsafe/Versioning.props#L7",
              "createdAt": "2025-04-03T19:48:20Z",
              "path": "src/MSBuild/app.amd64.config",
              "diffHunk": "@@ -215,8 +215,8 @@\n         </dependentAssembly>\n         <dependentAssembly>\n           <assemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\n-          <bindingRedirect oldVersion=\"0.0.0.0-6.0.0.0\" newVersion=\"6.0.0.0\" />\n-          <codeBase version=\"6.0.0.0\" href=\"..\\System.Runtime.CompilerServices.Unsafe.dll\"/>\n+          <bindingRedirect oldVersion=\"0.0.0.0-6.0.1.0\" newVersion=\"6.0.1.0\" />",
              "author": {
                "login": "carlossanlop"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "It's a bummer this all needs to be maintained manually, rather than relying on MSBuild's own automatic calculation.",
              "createdAt": "2025-04-03T21:18:23Z",
              "path": "src/MSBuild/app.amd64.config",
              "diffHunk": "@@ -39,8 +39,8 @@\n \n         <dependentAssembly>",
              "author": {
                "login": "ericstj"
              }
            },
            {
              "body": "The automatic calculation burned us many times with the need to match VS stuff. Sadly I think manual is the best option at the moment given our constraints.",
              "createdAt": "2025-04-04T13:37:52Z",
              "path": "src/MSBuild/app.amd64.config",
              "diffHunk": "@@ -39,8 +39,8 @@\n \n         <dependentAssembly>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}