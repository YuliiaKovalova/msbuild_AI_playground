{
  "number": 11279,
  "title": "Better handle event reset in LoggingService",
  "body": "Fixes #\r\nhttps://dev.azure.com/devdiv/DevDiv/_workitems/edit/2320135/\r\n\r\n### Context\r\n`Reset()` method invocation sometimes causes exception `System.IO.IOException: 'The handle is invalid.'`.\r\nVery likely it happens on application shutdown.\r\nThe assumption is:\r\n- [ShutdownComponent](https://github.com/dotnet/msbuild/blob/71e99de14ceadc86db7ee46551bd709a788bb95a/src/Build/BackEnd/Components/Logging/LoggingService.cs#L888) starts and gets the _lockObject\r\n- It cleans up/disposes the events\r\n- _Meanwhile_ our logging thread is trying to use those same [events ](https://github.com/dotnet/msbuild/blob/71e99de14ceadc86db7ee46551bd709a788bb95a/src/Build/BackEnd/Components/Logging/LoggingService.cs#L1432) without checking _lockObject in context of StartLoggingEventProcessing()\r\n\r\n### Changes Made\r\nuse the same lock in StartLoggingEventProcessing() to protect a handle from invalid state.\r\n\r\n### Testing\r\nn/a\r\n",
  "state": "CLOSED",
  "createdAt": "2025-01-14T11:41:54Z",
  "updatedAt": "2025-01-14T14:49:29Z",
  "closedAt": "2025-01-14T14:49:29Z",
  "mergedAt": null,
  "additions": 17,
  "deletions": 9,
  "changedFiles": 1,
  "headRefName": "dev/ykovalova/better_handle_event_reset",
  "isDraft": true,
  "author": {
    "login": "YuliiaKovalova"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "98fb027aee1240b27be57e262e74039463a4a6e9",
          "message": "Add try/catch for _emptyQueueEvent",
          "committedDate": "2025-01-14T10:37:47Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "af5385d4949122047f381880f6893691590c5e0e",
          "message": "protect reset with lock",
          "committedDate": "2025-01-14T11:34:23Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4478a6cf0aa5029a17648712daaa2ff38ad0bbe3",
          "message": "Consolidate the lock sections to prevent interleaved access",
          "committedDate": "2025-01-14T12:48:58Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "946f0eed8c59b42937bf9180f1a7ffaa0be4b0b2",
          "message": "update the lock placement",
          "committedDate": "2025-01-14T12:53:02Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5ab70a9a1efc5ddc0a0bff3edccdda954141aa64",
          "message": "wrap with lock Reset only",
          "committedDate": "2025-01-14T13:18:25Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "885129898b6a432a4ca937ef8e68b49649ba09a5",
          "message": "add other lock option",
          "committedDate": "2025-01-14T13:57:05Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a19139e0da29c5e53e959077661727e25b4a6977",
          "message": "wrap only Reset with lock",
          "committedDate": "2025-01-14T14:24:25Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Can you try benchmarking this and checking how this behaves on a multithreaded build please?\r\nI've tried running this on OrchardCore with 10 processes and it failed to finish any of the runs I've tried - it runs much slower at a glance, and then finally it stalls indefinitely. I suspect a deadlock but I'm not deep enough in the code to know for sure.\r\nSteps to reproduce:\r\n- attempt to clean via `artifacts\\bin\\bootstrap\\core\\dotnet.exe build  OrchardCore.sln -maxcpucount:10 -tl:true -t:Clean`\r\n- It normally finishes within ~7 seconds\r\n-  however it's locked for more than half of a minute or so. \r\n\r\nhad to kill dotnet externally to unlock, not responding even to Ctrl + C",
        "createdAt": "2025-01-14T12:35:47Z",
        "author": {
          "login": "SimaTian"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}