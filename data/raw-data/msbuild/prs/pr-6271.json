{
  "number": 6271,
  "title": "Handle unsupported paths in ProjectInSolution.AbsolutePath",
  "body": "### Context\r\n#6238 was mistakenly merged into master instead of 16.9, which we still need to service.\r\n\r\n### Notes\r\nSign off for 16.9.3 is 4/12",
  "state": "CLOSED",
  "createdAt": "2021-03-16T19:48:49Z",
  "updatedAt": "2021-03-16T20:12:02Z",
  "closedAt": "2021-03-16T20:03:16Z",
  "mergedAt": null,
  "additions": 12958,
  "deletions": 7324,
  "changedFiles": 344,
  "headRefName": "fix-solutionproject-absolutepath",
  "isDraft": false,
  "author": {
    "login": "benvillalobos"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "7814dc4e8488c25b2d5713bb101588136cf5163c",
          "message": "Update branding for 16.10 (#6031)\n\nUpdate branding for 16.10",
          "committedDate": "2021-01-19T23:05:59Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f98579d50f8b08c4efe13ca07327e3e5222b50f8",
          "message": "Update to Arcade 5.0 and .NET 5.0 (#5836)\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>\r\nNow on dotnet 5.0.102\r\nRemoved OsEnvironment in favor of IsOSPlatform intrinsic function\r\nNowarn on SYSLIB0011\r\nUpdate various build scripts with net5.0 path\r\nUse IsTargetFrameworkCompatible in various locations to simplify checks.",
          "committedDate": "2021-01-20T00:02:03Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4797664aef68553ab869849cd67a74253ac90a0d",
          "message": "Fix Nullable Warnings & projectcacheplugin.csproj now targets net5.0 (#6048)\n\nFixes official builds after the arcade update. This failed because arcade CI had merged with a successful (but stale) CI build.",
          "committedDate": "2021-01-20T16:36:36Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5fbc164ed9f8ce440cfecafaa879ac6341db57ec",
          "message": "Add the StringTools library project",
          "committedDate": "2021-01-20T21:19:15Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c319a63df71a815f9862cdaf2237d65525aea429",
          "message": "Add the StringTools.UnitTests project",
          "committedDate": "2021-01-20T21:19:15Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1c879601c5fc151f1bbb01b33a162a823588b5e2",
          "message": "Add the StringTools.Benchmark project",
          "committedDate": "2021-01-20T21:33:54Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "16f2a0f0609f3532291f7df651bd2c2d9c44c8b0",
          "message": "Add StringTools* projects to solution files",
          "committedDate": "2021-01-20T21:34:05Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "df6d15ba3b5f4ec75be156b812e2808949565fa8",
          "message": "Update packaging and deployment files",
          "committedDate": "2021-01-20T21:34:05Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f166d2da51c07db5d51731f222cfd57335042467",
          "message": "Add project references to StringTools",
          "committedDate": "2021-01-20T21:34:05Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "62f7c45ec90bbed472ceeb06181f0f08ab999935",
          "message": "Enable StringTools diagnostics",
          "committedDate": "2021-01-20T21:34:05Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e0cf0879b0c9962516a8c2a2b6da356c17c9d8ff",
          "message": "Use StringTools in Build/Construction, Definition, Globbing, Instance",
          "committedDate": "2021-01-20T21:34:06Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "41c75de5214c9f19ca5118750e71ae55b3e5dfcc",
          "message": "Use StringTools in Build/Evaluation",
          "committedDate": "2021-01-20T21:34:06Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8125b71443692db6db873eabd4b078a667aa93ce",
          "message": "Use StringTools in Tasks",
          "committedDate": "2021-01-20T21:34:06Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "40c716bee401beac9a6c35b3d9d860f99903ec7c",
          "message": "Use StringTools in Shared",
          "committedDate": "2021-01-20T21:34:06Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ce305446bb2559ea3f5d9679bce8f317e0dd0cd5",
          "message": "Remove interning support from ReuseableStringBuilder",
          "committedDate": "2021-01-20T21:34:06Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3b09c1d111aae107979490f911ad673380ffd8c4",
          "message": "Remove old interning code tests",
          "committedDate": "2021-01-20T21:34:06Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "580e481f57907860b5f9d8247cd64633b961e456",
          "message": "Remove old interning code",
          "committedDate": "2021-01-20T21:34:06Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "88815820a199eb9c921e86995fe54d343d7e971f",
          "message": "Publish using V3",
          "committedDate": "2021-01-21T06:45:14Z",
          "author": {
            "name": "Epsitha Ananth",
            "email": "epananth@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "73fd550a63726fd4666780153c29e5ea518c22cd",
          "message": "test",
          "committedDate": "2021-01-21T07:40:22Z",
          "author": {
            "name": "Epsitha Ananth",
            "email": "epananth@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7c4081531f9ccef8984c2f68e220ec271790039c",
          "message": "Merge pull request #5663 from ladipro/switch-interner-to-span\n\nOptimize string building and interning\r\n\r\nIntroduces a new assembly Microsoft.NET.StringTools with string interning functionality and a span-based\r\nstring builder. Evaluation performance, in terms of memory allocations and time, is in single-digit percentage.\r\n\r\nDetailed description in https://github.com/dotnet/msbuild/pull/5663",
          "committedDate": "2021-01-21T08:09:14Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cb0a95f650c8fc9fcf1799745ece76c3b98e3913",
          "message": "Merge pull request #6052 from dotnet/v3-publish\n\nOnboarding to V3 publishing",
          "committedDate": "2021-01-21T20:09:07Z",
          "author": {
            "name": "Epsitha Ananth",
            "email": "47157394+epananth@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c8eadd3681472a3cc45ee64e50e4318e53594dce",
          "message": "Revert \"Onboarding to V3 publishing \"",
          "committedDate": "2021-01-22T19:33:42Z",
          "author": {
            "name": "Epsitha Ananth",
            "email": "47157394+epananth@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a6a669e3f7f2bfaad1cb0bd90856c249ee61c915",
          "message": "Merge pull request #6073 from dotnet/revert-6052-v3-publish\n\nRevert \"Onboarding to V3 publishing \"",
          "committedDate": "2021-01-23T05:14:36Z",
          "author": {
            "name": "Epsitha Ananth",
            "email": "47157394+epananth@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6f9e0d620718578aab8dafc439d4501339fa4810",
          "message": "Add VS 16.9 channel (#6076)",
          "committedDate": "2021-01-23T09:37:25Z",
          "author": {
            "name": "Epsitha Ananth",
            "email": "47157394+epananth@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b7cff8fbec862b667f5fa23687e35598e789da38",
          "message": "Fix StringTools assembly name (#6078)",
          "committedDate": "2021-01-25T17:27:28Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ec6ed832e6a4adf94a2e6ff7e2f34d8e2da1cc05",
          "message": "Allow OptProf Drop Override (#6083)",
          "committedDate": "2021-01-26T05:03:54Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "74cbf25b3543a5c8c886a5a6659316f18dc49b8a",
          "message": "Support VS 16.10 channel (#6100)",
          "committedDate": "2021-01-31T01:33:21Z",
          "author": {
            "name": "Epsitha Ananth",
            "email": "47157394+epananth@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "74c764a59548dc554f6144920e74783f98414959",
          "message": "Merge branch 'master' into merge/vs16.9-to-master",
          "committedDate": "2021-02-03T19:09:30Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "83cd7d4e36b71d5b2cefd02cb9a5a58d27dd6a75",
          "message": "Support gathering additional arbitrary properties from referenced projects (#5994)\n\nThis allows additional properties to be gathered from project references via the project reference protocol. This is in order to support generating an error when a self-contained Executable references a non-SelfContained Executable, or vice versa, as described in dotnet/sdk#15117.\r\n\r\nThe referenced project can declare what additional properties should be gathered with AdditionalTargetFrameworkInfoProperty items:\r\n\r\n  <ItemGroup>\r\n    <AdditionalTargetFrameworkInfoProperty Include=\"SelfContained\"/>\r\n    <AdditionalTargetFrameworkInfoProperty Include=\"_IsExecutable\"/>\r\n  </ItemGroup>\r\nThese items will then be included in the AdditionalPropertiesFromProject metadata on the _MSBuildProjectReferenceExistent items. This value will have PropertyName=PropertyValue combinations joined by semicolons, and those sets of properties for the different TargetFramework values will be joined by double semicolons. For example, a project multitargeted to two TargetFrameworks may have the following for the AdditionalPropertiesFromProject metadata:\r\n\r\nSelfContained=true;_IsExecutable=true;;SelfContained=false;_IsExecutable=true\r\nFinding the right set of properties from the referenced project will required looking up the index of the NearestTargetFramework in the TargetFrameworks, and using that index to select the set of properties in the AdditionalPropertiesFromProject metadata. For example:\r\n\r\nstring nearestTargetFramework = project.GetMetadata(\"NearestTargetFramework\");\r\nint targetFrameworkIndex = project.GetMetadata(\"TargetFrameworks\").Split(';').ToList().IndexOf(nearestTargetFramework);\r\nstring projectAdditionalPropertiesMetadata = project.GetMetadata(\"AdditionalPropertiesFromProject\").Split(new[] { \";;\" }, StringSplitOptions.None)[targetFrameworkIndex];\r\nDictionary<string, string> projectAdditionalProperties = new(StringComparer.OrdinalIgnoreCase);\r\nforeach (var propAndValue in projectAdditionalPropertiesMetadata.Split(';'))\r\n{\r\n    var split = propAndValue.Split('=');\r\n    projectAdditionalProperties[split[0]] = split[1];\r\n}\r\nThis is implemented in dotnet/sdk#15134.",
          "committedDate": "2021-02-03T19:10:38Z",
          "author": {
            "name": "Daniel Plaisted",
            "email": "dsplaisted@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8ed680346bf89d102089d68a691293b85c5c8cd5",
          "message": "Merge pull request #6082 from dotnet-maestro-bot/merge/vs16.9-to-master\n\n[automated] Merge branch 'vs16.9' => 'master'",
          "committedDate": "2021-02-04T00:15:22Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f8d55533045f86ca0759f1c25d14780589caa43d",
          "message": "Disable Mono CI (#6059)\n\nUntil it can parse C# 9 syntax. Followed by issue #6058",
          "committedDate": "2021-02-04T00:16:16Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "05b750baed9aed0e9c72b3c72f771ec17afddcca",
          "message": "Pass $(Nullable) to csc. (#6093)\n\n$(Nullable) not passed into csc invoked in XamlPreCompile, caused nullable warnings in projects with xaml and nullable enabled.",
          "committedDate": "2021-02-04T00:17:52Z",
          "author": {
            "name": "Huo Yaoyuan",
            "email": "huoyaoyuan@hotmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e8016bb0e8b7f94f394303407f28f03f033c91f2",
          "message": "Fix FindOnPathSucceeds failing on some Linux flavors (#6055)\n\nFixes #4781, #3580.",
          "committedDate": "2021-02-04T00:19:03Z",
          "author": {
            "name": "Tom Deseyn",
            "email": "tom.deseyn@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "220a777d017126b430bb2e7f2945dd2cd2101d03",
          "message": "Update static graph docs (#6043)\n\nUpdate static graph docs",
          "committedDate": "2021-02-04T00:20:37Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4b9f6122dfc8397ee0d939d7932df9cd5818c90c",
          "message": "Short doc on the threading model (#6042)\n\nAdd some developer documentation about the things I've learned about the threading model in worker nodes recently.",
          "committedDate": "2021-02-04T00:37:19Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0fc8263f6afb7424535dedd883d0f85036f10303",
          "message": "Call LoadFrom instead of LoadFile when loading NuGet.Frameworks.dll to avoid multiple loads of the same assembly in different contexts.",
          "committedDate": "2021-02-04T20:31:37Z",
          "author": {
            "name": "Brian Robbins",
            "email": "brianrob@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "183645c502cc41de4b63662704b7b339c32f0f12",
          "message": "Add NuGet assemblies to the list of well-known assemblies.",
          "committedDate": "2021-02-04T20:31:38Z",
          "author": {
            "name": "Brian Robbins",
            "email": "brianrob@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "13de7ba2be8f64929164a7a1760f69a82bcf297a",
          "message": "Remove Version Requirement On M.VS.PG.NuGet (#6117)\n\nRemove version requirements of M.VS.PG.NuGet",
          "committedDate": "2021-02-05T20:55:03Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "70f67677d63afe2a771623d2021b75cb1e116e48",
          "message": "Added Include/Exclude filtering capability to Unzip Task (#5169) (#6018)\n\nAdded Include/Exclude filtering capability to Unzip Task via globs",
          "committedDate": "2021-02-06T21:02:43Z",
          "author": {
            "name": "IvanLieckens",
            "email": "ivanlieckens@hotmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7f4c0ed07743144d95c9746c56e9a089feb580a0",
          "message": "Update dependencies from https://dev.azure.com/devdiv/DevDiv/_git/NuGet-NuGet.Client-Trusted build 5.9.0.7046 (#6092)\n\nNuGet.Build.Tasks\r\n From Version 5.9.0-preview.3.7016 -> To Version 5.9.0-rc.7046\r\n\r\nCo-authored-by: dotnet-maestro[bot] <dotnet-maestro[bot]@users.noreply.github.com>",
          "committedDate": "2021-02-06T21:03:35Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "42748379+dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "08fae4e5ed80acb78193bb75a887714573999901",
          "message": "Fix deploy-MSBuild after arcade change (#6081)",
          "committedDate": "2021-02-06T21:03:59Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8fb627e7fcee0531050fe1c68d3726a2dc35b887",
          "message": "Optimize RAR's GetReferenceItems method (#5929)\n\n* Iterate over dictionary once\r\n\r\n* Avoid unnecessary initializations\r\n\r\n* Set copy local more efficiently\r\n\r\n* referenceItem should have no metadata initially\r\n\r\n* Update larger metadata dictionary\r\n\r\n* Set fusionName at end\r\n\r\n* Slightly simplify referenceItem creation\r\n\r\n* Fix typos\r\n\r\n* Addition to setting fusionName at end\r\n\r\n* Shift other types of removed metadata later so they only have to be removed once\r\n\r\nnonForwardableMetadata?.Remove(ItemMetadataNames.*) is used to prevent the correct metadata value from being overwritten when metadata are re-added from nonForwardableMetadata.\r\n\r\n* Use ternary operators\r\n\r\n* Set items as a group",
          "committedDate": "2021-02-06T21:07:01Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3eb41d4f430d9cd96afbbc109718e55fde17ca28",
          "message": "Add /graph:noBuild (#6016)\n\nThis new option constructs the graph but does not build the nodes.\r\n\r\nThis is useful for a few use cases:\r\n\r\ndetermine if a large repo can evaluate all of its projects (e.g., is VS setup right, are all imports magically pointing to where they should, etc)\r\neasily investigate evaluation perf. With noBuild, the only thing that MSBuild does is evaluate all projects under a single process, so it's easier to throw it under a profiler.\r\nin the future when project caching is available, it can be used to warm up / download the caches but not do the build.\r\ngenerally makes life easier for people that only want to investigate evaluation and not the build. The binlog also shows up nicely containing all the evaluation nodes.",
          "committedDate": "2021-02-08T00:10:14Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "01ceb4e6dadb3fa41c90626899d68d640aa22db4",
          "message": "Optimize FileExists lookup (#6033)\n\nPerformance\r\nResolves #5018\r\n\r\nContext\r\nOptimize FileExists lookup for Resolver.ResolveFromDirectory used cases, by caching list of files in the lookup directory and verify its existence against it.\r\n\r\nChanges Made\r\nRAR Resolver.ResolveFromDirectory, changes needed to propagate new FileIO delegate and fixing related unit tests\r\n\r\nTesting\r\nTested to build OrchadCore and Roslyn\r\n\r\nNotes\r\nPerformance saving:\r\n\r\nOrchardCore - none, this project has all references externally resolved and Resolver.ResolveFromDirectory is not called\r\nRoslyn t:Rebuild - 6% or RAR execution time\r\ndotnet new mvc; dotnet build - none, seems like all SDK based projects have all references externally resolved\r\nI am not 100% sure if increased code complexity and introduced risk is worth the potential saving.",
          "committedDate": "2021-02-08T00:11:14Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4d7078f8b4f4d19ada98c9f49cf11d9cfedb700d",
          "message": "Skip reading environment variable when changewave has already been parsed (#6091)\n\nSkip reading environment variable when changewave has already been parsed",
          "committedDate": "2021-02-08T00:11:33Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "27ff9a7b89b0abfbba7dc049acd892f1c59de240",
          "message": "Use debug-specific optprof test (#6106)",
          "committedDate": "2021-02-08T00:12:37Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8c20e2492a87107fbb40ca2ff6d29a70a1de1261",
          "message": "Update dependencies from https://github.com/NuGet/NuGet.Client build 5.9.0.7027 (#6044)\n\nNuGet.Build.Tasks\r\n From Version 5.9.0-preview.3.7016 -> To Version 5.9.0-preview.3.7027\r\n\r\nCo-authored-by: dotnet-maestro[bot] <dotnet-maestro[bot]@users.noreply.github.com>\r\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2021-02-08T01:03:53Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "42748379+dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bba8fa926a766a281c7cc14b26ff3e5875e149e3",
          "message": "Merge pull request #6126 from brianrob/nuget-load-context\n\nChange Load Behavior for NuGet Components",
          "committedDate": "2021-02-08T16:58:35Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "670b590fb7728414dfc51ddd762cb5483a65c6dc",
          "message": "Update dependencies from https://dev.azure.com/devdiv/DevDiv/_git/NuGet-NuGet.Client-Trusted build 5.9.0.7097 (#6131)\n\nNuGet.Build.Tasks\r\n From Version 5.9.0-rc.7046 -> To Version 5.9.0-rc.7097\r\n\r\nCo-authored-by: dotnet-maestro[bot] <dotnet-maestro[bot]@users.noreply.github.com>",
          "committedDate": "2021-02-08T16:58:57Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "42748379+dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "62f514086aa291c8c224a10b33063bc00794ae18",
          "message": "Deduplicate strings in binlogs (#6017)\n\nWhen writing out a binary log we now deduplicate strings and dictionaries. This results in a significant performance increase and binlog size reduction. Performance increase is about 2x on average, size reduction is about 4x on average, but up to 30x for large binlogs.\r\n\r\nAdd two new record kinds: String and NameValueList. A string record is written the first time we encounter a string we need to serialize. The next time we see the string we only write its index in the total list of strings.\r\n\r\nSimilarly, NameValueList is a list of key and value strings, used for Properties, environment variables and Item metadata. The first time we're writing out a list we write a record, and subsequent times just the index.\r\n\r\nThis keeps the binlog format streaming, so if the logging is interrupted midway, we will be able to read everything up to that point.\r\n\r\nWe do not hold on to strings we encountered. Instead we hash them and only preserve the hash code. We rely on the hash function resulting in no collisions, otherwise it could happen that a random string in a binlog would be substituted instead of another one. The hashtables do not significantly add to MSBuild memory usage (20-30 MB for our largest binlogs).\r\n\r\nFNV-1a (64-bit hash size) was a carefully chosen hash function for its simplicity, performance, and lack of collisions on all binlogs tested so far. 32-bit hash size (such as string.GetHashCode() was not sufficient and resulted in ~800 collisions for our largest binlog with 2.7 million strings.\r\n\r\nThis change includes other performance improvements such as inserting a BufferedStream around the stream we're reading or writing. This results in a significant performance improvement.\r\n\r\nWe introduce a new StringStorage data structure in the binlog reader, for storing the strings on disk instead of reading them all into memory. Strings are loaded into memory on demand. This prevents OOM in 32-bit MSBuild processes when playing back large binlogs. This keeps the memory usage relatively flat when reading.\r\n\r\nReduce maximum strings allocated in memory to 2GB (1 billion chars).\r\n\r\n* Introduce a RedirectionScope in BuildEventArgsWriter\r\n\r\nThis avoids manually switching from currentRecordWriter to originalBinaryWriter in three different places. It's also easier this way to find the places where the switch happens.",
          "committedDate": "2021-02-08T17:00:45Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "KirillOsenkov@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bcaa6099b75ad59f56193c480ea1ddcf8c71c6da",
          "message": "Miscellaneous refactors in source files (#6104) (#6120)\n\nSimplify `#ifdef` logic (across source code)\r\nNormalize and Fix namespaces (in Test projects)\r\n\r\nauthored-by: Nirmal Guru <Nirmal4G@gmail.com>",
          "committedDate": "2021-02-08T17:05:06Z",
          "author": {
            "name": "dotnet-maestro-bot",
            "email": "dotnet-maestro-bot@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9657f12d7bdeb9d80036c9dea49d407c50016456",
          "message": "Remove more unnecessary NuGet package references. (#6036)\n\nRemove unnecessary NuGet dependencies.\r\n\r\nDepend on System.Memory only on .NET Framework.\r\n\r\nRemove all unused entries from Packages.props.",
          "committedDate": "2021-02-09T00:20:18Z",
          "author": {
            "name": "Theodore Tsirpanis",
            "email": "12659251+teo-tsirpanis@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "31a98dca1ada64cb3ac229f79dbf3cfb94a38b99",
          "message": "Use Span<T> on all platforms that support it (#6130)",
          "committedDate": "2021-02-09T00:21:04Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1a0d8e815f5d4db924d7e2406ee18d9b67215d6c",
          "message": "Enhance msb4064 unexpected task attribute error (#5945)\n\n* Improve MSB4064 error message\r\n\r\nThis commit enhances the MSB4064 error with additional information and\r\ndetails such as:\r\n - assembly identity - it's full name containing the token ID, version\r\n   and name.\r\n- Assembly location\r\n\r\nThe enhanced MSB4064 error message has previously been implemented\r\nwithout assembly location. It has been added by this commit.\r\nNote that assembly parameter used for the error message has been\r\nreplaced with loadedAssembly parameter, due to having the null name\r\nproperty.",
          "committedDate": "2021-02-09T00:22:32Z",
          "author": {
            "name": "Bartosz Klonowski",
            "email": "70535775+BartoszKlonowski@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "de3b8871781e9d8e562f461f1f5916e3097f33ef",
          "message": "Reduce byte array allocations when reading/writing packets (#6023)\n\n* Reduce byte array allocations when reading/writing packets\r\n\r\nByte arrays are a major source of LOH allocations when streaming logging events across nodes. Allocating a large MemoryStream once and then growing it as needed almost completely removes allocations for byte arrays.\r\n\r\nThis should significantly improve memory traffic during large builds.\r\n\r\n* Write the last part of the packet synchronously on Mono.\r\n\r\nIf we use WriteAsync and don't await it, then subsequent WriteAsync may be called before the first continuation returns. If both calls share the same buffer and they overlap, we will overwrite the data in the buffer and cause junk to arrive at receiver.\r\n\r\n* Make SendData write packets asynchronously.\r\n\r\nThis avoids blocking the main loop. Roughly equivalent to writing the packet asynchronously using fire-and-forget (BeginWrite).",
          "committedDate": "2021-02-09T00:24:25Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "KirillOsenkov@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5c3e613314e4d5fcef0b90be3fe931db2e5a6128",
          "message": "Enable building StringTools without 3.5 SP1 targeting pack installed (#6129)\n\nFixes #6084\r\n\r\nContext\r\nAs a dependency of MSBuildTaskHost, StringTools is built for .NET 3.5, in addition to modern .NET Framework and .NET Core.\r\n\r\nChanges Made\r\nMade the project built on machines without the 3.5 targeting pack installed by setting BypassFrameworkInstallChecks, same as #5621.\r\n\r\nTesting\r\nSuccessfully built MSBuild on a clean VM without any 3.5 bits installed.\r\n\r\nNotes\r\nThank you @KirillOsenkov Kirill Osenkov FTE for spotting this and suggesting the fix.",
          "committedDate": "2021-02-09T00:25:15Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c01c07169b29f2ae4c71e28f3d369f2792bcc79e",
          "message": "[master] NuGet Feed Update (#6135)\n\nCo-authored-by: Matt Mitchell <mmitche@microsoft.com>",
          "committedDate": "2021-02-09T18:58:26Z",
          "author": {
            "name": "dotnet bot",
            "email": "dotnet-bot@dotnetfoundation.org"
          }
        }
      },
      {
        "commit": {
          "oid": "6bad8ea6a27fc23621ee8a41fd941dff01976de1",
          "message": "Remove dotnet-core feed & Update GenAPI Assembly Name (#6141)",
          "committedDate": "2021-02-10T00:41:53Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "30d47eec9d7afe903baf1155b9947b8c00368f02",
          "message": "Simplify ScanForClosingParenthesis",
          "committedDate": "2021-02-10T11:58:08Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "63dea112a65b2d74e21158b3216b42cb854c1e2d",
          "message": "Simplify ScanForClosingQuote",
          "committedDate": "2021-02-10T11:58:08Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "849c727957f13ad6fabe8d1e8578444b02c67749",
          "message": "Refactor ConvertToString",
          "committedDate": "2021-02-10T11:58:08Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "206e58686a400ec6d06a33c2a91a56f9241214ba",
          "message": "Remove lazy initialization of results (prep for more changes)",
          "committedDate": "2021-02-10T11:58:08Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "baf3373431653b9fe4760d68f3fc61c633595dfb",
          "message": "Add SpanBasedStringBuilder.Append(ReadOnlyMemory<char>)",
          "committedDate": "2021-02-10T11:58:08Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "96faf2ca20a1f8798797a97f47b2c4a1e124be1b",
          "message": "Add MaybeAdjustFilePath(ReadOnlyMemory<char>)",
          "committedDate": "2021-02-10T12:05:16Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "334033b8de35d8b7da302897842e13d10377d58f",
          "message": "Add Expander<P,I>.SpanBasedConcatenator",
          "committedDate": "2021-02-10T12:05:22Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "86b65b7435d12462419f491c0763af21c4698da2",
          "message": "Use SpanBasedConcatenator in ExpandPropertiesLeaveTypedAndEscaped",
          "committedDate": "2021-02-10T12:05:22Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3e552edbe8d4a2b61367e55f9447c122022175ea",
          "message": "Revert \"Optimize FileExists lookup (#6033)\" (#6146)\n\nThis reverts commit 01ceb4e6dadb3fa41c90626899d68d640aa22db4.\r\n\r\nThis broke RPS.",
          "committedDate": "2021-02-12T18:52:26Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f0eebf2872d76ab0cd43fdc4153ba636232b222f",
          "message": "[master] Update dependencies from dotnet/arcade (#6133)\n\nCo-authored-by: dotnet-maestro[bot] <dotnet-maestro[bot]@users.noreply.github.com>",
          "committedDate": "2021-02-12T23:53:00Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "42748379+dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "55b50aa2b39614b075dabfafa7eea1096554b80c",
          "message": "Rename GenerateReferenceAssemblySources -> GenerateReferenceAssemblySource\n\nWhen https://github.com/dotnet/msbuild/pull/6141 updated from Microsoft.DotNet.BuildTools.GenAPI to Microsoft.DotNet.GenAPI our reference assembly source generation logic stopped working.\n\nTurns out the new NuGet package targets relies on singular spelling to insert itself after PrepareForRun:\n\n<PrepareForRunDependsOn Condition=\"'$(GenerateReferenceAssemblySource)' == 'true'\">\n\nUpdate our spelling to singular everywhere now that we're using the new package.",
          "committedDate": "2021-02-16T03:09:03Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fabd1b50c8ec4fd9ed50cbc54a471e3c28b3520f",
          "message": "Update genapi parameters",
          "committedDate": "2021-02-16T23:01:36Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fead1a4a54d1838fe2e06cb657b3355daa0ccac2",
          "message": "Run build.cmd and include auto-generated/updated files",
          "committedDate": "2021-02-16T23:02:30Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "257e4bb75b3b4b83d02d7b08558586b26f347beb",
          "message": "Revert \"Use debug-specific optprof test (#6106)\" (#6185)\n\nThis reverts commit 27ff9a7b89b0abfbba7dc049acd892f1c59de240.\r\n\r\n### Context\r\n\r\nThe commit has been identified as the source of RefSet perf regression as flagged when inserting MSBuild bits into Visual Studio.\r\n\r\n### Changes Made\r\n\r\nReverted the change.\r\n\r\n### Testing\r\n\r\nRe-ran training scenarios with this change, optimized MSBuild with the resulting OptProf data, and confirmed that it passed Visual Studio insertion gates.",
          "committedDate": "2021-02-23T21:09:52Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "56626eb1c76325a8c955bc9d78ddfb03bb4ada60",
          "message": "Merge pull request #6157 from dotnet/dev/kirillo/GenerateReferenceAssemblySource\n\nWhen https://github.com/dotnet/msbuild/pull/6141 updated from Microsoft.DotNet.BuildTools.GenAPI to Microsoft.DotNet.GenAPI our reference assembly source generation logic stopped working.\r\n\r\nTurns out the new NuGet package targets relies on singular spelling to insert itself after PrepareForRun:\r\n\r\n<PrepareForRunDependsOn Condition=\"'$(GenerateReferenceAssemblySource)' == 'true'\">\r\n\r\nUpdate our spelling to singular everywhere now that we're using the new package.",
          "committedDate": "2021-02-23T21:12:51Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "30bbc5a5d8e21034676182480407c32079af28b5",
          "message": "Optimize Match-on-metadata (#6035)\n\nFixes [AB#1261123](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1261123) (feedback ticket)\r\n\r\n### Context\r\nChecking metadata for matches was taking (#fragments in item) * (#fragments in item to remove) * (#metadata). For many users, this was extremely slow.\r\n\r\n### Changes Made\r\nPut fragments into a custom MetadataSet object before checking for a match. This takes it from O(n * r * m) to O(m * (n + r)). Since m is normally small, this is a substantial improvement.\r\n\r\n### Testing\r\nTime on a single operation went from ~180 seconds to ~150 ms for the penultimate version. It also passes @cdmihai's extensive unit tests.*\r\n\r\n### Notes\r\nIs there any reason to keep the error for referencing multiple items? As a user, I would expect not-match-on-metadata to ignore metadata and match-on-metadata to ignore the item.\r\nIs it ok to rely on IEnumerable returning element in a consistent order?\r\nShould we keep returning no-match if all the metadata are empty on both items? It makes more sense to me to have that be a match, and it would simplify the code slightly. If it makes more sense to others, now would be the time to do it, since the code isn't that old.\r\n\r\n\\* Except one on paths. Not sure why that's failing, since it's passing in VS, just not from the command line. Will look into it more.",
          "committedDate": "2021-02-24T07:58:49Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "05c41822444395a72d14981792c2ada4d59def1c",
          "message": "Revert \"Add NuGet assemblies to the list of well-known assemblies.\"\n\nThis reverts commit 183645c502cc41de4b63662704b7b339c32f0f12.",
          "committedDate": "2021-02-24T17:29:34Z",
          "author": {
            "name": "Brian Robbins",
            "email": "brianrob@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4e4d2fd3f7f9e4a08d3d395692ea3d178bde2c98",
          "message": "Merge pull request #6195 from brianrob/revert-nuget-jitting\n\nRevert \"Add NuGet assemblies to the list of well-known assemblies.\"",
          "committedDate": "2021-02-24T20:04:10Z",
          "author": {
            "name": "Marc Paine",
            "email": "marcpop@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3a878836c7a1a038af26d63d8df3fa58068a7dbb",
          "message": "Modify rar-service design doc (#6192)",
          "committedDate": "2021-02-25T14:45:00Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "891b99c5288cd6d199d00a7bfb82492d3572bf63",
          "message": "When sharing the terminal with child nodes, wait for the children to terminate before exiting ourselves. (#6053)\n\nThis is an attempt to fix microsoft/vstest#2282.\r\n\r\nWhen sharing the terminal with child nodes, wait\r\nfor the children to terminate before exiting ourselves.\r\n\r\nThis avoids issues where the child changes terminal configuration\r\nafter our own exit.\r\n\r\nCo-authored-by: Kirill Osenkov <github@osenkov.com>",
          "committedDate": "2021-02-25T16:49:38Z",
          "author": {
            "name": "Tom Deseyn",
            "email": "tom.deseyn@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6819f7ab06c3f43e83ff4059d417395e0af06c01",
          "message": "On disk cache serialization  (#6094)\n\n### Context\r\nBinaryFormater serialization of on-disk RAR cache is slow and unsecure. \r\nRelated issue: #6057\r\n\r\n### Changes Made\r\nSerialization changed to use custom binary format by using existing `ITranslatable` \r\n\r\n### Testing\r\nUnit testing\r\nManual testing\r\n- Roslyn repo rebuild + incremental build",
          "committedDate": "2021-02-25T16:50:58Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b9858fb27ea4aec025343f01d5ce1e52b00cc9d9",
          "message": "Code cleanup in FileMatcher.cs and MSBuildGlob.cs",
          "committedDate": "2021-03-03T08:20:16Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "28c9b7d31f81b94493e1df57e0516d83318a9fee",
          "message": "Simplify Normalize and SkipCharacters",
          "committedDate": "2021-03-03T08:20:16Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f5ebb26361a8b8c42fac76d60d1b71970062e762",
          "message": "Optimize globbing by ignoring excludes that cannot match anything",
          "committedDate": "2021-03-03T08:20:16Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e93ccdfa1695c2ddf364bda67d8961b6d587027c",
          "message": "Remove unused method",
          "committedDate": "2021-03-03T08:20:16Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b841cdd09f4431ab5a5ea9d07ab1c652b9fff2af",
          "message": "Remove unused parameter from IsMatch",
          "committedDate": "2021-03-03T08:20:16Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "601d097f5b3bf065585789071ac5be2cbf7a97d8",
          "message": "Don't use regex to match patterns similar to **/.*/**",
          "committedDate": "2021-03-03T08:20:17Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f700993d2f878d21886dde021b29b3777bb3585d",
          "message": "Micro-optimize IsMatch::CompareIgnoreCase",
          "committedDate": "2021-03-03T08:20:17Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f9c5c08e1b788c37abc97b2b77855d4dc36429c7",
          "message": "Optimize FileSpecMatcherTester to match common patterns without regex'es",
          "committedDate": "2021-03-03T08:20:17Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "52b84e9887736bfeb11e5a7afbefda9ed76df6c6",
          "message": "Don't build regex string if regex is not needed",
          "committedDate": "2021-03-03T08:20:17Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a0ccba9b6f3193634907116959c5149fd2bb649",
          "message": "Don't create temporary and redundant ImmutableArray<string>",
          "committedDate": "2021-03-03T08:20:18Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a51a75fb2ec3c3dc72d648f283381aedd910dec",
          "message": "Cache all files and directories",
          "committedDate": "2021-03-03T08:20:18Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "da0124592459d5193981038268c7c1a6facfb277",
          "message": "Materialize enumerable early (except where guaranteed only one enumeration)",
          "committedDate": "2021-03-03T08:20:18Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c5afa7c8d54f16596eb849e4affca7d2ff28654a",
          "message": "Back-compat workaround",
          "committedDate": "2021-03-03T08:20:18Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "746f19b5eef6f011faadfe36681860409962c375",
          "message": "Fix bad plugin EndBuild exception handling during graph builds (#6110)\n\nFixes two issues when the plugin throws an exception in Plugin.EndBuildAsync during graph builds:\r\n- Plugin.EndBuildAsync got called twice because of a missing finally clause\r\n- Plugin.EndBuildAsync got called after the graph build returned, instead of before (which allows the GraphBuildResult to be properly set as failed with the exception from Plugin.EndBuildAsync)",
          "committedDate": "2021-03-03T09:47:43Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cbca164ffc6413df573ac94c414e5632f671d676",
          "message": "Optimizations to the calltree under ExpandPropertiesLeaveEscaped - PR #6128\n\nContext\r\nProperty expansion has been identified as one of the hot spots in project evaluation and ExpandPropertiesLeaveEscaped alone\r\naccounts for almost 20% of overall evaluation time of simple projects.\r\nSeveral optimizations have been made to the calltree under ExpandPropertiesLeaveEscaped. Notably:\r\n- Unnecessary and counter-productive string pinning has been removed.\r\n- A slow strchr-like function has been replaced with a simple call to String.IndexOf.\r\n- Series of ifs have been replaced with a switch.\r\n- Allocation of List<object> results has been eliminated.\r\n- Allocation of temporary substrings extracted from the expression has been eliminated.\r\n- The combined performance win is 10% in ExpandPropertiesLeaveEscaped, so close to 2% for evaluation overall.",
          "committedDate": "2021-03-03T09:53:01Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "202f8729c8f3a420117d0f2331e87dd62a31f43a",
          "message": "Optimize glob evaluation - PR #6151\n\nCollection of several changes to the globbing logic aiming to make .NET Core project evaluation faster.\r\n- Refactor, simplify, and micro-optimize hot code paths.\r\n- Eliminate exclude patterns early if it's clear that they don't intersect with the include.\r\n- Optimize most common glob patterns to match without regex (building a typical .NET Core app now does not instantiate a single regex for glob matching).\r\n- Cache the results of all filesystem enumeration calls, not just directories.",
          "committedDate": "2021-03-03T09:57:18Z",
          "author": {
            "name": "Roman Konecny",
            "email": "rokonecn@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a71a13086637c9a70cf7fc82f407a048319a1e31",
          "message": "Fix Loading of Plugin Assemblies (#6189)",
          "committedDate": "2021-03-03T20:34:16Z",
          "author": {
            "name": "Brian Robbins",
            "email": "brianrob@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "95415a2deb31006fdb6b5a9cdd042cf36af5ed7c",
          "message": "jnm2.ReferenceAssemblies.net35 should be a private dependency (#6214)",
          "committedDate": "2021-03-03T20:34:45Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4e1e167f8375fcf0f91f8027fe38b29f061afabb",
          "message": "Permit direct access to a SolutionFilterName property Fixes #6162 (#6171)",
          "committedDate": "2021-03-03T20:35:53Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "30a79b03b6ed8de8fe8c69966c5e9747763c3c8d",
          "message": "Permit specifying that we should use utf-8 in ToolTask (#6188)",
          "committedDate": "2021-03-03T20:38:26Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "63087cde532910d409b2f5f6d0694c1bcb8bfb74",
          "message": "add live.msbuildlog.com to binary log doc (#6169)",
          "committedDate": "2021-03-03T20:38:39Z",
          "author": {
            "name": "Ben Villalobos",
            "email": "4691428+BenVillalobos@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Clearly this needs to be rebased.",
        "createdAt": "2021-03-16T20:03:16Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Do you want me to rebase this or do you want to create a new branch that just cherry-picks the commit from main to 16.9?",
        "createdAt": "2021-03-16T20:09:27Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl Currently in the process of branching off of vs16.9 and cherry-picking your commits.",
        "createdAt": "2021-03-16T20:12:02Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}