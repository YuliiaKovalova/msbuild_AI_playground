{
  "number": 5656,
  "title": "implement analyzers from runtime",
  "body": "Fixes #5655\r\nFixes #4092",
  "state": "MERGED",
  "createdAt": "2020-08-14T00:29:09Z",
  "updatedAt": "2021-12-29T22:46:35Z",
  "closedAt": "2021-08-10T14:30:55Z",
  "mergedAt": "2021-08-10T14:30:55Z",
  "additions": 584,
  "deletions": 5,
  "changedFiles": 5,
  "headRefName": "implement-analyzers-from-runtime",
  "isDraft": false,
  "author": {
    "login": "elachlan"
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "f33b3bafeac23883522aa4b8736be05624efad51",
          "message": "implement analyzers from runtime",
          "committedDate": "2020-08-14T00:28:25Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0b72e4e832d0ef144820a2b424f056bf53268001",
          "message": "use formatter from dotnet/runtime",
          "committedDate": "2020-08-14T01:01:17Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "07defc4bb717463a5cb79e62cb9b593d8d591c2d",
          "message": "removed Microsoft.CodeAnalysis.NetAnalyzers and Microsoft.DotNet.CodeAnalysis, added Microsoft.CodeQuality.Analyzers",
          "committedDate": "2020-08-14T01:11:10Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1e902cc1749744f9ca53b4cf980276dfb25a74f4",
          "message": "Change rulesets from warnings to information so build passes",
          "committedDate": "2020-08-17T23:55:27Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5d127432b24e23ad55c5f25e1e9a4c6415994ba8",
          "message": "Update eng/CodeAnalysis.ruleset\n\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2020-12-02T02:20:50Z",
          "author": {
            "name": "Lachlan Ennis",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e924e294324576d2e06a01b90dad8c2f1301b4eb",
          "message": "Merge branch 'master' into implement-analyzers-from-runtime",
          "committedDate": "2020-12-02T14:45:06Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "810b249c6fc9643acf580f501e90a4023825b215",
          "message": "Update eng/CodeAnalysis.ruleset",
          "committedDate": "2020-12-02T15:01:39Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8c4fe0e7e214d980731d2fa872d7516f3c834510",
          "message": "Merge branch 'implement-analyzers-from-runtime' of https://github.com/elachlan/msbuild into elachlan-change",
          "committedDate": "2021-06-07T22:16:41Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7077cbd05fc99bf1416945ebc71d84f92ba87e13",
          "message": "Fix missing disabled rule",
          "committedDate": "2021-07-07T22:29:03Z",
          "author": {
            "name": "Lachlan Ennis",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d642499b65e8557da00ce58a41e45d7abd3bcd04",
          "message": "Change all Style Cop \"None\" rules to \"Info\"",
          "committedDate": "2021-07-07T23:51:25Z",
          "author": {
            "name": "Lachlan Ennis",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c0562f27dc3c0c722bc5ec456a690fc12239e307",
          "message": "Add missing rules marked as \"None\" to Ruleset",
          "committedDate": "2021-07-07T23:58:01Z",
          "author": {
            "name": "Lachlan Ennis",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8df5bbdf10cf3b814d08f3dbf21e24c0a3913daa",
          "message": "Update eng/CodeAnalysis.ruleset adding missing failing rules and changing existing failing rules to info from warning",
          "committedDate": "2021-07-10T23:18:48Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6c59fd966bb947c2382b5a1a9cf3bb85d3e045de",
          "message": "Update eng/CodeAnalysis.ruleset changing existing failing rules to info from warning",
          "committedDate": "2021-07-10T23:34:17Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7f92142cadbb81343b360eb3e64d16697339e2a9",
          "message": "Update eng/CodeAnalysis.ruleset changing existing failing rules to info from warning",
          "committedDate": "2021-07-10T23:39:29Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "65b855006cb422cda5fe96ec3148f5cc1bd4b191",
          "message": "Update eng/CodeAnalysis.ruleset changing existing failing rules to info from warning",
          "committedDate": "2021-07-10T23:39:47Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "81e6d7cba3ea68c3590f9591eab8f69dc7359790",
          "message": "Update eng/CodeAnalysis.ruleset changing existing failing rules to info from warning",
          "committedDate": "2021-07-10T23:45:16Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a20d316ed28e9caeded18153b2da9d3ad27f4e0",
          "message": "Apply suggestions from code review\r\n\r\nForgind suggested changes.\n\nCo-authored-by: Forgind <Forgind@users.noreply.github.com>",
          "committedDate": "2021-07-12T23:59:29Z",
          "author": {
            "name": "Lachlan Ennis",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6effa78ad7449b4658a77f84e9e54a1efbfa585d",
          "message": "Update CodeAnalysis.ruleset\n\nFix indentation",
          "committedDate": "2021-07-20T00:02:05Z",
          "author": {
            "name": "Lachlan Ennis",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fdf30573367f1cf50a70b34cb546a38f76e5866a",
          "message": "Merge branch 'implement-analyzers-from-runtime' of https://github.com/elachlan/msbuild into elachlan-change",
          "committedDate": "2021-08-05T04:39:40Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "82f8923739eddeea371ae45923d0f20c22332fe9",
          "message": "Merge https://github.com/dotnet/msbuild into elachlan-change",
          "committedDate": "2021-08-05T04:44:08Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "252a64661f3a0af2499a5b9660f0df817ddd40e6",
          "message": "Enable analyzers for all assemblies",
          "committedDate": "2021-08-05T05:07:04Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@cdmihai here you go. I copied the files from dotnet/runtime as a base.",
        "createdAt": "2020-08-14T00:29:53Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Failure is due to dotnet/runtime using Microsoft.CodeAnalysis.NetAnalyzers. Which is for .NET5. I guess for now we use the Microsoft.CodeQuality.Analyzers package? Unless you think we could add to the nuget.config\r\n\r\n```\r\n<add key=\"dotnet-eng\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json\" />\r\n<add key=\"dotnet5\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json\" />\r\n<add key=\"dotnet5-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5-transport/nuget/v3/index.json\" />\r\n```",
        "createdAt": "2020-08-14T00:59:54Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Build fails because of new rules. I believe this is because warnings cause failures is enabled.",
        "createdAt": "2020-08-14T01:20:24Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "List of error counts\r\n```\r\nSA1028 Count | 3039 \r\nSA1121 Count | 1642\r\nCA1805 Count | 159\r\nSA1206 Count | 127\r\nSA1400 Count | 90\r\nCA2007 Count | 85\r\nSA1129 Count | 37\r\nSA1001 Count | 36\r\nSA1115 Count | 23\r\nSA1027 Count | 22\r\nSA1113 Count | 20\r\nSA1212 Count | 14\r\nSA1026 Count | 12\r\nCA1200 Count | 8\r\nCA1802 Count | 8\r\nSA1000 Count | 7\r\nSA1019 Count | 4\r\nSA1404 Count | 4\r\nSA1411 Count | 4\r\nCA1823 Count | 3\r\nCA1507 Count | 2\r\nCA1714 Count | 2\r\nCA1717 Count | 2\r\nSA1205 Count | 2\r\nSA1410 Count | 2\r\nSA1517 Count | 2\r\nSA1617 Count | 2\r\nSA1112 Count | 1\r\n```",
        "createdAt": "2020-08-14T05:31:39Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@Forgind do you think it would make sense to have all the current rules set to `Info`. We then merge the PR and use the rules for refactoring and slowly change the rules back to warning after they are resolved? It gives a bit more power in that each PR can assess the individual rule and its affect.",
        "createdAt": "2020-08-15T00:34:08Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "What would the effect of that be? Like as a PR author, at what stage would you see the messages, and would they show up for every file or just the files changed? I'd actually be fine with keeping them as warnings if they only run on files changed in the PR.",
        "createdAt": "2020-08-15T04:56:03Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> What would the effect of that be? Like as a PR author, at what stage would you see the messages, and would they show up for every file or just the files changed? I'd actually be fine with keeping them as warnings if they only run on files changed in the PR.\r\n\r\nAt the moment, rules with warnings cause build failures. If we move the rules to Information. They won't cause build failures. They will just show up in the information section of the errors list when you run the Analyzer. With that implemented in master, I'll be able to do a separate PR for each rule that has violations. Then when all those violations are resolved, we set the rule back to warning. Which will cause any violations to cause build failures in Azure.\r\n\r\nIts really the only way to do this change. Since the other way would be making sure all the rules are passing in this PR. Which would be way too many changes at once to review sanely.\r\n\r\n",
        "createdAt": "2020-08-15T05:01:30Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "> They will just show up in the information section of the errors list when you run the Analyzer. \r\n\r\nSo it sounds like I wouldn't notice unless I try to find them? That sounds safe.\r\n\r\n> Its really the only way to do this change. Since the other way would be making sure all the rules are passing in this PR. Which would be way too many changes at once to review sanely.\r\n\r\nDefinitely agree with this part. I had previously thought about leaving it as warnings in this PR so that we can watch our progress towards 0 warnings (as we merge other PRs fixing parts of it) and merge it when everything is green, but your version makes more sense to me, since that will also make it easier for contributors to know how their code should be styled: they can just look at the editorconfig. Additionally, as I mentioned previously, we'll need to look at other dotnet repos and see if there's a common style we should follow and, if not, collectively decide what our style should be before merging this. We'll likely have that meeting at some point next week.\r\n\r\nLast, @rainersigwald also [mentioned](https://github.com/dotnet/msbuild/issues/4092#issuecomment-463674628) that we have some files that shouldn't be checked, so we'd have to track those down and put empty editorconfigs in those directories.",
        "createdAt": "2020-08-15T05:16:34Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Potentially stupid question, but do these rules come with automated code fixers? If they do, how hard is it to configure our PR CI or some PR bot or GH actions to apply the fixers only on the changed files in each PR, as a new commit to that PR? That would be another way to trickle the changes to make them easier to check. And over time, as the repo accumulates PRs, all the relevant touched code will slowly get fixed.\r\n\r\nIf not, the solution of putting them on info and rate limiting the fixes to 1-2 a week seems the next best thing.",
        "createdAt": "2020-08-17T18:07:28Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@cdmihai here is the issue for StyleCop to run from the command line: https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/2571\r\n\r\nIt would make it possible to implement it in CI/CD. I actually would suggest against that though. I feel like when you commit code, a build failure is more appropriate then the system changing code and committing it.",
        "createdAt": "2020-08-17T23:34:37Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@rainersigwald I was told there are a few folders or files we should be ignoring in the code files. Is it possible to get a list from the team?",
        "createdAt": "2020-08-19T00:15:02Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Build is now passing. I just need the list of directories that need to be ignored with the .editorconfig override. If we really want to stop changes, we can also have the .editorconfig override files not run any of the Analyzers rules.",
        "createdAt": "2020-08-20T04:53:09Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@rainersigwald the only thing left here is the .editorconfig override files. Otherwise it is done.",
        "createdAt": "2020-09-16T23:17:28Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Sorry we've been a bit slow with this. Deciding which rules to keep and which we don't want requires a lot of input. As you suggested, we started from dotnet/runtime's rules, since they have comments explaining what each does, and at this point have under ten rules that we're still undecided on. I intend to schedule one last meeting to talk about those soon and have an answer to you within about two weeks. Sorry for the delay!",
        "createdAt": "2020-09-16T23:26:29Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@elachlan, Do you think you'll have to get back around to this soon? Would be nice to have these rules, but we'll either have to downgrade them to message for now or fix them before this can go in.",
        "createdAt": "2021-06-02T18:54:49Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Please feel free to loop me in if you have questions about any of the rule proposals.",
        "createdAt": "2021-06-02T19:06:41Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "I think it might be easier if you add them as a message first. Then we enable each rule in a  separate PR with the fixes.",
        "createdAt": "2021-06-03T02:41:22Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "I started going through and changing failing rules to \"None\" instead of \"Warning,\" and it came to my attention that many of the warnings/errors were for rules we don't have in the ruleset. As an example, building locally led to:\r\n\r\n```\r\nC:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\BackEnd\\Shared\\BuildRequest.cs(112,13): error SA1101: Prefix local\r\n calls with this [C:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\BackEnd\\Shared\\BuildRequest.cs(113,13): error SA1101: Prefix local\r\n calls with this [C:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\BackEnd\\BuildManager\\BuildManager.cs(2410,99): error SA1121: Use b\r\nuilt-in type alias [C:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\Logging\\DistributedLoggers\\ConfigurableForwardingLogger.cs(71,9):\r\nerror SA1124: Do not use regions [C:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\Graph\\GraphBuildRequestData.cs(172,13): error SA1101: Prefix local\r\n calls with this [C:\\Users\\forgind\\Documents\\GitHub\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\n```\r\n\r\nThat little snippet was part of a massive wall of failures, but neither 1101 nor 1121 are actually in the ruleset. Is it assuming default values for missing rules, and if so, is there some way to default all missing rules to \"None\"?",
        "createdAt": "2021-06-07T22:32:31Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "I am unsure, I was under the impression that rulesets were explicit and didn't run unless configured to.",
        "createdAt": "2021-06-29T05:39:29Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@sharwell have you got any idea on this one?",
        "createdAt": "2021-06-29T05:51:26Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "I see a bunch of differences between the ruleset used in this pull request and the one in [dotnet/runtime](https://github.com/dotnet/runtime/blob/f3bad4f82787f3f2f0e949c750cd3c6f78705468/eng/CodeAnalysis.ruleset). Was this intentional?",
        "createdAt": "2021-06-29T14:59:40Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "Yes. We used the dotnet/runtime version as a starting point but tweaked it to better fit both what already exists in MSBuild and what current maintainers prefer.",
        "createdAt": "2021-06-29T16:17:51Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "When SA1101 was removed during the modifications, it caused the rule to be enabled. The rule is explicitly disabled in the one I linked to.",
        "createdAt": "2021-07-02T16:00:30Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "Gotcha, so it sounds like removing rules we didn't want was a mistake. I'll try to find time to add those back next week.",
        "createdAt": "2021-07-02T16:35:12Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "I did a bit of work to find out the missing rules that were removed. I guess we have to look at each one and work out if its needed or not. But I guess preserving the old rules would make sense?\r\n```\r\n<Rule Id=\"SA1000\" Action=\"Info\" />\r\n<Rule Id=\"SA1001\" Action=\"Info\" />\r\n<Rule Id=\"SA1003\" Action=\"None\" />\r\n<Rule Id=\"SA1019\" Action=\"Info\" />\r\n<Rule Id=\"SA1026\" Action=\"Info\" />\r\n<Rule Id=\"SA1027\" Action=\"Info\" />\r\n<Rule Id=\"SA1028\" Action=\"Info\" />\r\n<Rule Id=\"SA1101\" Action=\"None\" />\r\n<Rule Id=\"SA1108\" Action=\"None\" />\r\n<Rule Id=\"SA1112\" Action=\"Info\" />\r\n<Rule Id=\"SA1113\" Action=\"Info\" />\r\n<Rule Id=\"SA1115\" Action=\"Info\" />\r\n<Rule Id=\"SA1118\" Action=\"None\" />\r\n<Rule Id=\"SA1119\" Action=\"None\" />\r\n<Rule Id=\"SA1121\" Action=\"Info\" />\r\n<Rule Id=\"SA1124\" Action=\"None\" />\r\n<Rule Id=\"SA1129\" Action=\"Info\" />\r\n<Rule Id=\"SA1139\" Action=\"None\" />\r\n<Rule Id=\"SA1200\" Action=\"None\" />\r\n<Rule Id=\"SA1205\" Action=\"Info\" />\r\n<Rule Id=\"SA1206\" Action=\"Info\" />\r\n<Rule Id=\"SA1212\" Action=\"Info\" />\r\n<Rule Id=\"SA1307\" Action=\"None\" />\r\n<Rule Id=\"SA1309\" Action=\"None\" />\r\n<Rule Id=\"SA1310\" Action=\"None\" />\r\n<Rule Id=\"SA1314\" Action=\"None\" />\r\n<Rule Id=\"SA1400\" Action=\"Info\" />\r\n<Rule Id=\"SA1410\" Action=\"Info\" />\r\n<Rule Id=\"SA1411\" Action=\"Info\" />\r\n<Rule Id=\"SA1517\" Action=\"Info\" />\r\n<Rule Id=\"SA1600\" Action=\"None\" />\r\n<Rule Id=\"SA1615\" Action=\"None\" />\r\n<Rule Id=\"SA1617\" Action=\"Info\" />\r\n```\r\n",
        "createdAt": "2021-07-07T23:04:11Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "The missing rules are likely rules we decided we don't want\u2014either they conflict with our personal coding preferences, or there are simply too many instances in MSBuild for us to think it worth changing at this point. It might be best to change the \"None\"s we currently have to \"Info\" then include the missing rules as \"None\". Then we can see the problems and won't be distracted by rules we don't want to change.",
        "createdAt": "2021-07-07T23:41:52Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Ok, just checking. So for existing ruleset rules for stylecop, I should change all the nones to info.\r\nThen for the missing rules I have listed above, I should change them all to none and include them in the ruleset?\r\n\r\n\r\n",
        "createdAt": "2021-07-07T23:46:45Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Yes! Exactly. I can check with people if you want me to make sure others agree, but I think that sounds best.",
        "createdAt": "2021-07-07T23:48:07Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "If there are difference in the other sections, we might need to deal with them as well. I have only done the stylecop rules.",
        "createdAt": "2021-07-08T00:00:01Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "These are the rules that I changed, I suggest the team go over each of them and decide if they are needed. If not, then mark them as \"None\". Then we take a list of the needed/useful rules and create a MR for each rule fixing the code issues.\r\n\r\n```\r\nCA1032\r\nCA1034\r\nCA1050\r\nCA1200\r\nCA1507\r\nCA1707\r\nCA1714\r\nCA1717\r\nCA1802\r\nCA1805\r\nCA1806\r\nCA1810\r\nCA1814\r\nCA1815\r\nCA1819\r\nCA1823\r\nCA1825\r\nCA1829\r\nCA1834\r\nCA1835\r\nCA1836\r\nCA1837\r\nCA1838\r\nCA2007\r\nCA2008\r\nCA2016\r\nCA2219\r\nCA2241\r\nCA2249\r\nSA1404\r\nSA1625\r\n```",
        "createdAt": "2021-07-10T23:52:36Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "So is there a list of rules that you want to re-enable once this is merged?",
        "createdAt": "2021-07-13T00:24:02Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "By re-enable, do you mean from None to Info or from Info to Warning? I was trying to organize it such that None should stay None forever\u2014those are rules we decided we didn't want for some reason\u2014and Info can hopefully eventually change to Warning or Error (depending on severity) as we make improvements. Does that sound reasonable?",
        "createdAt": "2021-07-13T05:36:13Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Sounds good. I guess the team will need to make a list of rules that the team would like moved to warning from info that require fixes (if not all).\r\n\r\nThen we can work through each rule one by one making fixes in another Issue/PR.",
        "createdAt": "2021-07-13T06:11:38Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "I talked with two other people on the team this morning, and we're all on board with moving everything currently labelled \"info\" into warning or error (as appropriate) at some point.\r\n\r\nThanks for your work on this; I think it's good to go! I'll poke someone on my team for approval, then mark it merge-when-branch-open.",
        "createdAt": "2021-07-19T20:06:49Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Awesome! Sorry it took so long. I will look at the info to warning rules one by one in separate PRs once this is merged",
        "createdAt": "2021-07-19T23:50:43Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@Forgind had mentioned that these analyzer warnings come up multiple times, is there any reason why that would be happening?\r\n\r\nAlso, why is it that _only_ src/Build/Microsoft.Build.csproj needs to opt into this and it carries forward? Does only one project need to opt in, regardless of what project that is?",
        "createdAt": "2021-07-19T23:58:33Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> @Forgind had mentioned that these analyzer warnings come up multiple times, is there any reason why that would be happening?\r\n> \r\n> Also, why is it that _only_ src/Build/Microsoft.Build.csproj needs to opt into this and it carries forward? Does only one project need to opt in, regardless of what project that is?\r\n\r\nI honestly have no idea on either of those points. I don't know enough about the rulesets. ",
        "createdAt": "2021-07-20T00:19:02Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "ladipro suggested offline that the extra warnings are because it builds it once for net framework and once for net core, so I'm not too worried about that. On the other hand, he also pointed out that the warning didn't seem to pop up when making a mistake in another project, so we should probably add it to other projects as well before merging.",
        "createdAt": "2021-07-21T22:32:38Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Pushed a change to make the analyzers apply to other assemblies. Not 100% sure it's ok to have the packagereferences always there, but my local version caught a mistake in either Microsoft.Build or Microsoft.Build.Utilities, so I think it's working properly, and in its current state, it built without errors or warnings. I'm happy with it. I'll bring it up by Monday at the latest and see if we can get it merged. \ud83c\udf89",
        "createdAt": "2021-08-05T05:11:00Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> Pushed a change to make the analyzers apply to other assemblies. Not 100% sure it's ok to have the packagereferences always there, but my local version caught a mistake in either Microsoft.Build or Microsoft.Build.Utilities, so I think it's working properly, and in its current state, it built without errors or warnings. I'm happy with it. I'll bring it up by Monday at the latest and see if we can get it merged. \ud83c\udf89\r\n\r\nThanks Forgind! Sorry I didn't get around to making the changes. I have been pretty busy with work/life. This should be a great help in the future to catch code mistakes.",
        "createdAt": "2021-08-05T05:13:43Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Thanks @elachlan! This should make it a lot easier to enforce style rules \ud83d\ude42",
        "createdAt": "2021-08-10T14:38:20Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \r\n      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \r\n      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \r\n      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \r\n      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \r\n      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \r\n      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \r\n   </Rules> \r\n   CommentEnd \r\n   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \r\n      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \r\n      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \r\n      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \r\n      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \r\n      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \r\n      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \r\n      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \r\n      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \r\n      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \r\n      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \r\n      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \r\n      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \r\n      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \r\n      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \r\n      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \r\n      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \r\n      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \r\n      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \r\n      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \r\n      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \r\n      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \r\n      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \r\n      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \r\n      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \r\n      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \r\n      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \r\n      <Rule Id=\"CA1050\" Action=\"Warning\" />          <!-- Declare types in namespaces --> \r\n      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \r\n      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \r\n      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \r\n      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \r\n      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \r\n      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \r\n      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \r\n      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \r\n      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \r\n      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \r\n      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \r\n      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \r\n      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \r\n      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \r\n      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \r\n      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \r\n      <Rule Id=\"CA1200\" Action=\"Warning\" />          <!-- Avoid using cref tags with a prefix --> \r\n      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \r\n      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \r\n      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \r\n      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \r\n      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \r\n      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \r\n      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \r\n      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \r\n      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \r\n      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \r\n      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \r\n      <Rule Id=\"CA1507\" Action=\"Warning\" />          <!-- Use nameof to express symbol names --> \r\n      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \r\n      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \r\n      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \r\n      <Rule Id=\"CA1710\" Action=\"None\" />             <!-- Identifiers should have correct suffix --> \r\n      <Rule Id=\"CA1711\" Action=\"None\" />             <!-- Identifiers should not have incorrect suffix --> \r\n      <Rule Id=\"CA1712\" Action=\"None\" />             <!-- Do not prefix enum values with type name --> \r\n      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \r\n      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \r\n      <Rule Id=\"CA1720\" Action=\"None\" />             <!-- Identifier contains type name --> \r\n      <Rule Id=\"CA1721\" Action=\"None\" />             <!-- Property names should not match get methods --> \r\n      <Rule Id=\"CA1724\" Action=\"None\" />             <!-- Type names should not match namespaces --> \r\n      <Rule Id=\"CA1801\" Action=\"None\" />             <!-- Review unused parameters --> \r\n      <Rule Id=\"CA1802\" Action=\"Warning\" />          <!-- Use literals where appropriate --> \r\n      <Rule Id=\"CA1805\" Action=\"Warning\" />          <!-- Do not initialize unnecessarily --> \r\n      <Rule Id=\"CA1810\" Action=\"Warning\" />          <!-- Initialize reference type static fields inline --> \r\n      <Rule Id=\"CA1812\" Action=\"None\" />             <!-- Avoid uninstantiated internal classes --> \r\n      <Rule Id=\"CA1816\" Action=\"None\" />             <!-- Dispose methods should call SuppressFinalize --> \r\n      <Rule Id=\"CA1820\" Action=\"None\" />             <!-- Test for empty strings using string length --> \r\n      <Rule Id=\"CA1821\" Action=\"Warning\" />          <!-- Remove empty Finalizers --> \r\n      <Rule Id=\"CA1822\" Action=\"None\" />             <!-- Mark members as static --> \r\n      <Rule Id=\"CA1823\" Action=\"Warning\" />          <!-- Avoid unused private fields --> \r\n      <Rule Id=\"CA1824\" Action=\"Warning\" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->\r\n      <Rule Id=\"CA1825\" Action=\"Warning\" />          <!-- Avoid zero-length array allocations. --> \r\n      <Rule Id=\"CA1827\" Action=\"Warning\" />          <!-- Do not use Count() or LongCount() when Any() can be used --> \r\n      <Rule Id=\"CA1828\" Action=\"Warning\" />          <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used --> \r\n      <Rule Id=\"CA1829\" Action=\"Warning\" />          <!-- Use Length/Count property instead of Count() when available --> \r\n      <Rule Id=\"CA1830\" Action=\"Warning\" />          <!-- Prefer strongly-typed Append and Insert method overloads on StringBuilder. --> \r\n      <Rule Id=\"CA1831\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \r\n      <Rule Id=\"CA1832\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \r\n      <Rule Id=\"CA1833\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \r\n      <Rule Id=\"CA1834\" Action=\"Warning\" />          <!-- Consider using 'StringBuilder.Append(char)' when applicable. --> \r\n      <Rule Id=\"CA1835\" Action=\"Warning\" />          <!-- Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync' --> \r\n      <Rule Id=\"CA1836\" Action=\"Warning\" />          <!-- Prefer IsEmpty over Count --> \r\n      <Rule Id=\"CA1837\" Action=\"Warning\" />          <!-- Use 'Environment.ProcessId' -->  \r\n      <Rule Id=\"CA1838\" Action=\"Warning\" />          <!-- Avoid 'StringBuilder' parameters for P/Invokes --> \r\n      <Rule Id=\"CA2000\" Action=\"None\" />             <!-- Dispose objects before losing scope --> \r\n      <Rule Id=\"CA2002\" Action=\"None\" />             <!-- Do not lock on objects with weak identity --> \r\n      <Rule Id=\"CA2007\" Action=\"Warning\" />          <!-- Consider calling ConfigureAwait on the awaited task --> \r\n      <Rule Id=\"CA2008\" Action=\"Warning\" />          <!-- Do not create tasks without passing a TaskScheduler --> \r\n      <Rule Id=\"CA2009\" Action=\"Warning\" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value --> \r\n      <Rule Id=\"CA2011\" Action=\"Warning\" />          <!-- Avoid infinite recursion --> \r\n      <Rule Id=\"CA2012\" Action=\"Warning\" />          <!-- Use ValueTasks correctly --> \r\n      <Rule Id=\"CA2013\" Action=\"Warning\" />          <!-- Do not use ReferenceEquals with value types --> \r\n      <Rule Id=\"CA2014\" Action=\"Warning\" />          <!-- Do not use stackalloc in loops. --> \r\n      <Rule Id=\"CA2015\" Action=\"Warning\" />          <!-- Do not define finalizers for types derived from MemoryManager<T> --> \r\n      <Rule Id=\"CA2016\" Action=\"Warning\" />          <!-- Forward the 'CancellationToken' parameter to methods that take one --> \r\n      <Rule Id=\"CA2100\" Action=\"None\" />             <!-- Review SQL queries for security vulnerabilities --> \r\n      <Rule Id=\"CA2101\" Action=\"None\" />             <!-- Specify marshaling for P/Invoke string arguments --> \r\n      <Rule Id=\"CA2109\" Action=\"None\" />             <!-- Review visible event handlers --> \r\n      <Rule Id=\"CA2119\" Action=\"None\" />             <!-- Seal methods that satisfy private interfaces --> \r\n      <Rule Id=\"CA2153\" Action=\"None\" />             <!-- Do Not Catch Corrupted State Exceptions --> \r\n      <Rule Id=\"CA2201\" Action=\"None\" />             <!-- Do not raise reserved exception types --> \r\n      <Rule Id=\"CA2208\" Action=\"Warning\" />          <!-- Instantiate argument exceptions correctly --> \r\n      <Rule Id=\"CA2211\" Action=\"None\" />             <!-- Non-constant fields should not be visible --> \r\n      <Rule Id=\"CA2213\" Action=\"None\" />             <!-- Disposable fields should be disposed --> \r\n      <Rule Id=\"CA2215\" Action=\"None\" />             <!-- Dispose methods should call base class dispose --> \r\n      <Rule Id=\"CA2216\" Action=\"None\" />             <!-- Disposable types should declare finalizer --> \r\n      <Rule Id=\"CA2224\" Action=\"None\" />             <!-- Override Equals on overloading operator equals --> \r\n      <Rule Id=\"CA2225\" Action=\"None\" />             <!-- Operator overloads have named alternates --> \r\n      <Rule Id=\"CA2226\" Action=\"None\" />             <!-- Operators should have symmetrical overloads --> \r\n      <Rule Id=\"CA2227\" Action=\"None\" />             <!-- Collection properties should be read only --> \r\n      <Rule Id=\"CA2231\" Action=\"None\" />             <!-- Overload operator equals on overriding value type Equals --> \r\n      <Rule Id=\"CA2234\" Action=\"None\" />             <!-- Pass system uri objects instead of strings --> \r\n      <Rule Id=\"CA2235\" Action=\"None\" />             <!-- Mark all non-serializable fields --> \r\n      <Rule Id=\"CA2241\" Action=\"Warning\" />          <!-- Provide correct arguments to formatting methods --> \r\n      <Rule Id=\"CA2242\" Action=\"Warning\" />          <!-- Test for NaN correctly --> \r\n      <Rule Id=\"CA2243\" Action=\"None\" />             <!-- Attribute string literals should parse correctly --> \r\n      <Rule Id=\"CA2244\" Action=\"None\" />             <!-- Do not duplicate indexed element initializations --> \r\n      <Rule Id=\"CA2245\" Action=\"Warning\" />          <!-- Do not assign a property to itself. --> \r\n      <Rule Id=\"CA2246\" Action=\"None\" />             <!-- Assigning symbol and its member in the same statement. --> \r\n      <Rule Id=\"CA2247\" Action=\"Warning\" />          <!-- Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum. --> \r\n      <Rule Id=\"CA2248\" Action=\"Warning\" />          <!-- Provide correct 'enum' argument to 'Enum.HasFlag' --> \r\n      <Rule Id=\"CA2249\" Action=\"Warning\" />          <!-- Consider using 'string.Contains' instead of 'string.IndexOf' --> \r\n      <Rule Id=\"CA2300\" Action=\"None\" />             <!-- Do not use insecure deserializer BinaryFormatter --> \r\n      <Rule Id=\"CA2301\" Action=\"None\" />             <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder --> \r\n      <Rule Id=\"CA2302\" Action=\"None\" />             <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize --> \r\n      <Rule Id=\"CA2305\" Action=\"None\" />             <!-- Do not use insecure deserializer LosFormatter --> \r\n      <Rule Id=\"CA2310\" Action=\"None\" />             <!-- Do not use insecure deserializer NetDataContractSerializer --> \r\n      <Rule Id=\"CA2311\" Action=\"None\" />             <!-- Do not deserialize without first setting NetDataContractSerializer.Binder --> \r\n      <Rule Id=\"CA2312\" Action=\"None\" />             <!-- Ensure NetDataContractSerializer.Binder is set before deserializing --> \r\n      <Rule Id=\"CA2315\" Action=\"None\" />             <!-- Do not use insecure deserializer ObjectStateFormatter --> \r\n      <Rule Id=\"CA2321\" Action=\"None\" />             <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver --> \r\n      <Rule Id=\"CA2322\" Action=\"None\" />             <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing --> \r\n      <Rule Id=\"CA2326\" Action=\"None\" />             <!-- Do not use TypeNameHandling values other than None --> \r\n      <Rule Id=\"CA2350\" Action=\"None\" />             <!-- Do not use DataTable.ReadXml() with untrusted data --> \r\n      <Rule Id=\"CA2351\" Action=\"None\" />             <!-- Do not use DataSet.ReadXml() with untrusted data --> \r\n      <Rule Id=\"CA2352\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks --> \r\n      <Rule Id=\"CA2353\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type --> \r\n      <Rule Id=\"CA2354\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks --> \r\n      <Rule Id=\"CA2355\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type found in deserializable object graph --> \r\n      <Rule Id=\"CA2356\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type in web deserializable object graph --> \r\n      <Rule Id=\"CA2361\" Action=\"None\" />             <!-- Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data --> \r\n      <Rule Id=\"CA2362\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks --> \r\n      <Rule Id=\"CA3001\" Action=\"None\" />             <!-- Review code for SQL injection vulnerabilities --> \r\n      <Rule Id=\"CA3002\" Action=\"None\" />             <!-- Review code for XSS vulnerabilities --> \r\n      <Rule Id=\"CA3003\" Action=\"None\" />             <!-- Review code for file path injection vulnerabilities --> \r\n      <Rule Id=\"CA3004\" Action=\"None\" />             <!-- Review code for information disclosure vulnerabilities --> \r\n      <Rule Id=\"CA3005\" Action=\"None\" />             <!-- Review code for LDAP injection vulnerabilities --> \r\n      <Rule Id=\"CA3006\" Action=\"None\" />             <!-- Review code for process command injection vulnerabilities --> \r\n      <Rule Id=\"CA3007\" Action=\"None\" />             <!-- Review code for open redirect vulnerabilities --> \r\n      <Rule Id=\"CA3008\" Action=\"None\" />             <!-- Review code for XPath injection vulnerabilities --> \r\n      <Rule Id=\"CA3009\" Action=\"None\" />             <!-- Review code for XML injection vulnerabilities --> \r\n      <Rule Id=\"CA3010\" Action=\"None\" />             <!-- Review code for XAML injection vulnerabilities --> \r\n      <Rule Id=\"CA3011\" Action=\"None\" />             <!-- Review code for DLL injection vulnerabilities --> \r\n      <Rule Id=\"CA3012\" Action=\"None\" />             <!-- Review code for regex injection vulnerabilities --> \r\n      <Rule Id=\"CA3061\" Action=\"Warning\" />          <!-- Do Not Add Schema By URL --> \r\n      <Rule Id=\"CA3075\" Action=\"Warning\" />          <!-- Insecure DTD processing in XML --> \r\n      <Rule Id=\"CA3076\" Action=\"Warning\" />          <!-- Insecure XSLT script processing. --> \r\n      <Rule Id=\"CA3077\" Action=\"Warning\" />          <!-- Insecure Processing in API Design, XmlDocument and XmlTextReader --> \r\n      <Rule Id=\"CA3147\" Action=\"Warning\" />          <!-- Mark Verb Handlers With Validate Antiforgery Token --> \r\n      <Rule Id=\"CA5350\" Action=\"Warning\" />          <!-- Do Not Use Weak Cryptographic Algorithms --> \r\n      <Rule Id=\"CA5351\" Action=\"Warning\" />          <!-- Do Not Use Broken Cryptographic Algorithms --> \r\n      <Rule Id=\"CA5358\" Action=\"None\" />             <!-- Review cipher mode usage with cryptography experts --> \r\n      <Rule Id=\"CA5359\" Action=\"Warning\" />          <!-- Do Not Disable Certificate Validation --> \r\n      <Rule Id=\"CA5360\" Action=\"Warning\" />          <!-- Do Not Call Dangerous Methods In Deserialization --> \r\n      <Rule Id=\"CA5361\" Action=\"Warning\" />          <!-- Do Not Disable SChannel Use of Strong Crypto --> \r\n      <Rule Id=\"CA5362\" Action=\"None\" />             <!-- Potential reference cycle in deserialized object graph --> \r\n      <Rule Id=\"CA5363\" Action=\"Warning\" />          <!-- Do Not Disable Request Validation --> \r\n      <Rule Id=\"CA5364\" Action=\"Warning\" />          <!-- Do Not Use Deprecated Security Protocols --> \r\n      <Rule Id=\"CA5365\" Action=\"Warning\" />          <!-- Do Not Disable HTTP Header Checking --> \r\n      <Rule Id=\"CA5366\" Action=\"None\" />             <!-- Use XmlReader For DataSet Read Xml --> \r\n      <Rule Id=\"CA5367\" Action=\"None\" />             <!-- Do Not Serialize Types With Pointer Fields --> \r\n      <Rule Id=\"CA5368\" Action=\"Warning\" />          <!-- Set ViewStateUserKey For Classes Derived From Page --> \r\n      <Rule Id=\"CA5369\" Action=\"None\" />             <!-- Use XmlReader For Deserialize --> \r\n      <Rule Id=\"CA5370\" Action=\"Warning\" />          <!-- Use XmlReader For Validating Reader --> \r\n      <Rule Id=\"CA5371\" Action=\"None\" />             <!-- Use XmlReader For Schema Read --> \r\n      <Rule Id=\"CA5372\" Action=\"None\" />             <!-- Use XmlReader For XPathDocument --> \r\n      <Rule Id=\"CA5373\" Action=\"Warning\" />          <!-- Do not use obsolete key derivation function --> \r\n      <Rule Id=\"CA5374\" Action=\"Warning\" />          <!-- Do Not Use XslTransform --> \r\n      <Rule Id=\"CA5375\" Action=\"None\" />             <!-- Do Not Use Account Shared Access Signature --> \r\n      <Rule Id=\"CA5376\" Action=\"Warning\" />          <!-- Use SharedAccessProtocol HttpsOnly --> \r\n      <Rule Id=\"CA5377\" Action=\"Warning\" />          <!-- Use Container Level Access Policy --> \r\n      <Rule Id=\"CA5378\" Action=\"Warning\" />          <!-- Do not disable ServicePointManagerSecurityProtocols --> \r\n      <Rule Id=\"CA5379\" Action=\"Warning\" />          <!-- Do Not Use Weak Key Derivation Function Algorithm --> \r\n      <Rule Id=\"CA5380\" Action=\"Warning\" />          <!-- Do Not Add Certificates To Root Store --> \r\n      <Rule Id=\"CA5381\" Action=\"Warning\" />          <!-- Ensure Certificates Are Not Added To Root Store --> \r\n      <Rule Id=\"CA5382\" Action=\"None\" />             <!-- Use Secure Cookies In ASP.Net Core --> \r\n      <Rule Id=\"CA5383\" Action=\"None\" />             <!-- Ensure Use Secure Cookies In ASP.Net Core --> \r\n      <Rule Id=\"CA5384\" Action=\"Warning\" />          <!-- Do Not Use Digital Signature Algorithm (DSA) --> \r\n      <Rule Id=\"CA5385\" Action=\"Warning\" />          <!-- Use Rivest\u2013Shamir\u2013Adleman (RSA) Algorithm With Sufficient Key Size --> \r\n      <Rule Id=\"CA5386\" Action=\"None\" />             <!-- Avoid hardcoding SecurityProtocolType value --> \r\n      <Rule Id=\"CA5387\" Action=\"None\" />             <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count --> \r\n      <Rule Id=\"CA5388\" Action=\"None\" />             <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function --> \r\n      <Rule Id=\"CA5389\" Action=\"None\" />             <!-- Do Not Add Archive Item's Path To The Target File System Path --> \r\n      <Rule Id=\"CA5390\" Action=\"None\" />             <!-- Do not hard-code encryption key --> \r\n      <Rule Id=\"CA5391\" Action=\"None\" />             <!-- Use antiforgery tokens in ASP.NET Core MVC controllers --> \r\n      <Rule Id=\"CA5392\" Action=\"None\" />             <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes --> \r\n      <Rule Id=\"CA5393\" Action=\"None\" />             <!-- Do not use unsafe DllImportSearchPath value --> \r\n      <Rule Id=\"CA5394\" Action=\"None\" />             <!-- Do not use insecure randomness --> \r\n      <Rule Id=\"CA5395\" Action=\"None\" />             <!-- Miss HttpVerb attribute for action methods --> \r\n      <Rule Id=\"CA5396\" Action=\"None\" />             <!-- Set HttpOnly to true for HttpCookie --> \r\n      <Rule Id=\"CA5397\" Action=\"None\" />             <!-- Do not use deprecated SslProtocols values --> \r\n      <Rule Id=\"CA5398\" Action=\"None\" />             <!-- Avoid hardcoded SslProtocols values --> \r\n      <Rule Id=\"CA5399\" Action=\"None\" />             <!-- HttpClients should enable certificate revocation list checks --> \r\n      <Rule Id=\"CA5400\" Action=\"None\" />             <!-- Ensure HttpClient certificate revocation list check is not disabled --> \r\n      <Rule Id=\"CA5401\" Action=\"None\" />             <!-- Do not use CreateEncryptor with non-default IV --> \r\n      <Rule Id=\"CA5402\" Action=\"None\" />             <!-- Use CreateEncryptor with the default IV  --> \r\n      <Rule Id=\"CA5403\" Action=\"None\" />             <!-- Do not hard-code certificate --> \r\n      <Rule Id=\"IL3000\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \r\n      <Rule Id=\"IL3001\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \r\n  </Rules> \r\n  <Rules AnalyzerId=\"StyleCop.Analyzers\" RuleNamespace=\"StyleCop.Analyzers\"> \r\n    <Rule Id=\"AD0001\" Action=\"None\" /> <!-- Analyzer threw an exception --> \r\n    <Rule Id=\"SA0001\" Action=\"None\" /> <!-- XML comments --> \r\n    <Rule Id=\"SA1002\" Action=\"None\" /> <!-- Semicolons should not be preceded by a space --> \r\n    <Rule Id=\"SA1004\" Action=\"None\" /> <!-- Documentation line should begin with a space --> \r\n    <Rule Id=\"SA1005\" Action=\"None\" /> <!-- Single line comment should begin with a space --> \r\n    <Rule Id=\"SA1008\" Action=\"None\" /> <!-- Opening parenthesis should not be preceded by a space --> \r\n    <Rule Id=\"SA1009\" Action=\"None\" /> <!-- Closing parenthesis should not be followed by a space --> \r\n    <Rule Id=\"SA1010\" Action=\"None\" /> <!-- Opening square brackets should not be preceded by a space --> \r\n    <Rule Id=\"SA1011\" Action=\"None\" /> <!-- Closing square bracket should be followed by a space --> \r\n    <Rule Id=\"SA1012\" Action=\"None\" /> <!-- Opening brace should be followed by a space --> \r\n    <Rule Id=\"SA1013\" Action=\"None\" /> <!-- Closing brace should be preceded by a space --> \r\n    <Rule Id=\"SA1015\" Action=\"None\" /> <!-- Closing generic bracket should not be followed by a space --> \r\n    <Rule Id=\"SA1021\" Action=\"None\" /> <!-- Negative sign should be preceded by a space --> \r\n    <Rule Id=\"SA1023\" Action=\"None\" /> <!-- Dereference symbol '*' should not be preceded by a space.\" --> \r\n    <Rule Id=\"SA1024\" Action=\"None\" /> <!-- Colon should be followed by a space --> \r\n    <Rule Id=\"SA1025\" Action=\"None\" /> <!-- Code should not contain multiple whitespace characters in a row --> \r\n    <Rule Id=\"SA1100\" Action=\"None\" /> <!-- Do not prefix calls with base unless local implementation exists --> \r\n    <Rule Id=\"SA1106\" Action=\"None\" /> <!-- Code should not contain empty statements --> \r\n    <Rule Id=\"SA1107\" Action=\"None\" /> <!-- Code should not contain multiple statements on one line --> \r\n    <Rule Id=\"SA1110\" Action=\"None\" /> <!-- Opening parenthesis or bracket should be on declaration line --> \r\n    <Rule Id=\"SA1111\" Action=\"None\" /> <!-- Closing parenthesis should be on line of last parameter --> \r\n    <Rule Id=\"SA1114\" Action=\"None\" /> <!-- Parameter list should follow declaration --> \r\n    <Rule Id=\"SA1116\" Action=\"None\" /> <!-- Split parameters should start on line after declaration --> \r\n    <Rule Id=\"SA1117\" Action=\"None\" /> <!-- Parameters should be on same line or separate lines --> \r\n    <Rule Id=\"SA1120\" Action=\"None\" /> <!-- Comments should contain text --> \r\n    <Rule Id=\"SA1122\" Action=\"None\" /> <!-- Use string.Empty for empty strings --> \r\n    <Rule Id=\"SA1123\" Action=\"None\" /> <!-- Region should not be located within a code element --> \r\n    <Rule Id=\"SA1125\" Action=\"None\" /> <!-- Use shorthand for nullable types --> \r\n    <Rule Id=\"SA1127\" Action=\"None\" /> <!-- Generic type constraints should be on their own line --> \r\n    <Rule Id=\"SA1128\" Action=\"None\" /> <!-- Put constructor initializers on their own line --> \r\n    <Rule Id=\"SA1130\" Action=\"None\" /> <!-- Use lambda syntax --> \r\n    <Rule Id=\"SA1131\" Action=\"None\" /> <!-- Constant values should appear on the right-hand side of comparisons --> \r\n    <Rule Id=\"SA1132\" Action=\"None\" /> <!-- Do not combine fields --> \r\n    <Rule Id=\"SA1133\" Action=\"None\" /> <!-- Do not combine attributes --> \r\n    <Rule Id=\"SA1134\" Action=\"None\" /> <!-- Each attribute should be placed on its own line of code --> \r\n    <Rule Id=\"SA1135\" Action=\"None\" /> <!-- Using directive should be qualified --> \r\n    <Rule Id=\"SA1136\" Action=\"None\" /> <!-- Enum values should be on separate lines --> \r\n    <Rule Id=\"SA1137\" Action=\"None\" /> <!-- Elements should have the same indentation --> \r\n    <Rule Id=\"SA1201\" Action=\"None\" /> <!-- Elements should appear in the correct order --> \r\n    <Rule Id=\"SA1202\" Action=\"None\" /> <!-- Elements should be ordered by access --> \r\n    <Rule Id=\"SA1203\" Action=\"None\" /> <!-- Constants should appear before fields --> \r\n    <Rule Id=\"SA1204\" Action=\"None\" /> <!-- Static elements should appear before instance elements --> \r\n    <Rule Id=\"SA1208\" Action=\"None\" /> <!-- Using directive ordering --> \r\n    <Rule Id=\"SA1209\" Action=\"None\" /> <!-- Using alias directives should be placed after all using namespace directives --> \r\n    <Rule Id=\"SA1210\" Action=\"None\" /> <!-- Using directives should be ordered alphabetically by the namespaces --> \r\n    <Rule Id=\"SA1211\" Action=\"None\" /> <!-- Using alias directive ordering --> \r\n    <Rule Id=\"SA1214\" Action=\"None\" /> <!-- Readonly fields should appear before non-readonly fields --> \r\n    <Rule Id=\"SA1216\" Action=\"None\" /> <!-- Using static directives should be placed at the correct location --> \r\n    <Rule Id=\"SA1300\" Action=\"None\" /> <!-- Element should begin with an uppercase letter --> \r\n    <Rule Id=\"SA1303\" Action=\"None\" /> <!-- Const field names should begin with upper-case letter --> \r\n    <Rule Id=\"SA1304\" Action=\"None\" /> <!-- Non-private readonly fields should begin with upper-case letter --> \r\n    <Rule Id=\"SA1306\" Action=\"None\" /> <!-- Field should begin with lower-case letter --> \r\n    <Rule Id=\"SA1308\" Action=\"None\" /> <!-- Field should not begin with the prefix 's_' --> \r\n    <Rule Id=\"SA1311\" Action=\"None\" /> <!-- Static readonly fields should begin with upper-case letter --> \r\n    <Rule Id=\"SA1312\" Action=\"None\" /> <!-- Variable should begin with lower-case letter --> \r\n    <Rule Id=\"SA1313\" Action=\"None\" /> <!-- Parameter should begin with lower-case letter --> \r\n    <Rule Id=\"SA1316\" Action=\"None\" /> <!-- Tuple element names should use correct casing --> \r\n    <Rule Id=\"SA1401\" Action=\"None\" /> <!-- Fields should be private --> \r\n    <Rule Id=\"SA1402\" Action=\"None\" /> <!-- File may only contain a single type --> \r\n    <Rule Id=\"SA1403\" Action=\"None\" /> <!-- File may only contain a single namespace --> \r\n    <Rule Id=\"SA1404\" Action=\"Warning\" /> <!-- Code analysis suppression should have justification --> \r\n    <Rule Id=\"SA1405\" Action=\"None\" /> <!-- Debug.Assert should provide message text --> \r\n    <Rule Id=\"SA1407\" Action=\"None\" /> <!-- Arithmetic expressions should declare precedence --> \r\n    <Rule Id=\"SA1408\" Action=\"None\" /> <!-- Conditional expressions should declare precedence --> \r\n    <Rule Id=\"SA1413\" Action=\"None\" /> <!-- Use trailing comma in multi-line initializers --> \r\n    <Rule Id=\"SA1414\" Action=\"None\" /> <!-- Tuple types in signatures should have element names --> \r\n    <Rule Id=\"SA1500\" Action=\"None\" /> <!-- Braces for multi-line statements should not share line --> \r\n    <Rule Id=\"SA1501\" Action=\"None\" /> <!-- Statement should not be on a single line --> \r\n    <Rule Id=\"SA1502\" Action=\"None\" /> <!-- Element should not be on a single line --> \r\n    <Rule Id=\"SA1503\" Action=\"None\" /> <!-- Braces should not be omitted --> \r\n    <Rule Id=\"SA1504\" Action=\"None\" /> <!-- All accessors should be single-line or multi-line --> \r\n    <Rule Id=\"SA1505\" Action=\"None\" /> <!-- An opening brace should not be followed by a blank line --> \r\n    <Rule Id=\"SA1506\" Action=\"None\" /> <!-- Element documentation headers should not be followed by blank line --> \r\n    <Rule Id=\"SA1507\" Action=\"None\" /> <!-- Code should not contain multiple blank lines in a row --> \r\n    <Rule Id=\"SA1508\" Action=\"None\" /> <!-- A closing brace should not be preceded by a blank line --> \r\n    <Rule Id=\"SA1509\" Action=\"None\" /> <!-- Opening braces should not be preceded by blank line --> \r\n    <Rule Id=\"SA1510\" Action=\"None\" /> <!-- 'else' statement should not be preceded by a blank line --> \r\n    <Rule Id=\"SA1512\" Action=\"None\" /> <!-- Single-line comments should not be followed by blank line --> \r\n    <Rule Id=\"SA1513\" Action=\"None\" /> <!-- Closing brace should be followed by blank line --> \r\n    <Rule Id=\"SA1514\" Action=\"None\" /> <!-- Element documentation header should be preceded by blank line --> \r\n    <Rule Id=\"SA1515\" Action=\"None\" /> <!-- Single-line comment should be preceded by blank line --> \r\n    <Rule Id=\"SA1516\" Action=\"None\" /> <!-- Elements should be separated by blank line --> \r\n    <Rule Id=\"SA1519\" Action=\"None\" /> <!-- Braces should not be omitted from multi-line child statement --> \r\n    <Rule Id=\"SA1520\" Action=\"None\" /> <!-- Use braces consistently --> \r\n    <Rule Id=\"SA1601\" Action=\"None\" /> <!-- Partial elements should be documented --> \r\n    <Rule Id=\"SA1602\" Action=\"None\" /> <!-- Enumeration items should be documented --> \r\n    <Rule Id=\"SA1604\" Action=\"None\" /> <!-- Element documentation should have summary --> \r\n    <Rule Id=\"SA1605\" Action=\"None\" /> <!-- Partial element documentation should have summary --> \r\n    <Rule Id=\"SA1606\" Action=\"None\" /> <!-- Element documentation should have summary text --> \r\n    <Rule Id=\"SA1608\" Action=\"None\" /> <!-- Element documentation should not have default summary --> \r\n    <Rule Id=\"SA1610\" Action=\"None\" /> <!-- Property documentation should have value text --> \r\n    <Rule Id=\"SA1611\" Action=\"None\" /> <!-- The documentation for parameter 'message' is missing --> \r\n    <Rule Id=\"SA1612\" Action=\"None\" /> <!-- The parameter documentation is at incorrect position --> \r\n    <Rule Id=\"SA1614\" Action=\"None\" /> <!-- Element parameter documentation should have text --> \r\n    <Rule Id=\"SA1616\" Action=\"None\" /> <!-- Element return value documentation should have text --> \r\n    <Rule Id=\"SA1618\" Action=\"None\" /> <!-- The documentation for type parameter is missing --> \r\n    <Rule Id=\"SA1619\" Action=\"None\" /> <!-- The documentation for type parameter is missing --> \r\n    <Rule Id=\"SA1622\" Action=\"None\" /> <!-- Generic type parameter documentation should have text --> \r\n    <Rule Id=\"SA1623\" Action=\"None\" /> <!-- Property documentation text --> \r\n    <Rule Id=\"SA1624\" Action=\"None\" /> <!-- Because the property only contains a visible get accessor, the documentation summary text should begin with 'Gets' --> \r\n    <Rule Id=\"SA1626\" Action=\"None\" /> <!-- Single-line comments should not use documentation style slashes --> \r\n    <Rule Id=\"SA1627\" Action=\"None\" /> <!-- The documentation text within the \\'exception\\' tag should not be empty --> \r\n    <Rule Id=\"SA1629\" Action=\"None\" /> <!-- Documentation text should end with a period --> \r\n    <Rule Id=\"SA1633\" Action=\"None\" /> <!-- File should have header --> \r\n    <Rule Id=\"SA1642\" Action=\"None\" /> <!-- Constructor summary documentation should begin with standard text --> \r\n    <Rule Id=\"SA1643\" Action=\"None\" /> <!-- Destructor summary documentation should begin with standard text --> \r\n    <Rule Id=\"SA1649\" Action=\"None\" /> <!-- File name should match first type name --> \r\n  </Rules> \r\n  <Rules AnalyzerId=\"xunit.analyzers\" RuleNamespace=\"xunit.analyzers\"> \r\n    <Rule Id=\"xUnit2013\" Action=\"None\" /> <!-- Do not use equality check to check for collection size. --> \r\n  </Rules> \r\n</RuleSet> \r\n```",
              "createdAt": "2020-09-28T16:44:07Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,416 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+  <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\">\n+    <Rule Id=\"CA1000\" Action=\"None\" />\n+    <Rule Id=\"CA1001\" Action=\"None\" />\n+    <Rule Id=\"CA1002\" Action=\"None\" />\n+    <Rule Id=\"CA1003\" Action=\"None\" />\n+    <Rule Id=\"CA1005\" Action=\"None\" />\n+    <Rule Id=\"CA1008\" Action=\"None\" />\n+    <Rule Id=\"CA1010\" Action=\"None\" />\n+    <Rule Id=\"CA1012\" Action=\"None\" />\n+    <Rule Id=\"CA1014\" Action=\"None\" />\n+    <Rule Id=\"CA1016\" Action=\"None\" />\n+    <Rule Id=\"CA1017\" Action=\"None\" />\n+    <Rule Id=\"CA1018\" Action=\"Warning\" />\n+    <Rule Id=\"CA1019\" Action=\"None\" />\n+    <Rule Id=\"CA1021\" Action=\"None\" />\n+    <Rule Id=\"CA1024\" Action=\"None\" />\n+    <Rule Id=\"CA1027\" Action=\"None\" />\n+    <Rule Id=\"CA1028\" Action=\"None\" />\n+    <Rule Id=\"CA1030\" Action=\"None\" />\n+    <Rule Id=\"CA1031\" Action=\"None\" />\n+    <Rule Id=\"CA1032\" Action=\"None\" />\n+    <Rule Id=\"CA1033\" Action=\"None\" />\n+    <Rule Id=\"CA1034\" Action=\"None\" />\n+    <Rule Id=\"CA1036\" Action=\"None\" />\n+    <Rule Id=\"CA1040\" Action=\"None\" />\n+    <Rule Id=\"CA1041\" Action=\"None\" />\n+    <Rule Id=\"CA1043\" Action=\"None\" />\n+    <Rule Id=\"CA1044\" Action=\"None\" />\n+    <Rule Id=\"CA1045\" Action=\"None\" />\n+    <Rule Id=\"CA1046\" Action=\"None\" />\n+    <Rule Id=\"CA1047\" Action=\"Warning\" />\n+    <Rule Id=\"CA1050\" Action=\"Warning\" />\n+    <Rule Id=\"CA1051\" Action=\"None\" />\n+    <Rule Id=\"CA1052\" Action=\"None\" />\n+    <Rule Id=\"CA1054\" Action=\"None\" />\n+    <Rule Id=\"CA1055\" Action=\"None\" />\n+    <Rule Id=\"CA1056\" Action=\"None\" />\n+    <Rule Id=\"CA1058\" Action=\"None\" />\n+    <Rule Id=\"CA1060\" Action=\"None\" />\n+    <Rule Id=\"CA1061\" Action=\"None\" />\n+    <Rule Id=\"CA1062\" Action=\"None\" />\n+    <Rule Id=\"CA1063\" Action=\"None\" />\n+    <Rule Id=\"CA1064\" Action=\"None\" />\n+    <Rule Id=\"CA1065\" Action=\"None\" />\n+    <Rule Id=\"CA1066\" Action=\"None\" />\n+    <Rule Id=\"CA1067\" Action=\"None\" />\n+    <Rule Id=\"CA1068\" Action=\"None\" />\n+    <Rule Id=\"CA1069\" Action=\"None\" />\n+    <Rule Id=\"CA1070\" Action=\"Info\" />\n+    <Rule Id=\"CA1200\" Action=\"Info\" />\n+    <Rule Id=\"CA1303\" Action=\"None\" />\n+    <Rule Id=\"CA1304\" Action=\"None\" />\n+    <Rule Id=\"CA1305\" Action=\"None\" />\n+    <Rule Id=\"CA1307\" Action=\"None\" />\n+    <Rule Id=\"CA1308\" Action=\"None\" />\n+    <Rule Id=\"CA1309\" Action=\"None\" />\n+    <Rule Id=\"CA1401\" Action=\"Warning\" />\n+    <Rule Id=\"CA1417\" Action=\"Warning\" />\n+    <Rule Id=\"CA1501\" Action=\"None\" />\n+    <Rule Id=\"CA1502\" Action=\"None\" />\n+    <Rule Id=\"CA1505\" Action=\"None\" />\n+    <Rule Id=\"CA1506\" Action=\"None\" />\n+    <Rule Id=\"CA1507\" Action=\"Info\" />\n+    <Rule Id=\"CA1508\" Action=\"None\" />\n+    <Rule Id=\"CA1509\" Action=\"None\" />\n+    <Rule Id=\"CA1700\" Action=\"None\" />\n+    <Rule Id=\"CA1707\" Action=\"None\" />\n+    <Rule Id=\"CA1708\" Action=\"None\" />\n+    <Rule Id=\"CA1710\" Action=\"None\" />\n+    <Rule Id=\"CA1711\" Action=\"None\" />\n+    <Rule Id=\"CA1712\" Action=\"None\" />\n+    <Rule Id=\"CA1713\" Action=\"None\" />\n+    <Rule Id=\"CA1715\" Action=\"None\" />\n+    <Rule Id=\"CA1716\" Action=\"None\" />\n+    <Rule Id=\"CA1720\" Action=\"None\" />\n+    <Rule Id=\"CA1721\" Action=\"None\" />\n+    <Rule Id=\"CA1724\" Action=\"None\" />\n+    <Rule Id=\"CA1725\" Action=\"Info\" />\n+    <Rule Id=\"CA1801\" Action=\"None\" />\n+    <Rule Id=\"CA1802\" Action=\"Info\" />\n+    <Rule Id=\"CA1805\" Action=\"Info\" />\n+    <Rule Id=\"CA1806\" Action=\"None\" />\n+    <Rule Id=\"CA1810\" Action=\"Warning\" />\n+    <Rule Id=\"CA1812\" Action=\"None\" />\n+    <Rule Id=\"CA1813\" Action=\"None\" />\n+    <Rule Id=\"CA1814\" Action=\"None\" />\n+    <Rule Id=\"CA1815\" Action=\"None\" />\n+    <Rule Id=\"CA1816\" Action=\"None\" />\n+    <Rule Id=\"CA1819\" Action=\"None\" />\n+    <Rule Id=\"CA1820\" Action=\"None\" />\n+    <Rule Id=\"CA1821\" Action=\"Warning\" />\n+    <Rule Id=\"CA1822\" Action=\"None\" />\n+    <Rule Id=\"CA1823\" Action=\"Info\" />\n+    <Rule Id=\"CA1824\" Action=\"Warning\" />\n+    <Rule Id=\"CA1825\" Action=\"Warning\" />\n+    <Rule Id=\"CA1826\" Action=\"Warning\" />\n+    <Rule Id=\"CA1827\" Action=\"Warning\" />\n+    <Rule Id=\"CA1828\" Action=\"Warning\" />\n+    <Rule Id=\"CA1829\" Action=\"Warning\" />\n+    <Rule Id=\"CA1830\" Action=\"Warning\" />\n+    <Rule Id=\"CA1831\" Action=\"Warning\" />\n+    <Rule Id=\"CA1832\" Action=\"Warning\" />\n+    <Rule Id=\"CA1833\" Action=\"Warning\" />\n+    <Rule Id=\"CA1834\" Action=\"Warning\" />\n+    <Rule Id=\"CA1835\" Action=\"Warning\" />\n+    <Rule Id=\"CA1836\" Action=\"Warning\" />\n+    <Rule Id=\"CA1837\" Action=\"Warning\" />\n+    <Rule Id=\"CA1838\" Action=\"Warning\" />\n+    <Rule Id=\"CA2000\" Action=\"None\" />\n+    <Rule Id=\"CA2002\" Action=\"None\" />\n+    <Rule Id=\"CA2007\" Action=\"Info\" />\n+    <Rule Id=\"CA2008\" Action=\"Warning\" />\n+    <Rule Id=\"CA2009\" Action=\"Warning\" />\n+    <Rule Id=\"CA2011\" Action=\"Warning\" />\n+    <Rule Id=\"CA2012\" Action=\"Warning\" />\n+    <Rule Id=\"CA2013\" Action=\"Warning\" />\n+    <Rule Id=\"CA2014\" Action=\"Warning\" />\n+    <Rule Id=\"CA2015\" Action=\"Warning\" />\n+    <Rule Id=\"CA2016\" Action=\"Warning\" />\n+    <Rule Id=\"CA2100\" Action=\"None\" />\n+    <Rule Id=\"CA2101\" Action=\"None\" />\n+    <Rule Id=\"CA2109\" Action=\"None\" />\n+    <Rule Id=\"CA2119\" Action=\"None\" />\n+    <Rule Id=\"CA2153\" Action=\"None\" />\n+    <Rule Id=\"CA2200\" Action=\"Warning\" />\n+    <Rule Id=\"CA2201\" Action=\"None\" />\n+    <Rule Id=\"CA2207\" Action=\"Warning\" />\n+    <Rule Id=\"CA2208\" Action=\"Warning\" />\n+    <Rule Id=\"CA2211\" Action=\"None\" />\n+    <Rule Id=\"CA2213\" Action=\"None\" />\n+    <Rule Id=\"CA2214\" Action=\"None\" />\n+    <Rule Id=\"CA2215\" Action=\"None\" />\n+    <Rule Id=\"CA2216\" Action=\"None\" />\n+    <Rule Id=\"CA2217\" Action=\"None\" />\n+    <Rule Id=\"CA2218\" Action=\"None\" />\n+    <Rule Id=\"CA2219\" Action=\"None\" />\n+    <Rule Id=\"CA2224\" Action=\"None\" />\n+    <Rule Id=\"CA2225\" Action=\"None\" />\n+    <Rule Id=\"CA2226\" Action=\"None\" />\n+    <Rule Id=\"CA2227\" Action=\"None\" />\n+    <Rule Id=\"CA2229\" Action=\"Warning\" />\n+    <Rule Id=\"CA2231\" Action=\"None\" />\n+    <Rule Id=\"CA2234\" Action=\"None\" />\n+    <Rule Id=\"CA2235\" Action=\"None\" />\n+    <Rule Id=\"CA2237\" Action=\"None\" />\n+    <Rule Id=\"CA2241\" Action=\"Warning\" />\n+    <Rule Id=\"CA2242\" Action=\"Warning\" />\n+    <Rule Id=\"CA2243\" Action=\"None\" />\n+    <Rule Id=\"CA2244\" Action=\"None\" />\n+    <Rule Id=\"CA2245\" Action=\"Warning\" />\n+    <Rule Id=\"CA2246\" Action=\"None\" />\n+    <Rule Id=\"CA2247\" Action=\"Warning\" />\n+    <Rule Id=\"CA2248\" Action=\"Warning\" />\n+    <Rule Id=\"CA2249\" Action=\"Warning\" />\n+    <Rule Id=\"CA2300\" Action=\"None\" />\n+    <Rule Id=\"CA2301\" Action=\"None\" />\n+    <Rule Id=\"CA2302\" Action=\"None\" />\n+    <Rule Id=\"CA2305\" Action=\"None\" />\n+    <Rule Id=\"CA2310\" Action=\"None\" />\n+    <Rule Id=\"CA2311\" Action=\"None\" />\n+    <Rule Id=\"CA2312\" Action=\"None\" />\n+    <Rule Id=\"CA2315\" Action=\"None\" />\n+    <Rule Id=\"CA2321\" Action=\"None\" />\n+    <Rule Id=\"CA2322\" Action=\"None\" />\n+    <Rule Id=\"CA2326\" Action=\"None\" />\n+    <Rule Id=\"CA2327\" Action=\"None\" />\n+    <Rule Id=\"CA2328\" Action=\"None\" />\n+    <Rule Id=\"CA2329\" Action=\"None\" />\n+    <Rule Id=\"CA2330\" Action=\"None\" />\n+    <Rule Id=\"CA2350\" Action=\"None\" />\n+    <Rule Id=\"CA2351\" Action=\"None\" />\n+    <Rule Id=\"CA2352\" Action=\"None\" />\n+    <Rule Id=\"CA2353\" Action=\"None\" />\n+    <Rule Id=\"CA2354\" Action=\"None\" />\n+    <Rule Id=\"CA2355\" Action=\"None\" />\n+    <Rule Id=\"CA2356\" Action=\"None\" />\n+    <Rule Id=\"CA2361\" Action=\"None\" />\n+    <Rule Id=\"CA2362\" Action=\"None\" />\n+    <Rule Id=\"CA3001\" Action=\"None\" />\n+    <Rule Id=\"CA3002\" Action=\"None\" />\n+    <Rule Id=\"CA3003\" Action=\"None\" />\n+    <Rule Id=\"CA3004\" Action=\"None\" />\n+    <Rule Id=\"CA3005\" Action=\"None\" />\n+    <Rule Id=\"CA3006\" Action=\"None\" />\n+    <Rule Id=\"CA3007\" Action=\"None\" />\n+    <Rule Id=\"CA3008\" Action=\"None\" />\n+    <Rule Id=\"CA3009\" Action=\"None\" />\n+    <Rule Id=\"CA3010\" Action=\"None\" />\n+    <Rule Id=\"CA3011\" Action=\"None\" />\n+    <Rule Id=\"CA3012\" Action=\"None\" />\n+    <Rule Id=\"CA3061\" Action=\"Warning\" />\n+    <Rule Id=\"CA3075\" Action=\"Warning\" />\n+    <Rule Id=\"CA3076\" Action=\"Warning\" />\n+    <Rule Id=\"CA3077\" Action=\"Warning\" />\n+    <Rule Id=\"CA3147\" Action=\"Warning\" />\n+    <Rule Id=\"CA5350\" Action=\"Warning\" />\n+    <Rule Id=\"CA5351\" Action=\"Warning\" />\n+    <Rule Id=\"CA5358\" Action=\"None\" />\n+    <Rule Id=\"CA5359\" Action=\"Warning\" />\n+    <Rule Id=\"CA5360\" Action=\"Warning\" />\n+    <Rule Id=\"CA5361\" Action=\"Warning\" />\n+    <Rule Id=\"CA5362\" Action=\"None\" />\n+    <Rule Id=\"CA5363\" Action=\"Warning\" />\n+    <Rule Id=\"CA5364\" Action=\"Warning\" />\n+    <Rule Id=\"CA5365\" Action=\"Warning\" />\n+    <Rule Id=\"CA5366\" Action=\"None\" />\n+    <Rule Id=\"CA5367\" Action=\"None\" />\n+    <Rule Id=\"CA5368\" Action=\"Warning\" />\n+    <Rule Id=\"CA5369\" Action=\"None\" />\n+    <Rule Id=\"CA5370\" Action=\"Warning\" />\n+    <Rule Id=\"CA5371\" Action=\"None\" />\n+    <Rule Id=\"CA5372\" Action=\"None\" />\n+    <Rule Id=\"CA5373\" Action=\"Warning\" />\n+    <Rule Id=\"CA5374\" Action=\"Warning\" />\n+    <Rule Id=\"CA5375\" Action=\"None\" />\n+    <Rule Id=\"CA5376\" Action=\"Warning\" />\n+    <Rule Id=\"CA5377\" Action=\"Warning\" />\n+    <Rule Id=\"CA5378\" Action=\"Warning\" />\n+    <Rule Id=\"CA5379\" Action=\"Warning\" />\n+    <Rule Id=\"CA5380\" Action=\"Warning\" />\n+    <Rule Id=\"CA5381\" Action=\"Warning\" />\n+    <Rule Id=\"CA5382\" Action=\"None\" />\n+    <Rule Id=\"CA5383\" Action=\"None\" />\n+    <Rule Id=\"CA5384\" Action=\"Warning\" />\n+    <Rule Id=\"CA5385\" Action=\"Warning\" />\n+    <Rule Id=\"CA5386\" Action=\"None\" />\n+    <Rule Id=\"CA5387\" Action=\"None\" />\n+    <Rule Id=\"CA5388\" Action=\"None\" />\n+    <Rule Id=\"CA5389\" Action=\"None\" />\n+    <Rule Id=\"CA5390\" Action=\"None\" />\n+    <Rule Id=\"CA5391\" Action=\"None\" />\n+    <Rule Id=\"CA5392\" Action=\"None\" />\n+    <Rule Id=\"CA5393\" Action=\"None\" />\n+    <Rule Id=\"CA5394\" Action=\"None\" />\n+    <Rule Id=\"CA5395\" Action=\"None\" />\n+    <Rule Id=\"CA5396\" Action=\"None\" />\n+    <Rule Id=\"CA5397\" Action=\"None\" />\n+    <Rule Id=\"CA5398\" Action=\"None\" />\n+    <Rule Id=\"CA5399\" Action=\"None\" />\n+    <Rule Id=\"CA5400\" Action=\"None\" />\n+    <Rule Id=\"CA5401\" Action=\"None\" />\n+    <Rule Id=\"CA5402\" Action=\"None\" />\n+    <Rule Id=\"CA5403\" Action=\"None\" />\n+    <Rule Id=\"IL3000\" Action=\"None\" />\n+    <Rule Id=\"IL3001\" Action=\"None\" />\n+  </Rules>\n+  <Rules AnalyzerId=\"Microsoft.CodeQuality.Analyzers\" RuleNamespace=\"Microsoft.CodeQuality.Analyzers\">\n+    <Rule Id=\"CA1714\" Action=\"Info\" />\n+    <Rule Id=\"CA1717\" Action=\"Info\" />\n+    <Rule Id=\"CA1802\" Action=\"Info\" />\n+    <Rule Id=\"CA1805\" Action=\"Info\" />\n+    <Rule Id=\"CA1823\" Action=\"Info\" />\n+    <Rule Id=\"CA2007\" Action=\"Info\" />\n+  </Rules>\n+  <Rules AnalyzerId=\"Microsoft.CodeQuality.CSharp.Analyzers\" RuleNamespace=\"Microsoft.CodeQuality.CSharp.Analyzers\">\n+    <Rule Id=\"CA1200\" Action=\"Info\" />\n+    <Rule Id=\"CA1507\" Action=\"Info\" />\n+  </Rules>\n+  <Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\">\n+    <Rule Id=\"BCL0001\" Action=\"Warning\" />\n+    <Rule Id=\"BCL0010\" Action=\"Warning\" />\n+    <Rule Id=\"BCL0011\" Action=\"Warning\" />\n+    <Rule Id=\"BCL0012\" Action=\"Warning\" />\n+    <Rule Id=\"BCL0015\" Action=\"None\" />\n+    <Rule Id=\"BCL0020\" Action=\"Warning\" />\n+  </Rules>\n+  <Rules AnalyzerId=\"StyleCop.Analyzers\" RuleNamespace=\"StyleCop.Analyzers\">\n+    <Rule Id=\"AD0001\" Action=\"None\" />\n+    <Rule Id=\"SA0001\" Action=\"None\" />\n+    <Rule Id=\"SA1000\" Action=\"Info\" />\n+    <Rule Id=\"SA1001\" Action=\"Info\" />\n+    <Rule Id=\"SA1002\" Action=\"None\" />\n+    <Rule Id=\"SA1003\" Action=\"None\" />\n+    <Rule Id=\"SA1004\" Action=\"None\" />\n+    <Rule Id=\"SA1005\" Action=\"None\" />\n+    <Rule Id=\"SA1008\" Action=\"None\" />\n+    <Rule Id=\"SA1009\" Action=\"None\" />\n+    <Rule Id=\"SA1010\" Action=\"None\" />\n+    <Rule Id=\"SA1011\" Action=\"None\" />\n+    <Rule Id=\"SA1012\" Action=\"None\" />\n+    <Rule Id=\"SA1013\" Action=\"None\" />\n+    <Rule Id=\"SA1015\" Action=\"None\" />\n+    <Rule Id=\"SA1019\" Action=\"Info\" />\n+    <Rule Id=\"SA1021\" Action=\"None\" />\n+    <Rule Id=\"SA1023\" Action=\"None\" />\n+    <Rule Id=\"SA1024\" Action=\"None\" />\n+    <Rule Id=\"SA1025\" Action=\"None\" />\n+    <Rule Id=\"SA1026\" Action=\"Info\" />\n+    <Rule Id=\"SA1027\" Action=\"Info\" />\n+    <Rule Id=\"SA1028\" Action=\"Info\" />\n+    <Rule Id=\"SA1100\" Action=\"None\" />\n+    <Rule Id=\"SA1101\" Action=\"None\" />\n+    <Rule Id=\"SA1106\" Action=\"None\" />\n+    <Rule Id=\"SA1107\" Action=\"None\" />\n+    <Rule Id=\"SA1108\" Action=\"None\" />\n+    <Rule Id=\"SA1110\" Action=\"None\" />\n+    <Rule Id=\"SA1111\" Action=\"None\" />\n+    <Rule Id=\"SA1112\" Action=\"Info\" />\n+    <Rule Id=\"SA1113\" Action=\"Info\" />\n+    <Rule Id=\"SA1114\" Action=\"None\" />\n+    <Rule Id=\"SA1115\" Action=\"Info\" />\n+    <Rule Id=\"SA1116\" Action=\"None\" />\n+    <Rule Id=\"SA1117\" Action=\"None\" />\n+    <Rule Id=\"SA1118\" Action=\"None\" />\n+    <Rule Id=\"SA1119\" Action=\"None\" />\n+    <Rule Id=\"SA1120\" Action=\"None\" />\n+    <Rule Id=\"SA1121\" Action=\"Info\" />\n+    <Rule Id=\"SA1122\" Action=\"None\" />\n+    <Rule Id=\"SA1123\" Action=\"None\" />\n+    <Rule Id=\"SA1124\" Action=\"None\" />\n+    <Rule Id=\"SA1125\" Action=\"None\" />\n+    <Rule Id=\"SA1127\" Action=\"None\" />\n+    <Rule Id=\"SA1128\" Action=\"None\" />\n+    <Rule Id=\"SA1129\" Action=\"Info\" />\n+    <Rule Id=\"SA1130\" Action=\"None\" />\n+    <Rule Id=\"SA1131\" Action=\"None\" />\n+    <Rule Id=\"SA1132\" Action=\"None\" />\n+    <Rule Id=\"SA1133\" Action=\"None\" />\n+    <Rule Id=\"SA1134\" Action=\"None\" />\n+    <Rule Id=\"SA1135\" Action=\"None\" />\n+    <Rule Id=\"SA1136\" Action=\"None\" />\n+    <Rule Id=\"SA1137\" Action=\"None\" />\n+    <Rule Id=\"SA1139\" Action=\"None\" />\n+    <Rule Id=\"SA1200\" Action=\"None\" />\n+    <Rule Id=\"SA1201\" Action=\"None\" />\n+    <Rule Id=\"SA1202\" Action=\"None\" />\n+    <Rule Id=\"SA1203\" Action=\"None\" />\n+    <Rule Id=\"SA1204\" Action=\"None\" />\n+    <Rule Id=\"SA1205\" Action=\"Info\" />\n+    <Rule Id=\"SA1206\" Action=\"Info\" />\n+    <Rule Id=\"SA1208\" Action=\"None\" />\n+    <Rule Id=\"SA1209\" Action=\"None\" />\n+    <Rule Id=\"SA1210\" Action=\"None\" />\n+    <Rule Id=\"SA1211\" Action=\"None\" />\n+    <Rule Id=\"SA1212\" Action=\"Info\" />\n+    <Rule Id=\"SA1214\" Action=\"None\" />\n+    <Rule Id=\"SA1216\" Action=\"None\" />\n+    <Rule Id=\"SA1300\" Action=\"None\" />\n+    <Rule Id=\"SA1303\" Action=\"None\" />\n+    <Rule Id=\"SA1304\" Action=\"None\" />\n+    <Rule Id=\"SA1306\" Action=\"None\" />\n+    <Rule Id=\"SA1307\" Action=\"None\" />\n+    <Rule Id=\"SA1308\" Action=\"None\" />\n+    <Rule Id=\"SA1309\" Action=\"None\" />\n+    <Rule Id=\"SA1310\" Action=\"None\" />\n+    <Rule Id=\"SA1311\" Action=\"None\" />\n+    <Rule Id=\"SA1312\" Action=\"None\" />\n+    <Rule Id=\"SA1313\" Action=\"None\" />\n+    <Rule Id=\"SA1314\" Action=\"None\" />\n+    <Rule Id=\"SA1316\" Action=\"None\" />\n+    <Rule Id=\"SA1400\" Action=\"Info\" />\n+    <Rule Id=\"SA1401\" Action=\"None\" />\n+    <Rule Id=\"SA1402\" Action=\"None\" />\n+    <Rule Id=\"SA1403\" Action=\"None\" />\n+    <Rule Id=\"SA1404\" Action=\"Info\" />\n+    <Rule Id=\"SA1405\" Action=\"None\" />\n+    <Rule Id=\"SA1407\" Action=\"None\" />\n+    <Rule Id=\"SA1408\" Action=\"None\" />\n+    <Rule Id=\"SA1410\" Action=\"Info\" />\n+    <Rule Id=\"SA1411\" Action=\"Info\" />\n+    <Rule Id=\"SA1413\" Action=\"None\" />\n+    <Rule Id=\"SA1414\" Action=\"None\" />\n+    <Rule Id=\"SA1500\" Action=\"None\" />\n+    <Rule Id=\"SA1501\" Action=\"None\" />\n+    <Rule Id=\"SA1502\" Action=\"None\" />\n+    <Rule Id=\"SA1503\" Action=\"None\" />\n+    <Rule Id=\"SA1504\" Action=\"None\" />\n+    <Rule Id=\"SA1505\" Action=\"None\" />\n+    <Rule Id=\"SA1506\" Action=\"None\" />\n+    <Rule Id=\"SA1507\" Action=\"None\" />\n+    <Rule Id=\"SA1508\" Action=\"None\" />\n+    <Rule Id=\"SA1509\" Action=\"None\" />\n+    <Rule Id=\"SA1510\" Action=\"None\" />\n+    <Rule Id=\"SA1512\" Action=\"None\" />\n+    <Rule Id=\"SA1513\" Action=\"None\" />\n+    <Rule Id=\"SA1514\" Action=\"None\" />\n+    <Rule Id=\"SA1515\" Action=\"None\" />\n+    <Rule Id=\"SA1516\" Action=\"None\" />\n+    <Rule Id=\"SA1517\" Action=\"Info\" />\n+    <Rule Id=\"SA1519\" Action=\"None\" />\n+    <Rule Id=\"SA1520\" Action=\"None\" />\n+    <Rule Id=\"SA1600\" Action=\"None\" />\n+    <Rule Id=\"SA1601\" Action=\"None\" />\n+    <Rule Id=\"SA1602\" Action=\"None\" />\n+    <Rule Id=\"SA1604\" Action=\"None\" />\n+    <Rule Id=\"SA1605\" Action=\"None\" />\n+    <Rule Id=\"SA1606\" Action=\"None\" />\n+    <Rule Id=\"SA1608\" Action=\"None\" />\n+    <Rule Id=\"SA1610\" Action=\"None\" />\n+    <Rule Id=\"SA1611\" Action=\"None\" />\n+    <Rule Id=\"SA1612\" Action=\"None\" />\n+    <Rule Id=\"SA1614\" Action=\"None\" />\n+    <Rule Id=\"SA1615\" Action=\"None\" />\n+    <Rule Id=\"SA1616\" Action=\"None\" />\n+    <Rule Id=\"SA1617\" Action=\"Info\" />\n+    <Rule Id=\"SA1618\" Action=\"None\" />\n+    <Rule Id=\"SA1619\" Action=\"None\" />\n+    <Rule Id=\"SA1622\" Action=\"None\" />\n+    <Rule Id=\"SA1623\" Action=\"None\" />\n+    <Rule Id=\"SA1624\" Action=\"None\" />\n+    <Rule Id=\"SA1625\" Action=\"None\" />\n+    <Rule Id=\"SA1626\" Action=\"None\" />\n+    <Rule Id=\"SA1627\" Action=\"None\" />\n+    <Rule Id=\"SA1629\" Action=\"None\" />\n+    <Rule Id=\"SA1633\" Action=\"None\" />\n+    <Rule Id=\"SA1642\" Action=\"None\" />\n+    <Rule Id=\"SA1643\" Action=\"None\" />\n+    <Rule Id=\"SA1649\" Action=\"None\" />\n+  </Rules>\n+  <Rules AnalyzerId=\"xunit.analyzers\" RuleNamespace=\"xunit.analyzers\">\n+    <Rule Id=\"xUnit2013\" Action=\"None\" />\n+    <Rule Id=\"xUnit2017\" Action=\"None\" />\n+  </Rules>\n+</RuleSet>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n```\r\n\r\nExtra line",
              "createdAt": "2020-12-02T15:01:34Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,343 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+  <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\">",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n      <Rule Id=\"CA1032\" Action=\"None\" />\r\n      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \r\n      <Rule Id=\"CA1034\" Action=\"None\" />\r\n```",
              "createdAt": "2021-07-12T23:49:40Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+\t  <Rule Id=\"CA1032\" Action=\"Info\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+\t  <Rule Id=\"CA1034\" Action=\"Info\" />",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n      <Rule Id=\"CA1707\" Action=\"None\" />\r\n```",
              "createdAt": "2021-07-12T23:50:32Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+\t  <Rule Id=\"CA1032\" Action=\"Info\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+\t  <Rule Id=\"CA1034\" Action=\"Info\" />\n+      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \n+      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \n+      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \n+      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \n+      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \n+      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \n+      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \n+      <Rule Id=\"CA1050\" Action=\"Info\" />             <!-- Declare types in namespaces --> \n+      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \n+      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \n+      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \n+      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \n+      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \n+      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \n+      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \n+      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \n+      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \n+      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \n+      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \n+      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \n+      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \n+      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \n+      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \n+      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \n+      <Rule Id=\"CA1200\" Action=\"Info\" />             <!-- Avoid using cref tags with a prefix --> \n+      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \n+      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \n+      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \n+      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \n+      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \n+      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \n+      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \n+      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \n+      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \n+      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \n+      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \n+      <Rule Id=\"CA1507\" Action=\"Info\" />             <!-- Use nameof to express symbol names --> \n+      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \n+      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \n+      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \n+\t  <Rule Id=\"CA1707\" Action=\"Info\" />",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n      <Rule Id=\"CA1714\" Action=\"None\" />\r\n      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \r\n      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \r\n      <Rule Id=\"CA1717\" Action=\"None\" />\r\n```",
              "createdAt": "2021-07-12T23:50:48Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+\t  <Rule Id=\"CA1032\" Action=\"Info\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+\t  <Rule Id=\"CA1034\" Action=\"Info\" />\n+      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \n+      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \n+      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \n+      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \n+      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \n+      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \n+      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \n+      <Rule Id=\"CA1050\" Action=\"Info\" />             <!-- Declare types in namespaces --> \n+      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \n+      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \n+      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \n+      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \n+      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \n+      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \n+      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \n+      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \n+      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \n+      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \n+      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \n+      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \n+      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \n+      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \n+      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \n+      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \n+      <Rule Id=\"CA1200\" Action=\"Info\" />             <!-- Avoid using cref tags with a prefix --> \n+      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \n+      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \n+      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \n+      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \n+      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \n+      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \n+      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \n+      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \n+      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \n+      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \n+      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \n+      <Rule Id=\"CA1507\" Action=\"Info\" />             <!-- Use nameof to express symbol names --> \n+      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \n+      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \n+      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \n+\t  <Rule Id=\"CA1707\" Action=\"Info\" />\n+      <Rule Id=\"CA1710\" Action=\"None\" />             <!-- Identifiers should have correct suffix --> \n+      <Rule Id=\"CA1711\" Action=\"None\" />             <!-- Identifiers should not have incorrect suffix --> \n+      <Rule Id=\"CA1712\" Action=\"None\" />             <!-- Do not prefix enum values with type name --> \n+\t  <Rule Id=\"CA1714\" Action=\"Info\" />\n+      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \n+      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \n+\t  <Rule Id=\"CA1717\" Action=\"Info\" />",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n      <Rule Id=\"CA1806\" Action=\"None\" />\r\n      <Rule Id=\"CA1810\" Action=\"Info\" />             <!-- Initialize reference type static fields inline --> \r\n      <Rule Id=\"CA1812\" Action=\"None\" />             <!-- Avoid uninstantiated internal classes --> \r\n      <Rule Id=\"CA1814\" Action=\"None\" />\r\n      <Rule Id=\"CA1815\" Action=\"None\" />\r\n      <Rule Id=\"CA1816\" Action=\"None\" />             <!-- Dispose methods should call SuppressFinalize --> \r\n      <Rule Id=\"CA1819\" Action=\"None\" />\r\n```",
              "createdAt": "2021-07-12T23:51:25Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+\t  <Rule Id=\"CA1032\" Action=\"Info\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+\t  <Rule Id=\"CA1034\" Action=\"Info\" />\n+      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \n+      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \n+      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \n+      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \n+      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \n+      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \n+      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \n+      <Rule Id=\"CA1050\" Action=\"Info\" />             <!-- Declare types in namespaces --> \n+      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \n+      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \n+      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \n+      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \n+      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \n+      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \n+      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \n+      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \n+      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \n+      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \n+      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \n+      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \n+      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \n+      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \n+      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \n+      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \n+      <Rule Id=\"CA1200\" Action=\"Info\" />             <!-- Avoid using cref tags with a prefix --> \n+      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \n+      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \n+      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \n+      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \n+      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \n+      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \n+      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \n+      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \n+      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \n+      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \n+      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \n+      <Rule Id=\"CA1507\" Action=\"Info\" />             <!-- Use nameof to express symbol names --> \n+      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \n+      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \n+      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \n+\t  <Rule Id=\"CA1707\" Action=\"Info\" />\n+      <Rule Id=\"CA1710\" Action=\"None\" />             <!-- Identifiers should have correct suffix --> \n+      <Rule Id=\"CA1711\" Action=\"None\" />             <!-- Identifiers should not have incorrect suffix --> \n+      <Rule Id=\"CA1712\" Action=\"None\" />             <!-- Do not prefix enum values with type name --> \n+\t  <Rule Id=\"CA1714\" Action=\"Info\" />\n+      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \n+      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \n+\t  <Rule Id=\"CA1717\" Action=\"Info\" />\n+      <Rule Id=\"CA1720\" Action=\"None\" />             <!-- Identifier contains type name --> \n+      <Rule Id=\"CA1721\" Action=\"None\" />             <!-- Property names should not match get methods --> \n+      <Rule Id=\"CA1724\" Action=\"None\" />             <!-- Type names should not match namespaces --> \n+      <Rule Id=\"CA1801\" Action=\"None\" />             <!-- Review unused parameters --> \n+      <Rule Id=\"CA1802\" Action=\"Info\" />             <!-- Use literals where appropriate --> \n+      <Rule Id=\"CA1805\" Action=\"Info\" />             <!-- Do not initialize unnecessarily --> \n+\t  <Rule Id=\"CA1806\" Action=\"Info\" />\n+      <Rule Id=\"CA1810\" Action=\"Info\" />             <!-- Initialize reference type static fields inline --> \n+      <Rule Id=\"CA1812\" Action=\"None\" />             <!-- Avoid uninstantiated internal classes --> \n+\t  <Rule Id=\"CA1814\" Action=\"Info\" />\n+\t  <Rule Id=\"CA1815\" Action=\"Info\" />\n+      <Rule Id=\"CA1816\" Action=\"None\" />             <!-- Dispose methods should call SuppressFinalize --> \n+\t  <Rule Id=\"CA1819\" Action=\"Info\" />",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n      <Rule Id=\"CA2219\" Action=\"None\" />\r\n```",
              "createdAt": "2021-07-12T23:51:40Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+\t  <Rule Id=\"CA1032\" Action=\"Info\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+\t  <Rule Id=\"CA1034\" Action=\"Info\" />\n+      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \n+      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \n+      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \n+      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \n+      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \n+      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \n+      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \n+      <Rule Id=\"CA1050\" Action=\"Info\" />             <!-- Declare types in namespaces --> \n+      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \n+      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \n+      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \n+      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \n+      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \n+      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \n+      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \n+      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \n+      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \n+      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \n+      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \n+      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \n+      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \n+      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \n+      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \n+      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \n+      <Rule Id=\"CA1200\" Action=\"Info\" />             <!-- Avoid using cref tags with a prefix --> \n+      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \n+      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \n+      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \n+      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \n+      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \n+      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \n+      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \n+      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \n+      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \n+      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \n+      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \n+      <Rule Id=\"CA1507\" Action=\"Info\" />             <!-- Use nameof to express symbol names --> \n+      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \n+      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \n+      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \n+\t  <Rule Id=\"CA1707\" Action=\"Info\" />\n+      <Rule Id=\"CA1710\" Action=\"None\" />             <!-- Identifiers should have correct suffix --> \n+      <Rule Id=\"CA1711\" Action=\"None\" />             <!-- Identifiers should not have incorrect suffix --> \n+      <Rule Id=\"CA1712\" Action=\"None\" />             <!-- Do not prefix enum values with type name --> \n+\t  <Rule Id=\"CA1714\" Action=\"Info\" />\n+      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \n+      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \n+\t  <Rule Id=\"CA1717\" Action=\"Info\" />\n+      <Rule Id=\"CA1720\" Action=\"None\" />             <!-- Identifier contains type name --> \n+      <Rule Id=\"CA1721\" Action=\"None\" />             <!-- Property names should not match get methods --> \n+      <Rule Id=\"CA1724\" Action=\"None\" />             <!-- Type names should not match namespaces --> \n+      <Rule Id=\"CA1801\" Action=\"None\" />             <!-- Review unused parameters --> \n+      <Rule Id=\"CA1802\" Action=\"Info\" />             <!-- Use literals where appropriate --> \n+      <Rule Id=\"CA1805\" Action=\"Info\" />             <!-- Do not initialize unnecessarily --> \n+\t  <Rule Id=\"CA1806\" Action=\"Info\" />\n+      <Rule Id=\"CA1810\" Action=\"Info\" />             <!-- Initialize reference type static fields inline --> \n+      <Rule Id=\"CA1812\" Action=\"None\" />             <!-- Avoid uninstantiated internal classes --> \n+\t  <Rule Id=\"CA1814\" Action=\"Info\" />\n+\t  <Rule Id=\"CA1815\" Action=\"Info\" />\n+      <Rule Id=\"CA1816\" Action=\"None\" />             <!-- Dispose methods should call SuppressFinalize --> \n+\t  <Rule Id=\"CA1819\" Action=\"Info\" />\n+      <Rule Id=\"CA1820\" Action=\"None\" />             <!-- Test for empty strings using string length --> \n+      <Rule Id=\"CA1821\" Action=\"Warning\" />          <!-- Remove empty Finalizers --> \n+      <Rule Id=\"CA1822\" Action=\"None\" />             <!-- Mark members as static --> \n+      <Rule Id=\"CA1823\" Action=\"Info\" />             <!-- Avoid unused private fields --> \n+      <Rule Id=\"CA1824\" Action=\"Warning\" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->\n+      <Rule Id=\"CA1825\" Action=\"Info\" />             <!-- Avoid zero-length array allocations. --> \n+      <Rule Id=\"CA1827\" Action=\"Warning\" />          <!-- Do not use Count() or LongCount() when Any() can be used --> \n+      <Rule Id=\"CA1828\" Action=\"Warning\" />          <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used --> \n+      <Rule Id=\"CA1829\" Action=\"Info\" />             <!-- Use Length/Count property instead of Count() when available --> \n+      <Rule Id=\"CA1830\" Action=\"Warning\" />          <!-- Prefer strongly-typed Append and Insert method overloads on StringBuilder. --> \n+      <Rule Id=\"CA1831\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1832\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1833\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1834\" Action=\"Info\" />             <!-- Consider using 'StringBuilder.Append(char)' when applicable. --> \n+      <Rule Id=\"CA1835\" Action=\"Info\" />             <!-- Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync' --> \n+      <Rule Id=\"CA1836\" Action=\"Info\" />             <!-- Prefer IsEmpty over Count --> \n+      <Rule Id=\"CA1837\" Action=\"Info\" />             <!-- Use 'Environment.ProcessId' -->  \n+      <Rule Id=\"CA1838\" Action=\"Info\" />             <!-- Avoid 'StringBuilder' parameters for P/Invokes --> \n+      <Rule Id=\"CA2000\" Action=\"None\" />             <!-- Dispose objects before losing scope --> \n+      <Rule Id=\"CA2002\" Action=\"None\" />             <!-- Do not lock on objects with weak identity --> \n+      <Rule Id=\"CA2007\" Action=\"Info\" />             <!-- Consider calling ConfigureAwait on the awaited task --> \n+      <Rule Id=\"CA2008\" Action=\"Info\" />             <!-- Do not create tasks without passing a TaskScheduler --> \n+      <Rule Id=\"CA2009\" Action=\"Warning\" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value --> \n+      <Rule Id=\"CA2011\" Action=\"Warning\" />          <!-- Avoid infinite recursion --> \n+      <Rule Id=\"CA2012\" Action=\"Warning\" />          <!-- Use ValueTasks correctly --> \n+      <Rule Id=\"CA2013\" Action=\"Warning\" />          <!-- Do not use ReferenceEquals with value types --> \n+      <Rule Id=\"CA2014\" Action=\"Warning\" />          <!-- Do not use stackalloc in loops. --> \n+      <Rule Id=\"CA2015\" Action=\"Warning\" />          <!-- Do not define finalizers for types derived from MemoryManager<T> --> \n+      <Rule Id=\"CA2016\" Action=\"Info\" />             <!-- Forward the 'CancellationToken' parameter to methods that take one --> \n+      <Rule Id=\"CA2100\" Action=\"None\" />             <!-- Review SQL queries for security vulnerabilities --> \n+      <Rule Id=\"CA2101\" Action=\"None\" />             <!-- Specify marshaling for P/Invoke string arguments --> \n+      <Rule Id=\"CA2109\" Action=\"None\" />             <!-- Review visible event handlers --> \n+      <Rule Id=\"CA2119\" Action=\"None\" />             <!-- Seal methods that satisfy private interfaces --> \n+      <Rule Id=\"CA2153\" Action=\"None\" />             <!-- Do Not Catch Corrupted State Exceptions --> \n+      <Rule Id=\"CA2201\" Action=\"None\" />             <!-- Do not raise reserved exception types --> \n+      <Rule Id=\"CA2208\" Action=\"Info\" />             <!-- Instantiate argument exceptions correctly --> \n+      <Rule Id=\"CA2211\" Action=\"None\" />             <!-- Non-constant fields should not be visible --> \n+      <Rule Id=\"CA2213\" Action=\"None\" />             <!-- Disposable fields should be disposed --> \n+      <Rule Id=\"CA2215\" Action=\"None\" />             <!-- Dispose methods should call base class dispose --> \n+      <Rule Id=\"CA2216\" Action=\"None\" />             <!-- Disposable types should declare finalizer --> \n+\t  <Rule Id=\"CA2219\" Action=\"None\" />",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n      <Rule Id=\"SA1625\" Action=\"None\" />\r\n```",
              "createdAt": "2021-07-12T23:52:56Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+\t  <Rule Id=\"CA1032\" Action=\"Info\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+\t  <Rule Id=\"CA1034\" Action=\"Info\" />\n+      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \n+      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \n+      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \n+      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \n+      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \n+      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \n+      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \n+      <Rule Id=\"CA1050\" Action=\"Info\" />             <!-- Declare types in namespaces --> \n+      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \n+      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \n+      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \n+      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \n+      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \n+      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \n+      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \n+      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \n+      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \n+      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \n+      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \n+      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \n+      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \n+      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \n+      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \n+      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \n+      <Rule Id=\"CA1200\" Action=\"Info\" />             <!-- Avoid using cref tags with a prefix --> \n+      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \n+      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \n+      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \n+      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \n+      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \n+      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \n+      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \n+      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \n+      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \n+      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \n+      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \n+      <Rule Id=\"CA1507\" Action=\"Info\" />             <!-- Use nameof to express symbol names --> \n+      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \n+      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \n+      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \n+\t  <Rule Id=\"CA1707\" Action=\"Info\" />\n+      <Rule Id=\"CA1710\" Action=\"None\" />             <!-- Identifiers should have correct suffix --> \n+      <Rule Id=\"CA1711\" Action=\"None\" />             <!-- Identifiers should not have incorrect suffix --> \n+      <Rule Id=\"CA1712\" Action=\"None\" />             <!-- Do not prefix enum values with type name --> \n+\t  <Rule Id=\"CA1714\" Action=\"Info\" />\n+      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \n+      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \n+\t  <Rule Id=\"CA1717\" Action=\"Info\" />\n+      <Rule Id=\"CA1720\" Action=\"None\" />             <!-- Identifier contains type name --> \n+      <Rule Id=\"CA1721\" Action=\"None\" />             <!-- Property names should not match get methods --> \n+      <Rule Id=\"CA1724\" Action=\"None\" />             <!-- Type names should not match namespaces --> \n+      <Rule Id=\"CA1801\" Action=\"None\" />             <!-- Review unused parameters --> \n+      <Rule Id=\"CA1802\" Action=\"Info\" />             <!-- Use literals where appropriate --> \n+      <Rule Id=\"CA1805\" Action=\"Info\" />             <!-- Do not initialize unnecessarily --> \n+\t  <Rule Id=\"CA1806\" Action=\"Info\" />\n+      <Rule Id=\"CA1810\" Action=\"Info\" />             <!-- Initialize reference type static fields inline --> \n+      <Rule Id=\"CA1812\" Action=\"None\" />             <!-- Avoid uninstantiated internal classes --> \n+\t  <Rule Id=\"CA1814\" Action=\"Info\" />\n+\t  <Rule Id=\"CA1815\" Action=\"Info\" />\n+      <Rule Id=\"CA1816\" Action=\"None\" />             <!-- Dispose methods should call SuppressFinalize --> \n+\t  <Rule Id=\"CA1819\" Action=\"Info\" />\n+      <Rule Id=\"CA1820\" Action=\"None\" />             <!-- Test for empty strings using string length --> \n+      <Rule Id=\"CA1821\" Action=\"Warning\" />          <!-- Remove empty Finalizers --> \n+      <Rule Id=\"CA1822\" Action=\"None\" />             <!-- Mark members as static --> \n+      <Rule Id=\"CA1823\" Action=\"Info\" />             <!-- Avoid unused private fields --> \n+      <Rule Id=\"CA1824\" Action=\"Warning\" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->\n+      <Rule Id=\"CA1825\" Action=\"Info\" />             <!-- Avoid zero-length array allocations. --> \n+      <Rule Id=\"CA1827\" Action=\"Warning\" />          <!-- Do not use Count() or LongCount() when Any() can be used --> \n+      <Rule Id=\"CA1828\" Action=\"Warning\" />          <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used --> \n+      <Rule Id=\"CA1829\" Action=\"Info\" />             <!-- Use Length/Count property instead of Count() when available --> \n+      <Rule Id=\"CA1830\" Action=\"Warning\" />          <!-- Prefer strongly-typed Append and Insert method overloads on StringBuilder. --> \n+      <Rule Id=\"CA1831\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1832\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1833\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1834\" Action=\"Info\" />             <!-- Consider using 'StringBuilder.Append(char)' when applicable. --> \n+      <Rule Id=\"CA1835\" Action=\"Info\" />             <!-- Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync' --> \n+      <Rule Id=\"CA1836\" Action=\"Info\" />             <!-- Prefer IsEmpty over Count --> \n+      <Rule Id=\"CA1837\" Action=\"Info\" />             <!-- Use 'Environment.ProcessId' -->  \n+      <Rule Id=\"CA1838\" Action=\"Info\" />             <!-- Avoid 'StringBuilder' parameters for P/Invokes --> \n+      <Rule Id=\"CA2000\" Action=\"None\" />             <!-- Dispose objects before losing scope --> \n+      <Rule Id=\"CA2002\" Action=\"None\" />             <!-- Do not lock on objects with weak identity --> \n+      <Rule Id=\"CA2007\" Action=\"Info\" />             <!-- Consider calling ConfigureAwait on the awaited task --> \n+      <Rule Id=\"CA2008\" Action=\"Info\" />             <!-- Do not create tasks without passing a TaskScheduler --> \n+      <Rule Id=\"CA2009\" Action=\"Warning\" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value --> \n+      <Rule Id=\"CA2011\" Action=\"Warning\" />          <!-- Avoid infinite recursion --> \n+      <Rule Id=\"CA2012\" Action=\"Warning\" />          <!-- Use ValueTasks correctly --> \n+      <Rule Id=\"CA2013\" Action=\"Warning\" />          <!-- Do not use ReferenceEquals with value types --> \n+      <Rule Id=\"CA2014\" Action=\"Warning\" />          <!-- Do not use stackalloc in loops. --> \n+      <Rule Id=\"CA2015\" Action=\"Warning\" />          <!-- Do not define finalizers for types derived from MemoryManager<T> --> \n+      <Rule Id=\"CA2016\" Action=\"Info\" />             <!-- Forward the 'CancellationToken' parameter to methods that take one --> \n+      <Rule Id=\"CA2100\" Action=\"None\" />             <!-- Review SQL queries for security vulnerabilities --> \n+      <Rule Id=\"CA2101\" Action=\"None\" />             <!-- Specify marshaling for P/Invoke string arguments --> \n+      <Rule Id=\"CA2109\" Action=\"None\" />             <!-- Review visible event handlers --> \n+      <Rule Id=\"CA2119\" Action=\"None\" />             <!-- Seal methods that satisfy private interfaces --> \n+      <Rule Id=\"CA2153\" Action=\"None\" />             <!-- Do Not Catch Corrupted State Exceptions --> \n+      <Rule Id=\"CA2201\" Action=\"None\" />             <!-- Do not raise reserved exception types --> \n+      <Rule Id=\"CA2208\" Action=\"Info\" />             <!-- Instantiate argument exceptions correctly --> \n+      <Rule Id=\"CA2211\" Action=\"None\" />             <!-- Non-constant fields should not be visible --> \n+      <Rule Id=\"CA2213\" Action=\"None\" />             <!-- Disposable fields should be disposed --> \n+      <Rule Id=\"CA2215\" Action=\"None\" />             <!-- Dispose methods should call base class dispose --> \n+      <Rule Id=\"CA2216\" Action=\"None\" />             <!-- Disposable types should declare finalizer --> \n+\t  <Rule Id=\"CA2219\" Action=\"None\" />\n+      <Rule Id=\"CA2224\" Action=\"None\" />             <!-- Override Equals on overloading operator equals --> \n+      <Rule Id=\"CA2225\" Action=\"None\" />             <!-- Operator overloads have named alternates --> \n+      <Rule Id=\"CA2226\" Action=\"None\" />             <!-- Operators should have symmetrical overloads --> \n+      <Rule Id=\"CA2227\" Action=\"None\" />             <!-- Collection properties should be read only --> \n+      <Rule Id=\"CA2231\" Action=\"None\" />             <!-- Overload operator equals on overriding value type Equals --> \n+      <Rule Id=\"CA2234\" Action=\"None\" />             <!-- Pass system uri objects instead of strings --> \n+      <Rule Id=\"CA2235\" Action=\"None\" />             <!-- Mark all non-serializable fields --> \n+      <Rule Id=\"CA2241\" Action=\"Info\" />             <!-- Provide correct arguments to formatting methods --> \n+      <Rule Id=\"CA2242\" Action=\"Warning\" />          <!-- Test for NaN correctly --> \n+      <Rule Id=\"CA2243\" Action=\"None\" />             <!-- Attribute string literals should parse correctly --> \n+      <Rule Id=\"CA2244\" Action=\"None\" />             <!-- Do not duplicate indexed element initializations --> \n+      <Rule Id=\"CA2245\" Action=\"Warning\" />          <!-- Do not assign a property to itself. --> \n+      <Rule Id=\"CA2246\" Action=\"None\" />             <!-- Assigning symbol and its member in the same statement. --> \n+      <Rule Id=\"CA2247\" Action=\"Warning\" />          <!-- Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum. --> \n+      <Rule Id=\"CA2248\" Action=\"Warning\" />          <!-- Provide correct 'enum' argument to 'Enum.HasFlag' --> \n+      <Rule Id=\"CA2249\" Action=\"Info\" />             <!-- Consider using 'string.Contains' instead of 'string.IndexOf' --> \n+      <Rule Id=\"CA2300\" Action=\"None\" />             <!-- Do not use insecure deserializer BinaryFormatter --> \n+      <Rule Id=\"CA2301\" Action=\"None\" />             <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder --> \n+      <Rule Id=\"CA2302\" Action=\"None\" />             <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize --> \n+      <Rule Id=\"CA2305\" Action=\"None\" />             <!-- Do not use insecure deserializer LosFormatter --> \n+      <Rule Id=\"CA2310\" Action=\"None\" />             <!-- Do not use insecure deserializer NetDataContractSerializer --> \n+      <Rule Id=\"CA2311\" Action=\"None\" />             <!-- Do not deserialize without first setting NetDataContractSerializer.Binder --> \n+      <Rule Id=\"CA2312\" Action=\"None\" />             <!-- Ensure NetDataContractSerializer.Binder is set before deserializing --> \n+      <Rule Id=\"CA2315\" Action=\"None\" />             <!-- Do not use insecure deserializer ObjectStateFormatter --> \n+      <Rule Id=\"CA2321\" Action=\"None\" />             <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver --> \n+      <Rule Id=\"CA2322\" Action=\"None\" />             <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing --> \n+      <Rule Id=\"CA2326\" Action=\"None\" />             <!-- Do not use TypeNameHandling values other than None --> \n+      <Rule Id=\"CA2350\" Action=\"None\" />             <!-- Do not use DataTable.ReadXml() with untrusted data --> \n+      <Rule Id=\"CA2351\" Action=\"None\" />             <!-- Do not use DataSet.ReadXml() with untrusted data --> \n+      <Rule Id=\"CA2352\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA2353\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type --> \n+      <Rule Id=\"CA2354\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA2355\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type found in deserializable object graph --> \n+      <Rule Id=\"CA2356\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type in web deserializable object graph --> \n+      <Rule Id=\"CA2361\" Action=\"None\" />             <!-- Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data --> \n+      <Rule Id=\"CA2362\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA3001\" Action=\"None\" />             <!-- Review code for SQL injection vulnerabilities --> \n+      <Rule Id=\"CA3002\" Action=\"None\" />             <!-- Review code for XSS vulnerabilities --> \n+      <Rule Id=\"CA3003\" Action=\"None\" />             <!-- Review code for file path injection vulnerabilities --> \n+      <Rule Id=\"CA3004\" Action=\"None\" />             <!-- Review code for information disclosure vulnerabilities --> \n+      <Rule Id=\"CA3005\" Action=\"None\" />             <!-- Review code for LDAP injection vulnerabilities --> \n+      <Rule Id=\"CA3006\" Action=\"None\" />             <!-- Review code for process command injection vulnerabilities --> \n+      <Rule Id=\"CA3007\" Action=\"None\" />             <!-- Review code for open redirect vulnerabilities --> \n+      <Rule Id=\"CA3008\" Action=\"None\" />             <!-- Review code for XPath injection vulnerabilities --> \n+      <Rule Id=\"CA3009\" Action=\"None\" />             <!-- Review code for XML injection vulnerabilities --> \n+      <Rule Id=\"CA3010\" Action=\"None\" />             <!-- Review code for XAML injection vulnerabilities --> \n+      <Rule Id=\"CA3011\" Action=\"None\" />             <!-- Review code for DLL injection vulnerabilities --> \n+      <Rule Id=\"CA3012\" Action=\"None\" />             <!-- Review code for regex injection vulnerabilities --> \n+      <Rule Id=\"CA3061\" Action=\"Warning\" />          <!-- Do Not Add Schema By URL --> \n+      <Rule Id=\"CA3075\" Action=\"Warning\" />          <!-- Insecure DTD processing in XML --> \n+      <Rule Id=\"CA3076\" Action=\"Warning\" />          <!-- Insecure XSLT script processing. --> \n+      <Rule Id=\"CA3077\" Action=\"Warning\" />          <!-- Insecure Processing in API Design, XmlDocument and XmlTextReader --> \n+      <Rule Id=\"CA3147\" Action=\"Warning\" />          <!-- Mark Verb Handlers With Validate Antiforgery Token --> \n+      <Rule Id=\"CA5350\" Action=\"Warning\" />          <!-- Do Not Use Weak Cryptographic Algorithms --> \n+      <Rule Id=\"CA5351\" Action=\"Warning\" />          <!-- Do Not Use Broken Cryptographic Algorithms --> \n+      <Rule Id=\"CA5358\" Action=\"None\" />             <!-- Review cipher mode usage with cryptography experts --> \n+      <Rule Id=\"CA5359\" Action=\"Warning\" />          <!-- Do Not Disable Certificate Validation --> \n+      <Rule Id=\"CA5360\" Action=\"Warning\" />          <!-- Do Not Call Dangerous Methods In Deserialization --> \n+      <Rule Id=\"CA5361\" Action=\"Warning\" />          <!-- Do Not Disable SChannel Use of Strong Crypto --> \n+      <Rule Id=\"CA5362\" Action=\"None\" />             <!-- Potential reference cycle in deserialized object graph --> \n+      <Rule Id=\"CA5363\" Action=\"Warning\" />          <!-- Do Not Disable Request Validation --> \n+      <Rule Id=\"CA5364\" Action=\"Warning\" />          <!-- Do Not Use Deprecated Security Protocols --> \n+      <Rule Id=\"CA5365\" Action=\"Warning\" />          <!-- Do Not Disable HTTP Header Checking --> \n+      <Rule Id=\"CA5366\" Action=\"None\" />             <!-- Use XmlReader For DataSet Read Xml --> \n+      <Rule Id=\"CA5367\" Action=\"None\" />             <!-- Do Not Serialize Types With Pointer Fields --> \n+      <Rule Id=\"CA5368\" Action=\"Warning\" />          <!-- Set ViewStateUserKey For Classes Derived From Page --> \n+      <Rule Id=\"CA5369\" Action=\"None\" />             <!-- Use XmlReader For Deserialize --> \n+      <Rule Id=\"CA5370\" Action=\"Warning\" />          <!-- Use XmlReader For Validating Reader --> \n+      <Rule Id=\"CA5371\" Action=\"None\" />             <!-- Use XmlReader For Schema Read --> \n+      <Rule Id=\"CA5372\" Action=\"None\" />             <!-- Use XmlReader For XPathDocument --> \n+      <Rule Id=\"CA5373\" Action=\"Warning\" />          <!-- Do not use obsolete key derivation function --> \n+      <Rule Id=\"CA5374\" Action=\"Warning\" />          <!-- Do Not Use XslTransform --> \n+      <Rule Id=\"CA5375\" Action=\"None\" />             <!-- Do Not Use Account Shared Access Signature --> \n+      <Rule Id=\"CA5376\" Action=\"Warning\" />          <!-- Use SharedAccessProtocol HttpsOnly --> \n+      <Rule Id=\"CA5377\" Action=\"Warning\" />          <!-- Use Container Level Access Policy --> \n+      <Rule Id=\"CA5378\" Action=\"Warning\" />          <!-- Do not disable ServicePointManagerSecurityProtocols --> \n+      <Rule Id=\"CA5379\" Action=\"Warning\" />          <!-- Do Not Use Weak Key Derivation Function Algorithm --> \n+      <Rule Id=\"CA5380\" Action=\"Warning\" />          <!-- Do Not Add Certificates To Root Store --> \n+      <Rule Id=\"CA5381\" Action=\"Warning\" />          <!-- Ensure Certificates Are Not Added To Root Store --> \n+      <Rule Id=\"CA5382\" Action=\"None\" />             <!-- Use Secure Cookies In ASP.Net Core --> \n+      <Rule Id=\"CA5383\" Action=\"None\" />             <!-- Ensure Use Secure Cookies In ASP.Net Core --> \n+      <Rule Id=\"CA5384\" Action=\"Warning\" />          <!-- Do Not Use Digital Signature Algorithm (DSA) --> \n+      <Rule Id=\"CA5385\" Action=\"Warning\" />          <!-- Use Rivest\u2013Shamir\u2013Adleman (RSA) Algorithm With Sufficient Key Size --> \n+      <Rule Id=\"CA5386\" Action=\"None\" />             <!-- Avoid hardcoding SecurityProtocolType value --> \n+      <Rule Id=\"CA5387\" Action=\"None\" />             <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count --> \n+      <Rule Id=\"CA5388\" Action=\"None\" />             <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function --> \n+      <Rule Id=\"CA5389\" Action=\"None\" />             <!-- Do Not Add Archive Item's Path To The Target File System Path --> \n+      <Rule Id=\"CA5390\" Action=\"None\" />             <!-- Do not hard-code encryption key --> \n+      <Rule Id=\"CA5391\" Action=\"None\" />             <!-- Use antiforgery tokens in ASP.NET Core MVC controllers --> \n+      <Rule Id=\"CA5392\" Action=\"None\" />             <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes --> \n+      <Rule Id=\"CA5393\" Action=\"None\" />             <!-- Do not use unsafe DllImportSearchPath value --> \n+      <Rule Id=\"CA5394\" Action=\"None\" />             <!-- Do not use insecure randomness --> \n+      <Rule Id=\"CA5395\" Action=\"None\" />             <!-- Miss HttpVerb attribute for action methods --> \n+      <Rule Id=\"CA5396\" Action=\"None\" />             <!-- Set HttpOnly to true for HttpCookie --> \n+      <Rule Id=\"CA5397\" Action=\"None\" />             <!-- Do not use deprecated SslProtocols values --> \n+      <Rule Id=\"CA5398\" Action=\"None\" />             <!-- Avoid hardcoded SslProtocols values --> \n+      <Rule Id=\"CA5399\" Action=\"None\" />             <!-- HttpClients should enable certificate revocation list checks --> \n+      <Rule Id=\"CA5400\" Action=\"None\" />             <!-- Ensure HttpClient certificate revocation list check is not disabled --> \n+      <Rule Id=\"CA5401\" Action=\"None\" />             <!-- Do not use CreateEncryptor with non-default IV --> \n+      <Rule Id=\"CA5402\" Action=\"None\" />             <!-- Use CreateEncryptor with the default IV  --> \n+      <Rule Id=\"CA5403\" Action=\"None\" />             <!-- Do not hard-code certificate --> \n+      <Rule Id=\"IL3000\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \n+      <Rule Id=\"IL3001\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \n+  </Rules> \n+  <Rules AnalyzerId=\"StyleCop.Analyzers\" RuleNamespace=\"StyleCop.Analyzers\"> \n+    <Rule Id=\"AD0001\" Action=\"Info\" /> <!-- Analyzer threw an exception --> \n+    <Rule Id=\"SA0001\" Action=\"Info\" /> <!-- XML comments --> \n+    <Rule Id=\"SA1000\" Action=\"None\" />\n+    <Rule Id=\"SA1001\" Action=\"None\" />\n+    <Rule Id=\"SA1002\" Action=\"Info\" /> <!-- Semicolons should not be preceded by a space --> \n+    <Rule Id=\"SA1003\" Action=\"None\" />\n+    <Rule Id=\"SA1004\" Action=\"Info\" /> <!-- Documentation line should begin with a space --> \n+    <Rule Id=\"SA1005\" Action=\"Info\" /> <!-- Single line comment should begin with a space --> \n+    <Rule Id=\"SA1008\" Action=\"Info\" /> <!-- Opening parenthesis should not be preceded by a space --> \n+    <Rule Id=\"SA1009\" Action=\"Info\" /> <!-- Closing parenthesis should not be followed by a space --> \n+    <Rule Id=\"SA1010\" Action=\"Info\" /> <!-- Opening square brackets should not be preceded by a space --> \n+    <Rule Id=\"SA1011\" Action=\"Info\" /> <!-- Closing square bracket should be followed by a space --> \n+    <Rule Id=\"SA1012\" Action=\"Info\" /> <!-- Opening brace should be followed by a space --> \n+    <Rule Id=\"SA1013\" Action=\"Info\" /> <!-- Closing brace should be preceded by a space --> \n+    <Rule Id=\"SA1015\" Action=\"Info\" /> <!-- Closing generic bracket should not be followed by a space --> \n+    <Rule Id=\"SA1019\" Action=\"None\" />\n+    <Rule Id=\"SA1021\" Action=\"Info\" /> <!-- Negative sign should be preceded by a space --> \n+    <Rule Id=\"SA1023\" Action=\"Info\" /> <!-- Dereference symbol '*' should not be preceded by a space.\" --> \n+    <Rule Id=\"SA1024\" Action=\"Info\" /> <!-- Colon should be followed by a space --> \n+    <Rule Id=\"SA1025\" Action=\"Info\" /> <!-- Code should not contain multiple whitespace characters in a row --> \n+    <Rule Id=\"SA1026\" Action=\"None\" />\n+    <Rule Id=\"SA1027\" Action=\"None\" />\n+    <Rule Id=\"SA1028\" Action=\"None\" />\n+    <Rule Id=\"SA1100\" Action=\"Info\" /> <!-- Do not prefix calls with base unless local implementation exists --> \n+    <Rule Id=\"SA1101\" Action=\"None\" />\n+    <Rule Id=\"SA1106\" Action=\"Info\" /> <!-- Code should not contain empty statements --> \n+    <Rule Id=\"SA1107\" Action=\"Info\" /> <!-- Code should not contain multiple statements on one line --> \n+    <Rule Id=\"SA1108\" Action=\"None\" />\n+    <Rule Id=\"SA1110\" Action=\"Info\" /> <!-- Opening parenthesis or bracket should be on declaration line --> \n+    <Rule Id=\"SA1111\" Action=\"Info\" /> <!-- Closing parenthesis should be on line of last parameter --> \n+    <Rule Id=\"SA1112\" Action=\"None\" />\n+    <Rule Id=\"SA1113\" Action=\"None\" />\n+    <Rule Id=\"SA1114\" Action=\"Info\" /> <!-- Parameter list should follow declaration --> \n+    <Rule Id=\"SA1115\" Action=\"None\" />\n+    <Rule Id=\"SA1116\" Action=\"Info\" /> <!-- Split parameters should start on line after declaration --> \n+    <Rule Id=\"SA1117\" Action=\"Info\" /> <!-- Parameters should be on same line or separate lines --> \n+    <Rule Id=\"SA1118\" Action=\"None\" />\n+    <Rule Id=\"SA1119\" Action=\"None\" />\n+    <Rule Id=\"SA1120\" Action=\"Info\" /> <!-- Comments should contain text --> \n+    <Rule Id=\"SA1121\" Action=\"None\" />\n+    <Rule Id=\"SA1122\" Action=\"Info\" /> <!-- Use string.Empty for empty strings --> \n+    <Rule Id=\"SA1123\" Action=\"Info\" /> <!-- Region should not be located within a code element --> \n+    <Rule Id=\"SA1124\" Action=\"None\" />\n+    <Rule Id=\"SA1125\" Action=\"Info\" /> <!-- Use shorthand for nullable types --> \n+    <Rule Id=\"SA1127\" Action=\"Info\" /> <!-- Generic type constraints should be on their own line --> \n+    <Rule Id=\"SA1128\" Action=\"Info\" /> <!-- Put constructor initializers on their own line --> \n+    <Rule Id=\"SA1129\" Action=\"None\" />\n+    <Rule Id=\"SA1130\" Action=\"Info\" /> <!-- Use lambda syntax --> \n+    <Rule Id=\"SA1131\" Action=\"Info\" /> <!-- Constant values should appear on the right-hand side of comparisons --> \n+    <Rule Id=\"SA1132\" Action=\"Info\" /> <!-- Do not combine fields --> \n+    <Rule Id=\"SA1133\" Action=\"Info\" /> <!-- Do not combine attributes --> \n+    <Rule Id=\"SA1134\" Action=\"Info\" /> <!-- Each attribute should be placed on its own line of code --> \n+    <Rule Id=\"SA1135\" Action=\"Info\" /> <!-- Using directive should be qualified --> \n+    <Rule Id=\"SA1136\" Action=\"Info\" /> <!-- Enum values should be on separate lines --> \n+    <Rule Id=\"SA1137\" Action=\"Info\" /> <!-- Elements should have the same indentation --> \n+    <Rule Id=\"SA1139\" Action=\"None\" />\n+    <Rule Id=\"SA1200\" Action=\"None\" />\n+    <Rule Id=\"SA1201\" Action=\"Info\" /> <!-- Elements should appear in the correct order --> \n+    <Rule Id=\"SA1202\" Action=\"Info\" /> <!-- Elements should be ordered by access --> \n+    <Rule Id=\"SA1203\" Action=\"Info\" /> <!-- Constants should appear before fields --> \n+    <Rule Id=\"SA1204\" Action=\"Info\" /> <!-- Static elements should appear before instance elements --> \n+    <Rule Id=\"SA1205\" Action=\"None\" />\n+    <Rule Id=\"SA1206\" Action=\"None\" />\n+    <Rule Id=\"SA1208\" Action=\"Info\" /> <!-- Using directive ordering --> \n+    <Rule Id=\"SA1209\" Action=\"Info\" /> <!-- Using alias directives should be placed after all using namespace directives --> \n+    <Rule Id=\"SA1210\" Action=\"Info\" /> <!-- Using directives should be ordered alphabetically by the namespaces --> \n+    <Rule Id=\"SA1211\" Action=\"Info\" /> <!-- Using alias directive ordering --> \n+    <Rule Id=\"SA1212\" Action=\"None\" />\n+    <Rule Id=\"SA1214\" Action=\"Info\" /> <!-- Readonly fields should appear before non-readonly fields --> \n+    <Rule Id=\"SA1216\" Action=\"Info\" /> <!-- Using static directives should be placed at the correct location --> \n+    <Rule Id=\"SA1300\" Action=\"Info\" /> <!-- Element should begin with an uppercase letter --> \n+    <Rule Id=\"SA1303\" Action=\"Info\" /> <!-- Const field names should begin with upper-case letter --> \n+    <Rule Id=\"SA1304\" Action=\"Info\" /> <!-- Non-private readonly fields should begin with upper-case letter --> \n+    <Rule Id=\"SA1306\" Action=\"Info\" /> <!-- Field should begin with lower-case letter --> \n+    <Rule Id=\"SA1307\" Action=\"None\" />\n+    <Rule Id=\"SA1308\" Action=\"Info\" /> <!-- Field should not begin with the prefix 's_' --> \n+    <Rule Id=\"SA1309\" Action=\"None\" />\n+    <Rule Id=\"SA1310\" Action=\"None\" />\n+    <Rule Id=\"SA1311\" Action=\"Info\" /> <!-- Static readonly fields should begin with upper-case letter --> \n+    <Rule Id=\"SA1312\" Action=\"Info\" /> <!-- Variable should begin with lower-case letter --> \n+    <Rule Id=\"SA1313\" Action=\"Info\" /> <!-- Parameter should begin with lower-case letter --> \n+    <Rule Id=\"SA1314\" Action=\"None\" />\n+    <Rule Id=\"SA1316\" Action=\"Info\" /> <!-- Tuple element names should use correct casing --> \n+    <Rule Id=\"SA1400\" Action=\"None\" />\n+    <Rule Id=\"SA1401\" Action=\"Info\" /> <!-- Fields should be private --> \n+    <Rule Id=\"SA1402\" Action=\"Info\" /> <!-- File may only contain a single type --> \n+    <Rule Id=\"SA1403\" Action=\"Info\" /> <!-- File may only contain a single namespace --> \n+    <Rule Id=\"SA1404\" Action=\"Info\" /> <!-- Code analysis suppression should have justification --> \n+    <Rule Id=\"SA1405\" Action=\"Info\" /> <!-- Debug.Assert should provide message text --> \n+    <Rule Id=\"SA1407\" Action=\"Info\" /> <!-- Arithmetic expressions should declare precedence --> \n+    <Rule Id=\"SA1408\" Action=\"Info\" /> <!-- Conditional expressions should declare precedence --> \n+    <Rule Id=\"SA1410\" Action=\"None\" />\n+    <Rule Id=\"SA1411\" Action=\"None\" />\n+    <Rule Id=\"SA1413\" Action=\"Info\" /> <!-- Use trailing comma in multi-line initializers --> \n+    <Rule Id=\"SA1414\" Action=\"Info\" /> <!-- Tuple types in signatures should have element names --> \n+    <Rule Id=\"SA1500\" Action=\"Info\" /> <!-- Braces for multi-line statements should not share line --> \n+    <Rule Id=\"SA1501\" Action=\"Info\" /> <!-- Statement should not be on a single line --> \n+    <Rule Id=\"SA1502\" Action=\"Info\" /> <!-- Element should not be on a single line --> \n+    <Rule Id=\"SA1503\" Action=\"Info\" /> <!-- Braces should not be omitted --> \n+    <Rule Id=\"SA1504\" Action=\"Info\" /> <!-- All accessors should be single-line or multi-line --> \n+    <Rule Id=\"SA1505\" Action=\"Info\" /> <!-- An opening brace should not be followed by a blank line --> \n+    <Rule Id=\"SA1506\" Action=\"Info\" /> <!-- Element documentation headers should not be followed by blank line --> \n+    <Rule Id=\"SA1507\" Action=\"Info\" /> <!-- Code should not contain multiple blank lines in a row --> \n+    <Rule Id=\"SA1508\" Action=\"Info\" /> <!-- A closing brace should not be preceded by a blank line --> \n+    <Rule Id=\"SA1509\" Action=\"Info\" /> <!-- Opening braces should not be preceded by blank line --> \n+    <Rule Id=\"SA1510\" Action=\"Info\" /> <!-- 'else' statement should not be preceded by a blank line --> \n+    <Rule Id=\"SA1512\" Action=\"Info\" /> <!-- Single-line comments should not be followed by blank line --> \n+    <Rule Id=\"SA1513\" Action=\"Info\" /> <!-- Closing brace should be followed by blank line --> \n+    <Rule Id=\"SA1514\" Action=\"Info\" /> <!-- Element documentation header should be preceded by blank line --> \n+    <Rule Id=\"SA1515\" Action=\"Info\" /> <!-- Single-line comment should be preceded by blank line --> \n+    <Rule Id=\"SA1516\" Action=\"Info\" /> <!-- Elements should be separated by blank line --> \n+    <Rule Id=\"SA1517\" Action=\"None\" />\n+    <Rule Id=\"SA1519\" Action=\"Info\" /> <!-- Braces should not be omitted from multi-line child statement --> \n+    <Rule Id=\"SA1520\" Action=\"Info\" /> <!-- Use braces consistently --> \n+    <Rule Id=\"SA1600\" Action=\"None\" />\n+    <Rule Id=\"SA1601\" Action=\"Info\" /> <!-- Partial elements should be documented --> \n+    <Rule Id=\"SA1602\" Action=\"Info\" /> <!-- Enumeration items should be documented --> \n+    <Rule Id=\"SA1604\" Action=\"Info\" /> <!-- Element documentation should have summary --> \n+    <Rule Id=\"SA1605\" Action=\"Info\" /> <!-- Partial element documentation should have summary --> \n+    <Rule Id=\"SA1606\" Action=\"Info\" /> <!-- Element documentation should have summary text --> \n+    <Rule Id=\"SA1608\" Action=\"Info\" /> <!-- Element documentation should not have default summary --> \n+    <Rule Id=\"SA1610\" Action=\"Info\" /> <!-- Property documentation should have value text --> \n+    <Rule Id=\"SA1611\" Action=\"Info\" /> <!-- The documentation for parameter 'message' is missing --> \n+    <Rule Id=\"SA1612\" Action=\"Info\" /> <!-- The parameter documentation is at incorrect position --> \n+    <Rule Id=\"SA1614\" Action=\"Info\" /> <!-- Element parameter documentation should have text --> \n+    <Rule Id=\"SA1615\" Action=\"None\" />\n+    <Rule Id=\"SA1616\" Action=\"Info\" /> <!-- Element return value documentation should have text --> \n+    <Rule Id=\"SA1617\" Action=\"None\" />\n+\t<Rule Id=\"SA1618\" Action=\"Info\" /> <!-- The documentation for type parameter is missing --> \n+    <Rule Id=\"SA1619\" Action=\"Info\" /> <!-- The documentation for type parameter is missing --> \n+    <Rule Id=\"SA1622\" Action=\"Info\" /> <!-- Generic type parameter documentation should have text --> \n+    <Rule Id=\"SA1623\" Action=\"Info\" /> <!-- Property documentation text --> \n+    <Rule Id=\"SA1624\" Action=\"Info\" /> <!-- Because the property only contains a visible get accessor, the documentation summary text should begin with 'Gets' --> \n+\t<Rule Id=\"SA1625\" Action=\"Info\" />",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n      <Rule Id=\"SA1618\" Action=\"Info\" /> <!-- The documentation for type parameter is missing --> \r\n```",
              "createdAt": "2021-07-12T23:53:07Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+\t  <Rule Id=\"CA1032\" Action=\"Info\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+\t  <Rule Id=\"CA1034\" Action=\"Info\" />\n+      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \n+      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \n+      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \n+      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \n+      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \n+      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \n+      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \n+      <Rule Id=\"CA1050\" Action=\"Info\" />             <!-- Declare types in namespaces --> \n+      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \n+      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \n+      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \n+      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \n+      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \n+      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \n+      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \n+      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \n+      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \n+      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \n+      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \n+      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \n+      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \n+      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \n+      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \n+      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \n+      <Rule Id=\"CA1200\" Action=\"Info\" />             <!-- Avoid using cref tags with a prefix --> \n+      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \n+      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \n+      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \n+      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \n+      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \n+      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \n+      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \n+      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \n+      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \n+      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \n+      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \n+      <Rule Id=\"CA1507\" Action=\"Info\" />             <!-- Use nameof to express symbol names --> \n+      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \n+      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \n+      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \n+\t  <Rule Id=\"CA1707\" Action=\"Info\" />\n+      <Rule Id=\"CA1710\" Action=\"None\" />             <!-- Identifiers should have correct suffix --> \n+      <Rule Id=\"CA1711\" Action=\"None\" />             <!-- Identifiers should not have incorrect suffix --> \n+      <Rule Id=\"CA1712\" Action=\"None\" />             <!-- Do not prefix enum values with type name --> \n+\t  <Rule Id=\"CA1714\" Action=\"Info\" />\n+      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \n+      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \n+\t  <Rule Id=\"CA1717\" Action=\"Info\" />\n+      <Rule Id=\"CA1720\" Action=\"None\" />             <!-- Identifier contains type name --> \n+      <Rule Id=\"CA1721\" Action=\"None\" />             <!-- Property names should not match get methods --> \n+      <Rule Id=\"CA1724\" Action=\"None\" />             <!-- Type names should not match namespaces --> \n+      <Rule Id=\"CA1801\" Action=\"None\" />             <!-- Review unused parameters --> \n+      <Rule Id=\"CA1802\" Action=\"Info\" />             <!-- Use literals where appropriate --> \n+      <Rule Id=\"CA1805\" Action=\"Info\" />             <!-- Do not initialize unnecessarily --> \n+\t  <Rule Id=\"CA1806\" Action=\"Info\" />\n+      <Rule Id=\"CA1810\" Action=\"Info\" />             <!-- Initialize reference type static fields inline --> \n+      <Rule Id=\"CA1812\" Action=\"None\" />             <!-- Avoid uninstantiated internal classes --> \n+\t  <Rule Id=\"CA1814\" Action=\"Info\" />\n+\t  <Rule Id=\"CA1815\" Action=\"Info\" />\n+      <Rule Id=\"CA1816\" Action=\"None\" />             <!-- Dispose methods should call SuppressFinalize --> \n+\t  <Rule Id=\"CA1819\" Action=\"Info\" />\n+      <Rule Id=\"CA1820\" Action=\"None\" />             <!-- Test for empty strings using string length --> \n+      <Rule Id=\"CA1821\" Action=\"Warning\" />          <!-- Remove empty Finalizers --> \n+      <Rule Id=\"CA1822\" Action=\"None\" />             <!-- Mark members as static --> \n+      <Rule Id=\"CA1823\" Action=\"Info\" />             <!-- Avoid unused private fields --> \n+      <Rule Id=\"CA1824\" Action=\"Warning\" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->\n+      <Rule Id=\"CA1825\" Action=\"Info\" />             <!-- Avoid zero-length array allocations. --> \n+      <Rule Id=\"CA1827\" Action=\"Warning\" />          <!-- Do not use Count() or LongCount() when Any() can be used --> \n+      <Rule Id=\"CA1828\" Action=\"Warning\" />          <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used --> \n+      <Rule Id=\"CA1829\" Action=\"Info\" />             <!-- Use Length/Count property instead of Count() when available --> \n+      <Rule Id=\"CA1830\" Action=\"Warning\" />          <!-- Prefer strongly-typed Append and Insert method overloads on StringBuilder. --> \n+      <Rule Id=\"CA1831\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1832\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1833\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1834\" Action=\"Info\" />             <!-- Consider using 'StringBuilder.Append(char)' when applicable. --> \n+      <Rule Id=\"CA1835\" Action=\"Info\" />             <!-- Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync' --> \n+      <Rule Id=\"CA1836\" Action=\"Info\" />             <!-- Prefer IsEmpty over Count --> \n+      <Rule Id=\"CA1837\" Action=\"Info\" />             <!-- Use 'Environment.ProcessId' -->  \n+      <Rule Id=\"CA1838\" Action=\"Info\" />             <!-- Avoid 'StringBuilder' parameters for P/Invokes --> \n+      <Rule Id=\"CA2000\" Action=\"None\" />             <!-- Dispose objects before losing scope --> \n+      <Rule Id=\"CA2002\" Action=\"None\" />             <!-- Do not lock on objects with weak identity --> \n+      <Rule Id=\"CA2007\" Action=\"Info\" />             <!-- Consider calling ConfigureAwait on the awaited task --> \n+      <Rule Id=\"CA2008\" Action=\"Info\" />             <!-- Do not create tasks without passing a TaskScheduler --> \n+      <Rule Id=\"CA2009\" Action=\"Warning\" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value --> \n+      <Rule Id=\"CA2011\" Action=\"Warning\" />          <!-- Avoid infinite recursion --> \n+      <Rule Id=\"CA2012\" Action=\"Warning\" />          <!-- Use ValueTasks correctly --> \n+      <Rule Id=\"CA2013\" Action=\"Warning\" />          <!-- Do not use ReferenceEquals with value types --> \n+      <Rule Id=\"CA2014\" Action=\"Warning\" />          <!-- Do not use stackalloc in loops. --> \n+      <Rule Id=\"CA2015\" Action=\"Warning\" />          <!-- Do not define finalizers for types derived from MemoryManager<T> --> \n+      <Rule Id=\"CA2016\" Action=\"Info\" />             <!-- Forward the 'CancellationToken' parameter to methods that take one --> \n+      <Rule Id=\"CA2100\" Action=\"None\" />             <!-- Review SQL queries for security vulnerabilities --> \n+      <Rule Id=\"CA2101\" Action=\"None\" />             <!-- Specify marshaling for P/Invoke string arguments --> \n+      <Rule Id=\"CA2109\" Action=\"None\" />             <!-- Review visible event handlers --> \n+      <Rule Id=\"CA2119\" Action=\"None\" />             <!-- Seal methods that satisfy private interfaces --> \n+      <Rule Id=\"CA2153\" Action=\"None\" />             <!-- Do Not Catch Corrupted State Exceptions --> \n+      <Rule Id=\"CA2201\" Action=\"None\" />             <!-- Do not raise reserved exception types --> \n+      <Rule Id=\"CA2208\" Action=\"Info\" />             <!-- Instantiate argument exceptions correctly --> \n+      <Rule Id=\"CA2211\" Action=\"None\" />             <!-- Non-constant fields should not be visible --> \n+      <Rule Id=\"CA2213\" Action=\"None\" />             <!-- Disposable fields should be disposed --> \n+      <Rule Id=\"CA2215\" Action=\"None\" />             <!-- Dispose methods should call base class dispose --> \n+      <Rule Id=\"CA2216\" Action=\"None\" />             <!-- Disposable types should declare finalizer --> \n+\t  <Rule Id=\"CA2219\" Action=\"None\" />\n+      <Rule Id=\"CA2224\" Action=\"None\" />             <!-- Override Equals on overloading operator equals --> \n+      <Rule Id=\"CA2225\" Action=\"None\" />             <!-- Operator overloads have named alternates --> \n+      <Rule Id=\"CA2226\" Action=\"None\" />             <!-- Operators should have symmetrical overloads --> \n+      <Rule Id=\"CA2227\" Action=\"None\" />             <!-- Collection properties should be read only --> \n+      <Rule Id=\"CA2231\" Action=\"None\" />             <!-- Overload operator equals on overriding value type Equals --> \n+      <Rule Id=\"CA2234\" Action=\"None\" />             <!-- Pass system uri objects instead of strings --> \n+      <Rule Id=\"CA2235\" Action=\"None\" />             <!-- Mark all non-serializable fields --> \n+      <Rule Id=\"CA2241\" Action=\"Info\" />             <!-- Provide correct arguments to formatting methods --> \n+      <Rule Id=\"CA2242\" Action=\"Warning\" />          <!-- Test for NaN correctly --> \n+      <Rule Id=\"CA2243\" Action=\"None\" />             <!-- Attribute string literals should parse correctly --> \n+      <Rule Id=\"CA2244\" Action=\"None\" />             <!-- Do not duplicate indexed element initializations --> \n+      <Rule Id=\"CA2245\" Action=\"Warning\" />          <!-- Do not assign a property to itself. --> \n+      <Rule Id=\"CA2246\" Action=\"None\" />             <!-- Assigning symbol and its member in the same statement. --> \n+      <Rule Id=\"CA2247\" Action=\"Warning\" />          <!-- Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum. --> \n+      <Rule Id=\"CA2248\" Action=\"Warning\" />          <!-- Provide correct 'enum' argument to 'Enum.HasFlag' --> \n+      <Rule Id=\"CA2249\" Action=\"Info\" />             <!-- Consider using 'string.Contains' instead of 'string.IndexOf' --> \n+      <Rule Id=\"CA2300\" Action=\"None\" />             <!-- Do not use insecure deserializer BinaryFormatter --> \n+      <Rule Id=\"CA2301\" Action=\"None\" />             <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder --> \n+      <Rule Id=\"CA2302\" Action=\"None\" />             <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize --> \n+      <Rule Id=\"CA2305\" Action=\"None\" />             <!-- Do not use insecure deserializer LosFormatter --> \n+      <Rule Id=\"CA2310\" Action=\"None\" />             <!-- Do not use insecure deserializer NetDataContractSerializer --> \n+      <Rule Id=\"CA2311\" Action=\"None\" />             <!-- Do not deserialize without first setting NetDataContractSerializer.Binder --> \n+      <Rule Id=\"CA2312\" Action=\"None\" />             <!-- Ensure NetDataContractSerializer.Binder is set before deserializing --> \n+      <Rule Id=\"CA2315\" Action=\"None\" />             <!-- Do not use insecure deserializer ObjectStateFormatter --> \n+      <Rule Id=\"CA2321\" Action=\"None\" />             <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver --> \n+      <Rule Id=\"CA2322\" Action=\"None\" />             <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing --> \n+      <Rule Id=\"CA2326\" Action=\"None\" />             <!-- Do not use TypeNameHandling values other than None --> \n+      <Rule Id=\"CA2350\" Action=\"None\" />             <!-- Do not use DataTable.ReadXml() with untrusted data --> \n+      <Rule Id=\"CA2351\" Action=\"None\" />             <!-- Do not use DataSet.ReadXml() with untrusted data --> \n+      <Rule Id=\"CA2352\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA2353\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type --> \n+      <Rule Id=\"CA2354\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA2355\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type found in deserializable object graph --> \n+      <Rule Id=\"CA2356\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type in web deserializable object graph --> \n+      <Rule Id=\"CA2361\" Action=\"None\" />             <!-- Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data --> \n+      <Rule Id=\"CA2362\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA3001\" Action=\"None\" />             <!-- Review code for SQL injection vulnerabilities --> \n+      <Rule Id=\"CA3002\" Action=\"None\" />             <!-- Review code for XSS vulnerabilities --> \n+      <Rule Id=\"CA3003\" Action=\"None\" />             <!-- Review code for file path injection vulnerabilities --> \n+      <Rule Id=\"CA3004\" Action=\"None\" />             <!-- Review code for information disclosure vulnerabilities --> \n+      <Rule Id=\"CA3005\" Action=\"None\" />             <!-- Review code for LDAP injection vulnerabilities --> \n+      <Rule Id=\"CA3006\" Action=\"None\" />             <!-- Review code for process command injection vulnerabilities --> \n+      <Rule Id=\"CA3007\" Action=\"None\" />             <!-- Review code for open redirect vulnerabilities --> \n+      <Rule Id=\"CA3008\" Action=\"None\" />             <!-- Review code for XPath injection vulnerabilities --> \n+      <Rule Id=\"CA3009\" Action=\"None\" />             <!-- Review code for XML injection vulnerabilities --> \n+      <Rule Id=\"CA3010\" Action=\"None\" />             <!-- Review code for XAML injection vulnerabilities --> \n+      <Rule Id=\"CA3011\" Action=\"None\" />             <!-- Review code for DLL injection vulnerabilities --> \n+      <Rule Id=\"CA3012\" Action=\"None\" />             <!-- Review code for regex injection vulnerabilities --> \n+      <Rule Id=\"CA3061\" Action=\"Warning\" />          <!-- Do Not Add Schema By URL --> \n+      <Rule Id=\"CA3075\" Action=\"Warning\" />          <!-- Insecure DTD processing in XML --> \n+      <Rule Id=\"CA3076\" Action=\"Warning\" />          <!-- Insecure XSLT script processing. --> \n+      <Rule Id=\"CA3077\" Action=\"Warning\" />          <!-- Insecure Processing in API Design, XmlDocument and XmlTextReader --> \n+      <Rule Id=\"CA3147\" Action=\"Warning\" />          <!-- Mark Verb Handlers With Validate Antiforgery Token --> \n+      <Rule Id=\"CA5350\" Action=\"Warning\" />          <!-- Do Not Use Weak Cryptographic Algorithms --> \n+      <Rule Id=\"CA5351\" Action=\"Warning\" />          <!-- Do Not Use Broken Cryptographic Algorithms --> \n+      <Rule Id=\"CA5358\" Action=\"None\" />             <!-- Review cipher mode usage with cryptography experts --> \n+      <Rule Id=\"CA5359\" Action=\"Warning\" />          <!-- Do Not Disable Certificate Validation --> \n+      <Rule Id=\"CA5360\" Action=\"Warning\" />          <!-- Do Not Call Dangerous Methods In Deserialization --> \n+      <Rule Id=\"CA5361\" Action=\"Warning\" />          <!-- Do Not Disable SChannel Use of Strong Crypto --> \n+      <Rule Id=\"CA5362\" Action=\"None\" />             <!-- Potential reference cycle in deserialized object graph --> \n+      <Rule Id=\"CA5363\" Action=\"Warning\" />          <!-- Do Not Disable Request Validation --> \n+      <Rule Id=\"CA5364\" Action=\"Warning\" />          <!-- Do Not Use Deprecated Security Protocols --> \n+      <Rule Id=\"CA5365\" Action=\"Warning\" />          <!-- Do Not Disable HTTP Header Checking --> \n+      <Rule Id=\"CA5366\" Action=\"None\" />             <!-- Use XmlReader For DataSet Read Xml --> \n+      <Rule Id=\"CA5367\" Action=\"None\" />             <!-- Do Not Serialize Types With Pointer Fields --> \n+      <Rule Id=\"CA5368\" Action=\"Warning\" />          <!-- Set ViewStateUserKey For Classes Derived From Page --> \n+      <Rule Id=\"CA5369\" Action=\"None\" />             <!-- Use XmlReader For Deserialize --> \n+      <Rule Id=\"CA5370\" Action=\"Warning\" />          <!-- Use XmlReader For Validating Reader --> \n+      <Rule Id=\"CA5371\" Action=\"None\" />             <!-- Use XmlReader For Schema Read --> \n+      <Rule Id=\"CA5372\" Action=\"None\" />             <!-- Use XmlReader For XPathDocument --> \n+      <Rule Id=\"CA5373\" Action=\"Warning\" />          <!-- Do not use obsolete key derivation function --> \n+      <Rule Id=\"CA5374\" Action=\"Warning\" />          <!-- Do Not Use XslTransform --> \n+      <Rule Id=\"CA5375\" Action=\"None\" />             <!-- Do Not Use Account Shared Access Signature --> \n+      <Rule Id=\"CA5376\" Action=\"Warning\" />          <!-- Use SharedAccessProtocol HttpsOnly --> \n+      <Rule Id=\"CA5377\" Action=\"Warning\" />          <!-- Use Container Level Access Policy --> \n+      <Rule Id=\"CA5378\" Action=\"Warning\" />          <!-- Do not disable ServicePointManagerSecurityProtocols --> \n+      <Rule Id=\"CA5379\" Action=\"Warning\" />          <!-- Do Not Use Weak Key Derivation Function Algorithm --> \n+      <Rule Id=\"CA5380\" Action=\"Warning\" />          <!-- Do Not Add Certificates To Root Store --> \n+      <Rule Id=\"CA5381\" Action=\"Warning\" />          <!-- Ensure Certificates Are Not Added To Root Store --> \n+      <Rule Id=\"CA5382\" Action=\"None\" />             <!-- Use Secure Cookies In ASP.Net Core --> \n+      <Rule Id=\"CA5383\" Action=\"None\" />             <!-- Ensure Use Secure Cookies In ASP.Net Core --> \n+      <Rule Id=\"CA5384\" Action=\"Warning\" />          <!-- Do Not Use Digital Signature Algorithm (DSA) --> \n+      <Rule Id=\"CA5385\" Action=\"Warning\" />          <!-- Use Rivest\u2013Shamir\u2013Adleman (RSA) Algorithm With Sufficient Key Size --> \n+      <Rule Id=\"CA5386\" Action=\"None\" />             <!-- Avoid hardcoding SecurityProtocolType value --> \n+      <Rule Id=\"CA5387\" Action=\"None\" />             <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count --> \n+      <Rule Id=\"CA5388\" Action=\"None\" />             <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function --> \n+      <Rule Id=\"CA5389\" Action=\"None\" />             <!-- Do Not Add Archive Item's Path To The Target File System Path --> \n+      <Rule Id=\"CA5390\" Action=\"None\" />             <!-- Do not hard-code encryption key --> \n+      <Rule Id=\"CA5391\" Action=\"None\" />             <!-- Use antiforgery tokens in ASP.NET Core MVC controllers --> \n+      <Rule Id=\"CA5392\" Action=\"None\" />             <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes --> \n+      <Rule Id=\"CA5393\" Action=\"None\" />             <!-- Do not use unsafe DllImportSearchPath value --> \n+      <Rule Id=\"CA5394\" Action=\"None\" />             <!-- Do not use insecure randomness --> \n+      <Rule Id=\"CA5395\" Action=\"None\" />             <!-- Miss HttpVerb attribute for action methods --> \n+      <Rule Id=\"CA5396\" Action=\"None\" />             <!-- Set HttpOnly to true for HttpCookie --> \n+      <Rule Id=\"CA5397\" Action=\"None\" />             <!-- Do not use deprecated SslProtocols values --> \n+      <Rule Id=\"CA5398\" Action=\"None\" />             <!-- Avoid hardcoded SslProtocols values --> \n+      <Rule Id=\"CA5399\" Action=\"None\" />             <!-- HttpClients should enable certificate revocation list checks --> \n+      <Rule Id=\"CA5400\" Action=\"None\" />             <!-- Ensure HttpClient certificate revocation list check is not disabled --> \n+      <Rule Id=\"CA5401\" Action=\"None\" />             <!-- Do not use CreateEncryptor with non-default IV --> \n+      <Rule Id=\"CA5402\" Action=\"None\" />             <!-- Use CreateEncryptor with the default IV  --> \n+      <Rule Id=\"CA5403\" Action=\"None\" />             <!-- Do not hard-code certificate --> \n+      <Rule Id=\"IL3000\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \n+      <Rule Id=\"IL3001\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \n+  </Rules> \n+  <Rules AnalyzerId=\"StyleCop.Analyzers\" RuleNamespace=\"StyleCop.Analyzers\"> \n+    <Rule Id=\"AD0001\" Action=\"Info\" /> <!-- Analyzer threw an exception --> \n+    <Rule Id=\"SA0001\" Action=\"Info\" /> <!-- XML comments --> \n+    <Rule Id=\"SA1000\" Action=\"None\" />\n+    <Rule Id=\"SA1001\" Action=\"None\" />\n+    <Rule Id=\"SA1002\" Action=\"Info\" /> <!-- Semicolons should not be preceded by a space --> \n+    <Rule Id=\"SA1003\" Action=\"None\" />\n+    <Rule Id=\"SA1004\" Action=\"Info\" /> <!-- Documentation line should begin with a space --> \n+    <Rule Id=\"SA1005\" Action=\"Info\" /> <!-- Single line comment should begin with a space --> \n+    <Rule Id=\"SA1008\" Action=\"Info\" /> <!-- Opening parenthesis should not be preceded by a space --> \n+    <Rule Id=\"SA1009\" Action=\"Info\" /> <!-- Closing parenthesis should not be followed by a space --> \n+    <Rule Id=\"SA1010\" Action=\"Info\" /> <!-- Opening square brackets should not be preceded by a space --> \n+    <Rule Id=\"SA1011\" Action=\"Info\" /> <!-- Closing square bracket should be followed by a space --> \n+    <Rule Id=\"SA1012\" Action=\"Info\" /> <!-- Opening brace should be followed by a space --> \n+    <Rule Id=\"SA1013\" Action=\"Info\" /> <!-- Closing brace should be preceded by a space --> \n+    <Rule Id=\"SA1015\" Action=\"Info\" /> <!-- Closing generic bracket should not be followed by a space --> \n+    <Rule Id=\"SA1019\" Action=\"None\" />\n+    <Rule Id=\"SA1021\" Action=\"Info\" /> <!-- Negative sign should be preceded by a space --> \n+    <Rule Id=\"SA1023\" Action=\"Info\" /> <!-- Dereference symbol '*' should not be preceded by a space.\" --> \n+    <Rule Id=\"SA1024\" Action=\"Info\" /> <!-- Colon should be followed by a space --> \n+    <Rule Id=\"SA1025\" Action=\"Info\" /> <!-- Code should not contain multiple whitespace characters in a row --> \n+    <Rule Id=\"SA1026\" Action=\"None\" />\n+    <Rule Id=\"SA1027\" Action=\"None\" />\n+    <Rule Id=\"SA1028\" Action=\"None\" />\n+    <Rule Id=\"SA1100\" Action=\"Info\" /> <!-- Do not prefix calls with base unless local implementation exists --> \n+    <Rule Id=\"SA1101\" Action=\"None\" />\n+    <Rule Id=\"SA1106\" Action=\"Info\" /> <!-- Code should not contain empty statements --> \n+    <Rule Id=\"SA1107\" Action=\"Info\" /> <!-- Code should not contain multiple statements on one line --> \n+    <Rule Id=\"SA1108\" Action=\"None\" />\n+    <Rule Id=\"SA1110\" Action=\"Info\" /> <!-- Opening parenthesis or bracket should be on declaration line --> \n+    <Rule Id=\"SA1111\" Action=\"Info\" /> <!-- Closing parenthesis should be on line of last parameter --> \n+    <Rule Id=\"SA1112\" Action=\"None\" />\n+    <Rule Id=\"SA1113\" Action=\"None\" />\n+    <Rule Id=\"SA1114\" Action=\"Info\" /> <!-- Parameter list should follow declaration --> \n+    <Rule Id=\"SA1115\" Action=\"None\" />\n+    <Rule Id=\"SA1116\" Action=\"Info\" /> <!-- Split parameters should start on line after declaration --> \n+    <Rule Id=\"SA1117\" Action=\"Info\" /> <!-- Parameters should be on same line or separate lines --> \n+    <Rule Id=\"SA1118\" Action=\"None\" />\n+    <Rule Id=\"SA1119\" Action=\"None\" />\n+    <Rule Id=\"SA1120\" Action=\"Info\" /> <!-- Comments should contain text --> \n+    <Rule Id=\"SA1121\" Action=\"None\" />\n+    <Rule Id=\"SA1122\" Action=\"Info\" /> <!-- Use string.Empty for empty strings --> \n+    <Rule Id=\"SA1123\" Action=\"Info\" /> <!-- Region should not be located within a code element --> \n+    <Rule Id=\"SA1124\" Action=\"None\" />\n+    <Rule Id=\"SA1125\" Action=\"Info\" /> <!-- Use shorthand for nullable types --> \n+    <Rule Id=\"SA1127\" Action=\"Info\" /> <!-- Generic type constraints should be on their own line --> \n+    <Rule Id=\"SA1128\" Action=\"Info\" /> <!-- Put constructor initializers on their own line --> \n+    <Rule Id=\"SA1129\" Action=\"None\" />\n+    <Rule Id=\"SA1130\" Action=\"Info\" /> <!-- Use lambda syntax --> \n+    <Rule Id=\"SA1131\" Action=\"Info\" /> <!-- Constant values should appear on the right-hand side of comparisons --> \n+    <Rule Id=\"SA1132\" Action=\"Info\" /> <!-- Do not combine fields --> \n+    <Rule Id=\"SA1133\" Action=\"Info\" /> <!-- Do not combine attributes --> \n+    <Rule Id=\"SA1134\" Action=\"Info\" /> <!-- Each attribute should be placed on its own line of code --> \n+    <Rule Id=\"SA1135\" Action=\"Info\" /> <!-- Using directive should be qualified --> \n+    <Rule Id=\"SA1136\" Action=\"Info\" /> <!-- Enum values should be on separate lines --> \n+    <Rule Id=\"SA1137\" Action=\"Info\" /> <!-- Elements should have the same indentation --> \n+    <Rule Id=\"SA1139\" Action=\"None\" />\n+    <Rule Id=\"SA1200\" Action=\"None\" />\n+    <Rule Id=\"SA1201\" Action=\"Info\" /> <!-- Elements should appear in the correct order --> \n+    <Rule Id=\"SA1202\" Action=\"Info\" /> <!-- Elements should be ordered by access --> \n+    <Rule Id=\"SA1203\" Action=\"Info\" /> <!-- Constants should appear before fields --> \n+    <Rule Id=\"SA1204\" Action=\"Info\" /> <!-- Static elements should appear before instance elements --> \n+    <Rule Id=\"SA1205\" Action=\"None\" />\n+    <Rule Id=\"SA1206\" Action=\"None\" />\n+    <Rule Id=\"SA1208\" Action=\"Info\" /> <!-- Using directive ordering --> \n+    <Rule Id=\"SA1209\" Action=\"Info\" /> <!-- Using alias directives should be placed after all using namespace directives --> \n+    <Rule Id=\"SA1210\" Action=\"Info\" /> <!-- Using directives should be ordered alphabetically by the namespaces --> \n+    <Rule Id=\"SA1211\" Action=\"Info\" /> <!-- Using alias directive ordering --> \n+    <Rule Id=\"SA1212\" Action=\"None\" />\n+    <Rule Id=\"SA1214\" Action=\"Info\" /> <!-- Readonly fields should appear before non-readonly fields --> \n+    <Rule Id=\"SA1216\" Action=\"Info\" /> <!-- Using static directives should be placed at the correct location --> \n+    <Rule Id=\"SA1300\" Action=\"Info\" /> <!-- Element should begin with an uppercase letter --> \n+    <Rule Id=\"SA1303\" Action=\"Info\" /> <!-- Const field names should begin with upper-case letter --> \n+    <Rule Id=\"SA1304\" Action=\"Info\" /> <!-- Non-private readonly fields should begin with upper-case letter --> \n+    <Rule Id=\"SA1306\" Action=\"Info\" /> <!-- Field should begin with lower-case letter --> \n+    <Rule Id=\"SA1307\" Action=\"None\" />\n+    <Rule Id=\"SA1308\" Action=\"Info\" /> <!-- Field should not begin with the prefix 's_' --> \n+    <Rule Id=\"SA1309\" Action=\"None\" />\n+    <Rule Id=\"SA1310\" Action=\"None\" />\n+    <Rule Id=\"SA1311\" Action=\"Info\" /> <!-- Static readonly fields should begin with upper-case letter --> \n+    <Rule Id=\"SA1312\" Action=\"Info\" /> <!-- Variable should begin with lower-case letter --> \n+    <Rule Id=\"SA1313\" Action=\"Info\" /> <!-- Parameter should begin with lower-case letter --> \n+    <Rule Id=\"SA1314\" Action=\"None\" />\n+    <Rule Id=\"SA1316\" Action=\"Info\" /> <!-- Tuple element names should use correct casing --> \n+    <Rule Id=\"SA1400\" Action=\"None\" />\n+    <Rule Id=\"SA1401\" Action=\"Info\" /> <!-- Fields should be private --> \n+    <Rule Id=\"SA1402\" Action=\"Info\" /> <!-- File may only contain a single type --> \n+    <Rule Id=\"SA1403\" Action=\"Info\" /> <!-- File may only contain a single namespace --> \n+    <Rule Id=\"SA1404\" Action=\"Info\" /> <!-- Code analysis suppression should have justification --> \n+    <Rule Id=\"SA1405\" Action=\"Info\" /> <!-- Debug.Assert should provide message text --> \n+    <Rule Id=\"SA1407\" Action=\"Info\" /> <!-- Arithmetic expressions should declare precedence --> \n+    <Rule Id=\"SA1408\" Action=\"Info\" /> <!-- Conditional expressions should declare precedence --> \n+    <Rule Id=\"SA1410\" Action=\"None\" />\n+    <Rule Id=\"SA1411\" Action=\"None\" />\n+    <Rule Id=\"SA1413\" Action=\"Info\" /> <!-- Use trailing comma in multi-line initializers --> \n+    <Rule Id=\"SA1414\" Action=\"Info\" /> <!-- Tuple types in signatures should have element names --> \n+    <Rule Id=\"SA1500\" Action=\"Info\" /> <!-- Braces for multi-line statements should not share line --> \n+    <Rule Id=\"SA1501\" Action=\"Info\" /> <!-- Statement should not be on a single line --> \n+    <Rule Id=\"SA1502\" Action=\"Info\" /> <!-- Element should not be on a single line --> \n+    <Rule Id=\"SA1503\" Action=\"Info\" /> <!-- Braces should not be omitted --> \n+    <Rule Id=\"SA1504\" Action=\"Info\" /> <!-- All accessors should be single-line or multi-line --> \n+    <Rule Id=\"SA1505\" Action=\"Info\" /> <!-- An opening brace should not be followed by a blank line --> \n+    <Rule Id=\"SA1506\" Action=\"Info\" /> <!-- Element documentation headers should not be followed by blank line --> \n+    <Rule Id=\"SA1507\" Action=\"Info\" /> <!-- Code should not contain multiple blank lines in a row --> \n+    <Rule Id=\"SA1508\" Action=\"Info\" /> <!-- A closing brace should not be preceded by a blank line --> \n+    <Rule Id=\"SA1509\" Action=\"Info\" /> <!-- Opening braces should not be preceded by blank line --> \n+    <Rule Id=\"SA1510\" Action=\"Info\" /> <!-- 'else' statement should not be preceded by a blank line --> \n+    <Rule Id=\"SA1512\" Action=\"Info\" /> <!-- Single-line comments should not be followed by blank line --> \n+    <Rule Id=\"SA1513\" Action=\"Info\" /> <!-- Closing brace should be followed by blank line --> \n+    <Rule Id=\"SA1514\" Action=\"Info\" /> <!-- Element documentation header should be preceded by blank line --> \n+    <Rule Id=\"SA1515\" Action=\"Info\" /> <!-- Single-line comment should be preceded by blank line --> \n+    <Rule Id=\"SA1516\" Action=\"Info\" /> <!-- Elements should be separated by blank line --> \n+    <Rule Id=\"SA1517\" Action=\"None\" />\n+    <Rule Id=\"SA1519\" Action=\"Info\" /> <!-- Braces should not be omitted from multi-line child statement --> \n+    <Rule Id=\"SA1520\" Action=\"Info\" /> <!-- Use braces consistently --> \n+    <Rule Id=\"SA1600\" Action=\"None\" />\n+    <Rule Id=\"SA1601\" Action=\"Info\" /> <!-- Partial elements should be documented --> \n+    <Rule Id=\"SA1602\" Action=\"Info\" /> <!-- Enumeration items should be documented --> \n+    <Rule Id=\"SA1604\" Action=\"Info\" /> <!-- Element documentation should have summary --> \n+    <Rule Id=\"SA1605\" Action=\"Info\" /> <!-- Partial element documentation should have summary --> \n+    <Rule Id=\"SA1606\" Action=\"Info\" /> <!-- Element documentation should have summary text --> \n+    <Rule Id=\"SA1608\" Action=\"Info\" /> <!-- Element documentation should not have default summary --> \n+    <Rule Id=\"SA1610\" Action=\"Info\" /> <!-- Property documentation should have value text --> \n+    <Rule Id=\"SA1611\" Action=\"Info\" /> <!-- The documentation for parameter 'message' is missing --> \n+    <Rule Id=\"SA1612\" Action=\"Info\" /> <!-- The parameter documentation is at incorrect position --> \n+    <Rule Id=\"SA1614\" Action=\"Info\" /> <!-- Element parameter documentation should have text --> \n+    <Rule Id=\"SA1615\" Action=\"None\" />\n+    <Rule Id=\"SA1616\" Action=\"Info\" /> <!-- Element return value documentation should have text --> \n+    <Rule Id=\"SA1617\" Action=\"None\" />\n+\t<Rule Id=\"SA1618\" Action=\"Info\" /> <!-- The documentation for type parameter is missing --> ",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Nit: there are a few extra indents in this file.",
              "createdAt": "2021-07-19T23:33:30Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+      <Rule Id=\"CA1032\" Action=\"None\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+      <Rule Id=\"CA1034\" Action=\"None\" />\n+      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \n+      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \n+      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \n+      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \n+      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \n+      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \n+      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \n+      <Rule Id=\"CA1050\" Action=\"Info\" />             <!-- Declare types in namespaces --> \n+      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \n+      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \n+      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \n+      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \n+      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \n+      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \n+      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \n+      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \n+      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \n+      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \n+      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \n+      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \n+      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \n+      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \n+      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \n+      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \n+      <Rule Id=\"CA1200\" Action=\"Info\" />             <!-- Avoid using cref tags with a prefix --> \n+      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \n+      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \n+      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \n+      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \n+      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \n+      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \n+      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \n+      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \n+      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \n+      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \n+      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \n+      <Rule Id=\"CA1507\" Action=\"Info\" />             <!-- Use nameof to express symbol names --> \n+      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \n+      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \n+      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \n+      <Rule Id=\"CA1707\" Action=\"None\" />\n+      <Rule Id=\"CA1710\" Action=\"None\" />             <!-- Identifiers should have correct suffix --> \n+      <Rule Id=\"CA1711\" Action=\"None\" />             <!-- Identifiers should not have incorrect suffix --> \n+      <Rule Id=\"CA1712\" Action=\"None\" />             <!-- Do not prefix enum values with type name --> \n+      <Rule Id=\"CA1714\" Action=\"None\" />\n+      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \n+      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \n+      <Rule Id=\"CA1717\" Action=\"None\" />\n+      <Rule Id=\"CA1720\" Action=\"None\" />             <!-- Identifier contains type name --> \n+      <Rule Id=\"CA1721\" Action=\"None\" />             <!-- Property names should not match get methods --> \n+      <Rule Id=\"CA1724\" Action=\"None\" />             <!-- Type names should not match namespaces --> \n+      <Rule Id=\"CA1801\" Action=\"None\" />             <!-- Review unused parameters --> \n+      <Rule Id=\"CA1802\" Action=\"Info\" />             <!-- Use literals where appropriate --> \n+      <Rule Id=\"CA1805\" Action=\"Info\" />             <!-- Do not initialize unnecessarily --> \n+      <Rule Id=\"CA1806\" Action=\"None\" />\n+      <Rule Id=\"CA1810\" Action=\"Info\" />             <!-- Initialize reference type static fields inline --> \n+      <Rule Id=\"CA1812\" Action=\"None\" />             <!-- Avoid uninstantiated internal classes --> \n+      <Rule Id=\"CA1814\" Action=\"None\" />\n+      <Rule Id=\"CA1815\" Action=\"None\" />\n+      <Rule Id=\"CA1816\" Action=\"None\" />             <!-- Dispose methods should call SuppressFinalize --> \n+      <Rule Id=\"CA1819\" Action=\"None\" />\n+      <Rule Id=\"CA1820\" Action=\"None\" />             <!-- Test for empty strings using string length --> \n+      <Rule Id=\"CA1821\" Action=\"Warning\" />          <!-- Remove empty Finalizers --> \n+      <Rule Id=\"CA1822\" Action=\"None\" />             <!-- Mark members as static --> \n+      <Rule Id=\"CA1823\" Action=\"Info\" />             <!-- Avoid unused private fields --> \n+      <Rule Id=\"CA1824\" Action=\"Warning\" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->\n+      <Rule Id=\"CA1825\" Action=\"Info\" />             <!-- Avoid zero-length array allocations. --> \n+      <Rule Id=\"CA1827\" Action=\"Warning\" />          <!-- Do not use Count() or LongCount() when Any() can be used --> \n+      <Rule Id=\"CA1828\" Action=\"Warning\" />          <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used --> \n+      <Rule Id=\"CA1829\" Action=\"Info\" />             <!-- Use Length/Count property instead of Count() when available --> \n+      <Rule Id=\"CA1830\" Action=\"Warning\" />          <!-- Prefer strongly-typed Append and Insert method overloads on StringBuilder. --> \n+      <Rule Id=\"CA1831\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1832\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1833\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1834\" Action=\"Info\" />             <!-- Consider using 'StringBuilder.Append(char)' when applicable. --> \n+      <Rule Id=\"CA1835\" Action=\"Info\" />             <!-- Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync' --> \n+      <Rule Id=\"CA1836\" Action=\"Info\" />             <!-- Prefer IsEmpty over Count --> \n+      <Rule Id=\"CA1837\" Action=\"Info\" />             <!-- Use 'Environment.ProcessId' -->  \n+      <Rule Id=\"CA1838\" Action=\"Info\" />             <!-- Avoid 'StringBuilder' parameters for P/Invokes --> \n+      <Rule Id=\"CA2000\" Action=\"None\" />             <!-- Dispose objects before losing scope --> \n+      <Rule Id=\"CA2002\" Action=\"None\" />             <!-- Do not lock on objects with weak identity --> \n+      <Rule Id=\"CA2007\" Action=\"Info\" />             <!-- Consider calling ConfigureAwait on the awaited task --> \n+      <Rule Id=\"CA2008\" Action=\"Info\" />             <!-- Do not create tasks without passing a TaskScheduler --> \n+      <Rule Id=\"CA2009\" Action=\"Warning\" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value --> \n+      <Rule Id=\"CA2011\" Action=\"Warning\" />          <!-- Avoid infinite recursion --> \n+      <Rule Id=\"CA2012\" Action=\"Warning\" />          <!-- Use ValueTasks correctly --> \n+      <Rule Id=\"CA2013\" Action=\"Warning\" />          <!-- Do not use ReferenceEquals with value types --> \n+      <Rule Id=\"CA2014\" Action=\"Warning\" />          <!-- Do not use stackalloc in loops. --> \n+      <Rule Id=\"CA2015\" Action=\"Warning\" />          <!-- Do not define finalizers for types derived from MemoryManager<T> --> \n+      <Rule Id=\"CA2016\" Action=\"Info\" />             <!-- Forward the 'CancellationToken' parameter to methods that take one --> \n+      <Rule Id=\"CA2100\" Action=\"None\" />             <!-- Review SQL queries for security vulnerabilities --> \n+      <Rule Id=\"CA2101\" Action=\"None\" />             <!-- Specify marshaling for P/Invoke string arguments --> \n+      <Rule Id=\"CA2109\" Action=\"None\" />             <!-- Review visible event handlers --> \n+      <Rule Id=\"CA2119\" Action=\"None\" />             <!-- Seal methods that satisfy private interfaces --> \n+      <Rule Id=\"CA2153\" Action=\"None\" />             <!-- Do Not Catch Corrupted State Exceptions --> \n+      <Rule Id=\"CA2201\" Action=\"None\" />             <!-- Do not raise reserved exception types --> \n+      <Rule Id=\"CA2208\" Action=\"Info\" />             <!-- Instantiate argument exceptions correctly --> \n+      <Rule Id=\"CA2211\" Action=\"None\" />             <!-- Non-constant fields should not be visible --> \n+      <Rule Id=\"CA2213\" Action=\"None\" />             <!-- Disposable fields should be disposed --> \n+      <Rule Id=\"CA2215\" Action=\"None\" />             <!-- Dispose methods should call base class dispose --> \n+      <Rule Id=\"CA2216\" Action=\"None\" />             <!-- Disposable types should declare finalizer --> \n+      <Rule Id=\"CA2219\" Action=\"None\" />\n+      <Rule Id=\"CA2224\" Action=\"None\" />             <!-- Override Equals on overloading operator equals --> \n+      <Rule Id=\"CA2225\" Action=\"None\" />             <!-- Operator overloads have named alternates --> \n+      <Rule Id=\"CA2226\" Action=\"None\" />             <!-- Operators should have symmetrical overloads --> \n+      <Rule Id=\"CA2227\" Action=\"None\" />             <!-- Collection properties should be read only --> \n+      <Rule Id=\"CA2231\" Action=\"None\" />             <!-- Overload operator equals on overriding value type Equals --> \n+      <Rule Id=\"CA2234\" Action=\"None\" />             <!-- Pass system uri objects instead of strings --> \n+      <Rule Id=\"CA2235\" Action=\"None\" />             <!-- Mark all non-serializable fields --> \n+      <Rule Id=\"CA2241\" Action=\"Info\" />             <!-- Provide correct arguments to formatting methods --> \n+      <Rule Id=\"CA2242\" Action=\"Warning\" />          <!-- Test for NaN correctly --> \n+      <Rule Id=\"CA2243\" Action=\"None\" />             <!-- Attribute string literals should parse correctly --> \n+      <Rule Id=\"CA2244\" Action=\"None\" />             <!-- Do not duplicate indexed element initializations --> \n+      <Rule Id=\"CA2245\" Action=\"Warning\" />          <!-- Do not assign a property to itself. --> \n+      <Rule Id=\"CA2246\" Action=\"None\" />             <!-- Assigning symbol and its member in the same statement. --> \n+      <Rule Id=\"CA2247\" Action=\"Warning\" />          <!-- Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum. --> \n+      <Rule Id=\"CA2248\" Action=\"Warning\" />          <!-- Provide correct 'enum' argument to 'Enum.HasFlag' --> \n+      <Rule Id=\"CA2249\" Action=\"Info\" />             <!-- Consider using 'string.Contains' instead of 'string.IndexOf' --> \n+      <Rule Id=\"CA2300\" Action=\"None\" />             <!-- Do not use insecure deserializer BinaryFormatter --> \n+      <Rule Id=\"CA2301\" Action=\"None\" />             <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder --> \n+      <Rule Id=\"CA2302\" Action=\"None\" />             <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize --> \n+      <Rule Id=\"CA2305\" Action=\"None\" />             <!-- Do not use insecure deserializer LosFormatter --> \n+      <Rule Id=\"CA2310\" Action=\"None\" />             <!-- Do not use insecure deserializer NetDataContractSerializer --> \n+      <Rule Id=\"CA2311\" Action=\"None\" />             <!-- Do not deserialize without first setting NetDataContractSerializer.Binder --> \n+      <Rule Id=\"CA2312\" Action=\"None\" />             <!-- Ensure NetDataContractSerializer.Binder is set before deserializing --> \n+      <Rule Id=\"CA2315\" Action=\"None\" />             <!-- Do not use insecure deserializer ObjectStateFormatter --> \n+      <Rule Id=\"CA2321\" Action=\"None\" />             <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver --> \n+      <Rule Id=\"CA2322\" Action=\"None\" />             <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing --> \n+      <Rule Id=\"CA2326\" Action=\"None\" />             <!-- Do not use TypeNameHandling values other than None --> \n+      <Rule Id=\"CA2350\" Action=\"None\" />             <!-- Do not use DataTable.ReadXml() with untrusted data --> \n+      <Rule Id=\"CA2351\" Action=\"None\" />             <!-- Do not use DataSet.ReadXml() with untrusted data --> \n+      <Rule Id=\"CA2352\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA2353\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type --> \n+      <Rule Id=\"CA2354\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA2355\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type found in deserializable object graph --> \n+      <Rule Id=\"CA2356\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type in web deserializable object graph --> \n+      <Rule Id=\"CA2361\" Action=\"None\" />             <!-- Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data --> \n+      <Rule Id=\"CA2362\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA3001\" Action=\"None\" />             <!-- Review code for SQL injection vulnerabilities --> \n+      <Rule Id=\"CA3002\" Action=\"None\" />             <!-- Review code for XSS vulnerabilities --> \n+      <Rule Id=\"CA3003\" Action=\"None\" />             <!-- Review code for file path injection vulnerabilities --> \n+      <Rule Id=\"CA3004\" Action=\"None\" />             <!-- Review code for information disclosure vulnerabilities --> \n+      <Rule Id=\"CA3005\" Action=\"None\" />             <!-- Review code for LDAP injection vulnerabilities --> \n+      <Rule Id=\"CA3006\" Action=\"None\" />             <!-- Review code for process command injection vulnerabilities --> \n+      <Rule Id=\"CA3007\" Action=\"None\" />             <!-- Review code for open redirect vulnerabilities --> \n+      <Rule Id=\"CA3008\" Action=\"None\" />             <!-- Review code for XPath injection vulnerabilities --> \n+      <Rule Id=\"CA3009\" Action=\"None\" />             <!-- Review code for XML injection vulnerabilities --> \n+      <Rule Id=\"CA3010\" Action=\"None\" />             <!-- Review code for XAML injection vulnerabilities --> \n+      <Rule Id=\"CA3011\" Action=\"None\" />             <!-- Review code for DLL injection vulnerabilities --> \n+      <Rule Id=\"CA3012\" Action=\"None\" />             <!-- Review code for regex injection vulnerabilities --> \n+      <Rule Id=\"CA3061\" Action=\"Warning\" />          <!-- Do Not Add Schema By URL --> \n+      <Rule Id=\"CA3075\" Action=\"Warning\" />          <!-- Insecure DTD processing in XML --> \n+      <Rule Id=\"CA3076\" Action=\"Warning\" />          <!-- Insecure XSLT script processing. --> \n+      <Rule Id=\"CA3077\" Action=\"Warning\" />          <!-- Insecure Processing in API Design, XmlDocument and XmlTextReader --> \n+      <Rule Id=\"CA3147\" Action=\"Warning\" />          <!-- Mark Verb Handlers With Validate Antiforgery Token --> \n+      <Rule Id=\"CA5350\" Action=\"Warning\" />          <!-- Do Not Use Weak Cryptographic Algorithms --> \n+      <Rule Id=\"CA5351\" Action=\"Warning\" />          <!-- Do Not Use Broken Cryptographic Algorithms --> \n+      <Rule Id=\"CA5358\" Action=\"None\" />             <!-- Review cipher mode usage with cryptography experts --> \n+      <Rule Id=\"CA5359\" Action=\"Warning\" />          <!-- Do Not Disable Certificate Validation --> \n+      <Rule Id=\"CA5360\" Action=\"Warning\" />          <!-- Do Not Call Dangerous Methods In Deserialization --> \n+      <Rule Id=\"CA5361\" Action=\"Warning\" />          <!-- Do Not Disable SChannel Use of Strong Crypto --> \n+      <Rule Id=\"CA5362\" Action=\"None\" />             <!-- Potential reference cycle in deserialized object graph --> \n+      <Rule Id=\"CA5363\" Action=\"Warning\" />          <!-- Do Not Disable Request Validation --> \n+      <Rule Id=\"CA5364\" Action=\"Warning\" />          <!-- Do Not Use Deprecated Security Protocols --> \n+      <Rule Id=\"CA5365\" Action=\"Warning\" />          <!-- Do Not Disable HTTP Header Checking --> \n+      <Rule Id=\"CA5366\" Action=\"None\" />             <!-- Use XmlReader For DataSet Read Xml --> \n+      <Rule Id=\"CA5367\" Action=\"None\" />             <!-- Do Not Serialize Types With Pointer Fields --> \n+      <Rule Id=\"CA5368\" Action=\"Warning\" />          <!-- Set ViewStateUserKey For Classes Derived From Page --> \n+      <Rule Id=\"CA5369\" Action=\"None\" />             <!-- Use XmlReader For Deserialize --> \n+      <Rule Id=\"CA5370\" Action=\"Warning\" />          <!-- Use XmlReader For Validating Reader --> \n+      <Rule Id=\"CA5371\" Action=\"None\" />             <!-- Use XmlReader For Schema Read --> \n+      <Rule Id=\"CA5372\" Action=\"None\" />             <!-- Use XmlReader For XPathDocument --> \n+      <Rule Id=\"CA5373\" Action=\"Warning\" />          <!-- Do not use obsolete key derivation function --> \n+      <Rule Id=\"CA5374\" Action=\"Warning\" />          <!-- Do Not Use XslTransform --> \n+      <Rule Id=\"CA5375\" Action=\"None\" />             <!-- Do Not Use Account Shared Access Signature --> \n+      <Rule Id=\"CA5376\" Action=\"Warning\" />          <!-- Use SharedAccessProtocol HttpsOnly --> \n+      <Rule Id=\"CA5377\" Action=\"Warning\" />          <!-- Use Container Level Access Policy --> \n+      <Rule Id=\"CA5378\" Action=\"Warning\" />          <!-- Do not disable ServicePointManagerSecurityProtocols --> \n+      <Rule Id=\"CA5379\" Action=\"Warning\" />          <!-- Do Not Use Weak Key Derivation Function Algorithm --> \n+      <Rule Id=\"CA5380\" Action=\"Warning\" />          <!-- Do Not Add Certificates To Root Store --> \n+      <Rule Id=\"CA5381\" Action=\"Warning\" />          <!-- Ensure Certificates Are Not Added To Root Store --> \n+      <Rule Id=\"CA5382\" Action=\"None\" />             <!-- Use Secure Cookies In ASP.Net Core --> \n+      <Rule Id=\"CA5383\" Action=\"None\" />             <!-- Ensure Use Secure Cookies In ASP.Net Core --> \n+      <Rule Id=\"CA5384\" Action=\"Warning\" />          <!-- Do Not Use Digital Signature Algorithm (DSA) --> \n+      <Rule Id=\"CA5385\" Action=\"Warning\" />          <!-- Use Rivest\u2013Shamir\u2013Adleman (RSA) Algorithm With Sufficient Key Size --> \n+      <Rule Id=\"CA5386\" Action=\"None\" />             <!-- Avoid hardcoding SecurityProtocolType value --> \n+      <Rule Id=\"CA5387\" Action=\"None\" />             <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count --> \n+      <Rule Id=\"CA5388\" Action=\"None\" />             <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function --> \n+      <Rule Id=\"CA5389\" Action=\"None\" />             <!-- Do Not Add Archive Item's Path To The Target File System Path --> \n+      <Rule Id=\"CA5390\" Action=\"None\" />             <!-- Do not hard-code encryption key --> \n+      <Rule Id=\"CA5391\" Action=\"None\" />             <!-- Use antiforgery tokens in ASP.NET Core MVC controllers --> \n+      <Rule Id=\"CA5392\" Action=\"None\" />             <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes --> \n+      <Rule Id=\"CA5393\" Action=\"None\" />             <!-- Do not use unsafe DllImportSearchPath value --> \n+      <Rule Id=\"CA5394\" Action=\"None\" />             <!-- Do not use insecure randomness --> \n+      <Rule Id=\"CA5395\" Action=\"None\" />             <!-- Miss HttpVerb attribute for action methods --> \n+      <Rule Id=\"CA5396\" Action=\"None\" />             <!-- Set HttpOnly to true for HttpCookie --> \n+      <Rule Id=\"CA5397\" Action=\"None\" />             <!-- Do not use deprecated SslProtocols values --> \n+      <Rule Id=\"CA5398\" Action=\"None\" />             <!-- Avoid hardcoded SslProtocols values --> \n+      <Rule Id=\"CA5399\" Action=\"None\" />             <!-- HttpClients should enable certificate revocation list checks --> \n+      <Rule Id=\"CA5400\" Action=\"None\" />             <!-- Ensure HttpClient certificate revocation list check is not disabled --> \n+      <Rule Id=\"CA5401\" Action=\"None\" />             <!-- Do not use CreateEncryptor with non-default IV --> \n+      <Rule Id=\"CA5402\" Action=\"None\" />             <!-- Use CreateEncryptor with the default IV  --> \n+      <Rule Id=\"CA5403\" Action=\"None\" />             <!-- Do not hard-code certificate --> \n+      <Rule Id=\"IL3000\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \n+      <Rule Id=\"IL3001\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \n+  </Rules> \n+  <Rules AnalyzerId=\"StyleCop.Analyzers\" RuleNamespace=\"StyleCop.Analyzers\"> \n+    <Rule Id=\"AD0001\" Action=\"Info\" /> <!-- Analyzer threw an exception --> \n+    <Rule Id=\"SA0001\" Action=\"Info\" /> <!-- XML comments --> \n+    <Rule Id=\"SA1000\" Action=\"None\" />\n+    <Rule Id=\"SA1001\" Action=\"None\" />\n+    <Rule Id=\"SA1002\" Action=\"Info\" /> <!-- Semicolons should not be preceded by a space --> \n+    <Rule Id=\"SA1003\" Action=\"None\" />\n+    <Rule Id=\"SA1004\" Action=\"Info\" /> <!-- Documentation line should begin with a space --> \n+    <Rule Id=\"SA1005\" Action=\"Info\" /> <!-- Single line comment should begin with a space --> \n+    <Rule Id=\"SA1008\" Action=\"Info\" /> <!-- Opening parenthesis should not be preceded by a space --> \n+    <Rule Id=\"SA1009\" Action=\"Info\" /> <!-- Closing parenthesis should not be followed by a space --> \n+    <Rule Id=\"SA1010\" Action=\"Info\" /> <!-- Opening square brackets should not be preceded by a space --> \n+    <Rule Id=\"SA1011\" Action=\"Info\" /> <!-- Closing square bracket should be followed by a space --> \n+    <Rule Id=\"SA1012\" Action=\"Info\" /> <!-- Opening brace should be followed by a space --> \n+    <Rule Id=\"SA1013\" Action=\"Info\" /> <!-- Closing brace should be preceded by a space --> \n+    <Rule Id=\"SA1015\" Action=\"Info\" /> <!-- Closing generic bracket should not be followed by a space --> \n+    <Rule Id=\"SA1019\" Action=\"None\" />\n+    <Rule Id=\"SA1021\" Action=\"Info\" /> <!-- Negative sign should be preceded by a space --> \n+    <Rule Id=\"SA1023\" Action=\"Info\" /> <!-- Dereference symbol '*' should not be preceded by a space.\" --> \n+    <Rule Id=\"SA1024\" Action=\"Info\" /> <!-- Colon should be followed by a space --> \n+    <Rule Id=\"SA1025\" Action=\"Info\" /> <!-- Code should not contain multiple whitespace characters in a row --> \n+    <Rule Id=\"SA1026\" Action=\"None\" />\n+    <Rule Id=\"SA1027\" Action=\"None\" />\n+    <Rule Id=\"SA1028\" Action=\"None\" />\n+    <Rule Id=\"SA1100\" Action=\"Info\" /> <!-- Do not prefix calls with base unless local implementation exists --> \n+    <Rule Id=\"SA1101\" Action=\"None\" />\n+    <Rule Id=\"SA1106\" Action=\"Info\" /> <!-- Code should not contain empty statements --> \n+    <Rule Id=\"SA1107\" Action=\"Info\" /> <!-- Code should not contain multiple statements on one line --> \n+    <Rule Id=\"SA1108\" Action=\"None\" />\n+    <Rule Id=\"SA1110\" Action=\"Info\" /> <!-- Opening parenthesis or bracket should be on declaration line --> \n+    <Rule Id=\"SA1111\" Action=\"Info\" /> <!-- Closing parenthesis should be on line of last parameter --> \n+    <Rule Id=\"SA1112\" Action=\"None\" />\n+    <Rule Id=\"SA1113\" Action=\"None\" />\n+    <Rule Id=\"SA1114\" Action=\"Info\" /> <!-- Parameter list should follow declaration --> \n+    <Rule Id=\"SA1115\" Action=\"None\" />\n+    <Rule Id=\"SA1116\" Action=\"Info\" /> <!-- Split parameters should start on line after declaration --> \n+    <Rule Id=\"SA1117\" Action=\"Info\" /> <!-- Parameters should be on same line or separate lines --> \n+    <Rule Id=\"SA1118\" Action=\"None\" />\n+    <Rule Id=\"SA1119\" Action=\"None\" />\n+    <Rule Id=\"SA1120\" Action=\"Info\" /> <!-- Comments should contain text --> \n+    <Rule Id=\"SA1121\" Action=\"None\" />\n+    <Rule Id=\"SA1122\" Action=\"Info\" /> <!-- Use string.Empty for empty strings --> \n+    <Rule Id=\"SA1123\" Action=\"Info\" /> <!-- Region should not be located within a code element --> \n+    <Rule Id=\"SA1124\" Action=\"None\" />\n+    <Rule Id=\"SA1125\" Action=\"Info\" /> <!-- Use shorthand for nullable types --> \n+    <Rule Id=\"SA1127\" Action=\"Info\" /> <!-- Generic type constraints should be on their own line --> \n+    <Rule Id=\"SA1128\" Action=\"Info\" /> <!-- Put constructor initializers on their own line --> \n+    <Rule Id=\"SA1129\" Action=\"None\" />\n+    <Rule Id=\"SA1130\" Action=\"Info\" /> <!-- Use lambda syntax --> \n+    <Rule Id=\"SA1131\" Action=\"Info\" /> <!-- Constant values should appear on the right-hand side of comparisons --> \n+    <Rule Id=\"SA1132\" Action=\"Info\" /> <!-- Do not combine fields --> \n+    <Rule Id=\"SA1133\" Action=\"Info\" /> <!-- Do not combine attributes --> \n+    <Rule Id=\"SA1134\" Action=\"Info\" /> <!-- Each attribute should be placed on its own line of code --> \n+    <Rule Id=\"SA1135\" Action=\"Info\" /> <!-- Using directive should be qualified --> \n+    <Rule Id=\"SA1136\" Action=\"Info\" /> <!-- Enum values should be on separate lines --> \n+    <Rule Id=\"SA1137\" Action=\"Info\" /> <!-- Elements should have the same indentation --> \n+    <Rule Id=\"SA1139\" Action=\"None\" />\n+    <Rule Id=\"SA1200\" Action=\"None\" />\n+    <Rule Id=\"SA1201\" Action=\"Info\" /> <!-- Elements should appear in the correct order --> \n+    <Rule Id=\"SA1202\" Action=\"Info\" /> <!-- Elements should be ordered by access --> \n+    <Rule Id=\"SA1203\" Action=\"Info\" /> <!-- Constants should appear before fields --> \n+    <Rule Id=\"SA1204\" Action=\"Info\" /> <!-- Static elements should appear before instance elements --> \n+    <Rule Id=\"SA1205\" Action=\"None\" />\n+    <Rule Id=\"SA1206\" Action=\"None\" />\n+    <Rule Id=\"SA1208\" Action=\"Info\" /> <!-- Using directive ordering --> \n+    <Rule Id=\"SA1209\" Action=\"Info\" /> <!-- Using alias directives should be placed after all using namespace directives --> \n+    <Rule Id=\"SA1210\" Action=\"Info\" /> <!-- Using directives should be ordered alphabetically by the namespaces --> \n+    <Rule Id=\"SA1211\" Action=\"Info\" /> <!-- Using alias directive ordering --> \n+    <Rule Id=\"SA1212\" Action=\"None\" />\n+    <Rule Id=\"SA1214\" Action=\"Info\" /> <!-- Readonly fields should appear before non-readonly fields --> \n+    <Rule Id=\"SA1216\" Action=\"Info\" /> <!-- Using static directives should be placed at the correct location --> \n+    <Rule Id=\"SA1300\" Action=\"Info\" /> <!-- Element should begin with an uppercase letter --> \n+    <Rule Id=\"SA1303\" Action=\"Info\" /> <!-- Const field names should begin with upper-case letter --> \n+    <Rule Id=\"SA1304\" Action=\"Info\" /> <!-- Non-private readonly fields should begin with upper-case letter --> \n+    <Rule Id=\"SA1306\" Action=\"Info\" /> <!-- Field should begin with lower-case letter --> \n+    <Rule Id=\"SA1307\" Action=\"None\" />\n+    <Rule Id=\"SA1308\" Action=\"Info\" /> <!-- Field should not begin with the prefix 's_' --> \n+    <Rule Id=\"SA1309\" Action=\"None\" />\n+    <Rule Id=\"SA1310\" Action=\"None\" />\n+    <Rule Id=\"SA1311\" Action=\"Info\" /> <!-- Static readonly fields should begin with upper-case letter --> \n+    <Rule Id=\"SA1312\" Action=\"Info\" /> <!-- Variable should begin with lower-case letter --> \n+    <Rule Id=\"SA1313\" Action=\"Info\" /> <!-- Parameter should begin with lower-case letter --> \n+    <Rule Id=\"SA1314\" Action=\"None\" />\n+    <Rule Id=\"SA1316\" Action=\"Info\" /> <!-- Tuple element names should use correct casing --> \n+    <Rule Id=\"SA1400\" Action=\"None\" />\n+    <Rule Id=\"SA1401\" Action=\"Info\" /> <!-- Fields should be private --> \n+    <Rule Id=\"SA1402\" Action=\"Info\" /> <!-- File may only contain a single type --> \n+    <Rule Id=\"SA1403\" Action=\"Info\" /> <!-- File may only contain a single namespace --> \n+    <Rule Id=\"SA1404\" Action=\"Info\" /> <!-- Code analysis suppression should have justification --> \n+    <Rule Id=\"SA1405\" Action=\"Info\" /> <!-- Debug.Assert should provide message text --> \n+    <Rule Id=\"SA1407\" Action=\"Info\" /> <!-- Arithmetic expressions should declare precedence --> \n+    <Rule Id=\"SA1408\" Action=\"Info\" /> <!-- Conditional expressions should declare precedence --> \n+    <Rule Id=\"SA1410\" Action=\"None\" />\n+    <Rule Id=\"SA1411\" Action=\"None\" />\n+    <Rule Id=\"SA1413\" Action=\"Info\" /> <!-- Use trailing comma in multi-line initializers --> \n+    <Rule Id=\"SA1414\" Action=\"Info\" /> <!-- Tuple types in signatures should have element names --> \n+    <Rule Id=\"SA1500\" Action=\"Info\" /> <!-- Braces for multi-line statements should not share line --> \n+    <Rule Id=\"SA1501\" Action=\"Info\" /> <!-- Statement should not be on a single line --> \n+    <Rule Id=\"SA1502\" Action=\"Info\" /> <!-- Element should not be on a single line --> \n+    <Rule Id=\"SA1503\" Action=\"Info\" /> <!-- Braces should not be omitted --> \n+    <Rule Id=\"SA1504\" Action=\"Info\" /> <!-- All accessors should be single-line or multi-line --> \n+    <Rule Id=\"SA1505\" Action=\"Info\" /> <!-- An opening brace should not be followed by a blank line --> \n+    <Rule Id=\"SA1506\" Action=\"Info\" /> <!-- Element documentation headers should not be followed by blank line --> \n+    <Rule Id=\"SA1507\" Action=\"Info\" /> <!-- Code should not contain multiple blank lines in a row --> \n+    <Rule Id=\"SA1508\" Action=\"Info\" /> <!-- A closing brace should not be preceded by a blank line --> \n+    <Rule Id=\"SA1509\" Action=\"Info\" /> <!-- Opening braces should not be preceded by blank line --> \n+    <Rule Id=\"SA1510\" Action=\"Info\" /> <!-- 'else' statement should not be preceded by a blank line --> \n+    <Rule Id=\"SA1512\" Action=\"Info\" /> <!-- Single-line comments should not be followed by blank line --> \n+    <Rule Id=\"SA1513\" Action=\"Info\" /> <!-- Closing brace should be followed by blank line --> \n+    <Rule Id=\"SA1514\" Action=\"Info\" /> <!-- Element documentation header should be preceded by blank line --> \n+    <Rule Id=\"SA1515\" Action=\"Info\" /> <!-- Single-line comment should be preceded by blank line --> \n+    <Rule Id=\"SA1516\" Action=\"Info\" /> <!-- Elements should be separated by blank line --> \n+    <Rule Id=\"SA1517\" Action=\"None\" />\n+    <Rule Id=\"SA1519\" Action=\"Info\" /> <!-- Braces should not be omitted from multi-line child statement --> \n+    <Rule Id=\"SA1520\" Action=\"Info\" /> <!-- Use braces consistently --> \n+    <Rule Id=\"SA1600\" Action=\"None\" />\n+    <Rule Id=\"SA1601\" Action=\"Info\" /> <!-- Partial elements should be documented --> \n+    <Rule Id=\"SA1602\" Action=\"Info\" /> <!-- Enumeration items should be documented --> \n+    <Rule Id=\"SA1604\" Action=\"Info\" /> <!-- Element documentation should have summary --> \n+    <Rule Id=\"SA1605\" Action=\"Info\" /> <!-- Partial element documentation should have summary --> \n+    <Rule Id=\"SA1606\" Action=\"Info\" /> <!-- Element documentation should have summary text --> \n+    <Rule Id=\"SA1608\" Action=\"Info\" /> <!-- Element documentation should not have default summary --> \n+    <Rule Id=\"SA1610\" Action=\"Info\" /> <!-- Property documentation should have value text --> \n+    <Rule Id=\"SA1611\" Action=\"Info\" /> <!-- The documentation for parameter 'message' is missing --> \n+    <Rule Id=\"SA1612\" Action=\"Info\" /> <!-- The parameter documentation is at incorrect position --> \n+    <Rule Id=\"SA1614\" Action=\"Info\" /> <!-- Element parameter documentation should have text --> \n+    <Rule Id=\"SA1615\" Action=\"None\" />\n+    <Rule Id=\"SA1616\" Action=\"Info\" /> <!-- Element return value documentation should have text --> \n+    <Rule Id=\"SA1617\" Action=\"None\" />\n+      <Rule Id=\"SA1618\" Action=\"Info\" /> <!-- The documentation for type parameter is missing --> ",
              "author": {
                "login": "benvillalobos"
              }
            },
            {
              "body": "I've pushed through a fix to all the indent issues.",
              "createdAt": "2021-07-20T00:19:21Z",
              "path": "eng/CodeAnalysis.ruleset",
              "diffHunk": "@@ -0,0 +1,385 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RuleSet Name=\"Microsoft.Analyzers.ManagedCodeAnalysis\" Description=\"Microsoft.Analyzers.ManagedCodeAnalysis\" ToolsVersion=\"16.0\">\n+<Rules AnalyzerId=\"Microsoft.DotNet.CodeAnalysis\" RuleNamespace=\"Microsoft.DotNet.CodeAnalysis.Analyzers\"> \n+      <Rule Id=\"BCL0001\" Action=\"Warning\" />         <!-- Ensure minimum API surface is respected --> \n+      <Rule Id=\"BCL0010\" Action=\"Warning\" />         <!-- AppContext default value expected to be true --> \n+      <Rule Id=\"BCL0011\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement with incorrect pattern --> \n+      <Rule Id=\"BCL0012\" Action=\"Warning\" />         <!-- AppContext default value defined in if statement at root of switch case --> \n+      <Rule Id=\"BCL0015\" Action=\"None\" />            <!-- Invalid P/Invoke call --> \n+      <Rule Id=\"BCL0020\" Action=\"Warning\" />         <!-- Invalid SR.Format call --> \n+   </Rules> \n+   <Rules AnalyzerId=\"Microsoft.CodeAnalysis.NetAnalyzers\" RuleNamespace=\"Microsoft.CodeAnalysis.NetAnalyzers\"> \n+      <Rule Id=\"CA1000\" Action=\"None\" />             <!-- Do not declare static members on generic types --> \n+      <Rule Id=\"CA1001\" Action=\"None\" />             <!-- Types that own disposable fields should be disposable --> \n+      <Rule Id=\"CA1002\" Action=\"None\" />             <!-- Do not expose generic lists --> \n+      <Rule Id=\"CA1003\" Action=\"None\" />             <!-- Use generic event handler instances --> \n+      <Rule Id=\"CA1005\" Action=\"None\" />             <!-- Avoid excessive parameters on generic types --> \n+      <Rule Id=\"CA1008\" Action=\"None\" />             <!-- Enums should have zero value --> \n+      <Rule Id=\"CA1010\" Action=\"None\" />             <!-- Generic interface should also be implemented --> \n+      <Rule Id=\"CA1012\" Action=\"None\" />             <!-- Abstract types should not have constructors --> \n+      <Rule Id=\"CA1014\" Action=\"None\" />             <!-- Mark assemblies with CLSCompliant --> \n+      <Rule Id=\"CA1016\" Action=\"None\" />             <!-- Mark assemblies with assembly version --> \n+      <Rule Id=\"CA1017\" Action=\"None\" />             <!-- Mark assemblies with ComVisible --> \n+      <Rule Id=\"CA1018\" Action=\"Warning\" />          <!-- Mark attributes with AttributeUsageAttribute --> \n+      <Rule Id=\"CA1019\" Action=\"None\" />             <!-- Define accessors for attribute arguments --> \n+      <Rule Id=\"CA1024\" Action=\"None\" />             <!-- Use properties where appropriate --> \n+      <Rule Id=\"CA1027\" Action=\"None\" />             <!-- Mark enums with FlagsAttribute --> \n+      <Rule Id=\"CA1028\" Action=\"None\" />             <!-- Enum Storage should be Int32 --> \n+      <Rule Id=\"CA1030\" Action=\"None\" />             <!-- Use events where appropriate --> \n+      <Rule Id=\"CA1031\" Action=\"None\" />             <!-- Do not catch general exception types --> \n+      <Rule Id=\"CA1032\" Action=\"None\" />\n+      <Rule Id=\"CA1033\" Action=\"None\" />             <!-- Interface methods should be callable by child types --> \n+      <Rule Id=\"CA1034\" Action=\"None\" />\n+      <Rule Id=\"CA1036\" Action=\"None\" />             <!-- Override methods on comparable types --> \n+      <Rule Id=\"CA1040\" Action=\"None\" />             <!-- Avoid empty interfaces --> \n+      <Rule Id=\"CA1041\" Action=\"None\" />             <!-- Provide ObsoleteAttribute message --> \n+      <Rule Id=\"CA1043\" Action=\"None\" />             <!-- Use Integral Or String Argument For Indexers --> \n+      <Rule Id=\"CA1044\" Action=\"None\" />             <!-- Properties should not be write only --> \n+      <Rule Id=\"CA1046\" Action=\"None\" />             <!-- Do not overload equality operator on reference types --> \n+      <Rule Id=\"CA1047\" Action=\"Warning\" />          <!-- Do not declare protected member in sealed type --> \n+      <Rule Id=\"CA1050\" Action=\"Info\" />             <!-- Declare types in namespaces --> \n+      <Rule Id=\"CA1051\" Action=\"None\" />             <!-- Do not declare visible instance fields --> \n+      <Rule Id=\"CA1052\" Action=\"None\" />             <!-- Static holder types should be Static or NotInheritable --> \n+      <Rule Id=\"CA1054\" Action=\"None\" />             <!-- Uri parameters should not be strings --> \n+      <Rule Id=\"CA1055\" Action=\"None\" />             <!-- Uri return values should not be strings --> \n+      <Rule Id=\"CA1056\" Action=\"None\" />             <!-- Uri properties should not be strings --> \n+      <Rule Id=\"CA1058\" Action=\"None\" />             <!-- Types should not extend certain base types --> \n+      <Rule Id=\"CA1061\" Action=\"None\" />             <!-- Do not hide base class methods --> \n+      <Rule Id=\"CA1062\" Action=\"None\" />             <!-- Validate arguments of public methods --> \n+      <Rule Id=\"CA1063\" Action=\"None\" />             <!-- Implement IDisposable Correctly --> \n+      <Rule Id=\"CA1064\" Action=\"None\" />             <!-- Exceptions should be public --> \n+      <Rule Id=\"CA1065\" Action=\"None\" />             <!-- Do not raise exceptions in unexpected locations --> \n+      <Rule Id=\"CA1066\" Action=\"None\" />             <!-- Implement IEquatable when overriding Object.Equals --> \n+      <Rule Id=\"CA1067\" Action=\"None\" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> --> \n+      <Rule Id=\"CA1068\" Action=\"None\" />             <!-- CancellationToken parameters must come last --> \n+      <Rule Id=\"CA1069\" Action=\"None\" />             <!-- Enums values should not be duplicated --> \n+      <Rule Id=\"CA1070\" Action=\"Info\" />             <!-- Do not declare event fields as virtual --> \n+      <Rule Id=\"CA1200\" Action=\"Info\" />             <!-- Avoid using cref tags with a prefix --> \n+      <Rule Id=\"CA1303\" Action=\"None\" />             <!-- Do not pass literals as localized parameters --> \n+      <Rule Id=\"CA1304\" Action=\"None\" />             <!-- Specify CultureInfo --> \n+      <Rule Id=\"CA1305\" Action=\"None\" />             <!-- Specify IFormatProvider --> \n+      <Rule Id=\"CA1307\" Action=\"None\" />             <!-- Specify StringComparison --> \n+      <Rule Id=\"CA1308\" Action=\"None\" />             <!-- Normalize strings to uppercase --> \n+      <Rule Id=\"CA1309\" Action=\"None\" />             <!-- Use ordinal stringcomparison --> \n+      <Rule Id=\"CA1401\" Action=\"Warning\" />          <!-- P/Invokes should not be visible --> \n+      <Rule Id=\"CA1417\" Action=\"Warning\" />          <!-- Do not use 'OutAttribute' on string parameters for P/Invokes --> \n+      <Rule Id=\"CA1502\" Action=\"None\" />             <!-- Avoid excessive complexity --> \n+      <Rule Id=\"CA1505\" Action=\"None\" />             <!-- Avoid unmaintainable code --> \n+      <Rule Id=\"CA1506\" Action=\"None\" />             <!-- Avoid excessive class coupling --> \n+      <Rule Id=\"CA1507\" Action=\"Info\" />             <!-- Use nameof to express symbol names --> \n+      <Rule Id=\"CA1508\" Action=\"None\" />             <!-- Avoid dead conditional code --> \n+      <Rule Id=\"CA1509\" Action=\"None\" />             <!-- Invalid entry in code metrics rule specification file --> \n+      <Rule Id=\"CA1700\" Action=\"None\" />             <!-- Do not name enum values 'Reserved' --> \n+      <Rule Id=\"CA1707\" Action=\"None\" />\n+      <Rule Id=\"CA1710\" Action=\"None\" />             <!-- Identifiers should have correct suffix --> \n+      <Rule Id=\"CA1711\" Action=\"None\" />             <!-- Identifiers should not have incorrect suffix --> \n+      <Rule Id=\"CA1712\" Action=\"None\" />             <!-- Do not prefix enum values with type name --> \n+      <Rule Id=\"CA1714\" Action=\"None\" />\n+      <Rule Id=\"CA1715\" Action=\"None\" />             <!-- Identifiers should have correct prefix --> \n+      <Rule Id=\"CA1716\" Action=\"None\" />             <!-- Identifiers should not match keywords --> \n+      <Rule Id=\"CA1717\" Action=\"None\" />\n+      <Rule Id=\"CA1720\" Action=\"None\" />             <!-- Identifier contains type name --> \n+      <Rule Id=\"CA1721\" Action=\"None\" />             <!-- Property names should not match get methods --> \n+      <Rule Id=\"CA1724\" Action=\"None\" />             <!-- Type names should not match namespaces --> \n+      <Rule Id=\"CA1801\" Action=\"None\" />             <!-- Review unused parameters --> \n+      <Rule Id=\"CA1802\" Action=\"Info\" />             <!-- Use literals where appropriate --> \n+      <Rule Id=\"CA1805\" Action=\"Info\" />             <!-- Do not initialize unnecessarily --> \n+      <Rule Id=\"CA1806\" Action=\"None\" />\n+      <Rule Id=\"CA1810\" Action=\"Info\" />             <!-- Initialize reference type static fields inline --> \n+      <Rule Id=\"CA1812\" Action=\"None\" />             <!-- Avoid uninstantiated internal classes --> \n+      <Rule Id=\"CA1814\" Action=\"None\" />\n+      <Rule Id=\"CA1815\" Action=\"None\" />\n+      <Rule Id=\"CA1816\" Action=\"None\" />             <!-- Dispose methods should call SuppressFinalize --> \n+      <Rule Id=\"CA1819\" Action=\"None\" />\n+      <Rule Id=\"CA1820\" Action=\"None\" />             <!-- Test for empty strings using string length --> \n+      <Rule Id=\"CA1821\" Action=\"Warning\" />          <!-- Remove empty Finalizers --> \n+      <Rule Id=\"CA1822\" Action=\"None\" />             <!-- Mark members as static --> \n+      <Rule Id=\"CA1823\" Action=\"Info\" />             <!-- Avoid unused private fields --> \n+      <Rule Id=\"CA1824\" Action=\"Warning\" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->\n+      <Rule Id=\"CA1825\" Action=\"Info\" />             <!-- Avoid zero-length array allocations. --> \n+      <Rule Id=\"CA1827\" Action=\"Warning\" />          <!-- Do not use Count() or LongCount() when Any() can be used --> \n+      <Rule Id=\"CA1828\" Action=\"Warning\" />          <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used --> \n+      <Rule Id=\"CA1829\" Action=\"Info\" />             <!-- Use Length/Count property instead of Count() when available --> \n+      <Rule Id=\"CA1830\" Action=\"Warning\" />          <!-- Prefer strongly-typed Append and Insert method overloads on StringBuilder. --> \n+      <Rule Id=\"CA1831\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1832\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1833\" Action=\"Warning\" />          <!-- Use AsSpan or AsMemory instead of Range-based indexers when appropriate --> \n+      <Rule Id=\"CA1834\" Action=\"Info\" />             <!-- Consider using 'StringBuilder.Append(char)' when applicable. --> \n+      <Rule Id=\"CA1835\" Action=\"Info\" />             <!-- Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync' --> \n+      <Rule Id=\"CA1836\" Action=\"Info\" />             <!-- Prefer IsEmpty over Count --> \n+      <Rule Id=\"CA1837\" Action=\"Info\" />             <!-- Use 'Environment.ProcessId' -->  \n+      <Rule Id=\"CA1838\" Action=\"Info\" />             <!-- Avoid 'StringBuilder' parameters for P/Invokes --> \n+      <Rule Id=\"CA2000\" Action=\"None\" />             <!-- Dispose objects before losing scope --> \n+      <Rule Id=\"CA2002\" Action=\"None\" />             <!-- Do not lock on objects with weak identity --> \n+      <Rule Id=\"CA2007\" Action=\"Info\" />             <!-- Consider calling ConfigureAwait on the awaited task --> \n+      <Rule Id=\"CA2008\" Action=\"Info\" />             <!-- Do not create tasks without passing a TaskScheduler --> \n+      <Rule Id=\"CA2009\" Action=\"Warning\" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value --> \n+      <Rule Id=\"CA2011\" Action=\"Warning\" />          <!-- Avoid infinite recursion --> \n+      <Rule Id=\"CA2012\" Action=\"Warning\" />          <!-- Use ValueTasks correctly --> \n+      <Rule Id=\"CA2013\" Action=\"Warning\" />          <!-- Do not use ReferenceEquals with value types --> \n+      <Rule Id=\"CA2014\" Action=\"Warning\" />          <!-- Do not use stackalloc in loops. --> \n+      <Rule Id=\"CA2015\" Action=\"Warning\" />          <!-- Do not define finalizers for types derived from MemoryManager<T> --> \n+      <Rule Id=\"CA2016\" Action=\"Info\" />             <!-- Forward the 'CancellationToken' parameter to methods that take one --> \n+      <Rule Id=\"CA2100\" Action=\"None\" />             <!-- Review SQL queries for security vulnerabilities --> \n+      <Rule Id=\"CA2101\" Action=\"None\" />             <!-- Specify marshaling for P/Invoke string arguments --> \n+      <Rule Id=\"CA2109\" Action=\"None\" />             <!-- Review visible event handlers --> \n+      <Rule Id=\"CA2119\" Action=\"None\" />             <!-- Seal methods that satisfy private interfaces --> \n+      <Rule Id=\"CA2153\" Action=\"None\" />             <!-- Do Not Catch Corrupted State Exceptions --> \n+      <Rule Id=\"CA2201\" Action=\"None\" />             <!-- Do not raise reserved exception types --> \n+      <Rule Id=\"CA2208\" Action=\"Info\" />             <!-- Instantiate argument exceptions correctly --> \n+      <Rule Id=\"CA2211\" Action=\"None\" />             <!-- Non-constant fields should not be visible --> \n+      <Rule Id=\"CA2213\" Action=\"None\" />             <!-- Disposable fields should be disposed --> \n+      <Rule Id=\"CA2215\" Action=\"None\" />             <!-- Dispose methods should call base class dispose --> \n+      <Rule Id=\"CA2216\" Action=\"None\" />             <!-- Disposable types should declare finalizer --> \n+      <Rule Id=\"CA2219\" Action=\"None\" />\n+      <Rule Id=\"CA2224\" Action=\"None\" />             <!-- Override Equals on overloading operator equals --> \n+      <Rule Id=\"CA2225\" Action=\"None\" />             <!-- Operator overloads have named alternates --> \n+      <Rule Id=\"CA2226\" Action=\"None\" />             <!-- Operators should have symmetrical overloads --> \n+      <Rule Id=\"CA2227\" Action=\"None\" />             <!-- Collection properties should be read only --> \n+      <Rule Id=\"CA2231\" Action=\"None\" />             <!-- Overload operator equals on overriding value type Equals --> \n+      <Rule Id=\"CA2234\" Action=\"None\" />             <!-- Pass system uri objects instead of strings --> \n+      <Rule Id=\"CA2235\" Action=\"None\" />             <!-- Mark all non-serializable fields --> \n+      <Rule Id=\"CA2241\" Action=\"Info\" />             <!-- Provide correct arguments to formatting methods --> \n+      <Rule Id=\"CA2242\" Action=\"Warning\" />          <!-- Test for NaN correctly --> \n+      <Rule Id=\"CA2243\" Action=\"None\" />             <!-- Attribute string literals should parse correctly --> \n+      <Rule Id=\"CA2244\" Action=\"None\" />             <!-- Do not duplicate indexed element initializations --> \n+      <Rule Id=\"CA2245\" Action=\"Warning\" />          <!-- Do not assign a property to itself. --> \n+      <Rule Id=\"CA2246\" Action=\"None\" />             <!-- Assigning symbol and its member in the same statement. --> \n+      <Rule Id=\"CA2247\" Action=\"Warning\" />          <!-- Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum. --> \n+      <Rule Id=\"CA2248\" Action=\"Warning\" />          <!-- Provide correct 'enum' argument to 'Enum.HasFlag' --> \n+      <Rule Id=\"CA2249\" Action=\"Info\" />             <!-- Consider using 'string.Contains' instead of 'string.IndexOf' --> \n+      <Rule Id=\"CA2300\" Action=\"None\" />             <!-- Do not use insecure deserializer BinaryFormatter --> \n+      <Rule Id=\"CA2301\" Action=\"None\" />             <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder --> \n+      <Rule Id=\"CA2302\" Action=\"None\" />             <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize --> \n+      <Rule Id=\"CA2305\" Action=\"None\" />             <!-- Do not use insecure deserializer LosFormatter --> \n+      <Rule Id=\"CA2310\" Action=\"None\" />             <!-- Do not use insecure deserializer NetDataContractSerializer --> \n+      <Rule Id=\"CA2311\" Action=\"None\" />             <!-- Do not deserialize without first setting NetDataContractSerializer.Binder --> \n+      <Rule Id=\"CA2312\" Action=\"None\" />             <!-- Ensure NetDataContractSerializer.Binder is set before deserializing --> \n+      <Rule Id=\"CA2315\" Action=\"None\" />             <!-- Do not use insecure deserializer ObjectStateFormatter --> \n+      <Rule Id=\"CA2321\" Action=\"None\" />             <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver --> \n+      <Rule Id=\"CA2322\" Action=\"None\" />             <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing --> \n+      <Rule Id=\"CA2326\" Action=\"None\" />             <!-- Do not use TypeNameHandling values other than None --> \n+      <Rule Id=\"CA2350\" Action=\"None\" />             <!-- Do not use DataTable.ReadXml() with untrusted data --> \n+      <Rule Id=\"CA2351\" Action=\"None\" />             <!-- Do not use DataSet.ReadXml() with untrusted data --> \n+      <Rule Id=\"CA2352\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA2353\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in serializable type --> \n+      <Rule Id=\"CA2354\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA2355\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type found in deserializable object graph --> \n+      <Rule Id=\"CA2356\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable type in web deserializable object graph --> \n+      <Rule Id=\"CA2361\" Action=\"None\" />             <!-- Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data --> \n+      <Rule Id=\"CA2362\" Action=\"None\" />             <!-- Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks --> \n+      <Rule Id=\"CA3001\" Action=\"None\" />             <!-- Review code for SQL injection vulnerabilities --> \n+      <Rule Id=\"CA3002\" Action=\"None\" />             <!-- Review code for XSS vulnerabilities --> \n+      <Rule Id=\"CA3003\" Action=\"None\" />             <!-- Review code for file path injection vulnerabilities --> \n+      <Rule Id=\"CA3004\" Action=\"None\" />             <!-- Review code for information disclosure vulnerabilities --> \n+      <Rule Id=\"CA3005\" Action=\"None\" />             <!-- Review code for LDAP injection vulnerabilities --> \n+      <Rule Id=\"CA3006\" Action=\"None\" />             <!-- Review code for process command injection vulnerabilities --> \n+      <Rule Id=\"CA3007\" Action=\"None\" />             <!-- Review code for open redirect vulnerabilities --> \n+      <Rule Id=\"CA3008\" Action=\"None\" />             <!-- Review code for XPath injection vulnerabilities --> \n+      <Rule Id=\"CA3009\" Action=\"None\" />             <!-- Review code for XML injection vulnerabilities --> \n+      <Rule Id=\"CA3010\" Action=\"None\" />             <!-- Review code for XAML injection vulnerabilities --> \n+      <Rule Id=\"CA3011\" Action=\"None\" />             <!-- Review code for DLL injection vulnerabilities --> \n+      <Rule Id=\"CA3012\" Action=\"None\" />             <!-- Review code for regex injection vulnerabilities --> \n+      <Rule Id=\"CA3061\" Action=\"Warning\" />          <!-- Do Not Add Schema By URL --> \n+      <Rule Id=\"CA3075\" Action=\"Warning\" />          <!-- Insecure DTD processing in XML --> \n+      <Rule Id=\"CA3076\" Action=\"Warning\" />          <!-- Insecure XSLT script processing. --> \n+      <Rule Id=\"CA3077\" Action=\"Warning\" />          <!-- Insecure Processing in API Design, XmlDocument and XmlTextReader --> \n+      <Rule Id=\"CA3147\" Action=\"Warning\" />          <!-- Mark Verb Handlers With Validate Antiforgery Token --> \n+      <Rule Id=\"CA5350\" Action=\"Warning\" />          <!-- Do Not Use Weak Cryptographic Algorithms --> \n+      <Rule Id=\"CA5351\" Action=\"Warning\" />          <!-- Do Not Use Broken Cryptographic Algorithms --> \n+      <Rule Id=\"CA5358\" Action=\"None\" />             <!-- Review cipher mode usage with cryptography experts --> \n+      <Rule Id=\"CA5359\" Action=\"Warning\" />          <!-- Do Not Disable Certificate Validation --> \n+      <Rule Id=\"CA5360\" Action=\"Warning\" />          <!-- Do Not Call Dangerous Methods In Deserialization --> \n+      <Rule Id=\"CA5361\" Action=\"Warning\" />          <!-- Do Not Disable SChannel Use of Strong Crypto --> \n+      <Rule Id=\"CA5362\" Action=\"None\" />             <!-- Potential reference cycle in deserialized object graph --> \n+      <Rule Id=\"CA5363\" Action=\"Warning\" />          <!-- Do Not Disable Request Validation --> \n+      <Rule Id=\"CA5364\" Action=\"Warning\" />          <!-- Do Not Use Deprecated Security Protocols --> \n+      <Rule Id=\"CA5365\" Action=\"Warning\" />          <!-- Do Not Disable HTTP Header Checking --> \n+      <Rule Id=\"CA5366\" Action=\"None\" />             <!-- Use XmlReader For DataSet Read Xml --> \n+      <Rule Id=\"CA5367\" Action=\"None\" />             <!-- Do Not Serialize Types With Pointer Fields --> \n+      <Rule Id=\"CA5368\" Action=\"Warning\" />          <!-- Set ViewStateUserKey For Classes Derived From Page --> \n+      <Rule Id=\"CA5369\" Action=\"None\" />             <!-- Use XmlReader For Deserialize --> \n+      <Rule Id=\"CA5370\" Action=\"Warning\" />          <!-- Use XmlReader For Validating Reader --> \n+      <Rule Id=\"CA5371\" Action=\"None\" />             <!-- Use XmlReader For Schema Read --> \n+      <Rule Id=\"CA5372\" Action=\"None\" />             <!-- Use XmlReader For XPathDocument --> \n+      <Rule Id=\"CA5373\" Action=\"Warning\" />          <!-- Do not use obsolete key derivation function --> \n+      <Rule Id=\"CA5374\" Action=\"Warning\" />          <!-- Do Not Use XslTransform --> \n+      <Rule Id=\"CA5375\" Action=\"None\" />             <!-- Do Not Use Account Shared Access Signature --> \n+      <Rule Id=\"CA5376\" Action=\"Warning\" />          <!-- Use SharedAccessProtocol HttpsOnly --> \n+      <Rule Id=\"CA5377\" Action=\"Warning\" />          <!-- Use Container Level Access Policy --> \n+      <Rule Id=\"CA5378\" Action=\"Warning\" />          <!-- Do not disable ServicePointManagerSecurityProtocols --> \n+      <Rule Id=\"CA5379\" Action=\"Warning\" />          <!-- Do Not Use Weak Key Derivation Function Algorithm --> \n+      <Rule Id=\"CA5380\" Action=\"Warning\" />          <!-- Do Not Add Certificates To Root Store --> \n+      <Rule Id=\"CA5381\" Action=\"Warning\" />          <!-- Ensure Certificates Are Not Added To Root Store --> \n+      <Rule Id=\"CA5382\" Action=\"None\" />             <!-- Use Secure Cookies In ASP.Net Core --> \n+      <Rule Id=\"CA5383\" Action=\"None\" />             <!-- Ensure Use Secure Cookies In ASP.Net Core --> \n+      <Rule Id=\"CA5384\" Action=\"Warning\" />          <!-- Do Not Use Digital Signature Algorithm (DSA) --> \n+      <Rule Id=\"CA5385\" Action=\"Warning\" />          <!-- Use Rivest\u2013Shamir\u2013Adleman (RSA) Algorithm With Sufficient Key Size --> \n+      <Rule Id=\"CA5386\" Action=\"None\" />             <!-- Avoid hardcoding SecurityProtocolType value --> \n+      <Rule Id=\"CA5387\" Action=\"None\" />             <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count --> \n+      <Rule Id=\"CA5388\" Action=\"None\" />             <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function --> \n+      <Rule Id=\"CA5389\" Action=\"None\" />             <!-- Do Not Add Archive Item's Path To The Target File System Path --> \n+      <Rule Id=\"CA5390\" Action=\"None\" />             <!-- Do not hard-code encryption key --> \n+      <Rule Id=\"CA5391\" Action=\"None\" />             <!-- Use antiforgery tokens in ASP.NET Core MVC controllers --> \n+      <Rule Id=\"CA5392\" Action=\"None\" />             <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes --> \n+      <Rule Id=\"CA5393\" Action=\"None\" />             <!-- Do not use unsafe DllImportSearchPath value --> \n+      <Rule Id=\"CA5394\" Action=\"None\" />             <!-- Do not use insecure randomness --> \n+      <Rule Id=\"CA5395\" Action=\"None\" />             <!-- Miss HttpVerb attribute for action methods --> \n+      <Rule Id=\"CA5396\" Action=\"None\" />             <!-- Set HttpOnly to true for HttpCookie --> \n+      <Rule Id=\"CA5397\" Action=\"None\" />             <!-- Do not use deprecated SslProtocols values --> \n+      <Rule Id=\"CA5398\" Action=\"None\" />             <!-- Avoid hardcoded SslProtocols values --> \n+      <Rule Id=\"CA5399\" Action=\"None\" />             <!-- HttpClients should enable certificate revocation list checks --> \n+      <Rule Id=\"CA5400\" Action=\"None\" />             <!-- Ensure HttpClient certificate revocation list check is not disabled --> \n+      <Rule Id=\"CA5401\" Action=\"None\" />             <!-- Do not use CreateEncryptor with non-default IV --> \n+      <Rule Id=\"CA5402\" Action=\"None\" />             <!-- Use CreateEncryptor with the default IV  --> \n+      <Rule Id=\"CA5403\" Action=\"None\" />             <!-- Do not hard-code certificate --> \n+      <Rule Id=\"IL3000\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \n+      <Rule Id=\"IL3001\" Action=\"None\" />             <!-- Avoid using accessing Assembly file path when publishing as a single-file --> \n+  </Rules> \n+  <Rules AnalyzerId=\"StyleCop.Analyzers\" RuleNamespace=\"StyleCop.Analyzers\"> \n+    <Rule Id=\"AD0001\" Action=\"Info\" /> <!-- Analyzer threw an exception --> \n+    <Rule Id=\"SA0001\" Action=\"Info\" /> <!-- XML comments --> \n+    <Rule Id=\"SA1000\" Action=\"None\" />\n+    <Rule Id=\"SA1001\" Action=\"None\" />\n+    <Rule Id=\"SA1002\" Action=\"Info\" /> <!-- Semicolons should not be preceded by a space --> \n+    <Rule Id=\"SA1003\" Action=\"None\" />\n+    <Rule Id=\"SA1004\" Action=\"Info\" /> <!-- Documentation line should begin with a space --> \n+    <Rule Id=\"SA1005\" Action=\"Info\" /> <!-- Single line comment should begin with a space --> \n+    <Rule Id=\"SA1008\" Action=\"Info\" /> <!-- Opening parenthesis should not be preceded by a space --> \n+    <Rule Id=\"SA1009\" Action=\"Info\" /> <!-- Closing parenthesis should not be followed by a space --> \n+    <Rule Id=\"SA1010\" Action=\"Info\" /> <!-- Opening square brackets should not be preceded by a space --> \n+    <Rule Id=\"SA1011\" Action=\"Info\" /> <!-- Closing square bracket should be followed by a space --> \n+    <Rule Id=\"SA1012\" Action=\"Info\" /> <!-- Opening brace should be followed by a space --> \n+    <Rule Id=\"SA1013\" Action=\"Info\" /> <!-- Closing brace should be preceded by a space --> \n+    <Rule Id=\"SA1015\" Action=\"Info\" /> <!-- Closing generic bracket should not be followed by a space --> \n+    <Rule Id=\"SA1019\" Action=\"None\" />\n+    <Rule Id=\"SA1021\" Action=\"Info\" /> <!-- Negative sign should be preceded by a space --> \n+    <Rule Id=\"SA1023\" Action=\"Info\" /> <!-- Dereference symbol '*' should not be preceded by a space.\" --> \n+    <Rule Id=\"SA1024\" Action=\"Info\" /> <!-- Colon should be followed by a space --> \n+    <Rule Id=\"SA1025\" Action=\"Info\" /> <!-- Code should not contain multiple whitespace characters in a row --> \n+    <Rule Id=\"SA1026\" Action=\"None\" />\n+    <Rule Id=\"SA1027\" Action=\"None\" />\n+    <Rule Id=\"SA1028\" Action=\"None\" />\n+    <Rule Id=\"SA1100\" Action=\"Info\" /> <!-- Do not prefix calls with base unless local implementation exists --> \n+    <Rule Id=\"SA1101\" Action=\"None\" />\n+    <Rule Id=\"SA1106\" Action=\"Info\" /> <!-- Code should not contain empty statements --> \n+    <Rule Id=\"SA1107\" Action=\"Info\" /> <!-- Code should not contain multiple statements on one line --> \n+    <Rule Id=\"SA1108\" Action=\"None\" />\n+    <Rule Id=\"SA1110\" Action=\"Info\" /> <!-- Opening parenthesis or bracket should be on declaration line --> \n+    <Rule Id=\"SA1111\" Action=\"Info\" /> <!-- Closing parenthesis should be on line of last parameter --> \n+    <Rule Id=\"SA1112\" Action=\"None\" />\n+    <Rule Id=\"SA1113\" Action=\"None\" />\n+    <Rule Id=\"SA1114\" Action=\"Info\" /> <!-- Parameter list should follow declaration --> \n+    <Rule Id=\"SA1115\" Action=\"None\" />\n+    <Rule Id=\"SA1116\" Action=\"Info\" /> <!-- Split parameters should start on line after declaration --> \n+    <Rule Id=\"SA1117\" Action=\"Info\" /> <!-- Parameters should be on same line or separate lines --> \n+    <Rule Id=\"SA1118\" Action=\"None\" />\n+    <Rule Id=\"SA1119\" Action=\"None\" />\n+    <Rule Id=\"SA1120\" Action=\"Info\" /> <!-- Comments should contain text --> \n+    <Rule Id=\"SA1121\" Action=\"None\" />\n+    <Rule Id=\"SA1122\" Action=\"Info\" /> <!-- Use string.Empty for empty strings --> \n+    <Rule Id=\"SA1123\" Action=\"Info\" /> <!-- Region should not be located within a code element --> \n+    <Rule Id=\"SA1124\" Action=\"None\" />\n+    <Rule Id=\"SA1125\" Action=\"Info\" /> <!-- Use shorthand for nullable types --> \n+    <Rule Id=\"SA1127\" Action=\"Info\" /> <!-- Generic type constraints should be on their own line --> \n+    <Rule Id=\"SA1128\" Action=\"Info\" /> <!-- Put constructor initializers on their own line --> \n+    <Rule Id=\"SA1129\" Action=\"None\" />\n+    <Rule Id=\"SA1130\" Action=\"Info\" /> <!-- Use lambda syntax --> \n+    <Rule Id=\"SA1131\" Action=\"Info\" /> <!-- Constant values should appear on the right-hand side of comparisons --> \n+    <Rule Id=\"SA1132\" Action=\"Info\" /> <!-- Do not combine fields --> \n+    <Rule Id=\"SA1133\" Action=\"Info\" /> <!-- Do not combine attributes --> \n+    <Rule Id=\"SA1134\" Action=\"Info\" /> <!-- Each attribute should be placed on its own line of code --> \n+    <Rule Id=\"SA1135\" Action=\"Info\" /> <!-- Using directive should be qualified --> \n+    <Rule Id=\"SA1136\" Action=\"Info\" /> <!-- Enum values should be on separate lines --> \n+    <Rule Id=\"SA1137\" Action=\"Info\" /> <!-- Elements should have the same indentation --> \n+    <Rule Id=\"SA1139\" Action=\"None\" />\n+    <Rule Id=\"SA1200\" Action=\"None\" />\n+    <Rule Id=\"SA1201\" Action=\"Info\" /> <!-- Elements should appear in the correct order --> \n+    <Rule Id=\"SA1202\" Action=\"Info\" /> <!-- Elements should be ordered by access --> \n+    <Rule Id=\"SA1203\" Action=\"Info\" /> <!-- Constants should appear before fields --> \n+    <Rule Id=\"SA1204\" Action=\"Info\" /> <!-- Static elements should appear before instance elements --> \n+    <Rule Id=\"SA1205\" Action=\"None\" />\n+    <Rule Id=\"SA1206\" Action=\"None\" />\n+    <Rule Id=\"SA1208\" Action=\"Info\" /> <!-- Using directive ordering --> \n+    <Rule Id=\"SA1209\" Action=\"Info\" /> <!-- Using alias directives should be placed after all using namespace directives --> \n+    <Rule Id=\"SA1210\" Action=\"Info\" /> <!-- Using directives should be ordered alphabetically by the namespaces --> \n+    <Rule Id=\"SA1211\" Action=\"Info\" /> <!-- Using alias directive ordering --> \n+    <Rule Id=\"SA1212\" Action=\"None\" />\n+    <Rule Id=\"SA1214\" Action=\"Info\" /> <!-- Readonly fields should appear before non-readonly fields --> \n+    <Rule Id=\"SA1216\" Action=\"Info\" /> <!-- Using static directives should be placed at the correct location --> \n+    <Rule Id=\"SA1300\" Action=\"Info\" /> <!-- Element should begin with an uppercase letter --> \n+    <Rule Id=\"SA1303\" Action=\"Info\" /> <!-- Const field names should begin with upper-case letter --> \n+    <Rule Id=\"SA1304\" Action=\"Info\" /> <!-- Non-private readonly fields should begin with upper-case letter --> \n+    <Rule Id=\"SA1306\" Action=\"Info\" /> <!-- Field should begin with lower-case letter --> \n+    <Rule Id=\"SA1307\" Action=\"None\" />\n+    <Rule Id=\"SA1308\" Action=\"Info\" /> <!-- Field should not begin with the prefix 's_' --> \n+    <Rule Id=\"SA1309\" Action=\"None\" />\n+    <Rule Id=\"SA1310\" Action=\"None\" />\n+    <Rule Id=\"SA1311\" Action=\"Info\" /> <!-- Static readonly fields should begin with upper-case letter --> \n+    <Rule Id=\"SA1312\" Action=\"Info\" /> <!-- Variable should begin with lower-case letter --> \n+    <Rule Id=\"SA1313\" Action=\"Info\" /> <!-- Parameter should begin with lower-case letter --> \n+    <Rule Id=\"SA1314\" Action=\"None\" />\n+    <Rule Id=\"SA1316\" Action=\"Info\" /> <!-- Tuple element names should use correct casing --> \n+    <Rule Id=\"SA1400\" Action=\"None\" />\n+    <Rule Id=\"SA1401\" Action=\"Info\" /> <!-- Fields should be private --> \n+    <Rule Id=\"SA1402\" Action=\"Info\" /> <!-- File may only contain a single type --> \n+    <Rule Id=\"SA1403\" Action=\"Info\" /> <!-- File may only contain a single namespace --> \n+    <Rule Id=\"SA1404\" Action=\"Info\" /> <!-- Code analysis suppression should have justification --> \n+    <Rule Id=\"SA1405\" Action=\"Info\" /> <!-- Debug.Assert should provide message text --> \n+    <Rule Id=\"SA1407\" Action=\"Info\" /> <!-- Arithmetic expressions should declare precedence --> \n+    <Rule Id=\"SA1408\" Action=\"Info\" /> <!-- Conditional expressions should declare precedence --> \n+    <Rule Id=\"SA1410\" Action=\"None\" />\n+    <Rule Id=\"SA1411\" Action=\"None\" />\n+    <Rule Id=\"SA1413\" Action=\"Info\" /> <!-- Use trailing comma in multi-line initializers --> \n+    <Rule Id=\"SA1414\" Action=\"Info\" /> <!-- Tuple types in signatures should have element names --> \n+    <Rule Id=\"SA1500\" Action=\"Info\" /> <!-- Braces for multi-line statements should not share line --> \n+    <Rule Id=\"SA1501\" Action=\"Info\" /> <!-- Statement should not be on a single line --> \n+    <Rule Id=\"SA1502\" Action=\"Info\" /> <!-- Element should not be on a single line --> \n+    <Rule Id=\"SA1503\" Action=\"Info\" /> <!-- Braces should not be omitted --> \n+    <Rule Id=\"SA1504\" Action=\"Info\" /> <!-- All accessors should be single-line or multi-line --> \n+    <Rule Id=\"SA1505\" Action=\"Info\" /> <!-- An opening brace should not be followed by a blank line --> \n+    <Rule Id=\"SA1506\" Action=\"Info\" /> <!-- Element documentation headers should not be followed by blank line --> \n+    <Rule Id=\"SA1507\" Action=\"Info\" /> <!-- Code should not contain multiple blank lines in a row --> \n+    <Rule Id=\"SA1508\" Action=\"Info\" /> <!-- A closing brace should not be preceded by a blank line --> \n+    <Rule Id=\"SA1509\" Action=\"Info\" /> <!-- Opening braces should not be preceded by blank line --> \n+    <Rule Id=\"SA1510\" Action=\"Info\" /> <!-- 'else' statement should not be preceded by a blank line --> \n+    <Rule Id=\"SA1512\" Action=\"Info\" /> <!-- Single-line comments should not be followed by blank line --> \n+    <Rule Id=\"SA1513\" Action=\"Info\" /> <!-- Closing brace should be followed by blank line --> \n+    <Rule Id=\"SA1514\" Action=\"Info\" /> <!-- Element documentation header should be preceded by blank line --> \n+    <Rule Id=\"SA1515\" Action=\"Info\" /> <!-- Single-line comment should be preceded by blank line --> \n+    <Rule Id=\"SA1516\" Action=\"Info\" /> <!-- Elements should be separated by blank line --> \n+    <Rule Id=\"SA1517\" Action=\"None\" />\n+    <Rule Id=\"SA1519\" Action=\"Info\" /> <!-- Braces should not be omitted from multi-line child statement --> \n+    <Rule Id=\"SA1520\" Action=\"Info\" /> <!-- Use braces consistently --> \n+    <Rule Id=\"SA1600\" Action=\"None\" />\n+    <Rule Id=\"SA1601\" Action=\"Info\" /> <!-- Partial elements should be documented --> \n+    <Rule Id=\"SA1602\" Action=\"Info\" /> <!-- Enumeration items should be documented --> \n+    <Rule Id=\"SA1604\" Action=\"Info\" /> <!-- Element documentation should have summary --> \n+    <Rule Id=\"SA1605\" Action=\"Info\" /> <!-- Partial element documentation should have summary --> \n+    <Rule Id=\"SA1606\" Action=\"Info\" /> <!-- Element documentation should have summary text --> \n+    <Rule Id=\"SA1608\" Action=\"Info\" /> <!-- Element documentation should not have default summary --> \n+    <Rule Id=\"SA1610\" Action=\"Info\" /> <!-- Property documentation should have value text --> \n+    <Rule Id=\"SA1611\" Action=\"Info\" /> <!-- The documentation for parameter 'message' is missing --> \n+    <Rule Id=\"SA1612\" Action=\"Info\" /> <!-- The parameter documentation is at incorrect position --> \n+    <Rule Id=\"SA1614\" Action=\"Info\" /> <!-- Element parameter documentation should have text --> \n+    <Rule Id=\"SA1615\" Action=\"None\" />\n+    <Rule Id=\"SA1616\" Action=\"Info\" /> <!-- Element return value documentation should have text --> \n+    <Rule Id=\"SA1617\" Action=\"None\" />\n+      <Rule Id=\"SA1618\" Action=\"Info\" /> <!-- The documentation for type parameter is missing --> ",
              "author": {
                "login": "elachlan"
              }
            }
          ]
        }
      }
    ]
  }
}