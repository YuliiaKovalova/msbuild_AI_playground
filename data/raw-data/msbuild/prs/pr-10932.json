{
  "number": 10932,
  "title": "Add EvaluatedItemCheckData",
  "body": "### Context\r\nAdding EvaluatedItemCheckData to BuildCheck OM - to prepare for some sample Item data/metadata Checks implementation\r\n\r\n### Testing\r\nThe leveraging checks:\r\n * https://github.com/dotnet/msbuild/pull/10955\r\n * (TBD - EmbeddedResource should have Culture)\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2024-11-04T20:26:35Z",
  "updatedAt": "2024-11-18T10:52:35Z",
  "closedAt": "2024-11-18T10:52:33Z",
  "mergedAt": "2024-11-18T10:52:33Z",
  "additions": 86,
  "deletions": 3,
  "changedFiles": 7,
  "headRefName": "proto/buildcheck-itemdata",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "ff2853ffc8c72272f7b51dc2394b3f163e6a24ee",
          "message": "Add EvaluatedItemCheckData",
          "committedDate": "2024-11-04T20:24:51Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fd106955726acba234beda6a787c4983408d8482",
          "message": "Fix build",
          "committedDate": "2024-11-05T11:16:52Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Do we have plans to remove `ParsedItemsCheckData` in the future? Or are we just going to keep it as an obsolete class?",
        "createdAt": "2024-11-11T10:25:33Z",
        "author": {
          "login": "maridematte"
        }
      },
      {
        "body": "> Do we have plans to remove `ParsedItemsCheckData` in the future? Or are we just going to keep it as an obsolete class?\r\n\r\nI'd give possible users at least 2 previews to use the new OM. So probably Feb/Mar next year - for 10.0, possibly for 9.0.3xx as well",
        "createdAt": "2024-11-12T16:20:42Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "I think adding some documentation or comment somewhere would interesting, so in the future we remember to remove the obsolete methods. Otherwise it might end-up like our Deprecated folder.",
        "createdAt": "2024-11-13T14:14:56Z",
        "author": {
          "login": "maridematte"
        }
      },
      {
        "body": "> I think adding some documentation or comment somewhere would interesting, so in the future we remember to remove the obsolete methods. Otherwise it might end-up like our Deprecated folder.\r\n\r\nDefinitely maes sense. Tracking here: https://github.com/dotnet/msbuild/issues/10985",
        "createdAt": "2024-11-18T09:42:37Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I think we should add to the message when we plan to deprecate it? Both for users to be aware and as a reminder for us to clean up the code.",
              "createdAt": "2024-11-18T09:29:15Z",
              "path": "src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs",
              "diffHunk": "@@ -9,8 +9,11 @@ public interface IBuildCheckRegistrationContext\n {\n     void RegisterEvaluatedPropertiesAction(Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>> evaluatedPropertiesAction);\n \n+    [Obsolete(\"Use RegisterEvaluatedItemsAction to obtain evaluated items of a project.\", false)]",
              "author": {
                "login": "maridematte"
              }
            },
            {
              "body": "Let's stay with a tracking bug - we cannot (and actually should not) publicly promisse any timelines",
              "createdAt": "2024-11-18T10:52:25Z",
              "path": "src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs",
              "diffHunk": "@@ -9,8 +9,11 @@ public interface IBuildCheckRegistrationContext\n {\n     void RegisterEvaluatedPropertiesAction(Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>> evaluatedPropertiesAction);\n \n+    [Obsolete(\"Use RegisterEvaluatedItemsAction to obtain evaluated items of a project.\", false)]",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}