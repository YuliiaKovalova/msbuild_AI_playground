{
  "number": 6992,
  "title": "Simplify verify throw and remove unnecessary usings",
  "body": "This has a little random cleanup plus moving the condition outside VerifyThrow calls if simply calling the method would do a nontrivial amount of work. The fourth commit switches VerifyThrow* to Throw* as appropriate.\r\n\r\nI haven't measured the performance impact. The first and fourth commits should have ~0 impact, though technically the fourth commit makes it slightly faster in the failure case (by one branch). The third helps us avoid a couple small allocations. The second lets us avoid a nontrivial amount of work in an extremely common case, so if this has a positive perf impact, I would suspect that commit.\r\n\r\nIt should be easiest to look at this commit-by-commit.",
  "state": "CLOSED",
  "createdAt": "2021-10-25T14:47:09Z",
  "updatedAt": "2021-10-29T00:20:37Z",
  "closedAt": "2021-10-29T00:20:37Z",
  "mergedAt": null,
  "additions": 147,
  "deletions": 150,
  "changedFiles": 43,
  "headRefName": "simplify-verifyThrow",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "e02b3d998f7c4b39bd960f75446a74cda489bc27",
          "message": "Early exit",
          "committedDate": "2021-09-20T16:45:15Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "64354ffaa325fa0ddace363f9790d4e462b1a3a7",
          "message": "Prevent double computation\n\nWhen calculating a value to see if we can do a type of comparison, store\nthat value so we don't have to calculate it again. Use Try*Evaluate\ninstead of Can*Evaluate and *Evaluate.",
          "committedDate": "2021-09-20T16:52:02Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "762ac1d16cef349166315d4ebc8067eccee38724",
          "message": "Use search for @",
          "committedDate": "2021-09-20T16:52:03Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f9456c464db1abc03b9eebf4e70d67ffbe75ea9f",
          "message": "Fix incorrect bool check",
          "committedDate": "2021-09-22T23:41:23Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "16a30b3d743048fda810e0169573845630616656",
          "message": "Throw error",
          "committedDate": "2021-10-04T19:34:41Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6e4c0d40640287f3350e59b858cb2b11d733e49e",
          "message": "Replace Can*Evaluate and *Evaluate with Try*Evaluate\n\nRemoves all *Evaluate and Can*Evaluate except in OperatorExpressionNodes, for which CanBoolEvaluate always returns true, so using a simple BoolEvaluate makes sense.\n\nNote that for the NumericComparisonExpressionNode, we could save a tiny amount of time by only calling TryEvaluate when it's actually used (and using if/else as before), but that would since something can be both a number and a version, that would mean we would have to check both regardless of what we had previously found, which means it would be noticeably messier for (probably) very little perf gain, so I opted against that. Switch statements are so pretty \ud83d\ude42",
          "committedDate": "2021-10-11T17:17:55Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2aac6e2b1ded22944aab261b64860b6f6617f665",
          "message": "Do not abbreviate variable name",
          "committedDate": "2021-10-11T17:18:11Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0134385bfb480d51f7f2a5a54cce7d95e562e6c5",
          "message": "Switch switch to tuple\n\nApparently that's the best supported way",
          "committedDate": "2021-10-11T17:53:04Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "625fd3f3e587b238514542d8c358376c0c57aa19",
          "message": "Switch order of check\n\nI tested once with and once without this change, and with this change, Evaluate was 3% faster...that sounds noisy, but I'll still take it.",
          "committedDate": "2021-10-11T18:31:46Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "62760c1cac87d8436dd446dd60624b89834b6e12",
          "message": "Throw exception where necessary",
          "committedDate": "2021-10-11T18:48:31Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "de2f644b21cd2b682bdaa956cc287212b0ddafb6",
          "message": "Remove unnecessary usings",
          "committedDate": "2021-10-14T22:21:40Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9a7da6d43aad7886be3c8acdca6e880fa4fd349d",
          "message": "Move condition outside VerifyThrow\n\nThese statements only do anything if the condition is false, but they evaluate their arguments either way. These do nontrivial work when evaluating their arguments, so figure out if we should skip it early. This is specifically tuned to BoolEvaluate (part of evaluating conditions)",
          "committedDate": "2021-10-25T16:22:09Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "48e493f77b3b66fc399fad7bdb2b86389b2eb6c0",
          "message": "Other VerifyThrow simplifications\n\nSlightly reduce other work done",
          "committedDate": "2021-10-25T16:22:09Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f13ad041c39528e83a5bfba145f96468cf42b9ac",
          "message": "Directly throw exceptions\n\nRather than checking whether false is false.",
          "committedDate": "2021-10-27T00:58:35Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "65367d14064051e7773f8459af2397d758f40543",
          "message": "Remove unnecessary usings",
          "committedDate": "2021-10-27T04:44:22Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b805230f8089431ca81c0266d507e8ab6eb9c9a8",
          "message": "Move condition outside VerifyThrow\n\nThese statements only do anything if the condition is false, but they evaluate their arguments either way. These do nontrivial work when evaluating their arguments, so figure out if we should skip it early. This is specifically tuned to BoolEvaluate (part of evaluating conditions)",
          "committedDate": "2021-10-27T04:44:23Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "486fb2e6a30f859fe8763c8b4e71721e5df21d91",
          "message": "Other VerifyThrow simplifications\n\nSlightly reduce other work done",
          "committedDate": "2021-10-27T04:44:23Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f81a256e314a96dd34d11c4b702b6fa27dfcb3c8",
          "message": "Directly throw exceptions\n\nRather than checking whether false is false.",
          "committedDate": "2021-10-27T04:44:23Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6839f98e834cd8a118e3fbdda6cbc6ec601d5e8c",
          "message": "Merge branch 'simplify-verifyThrow' of https://github.com/Forgind/msbuild into simplify-verifyThrow",
          "committedDate": "2021-10-28T23:24:20Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": []
  }
}