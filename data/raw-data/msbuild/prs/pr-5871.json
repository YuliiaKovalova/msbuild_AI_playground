{
  "number": 5871,
  "title": "fixed path problem for issue 4682",
  "body": "I have switch the code from quotation marks to Path.GetFullPath()",
  "state": "CLOSED",
  "createdAt": "2020-11-07T20:00:31Z",
  "updatedAt": "2021-01-08T16:55:07Z",
  "closedAt": "2021-01-08T16:55:07Z",
  "mergedAt": null,
  "additions": 2,
  "deletions": 7,
  "changedFiles": 1,
  "headRefName": "issue4682",
  "isDraft": false,
  "author": {
    "login": "TyRusty"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "e81127e16de842ca2490d20ff94d81a746581e4c",
          "message": "fixed path problem for issue 4682",
          "committedDate": "2020-11-07T19:43:54Z",
          "author": {
            "name": "TyRusty",
            "email": "72839490+TyRusty@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Unfortunately, I think this invalidates the test, since what we're trying to test here is that our utilities correctly handle both the case where the application part of the command line is quoted and unquoted, that is\r\n\r\n```\r\npath\\to\\msbuild.exe and some arguments\r\n```\r\n\r\nand\r\n\r\n```\r\n\"path\\to\\msbuild.exe\" and some arguments\r\n```\r\n\r\nshould both work fine.\r\n\r\nIt looks like the issue is that this test doesn't make sense on .NET Core, because of this code:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/56ab6340935d039999a588621733fa2384dae2a3/src/UnitTests.Shared/RunnerUtilities.cs#L28-L33\r\n\r\nOn .NET Core we fall into the `else` case there, because instead of running\r\n\r\n```\r\nmsbuild.exe arguments\r\n```\r\n\r\nwe run\r\n\r\n```\r\ndotnet.exe \"path\\to\\msbuild.dll\" arguments\r\n```\r\n\r\nAs a result, when this test quotes the MSBuild path, it gets double-quoted in the command line\r\n\r\n```\r\ndotnet.exe \"\"path\\to\\msbuild.dll\"\" arguments\r\n```\r\n\r\nwhich is basically equivalent to \r\n\r\n```\r\ndotnet.exe path\\to\\msbuild.dll arguments\r\n```\r\n\r\nwhich fails if the path has a space in it.",
              "createdAt": "2020-11-13T17:06:29Z",
              "path": "src/MSBuild.UnitTests/XMake_Tests.cs",
              "diffHunk": "@@ -830,13 +830,8 @@ public void GetCommandLineQuotedExe()\n             File.Exists(_pathToArbitraryBogusFile).ShouldBeTrue();\n \n             bool successfulExit;\n-            string pathToMSBuildExe = RunnerUtilities.PathToCurrentlyRunningMsBuildExe;\n-            // This @pathToMSBuildExe is used directly with Process, so don't quote it on\n-            // Unix\n-            if (NativeMethodsShared.IsWindows)\n-            {\n-                pathToMSBuildExe = \"\\\"\" + pathToMSBuildExe + \"\\\"\";\n-            }\n+            string pathToMSBuildExe = Path.GetFullPath(RunnerUtilities.PathToCurrentlyRunningMsBuildExe);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}