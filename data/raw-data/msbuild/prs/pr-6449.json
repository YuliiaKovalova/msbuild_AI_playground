{
  "number": 6449,
  "title": "Main => VS17.0",
  "body": "As discussed updating vs17 to Main head.",
  "state": "CLOSED",
  "createdAt": "2021-05-13T08:32:56Z",
  "updatedAt": "2021-05-13T08:56:43Z",
  "closedAt": "2021-05-13T08:56:43Z",
  "mergedAt": null,
  "additions": 701,
  "deletions": 56,
  "changedFiles": 31,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "rokonec"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1e7693249da0c51c1af08fd0d0cfac40a761c4b9",
          "message": "Extract restore flags to variable",
          "committedDate": "2021-04-26T16:34:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f29a6fd3a756b6a1bbf0cbc012adc231c3d28e7d",
          "message": "Fix bug in check on FailOnUnresolvedSdk",
          "committedDate": "2021-04-26T16:34:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ebc4a8bd554f2ecb7a0777e954e4154ef1ebe793",
          "message": "Put fail-restore behavior under 16.10 changewave\n\nAdd the behavior improvements from #6312 to the 16.10 changewave since\nthey cause failures in cases that didn't fail before.",
          "committedDate": "2021-04-26T17:46:21Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "da900e2a6d7109e973f9eb712b4afdb456610c9b",
          "message": "Changewave 16.10 for restore failures #6372\n\n#6312 made (good, IMO) changes to the behavior of -restore and -t:restore invocations of MSBuild in malformed projects. Since these are new errors, though, the new behavior might fail passing builds. So put it behind a change wave Just In Case.",
          "committedDate": "2021-04-27T15:15:39Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b945a71e163d35daae8b97405059be5ef2089d4f",
          "message": "Add binding redirects for all assemblies redistributed by MSBuild (#6334)\n\nMSBuild redistributes System.Memory but does not binding redirect it. This causes the QB cache plugin to fail (qb.exe works because it has binding redirects, but the plugin fails because it's a dll and dlls don't have binding redirects).\r\nBoth MSBuild and VS ship with System.Memory 4.0.1.1 so this should not have any negative consequences.",
          "committedDate": "2021-04-27T15:24:27Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1d1fec7c49795b247fc45fac0fb1fdd736c6a368",
          "message": "Ignore comments and whitespace when parsing read-only XML files (#6232)\n\nFixes #2576\r\n\r\n### Context\r\n\r\nThe code already has support for parsing project files as read-only when we know that we're not going to be asked to write them back to disk. This flag is currently unused because the initial implementation in #3584 introduced a regression related to whitespace in attribute values (#4210).\r\n\r\n### Changes Made\r\n\r\nTrivially reverted part of #4213 that addressed the regression and added a hack to make `XmlReader` behave the same as `XmlTextReader`.\r\n\r\n### Testing\r\n\r\nExisting unit tests for correctness and ETW for performance. `XmlDocumentWithLocation.Load()` is ~26% faster with this change compared to baseline when building .NET Core projects. This translates to about 10 ms per one incremental CLI build of a Hello world application.",
          "committedDate": "2021-04-27T18:44:52Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4f72ae4cfb09d03dccd7fc628d619ef4ab5aa479",
          "message": "[main] Update dependencies from dotnet/arcade (#6370)\n\n* Update dependencies from https://github.com/dotnet/arcade build 20210422.5\r\n\r\nMicrosoft.DotNet.Arcade.Sdk\r\n From Version 5.0.0-beta.21221.5 -> To Version 5.0.0-beta.21222.5\r\n\r\n* Update dependencies from https://github.com/dotnet/arcade build 20210426.1\r\n\r\nMicrosoft.DotNet.Arcade.Sdk\r\n From Version 5.0.0-beta.21221.5 -> To Version 5.0.0-beta.21226.1\r\n\r\nCo-authored-by: dotnet-maestro[bot] <dotnet-maestro[bot]@users.noreply.github.com>",
          "committedDate": "2021-04-28T08:18:37Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "42748379+dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5b9216a75e98e19eba84e04a5f30bd35a68f317a",
          "message": "Migrate to OneLocBuild (#6378)\n\nMigrates to the new localization system. See documentation on this [here](https://github.com/dotnet/arcade/blob/main/Documentation/OneLocBuild.md).",
          "committedDate": "2021-04-28T17:47:53Z",
          "author": {
            "name": "Jon Fortescue",
            "email": "jofortes@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b67e3d9139c45748fa5d6b75a64f90026a01d8b5",
          "message": "Snapshot Items of TaskParameters from another AppDomain\n\nFixes https://github.com/dotnet/msbuild/issues/6379\n\nWe have a situation where we are in a worker node and a task runs in a separate AppDomain and logs a TaskParameterEventArgs. Since logging is asynchronous there's a risk that by the time the node packet translator accesses the TaskParameterEventArgs.Items the AppDomain is already unloaded and we crash when trying to enumerate item metadata.\n\nDetect that we're in another AppDomain and eagerly take a snapshot of task items with all metadata.",
          "committedDate": "2021-04-28T22:49:20Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "db022c0736a218f98f5ba24599d7faf6bd93e4d7",
          "message": "Take Items snapshot if any item is a __TransparentProxy\n\nEven if we are in the default AppDomain it can happen that TaskParameterEventArgs is created in the default AppDomain, but the Items passed to it originate from a different AppDomain.\n\nWe have to detect this case and take the items snapshot immediately otherwise that AppDomain can get unloaded.",
          "committedDate": "2021-04-29T19:36:07Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ac7dd0f37f7c00daf0a4c09a9b0943673c366627",
          "message": "Don't send yield-return iterators across AppDomain boundaries\n\nTo access the metadata of items from another AppDomain we can't use yield return because the generated iterator class is not marked as [Serializable]. Provide eager codepaths for cross-AppDomain scenarios that return simple arrays.\n\nWe can't always return simple arrays because in the general case we want to stream metadata directly to consumers without allocating a collection to store the results.",
          "committedDate": "2021-04-29T19:40:08Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "80656660b6eaeb95446fe864da2983685dc549ab",
          "message": "Improve a comment and make the entire method conditional",
          "committedDate": "2021-04-30T18:20:08Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fa96a2a81e0fb8c028057fa204bbf386bfb36aec",
          "message": "Merge pull request #6382 from dotnet/dev/kirillo/6379\n\nFixes #6379\r\n\r\nWe have a situation where we are in a worker node and a task runs in a separate AppDomain and logs a TaskParameterEventArgs. Since logging is asynchronous there's a risk that by the time the node packet translator accesses the TaskParameterEventArgs.Items the AppDomain is already unloaded and we crash when trying to enumerate item metadata.\r\n\r\nDetect that we're in another AppDomain and eagerly take a snapshot of task items with all metadata.",
          "committedDate": "2021-04-30T21:57:43Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e9fd69a4f60b53b3863ba7d9a9d187c4adb1fe49",
          "message": "Update branding for 16.11 (#6407)\n\n### Context\r\n\r\nWhile mainline development is now focusing on 17.0, we want to have the 16.11 branch ready in case we end up contributing.\r\n\r\n### Changes Made\r\n\r\nSetting up a branch for MSBuild inserted into Visual Studio 16.11.\r\n\r\n### Testing\r\n\r\nGrepped the tree for other occurrences of 16.10.",
          "committedDate": "2021-05-04T14:40:03Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "43bddb4b6d733851363cc6cf05e96aa2cf6307e6",
          "message": "Merge pull request #6409 from dotnet-maestro-bot/merge/vs16.11-to-main\n\n[automated] Merge branch 'vs16.11' => 'main'",
          "committedDate": "2021-05-04T20:08:53Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d2d3a71f74755d4d6734a8569ff8f50b618f97aa",
          "message": "branding update (#6321)\n\nbranding update",
          "committedDate": "2021-05-04T20:11:34Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e73d08c28b0d4f72bf6cf6ad9a412f35b477a430",
          "message": "[main] Update dependencies from nuget/nuget.client (#6405)\n\nNuGet.Build.Tasks\r\n From Version 5.9.1-rc.8 -> To Version 5.10.0-rc.7240\r\n\r\nCo-authored-by: dotnet-maestro[bot] <dotnet-maestro[bot]@users.noreply.github.com>",
          "committedDate": "2021-05-04T22:06:11Z",
          "author": {
            "name": "dotnet-maestro[bot]",
            "email": "42748379+dotnet-maestro[bot]@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b02f8de7e24d541df1d8c7d71cf8036d0ce91213",
          "message": "Merge pull request #6408 from ladipro/17.0-branding\n\n### Context\r\n\r\nMainline development is switching to Visual Studio 17.0.\r\n\r\n### Changes Made\r\n\r\nMerging current `vs17.0` branch into main to pick up branding changes.\r\n\r\n### Testing\r\n\r\nGrepped the tree for other occurrences of 16.10.",
          "committedDate": "2021-05-05T05:51:28Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d07c47adec8d5cf40718ef9a618b0b959cc8be0d",
          "message": "Update Visual Studio Version to 17.0 (#6361)\n\n* branding update (#6321)\r\n\r\nbranding update\r\n\r\n* Additional 17.0 branding/internal updates\r\n\r\n* Update src/Utilities/ToolLocationHelper.cs\r\n\r\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>\r\n\r\n* Update vsix\r\n\r\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>\r\nCo-authored-by: Ben Villalobos <4691428+BenVillalobos@users.noreply.github.com>",
          "committedDate": "2021-05-06T15:58:00Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": []
  }
}