{
  "number": 7121,
  "title": "Add support for per request input/output results cache files",
  "body": "Fixes #7112\r\n\r\n### Context\r\n\r\nThis is a draft PR attempt to bring support for Input/Output ResultsCache file per BuildRequest so that they could be parallelized and used from msbuild nodes.\r\n\r\nThis is mainly for discussion. I made the changes without knowing much of all the consequences and internals of msbuild, so it might not be the right changes to do. \r\n\r\nThe new API additions allow to:\r\n\r\n1. Schedule selectively a part of a graph (a single project, all projects below a project, all projects referencing a project): This is important for developing life sync (e.g if ProjectA -> ProjectB -> ProjectC, and ProjectB is changed, we want to be able to schedule ProjectB transitively with ProjectA)\r\n2. Setup input and output cache results per request, allow to map a ProjectGraphNode to a file path on the disk (via `GraphBuildRequestData.GraphBuildCacheFilePath`)\r\n\r\nThis PR allows to create `BuildManager` stateful clients that could efficiently handle caches of msbuild input/output files.\r\n\r\nThe performance measured can be dramatic. On 100 interdependent C# projects:\r\n\r\n1. Building all projects, clean build\r\n   - With this PR: 1.5s to 2s\r\n   - With a stock VS/msbuild: 8s+\r\n2. Rebuilding only the root project that references the 99 C# projects\r\n   - With this PR: 150ms\r\n   - With a stock VS/msbuild: 1.5s\r\n\r\nThis can represent a **3x to 10x speedup in build times** depending on the structure of a solution.\r\n\r\n### Changes Made\r\n\r\n- Add `BuildRequest.InputResultsCacheFiles` / `BuildRequest.OutputResultsCacheFile`\r\n- Allow the `BuildRequestEngine` to load and save the cache\r\n- Add a new constructor `GraphBuildRequestData`  + properties to schedule graph with nodes that can be executed \r\n  - Only the node itself\r\n  - All the nodes below\r\n  - All the nodes above \r\n- Allow caching of individual request by having a delegate `GraphBuildRequestData.GraphBuildCacheFilePath`\r\n- Modify `BuildManager` to take into account new features of `GraphBuildRequestData`\r\n\r\n### Testing\r\n\r\nLocal testing only with the [BenchBuild](https://github.com/xoofx/BenchBuild) project for now.\r\nIt is validating the usage of the API (build all nodes, only root, or leaf and upward) and it shows the performance benefits.",
  "state": "CLOSED",
  "createdAt": "2021-12-04T10:07:52Z",
  "updatedAt": "2023-11-28T01:03:04Z",
  "closedAt": "2023-09-19T18:04:08Z",
  "mergedAt": null,
  "additions": 631,
  "deletions": 5,
  "changedFiles": 26,
  "headRefName": "fast-static-graph",
  "isDraft": false,
  "author": {
    "login": "xoofx"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a2c7ec88d59533f48fff0262a3d72565dd747c4c",
          "message": "Add support for per request input/output results cache files",
          "committedDate": "2021-12-05T15:26:28Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre_mutel@live.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9ef99e6292b28f65dfdfe8998cffbb5fb22d3231",
          "message": "If using cache per request, it requires that ResetCaches is not false",
          "committedDate": "2021-12-05T15:26:28Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre_mutel@live.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7b426b57d6338eea2c84780965687f38bc1e3c88",
          "message": "Don't make an exception for the root node",
          "committedDate": "2021-12-08T18:05:15Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre@unity3d.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8ecbf9b3d3604cacbf1a50a119a0ea017404506f",
          "message": "Add BuildManager.LoadCachedResults",
          "committedDate": "2021-12-10T07:09:06Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre@unity3d.com"
          }
        }
      },
      {
        "commit": {
          "oid": "189cf6cea9cb3e2f49a28eb5bb895fa1b29ed8d4",
          "message": "Merge remote-tracking branch 'origin/main' into fast-static-graph\n\n# Conflicts:\n#\tsrc/Build/BackEnd/BuildManager/BuildManager.cs\n#\tsrc/Build/BackEnd/Shared/BuildRequest.cs",
          "committedDate": "2021-12-10T07:11:01Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre_mutel@live.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dba134ed617c892e95c56138a8d0fab2f22e34a1",
          "message": "Don't try to build dependent projects depending on projects that failed",
          "committedDate": "2021-12-10T09:37:12Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre@unity3d.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5e770c0f24be40a8205722f1dfeefc94eb0e809e",
          "message": "Fix PublicAPI",
          "committedDate": "2021-12-14T18:11:08Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre@unity3d.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ac22b5ecf1fd481c0f359325e15579531a2e61d0",
          "message": "Merge remote-tracking branch 'origin/main' into fast-static-graph\n\n# Conflicts:\n#\tsrc/Build/Microsoft.Build.csproj\n#\tsrc/Build/Resources/Strings.resx",
          "committedDate": "2022-10-28T12:05:53Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre_mutel@live.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d4ad1ac673190d5073ca0a309ccbbbe242b568db",
          "message": "Merge remote-tracking branch 'xoofx-origin/fast-static-graph' into fast-static-graph\n\n# Conflicts:\n#\tsrc/Build/BackEnd/BuildManager/BuildManager.cs\n#\tsrc/Build/PublicAPI/net/PublicAPI.Unshipped.txt\n#\tsrc/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt",
          "committedDate": "2022-10-28T12:11:33Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre_mutel@live.com"
          }
        }
      },
      {
        "commit": {
          "oid": "abd92e89e4212c690bd26f3dc39857d72bfc7c70",
          "message": "Fix compilation with nullable",
          "committedDate": "2022-10-28T12:17:50Z",
          "author": {
            "name": "Alexandre Mutel",
            "email": "alexandre_mutel@live.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "I have added a new method `BuildManager.LoadCachedResults` in order to restart a server from existing caches on disks",
        "createdAt": "2021-12-10T07:13:40Z",
        "author": {
          "login": "xoofx"
        }
      },
      {
        "body": "The last commit dba134e is fixing what I think is an invalid behavior when building graph, as we should not try to build dependent projects on a project that actually failed.",
        "createdAt": "2021-12-10T09:39:06Z",
        "author": {
          "login": "xoofx"
        }
      },
      {
        "body": "Hey @rainersigwald, starting to revive this old PR to discuss about the changes.",
        "createdAt": "2022-10-28T12:42:22Z",
        "author": {
          "login": "xoofx"
        }
      },
      {
        "body": "I haven't checked the existing tests regarding the static graph/caching, but let me know if you have any guidance where I could add them.",
        "createdAt": "2022-10-28T12:46:34Z",
        "author": {
          "login": "xoofx"
        }
      },
      {
        "body": "@rainersigwald additionally it would be great if we could set the cache files path as MSBuild properties.\r\nWe have Unity Packages, those are shared across Unity projects. If we could put the cache files for these at a more global location they could reuse the result caches across those projects.",
        "createdAt": "2022-11-16T15:36:34Z",
        "author": {
          "login": "hknielsen"
        }
      },
      {
        "body": "We've let this sit for too long. Closing, since it'll need to be reevaluated in the context of other cache-plugin changes.",
        "createdAt": "2023-09-19T18:04:09Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I think we need to provide @xoofx a concrete path forward here. A lot of work went into this. They have a valid need and are one of the early adopters of the static graph and caching.\r\n\r\nPerhaps @AndyGerlicher team would have some capacity to look into this and see if a change similar to this can be seen to completion?\r\n\r\nWhat are the suggested next steps for @xoofx?",
        "createdAt": "2023-11-28T01:03:03Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}