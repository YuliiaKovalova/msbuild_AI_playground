{
  "number": 10524,
  "title": "CodeQL suppressions",
  "body": "### Fixes\r\n\r\nSHA1 usages:\r\n* https://codeql.microsoft.com/issues/bce484cd-3c70-4d18-b8b0-e012e3e20352\r\n* https://codeql.microsoft.com/issues/392f55c0-2f68-44a4-b613-7939d4d753bc\r\n* https://codeql.microsoft.com/issues/08a5b43e-ef73-4c07-99d4-585bd7381d12\r\n\r\nBinFmt usage:\r\n* https://codeql.microsoft.com/issues/615edc07-6d74-4047-8fae-2d34699c7d63\r\n\r\n### Context\r\nBinFmt usage - this is an explicit opt-in for legacy scenarios\r\nSHA1 - this is a compat scenario\r\n",
  "state": "MERGED",
  "createdAt": "2024-08-15T13:24:36Z",
  "updatedAt": "2024-08-19T17:19:38Z",
  "closedAt": "2024-08-19T17:19:37Z",
  "mergedAt": "2024-08-19T17:19:37Z",
  "additions": 9,
  "deletions": 2,
  "changedFiles": 4,
  "headRefName": "proto/codeql-suppressions",
  "isDraft": false,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "8f4e495367a61ec700befcbc31181f714d9b1395",
          "message": "Add CodeQL supporessions",
          "committedDate": "2024-08-15T13:22:00Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c4952bd725fa54eef0313c5ab5eb834b7853687a",
          "message": "Apply suggestions from code review\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-08-16T09:04:49Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8cfd1239fc2201f7b1a3ab3d98ab887c1f7f5076",
          "message": "Make the BinaryFormatter opt-in implications more explicit",
          "committedDate": "2024-08-16T09:06:21Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "583ff887c0adc7638971e8bc1ff4d6edd3e3733f",
          "message": "Accept PR suggestion\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-08-19T12:55:05Z",
          "author": {
            "name": "Jan Krivanek",
            "email": "jankrivanek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                    // codeql[cs/weak-crypto] .NET 4.0 and earlier versions cannot parse SHA-2. Newer Frameworks use SHA256. https://devdiv.visualstudio.com/DevDiv/_workitems/edit/139025\r\n```",
              "createdAt": "2024-08-15T17:15:16Z",
              "path": "src/Tasks/ManifestUtil/Util.cs",
              "diffHunk": "@@ -246,6 +246,7 @@ private static void GetFileInfoImpl(string path, string targetFrameWorkVersion,\n                 if (string.IsNullOrEmpty(targetFrameWorkVersion) || CompareFrameworkVersions(targetFrameWorkVersion, Constants.TargetFrameworkVersion40) <= 0)\n                 {\n #pragma warning disable SA1111, SA1009 // Closing parenthesis should be on line of last parameter\n+                    // codeql[cs/weak-crypto] .NET 4.0 and earlier versions cannot parse SHA-2. Newer Frameworks use SHA256.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                    // codeql[cs/weak-crypto] SHA1 is retained for compatibility reasons as an option in VisualStudio signing page and consequently in the trust manager, default is SHA2. https://devdiv.visualstudio.com/DevDiv/_workitems/edit/139025\r\n```",
              "createdAt": "2024-08-15T17:15:29Z",
              "path": "src/Tasks/ManifestUtil/mansign2.cs",
              "diffHunk": "@@ -586,6 +586,7 @@ private static byte[] ComputeHashFromManifest(XmlDocument manifestDom, bool oldF\n                 else\n                 {\n #pragma warning disable SA1111, SA1009 // Closing parenthesis should be on line of last parameter\n+                    // codeql[cs/weak-crypto] SHA1 is retained for compatibility reasons as an option in VisualStudio signing page and consequently in the trust manager, default is SHA2.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                    // codeql[cs/weak-crypto] SHA1 is retained for compatibility reasons as an option in VisualStudio signing page and consequently in the trust manager, default is SHA2. https://devdiv.visualstudio.com/DevDiv/_workitems/edit/139025\r\n```",
              "createdAt": "2024-08-15T17:15:38Z",
              "path": "src/Tasks/ManifestUtil/mansign2.cs",
              "diffHunk": "@@ -648,6 +649,7 @@ private static byte[] ComputeHashFromManifest(XmlDocument manifestDom, bool oldF\n                 else\n                 {\n #pragma warning disable SA1111, SA1009 // Closing parenthesis should be on line of last parameter\n+                    // codeql[cs/weak-crypto] SHA1 is retained for compatibility reasons as an option in VisualStudio signing page and consequently in the trust manager, default is SHA2.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n- [AppDomain configuration is serialized without using BinFmt](https://github.com/dotnet/msbuild/pull/9320) - feature can be opted out only if [BinaryFormatter](https://learn.microsoft.com/en-us/dotnet/api/system.runtime.serialization.formatters.binary.binaryformatter) is allowed at runtime by editing `MSBuild.runtimeconfig.json`. **Please note that [any usage of BinaryFormatter is insecure](https://learn.microsoft.com/dotnet/standard/serialization/binaryformatter-security-guide).**\r\n```",
              "createdAt": "2024-08-16T15:03:51Z",
              "path": "documentation/wiki/ChangeWaves.md",
              "diffHunk": "@@ -30,7 +30,7 @@ A wave of features is set to \"rotate out\" (i.e. become standard functionality) t\n - [Add ParameterName and PropertyName to TaskParameterEventArgs](https://github.com/dotnet/msbuild/pull/10130)\n \n ### 17.10\n-- [AppDomain configuration is serialized without using BinFmt](https://github.com/dotnet/msbuild/pull/9320) - feature can be opted out only if [BinaryFormatter](https://learn.microsoft.com/en-us/dotnet/api/system.runtime.serialization.formatters.binary.binaryformatter) is allowed at runtime by editing `MSBuild.runtimeconfig.json`\n+- [AppDomain configuration is serialized without using BinFmt](https://github.com/dotnet/msbuild/pull/9320) - feature can be opted out only if [BinaryFormatter](https://learn.microsoft.com/en-us/dotnet/api/system.runtime.serialization.formatters.binary.binaryformatter) is allowed at runtime by editing `MSBuild.runtimeconfig.json`. **Please note that any usage of BinaryFormatter is deamed insecure!.**",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}