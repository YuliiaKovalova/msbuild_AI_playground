{
  "number": 8371,
  "title": "Warn about unused WriteOnlyWhenDifferent attribute",
  "body": "Fixes #8363",
  "state": "MERGED",
  "createdAt": "2023-01-31T09:26:51Z",
  "updatedAt": "2023-03-27T20:59:43Z",
  "closedAt": "2023-02-14T03:06:19Z",
  "mergedAt": "2023-02-14T03:06:19Z",
  "additions": 72,
  "deletions": 0,
  "changedFiles": 15,
  "headRefName": "patch-4",
  "isDraft": false,
  "author": {
    "login": "stan-sz"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "e63ca3e112ea3a5f680661c8cbe709ce3b65c888",
          "message": "Fixes #8363",
          "committedDate": "2023-01-31T09:25:54Z",
          "author": {
            "name": "stan-sz",
            "email": "37585349+stan-sz@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7fa7c6b7a6f28627f4805bc332a5dcbf9f73fe23",
          "message": "PR feedback and fix build",
          "committedDate": "2023-02-01T07:27:45Z",
          "author": {
            "name": "stan-sz",
            "email": "37585349+stan-sz@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e228dc1f586dc8bda9e13a2a60cfc35a6d5e213b",
          "message": "Update src/Tasks/FileIO/WriteLinesToFile.cs\n\nCo-authored-by: Ladi Prosek <ladi.prosek@gmail.com>",
          "committedDate": "2023-02-13T08:32:07Z",
          "author": {
            "name": "stan-sz",
            "email": "37585349+stan-sz@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "It looks like this warning fires for the WPF repo and at least one internal Microsoft repo. I think we'll have to back it down to a message.",
        "createdAt": "2023-03-27T20:59:43Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Ideally I think this would have been an error from the introduction of `WriteOnlyWhenDifferent`. Since it wasn't, we shouldn't make it an error now, but in our codebase that generally also includes new _warnings_ since many builds have WarnAsError on.\r\n\r\nSo I'm not sure this is the right thing to do now. I see two main options:\r\n\r\n1. We could emit the warning behind changewave 17.6, in the hope that basically no one is hitting this so we can turn it on breaking no one and then be in a fairly good state.\r\n2. We could emit it as a (high-priority?) _message_ instead, which is always nonbreaking.\r\n\r\nI think I'm leaning toward option 1, at least for 17.6-preview.2. @baronfel thoughts appreciated.",
              "createdAt": "2023-01-31T12:49:07Z",
              "path": "src/Tasks/FileIO/WriteLinesToFile.cs",
              "diffHunk": "@@ -122,6 +122,10 @@ public override bool Execute()\n                     }\n                     else\n                     {\n+                        if (WriteOnlyWhenDifferent)\n+                        {\n+                            Log.LogWarningWithCodeFromResources(\"WriteLinesToFile.UnusedWriteOnlyWhenDifferent\", File.ItemSpec);",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Applied the wave check in the latest iteration.",
              "createdAt": "2023-02-01T07:28:04Z",
              "path": "src/Tasks/FileIO/WriteLinesToFile.cs",
              "diffHunk": "@@ -122,6 +122,10 @@ public override bool Execute()\n                     }\n                     else\n                     {\n+                        if (WriteOnlyWhenDifferent)\n+                        {\n+                            Log.LogWarningWithCodeFromResources(\"WriteLinesToFile.UnusedWriteOnlyWhenDifferent\", File.ItemSpec);",
              "author": {
                "login": "stan-sz"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "super-nit: Swapping the subexpressions would be ever so slightly preferred. Not a big deal, in practice we would have likely initialized changewaves by the time this line is hit. But still, it's more natural to make the cheaper test first.\r\n\r\n```suggestion\r\n                        if (WriteOnlyWhenDifferent && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_6))\r\n```",
              "createdAt": "2023-02-06T13:20:40Z",
              "path": "src/Tasks/FileIO/WriteLinesToFile.cs",
              "diffHunk": "@@ -122,6 +122,10 @@ public override bool Execute()\n                     }\n                     else\n                     {\n+                        if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_6) && WriteOnlyWhenDifferent)",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}