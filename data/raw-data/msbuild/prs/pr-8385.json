{
  "number": 8385,
  "title": "[LiveLogger] First tweaks to UI",
  "body": "Fixes #8379\r\n\r\n### Context\r\n\r\n\r\n### Changes Made\r\n\r\n\r\n### Testing\r\n\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-02-02T01:00:15Z",
  "updatedAt": "2023-02-10T06:46:00Z",
  "closedAt": "2023-02-10T06:45:59Z",
  "mergedAt": "2023-02-10T06:45:59Z",
  "additions": 111,
  "deletions": 36,
  "changedFiles": 4,
  "headRefName": "tweak-terminal-UI",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "cf5391107f7ad87e5ade5fc15f35eb42d7778f38",
          "message": "Added footer",
          "committedDate": "2023-01-18T00:57:06Z",
          "author": {
            "name": "Eduardo Villalpando Mello",
            "email": "t-eduardov@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5d543d7f8579fb9c0af9466741fe2a67077f5393",
          "message": "Solved review comments",
          "committedDate": "2023-01-19T22:31:21Z",
          "author": {
            "name": "Eduardo Villalpando Mello",
            "email": "t-eduardov@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "13e7ff0b9752c9bbc404fa7c0ffb4907a80c56a5",
          "message": "Simplified code",
          "committedDate": "2023-01-20T02:05:04Z",
          "author": {
            "name": "Eduardo Villalpando Mello",
            "email": "t-eduardov@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9af27f5b1412a3c7354049978628be43157d99b2",
          "message": "Addressed review comments",
          "committedDate": "2023-01-20T20:03:41Z",
          "author": {
            "name": "Eduardo Villalpando Mello",
            "email": "t-eduardov@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5738eae3ed145a799e95c9b4ab6f1c2584717cd2",
          "message": "Merge branch 'main' into edvilme-flg-footer",
          "committedDate": "2023-01-20T21:08:57Z",
          "author": {
            "name": "Eduardo Villalpando Mello",
            "email": "t-eduardov@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6c9094f08819cc90c3149ec83ffd2c8bf7deeaec",
          "message": "Merge with main",
          "committedDate": "2023-01-24T19:33:16Z",
          "author": {
            "name": "Eduardo Villalpando Mello",
            "email": "t-eduardov@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f1d115c9b4213ab58c500ce1b81926e7252c138c",
          "message": "Merge with main",
          "committedDate": "2023-01-24T19:34:38Z",
          "author": {
            "name": "Eduardo Villalpando Mello",
            "email": "t-eduardov@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f8eb8f07d0072bf9238ab6713d7d74f11449f455",
          "message": "Merge branch 'edvilme-flg-llg' into edvilme-flg-footer\n\n Conflicts:\n\tsrc/MSBuild/LiveLogger/LiveLogger.cs\n\tsrc/MSBuild/LiveLogger/TerminalBuffer.cs",
          "committedDate": "2023-02-01T02:47:00Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "26a687dae0d6a978291f033fecab54c6223b028b",
          "message": "Merge remote-tracking branch 'upstream/main' into edvilme-flg-footer",
          "committedDate": "2023-02-01T16:14:02Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8d727a59ac904e9d4cc6da8faf0c57e3c8206954",
          "message": "First tweaks",
          "committedDate": "2023-02-02T00:59:39Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7837c911baeff4c5024cebc677c5d29cdb0495d1",
          "message": "Merge branch 'edvilme-flg-footer' of https://github.com/edvilme/msbuild into tweak-terminal-ui",
          "committedDate": "2023-02-03T21:27:41Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d945c5c80402377314f8dba38111aae762f11fdf",
          "message": "Progress!",
          "committedDate": "2023-02-04T00:52:15Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "95ae57a0e72d900ec4c36c9acab9da8076ef7993",
          "message": "PR comments",
          "committedDate": "2023-02-07T00:48:34Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c93014f82af76251410437110653c05983f50bf2",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into tweak-terminal-UI",
          "committedDate": "2023-02-07T00:59:41Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a54fbeb76bf3effc5d8a28ee97a76a96447b9413",
          "message": "Comment out blocked projects",
          "committedDate": "2023-02-07T21:39:07Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "<img width=\"839\" alt=\"image\" src=\"https://user-images.githubusercontent.com/12969783/217373070-309ed050-330f-4425-9bdf-2a7856abf4f0.png\">\r\n",
        "createdAt": "2023-02-07T21:43:09Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "You probably want to build this on top of the progress branch #8314 which already has this counter",
              "createdAt": "2023-02-02T21:45:05Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -16,6 +16,9 @@ internal class LiveLogger : ILogger\n \n         private float existingTasks = 1;\n         private float completedTasks = 0;\n+        private int completedProjects = 0;",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "What if this was displayed on the titlebar (where it says \"MSBuild - Build in progress\") so that it is always visible to the user?",
              "createdAt": "2023-02-03T17:25:31Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -58,6 +61,10 @@ private void Render()\n             TerminalBuffer.Initialize();\n             // TODO: Fix. First line does not appear at top. Leaving empty line for now\n             TerminalBuffer.WriteNewLine(string.Empty);\n+\n+            // Top line indicates the number of finished projects.\n+            finishedProjectsLine = TerminalBuffer.WriteNewLine($\"{completedProjects} projects finished building.\");",
              "author": {
                "login": "edvilme"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\r\n```suggestion\r\n            float percentage = StartedProjects == 0 ? 0.0 : (float)FinishedProjects / StartedProjects;\r\n```",
              "createdAt": "2023-02-05T19:57:41Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -101,6 +106,15 @@ private void Render()\n             }\n         }\n \n+        private void UpdateFooter()\n+        {\n+            float percentage = (float)FinishedProjects / StartedProjects;",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Looking on rest of the code I'm guessing localisation is out of scope for now - correct?",
              "createdAt": "2023-02-05T19:58:50Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -101,6 +106,15 @@ private void Render()\n             }\n         }\n \n+        private void UpdateFooter()\n+        {\n+            float percentage = (float)FinishedProjects / StartedProjects;\n+            TerminalBuffer.FooterText = ANSIBuilder.Alignment.SpaceBetween(\n+                $\"Build progress (approx.) [{ANSIBuilder.Graphics.ProgressBar(percentage)}]\",\n+                ANSIBuilder.Formatting.Italic(ANSIBuilder.Formatting.Dim(\"[Up][Down] Scroll\")),\n+                Console.BufferWidth);",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Correct. Tracked by #8391",
              "createdAt": "2023-02-06T14:48:37Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -101,6 +106,15 @@ private void Render()\n             }\n         }\n \n+        private void UpdateFooter()\n+        {\n+            float percentage = (float)FinishedProjects / StartedProjects;\n+            TerminalBuffer.FooterText = ANSIBuilder.Alignment.SpaceBetween(\n+                $\"Build progress (approx.) [{ANSIBuilder.Graphics.ProgressBar(percentage)}]\",\n+                ANSIBuilder.Formatting.Italic(ANSIBuilder.Formatting.Dim(\"[Up][Down] Scroll\")),\n+                Console.BufferWidth);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "It seems those can be made `private`",
              "createdAt": "2023-02-06T07:00:00Z",
              "path": "src/MSBuild/LiveLogger/LiveLogger.cs",
              "diffHunk": "@@ -13,13 +13,11 @@ internal class LiveLogger : ILogger\n         private Dictionary<int, ProjectNode> projects = new Dictionary<int, ProjectNode>();\n \n         private bool Succeeded;\n-\n-        private float existingTasks = 1;\n-        private float completedTasks = 0;\n-\n         public string Parameters { get; set; }\n-\n+        public int StartedProjects = 0;\n+        public int FinishedProjects = 0;",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I know this is only using the same practise already used in this component - but it would be nice to reserve fields fro strictly private usage, other access should be via properties or methods.\r\n\r\nBut it is beyond the scope of this PR. I'm thinking about creating an item for improving styling and coding standards in LiveLogger and doing those changes in one shot in separate PR - thoughts?",
              "createdAt": "2023-02-06T07:04:24Z",
              "path": "src/MSBuild/LiveLogger/TerminalBuffer.cs",
              "diffHunk": "@@ -57,10 +59,13 @@ public TerminalBufferLine(string text, bool shouldWrapLines)\n     internal class TerminalBuffer\n     {\n         private static List<TerminalBufferLine> Lines = new();\n+        public static string FooterText = string.Empty;\n         public static int TopLineIndex = 0;\n         public static string Footer = string.Empty;\n         internal static bool IsTerminated = false;\n         internal static bool ShouldRerender = true;\n+        internal static int FinishedProjects = 0;",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Don't we want the line endings to be platform specific (`Environment.NewLine`)?\r\nI see it's just adopted from pre-existing code, but unless there is an explicit reason for `\\n`, we should use the platform specific line endings. ",
              "createdAt": "2023-02-06T07:11:21Z",
              "path": "src/MSBuild/LiveLogger/TerminalBuffer.cs",
              "diffHunk": "@@ -100,11 +108,10 @@ public static void Render()\n             Console.Write(\n                 // Write header\n                 ANSIBuilder.Cursor.Home() +\n-                ANSIBuilder.Eraser.LineCursorToEnd() + ANSIBuilder.Formatting.Inverse(ANSIBuilder.Alignment.Center(\"MSBuild - Build in progress\")) +\n+                ANSIBuilder.Eraser.LineCursorToEnd() + ANSIBuilder.Formatting.Inverse(ANSIBuilder.Alignment.Center($\"MSBuild - Build in progress - {FinishedProjects} finished projects\")) +\n                 // Write footer\n-                ANSIBuilder.Eraser.LineCursorToEnd() + ANSIBuilder.Cursor.Position(Console.BufferHeight - 1, 0) +\n-                // TODO: Remove and replace with actual footer\n-                new string('-', Console.BufferWidth) + $\"\\nBuild progress: XX%\\tTopLineIndex={TopLineIndex}\");\n+                ANSIBuilder.Cursor.Position(Console.BufferHeight - 1, 0) + ANSIBuilder.Eraser.LineCursorToEnd() +\n+                new string('-', Console.BufferWidth) + '\\n' + FooterText);",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Yes, we should move to this better cross-plat pattern.",
              "createdAt": "2023-02-06T14:49:12Z",
              "path": "src/MSBuild/LiveLogger/TerminalBuffer.cs",
              "diffHunk": "@@ -100,11 +108,10 @@ public static void Render()\n             Console.Write(\n                 // Write header\n                 ANSIBuilder.Cursor.Home() +\n-                ANSIBuilder.Eraser.LineCursorToEnd() + ANSIBuilder.Formatting.Inverse(ANSIBuilder.Alignment.Center(\"MSBuild - Build in progress\")) +\n+                ANSIBuilder.Eraser.LineCursorToEnd() + ANSIBuilder.Formatting.Inverse(ANSIBuilder.Alignment.Center($\"MSBuild - Build in progress - {FinishedProjects} finished projects\")) +\n                 // Write footer\n-                ANSIBuilder.Eraser.LineCursorToEnd() + ANSIBuilder.Cursor.Position(Console.BufferHeight - 1, 0) +\n-                // TODO: Remove and replace with actual footer\n-                new string('-', Console.BufferWidth) + $\"\\nBuild progress: XX%\\tTopLineIndex={TopLineIndex}\");\n+                ANSIBuilder.Cursor.Position(Console.BufferHeight - 1, 0) + ANSIBuilder.Eraser.LineCursorToEnd() +\n+                new string('-', Console.BufferWidth) + '\\n' + FooterText);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I love this change!",
              "createdAt": "2023-02-07T07:35:21Z",
              "path": "src/MSBuild/LiveLogger/ANSIBuilder.cs",
              "diffHunk": "@@ -423,16 +423,7 @@ public static string Spinner(int n)\n \n             public static string ProgressBar(float percentage, int width = 10, char completedChar = '\u2588', char remainingChar = '\u2591')\n             {\n-                string result = String.Empty;\n-                for (int i = 0; i < (int)Math.Floor(width * percentage); i++)\n-                {\n-                    result += completedChar;\n-                }\n-                for (int i = (int)Math.Floor(width * percentage); i < width; i++)\n-                {\n-                    result += remainingChar;\n-                }\n-                return result;\n+                return new string(completedChar, (int)Math.Floor(width * percentage)) + new string(remainingChar, width - (int)Math.Floor(width * percentage));",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I don't think I grok these new methods. What's the significance of the midpoint?",
              "createdAt": "2023-02-08T18:41:20Z",
              "path": "src/MSBuild/LiveLogger/TerminalBuffer.cs",
              "diffHunk": "@@ -200,6 +211,27 @@ public static int GetLineIndexById(int lineId)\n             return line;\n         }\n \n+        public static TerminalBufferLine? WriteNewLineAfterMidpoint(string text, bool shouldWrapLines = false)",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "They are fully unnecessary for the change as-is, but the midpoint separated the projects being built from the blocked projects lists. In commenting out the blocked projects part, I left those in to try to minimize the magnitude of the change.",
              "createdAt": "2023-02-08T20:18:53Z",
              "path": "src/MSBuild/LiveLogger/TerminalBuffer.cs",
              "diffHunk": "@@ -200,6 +211,27 @@ public static int GetLineIndexById(int lineId)\n             return line;\n         }\n \n+        public static TerminalBufferLine? WriteNewLineAfterMidpoint(string text, bool shouldWrapLines = false)",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}