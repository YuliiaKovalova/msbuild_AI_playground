{
  "number": 9232,
  "title": "On windows there can be problems with Tools that do not support Unicode",
  "body": "Having a Username containing unicode chars, and tools that does not handle that well, makes it difficult when ToolTask are defined from NuGet Packages.\r\n\r\nFixes https://github.com/dotnet/msbuild/issues/9229\r\n\r\n\r\n### Context\r\nTmp folder can be changed by updating the User env vars, but Username are not possible. Not prepending the Username makes it possible for Users to handle these rare cases.\r\n\r\n### Changes Made\r\nChanged to not append Username on Windows to tmp rsp file location.\r\n\r\n### Testing\r\nTests already for ToolTasks using this.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-09-19T09:18:11Z",
  "updatedAt": "2023-10-05T12:47:53Z",
  "closedAt": "2023-10-05T12:47:52Z",
  "mergedAt": "2023-10-05T12:47:52Z",
  "additions": 8,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "dont-append-username",
  "isDraft": false,
  "author": {
    "login": "hknielsen"
  },
  "milestone": {
    "title": "VS 17.9"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "7b369174c94538dce70da91ca2011833865971cd",
          "message": "On windows there can be problems with Tools that do not support Unicode, and Username containing Unicode chars.\nhttps://github.com/dotnet/msbuild/issues/9229",
          "committedDate": "2023-09-19T14:19:46Z",
          "author": {
            "name": "Harald Nielsen",
            "email": "harald@unity3d.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d5418dfb8dc11fca1fd85a66dc34a84d201842e9",
          "message": "Update src/Shared/TempFileUtilities.cs\r\n\r\nby review cleanup\n\nCo-authored-by: Forgind <12969783+Forgind@users.noreply.github.com>",
          "committedDate": "2023-09-21T05:54:41Z",
          "author": {
            "name": "Harald Kj\u00e6r Nielsen",
            "email": "eblefar@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "On Linux, you have to include the user name or something equally unique.  Otherwise, MSBuild processes of a different user could attempt to use the same directory in tmp and fail because they don't have access to the directory.\r\n\r\nOmit the user name only on Windows where the Unicode problem occurs.\r\n\r\nOn macOS, I think it could be implemented either way, but I'd prefer keeping the current behavior if no actual problem has been reported with it.",
        "createdAt": "2023-09-19T09:23:01Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo is it Runtime check for windows are used on MsBuild or do we have preprocessors for it?",
        "createdAt": "2023-09-19T11:52:21Z",
        "author": {
          "login": "hknielsen"
        }
      },
      {
        "body": "There is a `NativeMethodsShared.IsLinux` check right below the code you changed.\r\n\r\n<https://github.com/dotnet/msbuild/blob/1b84c9b5c6d264bab83114c6749def66d5656e6b/src/Shared/TempFileUtilities.cs#L41> <https://github.com/dotnet/msbuild/blob/1b84c9b5c6d264bab83114c6749def66d5656e6b/src/Tasks/AssemblyInfo.cs#L4>\r\n\r\n I expect that Windows would be checked in a similar way.  There is already a property for that.\r\n\r\n<https://github.com/dotnet/msbuild/blob/1b84c9b5c6d264bab83114c6749def66d5656e6b/src/Framework/NativeMethods.cs#L702>",
        "createdAt": "2023-09-19T12:24:04Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo pushed new change, thanks!\r\nNow we just need to determine if we should use the `SecurityIdentifier` - not sure how important it is",
        "createdAt": "2023-09-19T14:41:40Z",
        "author": {
          "login": "hknielsen"
        }
      },
      {
        "body": "I think this is a reasonable approach, and we'll check with security folks. Another option would be \"on Windows, coerce the username to ANSI\".\r\n\r\nThat said, I think there's room for https://github.com/dotnet/msbuild/issues/9229 to be fixed in `ToolTask` itself too, since the \"change TEMP then call task\" dance is pretty awkward.",
        "createdAt": "2023-09-19T14:51:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> I think this is a reasonable approach, and we'll check with security folks. Another option would be \"on Windows, coerce the username to ANSI\".\r\n\r\nSound good, let me know. we can do the conversion to ANSI or use `SecurityIdentifier` depending on that.\r\n\r\n> That said, I think there's room for #9229 to be fixed in `ToolTask` itself too, since the \"change TEMP then call task\" dance is pretty awkward.\r\n\r\nI agree :) Lets discuss possible solutions on that Issue.\r\n",
        "createdAt": "2023-09-19T15:52:18Z",
        "author": {
          "login": "hknielsen"
        }
      },
      {
        "body": "The following do not mention \"MSBuildTemp\" and thus would not need to be updated for this change:\r\n\r\n- Any files in <https://github.com/MicrosoftDocs/visualstudio-docs/>\r\n- XML documentation comments in <https://github.com/dotnet/msbuild/>",
        "createdAt": "2023-09-21T06:29:46Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n            // On windows Username with Unicode chars can give issues, so we dont append username to the temp folder name.\r\n            string msbuildTempFolder = NativeMethodsShared.IsWindows ?\r\n                msbuildTempFolderPrefix :\r\n                msbuildTempFolderPrefix + Environment.UserName;\r\n```\r\n\r\nI'm a big fan of ternary operators, especially at initialization time like this, but I recognize not everyone agrees \ud83d\ude42",
              "createdAt": "2023-09-20T18:57:04Z",
              "path": "src/Shared/TempFileUtilities.cs",
              "diffHunk": "@@ -36,7 +38,18 @@ internal static void ClearTempFileDirectory()\n         // For all native calls, directly check their return values to prevent bad actors from getting in between checking if a directory exists and returning it.\n         private static string CreateFolderUnderTemp()\n         {\n-            string basePath = Path.Combine(Path.GetTempPath(), $\"MSBuildTemp{Environment.UserName}\");\n+            string msbuildTempFolder;\n+            // On windows Username with Unicode chars can give issues, so we dont append username to the temp folder name.\n+            if (NativeMethodsShared.IsWindows)\n+            {\n+                msbuildTempFolder = msbuildTempFolderPrefix;\n+            }\n+            else\n+            {\n+                msbuildTempFolder = msbuildTempFolderPrefix + Environment.UserName;\n+            }",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Depends on the situation, but here it makes perfect sense :) thanks!",
              "createdAt": "2023-09-21T05:54:25Z",
              "path": "src/Shared/TempFileUtilities.cs",
              "diffHunk": "@@ -36,7 +38,18 @@ internal static void ClearTempFileDirectory()\n         // For all native calls, directly check their return values to prevent bad actors from getting in between checking if a directory exists and returning it.\n         private static string CreateFolderUnderTemp()\n         {\n-            string basePath = Path.Combine(Path.GetTempPath(), $\"MSBuildTemp{Environment.UserName}\");\n+            string msbuildTempFolder;\n+            // On windows Username with Unicode chars can give issues, so we dont append username to the temp folder name.\n+            if (NativeMethodsShared.IsWindows)\n+            {\n+                msbuildTempFolder = msbuildTempFolderPrefix;\n+            }\n+            else\n+            {\n+                msbuildTempFolder = msbuildTempFolderPrefix + Environment.UserName;\n+            }",
              "author": {
                "login": "hknielsen"
              }
            }
          ]
        }
      }
    ]
  }
}