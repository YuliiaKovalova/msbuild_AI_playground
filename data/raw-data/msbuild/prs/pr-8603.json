{
  "number": 8603,
  "title": "Any have metadata value when empty Fixes #5113",
  "body": "Fixes #5113\r\n\r\n### Context\r\nAnyHaveMetadataValue returns empty when the itemgroup is empty, which doesn't make sense and doesn't match our documentation. This changes it to return false in that case.\r\n\r\n### Changes Made\r\nIf we see the function we're evaluating is AnyHaveMetadataValue, don't skip out early.\r\n\r\n### Testing\r\nMade a unit test\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2023-03-27T18:30:03Z",
  "updatedAt": "2023-03-28T22:04:37Z",
  "closedAt": "2023-03-28T22:04:36Z",
  "mergedAt": "2023-03-28T22:04:36Z",
  "additions": 21,
  "deletions": 3,
  "changedFiles": 3,
  "headRefName": "AnyHaveMetadataValue-when-empty",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": {
    "title": "VS 17.6"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "99df1428e9d14ca392a5eb58716262d5d9eab1bc",
          "message": "AnyHaveMetadataValue should always return a bool\n\nPreviously, when we saw the Item was empty, we'd jump out early. Fortunately, we already special-cased Count, and it turns out we can do the same with AnyHaveMetadataValue.",
          "committedDate": "2023-03-27T18:21:16Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e543315aad530bdd74364584cdb78b2149093868",
          "message": "Add test",
          "committedDate": "2023-03-27T18:28:25Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e6f221a19e70230ec3ed60ccb2fb542d9339ba71",
          "message": "Add change wave",
          "committedDate": "2023-03-28T18:55:47Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Put it in the change wave. Scenarios I can think of where someone would be broken are a bit ridiculous like trying to use it as IsEmpty:\r\n@(PossiblyEmptyItem->AnyHaveMetadataValue('m', 'v')) == ''\r\n\r\nI really hope no one does that.\r\n\r\nI skipped adding ChangeWave-specific tests; hopefully you're ok with that \ud83d\ude42",
        "createdAt": "2023-03-28T19:04:33Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Expand comment please",
              "createdAt": "2023-03-28T16:32:05Z",
              "path": "src/Build/Evaluation/Expander.cs",
              "diffHunk": "@@ -1947,7 +1947,8 @@ private static class ItemExpander\n                 if (itemsOfType.Count == 0)\n                 {\n                     // .. but only if there isn't a function \"Count()\", since that will want to return something (zero) for an empty list",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                    // .. but only if there isn't a function \"Count\", since that will want to return something (zero) for an empty list\r\n                    // or a function \"AnyHaveMetadataValue\", since that will want to return false for an empty list.\r\n```",
              "createdAt": "2023-03-28T18:15:54Z",
              "path": "src/Build/Evaluation/Expander.cs",
              "diffHunk": "@@ -1947,7 +1947,8 @@ private static class ItemExpander\n                 if (itemsOfType.Count == 0)\n                 {\n                     // .. but only if there isn't a function \"Count()\", since that will want to return something (zero) for an empty list",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}