{
  "number": 7333,
  "title": "Enable feature flags for things enabled in .NET Core 2.0",
  "body": "Enable many `FEATURE_*` flags that were disabled in the initial port to .NET Core but are now unifiable because the APIs were added in .NET Core 2.0.\n\nFixes #7329 and many more like it.",
  "state": "MERGED",
  "createdAt": "2022-01-25T16:18:53Z",
  "updatedAt": "2022-01-31T08:56:38Z",
  "closedAt": "2022-01-31T08:56:38Z",
  "mergedAt": "2022-01-31T08:56:37Z",
  "additions": 105,
  "deletions": 609,
  "changedFiles": 30,
  "headRefName": "enable-netcore2-stuff",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": {
    "title": "VS 17.2"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "19a6605f0a4330b73593b43dcda760ff4d96082b",
          "message": "Enable .NET Core 2.0 property functions\n\nThese MSBuild codepaths were disabled in the initial port to .NET Core\nbecause they weren't available in .NET Core 1.0. They were added in .NET\nCore 2.0, so they can be enabled now.\n\nFixes #7329.",
          "committedDate": "2022-01-27T15:12:03Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "26fa599146bb4ae0b1024ba5dfdd3ba2bbcd8da5",
          "message": "Enable FEATURE_OSVERSION\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T15:12:04Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2a5c917b2230e90b2fe8b0a9cf2684b12b14dabb",
          "message": "Enable FEATURE_64BIT_ENVIRONMENT_QUERY\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T15:12:04Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "60f602271f006a81c008a560c3358020e65c59f8",
          "message": "Enable string.IsInterned test\n\n`string.IsInterned` has been cross-platform since .NET Core 2.0.",
          "committedDate": "2022-01-27T15:12:04Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b0e621d2bade8c10dfca65608035b5b85242f9db",
          "message": "Remove STANDALONEBUILD\n\nThis was used during the initial open-sourcing of MSBuild, when it was mirrored\nbetween GitHub and the internal VS repo. STANDALONEBUILD was defined only for the\nGitHub copy.\n\nThe internal VS mirror of MSBuild has been deleted since 15.0, and as far as I\nknow no one has complained about any of these things being missing, so remove the\nifdefs.",
          "committedDate": "2022-01-27T15:12:04Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a869662f6b63c3a84b37f50f40d51d575fce8ab1",
          "message": "Remove MSBUILDENABLEVSPROFILING\n\nThis was used during the initial open-sourcing of MSBuild, when it was mirrored\nbetween GitHub and the internal VS repo. MSBUILDENABLEVSPROFILING was defined only for the\nGitHub copy.\n\nThe internal VS mirror of MSBuild has been deleted since 15.0, and as far as I\nknow no one has complained about any of these things being missing, so remove the\nifdefs.",
          "committedDate": "2022-01-27T15:12:04Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e4cfe9b6e01c62fe712cd9350d83384e56221885",
          "message": "Remove unnecessary blocks\n\nAfter some conditions were removed, these blocks are now superfluous.",
          "committedDate": "2022-01-27T16:05:27Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "88f373318eaec7e83ff5ac630d9a25da4694bafe",
          "message": "Enable FEATURE_HANDLE_SAFEWAITHANDLE\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "539615295ed2ae5deff3ddb28c58701d298bf272",
          "message": "Enable FEATURE_HANDLEREF\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e47dbdff9be56cf1cdefdf3f715721a49aedebf9",
          "message": "Enable FEATURE_RESOURCEMANAGER_GETRESOURCESET\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3c6abfd90da77be6ab52eaceeabbccfb57503b44",
          "message": "Remove unused feature flags\n\nThese don't appear to be used anywhere today.",
          "committedDate": "2022-01-27T16:05:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8a0a4b0284daad9a2c8c3feb3a7db2a7df1cc8ed",
          "message": "Enable FEATURE_ASSEMBLY_GETENTRYASSEMBLY\n\nThis was added back in .NET Core 1.0 (but I guess after our initial port?).",
          "committedDate": "2022-01-27T16:05:50Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8adf736f74371060ec93da924044ecf1904e7532",
          "message": "Enable FEATURE_XML_SOURCE_URI\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6239571adc42aa3980a3afba9ae7896040f0ea92",
          "message": "Enable FEATURE_XML_LOADPATH\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0fd45c157283d93db21995a3c3c2283a86f182a4",
          "message": "Enable FEATURE_APPDOMAIN_UNHANDLED_EXCEPTION\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7997285d210de43375732afe61ecb2d1d7ee3515",
          "message": "Enable FEATURE_TYPE_GETCONSTRUCTOR\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8468820a83fb5145c075dc7c3dcc80a510f90987",
          "message": "Enable FEATURE_CONSOLE_BUFFERWIDTH\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9defbf7347b68301d16dd4535ac9ccb09b52cad3",
          "message": "Enable FEATURE_THREAD_PRIORITY\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cec7d1b6725dad99dfd9e9969339b1e768f9dea2",
          "message": "Enable FEATURE_CHARSET_AUTO\n\nThis was added back in .NET Core 2.0.",
          "committedDate": "2022-01-27T16:05:51Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Probably easiest to review commit by commit. The most interesting/suspicious ones are 8ccaafb, 1af3c17, and \r\nef9eedd.",
        "createdAt": "2022-01-25T20:50:24Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Why is this dictionary being created empty then having a bunch of things added to it? Especially with a concurrent dictionary, isn't it faster to \"add\" them at initialization time?",
              "createdAt": "2022-01-26T21:48:18Z",
              "path": "src/Build/Resources/Constants.cs",
              "diffHunk": "@@ -302,9 +302,7 @@ private static void InitializeAvailableMethods()\n                         availableStaticMethods.TryAdd(\"System.Environment::GetLogicalDrives\", environmentType);\n \n // All the following properties only have getters\n-#if FEATURE_GET_COMMANDLINE",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "(I know that isn't the point of this PR, but it seems like it deserves changing.)",
              "createdAt": "2022-01-26T21:48:45Z",
              "path": "src/Build/Resources/Constants.cs",
              "diffHunk": "@@ -302,9 +302,7 @@ private static void InitializeAvailableMethods()\n                         availableStaticMethods.TryAdd(\"System.Environment::GetLogicalDrives\", environmentType);\n \n // All the following properties only have getters\n-#if FEATURE_GET_COMMANDLINE",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I'm not sure there's a change to make here. There's no way to initialize a ConcurrentDictionary with compile-time content, so the cleaner-looking syntax compiles to this same thing anyway:\r\n\r\nhttps://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA+ABATARgLABQGAzAATakDCpA3oaQ+TgHSUQA27MYALgJYQAdgGdWQsAFcosQTzGDJ0mLIAifXgMEBDKAE8APAGUeUPoIDmAGlLHTFgHykwAEwDc9RiXIpSAWQAUAJS0HoyMLqQAvKSCMADupEGhYSEEKemkANoARFrZALpRpNnA2ZbJGVnZYAVF2c5lFYwAvu5pLYTNQA==\r\n\r\nUsing `ConcurrentDictionary`'s [initialize-from-collection codepath](https://github.com/dotnet/runtime/blob/3e4c4a4c2c3343ac545bf48b9c3189556bfecf73/src/libraries/System.Collections.Concurrent/src/System/Collections/Concurrent/ConcurrentDictionary.cs#L181-L188) can avoid some locking but would require creating at minimum an array of `KeyValuePair`s so I'm skeptical of overall gains.",
              "createdAt": "2022-01-27T15:11:34Z",
              "path": "src/Build/Resources/Constants.cs",
              "diffHunk": "@@ -302,9 +302,7 @@ private static void InitializeAvailableMethods()\n                         availableStaticMethods.TryAdd(\"System.Environment::GetLogicalDrives\", environmentType);\n \n // All the following properties only have getters\n-#if FEATURE_GET_COMMANDLINE",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Well, you're right, and it looks like initializing from a collection would be strictly worse, since when given a collection, it acquires a lock for every add as it transfers kvps. I'm a bit surprised, since that should be something easy to optimize, but ah, well. I'm tempted to either file an issue on the runtime or ask if they'd be willing to take a PR to change that.",
              "createdAt": "2022-01-27T16:21:25Z",
              "path": "src/Build/Resources/Constants.cs",
              "diffHunk": "@@ -302,9 +302,7 @@ private static void InitializeAvailableMethods()\n                         availableStaticMethods.TryAdd(\"System.Environment::GetLogicalDrives\", environmentType);\n \n // All the following properties only have getters\n-#if FEATURE_GET_COMMANDLINE",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}