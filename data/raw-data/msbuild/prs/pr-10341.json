{
  "number": 10341,
  "title": "BuildCheck: perf vs acquisition challenge",
  "body": "### Context\r\nAdding a document that describes a challenge in analyzers acquisition. \r\n",
  "state": "MERGED",
  "createdAt": "2024-07-08T14:02:53Z",
  "updatedAt": "2024-07-19T08:03:39Z",
  "closedAt": "2024-07-19T08:03:39Z",
  "mergedAt": "2024-07-19T08:03:39Z",
  "additions": 24,
  "deletions": 0,
  "changedFiles": 2,
  "headRefName": "build-check-acquisition-challenge",
  "isDraft": false,
  "author": {
    "login": "AR-May"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "AR-May"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "11f2735d7d6f75c151bde0c2ae91710820b369ee",
          "message": "v1",
          "committedDate": "2024-07-08T13:25:00Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1a8575a17981173515c8d24e3ae0899b0adc51c2",
          "message": "Update documentation/specs/proposed/BuildCheck-acquisition-challenge.md\n\nCo-authored-by: Jan Krivanek <krivanek.j@hotmail.com>",
          "committedDate": "2024-07-11T11:36:57Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ee0e2d613315d2d9e3d817752c8cf15bca7fa08c",
          "message": "Update documentation/specs/proposed/BuildCheck-acquisition-challenge.md\n\nCo-authored-by: Jan Krivanek <krivanek.j@hotmail.com>",
          "committedDate": "2024-07-11T11:37:28Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3991e5ff942fdcc6e1b45bc9d4d080dc423a9b42",
          "message": "Update documentation/specs/proposed/BuildCheck-acquisition-challenge.md\n\nCo-authored-by: Jan Krivanek <krivanek.j@hotmail.com>",
          "committedDate": "2024-07-11T11:37:48Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2cc8c259d0031a9f5d15f583eabaa6a1c3696dc9",
          "message": "Address PR comments",
          "committedDate": "2024-07-16T08:46:33Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "41387d1c3cb31bac6ada65a1a646254c35e9e4d6",
          "message": "Update documentation/specs/proposed/BuildCheck-acquisition-challenge.md\n\nCo-authored-by: Farhad Alizada <104755925+f-alizada@users.noreply.github.com>",
          "committedDate": "2024-07-17T14:28:39Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "47c00583e8e5fac8f6fe0d1682357af180773f30",
          "message": "Update documentation/specs/proposed/BuildCheck-acquisition-challenge.md\n\nCo-authored-by: Farhad Alizada <104755925+f-alizada@users.noreply.github.com>",
          "committedDate": "2024-07-18T11:22:20Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "83471df69ac6c0833871e8f245751a42bb74ce2f",
          "message": "Update documentation/specs/proposed/BuildCheck-acquisition-challenge.md\n\nCo-authored-by: Farhad Alizada <104755925+f-alizada@users.noreply.github.com>",
          "committedDate": "2024-07-18T11:22:30Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8aa1048e78ce73aa8aee2e907e3039e08605775a",
          "message": "Address the PR comments",
          "committedDate": "2024-07-18T11:53:34Z",
          "author": {
            "name": "AR-May",
            "email": "67507805+AR-May@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nProject files are read during the first pass of the evaluation of the project. Given the multi-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is encountered, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \r\n```",
              "createdAt": "2024-07-08T16:29:33Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. ",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I'm confused by this:\r\n\r\n```\r\nThere might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule\r\n```\r\n\r\nCan it be reformulated?\r\nAnd I'm confused by the distinction between analyzer and analyzer rule - the analyzer is the unit of execution (that is important here), rule is 'just' unit of configuration",
              "createdAt": "2024-07-08T16:33:06Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by the central loggers. We need to ensure that the events required for the analyzers to work pass through. There might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule. In the first case only the declaration is needed for forwarding logger configuration, in the second - information about active rules from the `.editorconfig` file.",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "Oh - is it about the PackageReference for the custom analyzers? If yes - let's make it explicit.\r\n\r\nBtw. - for the custom analyzer we still need both information - the PackageReference and the .editorconfig configuration - to be able to know whether the analyzer should run",
              "createdAt": "2024-07-08T16:34:48Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by the central loggers. We need to ensure that the events required for the analyzers to work pass through. There might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule. In the first case only the declaration is needed for forwarding logger configuration, in the second - information about active rules from the `.editorconfig` file.",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "It was about analyzer vs analyzer rule detailing, in sense of events that are needed for them to work properly. If the analyzer is a unit of execution, so the detailing should be on the analyzer level.",
              "createdAt": "2024-07-11T12:26:58Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by the central loggers. We need to ensure that the events required for the analyzers to work pass through. There might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule. In the first case only the declaration is needed for forwarding logger configuration, in the second - information about active rules from the `.editorconfig` file.",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "I will update the text",
              "createdAt": "2024-07-11T12:27:09Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by the central loggers. We need to ensure that the events required for the analyzers to work pass through. There might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule. In the first case only the declaration is needed for forwarding logger configuration, in the second - information about active rules from the `.editorconfig` file.",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n2. There is no synchronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.\r\n```",
              "createdAt": "2024-07-08T16:35:19Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by the central loggers. We need to ensure that the events required for the analyzers to work pass through. There might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule. In the first case only the declaration is needed for forwarding logger configuration, in the second - information about active rules from the `.editorconfig` file.\n+2. There is no syncronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    - Do that as soon as we get the events `BuildCheckAcquisitionEventArgs` in forwarding logger: create a custom `BuildCheckForwardingLogger` that will re-configure itself when it gets `BuildCheckAcquisitionEventArgs`. This will need reading the editorconfig files and possibly loading custom analyzers in the worker node in order to find which events are needed for the custom analyzers. We will miss some of the events on the evaluation prior `BuildCheckAcquisitionEventArgs` event but since the events are processed in an order, the new filters in the forwarding logger will apply to the later events.\r\n```",
              "createdAt": "2024-07-08T16:36:23Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by the central loggers. We need to ensure that the events required for the analyzers to work pass through. There might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule. In the first case only the declaration is needed for forwarding logger configuration, in the second - information about active rules from the `.editorconfig` file.\n+2. There is no syncronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.\n+\n+# Solution ideas\n+\n+- When analyzers are used, always create and forward all the events. This will have a considerable impact on performance but makes configuring of the logging system easy.\n+- Set up the logger configuration before the build starts on the worker nodes: the main node can read the `.editorconfig` file and set up the correct configuration. For custom analysers we cannot do that, as they could be downloaded during the restore and discovered during the evaluation. \n+- Change the initial confuguration of the logging system (in particular, forwardning loggers) during the build. \n+    - Do that as soon as we get the events `BuildCheckAcquisitionEventArgs` in forwarding logger: create a custom `BuildCheckForwardingLogger` that will re-confisure itself when it gets `BuildCheckAcquisitionEventArgs`. This will need reading the editorconfig files and possibly loading custom analyzers in the worker node in order to find put which events are needed for the custom analyzers. We will miss some of the events on the evaluation prior `BuildCheckAcquisitionEventArgs` event but since the events are processed in an order, the new filters in the forwarding logger will apply to the later events.",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this the option implemented here: https://github.com/dotnet/msbuild/pull/10186?\r\n\r\nAs there we forward only the event types needed by currently supported BuildChecks - not all the events. But those that are needed are forwarded all the times. So it's maybe just my wrong reading of the meaning of that sentence",
              "createdAt": "2024-07-08T16:40:55Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by the central loggers. We need to ensure that the events required for the analyzers to work pass through. There might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule. In the first case only the declaration is needed for forwarding logger configuration, in the second - information about active rules from the `.editorconfig` file.\n+2. There is no syncronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.\n+\n+# Solution ideas\n+\n+- When analyzers are used, always create and forward all the events. This will have a considerable impact on performance but makes configuring of the logging system easy.",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "It is not an option implemented there. We forward only the events that are needed for the currently supported build-in analyzers. If any of the custom analyzers need access to some other events, we would not be able to configure it.",
              "createdAt": "2024-07-11T12:17:03Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files and also configured in the `.editorconfig` file. \n+Project files are read during the first pass of the evaluation of the project. Given the multy-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is found, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by the central loggers. We need to ensure that the events required for the analyzers to work pass through. There might be different detailing: either set up the set of consumed events for the analyzer, or for analyzer rule. In the first case only the declaration is needed for forwarding logger configuration, in the second - information about active rules from the `.editorconfig` file.\n+2. There is no syncronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.\n+\n+# Solution ideas\n+\n+- When analyzers are used, always create and forward all the events. This will have a considerable impact on performance but makes configuring of the logging system easy.",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nThere are two issues that arise from such a design:\r\n```",
              "createdAt": "2024-07-17T12:00:43Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files via PackageReference and also configured in the `.editorconfig` file.\n+Project files are read during the first pass of the evaluation of the project. Given the multi-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is encountered, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Does it mean that this is a suggestion to use one of the solutions? \r\nWhat are the pros/cons of the solutions provided?",
              "createdAt": "2024-07-17T12:06:05Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files via PackageReference and also configured in the `.editorconfig` file.\n+Project files are read during the first pass of the evaluation of the project. Given the multi-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is encountered, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by any of the central loggers. We need to ensure that the events required for the analyzers to work pass through. For that we need to have information about active rules from the `.editorconfig` file and the declarations in the project files via PackageReference when setting up the logging system.\n+2. There is no synchronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.\n+\n+# Solution ideas",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "This PR only states the problem and does not provide a design for a solution. I listed the ideas that came to my mind and all the pros/cons I see for them, but this is no full list. This is something we would need to figure out.",
              "createdAt": "2024-07-18T11:21:27Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files via PackageReference and also configured in the `.editorconfig` file.\n+Project files are read during the first pass of the evaluation of the project. Given the multi-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is encountered, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by any of the central loggers. We need to ensure that the events required for the analyzers to work pass through. For that we need to have information about active rules from the `.editorconfig` file and the declarations in the project files via PackageReference when setting up the logging system.\n+2. There is no synchronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.\n+\n+# Solution ideas",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Thank you! \r\nDo we have an item for that? ",
              "createdAt": "2024-07-19T07:41:19Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files via PackageReference and also configured in the `.editorconfig` file.\n+Project files are read during the first pass of the evaluation of the project. Given the multi-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is encountered, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by any of the central loggers. We need to ensure that the events required for the analyzers to work pass through. For that we need to have information about active rules from the `.editorconfig` file and the declarations in the project files via PackageReference when setting up the logging system.\n+2. There is no synchronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.\n+\n+# Solution ideas",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "I think not, but we shall\r\n",
              "createdAt": "2024-07-19T08:02:39Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files via PackageReference and also configured in the `.editorconfig` file.\n+Project files are read during the first pass of the evaluation of the project. Given the multi-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is encountered, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \n+\n+![analyzers-acquisition](analyzers-acquisition.png)\n+\n+There two issues that arises from such a design:\n+1. The configuration of the logging system should be ideally dependent on the set of the applied build analyzers. Verbosity of the build hugely affects the set of logging events that are logged by default. Moreover, some events are not forwarded with forwarding loggers, depending on forwarding loggers configuration. This is done for performance reasons to allow to drop the events that are not consumed by any of the central loggers. We need to ensure that the events required for the analyzers to work pass through. For that we need to have information about active rules from the `.editorconfig` file and the declarations in the project files via PackageReference when setting up the logging system.\n+2. There is no synchronization between build manager and logging service. When the build check acquisition events get to the main node, most of the build might have been already finished on worker nodes.\n+\n+# Solution ideas",
              "author": {
                "login": "AR-May"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "`IsEnabled` configuration is not available anymore in editorconfig, sorry to ask this, but could you please redraw the diagram exluding the update that I have mentioned? \r\nAlso let's use  `build_check.BC0101.severity=warning` as an example :) ",
              "createdAt": "2024-07-17T12:07:30Z",
              "path": "documentation/specs/proposed/analyzers-acquisition.png",
              "diffHunk": "",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "Additionally looking at the diagram, could you please specify the connection between: `Build Check Forwarding Logger` and other items in the diagram?",
              "createdAt": "2024-07-17T12:13:41Z",
              "path": "documentation/specs/proposed/analyzers-acquisition.png",
              "diffHunk": "",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "Re-worked the diagram, hope it is now clearer.",
              "createdAt": "2024-07-18T11:54:28Z",
              "path": "documentation/specs/proposed/analyzers-acquisition.png",
              "diffHunk": "",
              "author": {
                "login": "AR-May"
              }
            },
            {
              "body": "Thank you! ",
              "createdAt": "2024-07-19T07:41:35Z",
              "path": "documentation/specs/proposed/analyzers-acquisition.png",
              "diffHunk": "",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nLet's recall some details of BuildCheck analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \r\n```",
              "createdAt": "2024-07-17T12:14:15Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. ",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\nProject files are read during the first pass of the evaluation of the project. Given the multi-processing nature of MSBuild, this might happen either on main node or on the msbuild worker node. When the analyzer is encountered, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. \r\n```",
              "createdAt": "2024-07-17T12:29:47Z",
              "path": "documentation/specs/proposed/BuildCheck-acquisition-challenge.md",
              "diffHunk": "@@ -0,0 +1,24 @@\n+# BuildCheck - Perf and Acquisition Challenge\n+\n+This is an internal engineering document. For general overview and user-oriented information please refer to [BuildCheck - Design Spec](BuildCheck.md).\n+\n+# Challenge\n+\n+Let's recall some details of build check analyzers acquisition. There might be two types of the build analyzer: build-in and custom. \n+The build-in analyzers are configured in the `.editorconfig` file. The custom analyzers are declared in the project files via PackageReference and also configured in the `.editorconfig` file.\n+Project files are read during the first pass of the evaluation of the project. Given the multi-processing nature of msbuild, this might happen either on main node or on the msbuild worker node. When the analyzer is encountered, the event `BuildCheckAcquisitionEventArgs` is logged with information concerning the analyzer that is needed to be loaded. This event is forwarded by `BuildCheckForwardingLogger` through logging system via the named pipes to the main msbuild node, where it is processed by `BuildCheckConnectorLogger`. This requires the logging system to be configured on main and worker msbuild nodes. ",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      }
    ]
  }
}