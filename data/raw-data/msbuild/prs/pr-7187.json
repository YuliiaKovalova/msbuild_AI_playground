{
  "number": 7187,
  "title": "CA2208 Instantiate argument exceptions correctly",
  "body": "Relates to #7174\r\nhttps://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/CA2208",
  "state": "CLOSED",
  "createdAt": "2021-12-30T03:45:24Z",
  "updatedAt": "2022-08-06T12:21:10Z",
  "closedAt": "2022-08-06T12:21:10Z",
  "mergedAt": null,
  "additions": 5,
  "deletions": 4,
  "changedFiles": 4,
  "headRefName": "CA2208",
  "isDraft": true,
  "author": {
    "login": "elachlan"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "7448ae67648d0b38eae1935621d5815860842ce7",
          "message": "CA2208 Instantiate argument exceptions correctly",
          "committedDate": "2021-12-30T03:45:07Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "571f4b708ce6567121116797718c5ffbce69dc06",
          "message": "Add error message",
          "committedDate": "2022-01-03T20:48:22Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0df9185926625beb3a52e3e79db7c6a7b6333266",
          "message": "Revert CodeAnalysis.ruleset",
          "committedDate": "2022-01-08T05:39:30Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ea4f372add91fa3b4b450bdb44f173e7f542655f",
          "message": "Merge branch 'master' into CA2208",
          "committedDate": "2022-01-08T05:39:41Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d0508dc7becd40b5c58c35d0ae432486a079a192",
          "message": "enable warning on CA2208",
          "committedDate": "2022-01-08T05:50:58Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "59475193c9870c9dff8cc07ec5a2cd290dc39cf5",
          "message": "Fix remaining occurrences of CA2208 violations",
          "committedDate": "2022-01-08T05:51:24Z",
          "author": {
            "name": "elachlan",
            "email": "2433737+elachlan@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Build is failing on dependency microsoft.codeanalysis.collections:\r\n```\r\n/home/vsts/.nuget/packages/microsoft.codeanalysis.collections/4.0.0-4.21379.20/contentFiles/cs/netstandard2.0/ImmutableSegmentedList`1.cs(346,23): error CA2208: (NETCORE_ENGINEERING_TELEMETRY=Build) Call the ArgumentException constructor that contains a message and/or paramName parameter\r\n/home/vsts/.nuget/packages/microsoft.codeanalysis.collections/4.0.0-4.21379.20/contentFiles/cs/netstandard2.0/ImmutableSegmentedList`1+ValueBuilder.cs(249,27): error CA2208: (NETCORE_ENGINEERING_TELEMETRY=Build) Call the ArgumentException constructor that contains a message and/or paramName parameter\r\n```\r\n\r\nhttps://github.com/dotnet/roslyn/blob/24ef0f30f29298be003d2d7d5de29f9906c37611/src/Dependencies/Collections/ImmutableSegmentedList%601.cs#L346\r\n\r\nhttps://github.com/dotnet/roslyn/blob/24ef0f30f29298be003d2d7d5de29f9906c37611/src/Dependencies/Collections/ImmutableSegmentedList%601%2BValueBuilder.cs#L249",
        "createdAt": "2022-01-10T23:08:53Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "Related Roslyn issue:\r\nhttps://github.com/dotnet/roslyn/issues/45286",
        "createdAt": "2022-01-10T23:22:47Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "So we're waiting for that issue to be resolved? That looks outside the MSBuild layer.",
        "createdAt": "2022-01-11T00:20:19Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Yes, I am not sure how to tell the analyzer not to analyze code like this. So I am attempting to fix the upstream code.",
        "createdAt": "2022-01-11T00:21:59Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@elachlan Those errors should be suppressible via editorconfig per https://github.com/dotnet/roslyn/issues/55992, probably something like:\r\n\r\n```ini\r\n[**/microsoft.codeanalysis.collections/**/*.cs]\r\n# CA2208: Instantiate argument exceptions correctly\r\ndotnet_diagnostic.CA2208.severity = none\r\n```\r\n\r\nIf it doesn't work (I haven't tested), then dotnet/roslyn#55992 should probably re-considered.\r\n\r\nFYI @jaredpar ",
        "createdAt": "2022-01-11T06:58:50Z",
        "author": {
          "login": "Youssef1313"
        }
      },
      {
        "body": ".editorconfig didn't work. But I don't think we are using IncludeContentInPack.",
        "createdAt": "2022-01-11T07:40:08Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@elachlan I can't think of how `Microsoft.CodeAnalysis.Collections` contents are seen by the compiler without, somehow, `IncludeContentInPack` being set (on Roslyn side I mean).\r\n\r\nSince you can confirm that `.editorconfig` doesn't work. I'd like @jaredpar to re-consider something for dotnet/roslyn#55992",
        "createdAt": "2022-01-11T07:52:21Z",
        "author": {
          "login": "Youssef1313"
        }
      },
      {
        "body": "See the commit adding it here:\r\nhttps://github.com/dotnet/msbuild/commit/f1cd160dbd39718ac7bade9cdd1f1a84eef40493",
        "createdAt": "2022-01-11T08:01:28Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "@elachlan I'm referring to roslyn side, the [package](https://nuget.info/packages/Microsoft.CodeAnalysis.Collections/3.9.0-5.21120.8) itself has its source code included in pack:\r\n\r\n![image](https://user-images.githubusercontent.com/31348972/148903984-b01b06eb-dd0c-42ab-aa87-979db831d7e9.png)\r\n\r\nThat's why I think dotnet/roslyn#55992 is relevant.",
        "createdAt": "2022-01-11T08:03:53Z",
        "author": {
          "login": "Youssef1313"
        }
      },
      {
        "body": "@sharwell in https://github.com/dotnet/roslyn/issues/55992 it was pointed out that globalconfig defined analyzers apply to source code supplied by nuget packages as well. Where as .editorconfig files do not apply analyzers to against the packages.\r\n\r\nThis means I will unfortunately need to move back to using .editorconfigs. Unless you know of a better way?",
        "createdAt": "2022-01-20T07:19:43Z",
        "author": {
          "login": "elachlan"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "\ud83d\udcad I would prefer to see a better message here if possible",
              "createdAt": "2022-01-03T00:08:28Z",
              "path": "src/Build.OM.UnitTests/TransientIO.cs",
              "diffHunk": "@@ -77,7 +77,7 @@ public string GetAbsolutePath(string relative)\n             var absolute = Path.GetFullPath(Path.IsPathRooted(relative) ? relative : Path.Combine(tempRoot, relative));\n             if (!IsControled(absolute))\n             {\n-                throw new ArgumentException(nameof(relative));\n+                throw new ArgumentException(null, nameof(relative));",
              "author": {
                "login": "sharwell"
              }
            },
            {
              "body": "It looks like the code is checking that the relative path is indeed relative to the RootFolder. So I supposed the error should be something like:\r\n`The path is invalid. Either the path is an absolute path that is not rooted to the RootFolder, or just an invalid path`.\r\n",
              "createdAt": "2022-01-03T01:31:44Z",
              "path": "src/Build.OM.UnitTests/TransientIO.cs",
              "diffHunk": "@@ -77,7 +77,7 @@ public string GetAbsolutePath(string relative)\n             var absolute = Path.GetFullPath(Path.IsPathRooted(relative) ? relative : Path.Combine(tempRoot, relative));\n             if (!IsControled(absolute))\n             {\n-                throw new ArgumentException(nameof(relative));\n+                throw new ArgumentException(null, nameof(relative));",
              "author": {
                "login": "elachlan"
              }
            },
            {
              "body": "`Either the path is invalid or it is not rooted to RootFolder.`\r\n? Bit more concise.",
              "createdAt": "2022-01-03T18:06:33Z",
              "path": "src/Build.OM.UnitTests/TransientIO.cs",
              "diffHunk": "@@ -77,7 +77,7 @@ public string GetAbsolutePath(string relative)\n             var absolute = Path.GetFullPath(Path.IsPathRooted(relative) ? relative : Path.Combine(tempRoot, relative));\n             if (!IsControled(absolute))\n             {\n-                throw new ArgumentException(nameof(relative));\n+                throw new ArgumentException(null, nameof(relative));",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}