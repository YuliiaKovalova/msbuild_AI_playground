{
  "number": 9060,
  "title": "fixes dotnet/msbuild#8958  TerminalLogger in .NET 8.0.100-preview.6 issues audible alerts on iTerm2",
  "body": "fixes dotnet/msbuild#8958\r\n### Context\r\nTerminalLogger in .NET 8.0.100-preview.6 issues audible alerts on iTerm2\r\nIterm2 treats ;9 code differently from ConEmu: https://iterm2.com/documentation-escape-codes.html\r\n\r\n### Changes Made\r\nDisabled progress reporting on Mac\r\n\r\n### Testing\r\nTested manually on Mac\r\n\r\n### Notes",
  "state": "MERGED",
  "createdAt": "2023-07-24T14:18:49Z",
  "updatedAt": "2023-07-28T03:01:13Z",
  "closedAt": "2023-07-28T03:01:13Z",
  "mergedAt": "2023-07-28T03:01:13Z",
  "additions": 101,
  "deletions": 16,
  "changedFiles": 24,
  "headRefName": "fix-8958",
  "isDraft": false,
  "author": {
    "login": "vlada-shubina"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "958a932f2df24e01ad7b2e7be3b18d1b1e93551e",
          "message": "fixes dotnet/msbuild#8958  TerminalLogger in .NET 8.0.100-preview.6 issues audible alerts on iTerm2",
          "committedDate": "2023-07-24T14:19:05Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f0c72f3707aefb7eb338f949baf3f578543d4c6a",
          "message": "abstracted `ITerminal.SupportsProgressReporting`",
          "committedDate": "2023-07-24T15:30:34Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ab91f3767b171932e5351011054108f93ca6a9f7",
          "message": "fixed verify tests",
          "committedDate": "2023-07-24T16:27:06Z",
          "author": {
            "name": "Vlada Shubina",
            "email": "vshubina@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> Having to split every validation test output in 3 is a bit unfortunate but this works for me.\r\n> \r\n> . . . Hmm, actually, can we set the mock terminal in the tests to not emit this code consistently except for a specific test for this behavior? Up to you whether that seems worth it.\r\n\r\nIt depends on test intention actually. If the intention is to test real life e2e scenario, and Mac output is currently indeed different, it's better to keep them split as is. \r\n\r\nUnless we \"unseal\" `Terminal` implementation, and override only diff members, or make it configurable, the mock implementation can easily deviate and bug will be missed. Given that most of us is developing on Win, Mac and Linux issues can be unnoticed.\r\n\r\nFrom my experience, it's worth to keep truly e2e scenarios unmocked. For specific tests, for example `DisplayNodesShowsCurrent`, `DisplayNodesOverwritesWithNewTargetFramework` it might be reasonable to use mock, however i don't have a full picture to make a decision for them.",
        "createdAt": "2023-07-25T12:18:07Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "Unless there is more feedback on open items, this PR is ready to be merged.",
        "createdAt": "2023-07-26T12:31:40Z",
        "author": {
          "login": "vlada-shubina"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Nit: I prefer full URLs\r\n```suggestion\r\n        // https://github.com/dotnet/msbuild/issues/8958: iTerm2 treats ;9 code to post a notification instead,\r\n```",
              "createdAt": "2023-07-24T14:22:14Z",
              "path": "src/MSBuild/TerminalLogger/TerminalLogger.cs",
              "diffHunk": "@@ -235,7 +236,12 @@ private void BuildStarted(object sender, BuildStartedEventArgs e)\n \n         _buildStartTime = e.Timestamp;\n \n-        Terminal.Write(AnsiCodes.SetProgressIndeterminate);\n+        // dotnet/msbuild#8958: iTerm2 treats ;9 code to post a notification instead,",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This is over-broad; several terminals support it (including most importantly to our Windows folks, Windows Terminal). I might simplify to something like \"should be wrapped with a support check\".",
              "createdAt": "2023-07-24T14:23:44Z",
              "path": "src/MSBuild/TerminalLogger/AnsiCodes.cs",
              "diffHunk": "@@ -95,13 +95,23 @@ internal static class AnsiCodes\n     public const string ShowCursor = \"\\x1b[?25h\";\n \n     /// <summary>\n-    /// Set progress state to a busy spinner.\n+    /// Set progress state to a busy spinner. <br/>\n+    /// Note: this code works only on ConEmu terminals, and conflicts with push a notification code on iTerm2.",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "is there any specification Windows Terminal adheres to?\r\nI thought they adhere to ConEmu (at least to some extend).",
              "createdAt": "2023-07-24T14:58:16Z",
              "path": "src/MSBuild/TerminalLogger/AnsiCodes.cs",
              "diffHunk": "@@ -95,13 +95,23 @@ internal static class AnsiCodes\n     public const string ShowCursor = \"\\x1b[?25h\";\n \n     /// <summary>\n-    /// Set progress state to a busy spinner.\n+    /// Set progress state to a busy spinner. <br/>\n+    /// Note: this code works only on ConEmu terminals, and conflicts with push a notification code on iTerm2.",
              "author": {
                "login": "vlada-shubina"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Maybe abstract this check to a method named something like `TerminalSupportsProgressReporting`, which this as the current implementation?",
              "createdAt": "2023-07-24T14:24:26Z",
              "path": "src/MSBuild/TerminalLogger/TerminalLogger.cs",
              "diffHunk": "@@ -235,7 +236,12 @@ private void BuildStarted(object sender, BuildStartedEventArgs e)\n \n         _buildStartTime = e.Timestamp;\n \n-        Terminal.Write(AnsiCodes.SetProgressIndeterminate);\n+        // dotnet/msbuild#8958: iTerm2 treats ;9 code to post a notification instead,\n+        // so disable progress reporting on Mac.\n+        if (!RuntimeInformation.IsOSPlatform(OSPlatform.OSX))",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "\u2764\ufe0f\u2764\ufe0f\u2764\ufe0f Knew this setting had to be living _somewhere_.",
              "createdAt": "2023-07-24T16:25:22Z",
              "path": ".editorconfig",
              "diffHunk": "@@ -15,6 +15,9 @@ trim_trailing_whitespace = true\n [project.json]\n indent_size = 2\n \n+[*.txt]\n+insert_final_newline = false",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    public bool SupportsProgressReporting { get; } = Environment.GetEnvironmentVariable(\"TERM_PROGRAM\") != \"iTerm.app\";\r\n```\r\nIf it's just iTerm2 perhaps this? (feels super hacky I know)",
              "createdAt": "2023-07-25T13:31:57Z",
              "path": "src/MSBuild/TerminalLogger/Terminal.cs",
              "diffHunk": "@@ -62,6 +63,12 @@ public int Width\n         }\n     }\n \n+    /// <inheritdoc/>\n+    /// <remarks>\n+    /// https://github.com/dotnet/msbuild/issues/8958: iTerm2 treats ;9 code to post a notification instead, so disable progress reporting on Mac.\n+    /// </remarks>\n+    public bool SupportsProgressReporting { get; } = !RuntimeInformation.IsOSPlatform(OSPlatform.OSX);",
              "author": {
                "login": "slang25"
              }
            },
            {
              "body": "We discussed this way internally, also `LC_TERMINAL` var, however those are not reliable enough, and more complicated solution is not justified for the purpose.\r\n\r\nOut of curiosity, do  you know any Mac terminal where progress reporting would work?",
              "createdAt": "2023-07-25T14:57:25Z",
              "path": "src/MSBuild/TerminalLogger/Terminal.cs",
              "diffHunk": "@@ -62,6 +63,12 @@ public int Width\n         }\n     }\n \n+    /// <inheritdoc/>\n+    /// <remarks>\n+    /// https://github.com/dotnet/msbuild/issues/8958: iTerm2 treats ;9 code to post a notification instead, so disable progress reporting on Mac.\n+    /// </remarks>\n+    public bool SupportsProgressReporting { get; } = !RuntimeInformation.IsOSPlatform(OSPlatform.OSX);",
              "author": {
                "login": "vlada-shubina"
              }
            },
            {
              "body": "Just tried a few, and none of them appear to support it:\r\n* Terminal (built in)\r\n* iTerm2\r\n* Hyper\r\n* Alacritty\r\n* Tabby\r\n* VS Code integrated terminal",
              "createdAt": "2023-07-26T15:19:43Z",
              "path": "src/MSBuild/TerminalLogger/Terminal.cs",
              "diffHunk": "@@ -62,6 +63,12 @@ public int Width\n         }\n     }\n \n+    /// <inheritdoc/>\n+    /// <remarks>\n+    /// https://github.com/dotnet/msbuild/issues/8958: iTerm2 treats ;9 code to post a notification instead, so disable progress reporting on Mac.\n+    /// </remarks>\n+    public bool SupportsProgressReporting { get; } = !RuntimeInformation.IsOSPlatform(OSPlatform.OSX);",
              "author": {
                "login": "slang25"
              }
            },
            {
              "body": "Thank you for checking. In this case, i don't see justification for a change now. Using environment variables has a degree of risk, as their values can change at any time and they may not be set in all the cases.\r\n\r\nIf there is a use case for progress reporting on Mac or other more important need to detect terminal in scope of Terminal Logger that can justify additional implementation, it may be changed later.",
              "createdAt": "2023-07-27T09:00:14Z",
              "path": "src/MSBuild/TerminalLogger/Terminal.cs",
              "diffHunk": "@@ -62,6 +63,12 @@ public int Width\n         }\n     }\n \n+    /// <inheritdoc/>\n+    /// <remarks>\n+    /// https://github.com/dotnet/msbuild/issues/8958: iTerm2 treats ;9 code to post a notification instead, so disable progress reporting on Mac.\n+    /// </remarks>\n+    public bool SupportsProgressReporting { get; } = !RuntimeInformation.IsOSPlatform(OSPlatform.OSX);",
              "author": {
                "login": "vlada-shubina"
              }
            }
          ]
        }
      }
    ]
  }
}