{
  "number": 10673,
  "title": "Fix setting ProjectMetadataElement.Name",
  "body": "Fixes #10671\r\n\r\nCurrently the `ProjectMetadataElement.Name` setter updates the XmlNode for `ProjectMetadataElement`, but when the metadata is expressed as an attribute it does not update the attribute on the parent node.\r\n\r\nThis change does the bookeeping for the parent node.\r\n\r\nOne interesting tidbit is how even when expressed as an attribute, `ProjectMetadataElement` still uses an (unparented) `XmlElementWithLocation` to represent it.",
  "state": "MERGED",
  "createdAt": "2024-09-17T15:39:41Z",
  "updatedAt": "2024-10-01T18:10:13Z",
  "closedAt": "2024-10-01T18:10:13Z",
  "mergedAt": "2024-10-01T18:10:13Z",
  "additions": 58,
  "deletions": 0,
  "changedFiles": 3,
  "headRefName": "fix-metadata-name-setter",
  "isDraft": false,
  "author": {
    "login": "dfederm"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "5d0170148b174277cf38dcc1bda4d4ebff44b006",
          "message": "Fix setting ProjectMetadataElement.Name",
          "committedDate": "2024-09-17T15:42:52Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "136e21db14c3da7a6304069a495a8373a9ff28f5",
          "message": "Fix xmldoc",
          "committedDate": "2024-09-17T15:57:41Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "76af31da131990e3f775ec9426ee13b56e52684d",
          "message": "Merge remote-tracking branch 'upstream/main' into fix-metadata-name-setter",
          "committedDate": "2024-09-18T20:19:05Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3689e4f4f390a1f39aec44a09de24b1d9eb4f8d5",
          "message": "Merge remote-tracking branch 'upstream/main' into fix-metadata-name-setter",
          "committedDate": "2024-09-27T18:51:29Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "79c986731baf598d8d960e3aab3054593c7f010d",
          "message": "Merge branch 'main' into fix-metadata-name-setter",
          "committedDate": "2024-10-01T15:21:58Z",
          "author": {
            "name": "David Federman",
            "email": "dfederm@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Please add an error message that would be understandable to anyone reviewing log of crashing msbuild.\r\n(This is inspired by still painful memory of troubleshooting sudden msbuild crashes with error message being `\"must be valid\"`)",
              "createdAt": "2024-09-20T18:04:39Z",
              "path": "src/Build/Construction/ProjectElementContainer.cs",
              "diffHunk": "@@ -448,6 +448,23 @@ private void SetElementAsAttributeValue(ProjectElement child)\n             ProjectXmlUtilities.SetOrRemoveAttribute(XmlElement, child.XmlElement.Name, value);\n         }\n \n+        /// <summary>\n+        /// If child \"element\" is actually represented as an attribute, update the name in the corresponding Xml attribute\n+        /// </summary>\n+        /// <param name=\"child\">A child element which might be represented as an attribute</param>\n+        /// <param name=\"oldName\">The old name for the child element</param>\n+        internal void UpdateElementName(ProjectElement child, string oldName)\n+        {\n+            ErrorUtilities.VerifyThrow(Link == null, \"External project\");",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "I'm not totally sure I get what \"Link\" even is tbh. This assert is copied from `SetElementAsAttributeValue`, `UpdateElementValue`, and basically every other method here. I think if anything those should be fixed across the board.",
              "createdAt": "2024-09-23T23:53:59Z",
              "path": "src/Build/Construction/ProjectElementContainer.cs",
              "diffHunk": "@@ -448,6 +448,23 @@ private void SetElementAsAttributeValue(ProjectElement child)\n             ProjectXmlUtilities.SetOrRemoveAttribute(XmlElement, child.XmlElement.Name, value);\n         }\n \n+        /// <summary>\n+        /// If child \"element\" is actually represented as an attribute, update the name in the corresponding Xml attribute\n+        /// </summary>\n+        /// <param name=\"child\">A child element which might be represented as an attribute</param>\n+        /// <param name=\"oldName\">The old name for the child element</param>\n+        internal void UpdateElementName(ProjectElement child, string oldName)\n+        {\n+            ErrorUtilities.VerifyThrow(Link == null, \"External project\");",
              "author": {
                "login": "dfederm"
              }
            },
            {
              "body": "Gotcha\r\n\r\nBased on this: https://github.com/dotnet/msbuild/blob/9f26687a3bd660f2478f865203402f48a0337778/src/Build/Construction/ProjectElement.cs#L299-L300\r\n\r\nIt seems the condition ensures that \"Attempt to edit a document that is not backed by local xml is disallowed\".\r\n\r\nI agree though that the condition is far too common in the code - let me handle it separately once your PR is merged",
              "createdAt": "2024-09-24T08:54:37Z",
              "path": "src/Build/Construction/ProjectElementContainer.cs",
              "diffHunk": "@@ -448,6 +448,23 @@ private void SetElementAsAttributeValue(ProjectElement child)\n             ProjectXmlUtilities.SetOrRemoveAttribute(XmlElement, child.XmlElement.Name, value);\n         }\n \n+        /// <summary>\n+        /// If child \"element\" is actually represented as an attribute, update the name in the corresponding Xml attribute\n+        /// </summary>\n+        /// <param name=\"child\">A child element which might be represented as an attribute</param>\n+        /// <param name=\"oldName\">The old name for the child element</param>\n+        internal void UpdateElementName(ProjectElement child, string oldName)\n+        {\n+            ErrorUtilities.VerifyThrow(Link == null, \"External project\");",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "https://github.com/dotnet/msbuild/issues/10695",
              "createdAt": "2024-09-24T09:09:22Z",
              "path": "src/Build/Construction/ProjectElementContainer.cs",
              "diffHunk": "@@ -448,6 +448,23 @@ private void SetElementAsAttributeValue(ProjectElement child)\n             ProjectXmlUtilities.SetOrRemoveAttribute(XmlElement, child.XmlElement.Name, value);\n         }\n \n+        /// <summary>\n+        /// If child \"element\" is actually represented as an attribute, update the name in the corresponding Xml attribute\n+        /// </summary>\n+        /// <param name=\"child\">A child element which might be represented as an attribute</param>\n+        /// <param name=\"oldName\">The old name for the child element</param>\n+        internal void UpdateElementName(ProjectElement child, string oldName)\n+        {\n+            ErrorUtilities.VerifyThrow(Link == null, \"External project\");",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      }
    ]
  }
}