{
  "number": 6928,
  "title": "Remove opt in for new schema for CombineTargetFrameworkInfoProperties",
  "body": "For CombineTargetFrameworkInfoProperties, we had hit an issue in which a TF could be invalid as an XML root. We changed the schema to let us escape it, then opted into the new schema in the SDK. This removes the option to not opt into the new schema. It's hopefully still ok to do this; though it would have been better to get it into 17.0, I don't think anyone other than the SDK is using this, so I don't think it should matter.\r\n\r\nI didn't really test this, but it looks hard to mess up.\r\n\r\nEdit: well, maybe \ud83d\ude1b ",
  "state": "MERGED",
  "createdAt": "2021-10-08T14:55:40Z",
  "updatedAt": "2022-04-12T16:40:58Z",
  "closedAt": "2022-04-11T15:44:09Z",
  "mergedAt": "2022-04-11T15:44:09Z",
  "additions": 5,
  "deletions": 8,
  "changedFiles": 3,
  "headRefName": "remove-escape-hatch-for-validating-schema",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "ee48e23427d38df82b278bd768992c6e60bc7523",
          "message": "Remove opt in for new schema\n\nFor CombineTargetFrameworkInfoProperties, we had hit an issue in which a TF could be invalid as an XML root. We changed the schema to let us escape it, then opted into the new schema in the SDK. This removes the option to not opt into the new schema. It's hopefully still ok to do this; though it would have been better to get it into 17.0, I don't think anyone other than the SDK is using this, so I don't think it should matter.",
          "committedDate": "2021-10-08T14:53:44Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ebaa450c2aa5496fbed61daa8a9ba5a57fcc318c",
          "message": "Update src/Tasks/Microsoft.Common.CurrentVersion.targets",
          "committedDate": "2021-10-08T16:32:12Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4e1147efe8afd2932d78cc53d88bfff9696dce88",
          "message": "Put back attribute",
          "committedDate": "2021-10-08T17:34:50Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d669e9862794700ac561f18ffe8700806a5f0421",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into remove-escape-hatch-for-validating-schema",
          "committedDate": "2022-02-18T16:22:16Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b7c40f86dfcd0a6c57c08a1155b0a9f198ae0da1",
          "message": "Put in change wave",
          "committedDate": "2022-02-28T16:31:35Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fedbbca3aab7f413cccc4d8ac24d0435e9006be3",
          "message": "Update src/Tasks/CombineTargetFrameworkInfoProperties.cs",
          "committedDate": "2022-02-28T16:40:30Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        PropertiesAndValues=\"@(_AdditionalTargetFrameworkInfoPropertyWithValue)\">\r\n```",
              "createdAt": "2021-10-08T16:32:08Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1913,14 +1913,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n       </_AdditionalTargetFrameworkInfoPropertyWithValue>\n     </ItemGroup>\n \n-    <PropertyGroup>\n-      <_UseAttributeForTargetFrameworkInfoPropertyNames Condition=\"'$(_UseAttributeForTargetFrameworkInfoPropertyNames)' == ''\">false</_UseAttributeForTargetFrameworkInfoPropertyNames>\n-    </PropertyGroup>\n-\n     <CombineTargetFrameworkInfoProperties\n         RootElementName=\"$(TargetFramework)\"\n         PropertiesAndValues=\"@(_AdditionalTargetFrameworkInfoPropertyWithValue)\"",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "triage:\r\nput in a change wave",
              "createdAt": "2022-02-28T16:13:09Z",
              "path": "src/Tasks/CombineTargetFrameworkInfoProperties.cs",
              "diffHunk": "@@ -39,9 +39,7 @@ public override bool Execute()\n         {\n             if (PropertiesAndValues != null)\n             {\n-                XElement root = UseAttributeForTargetFrameworkInfoPropertyNames ?",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Also put this in a change wave? I vote no because it's a private property, so anyone abusing it knows they might be broken.",
              "createdAt": "2022-02-28T16:33:21Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1905,14 +1905,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n       </_AdditionalTargetFrameworkInfoPropertyWithValue>\n     </ItemGroup>\n \n-    <PropertyGroup>\n-      <_UseAttributeForTargetFrameworkInfoPropertyNames Condition=\"'$(_UseAttributeForTargetFrameworkInfoPropertyNames)' == ''\">false</_UseAttributeForTargetFrameworkInfoPropertyNames>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Agree.",
              "createdAt": "2022-02-28T16:38:26Z",
              "path": "src/Tasks/Microsoft.Common.CurrentVersion.targets",
              "diffHunk": "@@ -1905,14 +1905,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n       </_AdditionalTargetFrameworkInfoPropertyWithValue>\n     </ItemGroup>\n \n-    <PropertyGroup>\n-      <_UseAttributeForTargetFrameworkInfoPropertyNames Condition=\"'$(_UseAttributeForTargetFrameworkInfoPropertyNames)' == ''\">false</_UseAttributeForTargetFrameworkInfoPropertyNames>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                // When removing the change wave, also remove UseAttributeForTargetFrameworkInfoPropertyNames.\r\n                XElement root = ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_2) || UseAttributeForTargetFrameworkInfoPropertyNames ?\r\n```\r\n\r\n? That would technically add another layer of breaking change, so I'm assuming not, but it would be nice.",
              "createdAt": "2022-02-28T16:34:01Z",
              "path": "src/Tasks/CombineTargetFrameworkInfoProperties.cs",
              "diffHunk": "@@ -39,7 +39,7 @@ public override bool Execute()\n         {\n             if (PropertiesAndValues != null)\n             {\n-                XElement root = UseAttributeForTargetFrameworkInfoPropertyNames ?\n+                XElement root = ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_2) || UseAttributeForTargetFrameworkInfoPropertyNames ?",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "I'd say yes, actually: with this change we're causing the thing to be ignored. If you keep specifying it and care, the change wave will save you and you can file a bug so we don't remove it. If you're specifying it and also don't care, just don't specify it.",
              "createdAt": "2022-02-28T16:39:12Z",
              "path": "src/Tasks/CombineTargetFrameworkInfoProperties.cs",
              "diffHunk": "@@ -39,7 +39,7 @@ public override bool Execute()\n         {\n             if (PropertiesAndValues != null)\n             {\n-                XElement root = UseAttributeForTargetFrameworkInfoPropertyNames ?\n+                XElement root = ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_2) || UseAttributeForTargetFrameworkInfoPropertyNames ?",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}