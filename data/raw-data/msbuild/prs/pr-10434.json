{
  "number": 10434,
  "title": "Fix Zero Element check expressions",
  "body": "Fixes #10433\r\n\r\n/cc @sebastienros ",
  "state": "CLOSED",
  "createdAt": "2024-07-23T19:55:25Z",
  "updatedAt": "2024-07-25T15:35:09Z",
  "closedAt": "2024-07-25T15:35:09Z",
  "mergedAt": null,
  "additions": 16,
  "deletions": 16,
  "changedFiles": 11,
  "headRefName": "ma/fix-zero-expression-check",
  "isDraft": false,
  "author": {
    "login": "MikeAlhayek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "014a0f5ee639cd9fdcd192106ffff190b92399b0",
          "message": "Fix Zero Element check expressions",
          "committedDate": "2024-07-23T19:48:40Z",
          "author": {
            "name": "Mike Alhayek",
            "email": "mike@crestapps.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1d184b3ca6af7d1813d6f75384bdba597d662566",
          "message": "undo some changes",
          "committedDate": "2024-07-24T06:38:33Z",
          "author": {
            "name": "Mike Alhayek",
            "email": "mike@crestapps.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b198629f702d899e03efb8590fa32b3df7dde2dd",
          "message": "undo readonly",
          "committedDate": "2024-07-24T06:42:07Z",
          "author": {
            "name": "Mike Alhayek",
            "email": "mike@crestapps.com"
          }
        }
      },
      {
        "commit": {
          "oid": "91b59e9b8a9e86c2f9253ddb8798cca06ae62871",
          "message": "undo some more readonly",
          "committedDate": "2024-07-24T06:44:13Z",
          "author": {
            "name": "Mike Alhayek",
            "email": "mike@crestapps.com"
          }
        }
      },
      {
        "commit": {
          "oid": "7234cea9b4f4fea902a5a1d48d01c89058431eec",
          "message": "last cleanup",
          "committedDate": "2024-07-24T06:47:37Z",
          "author": {
            "name": "Mike Alhayek",
            "email": "mike@crestapps.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5a71949edd961346cb83e42754e15389e1f71fc1",
          "message": "Merge branch 'main' into ma/fix-zero-expression-check",
          "committedDate": "2024-07-24T06:50:05Z",
          "author": {
            "name": "Mike Alhayek",
            "email": "mike@crestapps.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "These ones don't need to be changed, they would return `false` if `metadata` is null. The only ambiguity is with `x?.Length == 0`, `x?.Any() == false` where you (usually) want to check if it's `null` or has no elements. ",
              "createdAt": "2024-07-24T06:19:28Z",
              "path": "src/Build/Definition/Project.cs",
              "diffHunk": "@@ -3441,7 +3441,7 @@ public bool IsSuitableExistingItemXml(ProjectItemElement candidateExistingItemXm\n                     return false;\n                 }\n \n-                if ((metadata?.Any() == true) || candidateExistingItemXml.Count > 0)\n+                if ((metadata != null && metadata.Any()) || candidateExistingItemXml.Count > 0)",
              "author": {
                "login": "sebastienros"
              }
            },
            {
              "body": "done",
              "createdAt": "2024-07-24T06:48:31Z",
              "path": "src/Build/Definition/Project.cs",
              "diffHunk": "@@ -3441,7 +3441,7 @@ public bool IsSuitableExistingItemXml(ProjectItemElement candidateExistingItemXm\n                     return false;\n                 }\n \n-                if ((metadata?.Any() == true) || candidateExistingItemXml.Count > 0)\n+                if ((metadata != null && metadata.Any()) || candidateExistingItemXml.Count > 0)",
              "author": {
                "login": "MikeAlhayek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This is a behavior change. Before it was \"if it is empty but not null\"; now null and empty are treated the same. Many of these were that way, and that's why at least some of the tests are failing.",
              "createdAt": "2024-07-25T14:54:32Z",
              "path": "src/Build/Definition/ToolsetConfigurationReader.cs",
              "diffHunk": "@@ -90,7 +90,7 @@ protected override IEnumerable<ToolsetPropertyDefinition> ToolsVersions\n                             toolset.ElementInformation.LineNumber,\n                             0);\n \n-                        if (toolset.toolsVersion?.Length == 0)\n+                        if (toolset.toolsVersion == null || toolset.toolsVersion.Length == 0)",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}