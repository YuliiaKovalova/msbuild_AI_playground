{
  "number": 9836,
  "title": "Use templates-official for production pipeline + @self",
  "body": "## Context\r\nWe need to adapt official templates for production pipelines\r\n\r\n## Note\r\nThere is a warning on sbom generation - it will be resolved on the servicing side in scope of \r\nhttps://github.com/dotnet/arcade/issues/14560\r\n\r\n## Testing \r\nYes, by using exp branch: https://tfsprodwus2su6.visualstudio.com/A011b8bdf-6d56-4f87-be0d-0092136884d9/DevDiv/_build/results?buildId=9236625&view=results",
  "state": "MERGED",
  "createdAt": "2024-03-07T10:03:40Z",
  "updatedAt": "2024-03-14T11:25:11Z",
  "closedAt": "2024-03-14T11:25:11Z",
  "mergedAt": "2024-03-14T11:25:11Z",
  "additions": 279,
  "deletions": 260,
  "changedFiles": 1,
  "headRefName": "dev/ykovalova/onboard_1es_template",
  "isDraft": false,
  "author": {
    "login": "YuliiaKovalova"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "540420c674005cd6ea1cabfc06989432b007d7db",
          "message": "use templates-official for production pipeline + @self",
          "committedDate": "2024-03-07T10:03:05Z",
          "author": {
            "name": "Yuliia Kovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "10f300e939c5b2ff89d0a98308615c7003330339",
          "message": "Adapt 1ES Pipeline Templates",
          "committedDate": "2024-03-13T09:44:28Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6a797861f7f6c014eef77229e5488a856aedc54a",
          "message": "remove conditions for PRs",
          "committedDate": "2024-03-13T10:50:17Z",
          "author": {
            "name": "Yuliia Kovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "6e4bf86fa74359f12c9a09add14aeeb52f090f95",
          "message": "remove pull request condition",
          "committedDate": "2024-03-13T11:03:30Z",
          "author": {
            "name": "Yuliia Kovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "23e53147e793616e1c900174f050423fcc7748ea",
          "message": "update to 1ESPT-Ubuntu22.04\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-03-14T09:41:54Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald could you invite someone from 1es team for reviewing it? Thank you!",
        "createdAt": "2024-03-13T15:33:01Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Maybe worth considering bumping this (so we can forget about it for even longer)\r\n\r\n```suggestion\r\n                image: 1ESPT-Ubuntu22.04\r\n```\r\n\r\n(but certainly not blocking)",
              "createdAt": "2024-03-13T16:19:09Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -37,266 +37,285 @@ variables:\n     value: true\n   - name: Codeql.Enabled\n     value: true\n-  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:\n-    - group: DotNet-MSBuild-SDLValidation-Params\n-\n-stages:\n-- stage: build\n-  displayName: Build\n-\n-  jobs:\n-  - ${{ if and( ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:\n-    # The localization setup for release/ branches. Note difference in LclPackageId. main branch is handled separately below.\n-    # Used for vs17.2, vs17.4, vs17.6 etc. branches only.\n-    # When the branch is setup for localization (the localization ticket needs to be created - https://aka.ms/ceChangeLocConfig, requesting change from one release branch to another),\n-    #  set 'EnableReleaseOneLocBuild' to true.\n-    - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/vs') }}:\n-      - template: /eng/common/templates/job/onelocbuild.yml\n-        parameters:\n-          MirrorRepo: 'msbuild'\n-          LclSource: lclFilesfromPackage\n-          LclPackageId: 'LCL-JUNO-PROD-MSBUILDREL'\n-          MirrorBranch: ${{ replace(variables['Build.SourceBranch'], 'refs/heads/', '') }}\n-          JobNameSuffix: '_release'\n-          condition: ${{ variables.EnableReleaseOneLocBuild }}\n-    # The localization setup for main branch. Note difference in package ID. Should not be used with release/ branches.\n-    - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:\n-      - template: /eng/common/templates/job/onelocbuild.yml\n-        parameters:\n-          MirrorRepo: 'msbuild'\n-          LclSource: lclFilesfromPackage\n-          LclPackageId: 'LCL-JUNO-PROD-MSBUILD'\n-          MirrorBranch: 'main'\n-          JobNameSuffix: '_main'\n-          condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n-\n-  - job: Windows_NT\n+  - group: DotNet-MSBuild-SDLValidation-Params\n+\n+resources:\n+  repositories:\n+  - repository: 1ESPipelineTemplates\n+    type: git\n+    name: 1ESPipelineTemplates/1ESPipelineTemplates\n+\n+extends:\n+  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates\n+  parameters:\n     pool:\n       name: VSEngSS-MicroBuild2022-1ES\n-      demands:\n-      - agent.os -equals Windows_NT\n-\n-    timeoutInMinutes: 180\n-\n-    variables:\n-    - group: Publish-Build-Assets\n-    - name: TeamName\n-      value: MSBuild\n-    - name: VisualStudio.MajorVersion\n-      value: 17\n-    - name: VisualStudio.ChannelName\n-      value: 'int.main'\n-    - name: VisualStudio.DropName\n-      value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)\n-\n-    steps:\n-    - task: NuGetToolInstaller@1\n-      displayName: 'Install NuGet.exe'\n-\n-    - task: NuGetCommand@2\n-      displayName: Restore internal tools\n-      inputs:\n-        command: restore\n-        feedsToUse: config\n-        restoreSolution: 'eng\\common\\internal\\Tools.csproj'\n-        nugetConfigPath: 'NuGet.config'\n-        restoreDirectory: '$(Build.SourcesDirectory)\\.packages'\n-\n-    - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n-      inputs:\n-        signType: $(SignType)\n-        zipSources: false\n-      condition: and(succeeded(), in(variables['SignType'], 'test', 'real'))\n-\n-    - task: MicroBuildOptProfPlugin@6\n-      inputs:\n-        ProfilingInputsDropName: '$(VisualStudio.DropName)'\n-        ShouldSkipOptimize: true\n-        AccessToken: '$(System.AccessToken)'\n-        feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'\n-      displayName: 'Install OptProf Plugin'\n-\n-    # Required by MicroBuildBuildVSBootstrapper\n-    - task: MicroBuildSwixPlugin@4\n-      inputs:\n-        dropName: $(VisualStudio.DropName)\n-\n-    - script: eng/CIBuild.cmd\n-                -configuration $(BuildConfiguration)\n-                -officialBuildId $(Build.BuildNumber)\n-                -officialSkipApplyOptimizationData $(SkipApplyOptimizationData)\n-                /p:RepositoryName=$(Build.Repository.Name)\n-                /p:VisualStudioIbcSourceBranchName=$(SourceBranch)\n-                /p:VisualStudioDropAccessToken=$(System.AccessToken)\n-                /p:VisualStudioDropName=$(VisualStudio.DropName)\n-                /p:DotNetSignType=$(SignType)\n-                /p:TeamName=MSBuild\n-                /p:DotNetPublishUsingPipelines=true\n-                /p:VisualStudioIbcDrop=$(OptProfDrop)\n-                /p:GenerateSbom=true\n+      os: windows\n+\n+    stages:\n+    - stage: build\n       displayName: Build\n-      condition: succeeded()\n-\n-    # Required by Microsoft policy\n-    - template: eng\\common\\templates\\steps\\generate-sbom.yml\n-\n-    # Publish OptProf configuration files\n-    - task: ms-vscs-artifact.build-tasks.artifactDropTask-1.artifactDropTask@0\n-      inputs:\n-        dropServiceURI: 'https://devdiv.artifacts.visualstudio.com'\n-        buildNumber: 'ProfilingInputs/DevDiv/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)'\n-        sourcePath: '$(Build.SourcesDirectory)\\artifacts\\OptProf\\$(BuildConfiguration)\\Data'\n-        toLowerCase: false\n-        usePat: true\n-      displayName: 'OptProf - Publish to Artifact Services - ProfilingInputs'\n-      condition: succeeded()\n-\n-    # Build VS bootstrapper\n-    # Generates $(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n-    - task: MicroBuildBuildVSBootstrapper@3\n-      inputs:\n-        vsMajorVersion: $(VisualStudio.MajorVersion)\n-        channelName: $(VisualStudio.ChannelName)\n-        manifests: $(VisualStudio.SetupManifestList)\n-        outputFolder: '$(Build.SourcesDirectory)\\artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n-        bootstrapperCoreVersion:\n-      displayName: 'OptProf - Build VS bootstrapper'\n-      condition: succeeded()\n-\n-    # Publish run settings\n-    - task: PowerShell@2\n-      inputs:\n-        filePath: eng\\common\\sdk-task.ps1\n-        arguments: -configuration $(BuildConfiguration)\n-                  -task VisualStudio.BuildIbcTrainingSettings\n-                  /p:VisualStudioDropName=$(VisualStudio.DropName)\n-                  /p:BootstrapperInfoPath=$(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n-                  /p:VisualStudioIbcTrainingSettingsPath=$(Build.SourcesDirectory)\\eng\\config\\OptProf.runsettings\n-      displayName: 'OptProf - Build IBC training settings'\n-      condition: succeeded()\n-\n-    # Publish bootstrapper info\n-    - task: PublishBuildArtifacts@1\n-      inputs:\n-        PathtoPublish: $(Build.StagingDirectory)\\MicroBuild\\Output\n-        ArtifactName: MicroBuildOutputs\n-        ArtifactType: Container\n-      displayName: 'OptProf - Publish Artifact: MicroBuildOutputs'\n-      condition: succeeded()\n-\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: logs'\n-      inputs:\n-        PathtoPublish: 'artifacts\\log\\$(BuildConfiguration)'\n-        ArtifactName: logs\n-      condition: succeededOrFailed()\n-\n-    - task: PublishPipelineArtifact@1\n-      displayName: 'Publish Artifact: bin'\n-      inputs:\n-        path: 'artifacts\\bin'\n-        artifactName: bin\n-      condition: succeededOrFailed()\n-\n-    # Publishes setup VSIXes to a drop.\n-    # Note: The insertion tool looks for the display name of this task in the logs.\n-    - task: MicroBuildUploadVstsDropFolder@2\n-      displayName: Upload VSTS Drop\n-      inputs:\n-        DropName: $(VisualStudio.DropName)\n-        DropFolder: 'artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n-        DropRetentionDays: '30' # extended by insertion + VS release\n-        AccessToken: '$(System.AccessToken)'\n-        DropServiceUri: 'https://devdiv.artifacts.visualstudio.com'\n-        VSDropServiceUri: 'https://vsdrop.corp.microsoft.com/file/v1'\n-      condition: succeeded()\n-\n-    # Publish an artifact that the RoslynInsertionTool is able to find by its name.\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: VSSetup'\n-      inputs:\n-        PathtoPublish: 'artifacts\\VSSetup\\$(BuildConfiguration)'\n-        ArtifactName: VSSetup\n-      condition: succeeded()\n-\n-    # Archive NuGet packages to DevOps.\n-    # Publish our NuPkgs as an artifact. The name of this artifact must be PackageArtifacts as the\n-    # arcade templates depend on the name.\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: packages'\n-      inputs:\n-        PathtoPublish: 'artifacts\\packages\\$(BuildConfiguration)'\n-        ArtifactName: PackageArtifacts\n-      condition: succeeded()\n-\n-    # Publish \"IntelliSense\" XSD files to their own artifact\n-    # so it can be consumed by the insertion-to-VS job\n-    - task: PublishPipelineArtifact@1\n-      displayName: 'Publish Artifact: xsd'\n-      inputs:\n-        path: 'artifacts\\xsd'\n-        artifactName: xsd\n-      condition: succeeded()\n-\n-    # Publish Asset Manifests for Build Asset Registry job\n-    - task: PublishBuildArtifacts@1\n-      displayName: Publish Asset Manifests\n-      inputs:\n-        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(BuildConfiguration)/AssetManifest'\n-        ArtifactName: AssetManifests\n-      condition: succeeded()\n-\n-    # Tag the build at the very end when we know it's been successful.\n-    - task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0\n-      displayName: Tag build as ready for optimization training\n-      inputs:\n-        tags: 'ready-for-training'\n-      condition: succeeded()\n-\n-    - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1\n-      displayName: Execute cleanup tasks\n-      condition: succeededOrFailed()\n-\n-    - template: /eng/common/templates/steps/component-governance.yml\n+\n+      jobs:\n+      # The localization setup for release/ branches. Note difference in LclPackageId. main branch is handled separately below.\n+      # Used for vs17.2, vs17.4, vs17.6 etc. branches only.\n+      # When the branch is setup for localization (the localization ticket needs to be created - https://aka.ms/ceChangeLocConfig, requesting change from one release branch to another),\n+      #  set 'EnableReleaseOneLocBuild' to true.\n+      - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/vs') }}:\n+        - template: /eng/common/templates-official/job/onelocbuild.yml@self\n+          parameters:\n+            MirrorRepo: 'msbuild'\n+            LclSource: lclFilesfromPackage\n+            LclPackageId: 'LCL-JUNO-PROD-MSBUILDREL'\n+            MirrorBranch: ${{ replace(variables['Build.SourceBranch'], 'refs/heads/', '') }}\n+            JobNameSuffix: '_release'\n+            condition: ${{ variables.EnableReleaseOneLocBuild }}\n+      # The localization setup for main branch. Note difference in package ID. Should not be used with release/ branches.\n+      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:\n+        - template: /eng/common/templates-official/job/onelocbuild.yml@self\n+          parameters:\n+            MirrorRepo: 'msbuild'\n+            LclSource: lclFilesfromPackage\n+            LclPackageId: 'LCL-JUNO-PROD-MSBUILD'\n+            MirrorBranch: 'main'\n+            JobNameSuffix: '_main'\n+            condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n+\n+      - job: Windows_NT\n+        pool:\n+          name: VSEngSS-MicroBuild2022-1ES\n+          demands:\n+          - agent.os -equals Windows_NT\n+\n+        timeoutInMinutes: 180\n+\n+        variables:\n+        - group: Publish-Build-Assets\n+        - name: TeamName\n+          value: MSBuild\n+        - name: VisualStudio.MajorVersion\n+          value: 17\n+        - name: VisualStudio.ChannelName\n+          value: 'int.main'\n+        - name: VisualStudio.DropName\n+          value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)\n+\n+        steps:\n+        - task: NuGetToolInstaller@1\n+          displayName: 'Install NuGet.exe'\n+\n+        - task: NuGetCommand@2\n+          displayName: Restore internal tools\n+          inputs:\n+            command: restore\n+            feedsToUse: config\n+            restoreSolution: 'eng\\common\\internal\\Tools.csproj'\n+            nugetConfigPath: 'NuGet.config'\n+            restoreDirectory: '$(Build.SourcesDirectory)\\.packages'\n+\n+        - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n+          inputs:\n+            signType: $(SignType)\n+            zipSources: false\n+          condition: and(succeeded(), in(variables['SignType'], 'test', 'real'))\n+\n+        - task: MicroBuildOptProfPlugin@6\n+          inputs:\n+            ProfilingInputsDropName: '$(VisualStudio.DropName)'\n+            ShouldSkipOptimize: true\n+            AccessToken: '$(System.AccessToken)'\n+            feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'\n+          displayName: 'Install OptProf Plugin'\n+\n+        # Required by MicroBuildBuildVSBootstrapper\n+        - task: MicroBuildSwixPlugin@4\n+          inputs:\n+            dropName: $(VisualStudio.DropName)\n+\n+        - script: eng/CIBuild.cmd\n+                    -configuration $(BuildConfiguration)\n+                    -officialBuildId $(Build.BuildNumber)\n+                    -officialSkipApplyOptimizationData $(SkipApplyOptimizationData)\n+                    /p:RepositoryName=$(Build.Repository.Name)\n+                    /p:VisualStudioIbcSourceBranchName=$(SourceBranch)\n+                    /p:VisualStudioDropAccessToken=$(System.AccessToken)\n+                    /p:VisualStudioDropName=$(VisualStudio.DropName)\n+                    /p:DotNetSignType=$(SignType)\n+                    /p:TeamName=MSBuild\n+                    /p:DotNetPublishUsingPipelines=true\n+                    /p:VisualStudioIbcDrop=$(OptProfDrop)\n+                    /p:GenerateSbom=true\n+          displayName: Build\n+          condition: succeeded()\n+\n+        # Required by Microsoft policy\n+        - template: eng\\common\\templates-official\\steps\\generate-sbom.yml@self\n+\n+        # Publish OptProf configuration files\n+        - task: ms-vscs-artifact.build-tasks.artifactDropTask-1.artifactDropTask@0\n+          inputs:\n+            dropServiceURI: 'https://devdiv.artifacts.visualstudio.com'\n+            buildNumber: 'ProfilingInputs/DevDiv/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)'\n+            sourcePath: '$(Build.SourcesDirectory)\\artifacts\\OptProf\\$(BuildConfiguration)\\Data'\n+            toLowerCase: false\n+            usePat: true\n+          displayName: 'OptProf - Publish to Artifact Services - ProfilingInputs'\n+          condition: succeeded()\n+\n+        # Build VS bootstrapper\n+        # Generates $(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n+        - task: MicroBuildBuildVSBootstrapper@3\n+          inputs:\n+            vsMajorVersion: $(VisualStudio.MajorVersion)\n+            channelName: $(VisualStudio.ChannelName)\n+            manifests: $(VisualStudio.SetupManifestList)\n+            outputFolder: '$(Build.SourcesDirectory)\\artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n+            bootstrapperCoreVersion:\n+          displayName: 'OptProf - Build VS bootstrapper'\n+          condition: succeeded()\n+\n+        # Publish run settings\n+        - task: PowerShell@2\n+          inputs:\n+            filePath: eng\\common\\sdk-task.ps1\n+            arguments: -configuration $(BuildConfiguration)\n+                      -task VisualStudio.BuildIbcTrainingSettings\n+                      /p:VisualStudioDropName=$(VisualStudio.DropName)\n+                      /p:BootstrapperInfoPath=$(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n+                      /p:VisualStudioIbcTrainingSettingsPath=$(Build.SourcesDirectory)\\eng\\config\\OptProf.runsettings\n+          displayName: 'OptProf - Build IBC training settings'\n+          condition: succeeded()\n+\n+        # Publish bootstrapper info\n+        - task: 1ES.PublishBuildArtifacts@1\n+          inputs:\n+            PathtoPublish: $(Build.StagingDirectory)\\MicroBuild\\Output\n+            ArtifactName: MicroBuildOutputs\n+            ArtifactType: Container\n+          displayName: 'OptProf - Publish Artifact: MicroBuildOutputs'\n+          condition: succeeded()\n+\n+        - task: 1ES.PublishBuildArtifacts@1\n+          displayName: 'Publish Artifact: logs'\n+          inputs:\n+            PathtoPublish: 'artifacts\\log\\$(BuildConfiguration)'\n+            ArtifactName: logs\n+          condition: succeededOrFailed()\n+\n+        - task: 1ES.PublishPipelineArtifact@1\n+          displayName: 'Publish Artifact: bin'\n+          inputs:\n+            path: 'artifacts\\bin'\n+            artifactName: bin\n+          condition: succeededOrFailed()\n+\n+        # Publishes setup VSIXes to a drop.\n+        # Note: The insertion tool looks for the display name of this task in the logs.\n+        - task: 1ES.MicroBuildVstsDrop@1\n+          displayName: Upload VSTS Drop\n+          inputs:\n+            dropName: $(VisualStudio.DropName)\n+            dropFolder: 'artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n+            dropRetentionDays: '30' # extended by insertion + VS release\n+            accessToken: '$(System.AccessToken)'\n+            dropServiceUri: 'https://devdiv.artifacts.visualstudio.com'\n+            vsDropServiceUri: 'https://vsdrop.corp.microsoft.com/file/v1'\n+          condition: succeeded()\n+\n+        # Publish an artifact that the RoslynInsertionTool is able to find by its name.\n+        - task: 1ES.PublishBuildArtifacts@1\n+          displayName: 'Publish Artifact: VSSetup'\n+          inputs:\n+            PathtoPublish: 'artifacts\\VSSetup\\$(BuildConfiguration)'\n+            ArtifactName: VSSetup\n+          condition: succeeded()\n+\n+        # Archive NuGet packages to DevOps.\n+        # Publish our NuPkgs as an artifact. The name of this artifact must be PackageArtifacts as the\n+        # arcade templates depend on the name.\n+        - task: 1ES.PublishBuildArtifacts@1\n+          displayName: 'Publish Artifact: packages'\n+          inputs:\n+            PathtoPublish: 'artifacts\\packages\\$(BuildConfiguration)'\n+            ArtifactName: PackageArtifacts\n+          condition: succeeded()\n+\n+        # Publish \"IntelliSense\" XSD files to their own artifact\n+        # so it can be consumed by the insertion-to-VS job\n+        - task: 1ES.PublishPipelineArtifact@1\n+          displayName: 'Publish Artifact: xsd'\n+          inputs:\n+            path: 'artifacts\\xsd'\n+            artifactName: xsd\n+          condition: succeeded()\n+\n+        # Publish Asset Manifests for Build Asset Registry job\n+        - task: 1ES.PublishBuildArtifacts@1\n+          displayName: Publish Asset Manifests\n+          inputs:\n+            PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(BuildConfiguration)/AssetManifest'\n+            ArtifactName: AssetManifests\n+          condition: succeeded()\n+\n+        # Tag the build at the very end when we know it's been successful.\n+        - task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0\n+          displayName: Tag build as ready for optimization training\n+          inputs:\n+            tags: 'ready-for-training'\n+          condition: succeeded()\n+\n+        - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1\n+          displayName: Execute cleanup tasks\n+          condition: succeededOrFailed()\n+\n+        - template: /eng/common/templates-official/steps/component-governance.yml@self\n+          parameters:\n+            ${{ if or(startsWith(variables['Build.SourceBranch'], 'refs/heads/vs'), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:\n+              disableComponentGovernance: false\n+            ${{ else }}:\n+              disableComponentGovernance: true\n+\n+      - template: /eng/common/templates-official/jobs/source-build.yml@self\n+        parameters:\n+          platforms:\n+            - name: Managed\n+              pool:\n+                name: AzurePipelines-EO\n+                image: 1ESPT-Ubuntu20.04",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}