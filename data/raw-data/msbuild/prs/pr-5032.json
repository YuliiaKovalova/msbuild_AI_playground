{
  "number": 5032,
  "title": "Implement Command-line option for displaying targets",
  "body": "This feature request was lying around for a few years, I'm submitting a simple implementation for review and further discussion. As @AndyGerlicher kindly pointed out the already existing `preprocess` option, it seemed logical to take the same approach for this one.\r\n\r\nSample output for a C# project:\r\n```\r\nMicrosoft (R) Build Engine version 16.5.0-dev-20056-01+fb441875f for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nCreateManifestResourceNames\r\nResolveCodeAnalysisRuleSet\r\nXamlPreCompile\r\nShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies\r\n_BeforeVBCSCoreCompile\r\n[.... 200+ lines omitted ....]\r\nXsdResolveReferencePath\r\nCleanXsdCodeGen\r\n_SetTargetFrameworkMonikerAttribute\r\nEnsureNuGetPackageBuildImports\r\n```\r\n\r\nFixes #33 \r\n",
  "state": "MERGED",
  "createdAt": "2020-01-06T12:06:32Z",
  "updatedAt": "2023-01-11T22:14:10Z",
  "closedAt": "2020-02-18T21:42:21Z",
  "mergedAt": "2020-02-18T21:42:20Z",
  "additions": 548,
  "deletions": 2,
  "changedFiles": 18,
  "headRefName": "33-targets-command-line",
  "isDraft": false,
  "author": {
    "login": "szaliszali"
  },
  "milestone": {
    "title": "MSBuild 16.6 Preview1"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Feature Request"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "7ee3d7a42ccc8f74974b85e045901f2a5472e101",
          "message": "-targets switch (based on preprocess)",
          "committedDate": "2020-01-06T11:01:24Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ebea32f381c1ac6b846b64aa2e2f162e5554b403",
          "message": "split else to two ifs",
          "committedDate": "2020-01-06T11:09:16Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "587b84dd8b9d4e8f2fd8322e78ce79af300cd8ce",
          "message": "targets switch WIP (calls preprocess for now)\n\n- TODO do we need new MSB error code or edit existing message?",
          "committedDate": "2020-01-06T11:09:18Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3797c648b603df7f1ffe4b373019fff1ad7131de",
          "message": "print targets",
          "committedDate": "2020-01-06T11:09:19Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d38368671c8cbce1fcc6780c20cec57eb923da72",
          "message": "update autogenerated localization files",
          "committedDate": "2020-01-06T11:09:21Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "825069e3c91712451efa85caba76fb75b7524e8b",
          "message": "help for -targets",
          "committedDate": "2020-01-06T11:50:14Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fb441875fb8837eac5fc73e7974c098d84be5c72",
          "message": "update autogenerated localization files",
          "committedDate": "2020-01-06T11:50:24Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2c9ec9e1f90655b03a88bb3ca67527bd0f445eb8",
          "message": "fix PR comment: error message and number",
          "committedDate": "2020-01-09T11:12:56Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5f2bace0e5f75d90ed026d7103556b84797ddbfe",
          "message": "update autogenerated localization files",
          "committedDate": "2020-01-09T11:13:15Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ea11ce4b7380c9b7c77ab4bdc3f50c52cf7f959c",
          "message": "convert duplicated test code to parametrized test",
          "committedDate": "2020-01-09T11:57:50Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "18241d5dfd0eec07dff03fc241124d8c337c485f",
          "message": "wrap parameters",
          "committedDate": "2020-01-09T11:58:57Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e89762439d8ca4039f0e9e0d63ba5c27274e0b60",
          "message": "fix PR comment: inline out vars",
          "committedDate": "2020-01-09T11:59:30Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "85b4fe81cf7a97a87e4a1aee40d0223a27c0731c",
          "message": "fix PR comment: use Shouldly",
          "committedDate": "2020-01-09T12:01:19Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4ce6130ea40c3a3be06ce0d525e337e532dae55b",
          "message": "also assert emptyParametersAllowed\n\n- it was missing from original test",
          "committedDate": "2020-01-09T12:11:13Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a7d46bc4b5b09a7943a369cd60e6e34706e80f73",
          "message": "fix PR comment: add test for failure and filename",
          "committedDate": "2020-01-09T12:42:37Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "75049d6e9fff8a800cf3622c9a5e92b61749354a",
          "message": "Revert \"fix PR comment: add test for failure and filename\"\n\nThis reverts commit a7d46bc4b5b09a7943a369cd60e6e34706e80f73.",
          "committedDate": "2020-02-02T16:55:00Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f9d33f5a5a9c1aa3c0722ecbec1614b666f0930e",
          "message": "Revert \"also assert emptyParametersAllowed\"\n\nThis reverts commit 4ce6130ea40c3a3be06ce0d525e337e532dae55b.",
          "committedDate": "2020-02-02T16:55:53Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "123897afab138f380de795dcc861db2a7b641459",
          "message": "Revert \"fix PR comment: use Shouldly\"\n\nThis reverts commit 85b4fe81cf7a97a87e4a1aee40d0223a27c0731c.",
          "committedDate": "2020-02-02T16:56:15Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c435a1e59539752e5e58b59e6418b0e20af38c04",
          "message": "Revert \"fix PR comment: inline out vars\"\n\nThis reverts commit e89762439d8ca4039f0e9e0d63ba5c27274e0b60.",
          "committedDate": "2020-02-02T16:56:37Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1278bcbee517118d732f2b438319bfaef0275442",
          "message": "Revert \"wrap parameters\"\n\nThis reverts commit 18241d5dfd0eec07dff03fc241124d8c337c485f.",
          "committedDate": "2020-02-02T16:58:09Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "2846f5e7b5f7bd48095ec835b3574df1f85f8c21",
          "message": "Revert \"convert duplicated test code to parametrized test\"\n\nThis reverts commit ea11ce4b7380c9b7c77ab4bdc3f50c52cf7f959c.",
          "committedDate": "2020-02-02T16:58:35Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "756840f02f87680abc069c503d1c15dc2b0bef18",
          "message": "revert test code from commit \"-targets switch (based on preprocess)\"",
          "committedDate": "2020-02-02T17:02:45Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e3399be90d54ddcba600a6dbf06ba8e4cd5d0e00",
          "message": "Merge remote-tracking branch 'origin/master' into 33-targets-command-line",
          "committedDate": "2020-02-02T17:03:01Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "610a4f166604f0a4fbbd2aec2dd11fc0fb92f247",
          "message": "readd reverted targets switch tests",
          "committedDate": "2020-02-02T17:11:16Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9feb411bfd2001c4a47f17d58150022f4a88daee",
          "message": "replace call to project.PrintTargets with a copy",
          "committedDate": "2020-02-02T17:16:19Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "435ace8cd4124b615608afd246c8b0e730139465",
          "message": "remove PrintTargets from Project",
          "committedDate": "2020-02-02T17:16:37Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3a8c58585f33adef4bf8546e78bd3eaadfb34953",
          "message": "rename resource key to match message",
          "committedDate": "2020-02-02T18:37:32Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "31c5b187eb12e40e2e7092fb79cd1f3241ea20ad",
          "message": "update autogenerated localization files",
          "committedDate": "2020-02-02T18:38:12Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "26742e9c18545502930663616e1dd3001ce50e7f",
          "message": "add error handling for print targets",
          "committedDate": "2020-02-02T18:39:20Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9fec2f6be4be2e1afb31eedc388bf7caa2f5dca5",
          "message": "extract method PrintTargets",
          "committedDate": "2020-02-02T18:43:42Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3c45f7b3ce3fb4763beeb1f57a4cba85fdef9275",
          "message": "Merge remote-tracking branch 'origin/master' into 33-targets-command-line\n\n# Conflicts:\n#\tsrc/MSBuild/Resources/Strings.resx\n#\tsrc/MSBuild/Resources/xlf/Strings.cs.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.de.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.en.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.es.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.fr.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.it.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.ja.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.ko.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.pl.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.pt-BR.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.ru.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.tr.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.zh-Hans.xlf\n#\tsrc/MSBuild/Resources/xlf/Strings.zh-Hant.xlf",
          "committedDate": "2020-02-12T22:00:49Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a5f3a023fc277ac12a4b1d919585c7c185c4dc3f",
          "message": "preserve stack trace for easier debug",
          "committedDate": "2020-02-12T22:02:03Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      },
      {
        "commit": {
          "oid": "af52500e435a9461b7343cfb74a5352d9885a1e3",
          "message": "write targets in a loop",
          "committedDate": "2020-02-12T22:04:11Z",
          "author": {
            "name": "Szali Szali",
            "email": "szalicil@gmail.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/signed)](https://cla.dotnetfoundation.org/microsoft/msbuild?pullRequest=5032) <br/>All CLA requirements met.",
        "createdAt": "2020-01-06T12:06:46Z",
        "author": {
          "login": "dnfclas"
        }
      },
      {
        "body": ">_BeforeVBCSCoreCompile\r\n[.... 200+ lines omitted ....]\r\nXsdResolveReferencePath\r\n\r\nI doubt this would actually be practically useful to anyone.  Since MSBuild does not have any information hiding capabilities (you get ALL the hundreds of meaningless targets, not just the entry graph wide operations supported by the current mix of \"SDKs\"), and since MSBuild does not differentiate the graph wide entry targets (Build, Clean, Rebuild, Test, Restore, Pack) in any way from the implementation targets, this feature will just lead to information overload. It would interesting though, if we introduced graph wide entry targets as first class entities in the language.\r\n\r\nI'd be quite curious to learn of a practical usage to this.",
        "createdAt": "2020-01-14T19:25:00Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "One possible use I thought of was if you know roughly what you need but don't know exactly what the target is called. This would make it easier to find the exact target. You can also try to add custom targets, and if they don't show up, you know you didn't add them properly.\r\n\r\nThe original issue has 30 upvotes and has gotten some activity within the past 6 months, so although it's an old issue, I think it's worth taking this pr.",
        "createdAt": "2020-01-14T20:03:45Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "One thing I worry about on this feature is it might give the implication of a target contract. Looking at the other commands provided as examples, `grunt --help` or `rake --tasks` to me seem to imply those are operational things that will occur or are available to be used. In MSBuild, many of the targets are internal implementations and should really be considered \"private\" and not exposed like this. The language really isn't setup as a discoverable catalog of functions. Maybe one mitigation would be to filter out all targets starting with `_`? It's largely convention based, but it would help some with that.\r\n\r\nThe other is this is pretty trivial to get as a one-off. It seems surprising to me that this would be common enough to go into MSBuild proper. Again unless it's more of a let's see what's available to hook into which is my original concern.",
        "createdAt": "2020-01-14T20:17:02Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "I'm happy to see that the PR sparked a bit of conversation [also, a bit less happy about the merge conflict]. I'll update as soon as I have a bit of free time.\r\n\r\nAbout usability of the output: I also think that dumping 200 targets is not the most useful thing we could do. For now, I can consider this feature more like a debugging tool than quick help for the confused end-user. Also, would not recommend skipping targets based on naming convention.",
        "createdAt": "2020-01-22T12:55:22Z",
        "author": {
          "login": "szaliszali"
        }
      },
      {
        "body": "Short explanation for the additional error handler: during testing I experienced several error modes:\r\n- missing project file: prints error and halts before doing any work\r\n![image](https://user-images.githubusercontent.com/1851369/73613724-ad4e0980-45f8-11ea-9836-f290f97da08d.png)\r\n- fatal error during project file loading (e.g. a random text file as project): finds project file and starts loading, then prints error (in red) and exits\r\n![image](https://user-images.githubusercontent.com/1851369/73613709-914a6800-45f8-11ea-8a0b-c6de655f2043.png)\r\n- valid project with something broken during processing build files (e.g. SDK resolver is missing from msbuild directory): in this case, I could not figure out why the error message is printed in one case and not in the other\r\n    - error message (in red) was printed\r\n    ![image](https://user-images.githubusercontent.com/1851369/73613745-e2f2f280-45f8-11ea-9b74-88b69c504011.png)\r\n    - no error message was printed and this could confuse users what is (not) happening, this is why I decided to add the extra error handler\r\n    ![image](https://user-images.githubusercontent.com/1851369/73613836-d4f1a180-45f9-11ea-9ead-0d7a4df74898.png)\r\n\r\nI chose this simple way of displaying the message instead of real loggers because I found the logger setup and logging too complicated for this simple task",
        "createdAt": "2020-02-02T19:36:43Z",
        "author": {
          "login": "szaliszali"
        }
      },
      {
        "body": "Thanks @szaliszali! This should go out with Visual Studio 16.6 preview 1 (at some point in the future).",
        "createdAt": "2020-02-18T21:42:55Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Is it available in VS 2019?\r\nI tried, it doesn't seem to be supported.",
        "createdAt": "2023-01-11T20:36:06Z",
        "author": {
          "login": "videoguy"
        }
      },
      {
        "body": "It should be. What exact version of VS 2019 are you using? 16.11?",
        "createdAt": "2023-01-11T20:42:43Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "VS 2019 16.9.25 build.\r\nJust started an update of VS. Let me check once the update completes.",
        "createdAt": "2023-01-11T21:02:34Z",
        "author": {
          "login": "videoguy"
        }
      },
      {
        "body": "After the update, it is working. I am wondering if there is something for solution file (.sln) as well.\r\n",
        "createdAt": "2023-01-11T21:46:16Z",
        "author": {
          "login": "videoguy"
        }
      },
      {
        "body": "@videoguy not today; that's tracked by dotnet/msbuild#7697.",
        "createdAt": "2023-01-11T22:14:09Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Please change loadProjectReadOnly (10 lines down) to be !preprocessOnly && !targetsOnly",
              "createdAt": "2020-01-08T18:00:50Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -1056,6 +1060,7 @@ string outputResultsCache\n                 ToolsetDefinitionLocations toolsetDefinitionLocations = ToolsetDefinitionLocations.Default;\n \n                 bool preprocessOnly = preprocessWriter != null && !FileUtilities.IsSolutionFilename(projectFile);\n+                bool targetsOnly = targetsWriter != null && !FileUtilities.IsSolutionFilename(projectFile);",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "This does not seem logical for me at first glance, because printing the targets should be a read-only operation.\r\n\r\nAlso, it looks like the setting will be ignored anyway (see [this comment](https://github.com/Microsoft/msbuild/blob/08d1cb5532d98dd4b9f2f4ecdb7c9c7a037aed1c/src/Build/Xml/XmlReaderExtension.cs#L83-L85)).",
              "createdAt": "2020-01-09T12:47:48Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -1056,6 +1060,7 @@ string outputResultsCache\n                 ToolsetDefinitionLocations toolsetDefinitionLocations = ToolsetDefinitionLocations.Default;\n \n                 bool preprocessOnly = preprocessWriter != null && !FileUtilities.IsSolutionFilename(projectFile);\n+                bool targetsOnly = targetsWriter != null && !FileUtilities.IsSolutionFilename(projectFile);",
              "author": {
                "login": "szaliszali"
              }
            },
            {
              "body": "I thought I was suggesting it should be read-only, but I might have gotten it flipped. @rainersigwald, do you know better? Otherwise, this looks good to me.",
              "createdAt": "2020-01-09T21:55:44Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -1056,6 +1060,7 @@ string outputResultsCache\n                 ToolsetDefinitionLocations toolsetDefinitionLocations = ToolsetDefinitionLocations.Default;\n \n                 bool preprocessOnly = preprocessWriter != null && !FileUtilities.IsSolutionFilename(projectFile);\n+                bool targetsOnly = targetsWriter != null && !FileUtilities.IsSolutionFilename(projectFile);",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\nWould you mind switching to Shouldly for these?",
              "createdAt": "2020-01-08T18:59:57Z",
              "path": "src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs",
              "diffHunk": "@@ -731,6 +731,31 @@ public void PreprocessSwitchIdentificationTests()\n             Assert.True(unquoteParameters);\n         }\n \n+        [Fact]\n+        public void TargetsSwitchIdentificationTests()\n+        {\n+            CommandLineSwitches.ParameterizedSwitch parameterizedSwitch;\n+            string duplicateSwitchErrorMessage;\n+            bool multipleParametersAllowed;\n+            string missingParametersErrorMessage;\n+            bool unquoteParameters;\n+            bool emptyParametersAllowed;\n+\n+            Assert.True(CommandLineSwitches.IsParameterizedSwitch(\"targets\", out parameterizedSwitch, out duplicateSwitchErrorMessage, out multipleParametersAllowed, out missingParametersErrorMessage, out unquoteParameters, out emptyParametersAllowed));",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "committed",
              "createdAt": "2020-01-09T12:48:01Z",
              "path": "src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs",
              "diffHunk": "@@ -731,6 +731,31 @@ public void PreprocessSwitchIdentificationTests()\n             Assert.True(unquoteParameters);\n         }\n \n+        [Fact]\n+        public void TargetsSwitchIdentificationTests()\n+        {\n+            CommandLineSwitches.ParameterizedSwitch parameterizedSwitch;\n+            string duplicateSwitchErrorMessage;\n+            bool multipleParametersAllowed;\n+            string missingParametersErrorMessage;\n+            bool unquoteParameters;\n+            bool emptyParametersAllowed;\n+\n+            Assert.True(CommandLineSwitches.IsParameterizedSwitch(\"targets\", out parameterizedSwitch, out duplicateSwitchErrorMessage, out multipleParametersAllowed, out missingParametersErrorMessage, out unquoteParameters, out emptyParametersAllowed));",
              "author": {
                "login": "szaliszali"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\nYou can inline these variable declarations such as `out string duplicateSwitchErrorMessage` below",
              "createdAt": "2020-01-08T19:02:20Z",
              "path": "src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs",
              "diffHunk": "@@ -731,6 +731,31 @@ public void PreprocessSwitchIdentificationTests()\n             Assert.True(unquoteParameters);\n         }\n \n+        [Fact]\n+        public void TargetsSwitchIdentificationTests()\n+        {\n+            CommandLineSwitches.ParameterizedSwitch parameterizedSwitch;\n+            string duplicateSwitchErrorMessage;",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "committed",
              "createdAt": "2020-01-09T12:48:13Z",
              "path": "src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs",
              "diffHunk": "@@ -731,6 +731,31 @@ public void PreprocessSwitchIdentificationTests()\n             Assert.True(unquoteParameters);\n         }\n \n+        [Fact]\n+        public void TargetsSwitchIdentificationTests()\n+        {\n+            CommandLineSwitches.ParameterizedSwitch parameterizedSwitch;\n+            string duplicateSwitchErrorMessage;",
              "author": {
                "login": "szaliszali"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I know you copied the style of the error for preprocessing, but I don't think that message is perfect. Would you mind changing to something simple like:\r\n`Targets could not be printed.`\r\nAlso, you reused MSB1047. Can you change the number?",
              "createdAt": "2020-01-08T19:07:42Z",
              "path": "src/MSBuild/Resources/Strings.resx",
              "diffHunk": "@@ -1154,6 +1170,10 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <value>MSBUILD : error MSB1047: File to preprocess to is not valid. {0}</value>\n     <comment>{StrBegin=\"MSBUILD : error MSB1047: \"}</comment>\n   </data>\n+  <data name=\"InvalidTargetsPath\">\n+    <value>MSBUILD : error MSB1047: File to print targets to is not valid. {0}</value>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "committed",
              "createdAt": "2020-01-09T12:48:19Z",
              "path": "src/MSBuild/Resources/Strings.resx",
              "diffHunk": "@@ -1154,6 +1170,10 @@ Copyright (C) Microsoft Corporation. All rights reserved.\n     <value>MSBUILD : error MSB1047: File to preprocess to is not valid. {0}</value>\n     <comment>{StrBegin=\"MSBUILD : error MSB1047: \"}</comment>\n   </data>\n+  <data name=\"InvalidTargetsPath\">\n+    <value>MSBUILD : error MSB1047: File to print targets to is not valid. {0}</value>",
              "author": {
                "login": "szaliszali"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Perhaps add a test for failure?",
              "createdAt": "2020-01-08T19:17:06Z",
              "path": "src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs",
              "diffHunk": "@@ -731,6 +731,31 @@ public void PreprocessSwitchIdentificationTests()\n             Assert.True(unquoteParameters);\n         }\n \n+        [Fact]",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "added one for multiple occurrences, switch parser does not validate filenames, it accepts anything (like `\"\\0\"`, for example)",
              "createdAt": "2020-01-09T12:51:06Z",
              "path": "src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs",
              "diffHunk": "@@ -731,6 +731,31 @@ public void PreprocessSwitchIdentificationTests()\n             Assert.True(unquoteParameters);\n         }\n \n+        [Fact]",
              "author": {
                "login": "szaliszali"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I'd rather have the Project API only return targets, and not deal with the extra problem domain of printing object model things to streams.",
              "createdAt": "2020-01-14T20:59:47Z",
              "path": "src/Build/Definition/Project.cs",
              "diffHunk": "@@ -1417,6 +1417,11 @@ public void SaveLogicalProject(TextWriter writer)\n             implementation.SaveLogicalProject(writer);\n         }\n \n+        public void PrintTargets(TextWriter writer)",
              "author": {
                "login": "cdmihai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n                var message = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"TargetsCouldNotBePrinted\", ex);\r\n```\r\n\r\nThis preserves the call stack which can make fixing bugs that report this error MUCH easier.",
              "createdAt": "2020-02-12T17:34:41Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -1292,6 +1303,25 @@ string outputResultsCache\n             return success;\n         }\n \n+        private static bool PrintTargets(string projectFile, string toolsVersion, Dictionary<string, string> globalProperties, TextWriter targetsWriter, ProjectCollection projectCollection)\n+        {\n+            try\n+            {\n+                Project project = projectCollection.LoadProject(projectFile, globalProperties, toolsVersion);\n+\n+                targetsWriter.WriteLine(string.Join(Environment.NewLine, project.Targets.Keys));\n+\n+                projectCollection.UnloadProject(project);\n+                return true;\n+            }\n+            catch (Exception ex)\n+            {\n+                var message = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(\"TargetsCouldNotBePrinted\", ex.Message);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Can you call this in a loop?\r\n```suggestion\r\n                foreach (string target in project.Targets.Keys)\r\n                {\r\n                    targetsWriter.WriteLine(target);\r\n                }\r\n```\r\n\r\nThat way we don't have to allocate a big string? (it's not super critical here, but it's good practice)",
              "createdAt": "2020-02-12T17:36:54Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -1292,6 +1303,25 @@ string outputResultsCache\n             return success;\n         }\n \n+        private static bool PrintTargets(string projectFile, string toolsVersion, Dictionary<string, string> globalProperties, TextWriter targetsWriter, ProjectCollection projectCollection)\n+        {\n+            try\n+            {\n+                Project project = projectCollection.LoadProject(projectFile, globalProperties, toolsVersion);\n+\n+                targetsWriter.WriteLine(string.Join(Environment.NewLine, project.Targets.Keys));",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}