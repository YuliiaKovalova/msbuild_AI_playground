{
  "number": 11353,
  "title": "Workaround for \"MSB4166: Child node \"1\" exited prematurely\"",
  "body": "Fixes #11326\r\n\r\n### Context\r\nBuildCheck can still emit some LogBuildEvent(s) after `ProjectFinishedEventArgs` was reported and entries from `_projectFileMap` were cleaned up.\r\nDue to `GetAndVerifyProjectFileFromContext` validation, these checks break the build.\r\n\r\n### Changes Made\r\nIf `BuildCheck` is enabled, `_projectFileMap` won't be cleaned up. If it brings significant perf overhead , this approach will be reconsidered.\r\n\r\n### Testing\r\nn/a\r\n",
  "state": "MERGED",
  "createdAt": "2025-01-29T09:57:28Z",
  "updatedAt": "2025-01-31T11:37:02Z",
  "closedAt": "2025-01-31T11:37:01Z",
  "mergedAt": "2025-01-31T11:37:01Z",
  "additions": 16,
  "deletions": 4,
  "changedFiles": 2,
  "headRefName": "dev/ykovalova/logging_fix",
  "isDraft": false,
  "author": {
    "login": "YuliiaKovalova"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "25bb7ed500779a4696246c712a86a3f8bc1dd80b",
          "message": "workaround ContextID {0} for project {1} ...",
          "committedDate": "2025-01-29T09:54:11Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "755e8f2996ec956893d92744b0bcd2ef6551322a",
          "message": "change prop access",
          "committedDate": "2025-01-30T11:47:52Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "8632fff105b904ea7ff350f165d1393dfae55dd5",
          "message": "Remove nullable reference type operator in LoggingService.cs",
          "committedDate": "2025-01-31T10:11:25Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "No need for this to be exposed outside of this class - private field is fine.\r\nOr we can just check `this._componentHost.BuildParameters.IsBuildCheckEnabled` in the logging method",
              "createdAt": "2025-01-30T11:40:37Z",
              "path": "src/Build/BackEnd/Components/Logging/LoggingService.cs",
              "diffHunk": "@@ -473,6 +473,11 @@ public int MaxCPUCount\n         /// </summary>\n         public bool Question { get; set; }\n \n+        /// <summary>\n+        /// Gets or sets a value if BuildCheck is enabled. The presence of this flag influences the logging logic.\n+        /// </summary>\n+        internal bool BuildCheckEnabled { get; set; }",
              "author": {
                "login": "JanKrivanek"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This `!` looks fishy (we're dereferencing `buildComponentHost.BuildParameters` above) and it builds successfully on my machine without it. Is it needed for you?",
              "createdAt": "2025-01-30T19:17:59Z",
              "path": "src/Build/BackEnd/Components/Logging/LoggingService.cs",
              "diffHunk": "@@ -871,6 +876,8 @@ public void InitializeComponent(IBuildComponentHost buildComponentHost)\n                 _serviceState = LoggingServiceState.Initialized;\n \n                 _buildEngineDataRouter = (buildComponentHost.GetComponent(BuildComponentType.BuildCheckManagerProvider) as IBuildCheckManagerProvider)?.BuildEngineDataRouter;\n+\n+                _buildCheckEnabled = buildComponentHost.BuildParameters!.IsBuildCheckEnabled;",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}