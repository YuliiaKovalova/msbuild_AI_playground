{
  "number": 6028,
  "title": "Sync comment changes from docs",
  "body": "Fixes #6027 \r\n\r\n### Context\r\nThis synchronizes changes to the docs in the docs repo and brings those changes into the /// comments.\r\n\r\n### Changes Made\r\n\r\nComments only\r\nInternal comments such as UNDONE, etc.., changed from public triple-slash comments to normal comments.\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2021-01-12T23:29:58Z",
  "updatedAt": "2021-01-14T09:48:42Z",
  "closedAt": "2021-01-14T09:48:42Z",
  "mergedAt": "2021-01-14T09:48:42Z",
  "additions": 165,
  "deletions": 217,
  "changedFiles": 33,
  "headRefName": "master",
  "isDraft": false,
  "author": {
    "login": "ghogen"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "3d600d869d9edb3d2006a5ca3f9030d98dd8f127",
          "message": "sync comment changes from docs",
          "committedDate": "2021-01-12T23:21:37Z",
          "author": {
            "name": "Gordon Hogenson",
            "email": "ghogen@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Does this Owner show up in docs at all? They're all stale and could be removed but if they're invisible no need to bother.",
              "createdAt": "2021-01-13T19:52:00Z",
              "path": "src/Deprecated/Engine/Errors/InvalidProjectFileException.cs",
              "diffHunk": "@@ -14,12 +14,11 @@ namespace Microsoft.Build.BuildEngine\n     /// This exception is thrown whenever there is a problem with the user's XML project file. The problem might be semantic or\n     /// syntactical. The latter would be of a type typically caught by XSD validation (if it was performed by the project writer).\n     /// </summary>\n-    /// <remarks>\n-    /// WARNING: marking a type [Serializable] without implementing ISerializable imposes a serialization contract -- it is a\n-    /// promise to never change the type's fields i.e. the type is immutable; adding new fields in the next version of the type\n-    /// without following certain special FX guidelines, can break both forward and backward compatibility\n-    /// </remarks>\n     /// <owner>RGoel</owner>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "It's not used in docs. I can remove them or leave as is.",
              "createdAt": "2021-01-14T00:27:19Z",
              "path": "src/Deprecated/Engine/Errors/InvalidProjectFileException.cs",
              "diffHunk": "@@ -14,12 +14,11 @@ namespace Microsoft.Build.BuildEngine\n     /// This exception is thrown whenever there is a problem with the user's XML project file. The problem might be semantic or\n     /// syntactical. The latter would be of a type typically caught by XSD validation (if it was performed by the project writer).\n     /// </summary>\n-    /// <remarks>\n-    /// WARNING: marking a type [Serializable] without implementing ISerializable imposes a serialization contract -- it is a\n-    /// promise to never change the type's fields i.e. the type is immutable; adding new fields in the next version of the type\n-    /// without following certain special FX guidelines, can break both forward and backward compatibility\n-    /// </remarks>\n     /// <owner>RGoel</owner>",
              "author": {
                "login": "ghogen"
              }
            },
            {
              "body": "No need for that then I think.",
              "createdAt": "2021-01-14T09:46:21Z",
              "path": "src/Deprecated/Engine/Errors/InvalidProjectFileException.cs",
              "diffHunk": "@@ -14,12 +14,11 @@ namespace Microsoft.Build.BuildEngine\n     /// This exception is thrown whenever there is a problem with the user's XML project file. The problem might be semantic or\n     /// syntactical. The latter would be of a type typically caught by XSD validation (if it was performed by the project writer).\n     /// </summary>\n-    /// <remarks>\n-    /// WARNING: marking a type [Serializable] without implementing ISerializable imposes a serialization contract -- it is a\n-    /// promise to never change the type's fields i.e. the type is immutable; adding new fields in the next version of the type\n-    /// without following certain special FX guidelines, can break both forward and backward compatibility\n-    /// </remarks>\n     /// <owner>RGoel</owner>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}