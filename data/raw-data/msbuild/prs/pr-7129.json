{
  "number": 7129,
  "title": "Avoid loading Framework/Utilities in CodeTaskFactory",
  "body": "Fixes #7108 by moving the check of whether a given assembly is one of\r\nthe ones we'll provide by default to occur before the assembly is\r\nloaded. This should prevent loading the amd64 copy of either assembly\r\nside-by-side with the bin copy, and thus keep downstream consumers\r\nfrom getting type definitions from the wrong assembly.\r\n",
  "state": "MERGED",
  "createdAt": "2021-12-06T21:59:25Z",
  "updatedAt": "2021-12-06T23:14:17Z",
  "closedAt": "2021-12-06T23:14:16Z",
  "mergedAt": "2021-12-06T23:14:15Z",
  "additions": 15,
  "deletions": 9,
  "changedFiles": 1,
  "headRefName": "codetaskfactory-toolspath32",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": {
    "title": "VS 17.1"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "9ef62540c911351e7e27493e6ff2dea58919f190",
          "message": "Avoid loading Framework/Utilities in CodeTaskFactory\n\nFixes #7108 by moving the check of whether a given assembly is one of\nthe ones we'll provide by default to occur before the assembly is\nloaded. This should prevent loading the amd64 copy of either assembly\nside-by-side with the bin copy, and thus keep downstream consumers\nfrom getting type definitions from the wrong assembly.",
          "committedDate": "2021-12-06T21:59:02Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Sorry if I'm late to the party, could the `RoslynCodeTaskFactory` also load the wrong assemblies?",
        "createdAt": "2021-12-06T22:03:59Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "A good question! It cannot, because `RoslynCodeTaskFactory` doesn't load assemblies to get type information--instead it passes the assembly file paths to Roslyn, which internally cracks the assemblies open using other techniques that don't pollute the AppDomain.",
        "createdAt": "2021-12-06T22:13:09Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\n```suggestion\r\n                    \r\n```",
              "createdAt": "2021-12-06T22:53:40Z",
              "path": "src/Tasks/CodeTaskFactory.cs",
              "diffHunk": "@@ -683,18 +683,24 @@ bool TryCacheAssemblyIdentityFromPath(string assemblyFile, out string candidateA\n \n                 try\n                 {\n+                    // Framework and Utilities are default references but are often\n+                    // specified in the UsingTask anyway; if so just ignore them.\n+                    //",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}