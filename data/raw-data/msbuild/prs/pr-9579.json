{
  "number": 9579,
  "title": "[ClickOnce] Fix nonce generation in timestamping of signed manifest.",
  "body": "Fixes\r\n#9505 \r\n\r\n### Summary\r\nSecurityUtilities.SignFile function to sign ClickOnce manifest can fail occasionally during timestamping because the random bytes generated for the nonce can be invalid DER encodings for integer values\r\n\r\n#### Changes Made\r\nTo ensure the encoding is not invalid, clear the nonce MSB's most significant bit and set the MSB's least significant bit.\r\n\r\nThis is a port of the fix made for the same issue in the NuGet client:\r\nhttps://github.com/NuGet/NuGet.Client/pull/2041/commits/3e55190496b44811c4b5240bdb8ec65521e39161\r\n\r\n### Customer Impact\r\nCustomers calling SignFile API through the Microsoft.Build.Tasks.Core NuGet package encounter occasional failures because the Nonce generated is invalid per DER encoding. The fix will address this issue of the SignFile API failing intermittently.\r\n\r\n### Regression?\r\nNo\r\n\r\n### Testing\r\nFailing scenario validated + signing scenarios in ClickOnce validated for regression.\r\n\r\n### Risk\r\nLow\r\n",
  "state": "MERGED",
  "createdAt": "2023-12-30T01:50:41Z",
  "updatedAt": "2024-01-12T19:35:16Z",
  "closedAt": "2024-01-12T19:35:16Z",
  "mergedAt": "2024-01-12T19:35:16Z",
  "additions": 16,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "user/sujitn/msbld9505",
  "isDraft": false,
  "author": {
    "login": "sujitnayak"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "c7af16059dd6add6716fdb62510d99824e666b1e",
          "message": "[ClickOnce] Fix nonce generation in timestamping of manifest signature",
          "committedDate": "2023-12-30T01:30:16Z",
          "author": {
            "name": "Sujit Nayak",
            "email": "sujitn@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Looks like the current version of the NuGet code is slightly different: https://github.com/NuGet/NuGet.Client/blame/c13cea4dfd50e7eba1b794e1fea979dd1d6af3bd/src/NuGet.Core/NuGet.Packaging/Signing/Timestamp/Rfc3161TimestampProvider.cs#L245-L270\r\n\r\nDoes this need similar netcore-specific logic?",
        "createdAt": "2024-01-11T21:41:56Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Looks like the current version of the NuGet code is slightly different: https://github.com/NuGet/NuGet.Client/blame/c13cea4dfd50e7eba1b794e1fea979dd1d6af3bd/src/NuGet.Core/NuGet.Packaging/Signing/Timestamp/Rfc3161TimestampProvider.cs#L245-L270\r\n> \r\n> Does this need similar netcore-specific logic?\r\n\r\nI don't think we need that logic since we only support .NET FX. That logic is for Rfc3161TimestampRequest.CreateFromHash (based on the comment) which we don't call. The .NET FX version PInvokes to CryptRetrieveTimeStamp Win32 API.",
        "createdAt": "2024-01-11T22:53:18Z",
        "author": {
          "login": "sujitnayak"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}