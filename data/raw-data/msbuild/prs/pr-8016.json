{
  "number": 8016,
  "title": "Restore console mode after server build",
  "body": "Fixes #8008\r\n\r\n### Context\r\nWith MSBuild server, we adjust the console mode to be able to handle VT100 codes. We should undo that after each build to make it obvious to users mistakenly emitting VT100 codes that they should add code to properly handle them.\r\n\r\n### Customer Impact\r\nConsole settings we enable while building with MSBuild server persist after the build. In particular, if a customer is outputting raw VT100 codes, they  will be properly formatted if their code is run using `dotnet run`, but their customers will see the raw codes because they will not inherit anything from MSBuild.\r\n\r\n### Testing\r\nVerified that building the project from #8008 no longer had unexpected spacing when these private bits were deployed to an SDK.\r\nVerified that the bug motivating our original support for VT100 codes is still resolved.\r\nUnit tests.\r\n\r\n### Code Reviewers\r\nrainersigwald, rokonec\r\n\r\n### Description of the fix\r\nReset VT100 codes after each build.\r\n",
  "state": "MERGED",
  "createdAt": "2022-09-30T00:25:19Z",
  "updatedAt": "2022-09-30T22:34:52Z",
  "closedAt": "2022-09-30T22:34:51Z",
  "mergedAt": "2022-09-30T22:34:51Z",
  "additions": 19,
  "deletions": 8,
  "changedFiles": 1,
  "headRefName": "revert-VT100-state-after-build",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Servicing-approved"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "73b00c02d00168cc94fd6235c2a87f4bd39a4efc",
          "message": "Restore console mode after server build",
          "committedDate": "2022-09-29T23:32:34Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "948bd56f8a46e97c420a2bd38d58d8b9ad81f2c1",
          "message": "Refactor and use IsWindows",
          "committedDate": "2022-09-30T17:03:37Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "125507ecc27fb38e3b15e63c3d95281187a2d1db",
          "message": "Fix",
          "committedDate": "2022-09-30T17:15:36Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "85d5e28099a6285eaefb75990373e3c029d93db5",
          "message": "PR comment",
          "committedDate": "2022-09-30T19:11:15Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Since identical cleanup code is required for multiple exit code paths should it be in a try/finally?",
              "createdAt": "2022-09-30T05:49:22Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -207,6 +218,12 @@ public MSBuildClientExitResult Execute(CancellationToken cancellationToken)\n \n             MSBuildEventSource.Log.MSBuildServerBuildStop(descriptiveCommandLine, _numConsoleWritePackets, _sizeOfConsoleWritePackets, _exitResult.MSBuildClientExitType.ToString(), _exitResult.MSBuildAppExitTypeString);\n             CommunicationsUtilities.Trace(\"Build finished.\");\n+\n+            if (_originalConsoleMode is not null)\n+            {\n+                NativeMethodsShared.SetConsoleMode(stdOut, _originalConsoleMode.Value);",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "If we moved this line before line `consoleMode |= NativeMethodsShared.ENABLE_VIRTUAL_TERMINAL_PROCESSING | NativeMethodsShared.DISABLE_NEWLINE_AUTO_RETURN;` nr 376 we would revert it to original only when we have had actually changed it. We most probably change it all the time, but still :-)",
              "createdAt": "2022-09-30T18:35:22Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -353,6 +363,7 @@ private void ConfigureAndQueryConsoleProperties()\n                     IntPtr stdOut = NativeMethodsShared.GetStdHandle(NativeMethodsShared.STD_OUTPUT_HANDLE);\n                     if (NativeMethodsShared.GetConsoleMode(stdOut, out uint consoleMode))\n                     {\n+                        _originalConsoleMode = consoleMode;",
              "author": {
                "login": "rokonec"
              }
            },
            {
              "body": "Fair enough; will fix, thanks!",
              "createdAt": "2022-09-30T19:10:35Z",
              "path": "src/Build/BackEnd/Client/MSBuildClient.cs",
              "diffHunk": "@@ -353,6 +363,7 @@ private void ConfigureAndQueryConsoleProperties()\n                     IntPtr stdOut = NativeMethodsShared.GetStdHandle(NativeMethodsShared.STD_OUTPUT_HANDLE);\n                     if (NativeMethodsShared.GetConsoleMode(stdOut, out uint consoleMode))\n                     {\n+                        _originalConsoleMode = consoleMode;",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}