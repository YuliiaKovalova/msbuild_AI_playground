{
  "number": 8907,
  "title": "Overwrite colorized lines instead of incremental updates",
  "body": "The root cause of #8781 is that the optimize-output-by-skipping-identical-characters logic is not aware of escape sequences, so it goes horribly awry when the replacing line differs after the first escape sequence.\n    \nInstead, apply the previous logic only if there are no escape sequences; if there are, replace the entire line.\n    \nIf this proves to cause too much flicker or perform slowly, we could implement escape-sequence-aware truncation, length, and comparison, but we can wait for feedback to that effect.",
  "state": "MERGED",
  "createdAt": "2023-06-16T18:54:57Z",
  "updatedAt": "2023-06-20T16:46:20Z",
  "closedAt": "2023-06-20T16:46:18Z",
  "mergedAt": "2023-06-20T16:46:18Z",
  "additions": 62,
  "deletions": 13,
  "changedFiles": 5,
  "headRefName": "minimal-truncation-fix",
  "isDraft": false,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1d3b4c9dff1176092927c6cd67152dbad105b9c2",
          "message": "TerminalLogger tests can verify \"live\" output\n\nMake `DisplayNodes()` internal so that we can call it from tests in\norder to verify the \"live\" logger output at known checkpoints.",
          "committedDate": "2023-06-16T18:50:32Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c043902acaeedf596ac345514a4e6656ac707294",
          "message": "Regression test for #8781",
          "committedDate": "2023-06-16T18:51:16Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3e5d243f6b3e5ab4da77467fe6707fbfdd94a6be",
          "message": "Avoid updating lines when colorized\n\nThe root cause of #8781 is that the optimize-output-by-skipping-\nidentical-characters logic is not aware of escape sequences, so it goes\nhorribly awry when the replacing line differs after the first escape\nsequence.\n\nInstead, apply the previous logic only if there are no escape sequences;\nif there are, replace the entire line.\n\nIf this proves to cause too much flicker or perform slowly, we could\nimplement escape-sequence-aware truncation, length, and comparison, but\nwe can wait for feedback to that effect.",
          "committedDate": "2023-06-16T18:51:16Z",
          "author": {
            "name": "Rainer Sigwald",
            "email": "raines@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": []
  }
}