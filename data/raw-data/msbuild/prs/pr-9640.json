{
  "number": 9640,
  "title": "Permit specifying output file",
  "body": "For get* CLI switches\r\n\r\nFixes #\r\n\r\n### Context\r\nDesign question:\r\nShould SimpleErrorLogger be enabled if we're redirecting into a file? Should it be enabled whenever we aren't using TerminalLogger?\r\n\r\nThe reason I ask is that it's the only thing that writes to stderr at the moment, so since I re-enabled normal loggers when writing to a file, that means I disabled SimpleErrorLogger, and now errors come through stdout (with no TerminalLogger) as MSBuild normally does things. I'm not convinced that's ideal...\r\n\r\n### Changes Made\r\nPermit using -getResultOutputFile to redirect output from get* into a file. Example:\r\ndotnet msbuild foo.csproj -getProperty:Bar -getResultOutputFile:Biz.txt\r\nThis writes the value of property Bar into Biz.txt.\r\n\r\n### Testing\r\n~I tried using this, and it failed to load my test project because it was trying to include $(MonoAndroidResourcePrefix)\\(various), and MonoAndroidResourcePrefix was not defined. That doesn't feel like it's related to my change, but it's hard for me to firmly state that this works when 100% of my tests have failed \ud83d\ude43~\r\n\r\nI tried again today, and the error mysteriously disappeared. It failed until I added Flush, but now it seems to work properly.\r\n\r\n### Notes\r\n",
  "state": "MERGED",
  "createdAt": "2024-01-12T19:00:25Z",
  "updatedAt": "2024-04-12T04:45:43Z",
  "closedAt": "2024-02-28T17:15:04Z",
  "mergedAt": "2024-02-28T17:15:04Z",
  "additions": 52,
  "deletions": 10,
  "changedFiles": 3,
  "headRefName": "add-output-to-file-option",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "34942539e59a38c664ecce5df0f6aca7c73fac3b",
          "message": "Permit specifying output file\n\nFor get* CLI switches",
          "committedDate": "2024-01-12T18:58:29Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f27bff3e02b8156f7400483094b6c64606ba86af",
          "message": "Flush",
          "committedDate": "2024-01-16T23:39:25Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "4ae5f8f1491d47c4b2125584e6e093e925a4292f",
          "message": "Capture bool check",
          "committedDate": "2024-01-19T01:11:18Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a2b928c15da1a48f1ef5e6f4e11601fecd3dd849",
          "message": "Merge branch 'main' into add-output-to-file-option",
          "committedDate": "2024-02-20T16:32:56Z",
          "author": {
            "name": "Forgind",
            "email": "12969783+Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "fb98106fd1895ddcfd278e29cd5b353d4e876dd9",
          "message": "Start on test",
          "committedDate": "2024-02-23T14:36:42Z",
          "author": {
            "name": "Forgind",
            "email": "you@example.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a7793c5c30fdbfb8a323746b8a9536aa277d11e6",
          "message": "Merge branch 'add-output-to-file-option' of https://github.com/Forgind/msbuild into add-output-to-file-option",
          "committedDate": "2024-02-23T14:36:58Z",
          "author": {
            "name": "Forgind",
            "email": "you@example.com"
          }
        }
      },
      {
        "commit": {
          "oid": "50c0870129f92fe66229ebe4e7ed607ebdcd0b85",
          "message": "pr feedback",
          "committedDate": "2024-02-23T21:39:20Z",
          "author": {
            "name": "Forgind",
            "email": "you@example.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Looking forward to have this in an SDK near me!",
        "createdAt": "2024-02-20T15:26:32Z",
        "author": {
          "login": "tmds"
        }
      },
      {
        "body": "FYI, I called my commit 'Start on test', but that was just because I don't have the components to build on this laptop, so I didn't run it locally before pushing, but it seems to have built and passed \ud83d\ude42",
        "createdAt": "2024-02-23T17:41:52Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind is this a .NET 9 feature only? Or is it expected to become available in a .NET 8 SDK band?",
        "createdAt": "2024-04-11T08:14:21Z",
        "author": {
          "login": "tmds"
        }
      },
      {
        "body": "@tmds it'll be in MSBuild 17.10/SDK 8.0.3xx.",
        "createdAt": "2024-04-11T16:03:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Good job",
        "createdAt": "2024-04-12T04:45:42Z",
        "author": {
          "login": "VAllens"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "suggestion: assign this to a variable, something like `printEvaluationToStdout`.",
              "createdAt": "2024-01-18T07:53:11Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2563,7 +2573,8 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n                     getProperty = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetProperty] ?? Array.Empty<string>();\n                     getItem = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetItem] ?? Array.Empty<string>();\n                     getTargetResult = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetTargetResult] ?? Array.Empty<string>();\n-                    if (getProperty.Length > 0 || getItem.Length > 0 || getTargetResult.Length > 0)\n+                    getResultOutputFile = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetResultOutputFile].FirstOrDefault() ?? string.Empty;\n+                    if ((getProperty.Length > 0 || getItem.Length > 0 || getTargetResult.Length > 0) && getResultOutputFile.Length == 0)",
              "author": {
                "login": "tmds"
              }
            },
            {
              "body": "It doesn't just control evaluation but also build information. I'm proposing minimizeStdOutOutput. What do you think?",
              "createdAt": "2024-01-19T01:10:41Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2563,7 +2573,8 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n                     getProperty = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetProperty] ?? Array.Empty<string>();\n                     getItem = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetItem] ?? Array.Empty<string>();\n                     getTargetResult = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetTargetResult] ?? Array.Empty<string>();\n-                    if (getProperty.Length > 0 || getItem.Length > 0 || getTargetResult.Length > 0)\n+                    getResultOutputFile = commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.GetResultOutputFile].FirstOrDefault() ?? string.Empty;\n+                    if ((getProperty.Length > 0 || getItem.Length > 0 || getTargetResult.Length > 0) && getResultOutputFile.Length == 0)",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "This is the same value, you can use the variable.",
              "createdAt": "2024-01-18T07:55:40Z",
              "path": "src/MSBuild/XMake.cs",
              "diffHunk": "@@ -2650,7 +2661,7 @@ private static bool GatherAutoResponseFileSwitchesFromFullPath(string autoRespon\n                         commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.BinaryLogger],\n                         commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.ProfileEvaluation],\n                         groupedFileLoggerParameters,\n-                        getProperty.Length + getItem.Length + getTargetResult.Length > 0,\n+                        (getProperty.Length + getItem.Length + getTargetResult.Length > 0) && getResultOutputFile.Length == 0,",
              "author": {
                "login": "tmds"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n            string resultFile = env.GetTempFile(\".txt\").Path;\r\n```\r\n\r\nwill delete the file automatically when the test environment is disposed of, so no need for the `try`/`finally` below.",
              "createdAt": "2024-02-23T21:25:55Z",
              "path": "src/MSBuild.UnitTests/XMake_Tests.cs",
              "diffHunk": "@@ -809,6 +809,41 @@ public void BuildFailsWithBadPropertyName()\n             results.ShouldContain(\"error MSB4177\");\n         }\n \n+        [Theory]\n+        [InlineData(\"-getProperty:Foo\", \"propertyContent\")]\n+        [InlineData(\"-getItem:Bar\", \"ItemContent\")]\n+        [InlineData(\"-getTargetResult:Biz\", \"Success\")]\n+        public void GetStarOutputsToFileIfRequested(string extraSwitch, string result)\n+        {\n+            using TestEnvironment env = TestEnvironment.Create();\n+            TransientTestFile project = env.CreateFile(\"testProject.csproj\", @\"\n+<Project>\n+  <PropertyGroup>\n+    <Foo>propertyContent</Foo>\n+  </PropertyGroup>\n+\n+  <ItemGroup>\n+    <Bar Include=\"\"ItemContent\"\" />\n+  </ItemGroup>\n+\n+  <Target Name=\"\"Biz\"\" />\n+</Project>\n+\");\n+            string resultFile = Path.Combine(Path.GetDirectoryName(project.Path), \"resultFile.txt\");",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}