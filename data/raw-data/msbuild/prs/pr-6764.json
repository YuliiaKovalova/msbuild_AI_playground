{
  "number": 6764,
  "title": "Switch to full NGEN",
  "body": "### Context\r\n\r\nWe are currently pre-compiling only code that gets executed as part of our IBC training scenarios. This results in smaller native images but the coverage is not perfect and it's easy to miss a code path and cause JITting at run-time.\r\n\r\n### Changes Made\r\n\r\nWith Visual Studio switching to 64-bit, address space is no longer a concern and the positive impact of pre-compiling everything outweighs the cost of larger image sizes.\r\n\r\n### Testing\r\n\r\nExperimental VS insertion showing improvements in # of methods JITted and wall-clock time.\r\n",
  "state": "MERGED",
  "createdAt": "2021-08-17T07:21:18Z",
  "updatedAt": "2021-10-25T11:19:26Z",
  "closedAt": "2021-08-27T03:01:40Z",
  "mergedAt": "2021-08-27T03:01:40Z",
  "additions": 4,
  "deletions": 4,
  "changedFiles": 4,
  "headRefName": "exp/full-ngen",
  "isDraft": false,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance",
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "63782b4ddd9a8baba2c66d62fb067d900489f1d2",
          "message": "Switch to full NGEN",
          "committedDate": "2021-08-12T11:54:48Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "b8c428e07427750bf5454e79a60da5d16bdf7797",
          "message": "Add MSBuild.exe to relatedProcessFiles",
          "committedDate": "2021-08-17T19:31:26Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1e8835cb633dc74e77d727a78245e8a0b07ec685",
          "message": "Revert \"Add MSBuild.exe to relatedProcessFiles\"\n\nThis reverts commit b8c428e07427750bf5454e79a60da5d16bdf7797.",
          "committedDate": "2021-08-19T06:58:50Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d6c7e16fe8cb0edf13225c7bf7470d862a27b408",
          "message": "Set ApplyNgenOptimization=full in MSBuild.csproj",
          "committedDate": "2021-08-19T07:00:07Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "dd389380866c6623577f9a474ee2550d69fe7f60",
          "message": "Revert \"Set ApplyNgenOptimization=full in MSBuild.csproj\"\n\nThis reverts commit d6c7e16fe8cb0edf13225c7bf7470d862a27b408.",
          "committedDate": "2021-08-19T09:36:01Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "89d0f5950ab6fd2c7f1b6385537a561afa0ab241",
          "message": "Merge branch 'main' into exp/full-ngen",
          "committedDate": "2021-08-27T01:21:15Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "> Are we missing MSBuild.exe?\r\n\r\nI don't see IBC data generated for MSBuild.exe here: [internal link](https://devdiv.visualstudio.com/_apps/hub/ms-vscs-artifact.build-tasks.drop-hub-group-explorer-hub?name=OptimizationData/DotNet-msbuild-Trusted/main/20210812.2/1128652/1)\r\n\r\nDo you happen to know how the set of assemblies to profile with OptProf is defined?",
        "createdAt": "2021-08-17T15:59:02Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "I don't, unfortunately. This is promising but blank:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/c88325c7859bcd282ff1fae14ed95936e051e1c3/eng/config/OptProf.json#L35-L36\r\n\r\n",
        "createdAt": "2021-08-17T16:14:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I've pushed a shot in the dark commit. Will have results tomorrow.",
        "createdAt": "2021-08-17T19:33:19Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "For the record, I'm fine with taking this (without the MSBuild.exe changes) and then separately figuring out MSBuild.exe training data.",
        "createdAt": "2021-08-18T14:50:24Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We got buy-off for this part (that is, without MSBuild.exe changes) from the VS perf team, right? So this is good to merge when possible?",
        "createdAt": "2021-08-19T20:39:18Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Yes, please merge.",
        "createdAt": "2021-08-19T20:42:44Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "As I recall `relatedProcessFile` means \"use the RestartManager API to see if this file is in use and if so complain to the user rather than failing to overwrite it during setup/upgrade.\"",
              "createdAt": "2021-08-17T20:24:56Z",
              "path": "src/Package/MSBuild.VSSetup/files.swr",
              "diffHunk": "@@ -10,10 +10,12 @@ vs.dependencies\n   vs.dependency id=Microsoft.VisualStudio.PackageGroup.NuGet\n \n vs.relatedProcessFiles\n+  vs.relatedProcessFile Path=\"[InstallDir]\\MSBuild\\Current\\Bin\\MSBuild.exe\"",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Yup, it didn't work.\r\n\r\n@genlu, may I ask for your expert advice here? Does setting the `ApplyNgenOptimization` prop enable OptProf end-to-end or is there some other place where we indicate for which assemblies optimization data should be created?\r\n\r\nThis is our OptProf training pipeline: [internal link](https://dev.azure.com/devdiv/DevDiv/_release?definitionId=1370&view=mine&_a=releases)",
              "createdAt": "2021-08-18T14:37:11Z",
              "path": "src/Package/MSBuild.VSSetup/files.swr",
              "diffHunk": "@@ -10,10 +10,12 @@ vs.dependencies\n   vs.dependency id=Microsoft.VisualStudio.PackageGroup.NuGet\n \n vs.relatedProcessFiles\n+  vs.relatedProcessFile Path=\"[InstallDir]\\MSBuild\\Current\\Bin\\MSBuild.exe\"",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "`ApplyNgenOptimization` doesn't do it, we need to enable generating optimization data for the assembly first.\r\n\r\n```\r\n##[error].packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21379.2\\tools\\OptimizationData.targets(111,5): error : (NETCORE_ENGINEERING_TELEMETRY=Build) No optimization data found for assemblies: C:\\a\\1\\s\\artifacts\\obj\\MSBuild\\Release\\net472\\MSBuild.exe\r\n```\r\n\r\nLet's get this in then and work on MSBuild.exe separately.",
              "createdAt": "2021-08-19T09:38:16Z",
              "path": "src/Package/MSBuild.VSSetup/files.swr",
              "diffHunk": "@@ -10,10 +10,12 @@ vs.dependencies\n   vs.dependency id=Microsoft.VisualStudio.PackageGroup.NuGet\n \n vs.relatedProcessFiles\n+  vs.relatedProcessFile Path=\"[InstallDir]\\MSBuild\\Current\\Bin\\MSBuild.exe\"",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "Sorry I missed your question, notification from msbuild repo is being filtered out from my inbox. Please let me know if there's anything else I could help :)",
              "createdAt": "2021-08-30T18:54:06Z",
              "path": "src/Package/MSBuild.VSSetup/files.swr",
              "diffHunk": "@@ -10,10 +10,12 @@ vs.dependencies\n   vs.dependency id=Microsoft.VisualStudio.PackageGroup.NuGet\n \n vs.relatedProcessFiles\n+  vs.relatedProcessFile Path=\"[InstallDir]\\MSBuild\\Current\\Bin\\MSBuild.exe\"",
              "author": {
                "login": "genlu"
              }
            },
            {
              "body": "@genlu yes, the question is still valid. How does the OptProf infrastructure determine for which assemblies it should create optimization data? We noticed that it's not being done for MSBuild.exe and we would like to fix it. Thank you!",
              "createdAt": "2021-09-16T12:51:52Z",
              "path": "src/Package/MSBuild.VSSetup/files.swr",
              "diffHunk": "@@ -10,10 +10,12 @@ vs.dependencies\n   vs.dependency id=Microsoft.VisualStudio.PackageGroup.NuGet\n \n vs.relatedProcessFiles\n+  vs.relatedProcessFile Path=\"[InstallDir]\\MSBuild\\Current\\Bin\\MSBuild.exe\"",
              "author": {
                "login": "ladipro"
              }
            },
            {
              "body": "This is specified in our optprof [runsetting file](https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_git/VS?path=/src/Tests/config/runsettings/Official/OptProf/RoslynOptProf/RoslynOptProf.runsettingsproj&version=GBmain&line=28&lineEnd=29&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents), which points to the [config files](https://dev.azure.com/dnceng/internal/_build/results?buildId=1366625&view=artifacts&pathAsName=false&type=publishedArtifacts) we update with each of our insertion (in the directory shown in the screenshot below)\r\n![image](https://user-images.githubusercontent.com/788783/133683871-2d95b3a8-16d4-466f-9ffc-cdae704c6b9c.png)\r\n\r\nThe content of those config files are auto-generated based on [this file](https://github.com/dotnet/roslyn/blob/main/eng/config/OptProf.json) during our build.\r\n\r\n",
              "createdAt": "2021-09-16T20:49:58Z",
              "path": "src/Package/MSBuild.VSSetup/files.swr",
              "diffHunk": "@@ -10,10 +10,12 @@ vs.dependencies\n   vs.dependency id=Microsoft.VisualStudio.PackageGroup.NuGet\n \n vs.relatedProcessFiles\n+  vs.relatedProcessFile Path=\"[InstallDir]\\MSBuild\\Current\\Bin\\MSBuild.exe\"",
              "author": {
                "login": "genlu"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Why are all these only on full?\r\n\r\nI was momentarily confused as to why you'd have to change it for four projects individually rather than just one change for them all, but it doesn't really make sense to ngen anything from other assemblies, so \ud83d\udc4d",
              "createdAt": "2021-08-18T00:08:56Z",
              "path": "src/Build/Microsoft.Build.csproj",
              "diffHunk": "@@ -20,7 +20,7 @@\n     <IsPackable>true</IsPackable>\n     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to create, edit, and evaluate MSBuild projects.</PackageDescription>\n     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>\n-    <ApplyNgenOptimization Condition=\"'$(TargetFramework)' == '$(FullFrameworkTFM)'\">partial</ApplyNgenOptimization>\n+    <ApplyNgenOptimization Condition=\"'$(TargetFramework)' == '$(FullFrameworkTFM)'\">full</ApplyNgenOptimization>",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "> Why are all these only on full?\r\n\r\nngen is only a thing on .NET Framework; in .NET Core it was replaced with \"crossgen\" (and now crossgen2) which has a different set of rules.",
              "createdAt": "2021-08-18T14:13:47Z",
              "path": "src/Build/Microsoft.Build.csproj",
              "diffHunk": "@@ -20,7 +20,7 @@\n     <IsPackable>true</IsPackable>\n     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to create, edit, and evaluate MSBuild projects.</PackageDescription>\n     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>\n-    <ApplyNgenOptimization Condition=\"'$(TargetFramework)' == '$(FullFrameworkTFM)'\">partial</ApplyNgenOptimization>\n+    <ApplyNgenOptimization Condition=\"'$(TargetFramework)' == '$(FullFrameworkTFM)'\">full</ApplyNgenOptimization>",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I think you've told me that before...I'll try to remember this time.",
              "createdAt": "2021-08-18T14:31:54Z",
              "path": "src/Build/Microsoft.Build.csproj",
              "diffHunk": "@@ -20,7 +20,7 @@\n     <IsPackable>true</IsPackable>\n     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to create, edit, and evaluate MSBuild projects.</PackageDescription>\n     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>\n-    <ApplyNgenOptimization Condition=\"'$(TargetFramework)' == '$(FullFrameworkTFM)'\">partial</ApplyNgenOptimization>\n+    <ApplyNgenOptimization Condition=\"'$(TargetFramework)' == '$(FullFrameworkTFM)'\">full</ApplyNgenOptimization>",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}