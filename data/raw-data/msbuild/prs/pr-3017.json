{
  "number": 3017,
  "title": "Evaluation Context",
  "body": "It doesn't do anything right now. In the future, it will cache SDK resolution results, IO operations, etc.\r\n",
  "state": "CLOSED",
  "createdAt": "2018-02-22T00:58:05Z",
  "updatedAt": "2020-12-30T22:52:18Z",
  "closedAt": "2018-03-10T01:42:13Z",
  "mergedAt": null,
  "additions": 481,
  "deletions": 49,
  "changedFiles": 29,
  "headRefName": "evaluationContext",
  "isDraft": false,
  "author": {
    "login": "cdmihai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "d6299c01c41aacf089f94b484c59d2b0a91cfdd1",
          "message": "Add construction info to Project",
          "committedDate": "2018-02-21T19:00:19Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5215fcf3f3e835459602b45161bdda4d5c988ee0",
          "message": "Propagate EvaluationContext into Evaluator",
          "committedDate": "2018-02-22T21:23:00Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "92455d2cd9ff8745a0b60b774e27129f088d58c1",
          "message": "Update ref",
          "committedDate": "2018-02-22T21:23:00Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e5953b19c34ce6fd542b60b4594d5ef3befd729c",
          "message": "Sync xlf",
          "committedDate": "2018-02-22T21:23:00Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Looks good! Only thing I wonder is if we want to get something using it as a POC before we commit? Since there are public APIs that could change if something was missed? But it looks designed well for non-breaking changes.\r\n\r\n@jeffkl would like your input if you can get the SDK resolution to use this to cache for VS sessions.",
        "createdAt": "2018-02-23T22:12:00Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Replaced by https://github.com/Microsoft/msbuild/pull/3075",
        "createdAt": "2018-03-10T01:42:13Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this be `ProjectCreationInfo`?  The method you call is `Create()` no `Construct()`...",
              "createdAt": "2018-02-24T16:58:54Z",
              "path": "src/Build/Definition/ProjectConstructionInfo.cs",
              "diffHunk": "@@ -0,0 +1,45 @@\n+\ufeffusing System.Collections.Generic;\n+using Microsoft.Build.Evaluation;\n+using Microsoft.Build.Framework.EvaluationContext;\n+\n+namespace Microsoft.Build.Definition\n+{\n+    /// <summary>\n+    ///     Common <see cref=\"Project\" /> constructor arguments.\n+    /// </summary>\n+    public class ProjectConstructionInfo",
              "author": {
                "login": "jeffkl"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this be named `ProjectEvaluationContext`?  I don't think we'll have another evaluation context so it might not be worth it but it caught my eye",
              "createdAt": "2018-02-24T17:00:21Z",
              "path": "src/Framework/EvaluationContext/EvaluationContext.cs",
              "diffHunk": "@@ -0,0 +1,17 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+//-----------------------------------------------------------------------\n+// </copyright>\n+\n+using System;\n+\n+namespace Microsoft.Build.Framework.EvaluationContext\n+{\n+    /// <summary>\n+    /// An object used by the caller to extend the lifespan of evaluation caches (by passing the object on to other evaluations).\n+    /// The caller should throw away the context when the environment changes (IO, environment variables, SDK resolution inputs, etc).\n+    /// </summary>\n+    public abstract class EvaluationContext",
              "author": {
                "login": "jeffkl"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Do we need a factory?  Can there be a static method on `EvaluationContext` so the pattern is aligned with stuff like `ProjectRootElement.Create()`",
              "createdAt": "2018-02-24T17:01:19Z",
              "path": "src/Framework/EvaluationContext/EvaluationContextFactory.cs",
              "diffHunk": "@@ -0,0 +1,17 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+//-----------------------------------------------------------------------\n+// </copyright>\n+\n+namespace Microsoft.Build.Framework.EvaluationContext\n+{\n+    /// <summary>\n+    /// Factory for <see cref=\"EvaluationContext\"/>\n+    /// </summary>\n+    public abstract class EvaluationContextFactory",
              "author": {
                "login": "jeffkl"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "I'm interested to know when this will happen?  Can't we ensure that the provided evaluation context is always valid?",
              "createdAt": "2018-02-24T17:02:22Z",
              "path": "src/Build/Resources/Strings.resx",
              "diffHunk": "@@ -1467,6 +1467,9 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>\n   <!-- #################################################################################################-->\n   <!-- The OM_ prefix indicates at the point of use that there is no error code in the message;\n        these should not be used in an InvalidProjectFileException -->\n+  <data name=\"OM_IncorrectEvaluationContextType\">\n+    <value>The provided evaluation context of type {0} was not created using the API factory {1}.</value>",
              "author": {
                "login": "jeffkl"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "The namespace here should probably just be `Microsoft.Build.Framework`",
              "createdAt": "2018-02-24T17:04:09Z",
              "path": "src/Framework/EvaluationContext/EvaluationContext.cs",
              "diffHunk": "@@ -0,0 +1,17 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+//-----------------------------------------------------------------------\n+// </copyright>\n+\n+using System;\n+\n+namespace Microsoft.Build.Framework.EvaluationContext",
              "author": {
                "login": "jeffkl"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Changing the namespace of `EvaluationContext` would obviously remove the need for this",
              "createdAt": "2018-02-24T17:04:47Z",
              "path": "src/Build/Evaluation/Context/EvaluationContextBase.cs",
              "diffHunk": "@@ -0,0 +1,13 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+//-----------------------------------------------------------------------\n+// </copyright>\n+\n+using PublicEvaluationContext = Microsoft.Build.Framework.EvaluationContext.EvaluationContext;",
              "author": {
                "login": "jeffkl"
              }
            }
          ]
        }
      }
    ]
  }
}