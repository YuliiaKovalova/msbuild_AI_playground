{
  "number": 7560,
  "title": "Auto-detect that we need Core",
  "body": "With Deploy-MSBuild.ps1\r\n\r\nOnly works if you're deploying to a folder that looks like `*dotnet*sdk*`\r\n\r\nNote that this is a bit hacky, but I think that's fine for a script that is mostly used by us.\r\n\r\n### Testing\r\n\r\nI tried deploying to a folder that looked like ...\\dotnet\\sdk\\folder, and it put the Core assemblies in rather than Framework as desired.",
  "state": "MERGED",
  "createdAt": "2022-04-21T17:08:03Z",
  "updatedAt": "2022-04-28T19:49:23Z",
  "closedAt": "2022-04-28T19:49:22Z",
  "mergedAt": "2022-04-28T19:49:22Z",
  "additions": 16,
  "deletions": 2,
  "changedFiles": 1,
  "headRefName": "autodetect-framework",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "merge-when-branch-open"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "915cd0f555cb30106ad66e25e71252661e67b251",
          "message": "Auto-detect that we need Core\n\nWith Deploy-MSBuild.ps1\n\nOnly works if you're deploying to a folder that looks like *dotnet*sdk*",
          "committedDate": "2022-04-21T17:06:07Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e6fb36e534385a0381568a55bb8171446a6ec0dc",
          "message": "Merge branch 'main' of https://github.com/dotnet/msbuild into autodetect-framework",
          "committedDate": "2022-04-21T17:12:42Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "71e0641d638ab720f74765516ff29aa8c5e4c1b8",
          "message": "PR comments",
          "committedDate": "2022-04-25T17:04:02Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "cec4a511175d8cba54f3376e080c795de7e78ca2",
          "message": "include more valid runtimes",
          "committedDate": "2022-04-28T17:41:42Z",
          "author": {
            "name": "Forgind",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Don't override if they explicitly passed in Full, and please message here.",
              "createdAt": "2022-04-25T15:11:02Z",
              "path": "scripts/Deploy-MSBuild.ps1",
              "diffHunk": "@@ -50,6 +50,10 @@ $BackupFolder = New-Item (Join-Path $destination -ChildPath \"Backup-$(Get-Date -\n Write-Verbose \"Copying $configuration MSBuild to $destination\"\n Write-Host \"Existing MSBuild assemblies backed up to $BackupFolder\"\n \n+if ($destination -like \"*dotnet*sdk*\") {\n+    $runtime = \"Core\"",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n  [ValidateSet('Core','Desktop','Detect')]\r\n```",
              "createdAt": "2022-04-28T02:05:12Z",
              "path": "scripts/Deploy-MSBuild.ps1",
              "diffHunk": "@@ -5,7 +5,7 @@ Param(\n   [ValidateSet('Debug','Release')]\n   [string] $configuration = \"Debug\",\n   [ValidateSet('Core','Desktop')]",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is it possible to get here with the `ValidateSet` from above?",
              "createdAt": "2022-04-28T02:05:39Z",
              "path": "scripts/Deploy-MSBuild.ps1",
              "diffHunk": "@@ -50,6 +50,20 @@ $BackupFolder = New-Item (Join-Path $destination -ChildPath \"Backup-$(Get-Date -\n Write-Verbose \"Copying $configuration MSBuild to $destination\"\n Write-Host \"Existing MSBuild assemblies backed up to $BackupFolder\"\n \n+if ($runtime -eq \"Detect\") {\n+    if ($destination -like \"*dotnet*sdk*\") {\n+        $runtime = \"Core\"\n+        Write-Host \"Detected path that looks like an sdk. Writing .NET Core assemblies.\"\n+    }\n+    else {\n+        $runtime = \"Desktop\"\n+        Write-Host \"Detected path that does not look like an sdk. Writing .NET Framework assemblies.\"\n+    }\n+}\n+else if ($runtime -eq \"Full\") {",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "I didn't realize the ValidateSet applied to the line below it. I'd prefer to add both Detect and Full to the \"valid\" set. It hadn't been a problem 'til now just because Desktop is the default; if I have some reason to want to override it, I'll put in what, to me, is the logical opposite of Core, namely Full, and be confused when it fails.",
              "createdAt": "2022-04-28T17:40:52Z",
              "path": "scripts/Deploy-MSBuild.ps1",
              "diffHunk": "@@ -50,6 +50,20 @@ $BackupFolder = New-Item (Join-Path $destination -ChildPath \"Backup-$(Get-Date -\n Write-Verbose \"Copying $configuration MSBuild to $destination\"\n Write-Host \"Existing MSBuild assemblies backed up to $BackupFolder\"\n \n+if ($runtime -eq \"Detect\") {\n+    if ($destination -like \"*dotnet*sdk*\") {\n+        $runtime = \"Core\"\n+        Write-Host \"Detected path that looks like an sdk. Writing .NET Core assemblies.\"\n+    }\n+    else {\n+        $runtime = \"Desktop\"\n+        Write-Host \"Detected path that does not look like an sdk. Writing .NET Framework assemblies.\"\n+    }\n+}\n+else if ($runtime -eq \"Full\") {",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}