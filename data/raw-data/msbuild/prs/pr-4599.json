{
  "number": 4599,
  "title": "[Static Graph] ProjectGraph.GetTargetLists throws on invalid target names",
  "body": "Just cleanup: clarifying some documentation, validating some inputs, avoiding needless iterations.",
  "state": "MERGED",
  "createdAt": "2019-08-09T00:21:48Z",
  "updatedAt": "2020-12-30T22:53:53Z",
  "closedAt": "2019-09-17T20:39:32Z",
  "mergedAt": "2019-09-17T20:39:32Z",
  "additions": 177,
  "deletions": 3,
  "changedFiles": 17,
  "headRefName": "clarifyDocumentation",
  "isDraft": false,
  "author": {
    "login": "cdmihai"
  },
  "milestone": {
    "title": "MSBuild 16.4"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "a3bce7d5228bc91e398be87c85fa7da8d72728f4",
          "message": "Clarify documentation in ProjectGraph.GetTargetLists",
          "committedDate": "2019-08-08T22:02:27Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3e0fe7eb6693cec1c25f922c381b9bfe2ed3987f",
          "message": "ProjectGraph.GetTargetLists throws on empty target names",
          "committedDate": "2019-08-09T01:25:22Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "beb3d66f64b24a2009a295defff4b3a56562ffaa",
          "message": "clarify test project contents",
          "committedDate": "2019-08-09T17:52:34Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "556fbb7654676ad79b57a78f1d58131eb1cc628f",
          "message": "specify method in error message",
          "committedDate": "2019-08-09T18:10:16Z",
          "author": {
            "name": "Mihai Codoban",
            "email": "micodoba@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": []
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Under what circumstance are there no default targets? Doesn't MSBuild always have a default target (if none is explicitly listed, it's the first one defined in the logical project)?",
              "createdAt": "2019-08-09T15:39:58Z",
              "path": "src/Build.UnitTests/Graph/ProjectGraph_Tests.cs",
              "diffHunk": "@@ -764,6 +764,47 @@ public void GetTargetsListsShouldApplyDefaultTargetsOnlyToGraphRoots()\n             }\n         }\n \n+        [Fact]\n+        public void GetTargetsListReturnsEmptyTargetsForNodeIfNoTargetsPropagatedToIt()\n+        {\n+            using (var env = TestEnvironment.Create())\n+            {\n+                TransientTestFile entryProject = CreateProjectFile(env: env, projectNumber: 1, projectReferences: new[] { 2 }, projectReferenceTargets: new Dictionary<string, string[]> { { \"A\", new []{ \"B\" }} }, defaultTargets: \"A\");\n+                CreateProjectFile(env: env, projectNumber: 2);\n+\n+                var projectGraph = new ProjectGraph(entryProject.Path);\n+                projectGraph.ProjectNodes.Count.ShouldBe(2);\n+\n+                IReadOnlyDictionary<ProjectGraphNode, ImmutableList<string>> targetLists = projectGraph.GetTargetLists(new []{ \"Foo\" });\n+                targetLists.Count.ShouldBe(projectGraph.ProjectNodes.Count);\n+                targetLists[GetFirstNodeWithProjectNumber(projectGraph, 1)].ShouldBe(new []{ \"Foo\" });\n+                targetLists[GetFirstNodeWithProjectNumber(projectGraph, 2)].ShouldBeEmpty();\n+            }\n+        }\n+\n+        [Fact]\n+        public void GetTargetListsReturnsEmptyTargetsForAllNodesWhenDefaultTargetsAreRequestedAndThereAreNoDefaultTargets()",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "The project file has no targets. Added a comment on it.",
              "createdAt": "2019-08-09T18:12:00Z",
              "path": "src/Build.UnitTests/Graph/ProjectGraph_Tests.cs",
              "diffHunk": "@@ -764,6 +764,47 @@ public void GetTargetsListsShouldApplyDefaultTargetsOnlyToGraphRoots()\n             }\n         }\n \n+        [Fact]\n+        public void GetTargetsListReturnsEmptyTargetsForNodeIfNoTargetsPropagatedToIt()\n+        {\n+            using (var env = TestEnvironment.Create())\n+            {\n+                TransientTestFile entryProject = CreateProjectFile(env: env, projectNumber: 1, projectReferences: new[] { 2 }, projectReferenceTargets: new Dictionary<string, string[]> { { \"A\", new []{ \"B\" }} }, defaultTargets: \"A\");\n+                CreateProjectFile(env: env, projectNumber: 2);\n+\n+                var projectGraph = new ProjectGraph(entryProject.Path);\n+                projectGraph.ProjectNodes.Count.ShouldBe(2);\n+\n+                IReadOnlyDictionary<ProjectGraphNode, ImmutableList<string>> targetLists = projectGraph.GetTargetLists(new []{ \"Foo\" });\n+                targetLists.Count.ShouldBe(projectGraph.ProjectNodes.Count);\n+                targetLists[GetFirstNodeWithProjectNumber(projectGraph, 1)].ShouldBe(new []{ \"Foo\" });\n+                targetLists[GetFirstNodeWithProjectNumber(projectGraph, 2)].ShouldBeEmpty();\n+            }\n+        }\n+\n+        [Fact]\n+        public void GetTargetListsReturnsEmptyTargetsForAllNodesWhenDefaultTargetsAreRequestedAndThereAreNoDefaultTargets()",
              "author": {
                "login": "cdmihai"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Would it be possible to have more context here? Right now it just says there's a null/empty target name somewhere. How do I know where?",
              "createdAt": "2019-08-09T15:42:04Z",
              "path": "src/Build/Graph/ProjectGraph.cs",
              "diffHunk": "@@ -599,6 +606,19 @@ internal string ToDot(Func<ProjectGraphNode, string> nodeIdProvider)\n             }\n \n             return targetLists;\n+\n+            void ThrowOnEmptyTargetNames(ICollection<string> targetNames)\n+            {\n+                if (targetNames == null || targetNames.Count == 0)\n+                {\n+                    return;\n+                }\n+\n+                if (targetNames.Any(targetName => string.IsNullOrWhiteSpace(targetName)))\n+                {\n+                    throw new ArgumentException(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(\"OM_TargetNameNullOrEmpty\"));",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Is this enough context? I was thinking more along the lines of \"what project caused this error?\"",
              "createdAt": "2019-08-09T18:47:58Z",
              "path": "src/Build/Graph/ProjectGraph.cs",
              "diffHunk": "@@ -597,6 +606,19 @@ internal string ToDot(Func<ProjectGraphNode, string> nodeIdProvider)\n             }\n \n             return targetLists;\n+\n+            void ThrowOnEmptyTargetNames(ICollection<string> targetNames)\n+            {\n+                if (targetNames == null || targetNames.Count == 0)\n+                {\n+                    return;\n+                }\n+\n+                if (targetNames.Any(targetName => string.IsNullOrWhiteSpace(targetName)))\n+                {\n+                    throw new ArgumentException(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(\"OM_TargetNameNullOrEmpty\", nameof(GetTargetLists)));",
              "author": {
                "login": "rainersigwald"
              }
            },
            {
              "body": "Ah, that's a bit harder to answer. There is no actual project here. These targets are the graph wide targets the whole graph needs to be built with. The closest thing for identification would be the set of graph roots",
              "createdAt": "2019-08-09T20:07:30Z",
              "path": "src/Build/Graph/ProjectGraph.cs",
              "diffHunk": "@@ -597,6 +606,19 @@ internal string ToDot(Func<ProjectGraphNode, string> nodeIdProvider)\n             }\n \n             return targetLists;\n+\n+            void ThrowOnEmptyTargetNames(ICollection<string> targetNames)\n+            {\n+                if (targetNames == null || targetNames.Count == 0)\n+                {\n+                    return;\n+                }\n+\n+                if (targetNames.Any(targetName => string.IsNullOrWhiteSpace(targetName)))\n+                {\n+                    throw new ArgumentException(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(\"OM_TargetNameNullOrEmpty\", nameof(GetTargetLists)));",
              "author": {
                "login": "cdmihai"
              }
            }
          ]
        }
      }
    ]
  }
}