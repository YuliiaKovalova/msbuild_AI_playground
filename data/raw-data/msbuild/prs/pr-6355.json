{
  "number": 6355,
  "title": "Added EnsurePathisSingleQuoted and related unit tests",
  "body": "Fixes #5884\r\n### Context\r\nWanted EnsurePathIsSingleQuoted method created to check for single quotes \r\n\r\n### Changes Made\r\nCreated EnsurePathIsSingleQuoted method, made changes to TrimAndStripAnyQuotes to incoporporate the new method\r\n\r\n### Testing\r\nAdded Four unit tests to test for double quotes, test for single quotes and to test that stripping works on both effectively\r\n\r\n### Notes\r\nThis was part of a hackathon with columbus state community college via Manifest Solutions.  @habibmohammed",
  "state": "CLOSED",
  "createdAt": "2021-04-17T19:12:16Z",
  "updatedAt": "2023-01-12T22:08:36Z",
  "closedAt": "2021-06-28T15:18:58Z",
  "mergedAt": null,
  "additions": 63,
  "deletions": 11,
  "changedFiles": 3,
  "headRefName": "main",
  "isDraft": false,
  "author": {
    "login": "scarinu10"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "0848e0fc04435e9096d9e67a2deef31438bef834",
          "message": "Added EnsurePathisSingleQuoted and related unit tests",
          "committedDate": "2021-04-17T18:47:04Z",
          "author": {
            "name": "Nicholas Rigsby",
            "email": "nicholas.rigsby@student.cscc.edu"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=6355) <br/>All CLA requirements met.",
        "createdAt": "2021-04-17T19:12:28Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "[![CLA assistant check](https://cla.dotnetfoundation.org/pull/badge/not_signed)](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=6355) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=6355) before we can accept your contribution.<br/><br/>:x: scarinu10 [sign now](https://cla.dotnetfoundation.org/dotnet/msbuild?pullRequest=6355)<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla.dotnetfoundation.org/check/dotnet/msbuild?pullRequest=6355) it.</sub>",
        "createdAt": "2021-04-17T19:12:29Z",
        "author": {
          "login": "dnfadmin"
        }
      },
      {
        "body": "@Forgind  Going to get this squared away middle of this week.  Sorry for the little mistakes, first time contributing ever.  The issue card was a bit obscure I felt, me, my partner and a lead with the company we were working with were trying to decrypt the issue and make things right. I'll push again soon!\r\n\r\nThanks for the awesome feedback!",
        "createdAt": "2021-04-19T22:34:57Z",
        "author": {
          "login": "scarinu10"
        }
      },
      {
        "body": "@scarinu10 All good! Mistakes are part of learning. You should see how far off my first pull requests were.\r\n\r\nYeah; we try for clarity but clearly miss sometimes. Sorry about that.",
        "createdAt": "2021-04-20T20:55:58Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Any recent progress on this? Would be nice to finish it or close it until you're ready to come back to it.",
        "createdAt": "2021-06-01T21:10:02Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "No, no recent progress.  Sorry have had a ton going on and let this fall by the wayside.  Finals. Life stuff.  New job.  I'm glad you sent me a notification.  I'm gonna review everything tomorrow evening and look to re-engage in the coming days.  Sorry for the inconvenience.\nThanks\n\nSent from my Verizon, Samsung Galaxy smartphone\nGet Outlook for Android<https://aka.ms/AAb9ysg>\n________________________________\nFrom: Forgind ***@***.***>\nSent: Tuesday, June 1, 2021 5:10:16 PM\nTo: dotnet/msbuild ***@***.***>\nCc: Nicholas Rigsby ***@***.***>; Mention ***@***.***>\nSubject: [EXTERNAL] Re: [dotnet/msbuild] Added EnsurePathisSingleQuoted and related unit tests (#6355)\n\n\nColumbus State Information Security Warning: This is an external email. Do not click on links or open attachments unless you trust the sender.\n\n________________________________\n\n\nAny recent progress on this? Would be nice to finish it or close it until you're ready to come back to it.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fmsbuild%2Fpull%2F6355%23issuecomment-852446943&data=04%7C01%7Cnrigsby%40student.cscc.edu%7C764217ffd31e4e04fb6a08d92541a7f4%7Cffa1db08d129474b92feae219e4319a3%7C0%7C0%7C637581786194827089%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=jPTYi9Gf3zw1Orja0IcuJ7YDyAXTXBVoWyev1qRp1t0%3D&reserved=0>, or unsubscribe<https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAROT3ZB3AG3FUDAPPETFWHLTQVEDRANCNFSM43DLZUMA&data=04%7C01%7Cnrigsby%40student.cscc.edu%7C764217ffd31e4e04fb6a08d92541a7f4%7Cffa1db08d129474b92feae219e4319a3%7C0%7C0%7C637581786194827089%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=8Dsez6M%2Fc66wG1Mz2OqmAuDwi58FAi9THrIRivatK5g%3D&reserved=0>.\n",
        "createdAt": "2021-06-02T02:09:38Z",
        "author": {
          "login": "scarinu10"
        }
      },
      {
        "body": "Team triage: We're still interested but we'd like to close this since it's not actively being worked on. If you get back to it please let us know and we can reopen it. Thanks for taking a look!",
        "createdAt": "2021-06-28T15:18:58Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I wouldn't bother with modifying this version. It isn't really used.",
              "createdAt": "2021-04-18T14:46:45Z",
              "path": "src/Deprecated/Engine/Shared/FileUtilities.cs",
              "diffHunk": "@@ -19,6 +19,13 @@ namespace Microsoft.Build.BuildEngine.Shared\n     /// <owner>SumedhK</owner>\n     static internal class FileUtilities\n     {\n+        internal static bool EnsurePathIsSingleQuoted(string path)\n+        {",
              "author": {
                "login": "Forgind"
              }
            },
            {
              "body": "Shoot.  Yeah I meant to wipe that out.  We were having a issue with accessing the method we created and we were spitballing on why.  And we added this to deprecated.  Thought it might have had something to do with it being a partial class.  ",
              "createdAt": "2021-04-18T15:01:04Z",
              "path": "src/Deprecated/Engine/Shared/FileUtilities.cs",
              "diffHunk": "@@ -19,6 +19,13 @@ namespace Microsoft.Build.BuildEngine.Shared\n     /// <owner>SumedhK</owner>\n     static internal class FileUtilities\n     {\n+        internal static bool EnsurePathIsSingleQuoted(string path)\n+        {",
              "author": {
                "login": "scarinu10"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: remove extra part of comment",
              "createdAt": "2021-04-18T14:47:03Z",
              "path": "src/Shared/FileUtilities.cs",
              "diffHunk": "@@ -59,6 +59,8 @@ internal static void ClearCacheDirectoryPath()\n         /// Determines whether the file system is case sensitive.\n         /// Copied from https://github.com/dotnet/runtime/blob/73ba11f3015216b39cb866d9fb7d3d25e93489f2/src/libraries/Common/src/System/IO/PathInternal.CaseSensitivity.cs#L41-L59\n         /// </summary>\n+        ///",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "The idea behind this was to not just check if `path` has a single quote as its first and last character but, if it does not, return path with an added quote on either end. So the return type should be string.",
              "createdAt": "2021-04-18T14:48:21Z",
              "path": "src/Shared/FileUtilities.cs",
              "diffHunk": "@@ -266,12 +268,26 @@ internal static bool IsSlash(char c)\n         /// <summary>\n         /// Trims the string and removes any double quotes around it.\n         /// </summary>\n-        internal static string TrimAndStripAnyQuotes(string path)\n+        ///\n+        public static bool EnsurePathIsSingleQuoted(string path)\n         {\n-            // Trim returns the same string if trimming isn't needed\n-            path = path.Trim();\n-            path = path.Trim(new char[] { '\"' });\n+            int endId = path.Length - 1;",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "TrimAndStripAnyQuotes explicitly removes double quotes but not single quotes, although that's a little confusing from the name. Going with your version for a moment, this would fail if there are single quotes on one side but not the other or if there is a mix of single and double quotes on the ends.",
              "createdAt": "2021-04-18T14:51:50Z",
              "path": "src/Shared/FileUtilities.cs",
              "diffHunk": "@@ -266,12 +268,26 @@ internal static bool IsSlash(char c)\n         /// <summary>\n         /// Trims the string and removes any double quotes around it.\n         /// </summary>\n-        internal static string TrimAndStripAnyQuotes(string path)\n+        ///\n+        public static bool EnsurePathIsSingleQuoted(string path)\n         {\n-            // Trim returns the same string if trimming isn't needed\n-            path = path.Trim();\n-            path = path.Trim(new char[] { '\"' });\n+            int endId = path.Length - 1;\n+            char singleQuote = '\\'';\n \n+            return path[0] == singleQuote && path[endId] == singleQuote;\n+        }\n+        internal static string TrimAndStripAnyQuotes(string path)\n+        {\n+            \n+            if (EnsurePathIsSingleQuoted(path))",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit:\r\nPlease make sure comments follow code.",
              "createdAt": "2021-04-18T14:52:23Z",
              "path": "src/Shared/FileUtilities.cs",
              "diffHunk": "@@ -266,12 +268,26 @@ internal static bool IsSlash(char c)\n         /// <summary>\n         /// Trims the string and removes any double quotes around it.\n         /// </summary>\n-        internal static string TrimAndStripAnyQuotes(string path)\n+        ///",
              "author": {
                "login": "Forgind"
              }
            }
          ]
        }
      }
    ]
  }
}