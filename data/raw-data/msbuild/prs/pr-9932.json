{
  "number": 9932,
  "title": "[release/vs17.3] Onboard 1es templates",
  "body": "### Context\r\nApply 1es templates, update arcade for the servicing branch and disable opt prof steps.\r\n\r\nOpt profs steps were commented in this file:\r\n[.vsts-dotnet.yml](https://github.com/dotnet/msbuild/blob/e38b43593b370d924e10c2021b06b4274dff4657/.vsts-dotnet.yml)\r\nin order to spot the affected sections, search for \"# OptProf is not needed because this packaged will not be serviced in VS.\" comment (~lines 134-140 and 174-215)\r\nIt was agreed to do that because the optimized bits are used for VS insertion only and no servicing is planned for vs17.3.\r\nRun the internal pipeline with **SkipApplyOptimizationData=true**.\r\n\r\n### Test run\r\nhttps://tfsprodwus2su6.visualstudio.com/A011b8bdf-6d56-4f87-be0d-0092136884d9/DevDiv/_build/results?buildId=9309875&view=results",
  "state": "MERGED",
  "createdAt": "2024-03-27T10:11:01Z",
  "updatedAt": "2024-03-28T13:45:10Z",
  "closedAt": "2024-03-28T13:45:10Z",
  "mergedAt": "2024-03-28T13:45:10Z",
  "additions": 2073,
  "deletions": 334,
  "changedFiles": 43,
  "headRefName": "dev/ykovalova/1es_templates_vs17.3",
  "isDraft": false,
  "author": {
    "login": "YuliiaKovalova"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "64a05e70c9c0a021a2d13581cbdba4705139076b",
          "message": "update arcade",
          "committedDate": "2024-03-26T15:40:24Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "08496c24a4241c25831d541ebf05a2a48ace3d80",
          "message": "onboard 1es templates",
          "committedDate": "2024-03-26T15:40:52Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "f654dd06d63cdb86622490b4d55a0a1b758122cd",
          "message": "update arcade",
          "committedDate": "2024-03-27T10:06:33Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "d920c15687d673235868337f2e72f25d66b06ef1",
          "message": "update pool",
          "committedDate": "2024-03-27T10:07:09Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c79640b15e44050777a3a27e58b7946edd1da18d",
          "message": "apply changes to cibuild_bootstrapped_msbuild script to unlock Windows tests run",
          "committedDate": "2024-03-27T10:24:48Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e38b43593b370d924e10c2021b06b4274dff4657",
          "message": "fix review comments",
          "committedDate": "2024-03-27T13:32:32Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "ykovalova@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "0dfdcf970ec000749b9b7d62decfd5748a0bd83d",
          "message": "fix review comments",
          "committedDate": "2024-03-27T20:01:19Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "e84376bd7623c55c4916ed3cdeeef45a2798eefd",
          "message": "Apply suggestions from code review\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-03-27T20:02:57Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "ae524aababc651720996369b5376edff145af820",
          "message": "Update comment\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-03-27T20:03:45Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      },
      {
        "commit": {
          "oid": "5645138ac7bf1cb49a633b4bc7d24cf7916fee26",
          "message": "Update comment\n\nCo-authored-by: Rainer Sigwald <raines@microsoft.com>",
          "committedDate": "2024-03-27T20:03:54Z",
          "author": {
            "name": "YuliiaKovalova",
            "email": "95473390+YuliiaKovalova@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "How much of this can actually flow via codeflow from 17.0 after https://github.com/dotnet/msbuild/pull/9931 is merged?\r\n\r\nI'm trying to see what needs to be reviewed",
        "createdAt": "2024-03-27T11:19:48Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> How much of this can actually flow via codeflow from 17.0 after #9931 is merged?\r\n> \r\n> I'm trying to see what needs to be reviewed\r\n\r\nthe pipelines are different between these versions, so it was much easier to split this effort :)",
        "createdAt": "2024-03-27T11:33:39Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: Typo \"rests\".",
              "createdAt": "2024-03-27T12:57:29Z",
              "path": "eng/cibuild_bootstrapped_msbuild.ps1",
              "diffHunk": "@@ -64,7 +64,15 @@ try {\n \n   if ($buildStage1)\n   {\n-    & $PSScriptRoot\\Common\\Build.ps1 -restore -build -ci -msbuildEngine $msbuildEngine /p:CreateBootstrap=true @properties\n+    # Run rests on Full Framework instead of the commented code below. ",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: This looks unnecessary. Is it done just for consistency with main?",
              "createdAt": "2024-03-27T13:03:15Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -2,6 +2,7 @@ trigger:\n - main\n - vs*\n - exp/*\n+- perf/*",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this be true for these old branches?",
              "createdAt": "2024-03-27T17:33:03Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -36,235 +36,303 @@ variables:\n     value: .NETCore\n   - name: _DotNetValidationArtifactsCategory\n     value: .NETCoreValidation\n+  - name: EnableReleaseOneLocBuild\n+    value: true",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Should this not stay `17.3`?",
              "createdAt": "2024-03-27T17:34:33Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -36,235 +36,303 @@ variables:\n     value: .NETCore\n   - name: _DotNetValidationArtifactsCategory\n     value: .NETCoreValidation\n+  - name: EnableReleaseOneLocBuild\n+    value: true\n+  - name: Codeql.Enabled\n+    value: true\n+  - group: DotNet-MSBuild-SDLValidation-Params\n \n-stages:\n-- stage: build\n-  displayName: Build\n+resources:\n+  repositories:\n+  - repository: 1ESPipelineTemplates\n+    type: git\n+    name: 1ESPipelineTemplates/1ESPipelineTemplates\n \n-  jobs:\n-  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/vs17.3') }}: # should track next-release's active dev branch\n-    - template: /eng/common/templates/job/onelocbuild.yml\n-      parameters:\n-        LclSource: lclFilesfromPackage\n-        LclPackageId: 'LCL-JUNO-PROD-MSBUILD'\n-        MirrorRepo: 'msbuild'\n-        MirrorBranch: 'main' # should match condition above\n-\n-  - job: Windows_NT\n+extends:\n+  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates\n+  parameters:\n+    featureFlags:\n+      autoBaseline: true\n     pool:\n       name: VSEngSS-MicroBuild2022-1ES\n-      demands:\n-      - agent.os -equals Windows_NT\n-\n-    timeoutInMinutes: 180\n-\n-    variables:\n-    - group: DotNet-Blob-Feed\n-    - group: DotNet-Symbol-Publish\n-    - group: Publish-Build-Assets\n-    - name: TeamName\n-      value: MSBuild\n-    - name: VisualStudio.MajorVersion\n-      value: 17\n-    - name: VisualStudio.ChannelName\n-      value: 'int.d17.3'\n-    - name: VisualStudio.DropName\n-      value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)\n-\n-    steps:\n-    - task: NuGetToolInstaller@0\n-      inputs:\n-        versionSpec: '4.9.2'\n-\n-    - task: NuGetCommand@2\n-      displayName: Restore internal tools\n-      inputs:\n-        command: restore\n-        feedsToUse: config\n-        restoreSolution: 'eng\\common\\internal\\Tools.csproj'\n-        nugetConfigPath: 'NuGet.config'\n-        restoreDirectory: '$(Build.SourcesDirectory)\\.packages'\n-\n-    - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n-      inputs:\n-        signType: $(SignType)\n-        zipSources: false\n-      condition: and(succeeded(), in(variables['SignType'], 'test', 'real'))\n-\n-    - task: MicroBuildOptProfPlugin@6\n-      inputs:\n-        ProfilingInputsDropName: '$(VisualStudio.DropName)'\n-        ShouldSkipOptimize: true\n-        AccessToken: '$(System.AccessToken)'\n-        feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'\n-      displayName: 'Install OptProf Plugin'\n-\n-    # Required by MicroBuildBuildVSBootstrapper\n-    - task: MicroBuildSwixPlugin@4\n-      inputs:\n-        dropName: $(VisualStudio.DropName)\n-\n-    - script: eng/CIBuild.cmd\n-                -configuration $(BuildConfiguration)\n-                -officialBuildId $(Build.BuildNumber)\n-                -officialSkipApplyOptimizationData $(SkipApplyOptimizationData)\n-                /p:RepositoryName=$(Build.Repository.Name)\n-                /p:VisualStudioIbcSourceBranchName=$(SourceBranch)\n-                /p:VisualStudioDropAccessToken=$(System.AccessToken)\n-                /p:VisualStudioDropName=$(VisualStudio.DropName)\n-                /p:DotNetSignType=$(SignType)\n-                /p:DotNetPublishToBlobFeed=true\n-                /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)\n-                /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\n-                /p:PublishToSymbolServer=true\n-                /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)\n-                /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)\n-                /p:TeamName=MSBuild\n-                /p:DotNetPublishUsingPipelines=true\n-                /p:VisualStudioIbcDrop=$(OptProfDrop)\n+      os: windows\n+    sdl:\n+      # We generate SBOM ourselves, so don't need steps injected by 1ES.\n+      sbom:\n+        enabled: false\n+\n+    stages:\n+    - stage: build\n       displayName: Build\n-      condition: succeeded()\n-\n-    # Required by Microsoft policy\n-    - template: eng\\common\\templates\\steps\\generate-sbom.yml\n-\n-    # Publish OptProf configuration files\n-    - task: ms-vscs-artifact.build-tasks.artifactDropTask-1.artifactDropTask@0\n-      inputs:\n-        dropServiceURI: 'https://devdiv.artifacts.visualstudio.com'\n-        buildNumber: 'ProfilingInputs/DevDiv/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)'\n-        sourcePath: '$(Build.SourcesDirectory)\\artifacts\\OptProf\\$(BuildConfiguration)\\Data'\n-        toLowerCase: false\n-        usePat: true\n-      displayName: 'OptProf - Publish to Artifact Services - ProfilingInputs'\n-      condition: succeeded()\n-\n-    # Build VS bootstrapper\n-    # Generates $(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n-    - task: MicroBuildBuildVSBootstrapper@2\n-      inputs:\n-        vsMajorVersion: $(VisualStudio.MajorVersion)\n-        channelName: $(VisualStudio.ChannelName)\n-        manifests: $(VisualStudio.SetupManifestList)\n-        outputFolder: '$(Build.SourcesDirectory)\\artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n-        bootstrapperCoreVersion: \n-      displayName: 'OptProf - Build VS bootstrapper'\n-      condition: succeeded()\n-\n-    # Publish run settings\n-    - task: PowerShell@2\n-      inputs:\n-        filePath: eng\\common\\sdk-task.ps1\n-        arguments: -configuration $(BuildConfiguration)\n-                  -task VisualStudio.BuildIbcTrainingSettings\n-                  /p:VisualStudioDropName=$(VisualStudio.DropName)\n-                  /p:BootstrapperInfoPath=$(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n-      displayName: 'OptProf - Build IBC training settings'\n-      condition: succeeded()\n-\n-    # Publish bootstrapper info\n-    - task: PublishBuildArtifacts@1\n-      inputs:\n-        PathtoPublish: $(Build.StagingDirectory)\\MicroBuild\\Output\n-        ArtifactName: MicroBuildOutputs\n-        ArtifactType: Container\n-      displayName: 'OptProf - Publish Artifact: MicroBuildOutputs'\n-      condition: succeeded()\n-\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: logs'\n-      inputs:\n-        PathtoPublish: 'artifacts\\log\\$(BuildConfiguration)'\n-        ArtifactName: logs\n-      condition: succeededOrFailed()\n-\n-    - task: PublishPipelineArtifact@1\n-      displayName: 'Publish Artifact: bin'\n-      inputs:\n-        path: 'artifacts\\bin'\n-        artifactName: bin\n-      condition: succeededOrFailed()\n-\n-    # Publishes setup VSIXes to a drop.\n-    # Note: The insertion tool looks for the display name of this task in the logs.\n-    - task: MicroBuildUploadVstsDropFolder@2\n-      displayName: Upload VSTS Drop\n-      inputs:\n-        DropName: $(VisualStudio.DropName)\n-        DropFolder: 'artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n-        AccessToken: '$(System.AccessToken)'\n-        DropServiceUri: 'https://devdiv.artifacts.visualstudio.com'\n-        VSDropServiceUri: 'https://vsdrop.corp.microsoft.com/file/v1'\n-      condition: succeeded()\n-\n-    # Publish an artifact that the RoslynInsertionTool is able to find by its name.\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: VSSetup'\n-      inputs:\n-        PathtoPublish: 'artifacts\\VSSetup\\$(BuildConfiguration)'\n-        ArtifactName: VSSetup\n-      condition: succeeded()\n-\n-    # Archive NuGet packages to DevOps.\n-    # Publish our NuPkgs as an artifact. The name of this artifact must be PackageArtifacts as the\n-    # arcade templates depend on the name.\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: packages'\n-      inputs:\n-        PathtoPublish: 'artifacts\\packages\\$(BuildConfiguration)'\n-        ArtifactName: PackageArtifacts\n-      condition: succeeded()\n-\n-    # Publish \"IntelliSense\" XSD files to their own artifact\n-    # so it can be consumed by the insertion-to-VS job\n-    - task: PublishPipelineArtifact@1\n-      displayName: 'Publish Artifact: xsd'\n-      inputs:\n-        path: 'artifacts\\xsd'\n-        artifactName: xsd\n-      condition: succeeded()\n-\n-    # Publish Asset Manifests for Build Asset Registry job\n-    - task: PublishBuildArtifacts@1\n-      displayName: Publish Asset Manifests\n-      inputs:\n-        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(BuildConfiguration)/AssetManifest'\n-        ArtifactName: AssetManifests\n-      condition: succeeded()\n-\n-    # Tag the build at the very end when we know it's been successful.\n-    - task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0\n-      displayName: Tag build as ready for optimization training\n-      inputs:\n-        tags: 'ready-for-training'\n-      condition: succeeded()\n-\n-    - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1\n-      displayName: Execute cleanup tasks\n-      condition: succeededOrFailed()\n-\n-  - template: /eng/common/templates/job/source-build.yml\n-    parameters:\n-      platform:\n-        name: 'Managed'\n-        container: 'mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-3e800f1-20190501005343'\n-\n-  - template: /eng/common/templates/job/publish-build-assets.yml\n-    parameters:\n-      enablePublishBuildArtifacts: true\n-      publishUsingPipelines: true\n-      dependsOn:\n-        - Windows_NT\n-        - Source_Build_Managed\n-      pool:\n-        vmImage: windows-latest\n-\n-- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:\n-  - template: eng\\common\\templates\\post-build\\post-build.yml\n-    parameters:\n-      publishingInfraVersion: 3\n-      # Symbol validation is not entirely reliable as of yet, so should be turned off until\n-      # https://github.com/dotnet/arcade/issues/2871 is resolved.\n-      enableSymbolValidation: false\n-      enableSourceLinkValidation: false\n-      enableNugetValidation: false\n+\n+      jobs:\n+      # The localization setup for release/ branches. Note difference in LclPackageId. main branch is handled separately below.\n+      # Used for vs17.2, vs17.4, vs17.6 etc. branches only.\n+      # When the branch is setup for localization (the localization ticket needs to be created - https://aka.ms/ceChangeLocConfig, requesting change from one release branch to another),\n+      #  set 'EnableReleaseOneLocBuild' to true.\n+      - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/vs') }}:\n+        - template: /eng/common/templates-official/job/onelocbuild.yml@self\n+          parameters:\n+            MirrorRepo: 'msbuild'\n+            LclSource: lclFilesfromPackage\n+            LclPackageId: 'LCL-JUNO-PROD-MSBUILDREL'\n+            MirrorBranch: ${{ replace(variables['Build.SourceBranch'], 'refs/heads/', '') }}\n+            JobNameSuffix: '_release'\n+            condition: ${{ variables.EnableReleaseOneLocBuild }}\n+      # The localization setup for main branch. Note difference in package ID. Should not be used with release/ branches.\n+      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:\n+        - template: /eng/common/templates-official/job/onelocbuild.yml@self\n+          parameters:\n+            MirrorRepo: 'msbuild'\n+            LclSource: lclFilesfromPackage\n+            LclPackageId: 'LCL-JUNO-PROD-MSBUILD'\n+            MirrorBranch: 'main'\n+            JobNameSuffix: '_main'\n+            condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n+\n+      - job: Windows_NT\n+        pool:\n+          name: VSEngSS-MicroBuild2022-1ES\n+          demands:\n+          - agent.os -equals Windows_NT\n+\n+        timeoutInMinutes: 180\n+\n+        variables:\n+        - group: DotNet-Blob-Feed\n+        - group: DotNet-Symbol-Publish\n+        - group: Publish-Build-Assets\n+        - name: TeamName\n+          value: MSBuild\n+        - name: VisualStudio.MajorVersion\n+          value: 17\n+        - name: VisualStudio.ChannelName\n+          value: 'int.main'",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        # OptProf is not needed because 17.3 will not be serviced in VS.\r\n```",
              "createdAt": "2024-03-27T17:34:56Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -36,235 +36,303 @@ variables:\n     value: .NETCore\n   - name: _DotNetValidationArtifactsCategory\n     value: .NETCoreValidation\n+  - name: EnableReleaseOneLocBuild\n+    value: true\n+  - name: Codeql.Enabled\n+    value: true\n+  - group: DotNet-MSBuild-SDLValidation-Params\n \n-stages:\n-- stage: build\n-  displayName: Build\n+resources:\n+  repositories:\n+  - repository: 1ESPipelineTemplates\n+    type: git\n+    name: 1ESPipelineTemplates/1ESPipelineTemplates\n \n-  jobs:\n-  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/vs17.3') }}: # should track next-release's active dev branch\n-    - template: /eng/common/templates/job/onelocbuild.yml\n-      parameters:\n-        LclSource: lclFilesfromPackage\n-        LclPackageId: 'LCL-JUNO-PROD-MSBUILD'\n-        MirrorRepo: 'msbuild'\n-        MirrorBranch: 'main' # should match condition above\n-\n-  - job: Windows_NT\n+extends:\n+  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates\n+  parameters:\n+    featureFlags:\n+      autoBaseline: true\n     pool:\n       name: VSEngSS-MicroBuild2022-1ES\n-      demands:\n-      - agent.os -equals Windows_NT\n-\n-    timeoutInMinutes: 180\n-\n-    variables:\n-    - group: DotNet-Blob-Feed\n-    - group: DotNet-Symbol-Publish\n-    - group: Publish-Build-Assets\n-    - name: TeamName\n-      value: MSBuild\n-    - name: VisualStudio.MajorVersion\n-      value: 17\n-    - name: VisualStudio.ChannelName\n-      value: 'int.d17.3'\n-    - name: VisualStudio.DropName\n-      value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)\n-\n-    steps:\n-    - task: NuGetToolInstaller@0\n-      inputs:\n-        versionSpec: '4.9.2'\n-\n-    - task: NuGetCommand@2\n-      displayName: Restore internal tools\n-      inputs:\n-        command: restore\n-        feedsToUse: config\n-        restoreSolution: 'eng\\common\\internal\\Tools.csproj'\n-        nugetConfigPath: 'NuGet.config'\n-        restoreDirectory: '$(Build.SourcesDirectory)\\.packages'\n-\n-    - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n-      inputs:\n-        signType: $(SignType)\n-        zipSources: false\n-      condition: and(succeeded(), in(variables['SignType'], 'test', 'real'))\n-\n-    - task: MicroBuildOptProfPlugin@6\n-      inputs:\n-        ProfilingInputsDropName: '$(VisualStudio.DropName)'\n-        ShouldSkipOptimize: true\n-        AccessToken: '$(System.AccessToken)'\n-        feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'\n-      displayName: 'Install OptProf Plugin'\n-\n-    # Required by MicroBuildBuildVSBootstrapper\n-    - task: MicroBuildSwixPlugin@4\n-      inputs:\n-        dropName: $(VisualStudio.DropName)\n-\n-    - script: eng/CIBuild.cmd\n-                -configuration $(BuildConfiguration)\n-                -officialBuildId $(Build.BuildNumber)\n-                -officialSkipApplyOptimizationData $(SkipApplyOptimizationData)\n-                /p:RepositoryName=$(Build.Repository.Name)\n-                /p:VisualStudioIbcSourceBranchName=$(SourceBranch)\n-                /p:VisualStudioDropAccessToken=$(System.AccessToken)\n-                /p:VisualStudioDropName=$(VisualStudio.DropName)\n-                /p:DotNetSignType=$(SignType)\n-                /p:DotNetPublishToBlobFeed=true\n-                /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)\n-                /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\n-                /p:PublishToSymbolServer=true\n-                /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)\n-                /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)\n-                /p:TeamName=MSBuild\n-                /p:DotNetPublishUsingPipelines=true\n-                /p:VisualStudioIbcDrop=$(OptProfDrop)\n+      os: windows\n+    sdl:\n+      # We generate SBOM ourselves, so don't need steps injected by 1ES.\n+      sbom:\n+        enabled: false\n+\n+    stages:\n+    - stage: build\n       displayName: Build\n-      condition: succeeded()\n-\n-    # Required by Microsoft policy\n-    - template: eng\\common\\templates\\steps\\generate-sbom.yml\n-\n-    # Publish OptProf configuration files\n-    - task: ms-vscs-artifact.build-tasks.artifactDropTask-1.artifactDropTask@0\n-      inputs:\n-        dropServiceURI: 'https://devdiv.artifacts.visualstudio.com'\n-        buildNumber: 'ProfilingInputs/DevDiv/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)'\n-        sourcePath: '$(Build.SourcesDirectory)\\artifacts\\OptProf\\$(BuildConfiguration)\\Data'\n-        toLowerCase: false\n-        usePat: true\n-      displayName: 'OptProf - Publish to Artifact Services - ProfilingInputs'\n-      condition: succeeded()\n-\n-    # Build VS bootstrapper\n-    # Generates $(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n-    - task: MicroBuildBuildVSBootstrapper@2\n-      inputs:\n-        vsMajorVersion: $(VisualStudio.MajorVersion)\n-        channelName: $(VisualStudio.ChannelName)\n-        manifests: $(VisualStudio.SetupManifestList)\n-        outputFolder: '$(Build.SourcesDirectory)\\artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n-        bootstrapperCoreVersion: \n-      displayName: 'OptProf - Build VS bootstrapper'\n-      condition: succeeded()\n-\n-    # Publish run settings\n-    - task: PowerShell@2\n-      inputs:\n-        filePath: eng\\common\\sdk-task.ps1\n-        arguments: -configuration $(BuildConfiguration)\n-                  -task VisualStudio.BuildIbcTrainingSettings\n-                  /p:VisualStudioDropName=$(VisualStudio.DropName)\n-                  /p:BootstrapperInfoPath=$(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n-      displayName: 'OptProf - Build IBC training settings'\n-      condition: succeeded()\n-\n-    # Publish bootstrapper info\n-    - task: PublishBuildArtifacts@1\n-      inputs:\n-        PathtoPublish: $(Build.StagingDirectory)\\MicroBuild\\Output\n-        ArtifactName: MicroBuildOutputs\n-        ArtifactType: Container\n-      displayName: 'OptProf - Publish Artifact: MicroBuildOutputs'\n-      condition: succeeded()\n-\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: logs'\n-      inputs:\n-        PathtoPublish: 'artifacts\\log\\$(BuildConfiguration)'\n-        ArtifactName: logs\n-      condition: succeededOrFailed()\n-\n-    - task: PublishPipelineArtifact@1\n-      displayName: 'Publish Artifact: bin'\n-      inputs:\n-        path: 'artifacts\\bin'\n-        artifactName: bin\n-      condition: succeededOrFailed()\n-\n-    # Publishes setup VSIXes to a drop.\n-    # Note: The insertion tool looks for the display name of this task in the logs.\n-    - task: MicroBuildUploadVstsDropFolder@2\n-      displayName: Upload VSTS Drop\n-      inputs:\n-        DropName: $(VisualStudio.DropName)\n-        DropFolder: 'artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n-        AccessToken: '$(System.AccessToken)'\n-        DropServiceUri: 'https://devdiv.artifacts.visualstudio.com'\n-        VSDropServiceUri: 'https://vsdrop.corp.microsoft.com/file/v1'\n-      condition: succeeded()\n-\n-    # Publish an artifact that the RoslynInsertionTool is able to find by its name.\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: VSSetup'\n-      inputs:\n-        PathtoPublish: 'artifacts\\VSSetup\\$(BuildConfiguration)'\n-        ArtifactName: VSSetup\n-      condition: succeeded()\n-\n-    # Archive NuGet packages to DevOps.\n-    # Publish our NuPkgs as an artifact. The name of this artifact must be PackageArtifacts as the\n-    # arcade templates depend on the name.\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: packages'\n-      inputs:\n-        PathtoPublish: 'artifacts\\packages\\$(BuildConfiguration)'\n-        ArtifactName: PackageArtifacts\n-      condition: succeeded()\n-\n-    # Publish \"IntelliSense\" XSD files to their own artifact\n-    # so it can be consumed by the insertion-to-VS job\n-    - task: PublishPipelineArtifact@1\n-      displayName: 'Publish Artifact: xsd'\n-      inputs:\n-        path: 'artifacts\\xsd'\n-        artifactName: xsd\n-      condition: succeeded()\n-\n-    # Publish Asset Manifests for Build Asset Registry job\n-    - task: PublishBuildArtifacts@1\n-      displayName: Publish Asset Manifests\n-      inputs:\n-        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(BuildConfiguration)/AssetManifest'\n-        ArtifactName: AssetManifests\n-      condition: succeeded()\n-\n-    # Tag the build at the very end when we know it's been successful.\n-    - task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0\n-      displayName: Tag build as ready for optimization training\n-      inputs:\n-        tags: 'ready-for-training'\n-      condition: succeeded()\n-\n-    - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1\n-      displayName: Execute cleanup tasks\n-      condition: succeededOrFailed()\n-\n-  - template: /eng/common/templates/job/source-build.yml\n-    parameters:\n-      platform:\n-        name: 'Managed'\n-        container: 'mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-3e800f1-20190501005343'\n-\n-  - template: /eng/common/templates/job/publish-build-assets.yml\n-    parameters:\n-      enablePublishBuildArtifacts: true\n-      publishUsingPipelines: true\n-      dependsOn:\n-        - Windows_NT\n-        - Source_Build_Managed\n-      pool:\n-        vmImage: windows-latest\n-\n-- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:\n-  - template: eng\\common\\templates\\post-build\\post-build.yml\n-    parameters:\n-      publishingInfraVersion: 3\n-      # Symbol validation is not entirely reliable as of yet, so should be turned off until\n-      # https://github.com/dotnet/arcade/issues/2871 is resolved.\n-      enableSymbolValidation: false\n-      enableSourceLinkValidation: false\n-      enableNugetValidation: false\n+\n+      jobs:\n+      # The localization setup for release/ branches. Note difference in LclPackageId. main branch is handled separately below.\n+      # Used for vs17.2, vs17.4, vs17.6 etc. branches only.\n+      # When the branch is setup for localization (the localization ticket needs to be created - https://aka.ms/ceChangeLocConfig, requesting change from one release branch to another),\n+      #  set 'EnableReleaseOneLocBuild' to true.\n+      - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/vs') }}:\n+        - template: /eng/common/templates-official/job/onelocbuild.yml@self\n+          parameters:\n+            MirrorRepo: 'msbuild'\n+            LclSource: lclFilesfromPackage\n+            LclPackageId: 'LCL-JUNO-PROD-MSBUILDREL'\n+            MirrorBranch: ${{ replace(variables['Build.SourceBranch'], 'refs/heads/', '') }}\n+            JobNameSuffix: '_release'\n+            condition: ${{ variables.EnableReleaseOneLocBuild }}\n+      # The localization setup for main branch. Note difference in package ID. Should not be used with release/ branches.\n+      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:\n+        - template: /eng/common/templates-official/job/onelocbuild.yml@self\n+          parameters:\n+            MirrorRepo: 'msbuild'\n+            LclSource: lclFilesfromPackage\n+            LclPackageId: 'LCL-JUNO-PROD-MSBUILD'\n+            MirrorBranch: 'main'\n+            JobNameSuffix: '_main'\n+            condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n+\n+      - job: Windows_NT\n+        pool:\n+          name: VSEngSS-MicroBuild2022-1ES\n+          demands:\n+          - agent.os -equals Windows_NT\n+\n+        timeoutInMinutes: 180\n+\n+        variables:\n+        - group: DotNet-Blob-Feed\n+        - group: DotNet-Symbol-Publish\n+        - group: Publish-Build-Assets\n+        - name: TeamName\n+          value: MSBuild\n+        - name: VisualStudio.MajorVersion\n+          value: 17\n+        - name: VisualStudio.ChannelName\n+          value: 'int.main'\n+        - name: VisualStudio.DropName\n+          value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)\n+\n+        steps:\n+        - task: NuGetToolInstaller@1\n+          displayName: 'Install NuGet.exe'\n+\n+        - task: NuGetCommand@2\n+          displayName: Restore internal tools\n+          inputs:\n+            command: restore\n+            feedsToUse: config\n+            restoreSolution: 'eng\\common\\internal\\Tools.csproj'\n+            nugetConfigPath: 'NuGet.config'\n+            restoreDirectory: '$(Build.SourcesDirectory)\\.packages'\n+\n+        - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n+          inputs:\n+            signType: $(SignType)\n+            zipSources: false\n+          condition: and(succeeded(), in(variables['SignType'], 'test', 'real'))\n+\n+        # OptProf is not needed because this packaged will not be serviced in VS.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n        # OptProf is not needed because 17.3 will not be serviced in VS.\r\n```",
              "createdAt": "2024-03-27T17:35:08Z",
              "path": ".vsts-dotnet.yml",
              "diffHunk": "@@ -36,235 +36,303 @@ variables:\n     value: .NETCore\n   - name: _DotNetValidationArtifactsCategory\n     value: .NETCoreValidation\n+  - name: EnableReleaseOneLocBuild\n+    value: true\n+  - name: Codeql.Enabled\n+    value: true\n+  - group: DotNet-MSBuild-SDLValidation-Params\n \n-stages:\n-- stage: build\n-  displayName: Build\n+resources:\n+  repositories:\n+  - repository: 1ESPipelineTemplates\n+    type: git\n+    name: 1ESPipelineTemplates/1ESPipelineTemplates\n \n-  jobs:\n-  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/vs17.3') }}: # should track next-release's active dev branch\n-    - template: /eng/common/templates/job/onelocbuild.yml\n-      parameters:\n-        LclSource: lclFilesfromPackage\n-        LclPackageId: 'LCL-JUNO-PROD-MSBUILD'\n-        MirrorRepo: 'msbuild'\n-        MirrorBranch: 'main' # should match condition above\n-\n-  - job: Windows_NT\n+extends:\n+  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates\n+  parameters:\n+    featureFlags:\n+      autoBaseline: true\n     pool:\n       name: VSEngSS-MicroBuild2022-1ES\n-      demands:\n-      - agent.os -equals Windows_NT\n-\n-    timeoutInMinutes: 180\n-\n-    variables:\n-    - group: DotNet-Blob-Feed\n-    - group: DotNet-Symbol-Publish\n-    - group: Publish-Build-Assets\n-    - name: TeamName\n-      value: MSBuild\n-    - name: VisualStudio.MajorVersion\n-      value: 17\n-    - name: VisualStudio.ChannelName\n-      value: 'int.d17.3'\n-    - name: VisualStudio.DropName\n-      value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)\n-\n-    steps:\n-    - task: NuGetToolInstaller@0\n-      inputs:\n-        versionSpec: '4.9.2'\n-\n-    - task: NuGetCommand@2\n-      displayName: Restore internal tools\n-      inputs:\n-        command: restore\n-        feedsToUse: config\n-        restoreSolution: 'eng\\common\\internal\\Tools.csproj'\n-        nugetConfigPath: 'NuGet.config'\n-        restoreDirectory: '$(Build.SourcesDirectory)\\.packages'\n-\n-    - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n-      inputs:\n-        signType: $(SignType)\n-        zipSources: false\n-      condition: and(succeeded(), in(variables['SignType'], 'test', 'real'))\n-\n-    - task: MicroBuildOptProfPlugin@6\n-      inputs:\n-        ProfilingInputsDropName: '$(VisualStudio.DropName)'\n-        ShouldSkipOptimize: true\n-        AccessToken: '$(System.AccessToken)'\n-        feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'\n-      displayName: 'Install OptProf Plugin'\n-\n-    # Required by MicroBuildBuildVSBootstrapper\n-    - task: MicroBuildSwixPlugin@4\n-      inputs:\n-        dropName: $(VisualStudio.DropName)\n-\n-    - script: eng/CIBuild.cmd\n-                -configuration $(BuildConfiguration)\n-                -officialBuildId $(Build.BuildNumber)\n-                -officialSkipApplyOptimizationData $(SkipApplyOptimizationData)\n-                /p:RepositoryName=$(Build.Repository.Name)\n-                /p:VisualStudioIbcSourceBranchName=$(SourceBranch)\n-                /p:VisualStudioDropAccessToken=$(System.AccessToken)\n-                /p:VisualStudioDropName=$(VisualStudio.DropName)\n-                /p:DotNetSignType=$(SignType)\n-                /p:DotNetPublishToBlobFeed=true\n-                /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)\n-                /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\n-                /p:PublishToSymbolServer=true\n-                /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)\n-                /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)\n-                /p:TeamName=MSBuild\n-                /p:DotNetPublishUsingPipelines=true\n-                /p:VisualStudioIbcDrop=$(OptProfDrop)\n+      os: windows\n+    sdl:\n+      # We generate SBOM ourselves, so don't need steps injected by 1ES.\n+      sbom:\n+        enabled: false\n+\n+    stages:\n+    - stage: build\n       displayName: Build\n-      condition: succeeded()\n-\n-    # Required by Microsoft policy\n-    - template: eng\\common\\templates\\steps\\generate-sbom.yml\n-\n-    # Publish OptProf configuration files\n-    - task: ms-vscs-artifact.build-tasks.artifactDropTask-1.artifactDropTask@0\n-      inputs:\n-        dropServiceURI: 'https://devdiv.artifacts.visualstudio.com'\n-        buildNumber: 'ProfilingInputs/DevDiv/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)'\n-        sourcePath: '$(Build.SourcesDirectory)\\artifacts\\OptProf\\$(BuildConfiguration)\\Data'\n-        toLowerCase: false\n-        usePat: true\n-      displayName: 'OptProf - Publish to Artifact Services - ProfilingInputs'\n-      condition: succeeded()\n-\n-    # Build VS bootstrapper\n-    # Generates $(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n-    - task: MicroBuildBuildVSBootstrapper@2\n-      inputs:\n-        vsMajorVersion: $(VisualStudio.MajorVersion)\n-        channelName: $(VisualStudio.ChannelName)\n-        manifests: $(VisualStudio.SetupManifestList)\n-        outputFolder: '$(Build.SourcesDirectory)\\artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n-        bootstrapperCoreVersion: \n-      displayName: 'OptProf - Build VS bootstrapper'\n-      condition: succeeded()\n-\n-    # Publish run settings\n-    - task: PowerShell@2\n-      inputs:\n-        filePath: eng\\common\\sdk-task.ps1\n-        arguments: -configuration $(BuildConfiguration)\n-                  -task VisualStudio.BuildIbcTrainingSettings\n-                  /p:VisualStudioDropName=$(VisualStudio.DropName)\n-                  /p:BootstrapperInfoPath=$(Build.StagingDirectory)\\MicroBuild\\Output\\BootstrapperInfo.json\n-      displayName: 'OptProf - Build IBC training settings'\n-      condition: succeeded()\n-\n-    # Publish bootstrapper info\n-    - task: PublishBuildArtifacts@1\n-      inputs:\n-        PathtoPublish: $(Build.StagingDirectory)\\MicroBuild\\Output\n-        ArtifactName: MicroBuildOutputs\n-        ArtifactType: Container\n-      displayName: 'OptProf - Publish Artifact: MicroBuildOutputs'\n-      condition: succeeded()\n-\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: logs'\n-      inputs:\n-        PathtoPublish: 'artifacts\\log\\$(BuildConfiguration)'\n-        ArtifactName: logs\n-      condition: succeededOrFailed()\n-\n-    - task: PublishPipelineArtifact@1\n-      displayName: 'Publish Artifact: bin'\n-      inputs:\n-        path: 'artifacts\\bin'\n-        artifactName: bin\n-      condition: succeededOrFailed()\n-\n-    # Publishes setup VSIXes to a drop.\n-    # Note: The insertion tool looks for the display name of this task in the logs.\n-    - task: MicroBuildUploadVstsDropFolder@2\n-      displayName: Upload VSTS Drop\n-      inputs:\n-        DropName: $(VisualStudio.DropName)\n-        DropFolder: 'artifacts\\VSSetup\\$(BuildConfiguration)\\Insertion'\n-        AccessToken: '$(System.AccessToken)'\n-        DropServiceUri: 'https://devdiv.artifacts.visualstudio.com'\n-        VSDropServiceUri: 'https://vsdrop.corp.microsoft.com/file/v1'\n-      condition: succeeded()\n-\n-    # Publish an artifact that the RoslynInsertionTool is able to find by its name.\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: VSSetup'\n-      inputs:\n-        PathtoPublish: 'artifacts\\VSSetup\\$(BuildConfiguration)'\n-        ArtifactName: VSSetup\n-      condition: succeeded()\n-\n-    # Archive NuGet packages to DevOps.\n-    # Publish our NuPkgs as an artifact. The name of this artifact must be PackageArtifacts as the\n-    # arcade templates depend on the name.\n-    - task: PublishBuildArtifacts@1\n-      displayName: 'Publish Artifact: packages'\n-      inputs:\n-        PathtoPublish: 'artifacts\\packages\\$(BuildConfiguration)'\n-        ArtifactName: PackageArtifacts\n-      condition: succeeded()\n-\n-    # Publish \"IntelliSense\" XSD files to their own artifact\n-    # so it can be consumed by the insertion-to-VS job\n-    - task: PublishPipelineArtifact@1\n-      displayName: 'Publish Artifact: xsd'\n-      inputs:\n-        path: 'artifacts\\xsd'\n-        artifactName: xsd\n-      condition: succeeded()\n-\n-    # Publish Asset Manifests for Build Asset Registry job\n-    - task: PublishBuildArtifacts@1\n-      displayName: Publish Asset Manifests\n-      inputs:\n-        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(BuildConfiguration)/AssetManifest'\n-        ArtifactName: AssetManifests\n-      condition: succeeded()\n-\n-    # Tag the build at the very end when we know it's been successful.\n-    - task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0\n-      displayName: Tag build as ready for optimization training\n-      inputs:\n-        tags: 'ready-for-training'\n-      condition: succeeded()\n-\n-    - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1\n-      displayName: Execute cleanup tasks\n-      condition: succeededOrFailed()\n-\n-  - template: /eng/common/templates/job/source-build.yml\n-    parameters:\n-      platform:\n-        name: 'Managed'\n-        container: 'mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-3e800f1-20190501005343'\n-\n-  - template: /eng/common/templates/job/publish-build-assets.yml\n-    parameters:\n-      enablePublishBuildArtifacts: true\n-      publishUsingPipelines: true\n-      dependsOn:\n-        - Windows_NT\n-        - Source_Build_Managed\n-      pool:\n-        vmImage: windows-latest\n-\n-- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:\n-  - template: eng\\common\\templates\\post-build\\post-build.yml\n-    parameters:\n-      publishingInfraVersion: 3\n-      # Symbol validation is not entirely reliable as of yet, so should be turned off until\n-      # https://github.com/dotnet/arcade/issues/2871 is resolved.\n-      enableSymbolValidation: false\n-      enableSourceLinkValidation: false\n-      enableNugetValidation: false\n+\n+      jobs:\n+      # The localization setup for release/ branches. Note difference in LclPackageId. main branch is handled separately below.\n+      # Used for vs17.2, vs17.4, vs17.6 etc. branches only.\n+      # When the branch is setup for localization (the localization ticket needs to be created - https://aka.ms/ceChangeLocConfig, requesting change from one release branch to another),\n+      #  set 'EnableReleaseOneLocBuild' to true.\n+      - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/vs') }}:\n+        - template: /eng/common/templates-official/job/onelocbuild.yml@self\n+          parameters:\n+            MirrorRepo: 'msbuild'\n+            LclSource: lclFilesfromPackage\n+            LclPackageId: 'LCL-JUNO-PROD-MSBUILDREL'\n+            MirrorBranch: ${{ replace(variables['Build.SourceBranch'], 'refs/heads/', '') }}\n+            JobNameSuffix: '_release'\n+            condition: ${{ variables.EnableReleaseOneLocBuild }}\n+      # The localization setup for main branch. Note difference in package ID. Should not be used with release/ branches.\n+      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:\n+        - template: /eng/common/templates-official/job/onelocbuild.yml@self\n+          parameters:\n+            MirrorRepo: 'msbuild'\n+            LclSource: lclFilesfromPackage\n+            LclPackageId: 'LCL-JUNO-PROD-MSBUILD'\n+            MirrorBranch: 'main'\n+            JobNameSuffix: '_main'\n+            condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')\n+\n+      - job: Windows_NT\n+        pool:\n+          name: VSEngSS-MicroBuild2022-1ES\n+          demands:\n+          - agent.os -equals Windows_NT\n+\n+        timeoutInMinutes: 180\n+\n+        variables:\n+        - group: DotNet-Blob-Feed\n+        - group: DotNet-Symbol-Publish\n+        - group: Publish-Build-Assets\n+        - name: TeamName\n+          value: MSBuild\n+        - name: VisualStudio.MajorVersion\n+          value: 17\n+        - name: VisualStudio.ChannelName\n+          value: 'int.main'\n+        - name: VisualStudio.DropName\n+          value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)\n+\n+        steps:\n+        - task: NuGetToolInstaller@1\n+          displayName: 'Install NuGet.exe'\n+\n+        - task: NuGetCommand@2\n+          displayName: Restore internal tools\n+          inputs:\n+            command: restore\n+            feedsToUse: config\n+            restoreSolution: 'eng\\common\\internal\\Tools.csproj'\n+            nugetConfigPath: 'NuGet.config'\n+            restoreDirectory: '$(Build.SourcesDirectory)\\.packages'\n+\n+        - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1\n+          inputs:\n+            signType: $(SignType)\n+            zipSources: false\n+          condition: and(succeeded(), in(variables['SignType'], 'test', 'real'))\n+\n+        # OptProf is not needed because this packaged will not be serviced in VS.\n+        # - task: MicroBuildOptProfPlugin@6\n+        #   inputs:\n+        #     ProfilingInputsDropName: '$(VisualStudio.DropName)'\n+        #     ShouldSkipOptimize: true\n+        #     AccessToken: '$(System.AccessToken)'\n+        #     feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'\n+        #   displayName: 'Install OptProf Plugin'\n+\n+        # Required by MicroBuildBuildVSBootstrapper\n+        - task: MicroBuildSwixPlugin@4\n+          inputs:\n+            dropName: $(VisualStudio.DropName)\n+\n+        - script: eng/CIBuild.cmd\n+                    -configuration $(BuildConfiguration)\n+                    -officialBuildId $(Build.BuildNumber)\n+                    -officialSkipApplyOptimizationData $(SkipApplyOptimizationData)\n+                    /p:RepositoryName=$(Build.Repository.Name)\n+                    /p:VisualStudioIbcSourceBranchName=$(SourceBranch)\n+                    /p:VisualStudioDropAccessToken=$(System.AccessToken)\n+                    /p:VisualStudioDropName=$(VisualStudio.DropName)\n+                    /p:DotNetSignType=$(SignType)\n+                    /p:DotNetPublishToBlobFeed=true\n+                    /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)\n+                    /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\n+                    /p:PublishToSymbolServer=true\n+                    /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)\n+                    /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)\n+                    /p:TeamName=MSBuild\n+                    /p:DotNetPublishUsingPipelines=true\n+                    /p:VisualStudioIbcDrop=$(OptProfDrop)\n+                    /p:GenerateSbom=true\n+          displayName: Build\n+          condition: succeeded()\n+\n+        # Required by Microsoft policy\n+        - template: eng\\common\\templates-official\\steps\\generate-sbom.yml@self\n+\n+        # OptProf is not needed because this packaged will not be serviced in VS.",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    <VersionPrefix>17.3.3</VersionPrefix><DotNetFinalVersionKind>release</DotNetFinalVersionKind>\r\n```",
              "createdAt": "2024-03-27T17:35:37Z",
              "path": "eng/Versions.props",
              "diffHunk": "@@ -2,7 +2,8 @@\n <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->\n <Project>\n   <PropertyGroup>\n-    <VersionPrefix>17.3.2</VersionPrefix><DotNetFinalVersionKind>release</DotNetFinalVersionKind>\n+    <VersionPrefix>17.3.2</VersionPrefix>\n+    <DotNetFinalVersionKind>release</DotNetFinalVersionKind>",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "```suggestion\r\n    # Run tests on the first-stage build instead of the normal bootstrapped build since the VS environment in hosted machines is too new to work for this old branch. \r\n```",
              "createdAt": "2024-03-27T17:38:00Z",
              "path": "eng/cibuild_bootstrapped_msbuild.ps1",
              "diffHunk": "@@ -64,7 +64,15 @@ try {\n \n   if ($buildStage1)\n   {\n-    & $PSScriptRoot\\Common\\Build.ps1 -restore -build -ci -msbuildEngine $msbuildEngine /p:CreateBootstrap=true @properties\n+    # Run tests on Full Framework instead of the commented code below. ",
              "author": {
                "login": "rainersigwald"
              }
            }
          ]
        }
      }
    ]
  }
}