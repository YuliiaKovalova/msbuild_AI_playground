{
  "number": 8859,
  "title": "Avoid delegate allocation in EvaluatorData constructor",
  "body": "Fixes [AB#1827934](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1827934)\r\n\r\n### Context\r\n\r\nThe `EvaluatorData` class accepts a delegate via which it may query for items of a given item type. GCPauseWatson identified the per-instance allocation of these delegates as contributing to GC pauses.\r\n\r\n### Changes Made\r\n\r\nBy passing `IReadOnlyDictionary<string, LazyItemList>` instead, `EvaluatorData` can perform the lookup itself directly via that interface, rather than having a heap-allocated delegate per instance.\r\n\r\n### Testing\r\n\r\nExisting unit tests and eyeballs.\r\n\r\n### Notes\r\n\r\nCredit to @davkean for the proposed fix here.",
  "state": "MERGED",
  "createdAt": "2023-06-08T01:31:14Z",
  "updatedAt": "2023-06-08T21:08:33Z",
  "closedAt": "2023-06-08T14:35:45Z",
  "mergedAt": "2023-06-08T14:35:45Z",
  "additions": 11,
  "deletions": 27,
  "changedFiles": 3,
  "headRefName": "dev/drnoakes/fix-1827934-EvaluatorData-constructor-delegate-allocations",
  "isDraft": false,
  "author": {
    "login": "drewnoakes"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "2ded8d22691fc626d07e5ae6b1d343209ae568d2",
          "message": "Avoid delegate allocation in EvaluatorData constructor\n\nBy passing `IReadOnlyDictionary<string, LazyItemList>` instead, `EvaluatorData` can perform the lookup itself directly via that interface, rather than having a heap-allocated delegate per instance.\n\nAllocations of these delegates were identified as contributing to GC pauses by GCPauseWatson.",
          "committedDate": "2023-06-08T11:53:41Z",
          "author": {
            "name": "Drew Noakes",
            "email": "git@drewnoakes.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "The two implementations of `IItemsByItemType<I, M>.GetItems()` appear to be functionally equivalent. Instead of a callback, can `EvaluatorData` simply take the `IDictionary<string, LazyItemList>` to extract the items from?",
        "createdAt": "2023-06-08T07:24:34Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Great idea. Done.",
        "createdAt": "2023-06-08T11:54:20Z",
        "author": {
          "login": "drewnoakes"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}