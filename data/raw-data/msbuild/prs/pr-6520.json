{
  "number": 6520,
  "title": "Don't move Properties and Items to ProjectEvaluationFinished if legacy loggers present",
  "body": "Fixes #6498\r\n\r\n## Summary\r\n\r\nSwitch from the \"use the new logic if any logger is present that supports it\" to the more conservative \"use the old logic if any logger doesn't support the new logic\".\r\n\r\n## Customer impact\r\n\r\nCustomers who use MSBuild binary logs in conjunction with a legacy logger like one Azure DevOps provides for you would see a crash\r\n\r\n```\r\nMSBUILD : error MSB4017: The build stopped unexpectedly because of an unexpected logger failure. \r\nMicrosoft.Build.Exceptions.InternalLoggerException: The build stopped unexpectedly because of an unexpected logger failure. ---> System.NullReferenceException: Object reference not set to an instance of an object. \r\nat MSBuild.Logger.BuildConfiguration.Equals(Object obj) \r\nat System.Collections.Generic.ObjectEqualityComparer`1.Equals(T x, T y) \r\nat System.Collections.Generic.List`1.Contains(T item) \r\nat MSBuild.Logger.ProjectTrees.AddTopLevelProject(ProjectStartedEventArgs startedEvent, BuildConfiguration platformConfiguration) \r\nat MSBuild.Logger.CentralLogger.HandleProjectStarted(Object sender, ProjectStartedEventArgs e) \r\nat Microsoft.Build.BackEnd.Logging.EventSourceSink.RaiseProjectStartedEvent(Object sender, ProjectStartedEventArgs buildEvent) \r\n```\r\n\r\nWithout this fix, there are two available workarounds:\r\n\r\n1. Disable the crashing logger, or\r\n2. Set an MSBuild environment-variable escape flag \r\n\r\n## Regression?\r\n\r\nYes, #6287 caused 16.10 to regress against 16.9 (and former).\r\n\r\n## Changes Made\r\n\r\nSwitch from the \"use the new logic if any logger is present that supports it\" to the more conservative \"use the old logic if any logger doesn't support the new logic\". Effectively the new logic will now only take place when the binary logger is the only logger.\r\n\r\n## Testing\r\n\r\nUnit tests, inspection of state in debugger.\r\n\r\n## Risk\r\n\r\nLow. Makes the validate escape-hatch codepath more common.\r\n",
  "state": "MERGED",
  "createdAt": "2021-06-04T18:38:28Z",
  "updatedAt": "2021-06-08T21:04:04Z",
  "closedAt": "2021-06-08T19:52:04Z",
  "mergedAt": "2021-06-08T19:52:04Z",
  "additions": 12,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "dev/kirillo/notAllLoggers",
  "isDraft": false,
  "author": {
    "login": "KirillOsenkov"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Servicing-approved"
  ],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "794abcbb005017cf3a75850a9f001419bb47bd38",
          "message": "Don't move Properties and Items to ProjectEvaluationFinished if legacy loggers present\n\nSwitch from the \"use the new logic if any logger is present that supports it\" to the more conservative \"use the old logic if any logger doesn't support the new logic\".\n\nThere are legacy loggers such as the Azure DevOps logger that crash if ProjectStartedEventArgs.Properties is null.\n\nBoth console loggers also need more work to properly support the new logic.\n\nEffectively the new logic will now only take place when the binary logger is the only logger.",
          "committedDate": "2021-06-07T20:45:51Z",
          "author": {
            "name": "Kirill Osenkov",
            "email": "github@osenkov.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "/asp run",
        "createdAt": "2021-06-06T22:29:25Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": []
  }
}