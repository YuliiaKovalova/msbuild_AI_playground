{
  "number": 8802,
  "title": "Don't save data on immutable files to per-project disk cache",
  "body": "Contributes to #8635\r\n\r\n### Context\r\n\r\nWith #8688 we no longer need to cache data on immutable framework files on disk as obtaining this information is cheap and does not require I/O.\r\n\r\n### Changes Made\r\n\r\nMade `SystemState` (the RAR cache) not add such files to the per-instance dictionary. This dictionary is serialized to disk as `<project-file>.AssemblyReference.cache` so the change effectively makes the cache file smaller, saving on serialization and deserialization time.\r\n\r\nAlso refactored `DeserializeCache` into a generic method instead of taking a `Type` parameter.\r\n\r\nFor a simple ASP.NET Core app with one project reference and one package reference, the size of the cache file is reduced from 142 kB to 2 kB. Projects with no references other than the SDK will not have the cache file created at all.\r\n\r\n### Testing\r\n\r\nExisting unit tests, manual measurements.\r\n\r\n### Notes\r\n\r\nThe actual \"Don't read the file if the data is already in memory\" change will be in a separate upcoming PR.",
  "state": "MERGED",
  "createdAt": "2023-05-26T13:25:38Z",
  "updatedAt": "2023-06-13T12:24:31Z",
  "closedAt": "2023-06-12T02:01:16Z",
  "mergedAt": "2023-06-12T02:01:16Z",
  "additions": 55,
  "deletions": 28,
  "changedFiles": 11,
  "headRefName": "smaller-rar-cache-file",
  "isDraft": false,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "f303a8349cf799f07f53dbed368ba35e213606eb",
          "message": "Make StateFileBase.DeserializeCache generic",
          "committedDate": "2023-05-26T11:31:49Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a0187fedf936d1ac195ef242cb69db3f97b6271f",
          "message": "Don't persist FileState of immutable files to disk",
          "committedDate": "2023-05-26T11:33:28Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "49d73e4b098867bcd3f77d1727c2174498bee4a0",
          "message": "Add test assert",
          "committedDate": "2023-05-26T12:51:02Z",
          "author": {
            "name": "Ladi Prosek",
            "email": "laprosek@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "/azp run",
        "createdAt": "2023-06-06T08:41:48Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
        "createdAt": "2023-06-06T08:41:56Z",
        "author": {
          "login": "azure-pipelines"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "If the file doesn't exists, would it be min or max datetime?\r\nLikewise, if the file isn't an assembly?",
              "createdAt": "2023-05-31T00:59:09Z",
              "path": "src/Tasks/SystemState.cs",
              "diffHunk": "@@ -210,6 +210,16 @@ internal FrameworkName FrameworkNameAttribute\n                 get { return frameworkName; }\n                 set { frameworkName = value; }\n             }\n+\n+            /// <summary>\n+            /// The last-modified value to use for immutable framework files which we don't do I/O on.\n+            /// </summary>\n+            internal static DateTime ImmutableFileLastModifiedMarker => DateTime.MaxValue;\n+\n+            /// <summary>\n+            /// It is wasteful to persist entries for immutable framework files.\n+            /// </summary>\n+            internal bool IsWorthPersisting => lastModified != ImmutableFileLastModifiedMarker;",
              "author": {
                "login": "yuehuang010"
              }
            },
            {
              "body": "This is a positive cache of assemblies, I don't think we create an entry for a non-existent file or a file that is not an assembly. In general we use `DateTime.MinValue` to represent \"missing\", though.",
              "createdAt": "2023-06-06T08:39:37Z",
              "path": "src/Tasks/SystemState.cs",
              "diffHunk": "@@ -210,6 +210,16 @@ internal FrameworkName FrameworkNameAttribute\n                 get { return frameworkName; }\n                 set { frameworkName = value; }\n             }\n+\n+            /// <summary>\n+            /// The last-modified value to use for immutable framework files which we don't do I/O on.\n+            /// </summary>\n+            internal static DateTime ImmutableFileLastModifiedMarker => DateTime.MaxValue;\n+\n+            /// <summary>\n+            /// It is wasteful to persist entries for immutable framework files.\n+            /// </summary>\n+            internal bool IsWorthPersisting => lastModified != ImmutableFileLastModifiedMarker;",
              "author": {
                "login": "ladipro"
              }
            }
          ]
        }
      }
    ]
  }
}