{
  "number": 10199,
  "title": "Add infra config to ConfigurationContext",
  "body": "Fixes https://github.com/dotnet/msbuild/issues/10123\r\n\r\n### Changes Made\r\nAnalyzers now have access to infrastructure configuration data, which contains `severity` and `isEnabled` attributes.\r\n\r\n",
  "state": "MERGED",
  "createdAt": "2024-06-03T12:30:41Z",
  "updatedAt": "2024-08-07T10:10:27Z",
  "closedAt": "2024-07-23T21:44:37Z",
  "mergedAt": "2024-07-23T21:44:37Z",
  "additions": 68,
  "deletions": 47,
  "changedFiles": 14,
  "headRefName": "10123",
  "isDraft": false,
  "author": {
    "login": "maridematte"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "fd3557770e23cb10b818a0e0472bbacaa69c99eb",
          "message": "More config in context",
          "committedDate": "2024-06-03T07:28:06Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "a72b23478d74f80a91d7cd43950b7d4cc959691f",
          "message": "Added to the docs",
          "committedDate": "2024-06-03T12:26:59Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "c82c2d633a4c1e63de13b6690a2de8d3808af472",
          "message": "Changed description for infra config",
          "committedDate": "2024-06-03T12:29:05Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9b6ea502731352c686ffd6e9e1b8e99f1e6d4b93",
          "message": "Added RuleId to BuildAnalyzerConfiguration",
          "committedDate": "2024-06-25T15:07:15Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "3dd620e3a4b5c3c3812ad8cdb400ce318b54d024",
          "message": "ruleId is a const",
          "committedDate": "2024-06-27T12:19:27Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "341ba3000bf7a17935694407f225b02a1ecc1917",
          "message": "Rename BuildAnalyzerConfigurationInternal",
          "committedDate": "2024-07-03T13:48:46Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "9316038ba90e15e22f221166c4ca4930f6d1edc4",
          "message": "Finished renaming class",
          "committedDate": "2024-07-10T22:09:24Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "bb1eddd7b7c9ba291c07d822ee133dc1a39e74d9",
          "message": "Changed factory context",
          "committedDate": "2024-07-22T16:34:43Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "1587e2e3b694a50ca5e1a4667f09ec98f119f6f8",
          "message": "Solve merge conflicts from main",
          "committedDate": "2024-07-23T08:44:32Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      },
      {
        "commit": {
          "oid": "01c75f73c1461ec8d16fd4a32cb18be920bd9607",
          "message": "Fix merge conflicts",
          "committedDate": "2024-07-23T11:04:03Z",
          "author": {
            "name": "Mariana Dematt\u00e9",
            "email": "magarces@microsoft.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "This looks great and meets original requirements.\r\n\r\nAs discussed offline - let's change CustomConfigurationData so that it has RuleId, dictionary of custom key-values, BuildAnalyzerConfiguration - that way the accessing of custome or infra config would be same (by index, or searched by RuleId)",
        "createdAt": "2024-06-04T17:39:26Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "Thinking if we should cover the change by the e2e tests? Since we already have the custom buildcheck test, there is a chance to cover this case as well? What do you think? ",
              "createdAt": "2024-06-04T07:13:48Z",
              "path": "src/Build/BuildCheck/API/ConfigurationContext.cs",
              "diffHunk": "@@ -9,22 +9,28 @@\n namespace Microsoft.Build.Experimental.BuildCheck;\n \n /// <summary>\n-/// Holder of an optional configuration from .editorconfig file (not recognized by the infrastructure)\n+/// Holder of configuration from .editorconfig file (not recognized by the infrastructure)\n /// </summary>\n public class ConfigurationContext\n {\n-    private ConfigurationContext(CustomConfigurationData[] customConfigurationData)\n+    private ConfigurationContext(CustomConfigurationData[] customConfigurationData, BuildAnalyzerConfiguration[] buildAnalyzerConfig)\n     {\n         CustomConfigurationData = customConfigurationData;\n+        BuildAnalyzerConfig = buildAnalyzerConfig;\n     }\n \n-    internal static ConfigurationContext FromDataEnumeration(CustomConfigurationData[] customConfigurationData)\n+    internal static ConfigurationContext FromDataEnumeration(CustomConfigurationData[] customConfigurationData, BuildAnalyzerConfiguration[] buildAnalyzerConfig)",
              "author": {
                "login": "f-alizada"
              }
            },
            {
              "body": "I suuport Farhad's idea.\r\nFeel free to contact me if you have any questions about the e2e tests.",
              "createdAt": "2024-06-18T19:56:22Z",
              "path": "src/Build/BuildCheck/API/ConfigurationContext.cs",
              "diffHunk": "@@ -9,22 +9,28 @@\n namespace Microsoft.Build.Experimental.BuildCheck;\n \n /// <summary>\n-/// Holder of an optional configuration from .editorconfig file (not recognized by the infrastructure)\n+/// Holder of configuration from .editorconfig file (not recognized by the infrastructure)\n /// </summary>\n public class ConfigurationContext\n {\n-    private ConfigurationContext(CustomConfigurationData[] customConfigurationData)\n+    private ConfigurationContext(CustomConfigurationData[] customConfigurationData, BuildAnalyzerConfiguration[] buildAnalyzerConfig)\n     {\n         CustomConfigurationData = customConfigurationData;\n+        BuildAnalyzerConfig = buildAnalyzerConfig;\n     }\n \n-    internal static ConfigurationContext FromDataEnumeration(CustomConfigurationData[] customConfigurationData)\n+    internal static ConfigurationContext FromDataEnumeration(CustomConfigurationData[] customConfigurationData, BuildAnalyzerConfiguration[] buildAnalyzerConfig)",
              "author": {
                "login": "YuliiaKovalova"
              }
            },
            {
              "body": "These tests are currently disabled. I still think we should add tests to cover this functionality, so I created an issue to unblock this PR: https://github.com/dotnet/msbuild/issues/10291",
              "createdAt": "2024-06-25T15:30:05Z",
              "path": "src/Build/BuildCheck/API/ConfigurationContext.cs",
              "diffHunk": "@@ -9,22 +9,28 @@\n namespace Microsoft.Build.Experimental.BuildCheck;\n \n /// <summary>\n-/// Holder of an optional configuration from .editorconfig file (not recognized by the infrastructure)\n+/// Holder of configuration from .editorconfig file (not recognized by the infrastructure)\n /// </summary>\n public class ConfigurationContext\n {\n-    private ConfigurationContext(CustomConfigurationData[] customConfigurationData)\n+    private ConfigurationContext(CustomConfigurationData[] customConfigurationData, BuildAnalyzerConfiguration[] buildAnalyzerConfig)\n     {\n         CustomConfigurationData = customConfigurationData;\n+        BuildAnalyzerConfig = buildAnalyzerConfig;\n     }\n \n-    internal static ConfigurationContext FromDataEnumeration(CustomConfigurationData[] customConfigurationData)\n+    internal static ConfigurationContext FromDataEnumeration(CustomConfigurationData[] customConfigurationData, BuildAnalyzerConfiguration[] buildAnalyzerConfig)",
              "author": {
                "login": "maridematte"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "nit: \"BC0101\" could be constant value of the analyzer. ",
              "createdAt": "2024-06-27T08:43:07Z",
              "path": "src/Build/BuildCheck/Analyzers/SharedOutputPathAnalyzer.cs",
              "diffHunk": "@@ -17,7 +17,7 @@ internal sealed class SharedOutputPathAnalyzer : BuildAnalyzer\n     public static BuildAnalyzerRule SupportedRule = new BuildAnalyzerRule(\"BC0101\", \"ConflictingOutputPath\",\n         \"Two projects should not share their OutputPath nor IntermediateOutputPath locations\",\n         \"Projects {0} and {1} have conflicting output paths: {2}.\",\n-        new BuildAnalyzerConfiguration() { Severity = BuildAnalyzerResultSeverity.Warning, IsEnabled = true });\n+        new BuildAnalyzerConfiguration() { RuleId = \"BC0101\", Severity = BuildAnalyzerResultSeverity.Warning, IsEnabled = true });",
              "author": {
                "login": "f-alizada"
              }
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "body": "Let's add xml comment as it's a public member.\r\n\r\nDo we want this to be nullable? The other properties are nullable as user is not obliged to specify them in the default configuration, nor in editorconfig. However a null RuleId sounds strange.",
              "createdAt": "2024-06-30T18:44:33Z",
              "path": "src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs",
              "diffHunk": "@@ -27,6 +27,8 @@ public class BuildAnalyzerConfiguration\n \n     public static BuildAnalyzerConfiguration Null { get; } = new();\n \n+    public string? RuleId { get; internal set; }",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "That being said - we'll need to expose the effective configuration (it's currently `BuildAnalyzerConfigurationInternal` and not exposed - so will need to be renamed and made public). This is so that BuildChecks know the real enablement and scoping info",
              "createdAt": "2024-06-30T18:49:03Z",
              "path": "src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs",
              "diffHunk": "@@ -27,6 +27,8 @@ public class BuildAnalyzerConfiguration\n \n     public static BuildAnalyzerConfiguration Null { get; } = new();\n \n+    public string? RuleId { get; internal set; }",
              "author": {
                "login": "JanKrivanek"
              }
            },
            {
              "body": "I thought the `BuildAnalyzerConfiguration` was just a public mirror of the `BuildAnalyzerConfigurationInternal`. I'm a bit confused what is the difference between these two. I'll fix the previous comment and open a new issue regarding the configuration of the two classes so we can have a better discussion there.",
              "createdAt": "2024-07-01T10:12:57Z",
              "path": "src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs",
              "diffHunk": "@@ -27,6 +27,8 @@ public class BuildAnalyzerConfiguration\n \n     public static BuildAnalyzerConfiguration Null { get; } = new();\n \n+    public string? RuleId { get; internal set; }",
              "author": {
                "login": "maridematte"
              }
            }
          ]
        }
      }
    ]
  }
}