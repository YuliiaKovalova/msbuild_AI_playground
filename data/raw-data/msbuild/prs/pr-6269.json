{
  "number": 6269,
  "title": "Verify that a key is in the warningsAsErrors dictionary before using it",
  "body": "Customers reported issues like:\r\n```\r\nError The \"ResolveAssemblyReference\" task failed unexpectedly.\r\nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.get_Item(TKey key)\r\n   at Microsoft.Build.BackEnd.Logging.LoggingService.GetWarningsToBeLoggedAsErrorsByProject(BuildEventContext context)\r\n   at Microsoft.Build.BackEnd.Logging.TaskLoggingContext.GetWarningsAsErrors()\r\n   at Microsoft.Build.BackEnd.TaskHost.get_WarningsAsErrors()\r\n   at Microsoft.Build.BackEnd.TaskHost.ShouldTreatWarningAsError(String warningCode)\r\n   at Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(String subcategory, String warningCode, String helpKeyword, String helpLink, String file, Int32 lineNumber, Int32 columnNumber, Int32 endLineNumber, Int32 endColumnNumber, String message, Object[] messageArgs)\r\n   at Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(String messageResourceName, Object[] messageArgs)\r\n   at Microsoft.Build.Tasks.ReferenceTable.LogHigherVersionUnresolveDueToAttribute(Boolean displayPrimaryReferenceMessage, AssemblyNameExtension assemblyName, Reference reference, ITaskItem referenceItem, String targetedFramework)\r\n   at Microsoft.Build.Tasks.ReferenceTable.RemovePrimaryReferenceMarkedForExclusion(LogExclusionReason logExclusionReason, Boolean removeOnlyNoWarning, String subsetName, List`1 removedReferences, AssemblyNameExtension assemblyName, Reference assemblyReference)\r\n   at Microsoft.Build.Tasks.ReferenceTable.RemoveReferencesMarkedForExclusion(Boolean removeOnlyNoWarning, String subsetName)\r\n   at Microsoft.Build.Tasks.ResolveAssemblyReference.Execute(FileExists fileExists, DirectoryExists directoryExists, GetDirectories getDirectories, GetAssemblyName getAssemblyName, GetAssemblyMetadata getAssemblyMetadata, GetRegistrySubKeyNames getRegistrySubKeyNames, GetRegistrySubKeyDefaultValue getRegistrySubKeyDefaultValue, GetLastWriteTime getLastWriteTime, GetAssemblyRuntimeVersion getRuntimeVersion, OpenBaseKey openBaseKey, GetAssemblyPathInGac getAssemblyPathInGac, IsWinMDFile isWinMDFile, ReadMachineTypeFromPEHeader readMachineTypeFromPEHeader)\r\n   at Microsoft.Build.Tasks.ResolveAssemblyReference.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() NetFxOldStyle.Test\r\n```\r\n\r\nLooking at it, we access a dictionary [here](https://github.com/dotnet/msbuild/blob/13522d2466ae1634177e2a6a40fefaedff95139c/src/Build/BackEnd/Components/Logging/LoggingService.cs#L544) without verifying that the key (project ID) is in the dictionary. This fixes that and defaults to \"no warnings as errors\" if relevant.\r\n\r\nCurrently untested.",
  "state": "MERGED",
  "createdAt": "2021-03-16T18:34:52Z",
  "updatedAt": "2021-03-31T16:04:35Z",
  "closedAt": "2021-03-16T20:19:10Z",
  "mergedAt": "2021-03-16T20:19:10Z",
  "additions": 4,
  "deletions": 1,
  "changedFiles": 1,
  "headRefName": "missing-key-fix",
  "isDraft": false,
  "author": {
    "login": "Forgind"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "commits": {
    "nodes": [
      {
        "commit": {
          "oid": "1f932b441ce9b3d298333d761405460ac4ddbdbf",
          "message": "Verify that a key is in the warningsAsErrors dictionary before using it",
          "committedDate": "2021-03-16T18:31:36Z",
          "author": {
            "name": "Nathan Mytelka",
            "email": "Forgind@users.noreply.github.com"
          }
        }
      }
    ]
  },
  "comments": {
    "nodes": [
      {
        "body": "Related issue: https://github.com/dotnet/sdk/pull/16350",
        "createdAt": "2021-03-16T19:03:57Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@Forgind @BenVillalobos should this fix be in `6.0.100-preview.3.21180.3`?\r\n\r\nWe still hit this here: https://github.com/dotnet/net6-mobile-samples/pull/111\r\n\r\nLog: [Release.zip](https://github.com/dotnet/msbuild/files/6237863/Release.zip)",
        "createdAt": "2021-03-31T16:01:43Z",
        "author": {
          "login": "jonathanpeppers"
        }
      },
      {
        "body": "@rokonec pointed out that there were two places that could have had the problem, and that fix happened to be the right one for the person who originally reported the problem. I suspect your problem would be resolved by https://github.com/dotnet/msbuild/pull/6304, but @BenVillalobos suggested we should wait and merge https://github.com/dotnet/msbuild/pull/6308 instead.",
        "createdAt": "2021-03-31T16:04:35Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  },
  "reviewThreads": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "body": "I was going to suggest checking `!_warningsAsErrorsByProject.ContainsKey(key)`, but [containskey actually calls trygetvalue](https://source.dot.net/#System.Collections.Concurrent/System/Collections/Concurrent/ConcurrentDictionary.cs,93f90f07cf34d76c,references).",
              "createdAt": "2021-03-16T19:01:32Z",
              "path": "src/Build/BackEnd/Components/Logging/LoggingService.cs",
              "diffHunk": "@@ -541,7 +541,10 @@ public ICollection<string> GetWarningsToBeLoggedAsErrorsByProject(BuildEventCont\n \n             int key = GetWarningsAsErrorOrMessageKey(context);\n \n-            HashSet<string> warningsAsErrorsExcludingMessages = new HashSet<string>(_warningsAsErrorsByProject[key]);\n+            if (!_warningsAsErrorsByProject.TryGetValue(key, out ISet<string> warningsAsErrorsExcludingMessages))",
              "author": {
                "login": "benvillalobos"
              }
            }
          ]
        }
      }
    ]
  }
}