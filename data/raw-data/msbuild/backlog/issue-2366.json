{
  "number": 2366,
  "title": "Build failure related to dependencies in a mixed solution",
  "body": "After converting a subset of projects from legacy project system to new in https://github.com/antlr/antlrcs/pull/74/commits/4b0ae50a1fcc01e1f149c0d79272fb69da0a423b, I found that the build failed due to a file access error until I turned off parallel builds (removed `/m`) in https://github.com/antlr/antlrcs/pull/74/commits/407a344523fa4bd1bf9492827156bc2dfd9b2982. I'm guessing this is caused by a failure to properly track dependencies when the build contains both legacy and new projects.\r\n\r\nI was not able to reproduce this locally in Visual Studio, but the AppVeyor build was consistently failing with the `/m` flag.",
  "state": "OPEN",
  "createdAt": "2017-07-29T19:44:35Z",
  "updatedAt": "2024-02-21T16:36:13Z",
  "closedAt": null,
  "author": {
    "login": "sharwell"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "What version of VS/msbuild, and was the file that caused the error referenced by a non-SDK project?\r\n\r\n(I suspect that this is related to https://github.com/dotnet/sdk/issues/1453)\r\n\r\nI also don't understand what you mean by \r\n\r\n> I'm guessing this is caused by a failure to properly track dependencies when the build contains both legacy and new projects.\r\n\r\nCan you clarify?",
        "createdAt": "2017-07-31T15:47:48Z",
        "updatedAt": "2017-07-31T15:47:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald I got the same error today and it is only happening when running msbuild from command line.\r\n\r\nMy structure (simplified, original solution is 45 projects)\r\n- Project A - legacy project format, TFM net461\r\n- Project B - legacy project format, TFM net461 Reference project A\r\n- Project C - new project format, TFM net461;netstandard1.6\r\n- Project D - new project format, TFM net461 Reference project A and C\r\n\r\n`CSC : error CS0009: Metadata file 'C:\\tfs\\Company\\Src\\Project.A\\bin\\Release\\Project.A.dll' could not be opened -- The process cannot access the file 'C:\\tfs\\Company\\Src\\Project.A\\bin\\Release\\Project.A.dll' because it is being used by another process. [C:\\tfs\\Company\\Src\\Project.D\\Project.D.csproj]`\r\n\r\nThe error is reproducable in both dev and build server environment for my solution.\r\n\r\nDev environment\r\n- Visual Studio 2017 (15.3 Preview 7) Enterprise\r\n- Microsoft (R) Build Engine version 15.3.409.57025 for .NET Framework\r\n\r\nBuild server\r\n- Visual Studio Build Tools 2017 (15.2)\r\n- Microsoft (R) Build Engine version 15.1.1012.6693\r\n\r\nDo you wish me to send link to msbuild.log file by mail to you? (will not attach it here because I don't know if log file contains sensitive information)",
        "createdAt": "2017-08-13T17:16:54Z",
        "updatedAt": "2017-08-13T17:16:54Z",
        "author": {
          "login": "Tasteful"
        }
      },
      {
        "body": "I believe I am also seeing this behavior.  I too am moving from the old project file format to the new project file format in a large solution. My theory on what is happening is that the different project file formats specify different build properties (i.e. `TargetFramework` vs `TargetFrameworkVersion`) and MSBUILD treats them as different builds.  You then can run into concurrency problems in the build if the two builds of the same project happen at the same time.  I asked [this](https://stackoverflow.com/questions/50144653/is-it-possible-to-force-msbuild-to-only-build-a-project-once-regardless-of-prop) question on StackOverflow and my theory is based on [this answer](https://stackoverflow.com/a/17408407/573218)\r\n\r\nIs my understanding of what is going on correct?  I'd be open to ideas of how to work around this that don't involve turning off concurrency or having to convert everything to the new file format.",
        "createdAt": "2018-05-02T23:30:41Z",
        "updatedAt": "2018-05-02T23:30:41Z",
        "author": {
          "login": "johnkoerner"
        }
      },
      {
        "body": "@rainersigwald I can reliably reproduce this issue in a small demonstration solution: https://github.com/johnkoerner/MsBuildConcurrencyProblems\r\n\r\nThis has 2 C# apps each using different types of csproj files and one C++ CLI library that is used by both.  The reason I used a C++ CLI  library is that it tends to take longer to build and increases the likelihood of problems happening. (And that is the setup that is causing problems on one of my solutions).\r\n",
        "createdAt": "2018-05-08T19:19:51Z",
        "updatedAt": "2018-05-08T20:29:07Z",
        "author": {
          "login": "johnkoerner"
        }
      },
      {
        "body": "@johnkoerner nice repro! I'll send a PR with the fix.\r\n\r\n## Workaround\r\n\r\nAdd the metadata `GlobalPropertiesToRemove=TargetFramework` to your `ProjectReference` items in multitargeted projects.\r\n\r\nFor example,\r\n\r\n```diff\r\ndiff --git a/C.DualTargetLibrary/C.DualTargetLibrary.csproj b/C.DualTargetLibrary/C.DualTargetLibrary.csproj\r\nindex d2ae080..09e9603 100644\r\n--- a/C.DualTargetLibrary/C.DualTargetLibrary.csproj\r\n+++ b/C.DualTargetLibrary/C.DualTargetLibrary.csproj\r\n@@ -5,7 +5,7 @@\r\n   </PropertyGroup>\r\n \r\n   <ItemGroup Condition=\"'$(TargetFramework)'=='net471'\">\r\n-    <ProjectReference Include=\"..\\B.CppCLILibrary\\B.CppCLILibrary.vcxproj\" />\r\n+    <ProjectReference Include=\"..\\B.CppCLILibrary\\B.CppCLILibrary.vcxproj\" GlobalPropertiesToRemove=\"TargetFramework\" />\r\n   </ItemGroup>\r\n \r\n </Project>\r\n```",
        "createdAt": "2018-05-11T22:23:02Z",
        "updatedAt": "2018-05-11T22:23:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I do not reproduce this on 15.7 + .NET Core SDK 2.1.300-rc1 using @Tasteful or @sharwell's repro steps, so I think @johnkoerner's `.vcxproj` repro is all that remains. If you think otherwise, I'd love to see a repro case.",
        "createdAt": "2018-05-14T19:57:53Z",
        "updatedAt": "2018-05-14T19:57:53Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}