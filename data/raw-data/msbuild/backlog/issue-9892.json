{
  "number": 9892,
  "title": "[Built-in analyzer] String comparison is not properly quoted",
  "body": "### Background\r\n\r\nThis issue tracks one of the BuildCheck analyzers we would like to ship in-box with MSBuild.\r\n\r\n### Goal\r\n\r\nImplement an analyzer with the following rule: String comparison in conditions should use single quotes around the strings, e.g. `'$(MyProp)' == ''`.\r\n\r\n### Notes\r\n\r\nWhile not strictly needed for non-empty strings, the use of quotes makes the condition work for empty strings as well and is considered a good practice.",
  "state": "OPEN",
  "createdAt": "2024-03-18T14:45:07Z",
  "updatedAt": "2024-12-17T15:55:22Z",
  "closedAt": null,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "BuildCheck Suggestion",
    "triaged",
    "Area: BuildCheck"
  ],
  "comments": {
    "nodes": [
      {
        "body": "There's debate on this; see https://github.com/mhutch/MonoDevelop.MSBuildEditor/issues/136. I continue to favor the \"redundant\" quotes but @KirillOsenkov and @mhutch disagreeing with me is _very_ strong evidence.",
        "createdAt": "2024-03-18T14:48:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@JanKrivanek this is the candidate for an analyzer that would do static analysis \"in node\". The rule appears to be controversial. The other one we've considered for this category was detecting unused properties/items. That one you could argue is not super important and detecting the use of undefined properties (#9883) has a similar effect in that it flags _potential_ typos.",
        "createdAt": "2024-03-18T15:03:37Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Ok - let's probably ditch this one.\r\nImplementing would get quite nontrivial (we do not have ASTs of conditions) with questionable value",
        "createdAt": "2024-03-18T16:37:42Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> we do not have ASTs of conditions\r\n\r\nWe do actually! It's like the only grown-up PL part of MSBuild. Check out `src\\Build\\Evaluation\\Conditionals\\EqualExpressionNode.cs` and that folder.\r\n\r\nBut that doesn't change anything about this rule.",
        "createdAt": "2024-03-18T16:45:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Ok - let's probably ditch this one.\n> Implementing would get quite nontrivial (we do not have ASTs of conditions) with questionable value\n\nY'all are welcome to borrow my expression/condition parser, which produces an AST \ud83d\ude42",
        "createdAt": "2024-03-18T18:37:52Z",
        "author": {
          "login": "mhutch"
        }
      },
      {
        "body": "@mhutch - I suppose you are reffering to https://github.com/mhutch/MonoDevelop.MSBuildEditor/blob/main/MonoDevelop.MSBuild/Language/Expressions/ExpressionParser.Conditions.cs#L7, correct?",
        "createdAt": "2024-03-18T19:00:53Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "@JanKrivanek yes. I can't guarantee perfect compatibility but it does have a pretty good suite of tests, and it uses the same AST model for expressions and conditions. Plus it has positional information, for better error reporting. If you do decide to use it let's figure out a way to share the code properly \ud83d\ude42",
        "createdAt": "2024-03-18T19:48:15Z",
        "author": {
          "login": "mhutch"
        }
      },
      {
        "body": "I'm with @rainersigwald here. Missing quotes in property evaluation is a huge red flag.\r\n\r\n* We should not request removing unnecessary quotes, as the resulting text requires a higher minimum level of understanding/experience to review\r\n* We should suggest adding quotes, as there is no negative impact to users ability to read the resulting text",
        "createdAt": "2024-03-20T22:06:06Z",
        "author": {
          "login": "sharwell"
        }
      }
    ]
  }
}