{
  "number": 3538,
  "title": "Log Item Updates in Targets",
  "body": "See the bug report here:\r\nhttps://github.com/KirillOsenkov/MSBuildStructuredLog/issues/182\r\n\r\nI'm guessing we should be logging when a target updates an item, and we don't see anything logged.",
  "state": "OPEN",
  "createdAt": "2018-07-25T00:05:16Z",
  "updatedAt": "2024-02-21T16:33:28Z",
  "closedAt": null,
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "Area: Debuggability",
    "Area: Logging",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      }
    ]
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Does this include when metadata is updated on all items without an `Update` attribute? Like this:\r\n\r\n```xml\r\n<A Include=\"A.txt;B.cs;C.log\" />\r\n<A Other=\"common%(Extension)\" />\r\n```\r\n\r\nI assume no `Update` is basically an implicit `Update=\"@(A)\"`.\r\n\r\nThis is a pain point in debugging for me... hard to keep track of where updates come from. (If a later `Include` uses the items, it prints the metadata, and I can add a throwaway item list intentionally to debug stuff. But when I don't own the code and I'm not sure which of many targets might be updating something, it can be very hard to track down.) /cc @rainersigwald ",
        "createdAt": "2020-07-02T18:27:17Z",
        "updatedAt": "2020-07-02T18:27:17Z",
        "author": {
          "login": "dagood"
        }
      },
      {
        "body": "Yes; `Update` is always completely ignored inside a target (long sad story, see #2835).",
        "createdAt": "2020-07-08T15:24:57Z",
        "updatedAt": "2020-07-08T15:24:57Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}