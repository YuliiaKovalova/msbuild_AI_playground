{
  "number": 4049,
  "title": "Repoint SDK40ToolsPath to 4.7.2 registry location",
  "body": "_This was reported internally as https://devdiv.visualstudio.com/DevDiv/_workitems/edit/753670._\r\n\r\nOn a machine with VS installed but no .NET 4.6.1 SDK, `$(SDK40ToolsPath)` is empty, because\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/9781d968839ded744e18152f991d21eb6ce83862/src/MSBuild/app.config#L84\r\n\r\ndoesn't exist.\r\n\r\nI think the 4.6.1 SDK was universally installed for dev15, but dev16 now universally installs the 4.7.2 SDK, so we should update to point to that instead.",
  "state": "CLOSED",
  "createdAt": "2019-01-07T16:40:10Z",
  "updatedAt": "2024-02-21T17:09:48Z",
  "closedAt": "2019-01-08T18:23:15Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "I was about to open similar issue when I found this, good timing on your side :)\r\n\r\nA related issue that I've fought with this morning was to get the creation of localized satellite assemblies running on our **Docker Based Build Servers**. I'm using the [microsoft/dotnet-framework:4.7.2-sdk-20181211-windowsservercore-ltsc2016](https://github.com/Microsoft/dotnet-framework-docker/blob/master/4.7.2/sdk/windowsservercore-ltsc2016/Dockerfile) Docker image as a base for our build containers.\r\n\r\nAnd our build process resulted in the outcome:\r\n\r\n```\r\n> You should have .NET 4.7.2 SDK installed.\r\n> Can't create the satellite assembly dll.\r\n> .NET 4.7.2 framework tools not found. Make sure that .NET framework has been installed.\r\n> \"AL.exe\" file does not exist.\r\n```\r\n\r\nInstalling **Microsoft.VisualStudio.Workload.ManagedDesktopBuildTools** from the [vs_buildtools](https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2017) to the image fixed the issue for me. This seems to be the [Component](https://docs.microsoft.com/en-us/visualstudio/install/workload-component-id-vs-build-tools?view=vs-2017) that also installs the .NET 4.6.1 SDK to the machine.\r\n\r\nEdit: Installing only **Microsoft.Net.Component.4.6.1.SDK** also worked\r\n\r\nWhile only building .NET 4.7.2 projects, out build servers also have to have .NET 4.6.1 SDK installed at the moment which is a bit inconvenient.\r\n\r\nAnother example of this problem is the usage of the **resgen.exe** while building our solutions which is being accessed from the path `C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\resgen.exe`.\r\n\r\nMaybe the Microsoft .NET 4.7.2 SDK Docker Images should be extended with the required .NET 4.6.1 SDK by default.",
        "createdAt": "2019-01-08T13:59:16Z",
        "updatedAt": "2019-01-08T14:08:46Z",
        "author": {
          "login": "steffen-wilke"
        }
      },
      {
        "body": "> Maybe the Microsoft .NET 4.7.2 SDK Docker Images should be extended with the required .NET 4.6.1 SDK by default.\r\n\r\nThat sounds reasonable to me. I filed Microsoft/dotnet-framework-docker#214 to see if it seems reasonable to the Dockerfile owners.\r\n\r\nThanks for the report and additional details!",
        "createdAt": "2019-01-08T16:11:45Z",
        "updatedAt": "2019-01-08T16:11:45Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Should a similar fix to https://github.com/Microsoft/msbuild/pull/4052 be applied to the 4.8 images (but using the 4.8 registry location)?",
        "createdAt": "2019-04-26T03:20:01Z",
        "updatedAt": "2019-04-26T03:20:01Z",
        "author": {
          "login": "kernelcoredump"
        }
      }
    ]
  }
}