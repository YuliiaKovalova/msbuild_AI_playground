{
  "number": 5833,
  "title": "MSBuild 16.7+ No Longer Supports Legacy netcore50 Apps",
  "body": "### Context\r\nDue to [customers receiving bad error messages](https://github.com/dotnet/msbuild/issues/5820) when using an older SDK and targeting `net5.0`, [we've decided to improve this error message](https://github.com/dotnet/msbuild/pull/5826) so that it provides a proper solution to their problem.\r\n\r\nOld Message: `The reference assemblies for {0} were not found. To resolve this, install the Developer Pack (SDK/Targeting Pack) for this framework version or retarget your application. You can download .NET Framework Developer Packs at https://aka.ms/msbuild/developerpacks`\r\n\r\nNew Message (when targeting `net5.0` and on an older SDK): `The reference assemblies for \"{0}\" were not found. You might be using an older SDK to target .NET 5.0 or higher. Update Visual Studio and/or your .NET SDK.`\r\n\r\n### The Problem\r\nSome legacy apps (UWP Windows Store 8/8.1 and potentially others) would target `netcore50`, not to be confused with the newer `net5.0`. If one happens to build one of these legacy apps on VS16.7+, they could receive the newer message which doesn't help their scenario.\r\n\r\n### The Path Forward\r\nAfter discussions with @richlander , @terrajobst , and @rainersigwald , it's looking like we're okay marking this scenario as **no longer supported**.\r\n\r\nThis issue essentially acknowledges this as a breaking change and is meant to host the discussion for this change.",
  "state": "CLOSED",
  "createdAt": "2020-10-23T22:50:11Z",
  "updatedAt": "2024-02-21T17:02:15Z",
  "closedAt": "2020-10-28T21:30:00Z",
  "author": {
    "login": "benvillalobos"
  },
  "labels": [
    "Breaking Change",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "I don't believe that #5826 would change any behavior for apps targeting `netcore50`.  I think the TargetFrameworkIdentifier for those apps would be `.NETCore`, and not `.NETFramework` or `.NETCoreApp`, so the new error message wouldn't kick in.",
        "createdAt": "2020-10-28T01:04:34Z",
        "updatedAt": "2020-10-28T01:04:34Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "@dsplaisted is correct. And as @clairernovotny helped me determine, the `TargetFramework` is listed as `\".NETCore,Version=v5.0\"`. This can be seen via the [Microsoft.AspNet.SignalR.Client](https://www.nuget.org/packages/Microsoft.AspNet.SignalR.Client/2.2.1) package using `ilspy` on the binaries in the `netcore50` folder.\r\n\r\n![image](https://user-images.githubusercontent.com/4691428/97498767-fb92fd80-1929-11eb-87ab-5a935fbf57a2.png)\r\n\r\nSo there is no breaking change after all \ud83d\ude42",
        "createdAt": "2020-10-28T21:30:00Z",
        "updatedAt": "2020-10-28T21:30:00Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}