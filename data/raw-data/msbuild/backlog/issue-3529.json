{
  "number": 3529,
  "title": "Find a way to embed project.assets.json in .binlog",
  "body": "It would be helpful to include the `project.assets.json` file from the obj directory in the .binlog file archive. \r\n\r\nNot sure what's the best way to do it as it's not technically an MSBuild file. ",
  "state": "CLOSED",
  "createdAt": "2018-07-19T22:59:45Z",
  "updatedAt": "2024-02-21T17:12:18Z",
  "closedAt": "2021-04-28T21:30:25Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "Area: Debuggability",
    "Area: Logging",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "What scenarios aren't well-served by just looking at the results of the asset-file-reading task?\r\n\r\nMaybe some kind of advisory API from within a task: \"it'd be interesting to capture this file\"?\r\n\r\n```C#\r\nIBuildEngine6.LogFileContents(string path)\r\n```\r\n\r\n(Someday we're going to get into double digits on that interface and it will be something to behold.)\r\n\r\nWe wouldn't want folks to abuse this for everything (if you need to debug contents of source files, build locally), but for build-graph-altering things like the assets file it could be handy.",
        "createdAt": "2018-07-20T15:24:22Z",
        "updatedAt": "2018-07-20T15:24:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Here's an example where I needed the contents of project.assets.json:\r\nhttps://github.com/NuGet/Home/issues/7132",
        "createdAt": "2018-07-20T18:08:51Z",
        "updatedAt": "2018-07-20T18:08:51Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "A na\u00efve way to do that that works well is just add this to BinaryLogger.CollectImports():\r\n\r\n```\r\n                if (projectArgs.Items is IEnumerable items)\r\n                {\r\n                    foreach (DictionaryEntry item in items)\r\n                    {\r\n                        if (item.Key is string itemName && itemName == \"IncludeInBinlog\" && item.Value is ITaskItem taskItem)\r\n                        {\r\n                            projectImportsCollector.AddFile(taskItem.ItemSpec);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (projectArgs.Properties is IEnumerable properties)\r\n                {\r\n                    foreach (DictionaryEntry property in properties)\r\n                    {\r\n                        if (property.Key is string name && name == \"ProjectAssetsFile\" && property.Value is string projectAssetsFile)\r\n                        {\r\n                            projectImportsCollector.AddFile(projectAssetsFile);\r\n                        }\r\n                    }\r\n                }\r\n```",
        "createdAt": "2021-01-17T20:42:51Z",
        "updatedAt": "2021-01-17T20:42:51Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Suggestions welcome on how to name the item `IncludeInBinlog` that the binary logger will recognize as special.\r\n\r\nThen you could just do \r\n```\r\n<ItemGroup>\r\n    <IncludeInBinlog Include=\"CustomFile.txt\" />\r\n</ItemGroup>\r\n```\r\n\r\nto embed the file in binlog.\r\n\r\nEmbedding all project.assets.json roughly doubles the size of the files archive, from 450K to 900K. Feels like it's worth it though because project.assets.json contain valuable information not available elsewhere, e.g. why was a certain file chosen to be CopyLocal.",
        "createdAt": "2021-01-17T20:45:56Z",
        "updatedAt": "2021-01-17T20:45:56Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "It's unclear when to embed the file. ProjectStarted or ProjectEvaluationFinished may be too early as the file may not exist yet. But I guess in the majority of cases when a project is being built the Restore already happened. \r\n\r\nTargetFinished for Restore target could be another location.",
        "createdAt": "2021-02-27T04:45:10Z",
        "updatedAt": "2021-02-27T04:45:10Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I feel like I should first fix https://github.com/dotnet/msbuild/issues/5316 so we can better enumerate items after evaluation.",
        "createdAt": "2021-02-27T04:48:11Z",
        "updatedAt": "2021-02-27T04:48:11Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}