{
  "number": 2486,
  "title": "Switching branch on a solution being migrated to the new project system leaves dirty behind (even after clean)",
  "body": "_From @valeriob on August 28, 2017 9:21_\n\nHi,\r\nwe are migrating many solutions to the new project system, but the tool is not helping us.\r\nWe create a branch where we migrate the project formats (not every one is yet on vs 2017).\r\nWhen we switch back to the master (old prj system), we get an error for every project complaining about  : \r\n\r\n1) Create a solution with .net framework and old project system (master branch)\r\n2) Create a branch and migrate projects to the new prj format (new branch)\r\n3) Switch back to the master branch, clean and compile\r\n\r\nyou get many errors depending on the project like : \r\nYour project.json doesn't have a runtimes section. You should add '\"runtimes\": { \"win\": { } }' to your project.json and then re-run NuGet restore.\r\nYour project is not referencing the \".NETFramework,Version=v4.6.1\" framework. Add a reference to \".NETFramework,Version=v4.6.1\" in the \"frameworks\" section of your project.json, and then re-run NuGet restore.\r\n\r\nLooking inside ./obj folder i see 4 files :\r\nprojectName.nuget.cache\r\nprojectName.nuget.g.props\r\nprojectName.nuget.g.targets\r\nproject.assets.json\r\n\r\nif i manually delete the /obj folder of the project and compile it works.\r\nThanks\r\n\r\nUPDATED: \r\ni must add that this is very annoying on the dev machine, but particularly annoying on the CI server.\r\n\n\n_Copied from original issue: dotnet/project-system#2742_",
  "state": "OPEN",
  "createdAt": "2017-08-31T03:18:16Z",
  "updatedAt": "2024-02-21T16:35:55Z",
  "closedAt": null,
  "author": {
    "login": "davkean"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I'm going to move to MSBuild - but I suspect there's really nothing we can do here to do a \"real\" clean. MSBuild would have to keep a history of all produced outputs over time, and remove them when you ran Clean. ",
        "createdAt": "2017-08-31T03:18:17Z",
        "updatedAt": "2017-08-31T03:18:17Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "I agree. The only other way I can think of to do a clean is to fully empty the obj directory, but that could theoretically affect unrelated files. Is this still a problem, and do you have a recommended way to remember which files to delete, @valeriob?",
        "createdAt": "2020-08-21T22:27:41Z",
        "updatedAt": "2020-08-21T22:27:41Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The only solution i found was to delete all .obj folder, the fastest way was a git clean -dxf :D\r\n",
        "createdAt": "2020-08-22T13:47:31Z",
        "updatedAt": "2020-08-22T13:47:31Z",
        "author": {
          "login": "valeriob"
        }
      }
    ]
  }
}