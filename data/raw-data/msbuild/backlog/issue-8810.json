{
  "number": 8810,
  "title": "[Bug]: Deleting files from filesystem during task causes EmbeddedResources to not be included in Embedded.Manifest.xml",
  "body": "### Issue Description\r\n\r\nWe have a BeforeBuild target that executes a `npm` command to generate some js files which will be embedded into the project. This includes a file called app.js which will be put in the wwwroot folder.\r\n\r\nWhen the target generates these files they get embedded in the dll but are **not** included in Microsoft.Extensions.FileProviders.Embedded.Manifest.xml in the outputted dll.\r\n\r\nIf the files to be generated already existed before the target executes, then the files **do** get listed in the manifest.xml file. If the files get created by this step, then nothing from the wwwroot folder is included in the manifest at all.\r\n\r\nTurning on Diagnostic logs, I can see the file being found: `/resource:wwwroot\\dist\\app.js` within `Target CoreCompile`\r\n\r\n### Steps to Reproduce\r\n\r\nRun a target that generates additional files e.g.\r\n\r\n```\r\n    <Target Name=\"RunWebpack\" BeforeTargets=\"BeforeBuild\" Condition=\" '$(Configuration)' == 'Release' \">\r\n        <Exec Command=\"npm install\" WorkingDirectory=\"ClientApp\" />\r\n        <Exec Command=\"npm run build\" WorkingDirectory=\"ClientApp\" />\r\n        <ItemGroup>\r\n            <Content Remove=\"wwwroot/**/*\" />\r\n            <EmbeddedResource Include=\"wwwroot/**/*\" />\r\n        </ItemGroup>\r\n    </Target>\r\n```\r\n\r\nThe files do not get embedded if they are generated by the above step. They **do** get embedded if they already existed prior to the above target executing. It's very strange - the `npm run build` step only generates files inside `wwwroot/dist`, but **all** files in wwwroot are missing from the embedded manifest if the script generates anything. If the script doesn't generate anything (because the files already existed) then the manifest is generated correctly.\r\n\r\n\r\n### Expected Behavior\r\n\r\nEmbeddedResources should get included in the dll even if they are generated by a build step.\r\n\r\n### Actual Behavior\r\n\r\nResources do not get included in the manifest in the dll\r\n\r\n### Analysis\r\n\r\nI've tried using different targets (other than BeforeBuild) and they all have the same behavior.\r\n\r\nI tried embedding them like so:  `<EmbeddedResource Include=\"wwwroot/**/*\" Type=\"Non-Resx\" WithCulture=\"false\" />` which didn't work either.\r\n\r\n### Versions & Configurations\r\n\r\nMSBuild version 17.5.1+f6fdcf537 for .NET Framework\r\n17.5.1.16304",
  "state": "CLOSED",
  "createdAt": "2023-05-29T15:26:52Z",
  "updatedAt": "2023-06-02T14:49:58Z",
  "closedAt": "2023-06-02T14:48:39Z",
  "author": {
    "login": "DanielStout5"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "As I discovered while writing this ticket, the files actually do get embedded, so I don't think the problem is actually with msbuild  even though they're missing from the manifest - so it's more of a problem with the [`GenerateEmbeddedResourcesManifest`](https://github.com/dotnet/aspnetcore/blob/main/src/FileProviders/Embedded/src/build/netstandard2.0/Microsoft.Extensions.FileProviders.Embedded.targets) task that's part of aspnetcore.\r\n\r\nIn particular I think the problem is that the task also executes at DesignTime, in Visual Studio which means that by only including the EmbeddedResources within a task that gets skipped at DesignTime, the manifest gets overwritten later with a version that doesn't include the generated files.",
        "createdAt": "2023-06-02T14:48:39Z",
        "updatedAt": "2023-06-02T14:49:58Z",
        "author": {
          "login": "DanielStout5"
        }
      }
    ]
  }
}