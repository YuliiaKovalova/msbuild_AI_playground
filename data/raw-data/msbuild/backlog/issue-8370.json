{
  "number": 8370,
  "title": "MSBuild TerminalLogger keeps users informed about their build and delights new users",
  "body": "The LiveLogger is an exciting new feature that MSBuild team has planned for .NET 8. Originally spearheaded by @edvilme, the LiveLogger is intended to be a live-updating, data-heavy view of what is happening in your build right now, using features present in modern terminals to help declutter and organize build results. The goal for this logger is to become the new default experience for all interactive build sessions started by the .NET CLI!\n\nThis issue will serve as a centralized way to check on the status of the LiveLogger feature.\n\n## Release plan\n\nWe are aiming for an initial 'give it a try', opt-in release by the 8.0.100-preview4 time frame. After that, we'll iterate on the logger to meet our goals for user experience and react to user feedback until we're satisfied with the performance and functionality. At that point, we'll enable the live logger by default in the .NET CLI and the feature will be officially released.\n\n## Items to tackle for final release\n\nBefore we can do that, the following items should be addressed:\n\n* [x] The outstanding PRs need to be merged. #8356, #8324, and #8314 all represent the latest work on the logger, and we need to get them integrated to serve as the foundation for further work.\n* [x] #8393\n* [x] An announcement blog for the preview2 timeframe needs to be drafted. I'd like to include @edvilme in the authoring of this post to talk about his time working on it.\n* [x] https://github.com/dotnet/msbuild/issues/8379 We need to iterate on the display of completed-but-irrelevant projects. \n* [ ] #8428 (Consider adding a message to the console logger output advertising LiveLogger during the preview timeframe)\n* [x] #8391\n* [x] #8392\n* [x] #8384\n* [x] #8429 (LiveLogger should respond to user themes)\n* [x] #8430 (Perform code review of the code and cleanup coding/styling standards miss-steps)\n* [x] #8413\n* [x] #8431 (Ensure LiveLogger has the right opt-in state to get the most modern logging including when combined with `-bl`)\n* [x] #8418\n* [x] #8435\n* [x] Bug bash for preview 2\n* [x] #8450 \n* [x] #8455 \n* [x] #8456\n* [x] #8458\n* [x] #8460 \n* [x] #8463 \n* [x] #8464\n* [x] #8715 \n* [ ] https://github.com/dotnet/msbuild/issues/8760\n* [ ] https://github.com/dotnet/msbuild/issues/8878\n* [ ] #8782\n* [x] #8781\n* [ ] #8651",
  "state": "OPEN",
  "createdAt": "2023-01-30T23:33:19Z",
  "updatedAt": "2025-06-02T08:30:53Z",
  "closedAt": null,
  "author": {
    "login": "baronfel"
  },
  "milestone": {
    "title": ".NET 10"
  },
  "assignees": {
    "nodes": [
      {
        "login": "baronfel"
      }
    ]
  },
  "labels": [
    "Area: Logging",
    "triaged",
    "Area: Terminal Logger"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Thank you for the shoutout and including me! \ud83d\ude00",
        "createdAt": "2023-01-30T23:38:02Z",
        "author": {
          "login": "edvilme"
        }
      },
      {
        "body": "Regarding the second to last point... before I left I was considering sorting the projects such that the finished ones appear at the top, and that the buffer should scroll to the last added line. However I am unsure if this would hurt performance, and if it would mean a lot of jumping",
        "createdAt": "2023-01-30T23:38:16Z",
        "author": {
          "login": "edvilme"
        }
      },
      {
        "body": "Sure thing @edvilme - I'm going to make separate issues for tracking the line items here, so we can go into details on those :+1: ",
        "createdAt": "2023-01-30T23:40:15Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": ">  Consider adding a message to the console logger output advertising LiveLogger during the preview timeframe\r\n\r\nDoes that mean showing something like \"Using Console Logger. Try the new LiveLogger using the switch -livelogger\"?\r\n\r\n>  LiveLogger should respond to user themes\r\n\r\nDoes that mean like dark/light theme?",
        "createdAt": "2023-02-08T05:04:00Z",
        "author": {
          "login": "edvilme"
        }
      },
      {
        "body": "Is there a link to documentation on corresponding features in MSBuild tasks, if there are any?\r\n\r\nIn particular, the \"build complete, here is the resulting assembly\" message is now retained with the assembly path turned into a hyperlink (or the publish directory for a publish).\r\n\r\nIs there a way for build targets that generate other artifacts (in my case, a markdown file with the compiled assembly's public API) to have a similar result, including the hyperlink for the output file? Or is this currently the logger doing \"hardcoded\" detection of certain messages?",
        "createdAt": "2023-12-31T18:54:04Z",
        "author": {
          "login": "Zastai"
        }
      },
      {
        "body": "> Is there a way for build targets that generate other artifacts (in my case, a markdown file with the compiled assembly's public API) to have a similar result, including the hyperlink for the output file? Or is this currently the logger doing \"hardcoded\" detection of certain messages?\r\n\r\nCurrently it's hardcoded, yes. I have a design in my head to fix this, which I've been meaning to write down but hadn't got around to. Thanks for the reason to do so! https://github.com/dotnet/msbuild/issues/9608",
        "createdAt": "2024-01-05T19:55:25Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}