{
  "number": 5915,
  "title": "MSBuild64 Throws System.IO.PathTooLongException MSBuild32 Unaffected After Upgrade to VS2019 16.8.2",
  "body": "### Issue Description\r\nAfter Upgrading to Visual Studio 16.8.2 64Bit MSBuild Now Throws the following when attempting to build a solution that is deeply nested:\r\n\r\n```text\r\nThe \"MSBuild\" task failed unexpectedly.\r\nSystem.IO.PathTooLongException: The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.\r\n   at System.IO.Path.LegacyNormalizePath(String path, Boolean fullCheck, Int32 maxPathLength, Boolean expandShortPaths)\r\n   at System.IO.Path.InternalGetDirectoryName(String path)\r\n   at Microsoft.Build.BackEnd.MSBuild.<ExecuteTargets>d__80.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Build.BackEnd.MSBuild.<BuildProjectsInParallel>d__77.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.Build.BackEnd.MSBuild.<ExecuteInternal>d__76.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\nUsing the 32bit MSBuild does not have this issue, however we MUST use 64Bit MSBuild due to bugs in our vendors project implementation.\r\n\r\n### Steps to Reproduce\r\nWe unfortunately cannot publicly post the source, however we can **privately** provide msbuild bin logs that show this working in 32bit and show it failing in 64bit, we are motivated to resolve the issue.\r\n\r\n### Expected Behavior\r\nShould Build Without Issue, in BOTH 64 and 32bit MSBuild\r\n\r\n### Actual Behavior\r\nWORKS in 32bit MSBuild; FAILS in 64bit MSBuild.\r\n\r\n### Analysis\r\nWe have emitted the metasolution (since we're building against an SLN) Looking at a bunch of these paths these are needlessly long, whomever is generating these \"AbsolutePaths\" really needs to be calling `System.IO.Path.GetFullPath(string)` to resolve these relative paths to actual paths, otherwise you're going to blow out the path too long a lot sooner than you probably should.\r\n\r\nHere's a redacted version of one of the lines, there are several hundred that are like this for us:\r\n\r\n```xml\r\n  <ProjectConfiguration Project=\"{493AXXXX-055C-47B7-9CE3-9XXXXAD4XXXX}\" AbsolutePath=\"S:\\xxxx-xxxxxx\\xxxxxx\\xxxxxx\\xxxxxxxxxxxxxxxxx\\xxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxx\\xx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\..\\..\\..\\xxxxxxxxx\\xxxxxxxxxxxxxxxxxxx\\xxxxxxxxxxxxxxxxxxxx\\xx.xxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxx\\xx.xxxxxxx.xxxxxxxxxxxxxxxxxxx.xxxxxxxxx.xxxxxx\" BuildProjectInSolution=\"True\">Debug|AnyCPU</ProjectConfiguration>\r\n```\r\n\r\nI am almost 100% Positive this worked in versions of Visual Studio BEFORE 16.8.2 (I might have been on some version of 16.7.x however) I am trying to track down why we are getting U2D failures and I KNOW I have used this solution in 64bit MSBuild without issue before.\r\n\r\n### Versions & Configurations\r\n```text\r\nMicrosoft (R) Build Engine version 16.8.2+25e4d540b for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n```\r\n\r\n### Attach a binlog\r\nPlease provide a way to privately provide these and they will be given unto you.",
  "state": "CLOSED",
  "createdAt": "2020-11-25T19:33:25Z",
  "updatedAt": "2021-01-27T23:38:00Z",
  "closedAt": "2021-01-27T23:38:00Z",
  "author": {
    "login": "aolszowka"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "After https://github.com/dotnet/msbuild/pull/5950 is merged and shipped, would you mind checking if it resolved this? (Or earlier if you want: https://github.com/dotnet/msbuild/blob/master/documentation/Deploy-MSBuild.md)",
        "createdAt": "2020-12-14T16:17:21Z",
        "updatedAt": "2020-12-14T16:17:21Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind Yup, I am hoping for a two-fer here as I was the root cause of #5950, Its all connected...",
        "createdAt": "2020-12-14T22:14:57Z",
        "updatedAt": "2020-12-14T22:14:57Z",
        "author": {
          "login": "aolszowka"
        }
      },
      {
        "body": "#5950 should have been released in 16.9 preview 3, so I'm assuming this is resolved? If not, let me know, and I can reopen this.",
        "createdAt": "2021-01-27T23:37:57Z",
        "updatedAt": "2021-01-27T23:37:57Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}