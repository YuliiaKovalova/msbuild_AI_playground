{
  "number": 9016,
  "title": "[BinFmt] Facilitate proper documentation of Custom BuildEventArgs deprecation and replacement",
  "body": "https://github.com/dotnet/msbuild/pull/8917#discussion_r1258448613\r\n\r\n### Background \r\n #6215\r\n This subitem is focused on making sure that https://aka.ms/msbuild/eventargs / https://learn.microsoft.com/en-us/dotnet/api/microsoft.build.framework.custombuildeventargs contains information about `CustomBuildEventArgs` deprecation, reasoning, suggested replacements and possibly planned timelines (for Core and for FullFw)\r\n\r\n### Suggested approach\r\nPut together the required information (based on https://github.com/dotnet/msbuild/pull/8917), create documentation bug https://github.com/dotnet/docs/issues and cooperate with @ghogen on apropriate planning and execution or directly create proposal PR in the doc repo [internal] https://github.com/MicrosoftDocs/visualstudio-docs-pr",
  "state": "CLOSED",
  "createdAt": "2023-07-12T11:58:34Z",
  "updatedAt": "2024-02-21T16:58:56Z",
  "closedAt": "2023-09-22T20:07:33Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "https://github.com/dotnet/docs/issues/36403",
        "createdAt": "2023-07-26T12:40:02Z",
        "updatedAt": "2023-07-26T12:40:02Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Can an assembly with custom events be made compatible with both older and newer versions of MSBuild?  If not, I guess a package could ship two assemblies and load one of them in UsingTask.\n\nFor a logger that consumes such events, the situation seems simpler, as loggers have to be chosen by the caller of MSBuild, which can then choose the version of MSBuild as well\u2026 but does this change make older binlog files incompatible?",
        "createdAt": "2023-07-26T12:53:07Z",
        "updatedAt": "2023-07-26T12:53:07Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo Good observations and questions. The term 'deprecation' that we use a lot in this context is missleading at the very least. From the language and binary point of view there is no depraction as we commonly know it. Only now engine checks the types of events transmitted and if it encounters unknown event (that therefore relies on BinaryFormatter serialization) a warning is issued. So full backwards compatibility should be guaranteed.\r\n\r\nYou however have a very good point of forward compatibility - the newly introduced events won't get transfered by the older versions of engine - looking into that...",
        "createdAt": "2023-07-26T14:06:01Z",
        "updatedAt": "2023-07-26T14:06:01Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo Forward compatibility will not be guaranteed here. Assemblies should be compiled against the oldest MSBuild they intend to support.\r\nFor Full Framework the build warnings are explicit opt-in - so it shouldn't cause unexpected degradations.\r\nFor Core we haven't detected any usage of concerns internaly or in the wild - so hopefully this should be 'just fine'. There still will be an option to override the warning/error/crashing behavior temporarily before facilitating the proper resolution (onboard onto the new custom events).",
        "createdAt": "2023-07-31T07:28:25Z",
        "updatedAt": "2023-07-31T07:28:25Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "@KirillOsenkov does this effect [StructuredLogger](https://github.com/KirillOsenkov/MSBuildStructuredLog/blob/7d6b5c293368668e2ef20183c475c6a9f4552bec/src/StructuredLogger/AssemblyLoadBuildEventArgs2.cs#L20)?",
        "createdAt": "2023-07-31T10:41:07Z",
        "updatedAt": "2023-07-31T10:41:07Z",
        "author": {
          "login": "slang25"
        }
      },
      {
        "body": "@slang25 No events have been removed - so old logs will be still possible to open with new BinlogViewers without any issues\r\nNew events have been introduced - so version check needs to be employed and new version of BinlogViewer will need to be used - @rokonec - have you increased the [`FileFormat`](https://github.com/dotnet/msbuild/blob/main/src/Build/Logging/BinaryLogger/BinaryLogger.cs#L63) and facilitated the BinlogViewer change?",
        "createdAt": "2023-07-31T13:10:21Z",
        "updatedAt": "2023-07-31T13:10:21Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "There were no reason to increase FileFormat because file format has not been changed at all.\r\nThis will be addressed in https://github.com/dotnet/msbuild/issues/9091",
        "createdAt": "2023-08-01T11:36:15Z",
        "updatedAt": "2023-08-01T12:02:51Z",
        "author": {
          "login": "rokonec"
        }
      }
    ]
  }
}