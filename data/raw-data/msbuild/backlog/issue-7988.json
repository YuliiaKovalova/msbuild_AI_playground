{
  "number": 7988,
  "title": "Bootstrap MSBuild unable to build console projects: unable to resolve workload SDKs",
  "body": "Prep a bootstrap MSBuild layout using `build /p:CreateBootstrap=true`\r\nor download the one I used from:\r\nhttps://kirillosenkovfiles.blob.core.windows.net/kirillosenkovblob/msbuild.17.3.1.zip\r\n\r\nBe on an empty Windows machine, such as Windows Sandbox VM\r\n\r\nCreate and build a new C# console app targeting net472\r\n\r\nExpected: builds successfully\r\n\r\nActual:\r\n```\r\nBuild FAILED.\r\n\r\n  C:\\Users\\WDAGUtilityAccount\\AppData\\Local\\Bootstrap\\MSBuild\\Sdks\\Microsoft.NET.Sdk\\targets\\Mic\r\nrosoft.NET.Sdk.ImportWorkloads.props(14,3): error : Unable to locate the .NET SDK. Check that it is installed and that\r\nthe version specified in global.json (if any) matches the installed version.\r\n  C:\\Users\\WDAGUtilityAccount\\AppData\\Local\\Bootstrap\\MSBuild\\Sdks\\Microsoft.NET.Sdk\\targets\\Mic\r\nrosoft.NET.Sdk.ImportWorkloads.targets(16,3): error : Unable to locate the .NET SDK. Check that it is installed and tha\r\nt the version specified in global.json (if any) matches the installed version.\r\n```\r\n\r\nThe two SDKs it can't resolve:\r\n```\r\nResolving SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator'...\r\nResolving SDK 'Microsoft.NET.SDK.WorkloadManifestTargetsLocator'...\r\n```\r\n\r\nFirst off, the error messages are inadequate - they don't mention the SDK reference that failed to resolve.\r\n\r\nBoth of these are supposed to resolve from:\r\nhttps://github.com/dotnet/sdk/blob/3dc5e528fffc050cace4cff8bc32954eb33f0455/src/Resolvers/Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver/CachingWorkloadResolver.cs#L121-L136\r\n\r\nHowever on an empty machine with just the xcopied MSBuild something goes awry apparently and it fails with the obscure messages above.\r\n\r\nUntil recently, the bootstrap MSBuild was xcopyable, meaning it used to build desktop-targeting projects on a completely empty Windows machine.\r\n\r\nAt some point this regressed. It is crucial that we continue to be able to have xcopyable MSBuild and we should move towards making MSBuild more portable, not less.",
  "state": "CLOSED",
  "createdAt": "2022-09-20T03:08:10Z",
  "updatedAt": "2024-07-30T15:54:27Z",
  "closedAt": "2024-05-09T08:51:47Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "Area: Our Own Build"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      },
      {
        "login": "YuliiaKovalova"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Nothing seems to be logging anything into the SdkLogger.\r\n\r\nThis is never used for anything:\r\nhttps://github.com/dotnet/msbuild/blob/cc3db358d34ad4cd1ec0c67e17582d7ca2a15040/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs#L259",
        "createdAt": "2022-09-20T03:11:37Z",
        "updatedAt": "2022-09-20T03:11:37Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "It would be nice to prioritize this, because every release MSBuild ships, it ships being unable to work on an empty machine without the SDK installed. If it continues to be broken, we will be unable to just walk up to the MSBuild repo, build bootstrap and expect that it just works on any machine.\r\n\r\nI normally like building and archiving bootstrapped MSBuild for every release, but the last working one I have is from 17.2 or something. This is also useful for bisecting, to answer questions like \"which MSBuild release did this break in?\"",
        "createdAt": "2023-09-13T23:44:16Z",
        "updatedAt": "2023-09-13T23:44:16Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@marcpopMSFT ",
        "createdAt": "2023-09-13T23:44:45Z",
        "updatedAt": "2023-09-13T23:44:45Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@baronfel I'd love to see this fixed at some point",
        "createdAt": "2023-12-20T02:59:35Z",
        "updatedAt": "2023-12-20T02:59:35Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Latest messages from bootstrap MSBuild 17.8.3:\r\n\r\n```\r\nC:\\Users\\WDAGUtilityAccount\\AppData\\Local\\Microsoft\\MSBuild\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.props (14,3): Could not resolve SDK \"Microsoft.NET.SDK.WorkloadAutoImportPropsLocator\". Exactly one of the probing messages below indicates why we could not resolve the SDK. Investigate and resolve that message to correctly specify the SDK.\r\n  Unable to locate the .NET SDK. Check that it is installed, your PATH is configured for the correct architecture, and that the version specified in global.json (if any) matches the installed version.\r\n  The NuGetSdkResolver did not resolve this SDK because there was no version specified in the project or global.json.\r\n  MSB4276: The default SDK resolver failed to resolve SDK \"Microsoft.NET.SDK.WorkloadAutoImportPropsLocator\" because directory \"C:\\Users\\WDAGUtilityAccount\\AppData\\Local\\Microsoft\\MSBuild\\Sdks\\Microsoft.NET.SDK.WorkloadAutoImportPropsLocator\\Sdk\" did not exist.\r\n```\r\n\r\n```\r\nC:\\Users\\WDAGUtilityAccount\\AppData\\Local\\Microsoft\\MSBuild\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.targets (16,3): Could not resolve SDK \"Microsoft.NET.SDK.WorkloadManifestTargetsLocator\". Exactly one of the probing messages below indicates why we could not resolve the SDK. Investigate and resolve that message to correctly specify the SDK.\r\n  Unable to locate the .NET SDK. Check that it is installed, your PATH is configured for the correct architecture, and that the version specified in global.json (if any) matches the installed version.\r\n  The NuGetSdkResolver did not resolve this SDK because there was no version specified in the project or global.json.\r\n  MSB4276: The default SDK resolver failed to resolve SDK \"Microsoft.NET.SDK.WorkloadManifestTargetsLocator\" because directory \"C:\\Users\\WDAGUtilityAccount\\AppData\\Local\\Microsoft\\MSBuild\\Sdks\\Microsoft.NET.SDK.WorkloadManifestTargetsLocator\\Sdk\" did not exist.\r\n```",
        "createdAt": "2023-12-20T03:03:28Z",
        "updatedAt": "2023-12-20T03:03:28Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Related to #6566, maybe https://github.com/dotnet/msbuild/blob/5cf78584f998e524374758c5798b7054bf2595e9/eng/BootStrapMSBuild.targets#L258-L260 should apply to netfx MSBuild too.",
        "createdAt": "2023-12-20T12:14:50Z",
        "updatedAt": "2023-12-20T12:14:50Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@JanKrivanek if there was one MSBuild issue that I'd love to see fixed the most, it's this one\r\n\r\nIt's super important for standalone bootstrap MSBuild to be able to build projects, and it's currently not working. It's super important to be able to check out any commit of MSBuild, build bootstrap and be able to use that MSBuild to build real projects.",
        "createdAt": "2024-03-21T18:30:49Z",
        "updatedAt": "2024-03-21T18:30:49Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I'll venmo $100 to whoever fixes this.",
        "createdAt": "2024-05-03T21:47:13Z",
        "updatedAt": "2024-05-03T21:47:13Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "This is a long standing issue and I just wanted to dig what is this about(also good motivator \ud83d\udcb0 \ud83d\ude04 ) I did not understand the full picture but I just download the source of this repo to a new(empty) windows installation and ran the build command, got the error below\r\n\r\n```shell\r\n  Microsoft.Build.Utilities -> C:\\Users\\vboxuser\\msbuild-main\\artifacts\\bin\\Microsoft.Build.Utilities\\Debug\\netstandard2.0\\Microsoft.Build.Utilities.Core.dll\r\nC:\\Users\\vboxuser\\msbuild-main\\.tools\\msbuild\\17.8.5\\tools\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(3345,5): error MSB3821: Couldn't process file system.design\\system.design.txt due to its being in the Internet or Res\r\ntricted zone or having the mark of the web on the file. Remove the mark of the web if you want to process these files. [C:\\Users\\vboxuser\\msbuild-main\\src\\Tasks\\Microsoft.Build.Tasks.csproj::TargetFramework=net8.0]\r\n  StringTools -> C:\\Users\\vboxuser\\msbuild-main\\artifacts\\bin\\StringTools\\Debug\\net35\\Microsoft.NET.StringTools.net35.dll\r\n  StringTools.UnitTests -> C:\\Users\\vboxuser\\msbuild-main\\artifacts\\bin\\StringTools.UnitTests\\Debug\\net472\\Microsoft.NET.StringTools.UnitTests.dll\r\n  Microsoft.Build.UnGAC -> C:\\Users\\vboxuser\\msbuild-main\\artifacts\\bin\\Microsoft.Build.UnGAC\\Debug\\net45\\Microsoft.Build.UnGAC.exe\r\n  StringTools.UnitTests -> C:\\Users\\vboxuser\\msbuild-main\\artifacts\\bin\\StringTools.UnitTests\\Debug\\net8.0\\Microsoft.NET.StringTools.UnitTests.dll\r\n  StringTools.UnitTests.net35 -> C:\\Users\\vboxuser\\msbuild-main\\artifacts\\bin\\StringTools.UnitTests.net35\\Debug\\net472\\Microsoft.NET.StringTools.net35.UnitTests.dll\r\nC:\\Users\\vboxuser\\msbuild-main\\.tools\\msbuild\\17.8.5\\tools\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(3345,5): error MSB3091: Task failed because \"resgen.exe\" was not found, or the correct Microsoft Windows SDK is not i\r\nnstalled. The task is looking for \"resgen.exe\" in the \"bin\" subdirectory beneath the location specified in the InstallationFolder value of the registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v8.0A\\WinSDK-NetFx3\r\n5Tools-x86. You may be able to solve the problem by doing one of the following:  1) Install the Microsoft Windows SDK.  2) Install Visual Studio 2010.  3) Manually set the above registry key to the correct location.  4) Pass the correct\r\n location into the \"ToolPath\" parameter of the task. [C:\\Users\\vboxuser\\msbuild-main\\src\\MSBuildTaskHost\\MSBuildTaskHost.csproj]\r\n  StringTools.Benchmark -> C:\\Users\\vboxuser\\msbuild-main\\artifacts\\bin\\StringTools.Benchmark\\Debug\\net472\\StringTools.Benchmark.exe\r\n  StringTools.Benchmark -> C:\\Users\\vboxuser\\msbuild-main\\artifacts\\bin\\StringTools.Benchmark\\Debug\\net8.0\\StringTools.Benchmark.dll\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\vboxuser\\msbuild-main\\src\\Directory.Build.targets(137,5): error : TlbExp was not found. Ensure that you have installed everything from .vsconfig. If you have, please report a bug to MSBuild. [C:\\Users\\vboxuser\\msbuild-main\\src\\\r\nFramework\\Microsoft.Build.Framework.csproj::TargetFramework=net472]\r\nC:\\Users\\vboxuser\\msbuild-main\\.tools\\msbuild\\17.8.5\\tools\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(3345,5): error MSB3821: Couldn't process file system.design\\system.design.txt due to its being in the Internet or Res\r\ntricted zone or having the mark of the web on the file. Remove the mark of the web if you want to process these files. [C:\\Users\\vboxuser\\msbuild-main\\src\\Tasks\\Microsoft.Build.Tasks.csproj::TargetFramework=net8.0]\r\nC:\\Users\\vboxuser\\msbuild-main\\.tools\\msbuild\\17.8.5\\tools\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(3345,5): error MSB3091: Task failed because \"resgen.exe\" was not found, or the correct Microsoft Windows SDK is not i\r\nnstalled. The task is looking for \"resgen.exe\" in the \"bin\" subdirectory beneath the location specified in the InstallationFolder value of the registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v8.0A\\WinSDK-NetFx3\r\n5Tools-x86. You may be able to solve the problem by doing one of the following:  1) Install the Microsoft Windows SDK.  2) Install Visual Studio 2010.  3) Manually set the above registry key to the correct location.  4) Pass the correct\r\n location into the \"ToolPath\" parameter of the task. [C:\\Users\\vboxuser\\msbuild-main\\src\\MSBuildTaskHost\\MSBuildTaskHost.csproj]\r\n    0 Warning(s)\r\n    3 Error(s)\r\n\r\nTime Elapsed 00:00:25.76\r\nBuild failed with exit code 1. Check errors above.\r\n```\r\nSorry for my ignorance. Are we trying to fix the this **build.cmd** process or are we trying to fix the dotnet project generator ?",
        "createdAt": "2024-05-04T14:30:55Z",
        "updatedAt": "2024-05-04T14:30:55Z",
        "author": {
          "login": "ozkanpakdil"
        }
      },
      {
        "body": "@ozkanpakdil neither, you should be able to build this repo either way. Try cloning the repo instead of downloading a zip file (or Unblock the zip file in the file properties before extracting the files). The scenario to be fixed is described in the OP, it's running the msbuild itself to compile a blank project.\r\n\r\nI run into this issue myself trying to compile a .NET project on a machine that has .NET SDK binaries only, i.e. not installed by the installer.",
        "createdAt": "2024-05-04T15:03:49Z",
        "updatedAt": "2024-05-04T15:03:49Z",
        "author": {
          "login": "miloush"
        }
      },
      {
        "body": "> I run into this issue myself trying to compile a .NET project on a machine that has .NET SDK binaries only, i.e. not installed by the installer.\r\n\r\n@miloush Can you elaborate please? The SDK zips should work fine.",
        "createdAt": "2024-05-06T20:16:04Z",
        "updatedAt": "2024-05-06T20:17:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I download the SDK binaries and put them in a folder. Then when I want to compile a project either I can use MSBuildSDKsPath environment to point to the folder (for the default resolver), or I explicitly include the SDK props and targets files via `<Import />`.\r\n\r\nEither way, I get\r\n```\r\n...\\dotnet-sdk-8.0.204-win-x64\\sdk\\8.0.204\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.props (14,3): Unable to locate the .NET SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.\r\n...\\dotnet-sdk-8.0.204-win-x64\\sdk\\8.0.204\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.props (14,38): error MSB4236: The SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator' specified could not be found.\r\n```",
        "createdAt": "2024-05-06T20:31:03Z",
        "updatedAt": "2024-05-06T20:31:03Z",
        "author": {
          "login": "miloush"
        }
      },
      {
        "body": "Using what MSBuild, @miloush?",
        "createdAt": "2024-05-06T20:40:41Z",
        "updatedAt": "2024-05-06T20:40:41Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Any recent MSBuild since 2022, specifically I think bootstrap built from 17.8.3",
        "createdAt": "2024-05-06T20:41:53Z",
        "updatedAt": "2024-05-06T20:41:53Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@KirillOsenkov AFAICT @miloush is describing a different problem. You are wanting #10112.",
        "createdAt": "2024-05-06T20:43:00Z",
        "updatedAt": "2024-05-06T20:43:00Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hm, appears to be `MSBuild version 17.3.1+2badb37d1 for .NET Framework`",
        "createdAt": "2024-05-06T20:45:14Z",
        "updatedAt": "2024-05-06T20:45:14Z",
        "author": {
          "login": "miloush"
        }
      },
      {
        "body": "@miloush that is old to use a new SDK like 8.0.204. I don't think I'd expect that combination to work.\r\n\r\nIn addition if you want to use a .NET Framework MSBuild (VS/msbuild.exe) with a zip SDK, I think you'd need to set some of the more specific environment variables (`DOTNET_ROOT` maybe, or `DOTNET_MSBUILD_SDK_RESOLVER_CLI_DIR`).",
        "createdAt": "2024-05-06T21:20:29Z",
        "updatedAt": "2024-05-06T21:20:29Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald when I install the SDK, I get\r\n```\r\nMicrosoft.NET.Sdk.ImportWorkloads.targets (16,3): Version 8.0.204 of the .NET SDK requires at least version 17.8.3\r\nof MSBuild. The current available version of MSBuild is 17.3.1.46901. Change the .NET SDK specified in global.json\r\nto an older version that requires the MSBuild version currently available\r\n```\r\n\r\nso I would expect that too without installation, instead I get the unresolved SDKs error above. I will try to see how it looks like with a newer msbuild.",
        "createdAt": "2024-05-06T22:31:46Z",
        "updatedAt": "2024-05-06T22:31:46Z",
        "author": {
          "login": "miloush"
        }
      },
      {
        "body": "It works! But also need to drop the sentinel for amd64. I can do it.",
        "createdAt": "2024-05-07T06:58:06Z",
        "updatedAt": "2024-05-07T06:58:06Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Setting `MSBuildEnableWorkloadResolver` to `false` works as well.",
        "createdAt": "2024-05-07T06:59:05Z",
        "updatedAt": "2024-05-07T06:59:05Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I am pretty sure I tried to set `MSBuildEnableWorkloadResolver` in the project and it wasn't helpful. If I remember correctly, the build succeeded, but no output was produced.",
        "createdAt": "2024-05-07T08:03:16Z",
        "updatedAt": "2024-05-07T08:03:16Z",
        "author": {
          "login": "miloush"
        }
      },
      {
        "body": "Sorry about the delay, I have the setup back.\r\nNo SDK installed, only 8.0 ZIP. Upgraded to MSBuild version 17.8.3+195e7f5a3 for .NET Framework.\r\n\r\nMSBuildSDKsPath set to ...\\dotnet-sdk-8.0.204-win-x64\\sdk\\8.0.204\\Sdks\\\r\n\r\nThe compilation results in error:\r\n> ..\\dotnet-sdk-8.0.204-win-x64\\sdk\\8.0.204\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.props (14,38): error MSB4236: The SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator' specified could not be found.\r\n\r\n",
        "createdAt": "2024-05-16T14:09:19Z",
        "updatedAt": "2024-05-16T14:09:19Z",
        "author": {
          "login": "miloush"
        }
      },
      {
        "body": "@miloush don't set `MSBuildSDKsPath`; it doesn't do what you want. Instead set the .NET SDK resolver environment variables https://github.com/dotnet/msbuild/issues/7988#issuecomment-2096943886.",
        "createdAt": "2024-05-16T14:18:01Z",
        "updatedAt": "2024-05-16T14:18:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "OK `DOTNET_ROOT` didn't help, but `DOTNET_MSBUILD_SDK_RESOLVER_CLI_DIR` set to ...\\dotnet-sdk-8.0.204-win-x64 seems to have done the trick.\r\n\r\nThis is not a trivial knowledge, and some instructions should be included either at the SDK download page or in the zip archive. Thanks for help!",
        "createdAt": "2024-05-16T14:32:47Z",
        "updatedAt": "2024-05-16T14:32:47Z",
        "author": {
          "login": "miloush"
        }
      },
      {
        "body": "It has to work after merging https://github.com/dotnet/msbuild/issues/10300",
        "createdAt": "2024-07-30T13:17:34Z",
        "updatedAt": "2024-07-30T15:53:56Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "\"It has no work\" - could you please clarify?",
        "createdAt": "2024-07-30T15:40:00Z",
        "updatedAt": "2024-07-30T15:40:00Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "> \"It has no work\" - could you please clarify?\r\n\r\nI apologize for the typo, it has TO work now :D",
        "createdAt": "2024-07-30T15:54:26Z",
        "updatedAt": "2024-07-30T15:54:26Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  }
}