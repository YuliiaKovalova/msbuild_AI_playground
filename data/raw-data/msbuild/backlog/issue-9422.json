{
  "number": 9422,
  "title": "Investigate and categorize existing MSBuild analyzing logic - Roslyn, StructuredLogViewer",
  "body": "### Input\r\n\r\n* Roslyn MSBuild analyzing logic: https://github.com/dotnet/roslyn/tree/585fed5498590558700176b8c12e0e04c99a7350/src/Tools/BuildBoss\r\n* Structured logger analyzer: https://github.com/KirillOsenkov/MSBuildStructuredLog/tree/main/src/StructuredLogger/Analyzers\r\n* MonoDevelop.MSBuildEditor\r\nhttps://github.com/mhutch/MonoDevelop.MSBuildEditor\r\n\r\n### Expected output\r\n\r\n* List of categories of rules (with possible different dimensions of categorization - required input types; repo/project specific vs universal; phase of build when those can run (evaluation, build, postbuild); level of complexity of the rule; etc.)\r\n* Notable examples of rules per category\r\n* [optional] indication of candidates for intial spiking (rules that are universaly applicable, with low leve of complexity)",
  "state": "CLOSED",
  "createdAt": "2023-11-15T13:38:51Z",
  "updatedAt": "2024-02-21T16:58:36Z",
  "closedAt": "2023-11-30T16:48:08Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "YuliiaKovalova"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "The investigation results:\r\n\r\n**Categorization**\r\nThe candidates for analysis:                                    \r\n\r\n- Solution\r\nCheck for project [duplicates](https://github.com/dotnet/roslyn/blob/585fed5498590558700176b8c12e0e04c99a7350/src/Tools/BuildBoss/SolutionCheckerUtil.cs#L78C30-L78C30), and proper system GUID (c#, vb, shared)\r\n- Project file\r\nProject Type [C#/VB or Tool](https://github.com/dotnet/roslyn/blob/585fed5498590558700176b8c12e0e04c99a7350/src/Tools/BuildBoss/ProjectCheckerUtil.cs#L32), Target Frameworks (if any version restrictions exist), Package Versions (sometimes it is needed to freeze a particular version), InternalsVisibleTo correctness, [TargetFramework vs TargetFrameworks](https://github.com/mhutch/MonoDevelop.MSBuildEditor/blob/29c2ab3b7b1428dfb32ba6d0be2a2e49962be824/MonoDevelop.MSBuild/Analyzers/TargetFrameworksOrTargetFrameworkAnalyzer.cs#L13), [RuntimeIdentifier vs RuntimeIdentifiers](https://github.com/mhutch/MonoDevelop.MSBuildEditor/blob/29c2ab3b7b1428dfb32ba6d0be2a2e49962be824/MonoDevelop.MSBuild/Analyzers/RuntimeIdentifierOrRuntimeIdentifiersAnalyzer.cs#L13C18-L13C18)\r\n\r\n- Item Group\r\ncheck the existence of the referenced items\r\n\r\n- Properties\r\ncheck if props tag imports props only\r\n\r\n- Target\r\nPrecompute conditions (or apply some rules to writing them - quotes, complex condition, mentioned props existence), check if referenced targets exist, duplicate, no[ properties imports](https://github.com/dotnet/roslyn/blob/585fed5498590558700176b8c12e0e04c99a7350/src/Tools/BuildBoss/TargetsCheckerUtil.cs#L86C33-L86C33) in targets\r\n\r\n- Tasks \r\nCheck if the mentioned task in xml has implementation + all the required parameters specified\r\nOther task-specific checks such as: \r\nResolveAssemblyReference: check on CopyLocal presence, unused refs\r\nFile Copy - check source/destination?\r\n\r\nThe mentioned blocks can be checked during the _Evaluation_ phase.\r\nIt is possible to use either a solution or project file as an entry point for analysis.\r\n\r\n**Rules severity**\r\nSuggest sticking to the levels that [Roslyn ](https://learn.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers?view=vs-2022#configure-severity-levels)has - it will allow us to integrate msbuild analyzer in VS pretty easily.\r\n\r\n**Object Model**\r\nThere is no existing object model in msbuild for now. In the mentioned analyzers 3 different approaches were used:\r\n1. String parsing\r\n2. XML parsing using XPATH\r\n3. Describing the model using the base attributes/elements of [msbuild tree](https://github.com/mhutch/MonoDevelop.MSBuildEditor/blob/29c2ab3b7b1428dfb32ba6d0be2a2e49962be824/MonoDevelop.MSBuild/Language/Syntax/MSBuildSyntaxKind.cs#L20)\r\n\r\n                                           \r\nOpen questions: \r\nCan we analyze conditions on the fly ?\r\nGive performance recommendations (e.g. \"you can use this condition in order to optimize your condition\")\r\n",
        "createdAt": "2023-11-27T15:29:45Z",
        "updatedAt": "2023-11-27T17:15:23Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  }
}