{
  "number": 8175,
  "title": "net7: Razor class library - Missing CSS bundle in published package when built using msbuild /maxCpuCount",
  "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Describe the bug\n\nRazor class library (Blazor) with CSS isolation.\r\nPublished as NuGet package using `<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`.\r\nBuilt using `\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\msbuild.exe\" /m`.\r\nAfter upgrade to net7 and VS 17.4.0. the generated `.nupkg` does not include `/staticwebassets/Name.bundle.scp.css`. (all other static assets are present).\r\n\r\nWhen the `/m` switch is removed from the `msbuild` call, the CSS file is present in the resulting `.nupkg`.\r\nWhen the project is multi-targeted to `net6`+`net7`, the CSS file is present in the resulting `.nupkg`.\r\n(Weird behavior observed with `/m:1` switch. On our build server, the CSS file is there. On my dev-box, it is not.)\n\n### Expected Behavior\n\nThe generated `.nupkg` should contain the CSS bundle no matter which TargetFramework/maxCpuCount is used.\n\n### Steps To Reproduce\n\nUnfortunately, I was not successful in reproducing the issue with a minimal project setup.\r\n\r\nI prepared a setup (branch) in our repo which reproduces the issue:\r\nhttps://github.com/havit/Havit.Blazor/tree/net7-msbuild-repro\r\n\r\nCall msbuild with `/m` from project root directory to reproduce the issue:\r\n```\r\n\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\msbuild.exe\" /m\r\n```\r\nOutput files (without CSS bundle):\r\n`.\\Havit.Blazor.Components.Web\\bin\\Debug\\Havit.Blazor.Components.Web.3.2.0.nupkg`\r\n`.\\Havit.Blazor.Components.Web.Bootstrap\\bin\\Debug\\Havit.Blazor.Components.Web.Bootstrap.3.2.0.nupkg`\r\n\r\nCall msbuild without any switches and the CSS file will be in the output:\r\n```\r\n\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\msbuild.exe\"\r\n```\n\n### Exceptions (if any)\n\n_No response_\n\n### .NET Version\n\n7.0.100\n\n### Anything else?\n\nI was not sure in which repository should I file the issue. In the end I decided for `aspnetcore` as there is a good probability the issue is located in the `.target` files and/or build-tasks owned by the team?",
  "state": "OPEN",
  "createdAt": "2022-11-15T15:23:56Z",
  "updatedAt": "2025-05-13T13:48:41Z",
  "closedAt": null,
  "author": {
    "login": "hakenr"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "backlog",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "@hakenr thanks for contacting us.\r\n\r\nDoes it happen with MSBuild only or does it also happen with dotnet build?\r\n\r\nFile an issue through the [Report a problem with Visual Studio - Visual Studio (Windows) | Microsoft Docs](https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2022) dialog and attach the binlog where the problem happens to it.\r\n\r\nYou can capture the binlog by adding `/bl` to the command-line. It will generate an msbuild.binlog file on the same folder from where msbuild is being invoked.",
        "createdAt": "2022-11-15T16:15:45Z",
        "author": {
          "login": "javiercn"
        }
      },
      {
        "body": "Hi @hakenr. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
        "createdAt": "2022-11-15T16:15:59Z",
        "author": null
      },
      {
        "body": "> Razor class library (Blazor) with CSS isolation.\r\n> Published as NuGet package using `<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`.\r\n> Built using `\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\msbuild.exe\" /m`.\r\n> After upgrade to net7 and VS 17.4.0. the generated `.nupkg` does not include `/staticwebassets/Name.bundle.scp.css`. (all other static assets are present).\r\n\r\nHave you cleaned the bin and obj folders (to discard any intermediate state)",
        "createdAt": "2022-11-15T16:17:54Z",
        "author": {
          "login": "javiercn"
        }
      },
      {
        "body": "Hi, I did some more experiments and tests and realized, that currently I'm not able to reproduce the issue as easily as I was this morning. Now, the `/m` parameter alone is not enough to make the CSS disappear. Now, it is the `/m /p:DeployOnBuild=true` combination which reproduces the issue (if I remove one or another, the issue disappears).\r\n\r\nSmaller repo which currently reproduces the issue: \r\n[Havit.Bt.Blazor.zip](https://github.com/dotnet/aspnetcore/files/10017092/Havit.Bt.Blazor.zip)\r\n\r\nThe binlogs\r\n[binlogs.zip](https://github.com/dotnet/aspnetcore/files/10017097/binlogs.zip)\r\n* `msbuild-noCSS.binlog` for `\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\msbuild.exe\" /p:DeployOnBuild=true /m`\r\n* `msbuild-plain.binlog` for `\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\msbuild.exe\"`\r\n\r\nHope this helps diagnose this weird issue.",
        "createdAt": "2022-11-16T00:38:02Z",
        "author": {
          "login": "hakenr"
        }
      },
      {
        "body": "@hakenr thanks for the additional details. Why are you passing `DeployOnBuild=true` for a razor class library?",
        "createdAt": "2022-11-16T08:01:50Z",
        "author": {
          "login": "javiercn"
        }
      },
      {
        "body": "> Why are you passing `DeployOnBuild=true` for a razor class library?\r\n\r\nThe RCL is just a part of a wider solution. The `DeployOnBuild=true` is included in our shared Azure Pipelines build definition (shared Task group) used by 100+ repos. The full msbuild.exe call usually looks like:\r\n```\r\n\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\msbuild.exe\" \"W:\\BuildAgents\\BuildAgent5\\515\\s\\Havit.Blazor.sln\" /nologo /nr:false /fl /flp:\"logfile=W:\\BuildAgents\\BuildAgent5\\515\\s\\Havit.Blazor.sln.log;verbosity=normal\" /dl:CentralLogger,\"W:\\BuildAgents\\BuildAgent5\\_tasks\\VSBuild_71a9a2d3-a98a-4caa-96ab-affca411ecda\\1.212.0\\node_modules\\azure-pipelines-tasks-msbuildhelpers-v3\\tools\\Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll\";\"RootDetailId=|SolutionDir=W:\\BuildAgents\\BuildAgent5\\515\\s|enableOrphanedProjectsLogs=true\"*ForwardingLogger,\"W:\\BuildAgents\\BuildAgent5\\_tasks\\VSBuild_71a9a2d3-a98a-4caa-96ab-affca411ecda\\1.212.0\\node_modules\\azure-pipelines-tasks-msbuildhelpers-v3\\tools\\Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll\" /p:IsDesktopBuild=True /p:SkipInvalidConfigurations=true /p:AutoParameterizationWebConfigConnectionStrings=False /p:PackageAsSingleFile=True /p:GenerateBuildInfoConfigFile=False /p:IncludeSetAclProviderOnDestination=False /p:DeployOnBuild=true /p:PublishDirectory=\"W:\\BuildAgents\\BuildAgent5\\515\\b\" /p:SourceRevisionId=8c3d1c2c6d05649fd14068938a3f7e6fe0723b49 /p:TreatWarningsAsErrors=True /p:platform=\"Any CPU\" /p:configuration=\"Release\" /p:VisualStudioVersion=\"17.0\" /m /p:_MSDeployUserAgent=\"VSTS_a77f2982-a11f-4768-b971-4d01fefae247_build_318_0\"\r\n```\r\n\r\n(Above I tried to reduce the switches to the bare minimum where the issues reproduces)",
        "createdAt": "2022-11-16T08:18:56Z",
        "author": {
          "login": "hakenr"
        }
      },
      {
        "body": "@hakenr I have moved this issue to the MSBuild repo. What I am observing is that in one case, the item \"magically\" disappears. So this might be related to a similar issue that we investigated recently.\r\n\r\nFrom the binlog I can see that the item is correctly added as content:\r\n![image](https://user-images.githubusercontent.com/6995051/202167862-f7c12e12-c649-4864-9d41-3eb74326b855.png)\r\n\r\nWhen it gets here it is somehow ignored:\r\n![image](https://user-images.githubusercontent.com/6995051/202167953-fca391e9-974a-4d7d-b725-d29b8c43ea81.png)\r\n\r\nThe relevant target is:\r\n![image](https://user-images.githubusercontent.com/6995051/202167994-a5405156-1e03-4f14-8e90-0d9aea3ed338.png)\r\n\r\nI might be missing something on my analysis, but if I am, I can't tell from the binlog where the item is being removed, and the definition is equivalent to the one for other files that are being included.",
        "createdAt": "2022-11-16T11:25:58Z",
        "author": {
          "login": "javiercn"
        }
      },
      {
        "body": "@maridematte Hey, just a quick update. We ran into this issue again today - looks like it was either never fully fixed or got reintroduced in `net9.0`. It showed up after we dropped the `net8.0` moniker and started targeting only `net9.0`:\n\n```diff xml\n-<TargetFrameworks>net8.0;net9.0</TargetFrameworks>\n+<TargetFramework>net9.0</TargetFramework>\n```\n\nIt seems to be related to the `DeployOnBuild=true` property, since the issue doesn't occur when publishing the NuGet package locally.",
        "createdAt": "2025-04-16T14:06:07Z",
        "author": {
          "login": "hakenr"
        }
      },
      {
        "body": "Reopening so we can try to get a repro, and start tracking this once again.",
        "createdAt": "2025-04-17T08:01:25Z",
        "author": {
          "login": "maridematte"
        }
      },
      {
        "body": "@maridematte  It repros in net9.0 , net8.0 and 7.0.\nI tried many times.\nWhen using /m, the issue does not always reproduce. However, when using /m:3 and /p:DeployOnBuild=true together, the issue occurs more reliably and frequently.\n\n Repro this issue with the following steps.\n    1. Download  the project and change the TargetFramework to net9.0\n\n> Smaller repo which currently reproduces the issue:\n> [Havit.Bt.Blazor.zip](https://github.com/dotnet/aspnetcore/files/10017092/Havit.Bt.Blazor.zip)\n\n   2. msbuild /p:DeployOnBuild=true /m:3 /bl\n  \n**Actual Results:**  In the package staticwebassets, some assets are missing.\n\nFrom the binlog, the assets are lost in the _PackageFiles items\n\n[msbuild8175.binlog.txt](https://github.com/user-attachments/files/19845966/msbuild8175.binlog.txt)\n\n![Image](https://github.com/user-attachments/assets/efb74d5e-cbbd-4522-9f93-61b4a13b6abe)\n\n![Image](https://github.com/user-attachments/assets/57c2f5c7-f469-4177-b6cb-6fff42f3aa25)",
        "createdAt": "2025-04-22T08:14:25Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "Build with msbuild /p:DeployOnBuild=true /m:1 /bl, the issue disappears. It should be a concurrency problem",
        "createdAt": "2025-05-06T07:39:17Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "@hakenr  please check the suggested workaround and let us know if it works.",
        "createdAt": "2025-05-13T13:48:40Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  }
}