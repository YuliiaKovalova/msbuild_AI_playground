{
  "number": 3461,
  "title": "DeployOnBuild does not update dll with older version",
  "body": "When deploying using msbuild and DeployOnBuild parameter, a file (dll) which has a lower version compared to the previously published file does not get updated. Both files have the same size.\r\n\r\n### Steps to reproduce\r\n\r\nWith following sample:\r\n\r\n[MSBuildIssue.zip](https://github.com/Microsoft/msbuild/files/2146682/MSBuildIssue.zip)\r\n\r\nUse following command line (adjust publishUrl to point to sample \"output\" folder)\r\n```\r\nmsbuild ./Test/WebApp/WebApp.csproj /p:DeployOnBuild=true /p:PublishProfile=FolderProfile /p:publishUrl=C:/MSBuildIssue/output\r\n```\r\n\r\n### Expected  behavior\r\n\r\nPublished project has library Common.Logging.Core version 3.3.1.\r\nI would expect the output folder to contain Common.Logging.Core with version 3.3.1 after publish, overwriting the existing Common.Logging.Core file which has version 3.4.1.\r\n\r\n### Actual behavior\r\n\r\nPublish has kept the existing file Common.Logging.Core version 3.4.1 instead of updating it.\r\n\r\n### Environment data\r\n\r\n`msbuild /version` output: 15.7.179.6572\r\n\r\nOS info: Windows 10\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc): VS 2017\r\n",
  "state": "OPEN",
  "createdAt": "2018-06-28T19:39:45Z",
  "updatedAt": "2024-02-21T16:33:36Z",
  "closedAt": null,
  "author": {
    "login": "MetaSam"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Incremental builds in MSBuild are based on file timestamps. In this case, the deployed copy (of 3.4.1) is newer than the NuGet package copy of 3.3.1, so the `CopyPipelineFiles` task skips it as up to date.\r\n\r\nThis is not what you want, but it's baked pretty deeply into MSBuild (and most other build systems, including `make`).",
        "createdAt": "2018-06-28T20:43:53Z",
        "updatedAt": "2018-06-28T20:43:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "A workaround is to publish using a web deploy package instead of the file system. When deploying using msdeploy we don't have this issue.",
        "createdAt": "2018-07-03T13:33:21Z",
        "updatedAt": "2018-07-03T13:33:21Z",
        "author": {
          "login": "MetaSam"
        }
      },
      {
        "body": "Looks like this has changed somewhere before msbuild 16.8.2.56705.\r\nThe older versions are correctly written but only if the have different file size. Otherwise, the newer version is kept and we end up with a mix of old and new versions.",
        "createdAt": "2020-12-15T14:07:22Z",
        "updatedAt": "2020-12-15T14:07:49Z",
        "author": {
          "login": "a-stankevich"
        }
      }
    ]
  }
}