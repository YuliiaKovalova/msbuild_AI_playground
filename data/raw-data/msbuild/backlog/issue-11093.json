{
  "number": 11093,
  "title": "Add a perfstar baseline for tracking the impact of generating binlogs",
  "body": "### Summary\n\nWe want people to make binlogs all the time, but we should be clear-eyed about the cost of doing so. We should make a PerfStar baseline that tracks the cost of generating binlogs for a representative project (orchard core) on stable hardware to give users a way of thinking about this cost, as well as giving ourselves a target to minimize.\n\n### Background and Motivation\n\nThe latest orchard code commit on my machine has a **~25%** overhead for binlog generation.  I \n\n* cloned the repo \n* ran `dotnet restore` to pre-load the nuget caches\n* triggered the build without binlogs via `dotnet build`\n* run `git clean -xdf` to remove intermediates\n* ran `dotnet build-server shutdown` to kill the persistent build servers/nodes\n* triggered the build with binlogs via `dotnet build -bl`\n\nand that gave me timings of **105.6s** and **135.0s** respectively on my machine (+- a tiny bit of jitter across iterations). This is on an AMD Ryzen 7 5700x3d, 64 GB of decently-fast RAM, and an NVMe SSD.\n\n### Proposed Feature\n\nWe should make a harness that does the above in a more repeatable way and tracks the ratio over time.\n\n### Alternative Designs\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-12-05T21:36:06Z",
  "updatedAt": "2025-04-16T09:39:38Z",
  "closedAt": "2025-04-16T09:39:38Z",
  "author": {
    "login": "baronfel"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "maridematte"
      }
    ]
  },
  "labels": [
    "Area: Debuggability",
    "Area: Performance",
    "Area: Logging",
    "Priority:2",
    "triaged",
    "Area: PerfStar"
  ],
  "comments": {
    "nodes": [
      {
        "body": "This is one of the idea for the next perfStar improvements (you can find it in the one pager, which I'll link once the PR is completed).",
        "createdAt": "2024-12-10T09:49:32Z",
        "author": {
          "login": "maridematte"
        }
      }
    ]
  }
}