{
  "number": 3057,
  "title": "ResolveAssemblyReferences does not work when netstandard packages are referenced",
  "body": "The new sdk targets which adds netstandard support for <= .net 4.7.1 does not play well with \r\nResolveAssemblyReferences. \r\n\r\nNew assemblies which are required to be installed with the application are marked with `Private=false` which causes the ResolveAssemblyReferences task to treat those assemblies as system assemblies (\"preRequisite\") instead of required assemblies which needs to be copied with the application (\"install\").\r\n\r\nIt seems like newer sdk targets always set Private=false for several types of assemblies and instead use.\r\nThe problematic target is how the `ImplicitlyExpandNETStandardFacades` Target (which is included by `ResolveAssemblyReferences`) work. It adds all references to both `ReferenceCopyLocalPaths` and `Reference`, but with `Private=false` for theses.\r\n\r\nThe `Private=false` metadata cause problems with the filter in `ResolveAssemblyReferences`\r\nhttps://github.com/Microsoft/msbuild/blob/bf2f8a4e91195d049060b253d9d47ace4cc62017/src/Tasks/ResolveManifestFiles.cs#L784 \r\n\r\n### Steps to reproduce\r\n\r\n1. Open attached Project in Visual Studio 2017 and build it (15.6 works fine to replicate).\r\n2. Open \\bin\\Debug\\NetstandardRepro.exe.manifest  in a text editor \r\n3. Search for \"System.Threading.Tasks.Extensions\" or any other netstandard dll\r\n\r\n### Expected  behavior\r\n\r\nAll netstandard \"shims\" which are copied to the output path included in the NetssnardardRepro.exe.manifest with dependencyType=\"install\"\r\n\r\n\r\n```\r\n  <dependency>\r\n    <dependentAssembly dependencyType=\"install\" allowDelayedBinding=\"true\" codebase=\"System.Threading.Tasks.Extensions.dll\" size=\"26024\">\r\n      <assemblyIdentity name=\"System.Threading.Tasks.Extensions\" version=\"4.1.1.0\" publicKeyToken=\"CC7B13FFCD2DDD51\" language=\"neutral\" processorArchitecture=\"msil\" />\r\n      <hash>\r\n        <dsig:Transforms>\r\n          <dsig:Transform Algorithm=\"urn:schemas-microsoft-com:HashTransforms.Identity\" />\r\n        </dsig:Transforms>\r\n        <dsig:DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha256\" />\r\n        <dsig:DigestValue>ZKnax7J20075BNlOiNyF+ftAU7uQlmuaJQtBdxuj+f0=</dsig:DigestValue>\r\n      </hash>\r\n    </dependentAssembly>\r\n  </dependency>\r\n```\r\n\r\n### Actual behavior\r\n\r\nNetstandard \r\n```\r\n  <dependency>\r\n    <dependentAssembly dependencyType=\"preRequisite\" allowDelayedBinding=\"true\">\r\n      <assemblyIdentity name=\"System.Diagnostics.StackTrace\" version=\"4.1.0.0\" publicKeyToken=\"B03F5F7F11D50A3A\" language=\"neutral\" processorArchitecture=\"msil\" />\r\n    </dependentAssembly>\r\n  </dependency>\r\n```\r\n\r\n### Environment data\r\n\r\nVisual Studio 2017 (tested with both 15.5 and 15.6)\r\n\r\n\r\n### Possible workaround\r\n\r\nIt is possible to set PublishState = Include Before running the task.\r\nMaybe the \r\n\r\n```\r\n  <Target Name=\"EnsureNetstandardFilesAreIncludedInClickOnce\" BeforeTargets=\"_DeploymentComputeClickOnceManifestInfo\">\r\n    <Message Text=\"Adding netstandard files to ClickOnce\"/>\r\n\t<ItemGroup>\r\n\t\t<PublishFile Include=\"@(_NETStandardLibraryNETFrameworkLib->'%(FileName)')\">\r\n\t\t\t<PublishState>Include</PublishState>\r\n\t\t\t<FileType>Assembly</FileType>\r\n\t\t</PublishFile>\r\n\t</ItemGroup>\r\n  </Target>\r\n```\r\n",
  "state": "CLOSED",
  "createdAt": "2018-03-07T09:26:18Z",
  "updatedAt": "2024-02-21T17:14:12Z",
  "closedAt": "2019-07-04T09:26:30Z",
  "author": {
    "login": "Daniel-Svensson"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Closing since the issue did not receive any attention and the situation is better now in latest 2017 versions",
        "createdAt": "2019-07-04T09:26:30Z",
        "updatedAt": "2019-07-04T09:26:30Z",
        "author": {
          "login": "Daniel-Svensson"
        }
      }
    ]
  }
}