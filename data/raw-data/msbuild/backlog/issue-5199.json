{
  "number": 5199,
  "title": "ClickOnce publish is missing files if multiple Content entries are set from a Task",
  "body": "### Steps to reproduce\r\nHere is the test project I built to demonstrate the issue.\r\n[MSBuildFileCopyIssue.zip](https://github.com/microsoft/msbuild/files/4383215/MSBuildFileCopyIssue.zip)\r\n\r\nI was refining the include set for CEF# to make it as minimal as possible when I encountered this.\r\n\r\nThe changes to the project were minimal (and are attached) from the baseline project:\r\n* I added a top level property group to the project to move the default configuration and platform if unspecified.\r\n* I set the CefSharpAnyCpuSupport to true (project remained AnyCPU).\r\n* Added a BrokenVersion property that will switch between the two tasks, one of which works, one that doesn't.\r\n* Moved the Cef deploy to another folder so they aren't included in the deploy to ..\\CEF_$(Configuration) using CefSharpTargetDir so it isn't automatically including everything.\r\n\r\nThen I added the following tasks:\r\n* Broken Task:\r\n```  <Target Name=\"EnsureCefFilesAreIncludedInClickOnce\" BeforeTargets=\"PrepareForBuild\" Condition=\" ('$(BrokenVersion)' == 'true') \">\r\n    <Message Text=\"Adding Cef files...\" />\r\n    <Message Text=\"Cef Native Directory: $(Cef64Dir)\" />\r\n    <Message Text=\"CefSharp Core Directory: $(CefSharp64Dir)\" />\r\n    <Message Text=\"CefSharp WPF Directory: $(CefWpf64Dir)\" />\r\n    <ItemGroup>\r\n      <Content Include=\"$(Cef64Dir)\\*.dat;$(Cef64Dir)\\*.bin;$(Cef64Dir)\\cef*.pak\">\r\n        <Link>%(RecursiveDir)%(FileName)%(Extension)</Link>\r\n        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n        <PublishState>Included</PublishState>\r\n        <Visible>false</Visible>\r\n      </Content>\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <Content Include=\"$(Cef64Dir)\\devtools*.pak\" Condition=\" '$(Configuration)' != 'Shipping' \">\r\n        <Link>%(RecursiveDir)%(FileName)%(Extension)</Link>\r\n        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n        <PublishState>Included</PublishState>\r\n        <Visible>false</Visible>\r\n      </Content>\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <Content Include=\"$(Cef64Dir)\\**\\en*.*;$(Cef64Dir)\\**\\de*.*;$(Cef64Dir)\\**\\fr*.*;$(Cef64Dir)\\**\\it*.*;$(Cef64Dir)\\**\\es*.*;$(Cef64Dir)\\**\\pt*.*\">\r\n        <Link>%(RecursiveDir)%(FileName)%(Extension)</Link>\r\n        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n        <PublishState>Included</PublishState>\r\n        <Visible>false</Visible>\r\n      </Content>\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <Content Include=\"$(Cef64Dir)\\**\\*.dll\">\r\n        <Link>%(RecursiveDir)%(FileName)%(Extension)</Link>\r\n        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n        <PublishState>Included</PublishState>\r\n        <Visible>false</Visible>\r\n      </Content>\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <Content Include=\"$(CefSharp64Dir)\\**\\CefSharp.*\" Exclude=\"$(CefSharp64Dir)\\**\\*.pdb\">\r\n        <Link>%(RecursiveDir)%(FileName)%(Extension)</Link>\r\n        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n        <PublishState>Included</PublishState>\r\n        <Visible>false</Visible>\r\n      </Content>\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <Content Include=\"$(CefWpf64Dir)\\**\\CefSharp.*\" Exclude=\"$(CefWpf64Dir)\\**\\*.pdb\">\r\n        <Link>%(RecursiveDir)%(FileName)%(Extension)</Link>\r\n        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n        <PublishState>Included</PublishState>\r\n        <Visible>false</Visible>\r\n      </Content>\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n\r\n* Working Task:\r\n![image](https://user-images.githubusercontent.com/1832056/77583232-19414580-6eb7-11ea-9831-7f95983b6c96.png)\r\n\r\nWhen I publish via Visual Studio, not all files are published. Running a diagnostic build is showing that the link looks incorrect for all entries after the first in the Task.\r\n1>    Content=\r\n1>        ..\\packages\\cef.redist.x64.79.1.36\\CEF\\locales\\en-GB.pak\r\n1>                CopyToOutputDirectory=PreserveNewest\r\n1>                Link=icudtl.dat\r\n1>                PublishState=Included\r\n1>                Visible=false\r\n\r\n1>Added Item(s): \r\n1>    Content=\r\n1>        ..\\packages\\cef.redist.x64.79.1.36\\CEF\\chrome_elf.dll\r\n1>                CopyToOutputDirectory=PreserveNewest\r\n1>                Link=icudtl.dat\r\n1>                PublishState=Included\r\n1>                Visible=false\r\n1>        ..\\packages\\cef.redist.x64.79.1.36\\CEF\\d3dcompiler_47.dll\r\n1>                CopyToOutputDirectory=PreserveNewest\r\n1>                Link=icudtl.dat\r\n1>                PublishState=Included\r\n1>                Visible=false\r\n\r\nBinaries directory content:\r\n![image](https://user-images.githubusercontent.com/1832056/77581126-87840900-6eb3-11ea-8763-83426d36a915.png)\r\n\r\nPublish directory content:\r\n![image](https://user-images.githubusercontent.com/1832056/77581180-9b2f6f80-6eb3-11ea-912e-be011f2e9e9d.png)\r\n\r\nCommand line\r\nPublish from Visual Studio\r\n\r\n### Expected behavior\r\nThe same as when BrokenVersion is set to false--the full set of files from bin\\<config> published to the Application Files.\r\n\r\n### Actual behavior\r\nThe published Application files are missing a substantial amount of content.\r\n\r\nOS info:\r\n![image](https://user-images.githubusercontent.com/1832056/77581305-e21d6500-6eb3-11ea-888e-7d57a6745d65.png)\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n![image](https://user-images.githubusercontent.com/1832056/77581305-e21d6500-6eb3-11ea-888e-7d57a6745d65.png)\r\n\r\nThank you,\r\nBrent Scriver",
  "state": "OPEN",
  "createdAt": "2020-03-25T20:18:38Z",
  "updatedAt": "2024-02-21T16:29:43Z",
  "closedAt": null,
  "author": {
    "login": "FineRedMist"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}