{
  "number": 5977,
  "title": "Support building a static graph node's direct children serially",
  "body": "Some big repos have build phases where they want to build multiple p2p graphs in sequence: graph1, graph2, etc. So graph1 builds in parallel, then graph2 builds in parallel, etc.\r\n\r\nCurrently there is no way in static graph to express that that graph1 and graph2 should build one after the other. One way to support this is to add a gesture specifying that a node's direct children must be built in order. Something like:\r\n\r\nTopLevelMultiPhaseBuild.proj\r\n```xml\r\n<ItemGroup>\r\n   <!-- BuildPhase1.proj and BuildPhase2.proj each define their own sub graphs via ProjectReference -->\r\n   <ProjectReference Include=\"BuildPhase1.proj\" />\r\n   <ProjectReference Include=\"BuildPhase2.proj\" />\r\n</ItemGroup>\r\n\r\n<Target Name=\"Build\">\r\n    <!-- Build each phase serially -->\r\n    <MSBuild Projects=\"@(ProjectReference)\" BuildInParallel=\"false\" />\r\n</Target>\r\n\r\n<PropertyGroup>\r\n    <!-- This new gesture would let the msbuild graph scheduler know that the direct children of TopLevelMultiPhaseBuild.proj should be built serially.\r\n    BuildPhase1.proj is built first (and its children in parallel), then BuildPhase2.proj is built second (and its children in parallel)\r\n    -->\r\n    <SerializeDirectChildrenInStaticGraph>true<SerializeDirectChildrenInStaticGraph>\r\n</PropertyGroup>\r\n```\r\n\r\nCurrent workarounds to build each phase via static graph:\r\n- express `TopLevelMultiPhaseBuild.proj` as a script (bash, powershell, python) instead in msbuild\r\n- have `TopLevelMultiPhaseBuild.proj` call phases via Exec, like `<Exec Command=\"MSBuild.exe /graph BuildPhase1.proj\" />`\r\n\r\nAnother option is to add a graph option to the MSBuild task, but I'd advise against it because the task is a runtime concept and so the static graph constructor and scheduler can never know about it in order to stitch all the subgraphs in one big graph.",
  "state": "OPEN",
  "createdAt": "2020-12-18T20:43:55Z",
  "updatedAt": "2024-02-21T16:28:44Z",
  "closedAt": null,
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "Area: Static Graph",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}