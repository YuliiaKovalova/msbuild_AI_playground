{
  "number": 3726,
  "title": "Failure using 15.8 RoslynCodeTaskFactory",
  "body": "While trying to migrate off the NuGet package to the 15.8 RoslynCodeTask factory, I'm encountering issues getting the most basic tasks to work.\r\n\r\nE.g. copying from the documentation https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2017#hello-world to a `test.proj`:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">  \r\n  <!-- This simple inline task displays \"Hello, world!\" -->  \r\n  <UsingTask  \r\n    TaskName=\"HelloWorld\"  \r\n    TaskFactory=\"RoslynCodeTaskFactory\"  \r\n    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >  \r\n    <ParameterGroup />  \r\n    <Task>  \r\n      <Reference Include=\"System.Xml\"/>\r\n      <Using Namespace=\"System\"/>  \r\n      <Using Namespace=\"System.IO\"/>  \r\n      <Code Type=\"Fragment\" Language=\"cs\">  \r\n<![CDATA[  \r\n// Display \"Hello, world!\"  \r\nLog.LogError(\"Hello, world!\");  \r\n]]>  \r\n      </Code>  \r\n    </Task>  \r\n  </UsingTask>  \r\n    <Target Name=\"Hello\">  \r\n    <HelloWorld />  \r\n  </Target>  \r\n</Project>\r\n```\r\n\r\nWindows full framework (15.8.3):\r\n```\r\n\"C:\\Users\\martin.ullrich\\Downloads\\testproj\\test.proj\" (Hello target) (1) ->\r\n(Hello target) ->\r\n  C:\\Users\\martin.ullrich\\Downloads\\testproj\\test.proj(21,5): error MSB3755: Could not find reference \"System.Xml\". If this reference is required by your code, you may\r\n get compilation errors.\r\n  C:\\Users\\martin.ullrich\\Downloads\\testproj\\test.proj(21,5): error MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\Program\r\n Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin\\Microsoft.Build.Tasks.Core.dll\". The task factory must return a value for the \"TaskType\" property\r\n.\r\n```\r\n\r\nMacOS `dotnet` 2.1.401:\r\n```\r\n/Users/martin/tmp/testsln/test.proj/test.proj(21,5): error MSB3755: Could not find reference \"System.Xml\". If this reference is required by your code, you may get compilation errors.\r\n/Users/martin/tmp/testsln/test.proj/test.proj(21,5): error MSB3755: Could not find reference \"mscorlib\". If this reference is required by your code, you may get compilation errors.\r\n/Users/martin/tmp/testsln/test.proj/test.proj(21,5): error MSB3755: Could not find reference \"netstandard\". If this reference is required by your code, you may get compilation errors.\r\n/Users/martin/tmp/testsln/test.proj/test.proj(21,5): error MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"/usr/local/share/dotnet/sdk/2.1.401/Microsoft.Build.Tasks.Core.dll\". The task factory must return a value for the \"TaskType\" property.\r\n```\r\n\r\ncc @jeffkl ",
  "state": "CLOSED",
  "createdAt": "2018-09-10T05:25:10Z",
  "updatedAt": "2024-02-21T17:11:23Z",
  "closedAt": "2019-02-08T18:42:26Z",
  "author": {
    "login": "dasMulli"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "I was also seeing this behavior with the same error message.",
        "createdAt": "2018-09-21T16:20:06Z",
        "updatedAt": "2018-09-21T16:20:06Z",
        "author": {
          "login": "nathansoz"
        }
      },
      {
        "body": "@jeffkl or @rainersigwald, @cdmihai could you please take a look?",
        "createdAt": "2018-10-05T22:49:08Z",
        "updatedAt": "2018-10-05T22:49:08Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "It should be noted that the same code just works using the RoslynCodeTaskFactory NuGet package from https://github.com/jeffkl/RoslynCodeTaskFactory",
        "createdAt": "2018-10-06T16:09:41Z",
        "updatedAt": "2018-10-06T16:09:41Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "I have the same problem, the project builds fine when using visual studio, but it will throw error when running cli 'dotnet build'.",
        "createdAt": "2018-11-02T12:40:59Z",
        "updatedAt": "2018-11-02T12:40:59Z",
        "author": {
          "login": "ccpu"
        }
      },
      {
        "body": "The root cause of the bug is that the Microsoft.Build.Tasks project is [copying the ref assemblies to its target framework output folder](https://github.com/Microsoft/msbuild/blob/master/src/Tasks/Microsoft.Build.Tasks.csproj#L1007-L1008) (net46 and netstandard2.0).  The MSBuild project is then [including them in the NuGet package for its target frameworks](https://github.com/Microsoft/msbuild/blob/master/src/MSBuild/MSBuild.csproj#L281) (net46, netcoreapp2.0, and netcoreapp2.1).  So the files are in the correct place but aren't being included in the NuGet package.  \r\n\r\nSo an easy workaround is to copy the ref folder from the full framework location ( the files are the same ) and we can look into fixing this for the next release of .NET Core.\r\n",
        "createdAt": "2018-11-20T15:48:10Z",
        "updatedAt": "2018-11-20T15:48:10Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "I am using msbuild version 15.9.20+g88f5fadfbe with .netcore 2.1 and I am still experiencing error below. Any idea when it is being fixed?\r\n\r\n error MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\Program\r\n Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin\\Microsoft.Build.Tasks.Core.dll\". The task factory must return a value for the \"TaskType\" property.\r\n\r\nFor now, my workaround is still to reference external dependency from https://github.com/jeffkl/RoslynCodeTaskFactory",
        "createdAt": "2019-01-08T13:31:46Z",
        "updatedAt": "2019-01-08T13:32:32Z",
        "author": {
          "login": "octaviobffernandes"
        }
      },
      {
        "body": "@radical I'm also seeing this in the msbuild 16.0.42-preview+g804bde742b bundled with Mono 5.18.0.234",
        "createdAt": "2019-01-10T07:12:35Z",
        "updatedAt": "2019-01-10T07:12:35Z",
        "author": {
          "login": "mhutch"
        }
      },
      {
        "body": "Until the fix is released, is there a workaround for this?",
        "createdAt": "2019-02-17T21:13:59Z",
        "updatedAt": "2019-02-17T21:13:59Z",
        "author": {
          "login": "Daniel15"
        }
      },
      {
        "body": "Argh, still seeing this issue in VS 2019 (16.0.0). Any System.* `<Reference>`s that I try to add to an inline task in my .NET Standard project are yielding:\r\n\r\n> Could not find reference \"System.*\". If this reference is required by your code, you may get compilation errors.\t\r\n \r\n@jeffkl @rainersigwald  Are there other reports of a regression with this?",
        "createdAt": "2019-04-08T03:04:55Z",
        "updatedAt": "2019-04-08T03:08:03Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "Do you need these references? They shouldn\u2019t be necessary since all the surface area should be covered by netstandard.dll and mscorlib.dll",
        "createdAt": "2019-04-08T06:35:54Z",
        "updatedAt": "2019-04-08T06:35:54Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "@dasMulli Having the same issue as @DanVicarel but on macOS.\r\nIt also throws errors on mscorlib and netstandard hence the error of RoslynCodeTaskFactory.\r\n\r\n```\r\nerror MSB3755: Could not find reference \"mscorlib\". If this reference is required by your code, you may get compilation errors]\r\nerror MSB3755: Could not find reference \"netstandard\". If this reference is required by your code, you may get compilation errors.\r\nerror MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"/usr/local/share/dotnet/sdk/2.2.103/Microsoft.Build.Tasks.Core.dll\". The task factory must return a value for the \"TaskType\" property.\r\n```",
        "createdAt": "2019-04-17T13:09:14Z",
        "updatedAt": "2019-04-17T13:09:14Z",
        "author": {
          "login": "thomasvdb"
        }
      },
      {
        "body": "@thomasvdb SDK 2.2.103 includes MSBuild 15.9, but this was fixed only in MSBuild 16.0 (in SDK 2.2.200 and higher).",
        "createdAt": "2019-04-17T14:27:18Z",
        "updatedAt": "2019-04-17T14:27:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I am still getting this problem using MSBuild bundled with the latest .NET Core release (downloaded using `dotnet-install.ps1`) using MSBuild (.NET Core) version `16.1.19`!",
        "createdAt": "2019-05-22T12:17:43Z",
        "updatedAt": "2019-05-22T12:17:43Z",
        "author": {
          "login": "fredrikhr"
        }
      },
      {
        "body": "@rainersigwald Still experiencing this error.\r\n\r\n> dotnet --list-sdks\r\n2.2.402 [/usr/local/share/dotnet/sdk]\r\n3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\nI don't experience this error in JetBrains Rider however. Is there something else I could check?",
        "createdAt": "2019-10-17T13:23:02Z",
        "updatedAt": "2019-10-17T13:23:02Z",
        "author": {
          "login": "thomasvdb"
        }
      },
      {
        "body": "@rainersigwald we observe the same problem on msbuild coming with VS 2019 (16.5.).  ",
        "createdAt": "2020-04-21T09:50:42Z",
        "updatedAt": "2020-04-21T09:50:42Z",
        "author": {
          "login": "hokb"
        }
      },
      {
        "body": "@hokb What problem, exactly?",
        "createdAt": "2020-04-21T11:44:51Z",
        "updatedAt": "2020-04-21T11:44:51Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald we see the same issues as the OP: https://github.com/microsoft/msbuild/issues/3726#issue-358472792 \r\n\r\nI was trying to use RoslynCodeTastFactory in the msbuild project of a simple .NET Core DLL project. \r\nThe most simple 'HelloWorld' example from https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2019 creates these errors: \r\n \r\n`Error\tMSB4175\tThe task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\Microsoft.Build.Tasks.Core.dll\". The task factory must return a value for the \"TaskType\" property.\tConsoleApp2\tC:\\user1\\source\\repos\\ConsoleApp2\\ConsoleApp2.csproj`\r\n`Error\tMSB3755\tCould not find reference \"System.Xml\". If this reference is required by your code, you may get compilation errors.\tConsoleApp2\tC:\\User1\\source\\repos\\ConsoleApp2\\ConsoleApp2.csproj`\r\nAm I missing something? ",
        "createdAt": "2020-04-21T13:44:06Z",
        "updatedAt": "2020-04-21T13:44:06Z",
        "author": {
          "login": "hokb"
        }
      },
      {
        "body": "I think that's a documentation bug, you shouldn't need to reference `System.Xml`.  Try removing:\r\n```xml\r\n<Reference Include=\"System.Xml\"/>\r\n```",
        "createdAt": "2020-04-21T15:44:03Z",
        "updatedAt": "2020-04-21T15:44:03Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "You are right! I was not aware that the references are not taken from the GAC here. A valid file system path to the reference(s) dlls makes both errors go away - and the task complete. Thanks!",
        "createdAt": "2020-04-21T21:09:03Z",
        "updatedAt": "2020-04-21T21:09:03Z",
        "author": {
          "login": "hokb"
        }
      },
      {
        "body": "@jeffkl\r\n@hokb \r\nHow to reference nuget package?\r\nDo I need to specify the full path like `C:\\Users\\Den\\.nuget\\packages\\newtonsoft.json\\12.0.3\\lib\\netstandard2.0\\Newtonsoft.Json.dll` ?",
        "createdAt": "2020-10-15T12:36:57Z",
        "updatedAt": "2020-10-15T12:36:57Z",
        "author": {
          "login": "Denis535"
        }
      },
      {
        "body": "Yes you'll have to reference the full path to the DLL.  It is not recommended to use RoslynCodeTaskFactory for complex tasks, instead you should compile a real task assembly which can reference anything you want, have unit tests, etc.  ",
        "createdAt": "2020-10-15T15:14:30Z",
        "updatedAt": "2020-10-15T15:14:30Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Damn! What am I doing wrong?\r\n\r\nI have msbuild script:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n    <PropertyGroup>\r\n        <TargetFramework>netstandard2.0</TargetFramework>\r\n    </PropertyGroup>\r\n\r\n    <ItemGroup>\r\n        <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.3\">\r\n          <GeneratePathProperty>true</GeneratePathProperty>\r\n        </PackageReference>\r\n    </ItemGroup>\r\n    \r\n\r\n    <UsingTask TaskName=\"MyTask\" TaskFactory=\"RoslynCodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\">\r\n        <ParameterGroup />\r\n        <Task>\r\n            <Reference Include=\"C:\\Users\\Den\\.nuget\\packages\\newtonsoft.json\\12.0.3\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" />\r\n            <Code Type=\"Fragment\" Language=\"cs\">\r\n<![CDATA[\r\nLog.LogMessage( MessageImportance.High, typeof( Newtonsoft.Json.JsonConvert ).ToString() );\r\n]]>\r\n            </Code>\r\n        </Task>\r\n    </UsingTask>\r\n\r\n    <Target Name=\"_BeforeBuild\" BeforeTargets=\"BeforeBuild\">\r\n        <Message Text=\"BeforeBuild\" Importance=\"high\" />\r\n        <MyTask />\r\n    </Target>\r\n\r\n    \r\n</Project>\r\n```\r\nThis results in the error:\r\n```\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed' or one of its dependencies. \u041d\u0435 \u0443\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u0430\u0439\u0442\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b.\r\nFile name: 'Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'\r\n   at InlineCode.MyTask.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : (Unknown).\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\MSBuild.exe.Config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/Newtonsoft.Json.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/Newtonsoft.Json/Newtonsoft.Json.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/Newtonsoft.Json.EXE.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/Newtonsoft.Json/Newtonsoft.Json.EXE.\r\n\tMSBuild\t\tMSBuildExample\tC:\\Users\\Den\\Desktop\\MSBuildExample\\MSBuildExample\\MSBuildExample.csproj\t31\r\n```\t\r\n",
        "createdAt": "2020-10-15T15:20:12Z",
        "updatedAt": "2020-10-15T15:20:12Z",
        "author": {
          "login": "Denis535"
        }
      },
      {
        "body": "Normal tasks in MSBuild are loaded in a way that their dependencies are also loaded from the same directory.  Tasks created with a custom \"task host\" such as RoslynCodeTaskFactory do not get this logic for free.  You'll need to load your dependencies manually since the host executable is `MSBuild.exe` and .NET CLR assembly loading rules only load dependencies next to the running executable.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/standard/assembly/resolve-loads",
        "createdAt": "2020-10-15T15:35:00Z",
        "updatedAt": "2020-10-15T15:35:00Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl\r\nI even can't make normal task work.\r\nHow to specify reference for normal task? I've tried these cases but they don't work.\r\n\r\n1)\r\n\r\n    <UsingTask TaskName=\"Lib.Tasks.MyTask\" AssemblyFile=\"$(SolutionDir)\\Lib\\bin\\Debug\\netstandard2.0\\Lib.dll\" >\r\n        <Reference Include=\"$(NugetPackageRoot)\\mono.cecil\\0.11.3\\lib\\netstandard2.0\\Mono.Cecil.dll\" />\r\n    </UsingTask>\r\n    Error: The element <Reference> beneath element <UsingTask> is unrecognized.\r\n\r\n2)\r\n\r\n    <UsingTask TaskName=\"Lib.Tasks.MyTask\" AssemblyFile=\"$(SolutionDir)\\Lib\\bin\\Debug\\netstandard2.0\\Lib.dll\" >\r\n        <Task>\r\n            <Reference Include=\"$(NugetPackageRoot)\\mono.cecil\\0.11.3\\lib\\netstandard2.0\\Mono.Cecil.dll\" />\r\n        </Task>\r\n    </UsingTask>\r\n    Error: The required attribute \"TaskFactory\" is empty or missing from the element <UsingTask>.\r\n",
        "createdAt": "2020-10-15T22:14:37Z",
        "updatedAt": "2020-10-15T22:14:37Z",
        "author": {
          "login": "Denis535"
        }
      },
      {
        "body": "@Denis535 You'll need to make those assemblies available next to the task assembly, perhaps by pointing at the published output.",
        "createdAt": "2020-10-16T15:29:11Z",
        "updatedAt": "2020-10-16T15:29:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald\r\nIs it not possible to specify reference for normal UsingTask?\r\nAlso, the problem is that the error doesn't tell me which dependencies cannot be loaded.\r\nP.S. It would be easier if the PackageReference supported \"CopyLocal=true\".\r\nP.P.S. It looks like I only have one way - to make a nuget package.",
        "createdAt": "2020-10-16T17:52:55Z",
        "updatedAt": "2020-10-16T17:52:55Z",
        "author": {
          "login": "Denis535"
        }
      }
    ]
  }
}