{
  "number": 5204,
  "title": "MSB4252 when using /irc flag",
  "body": "With a very simple .sln with two projects and a single project-to-project reference, the /orc & /irc flags are producing an error.\r\n\r\n### Steps to reproduce\r\nSee https://github.com/mwelsh1118/msbuild-reference-cache\r\n\r\n### Expected behavior\r\n`Build succeeded`\r\n\r\n### Actual behavior\r\n`Build FAILED` with `MSB4252` error\r\n\r\n### Environment data\r\n`msbuild /version` output: `16.4.0.56107`\r\nOS info: `Windows 10`\r\n",
  "state": "CLOSED",
  "createdAt": "2020-03-26T20:36:06Z",
  "updatedAt": "2024-02-21T17:04:29Z",
  "closedAt": "2020-04-20T22:29:02Z",
  "author": {
    "login": "mwelsh1118"
  },
  "labels": [
    "Area: Static Graph",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@cdmihai, can you take a look at this?",
        "createdAt": "2020-04-01T16:29:23Z",
        "updatedAt": "2020-04-01T16:29:23Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Works as expected.\r\n\r\nThe full error text is:\r\n```\r\nMSB4252: Project \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\ConsoleApp.csproj\" with global properties\r\n    ()\r\n    is building project \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\ClassLibrary.csproj\" with global properties\r\n    ()\r\n    with the (GetTargetFrameworks) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:\r\n    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\ConsoleApp.csproj\"\r\n    - the reference was called with global properties that do not match the static graph inferred nodes\r\n    - the reference was not explicitly specified as a ProjectReference item in project \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\ConsoleApp.csproj\"\r\n```\r\n\r\nThis means that project ConsoleApp is building project ClassLibrary with target GetTargetFrameworks, but the results for the  GetTargetFrameworks target are not in the output cache of ClassLibrary. This is because only requested targets get into output cache, so when using cache files, you have to call each project with all the targets that that project will get called with by all the other projects depending on it. So if project A calls project C with target Foo, and project B calls project C with target Bar, you'll have to call C with `/t:Foo;Bar /orc:c.cache`, otherwise when building A or B with C's cache you'll get MSB4252. To infer the targets for each project, you can use the [ProjectGraph.GetTargetLists](https://github.com/microsoft/msbuild/blob/9cebea688cc089ecba7c15acbbd35765e064e10c/src/Build/Graph/ProjectGraph.cs#L510) API which uses the static graph specific [target inference protocol](https://github.com/microsoft/msbuild/blob/master/documentation/specs/static-graph.md#inferring-which-targets-to-run-for-a-project-within-the-graph) to infer what targets to call on each node of the graph. An example usage is how `msbuild /graph` is implemented, where the BuildManager creates a static graph, calls GetTargetLists on it to find the targets for each node, then builds each node in topological order: https://github.com/microsoft/msbuild/blob/9cebea688cc089ecba7c15acbbd35765e064e10c/src/Build/BackEnd/BuildManager/BuildManager.cs#L1410\r\n\r\nFor the particular example of this issue, you can get it working from the command line with the following:\r\n```\r\nE:\\delete\\msbuild-reference-cache\\ReferenceCacheExample [master \u2261]> msbuild ClassLibrary /orc:ClassLibrary.cache /t:\"GetTargetFrameworks;Build;GetCopyToOutputDirectoryItems;GetNativeManifest\"\r\nMicrosoft (R) Build Engine version 16.5.0+d4cbfca49 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 4/20/2020 3:24:24 PM.\r\nWriting build results caches to: ClassLibrary.cache\r\nProject \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\ClassLibrary.csproj\" on node 1 (GetTargetFrameworks;Build;GetCopyToOutputDirectoryItems;GetNativeManifest target(s)).\r\nGenerateTargetFrameworkMonikerAttribute:\r\nSkipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\nCoreCompile:\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Roslyn\\csc.exe /noconfig /nowarn:1701,1702 /nostdlib+ /errorreport:prompt /warn:4 /define:DEBUG;TRACE /highentropyva+ /reference:\"C:\\Program Files (x8\r\n  6)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\mscorlib.dll\" /reference:\"C:\\Program Files (x86)\\Refe\r\n  rence Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Core.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Data.DataSetExtensions.dll\" /reference:\"C:\\Program Files (\r\n  x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Data.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.dll\" /reference:\"C:\\Program Files (x86)\\Reference\r\n   Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Net.Http.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Xml.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assem\r\n  blies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Xml.Linq.dll\" /debug+ /debug:full /filealign:512 /optimize- /out:obj\\Debug\\ClassLibrary.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Team Tools\\Stati\r\n  c Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /subsystemversion:6.00 /target:library /utf8output /deterministic+ /langversion:7.3 Referenced.cs Properties\\AssemblyInfo.cs \"C:\\Users\\micodoba.REDMOND\\AppData\\Local\\Temp\\.\r\n  NETFramework,Version=v4.8.AssemblyAttributes.cs\"\r\n  Using shared compilation with compiler from directory: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Roslyn\r\nCopyFilesToOutputDirectory:\r\n  Copying file from \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\obj\\Debug\\ClassLibrary.dll\" to \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\bin\\Debug\\ClassLibrary.dll\".\r\n  ClassLibrary -> E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\bin\\Debug\\ClassLibrary.dll\r\n  Copying file from \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\obj\\Debug\\ClassLibrary.pdb\" to \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\bin\\Debug\\ClassLibrary.pdb\".\r\nDone Building Project \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\ClassLibrary.csproj\" (GetTargetFrameworks;Build;GetCopyToOutputDirectoryItems;GetNativeManifest target(s)).\r\n\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.28\r\nE:\\delete\\msbuild-reference-cache\\ReferenceCacheExample [master \u2261]> msbuild ConsoleApp /irc:ClassLibrary.cache\r\nMicrosoft (R) Build Engine version 16.5.0+d4cbfca49 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 4/20/2020 3:24:53 PM.\r\nUsing input build results caches: ClassLibrary.cache\r\nProject \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\ConsoleApp.csproj\" on node 1 (default targets).\r\nGenerateBindingRedirects:\r\n  No suggested binding redirects from ResolveAssemblyReferences.\r\nGenerateTargetFrameworkMonikerAttribute:\r\nSkipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\nCoreCompile:\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Roslyn\\csc.exe /noconfig /nowarn:1701,1702 /nostdlib+ /platform:anycpu32bitpreferred /errorreport:prompt /warn:4 /define:DEBUG;TRACE /highentropyva+ /\r\n  reference:E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\bin\\Debug\\ClassLibrary.dll /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\Microsoft.CSharp.dll\" /reference\r\n  :\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\mscorlib.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Core.dll\" /reference:\"C:\\Program\r\n   Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Data.DataSetExtensions.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Data.dll\" /reference:\"C\r\n  :\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Net.Http.dll\" /reference:\"C:\\Program\r\n  Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Xml.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8\\System.Xml.Linq.dll\" /debug+ /debug:full /filealig\r\n  n:512 /optimize- /out:obj\\Debug\\ConsoleApp.exe /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /subsystemversion:6.00 /target:exe /\r\n  utf8output /deterministic+ /langversion:7.3 Program.cs Properties\\AssemblyInfo.cs \"C:\\Users\\micodoba.REDMOND\\AppData\\Local\\Temp\\.NETFramework,Version=v4.8.AssemblyAttributes.cs\"\r\n  Using shared compilation with compiler from directory: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Roslyn\r\n_CopyFilesMarkedCopyLocal:\r\n  Copying file from \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\bin\\Debug\\ClassLibrary.dll\" to \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\bin\\Debug\\ClassLibrary.dll\".\r\n  Copying file from \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\bin\\Debug\\ClassLibrary.pdb\" to \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\bin\\Debug\\ClassLibrary.pdb\".\r\n  Touching \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\obj\\Debug\\ConsoleApp.csproj.CopyComplete\".\r\n_CopyAppConfigFile:\r\nSkipping target \"_CopyAppConfigFile\" because all output files are up-to-date with respect to the input files.\r\nCopyFilesToOutputDirectory:\r\n  Copying file from \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\obj\\Debug\\ConsoleApp.exe\" to \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\bin\\Debug\\ConsoleApp.exe\".\r\n  ConsoleApp -> E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\bin\\Debug\\ConsoleApp.exe\r\n  Copying file from \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\obj\\Debug\\ConsoleApp.pdb\" to \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\bin\\Debug\\ConsoleApp.pdb\".\r\nDone Building Project \"E:\\delete\\msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp\\ConsoleApp.csproj\" (default targets).\r\n\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.08\r\n```",
        "createdAt": "2020-04-20T22:29:02Z",
        "updatedAt": "2020-04-20T22:29:02Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@cdmihai Thanks! This is very informative!\r\n\r\nA related question I had: is there any way to make the .cache path information relative (or update paths after-the-fact)? We use a pool of Git repositories per server to compile in parallel. So a cache may be generated on one server in one repository and consumed on a different server with a different repository path.",
        "createdAt": "2020-05-12T15:53:13Z",
        "updatedAt": "2020-05-12T15:53:13Z",
        "author": {
          "login": "mwelsh1118"
        }
      },
      {
        "body": "Sadly no. We do not have an issue with this because our build machines are setup with the same file system layout, and repositories are cloned into the same location, so a path is valid across all of them. Also, I am not sure of this, but I think we enforce / encourage the usage of relative paths as well.\r\n\r\nBuildXL on the other hand detours file accesses and rebases paths on the fly. I think this is the class which remaps paths: https://github.com/microsoft/BuildXL/blob/master/Public/Src/Utilities/Configuration/Mutable/PathRemapper.cs",
        "createdAt": "2020-05-15T04:35:46Z",
        "updatedAt": "2020-05-15T04:37:57Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Even with relative paths in the project file, the cache files seem to get looked up via absolute path.  So to use the example above, if I run these:\r\n\r\n```\r\nmsbuild msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary /orc:msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\ClassLibrary.cache /t:GetTargetFrameworks;Build;GetCopyToOutputDirectoryItems;GetNativeManifest\r\nmsbuild msbuild-reference-cache\\ReferenceCacheExample\\ConsoleApp /irc:msbuild-reference-cache\\ReferenceCacheExample\\ClassLibrary\\ClassLibrary.cache\r\n```\r\n\r\nAll is well; it compiles.  If I then rename msbuild-reference-cache to msbuild-reference-cache2 and run:\r\n\r\n```\r\nmsbuild msbuild-reference-cache2\\ReferenceCacheExample\\ConsoleApp /irc:msbuild-reference-cache2\\ReferenceCacheExample\\ClassLibrary\\ClassLibrary.cache\r\n```\r\n\r\nIt fails with the original error.  So it seems like the cache lookup is done via the absolute path to the csproj.\r\n\r\nJust out of curiosity, when you say all your build machines use the same layout, are you running msbuild inside containers? We're planning to explore that. How do you handle the local developer case (where I assume it's not so easy to force a specific layout)? Is the assumption that developers would always compile via Visual Studio locally and not use msbuild?",
        "createdAt": "2020-05-28T17:51:42Z",
        "updatedAt": "2020-05-28T17:51:42Z",
        "author": {
          "login": "mwelsh1118"
        }
      },
      {
        "body": ">It fails with the original error. So it seems like the cache lookup is done via the absolute path to the csproj.\r\n\r\nTrue, and I think this happens because you are renaming the directory which contains both the projects, and the caches. If you would separate the directory holding the projects from the directory holding the caches, and then rename only the cache root directory, then I think it should work.\r\n\r\nI think the reason your renaming example is failing is because:\r\n- internally, msbuild's identity of a project evaluation is the tuple (full_project_path, global properties)\r\n- when the build runs after the rename, the MSBuild task will request a build of `ClassLibrary` with `msbuild-reference-cache2` in the name, whereas the provided input cache will only have results for `ClassLibrary` with `msbuild-reference-cache` in the name, thus leading to a cache miss and the cache miss error.\r\n\r\nWays to workaround this:\r\n- separate the project root dir from the cache root dir. Don't change the project root dir across machines. But you can change the name of the cache root dir\r\n- make all machines/vms homogeneous w.r.t. file layout\r\n- run msbuild under detours and rebase paths with the bxl path remapper. This one is probably the most complicated solution, but it would allow your machines to have different file layouts.\r\n",
        "createdAt": "2020-06-02T23:24:25Z",
        "updatedAt": "2020-06-02T23:24:25Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@cdmihai @rainersigwald We recently started using the PathMap msbuild property to remap the repo location on the build server, which will vary based on build server & repo number, to a standard location that's consistent across builds. So now all our build output is binary equivalent.\r\n\r\nI was hoping that PathMap would also affect the reference cache output, but it looks like it does not. Would that be something that could be fixed? Then we'd basically get your third workaround out of the box.",
        "createdAt": "2021-03-01T22:27:29Z",
        "updatedAt": "2021-03-01T22:27:29Z",
        "author": {
          "login": "mwelsh1118"
        }
      }
    ]
  }
}