{
  "number": 4718,
  "title": "MsBuild should 'unescape' properties from the command line on all places",
  "body": "### Related\r\n\r\nhttps://github.com/microsoft/msbuild/issues/4086\r\nhttps://github.com/microsoft/msbuild/issues/3468\r\nhttps://github.com/microsoft/msbuild/issues/2178\r\n\r\n### Steps to reproduce\r\n\r\nOriginally reported here:\r\nhttps://github.com/fsharp/FAKE/issues/2392\r\n\r\nProject file\r\n```xml\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" DefaultTargets=\"Build\">\r\n    <UsingTask TaskName=\"WixAssignCulture\" AssemblyFile=\"$(WixTasksPath)\" />\r\n    <Target Name=\"Build\">\r\n        <Message Text=\"__BEFORE__$(Arg)__AFTER__\" />\r\n        <WixAssignCulture />\r\n    </Target>\r\n</Project>\r\n```\r\n\r\nCommand line\r\n```\r\nmsbuild /p:WixTargetsPath=c:%5CCode%5Cpackages%5Cbuild%5CWiX%5Ctools%5Cwix.targets\r\n```\r\n\r\n### Expected  behavior\r\n\r\n`$(WixTasksPath)` is properly unescaped, according to https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-special-characters?view=vs-2017\r\n\r\n### Actual behavior\r\n\r\n`$(WixTasksPath)` is not unescaped in this position. Others (like printing a message) work.\r\n\r\n### Description\r\n\r\nThe problem is that we don't know a workaround which works \"properly\" in all situations we have cross platform unit tests and they start failing as soon as we disable escaping for `/` or `\\`, I guess this is due to the related issues.\r\n\r\nWhat is the proper way to get a string into a property over the command line which works for all special and non-special characters?\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n```\r\n$ dotnet msbuild /version\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.9.20.62856\r\n```\r\n\r\nOS info: Windows 10\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\nFAKE\r\n\r\n/cc @vbfox\r\n",
  "state": "CLOSED",
  "createdAt": "2019-09-11T16:54:39Z",
  "updatedAt": "2024-02-21T17:07:09Z",
  "closedAt": "2019-09-23T20:31:53Z",
  "author": {
    "login": "matthid"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Seem like the using task case has already been ruled out as by design as it's legacy and won't be changed in https://github.com/Microsoft/msbuild/issues/885#issuecomment-252737626 :(",
        "createdAt": "2019-09-11T20:15:16Z",
        "updatedAt": "2019-09-11T20:15:16Z",
        "author": {
          "login": "vbfox"
        }
      },
      {
        "body": "Team triage: we think the reasoning from the previous won't-fix decision stands, unfortunately:\r\n\r\n> The evaluation of UsingTask elements does not unescape the attribute under `AssemblyFile`: https://github.com/Microsoft/msbuild/blob/master/src/Build/Instance/TaskRegistry.cs#L276\r\n> \r\n> Since this behaviour has been there forever, changing it could break existing code. The workaround would be to manually unescape the string in the UsingTask via the `[MSBuild]::Unescape` intrinsic property function.\r\n",
        "createdAt": "2019-09-23T20:31:46Z",
        "updatedAt": "2019-09-23T20:31:46Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Duplicate of #885",
        "createdAt": "2019-09-23T20:31:53Z",
        "updatedAt": "2019-09-23T20:31:53Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}