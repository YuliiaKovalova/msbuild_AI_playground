{
  "number": 2397,
  "title": "PreBuildEvent Use Macros Parameter On Linux Is Not Working Properly",
  "body": "From @baiyunchen in https://github.com/dotnet/core/issues/786\r\n\r\n.NET Core version:2.0.0-preview2-006497\r\noperating system:CentOS\r\nWhen I use PreBuildEvent to execute some commands, the path in Macros does not seem to work properly in Linux.\r\nMy command is: dotnet $(SolutionDir)tools/copyfiles/CopyFiles.dll \"$(SolutionDir)src/Infrastructures/DbScript\" \"*.config\" \"Configuration/Data\"\r\n\r\nIt can work in Windows VS, but in Linux will be thrown\r\n\r\nNo executable found matching command \"dotnet-tools/copyfiles/CopyFiles.dll\"\r\n/opt/dotnet/sdk/2.0.0-preview2-006497/Microsoft.Common.CurrentVersion.targets(1274,5): error MSB3073: The command \"dotnet tools/copyfiles/CopyFiles.dll \"src/Infrastructures/DbScript\" \"*.config\" \"Configuration/Data\"\" exited with code 1. [/usr/gitlab/builds/bee2a437/0/xxx/src/XXX.csproj]\r\nI tried to manually find the root directory of the solution implementation\r\n\r\ndotnet  $(SolutionDir)tools/copyfiles/CopyFiles.dll  \"$(SolutionDir)src/Infrastructures/DbScript\" \"*.config\" \"Configuration/Data\"\r\nIt looks $(SolutionDir) is not working properly.",
  "state": "CLOSED",
  "createdAt": "2017-08-04T14:57:10Z",
  "updatedAt": "2024-02-21T17:17:30Z",
  "closedAt": "2021-08-30T18:56:56Z",
  "author": {
    "login": "Petermarcu"
  },
  "labels": [
    "needs-more-info",
    "stale",
    "needs-attention",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@baiyunchen I tried to reproduce this with a simple one-project solution, and I don't see the behavior you describe. `$(SolutionDir)` is expanded to the right value as shown in the error (I didn't create a `CopyFiles.dll`\r\n\r\n```\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  No executable found matching command \"dotnet-/mnt/s/work/solutiondir/tools/copyfiles/CopyFiles.dll\"\r\n/mnt/s/work/solutiondir/proj/proj.csproj(8,5): error MSB3073: The command \"dotnet /mnt/s/work/solutiondir/tools/copyfiles/CopyFiles.dll\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\n/mnt/s/work/solutiondir/proj/proj.csproj(8,5): error MSB3073: The command \"dotnet /mnt/s/work/solutiondir/tools/copyfiles/CopyFiles.dll\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:04.91\r\n```\r\n\r\nI created the PreBuildEvent in Visual studio, which resulted in this change in my project file:\r\n\r\n```diff\r\ndiff --git a/proj/proj.csproj b/proj/proj.csproj\r\nindex 049d1c7..b6370f7 100644\r\n--- a/proj/proj.csproj\r\n+++ b/proj/proj.csproj\r\n@@ -4,4 +4,8 @@\r\n     <TargetFramework>netstandard1.4</TargetFramework>\r\n   </PropertyGroup>\r\n \r\n+  <Target Name=\"PreBuild\" BeforeTargets=\"PreBuildEvent\">\r\n+    <Exec Command=\"dotnet $(SolutionDir)tools/copyfiles/CopyFiles.dll\" />\r\n+  </Target>\r\n+\r\n </Project>\r\n```\r\n\r\n## Questions \r\n1. How did you add the prebuild event?\r\n1. How is the prebuild event represented in your project file?\r\n1. How are you invoking the build? `$(SolutionDir)` is only meaningful if the build started with the `.sln` file.",
        "createdAt": "2017-08-09T21:35:55Z",
        "updatedAt": "2017-08-09T21:35:55Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for your answer!\r\nI think I'm having trouble here that \" $(SolutionDir) is only meaningful if the build started with the .sln file.\"\u3002\r\nBecause I used  $(SolutionDir)  when I use `dotnet publish` command publish a website project.\r\nBut I can not understand `why I use visual studio in the windows can carrectly publish the website?Does it work with the dotnet publish command?`\r\n\r\nI Define the pre-build event in the build event tab in the project property.\r\n\r\nHere are some of the code in my .csproj file:\r\n```\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <UserSecretsId>aspnet-Lianluo.ItemMaintain.BaseInfo.Api-B0CF1B8D-EFA9-474E-AC55-6B7D05906A53</UserSecretsId>\r\n    <PostBuildEvent></PostBuildEvent>\r\n    <RunPostBuildEvent>Always</RunPostBuildEvent>\r\n    <AssetTargetFallback>%3bnet461%3bportable-net45+win8</AssetTargetFallback>\r\n    <PreBuildEvent>dotnet $(SolutionDir)tools/copyfiles/CopyFiles.dll \"$(SolutionDir)src/Infrastructures/Lianluo.ItemMaintain.DbScript\" \"*.config\" \"Configuration/Data\"</PreBuildEvent>\r\n  </PropertyGroup>\r\n```\r\nCopyFiles.dll is a simple .net core console application for copying files in linux and windows.It contains three parameters,the first parameter for the source directory,the second parameter for the target directory,the last parameter for the file search condition.\r\n\r\n\r\n",
        "createdAt": "2017-08-10T00:45:49Z",
        "updatedAt": "2017-08-10T00:45:49Z",
        "author": {
          "login": "baiyunchen"
        }
      },
      {
        "body": "> But I can not understand `why I use visual studio in the windows can carrectly publish the website?Does it work with the dotnet publish command?`\r\n\r\nBuilds from within the Visual Studio UI and command-line builds that start with the solution file both provide information to individual projects about the solution, including `$(SolutionDir)`. Individual project builds from the command line can't provide that information, because it's not possible to know if there's a solution that contains a particular project, and there might be more than one.\r\n\r\nIf you must build the individual project because you can't publish through the solution, you can redefine the event so it's not dependent on solution variables.\r\n\r\nYou could just include a relative path like `../../tools/copyfiles/CopyFiles.dll`\r\n\r\nOr you could create a `Directory.Build.props` file in a directory above your projects (probably next to your `.sln` that defines a property like\r\n```xml\r\n<RepoRoot>$(MSBuildThisFileDirectory)</RepoRoot>\r\n```\r\nand change the reference to `dotnet $(RepoRoot)tools/copyfiles/CopyFiles.dll`.",
        "createdAt": "2017-08-10T15:50:12Z",
        "updatedAt": "2017-08-10T15:50:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Looks like a great solution , thank you very much ! ",
        "createdAt": "2017-08-10T16:01:27Z",
        "updatedAt": "2017-08-10T16:01:27Z",
        "author": {
          "login": "baiyunchen"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.",
        "createdAt": "2021-08-28T00:01:42Z",
        "updatedAt": "2021-08-28T00:01:42Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "Closing, as a solution was given.",
        "createdAt": "2021-08-30T18:56:56Z",
        "updatedAt": "2021-08-30T18:56:56Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}