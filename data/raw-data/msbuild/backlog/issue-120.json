{
  "number": 120,
  "title": "MSBuild doesn't parse environment variables in .sln files",
  "body": "[This is a replication of a bug on Microsoft connect.](https://connect.microsoft.com/VisualStudio/feedback/details/690318/msbuild-doesnt-parse-environment-variables-in-sln-files)\n\n\"Currently we are using environment variables to specify where to find projects within our VS solution files. Visual Studio seems to handle this fine but when trying to build the solution via MSBuild, we get an error due to it not parsing the environment variable at all.\"\n\nThis was marked \"Won't Fix\" in 2011. Is there anything keeping someone from fixing this, or was it just determined not suitable for the next milestone?\n",
  "state": "CLOSED",
  "createdAt": "2015-06-23T23:13:06Z",
  "updatedAt": "2025-01-24T22:49:11Z",
  "closedAt": "2025-01-24T22:49:09Z",
  "author": {
    "login": "playmer"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "help wanted",
    "Area: Solution (.sln)",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Hey, so I started looking into this, and I think it's a relatively easy fix, but right now I'm running into (seemingly unreleated) issues with running the provided tests as well as running on my project.\n\nWith a pulled version of the repo (at the tip of master with no changes), I'm seeing the following five tests failing:\nSolutionGeneratorCanEmitSolutions\nSolutionGeneratorEscapingProjectFilePaths\nTestDefaultWhenNoSubToolset\nTestGenerateSubToolsetVersionWhenNoSubToolset\nVerifyDefaultSubToolsetPropertiesAreEvaluated\n\nand I'm running Visual Studio 2015 RC. Is there some more environment stuff to set up beyond just installing 2015?\n\nAs for testing my change for my project the only change I made in my dirty branch is changing line 1244 (src/XMakeBuildEngine/Construction/Solution/SolutionFile.cs) from:\nproj.RelativePath = match.Groups[\"RELATIVEPATH\"].Value.Trim();\n\nto:\nproj.RelativePath = Environment.ExpandEnvironmentVariables(match.Groups[\"RELATIVEPATH\"].Value.Trim());\n\n~~And as I step through it appears to expand the variables, but it can't seem to run my solution:~~\n\n~~C:\\Sandbox\\Zero\\Zilch\\Project\\StandardLibraries\\Math\\Math.vcxproj(22,3): error\nMSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. C\nonfirm that the path in the <Import> declaration is correct, and that the file\nexists on disk.~~\n\n~~I can email the solution for testing if need be.~~\n",
        "createdAt": "2015-07-01T02:33:58Z",
        "author": {
          "login": "playmer"
        }
      },
      {
        "body": "Seems that that last bit was an environment issue, I do seem to be running into other similar issues, but I suspect they'll boil down to the same thing.\n",
        "createdAt": "2015-07-01T22:06:43Z",
        "author": {
          "login": "playmer"
        }
      },
      {
        "body": "@playmer FYI, the C++ targets aren't included in this repository, only C# and VB so it won't work for building vcxproj's.\n",
        "createdAt": "2015-07-15T10:41:27Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "@akoeplinger Well that would be a problem. I'll spend some time testing with a C# project then, thanks for letting me know!\n\nIs there any way we could get the C++ targets on GitHub or is there something preventing it?\n",
        "createdAt": "2015-07-15T20:02:08Z",
        "author": {
          "login": "playmer"
        }
      },
      {
        "body": "According to https://github.com/Microsoft/msbuild/issues/106 they aren't open sourced at this point. I don't know if it's planned to change this in the future :)\n",
        "createdAt": "2015-07-15T21:39:33Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "I think that this is relevant to [this stackoverflow issue](https://stackoverflow.com/questions/16092169/why-does-msbuild-look-in-c-for-microsoft-cpp-default-props-instead-of-c-progr/16213408#16213408) which i encountered while attempting to build [eventstore](https://github.com/eventstore/eventstore)\n",
        "createdAt": "2015-07-30T15:18:42Z",
        "author": {
          "login": "plato-cambrian"
        }
      },
      {
        "body": "This python script is a janky workaround for the .sln parsing.\r\n\r\n```\r\n# Python 2.7\r\n# usage: python fix_sln.py path/to/file.sln\r\nimport codecs\r\nimport os\r\nimport re\r\nimport shutil\r\nimport sys\r\n\r\nif __name__ == \"__main__\":\r\n    with codecs.open(sys.argv[1], encoding='utf-8-sig') as orig:\r\n        with codecs.open(sys.argv[1] + '.modified', 'w', encoding='utf-8-sig') as new:\r\n            for line in orig:\r\n                line = line.rstrip('\\r\\n')\r\n                found = re.search(r\"\"\"%.+%\"\"\", line)\r\n                line = line.replace(str(found.group()), os.environ.get(str(found.group()).replace(\"\"\"%\"\"\", \"\"))) if found else line\r\n                new.write(line + '\\r\\n')\r\n    shutil.move(sys.argv[1] + '.modified', sys.argv[1])\r\n```\r\nIt simply replaces environment variable names with their values in the .sln file.  Msbuild can then parse the .sln correctly.",
        "createdAt": "2018-06-15T23:35:43Z",
        "author": {
          "login": "cowlinator"
        }
      },
      {
        "body": "The originally provided link is dead:\r\n> [This is a replication of a bug on Microsoft connect.](https://connect.microsoft.com/VisualStudio/feedback/details/690318/msbuild-doesnt-parse-environment-variables-in-sln-files)\r\n\r\nBut [this one with a suspiciously identical name from 2018](https://developercommunity.visualstudio.com/t/msbuild-doesnt-parse-environment-variables-in-sln/248631) says it was:\r\n> Fixed In: Visual Studio 2019 version 16.0\r\n\r\nWas it actually fixed for msbuild? It doesn't seem to work for me.",
        "createdAt": "2023-07-11T03:11:53Z",
        "author": {
          "login": "sicklittlemonkey"
        }
      },
      {
        "body": "This is either fixed or a feature request for https://github.com/microsoft/vs-solutionpersistence now.",
        "createdAt": "2025-01-24T22:49:09Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}