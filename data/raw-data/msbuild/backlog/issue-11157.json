{
  "number": 11157,
  "title": "Unable to use out of source .settings file",
  "body": "### Issue Description\n\nNot sure if this is the right place to report this, but I found #2782 which seemed similar.\n\nSo I have a c# project, generated with CMake. The solution files are generated out of source (meaning the source files are not in the solution directory).\n\nThis means CMake generates code like this, which uses link tags to include the file in the project.\n\n```\n  <ItemGroup>\n    <Compile Include=\"..\\Source\\Properties\\Settings.Designer.cs\">\n      <Link>Properties\\Settings.Designer.cs</Link>\n      <DesignTimeSharedInput>True</DesignTimeSharedInput>\n      <AutoGen>True</AutoGen>\n      <DependentUpon>Settings.settings</DependentUpon>\n    </Compile>\n  </ItemGroup>\n\n  <ItemGroup>\n    <None Include=\"..\\Source\\Properties\\Settings.settings\">\n      <Link>Properties\\Settings.settings</Link>\n      <Generator>SettingsSingleFileGenerator</Generator>\n      <LastGenOutput>Settings.Designer.cs</LastGenOutput>\n    </None>\n  </ItemGroup>\n```\n\nWhen this method is used, the `Settings.Designer.cs` fails to update. The `Settings.settings` file contains a setting called ` TestSetting` which does not get added to the auto generated file.\n\nThis means I'm forced to somehow place these files inside of the solution directory with CMake and makes it impossible to update the settings file since I'd need to copy it out of source every time I make a change. Or find some other hacky workaround like copy the `Settings.settings` file from source to solution on edit. \n\n### Steps to Reproduce\n\n- Open the repro project here: [SettingsBug.zip](https://github.com/user-attachments/files/18166015/SettingsBug.zip)\n- Note the separation of the `Settings.*` source files from the solution\n- Open the solution\n- Open the `Settings.settings` file and observe the setting called `TestSetting`\n- Open the `Settings.Designer.cs` file and observer the property code for this setting is missing\n- Run the project and observe it fails to compile due to the missing property code\n\n* Additionally note that the `Run Custom Tool` context menu item also fails to update the file\n![Image](https://github.com/user-attachments/assets/cac7e664-775f-4203-8580-d7c1dbbd31d5)\n\n\n### Expected Behavior\n\nThe `Settings.Designer.cs` file is automatically generated and updated\n\n### Actual Behavior\n\nThe `Settings.Designer.cs` file is **not** automatically generated and updated\n\n### Analysis\n\nMy guess is that the code that generates/updates the designer file uses a path mapping that does not follow the path link defined in the `.csproj`.\nAlso note that updating the `Settings.settings` file, does properly update the `App.config` file, so there it does work as expected.\n\n### Versions & Configurations\n\nMSBuild version 17.12.12+1cce77968 for .NET Framework\n17.12.12.57101",
  "state": "OPEN",
  "createdAt": "2024-12-17T13:29:23Z",
  "updatedAt": "2025-06-02T08:36:30Z",
  "closedAt": null,
  "author": {
    "login": "duckdoom5"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Also, the same applies to the file called `launchSettings.json`. This file only works if it's inside of the solution folder",
        "createdAt": "2024-12-17T15:30:08Z",
        "author": {
          "login": "duckdoom5"
        }
      }
    ]
  }
}