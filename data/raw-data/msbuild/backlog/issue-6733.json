{
  "number": 6733,
  "title": "[Suggestion] `dotnet build` support piping",
  "body": "Hello all.\r\nI've tried searching for a similar issue but could not find one.\r\n\r\nWould it be possible for `dotnet build` to support piping for an MSBuild project instead of receiving it as an argument?\r\n\r\n```bash\r\ncat some.csproj | dotnet build\r\n```\r\n\r\nWhen `some.csproj` is a valid MSBuild project file, I would expect `cat some.csproj | dotnet build` to generate the same output as `dotnet build some.csproj`.\r\n\r\nThis would allow piping with other tools that generate MSBuild projects like [`SlnGen`](https://github.com/microsoft/slngen/) and [`dotnet-affected`](https://github.com/leonardochaia/dotnet-affected).\r\n\r\nSome examples:\r\n\r\n```bash\r\ndotnet slngen | dotnet build\r\n```\r\n```bash\r\ndotnet affected | dotnet build\r\n```\r\n\r\nThank you all the work you've put into .NET\r\n\r\nRegards,\r\nLeo.",
  "state": "CLOSED",
  "createdAt": "2021-03-20T19:03:21Z",
  "updatedAt": "2024-02-21T17:01:44Z",
  "closedAt": "2021-09-30T16:37:15Z",
  "author": {
    "login": "leonardochaia"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I couldn't figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one area label.",
        "createdAt": "2021-03-20T19:03:24Z",
        "updatedAt": "2021-03-20T19:03:24Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "@rainersigwald Thoughts on the feasibility of this for MSBuild?",
        "createdAt": "2021-07-30T20:46:20Z",
        "updatedAt": "2021-07-30T20:46:20Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "It could be done but has some caveats. MSBuild can build an in-memory project constructed from XML with no problem but various parts of MSBuild assume that projects have paths and things can behave strangely if they don't.\r\n\r\nFor some of the examples you're giving this wouldn't be a major problem as long as slngen and affected generate absolute paths inside their projects, but if someone tried to use it for something like the `cat some.csproj` case you're describing things might go wrong. For a specific example if it was run from a different directory--`cat ..\\some\\some.csproj | dotnet build` could get _very_ confusing because it'd use the source from the current working directory (and ProjectReferences wouldn't work either).\r\n\r\nOn the whole I lean toward \"not worth implementing\" but I'm open to persuasion.",
        "createdAt": "2021-07-30T21:23:55Z",
        "updatedAt": "2021-07-30T21:23:55Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Team Triage: Since this hasn't attracted a lot of attention and has the caveats mentioned above, we don't plan to implement it at this time.",
        "createdAt": "2021-09-30T16:37:15Z",
        "updatedAt": "2021-09-30T16:37:15Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}