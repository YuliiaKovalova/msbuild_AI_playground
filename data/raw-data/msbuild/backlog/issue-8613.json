{
  "number": 8613,
  "title": "[Feature Request]: Common Task for Creating and Modifying URIs (BuildUri)",
  "body": "### Summary\r\n\r\nA common task that can create and modify collections of URIs.\r\n\r\nThis issue is replacing the \"[Proposed 'BuildUri' Common Task](https://github.com/dotnet/msbuild/discussions/7440)\" discussion.\r\n\r\nA PR will be added to this issue with a proposed implementation. [**Update**: PR is #8614]\r\n\r\n### Background and Motivation\r\n\r\nThere is an existing [`FormatUrl`](https://learn.microsoft.com/en-us/visualstudio/msbuild/formaturl-task?view=vs-2022) task that can accept and output a string. `FormatUrl` is a specialized task that was written for a specific use case. It canonicalizes a URL and will replace 'localhost' with the current machine name. Replacing 'localhost' can easily be counter-productive for many scenarios including creating a test configuration that is meant to be distributed to multiple hosts and run locally.\r\n\r\n`FormatUrl` doesn't support general construction and modification of URIs and there isn't other support currently provided in MSBuild.\r\n\r\nA project that needs to generate or manipulate a URI may use string functions, a custom task, or an external script or tool. All three of these approaches can be flawed if the code used doesn't correctly understand URIs.\r\n\r\n### Proposed Feature\r\n\r\nThe `BuildUri` task wraps the [`UriBuilder`](https://learn.microsoft.com/en-us/dotnet/api/system.uribuilder?view=net-7.0) class and operates on Item collections. Providing useful access to the `UriBuilder` class is new[^1]. Providing for Item collections makes the task very flexible.\r\n\r\n`BuildUri` has an optional input parameter for an ItemGroup of URIs (`InputUri`), a set of optional input parameters that map to the properties of `UriBuilder`, and an output parameter for an ItemGroup of URIs (`OutputUri`).\r\n\r\nFor an empty set of `InputUri`, the other input parameters are used to create a new URI.\r\n\r\nFor a set of 1 or more `InputUri`, the other input parameters are applied to each member of the set, e.g. a set of http URIs can be changed to used https.\r\n\r\nFor the `OutputUri`, each item is set with custom metadata that reflects the properties of the `UriBuilder` class. A set of URIs could be passed through the `BuildUri` task to add the metadata and the results could then be task or target batched by the added metadata, e.g. the collection could be batched by `UriScheme`.\r\n\r\nCreating a URI might look like the following:\r\n\r\n```xml\r\n    <BuildUri UriScheme=\"https\" UriHost=\"example.com\" UriPath=\"test\">\r\n      <Output TaskParameter=\"OutputUri\" PropertyName=\"ExampleUri\" />\r\n    </BuildUri>\r\n```\r\n\r\nCreating URIs for a set of hosts might look like the following:\r\n\r\n```xml\r\n    <ItemGroup>\r\n      <template Include=\"http://example.com/\" />\r\n      <template Include=\"http://example.com/api\" />\r\n      <template Include=\"http://example.com/config\" />\r\n      <host Include=\"dev01-01;dev01-02;dev02-01;dev02-02\" />\r\n    </ItemGroup>\r\n    <BuildUri InputUri=\"@(template)\" UriScheme=\"https\" UriHost=\"%(host.Identity)\">\r\n      <Output TaskParameter=\"OutputUri\" ItemName=\"node\" />\r\n    </BuildUri>\r\n```\r\n\r\n[^1]: `System.UriBuilder` is a supported type for [static property functions](https://learn.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2022#static-property-functions) but doesn't have any public static members.\r\n\r\n### Alternative Designs\r\n\r\n_No response_",
  "state": "OPEN",
  "createdAt": "2023-03-29T18:55:58Z",
  "updatedAt": "2024-01-31T08:14:41Z",
  "closedAt": null,
  "author": {
    "login": "jrdodds"
  },
  "labels": [
    "backlog",
    "Feature Request",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team triage: Let's keep this issue open and see if there is community interest in it.",
        "createdAt": "2023-04-04T14:07:40Z",
        "updatedAt": "2023-04-04T14:07:40Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}