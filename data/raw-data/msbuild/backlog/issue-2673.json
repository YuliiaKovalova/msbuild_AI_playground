{
  "number": 2673,
  "title": "GetReferenceAssemblyPaths task fails on Mono when \"gac\" path does not exist",
  "body": "In `NativeMethods+AssemblyCacheEnum`, the `s_gacPath` field is initialized like so ([src](https://github.com/Microsoft/msbuild/blame/7f40c7cef6714a78769d3c1158657aca23ebdeef/src/Tasks/NativeMethods.cs#L1455)):\r\n\r\n```C#\r\nprivate static string s_gacPath = Path.Combine(NativeMethodsShared.FrameworkBasePath, \"gac\");\r\n```\r\n\r\nThis uses `FrameworkBasePath`, which is initialized with `FrameworkCurrentPath`, which is initialized with:\r\n\r\n```C#\r\nAssemblyUtilities.GetAssemblyLocation(typeof(string).GetTypeInfo().Assembly)\r\n```\r\n\r\nSo, the GAC path is assumed to be the location of the assembly containing `System.String` with \"gac\" appended to it.\r\n\r\nLater, when running on non-Windows, `s_gacPath`  is used to enumerate directories in order to initialize the `AssemblyCacheEnum._gacDirectories` field like so ([src](https://github.com/Microsoft/msbuild/blame/7f40c7cef6714a78769d3c1158657aca23ebdeef/src/Tasks/NativeMethods.cs#L1535-L1543)):\r\n\r\n```C#\r\nif (!string.IsNullOrWhiteSpace(assemblyName))\r\n{\r\n    _assemblyNameVersion = new AssemblyName(assemblyName);\r\n    _gacDirectories = Directory.EnumerateDirectories(s_gacPath, _assemblyNameVersion.Name);\r\n}\r\nelse\r\n{\r\n    _gacDirectories = Directory.EnumerateDirectories(s_gacPath);\r\n}\r\n```\r\n\r\nFor a normal Mono layout, this works fine. However, on a non-standard Mono layout (such as the one used in OmniSharp), it fails because `\"<location-of-assembly-containing-system-string>/gac\"` might not exist. The exception thrown is a `System.IO.DirectoryNotFoundException` from the `GetReferenceAssemblyPaths` task.",
  "state": "CLOSED",
  "createdAt": "2017-10-26T19:02:25Z",
  "updatedAt": "2024-02-21T17:16:03Z",
  "closedAt": "2017-10-26T22:27:11Z",
  "author": {
    "login": "DustinCampbell"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}