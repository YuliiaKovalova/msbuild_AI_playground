{
  "number": 5969,
  "title": "As a customer, speed up my first build/run after doing dotnet new",
  "body": "Initial performance data indicates that the second dotnet run after creating a new application is significantly faster than the first one.  Much of that cold-start time is spend spinning up the MSBuild nodes, Roslyn nodes, RAR cache nodes (future), etc.\r\n\r\nSince it's highly likely that someone running dotnet new would the turn around and do a dotnet run, we should investigation options for spinning up some of the warm dotnet run processes.\r\n\r\nOptions.\r\n- Execute a dotnet build in the background\r\n  - What happens if the user runs dotnet build before this background build is done warming up?\r\n- Execute a dotnet run in the background \r\n  - We don't actually want to run the application though\r\n- Targeted starting of various nodes and processes\r\n  - More work but gives us more control over what starts up and when\r\n\r\nThe cold build had a particularly high CoreCompile call so it may be worth ensuring that any early initialization we do helps with that:\r\nTarget: CoreCompile | 3,557.447 | \u00a0\r\n-- | -- | --",
  "state": "OPEN",
  "createdAt": "2020-12-14T19:39:13Z",
  "updatedAt": "2025-06-02T08:30:28Z",
  "closedAt": null,
  "author": {
    "login": "marcpopMSFT"
  },
  "milestone": {
    "title": "Backlog"
  },
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "labels": [
    "Area: Performance",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "How long does it take compared to doing a second (clean) build?",
        "createdAt": "2025-02-23T01:58:59Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      }
    ]
  }
}