{
  "number": 10103,
  "title": "Log item Includes, Removes and Updates during evaluation",
  "body": "One of the biggest missing features in logging that keeps hurting us is we don't log item includes, removes and updates during evaluation, with the source location where it happened. \r\n\r\nWe do log the final set of all items after evaluation is done, but it is currently impossible to see where a specific item was added during evaluation.\r\n\r\nWe should consider logging a TaskParameterEventArgs perhaps (even though the same is not the best fit semantically), because we already have all the infrastructure for items that are logged during target execution. We can reuse the same infrastructure during evaluation as well.\r\n\r\nOne potential pitfall here is perf, so need to be careful and measure eval perf before and after. Maybe only do this when the binary logger is present.\r\n\r\nThis is in complement for the similar request for properties: \r\nhttps://github.com/dotnet/msbuild/issues/2711",
  "state": "OPEN",
  "createdAt": "2024-05-05T01:13:28Z",
  "updatedAt": "2025-04-01T11:08:17Z",
  "closedAt": null,
  "author": {
    "login": "KirillOsenkov"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Debuggability",
    "Area: Logging",
    "triaged",
    "Area: BuildCheck"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Team triage: it seems that we will need to fix this for the BuildCheck user story too. Let's add it there as an item.",
        "createdAt": "2024-05-07T14:19:51Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "I would expect perf will indeed be a problem.",
        "createdAt": "2024-05-07T15:09:32Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "We will experiment with analgous data for props (possibly as part of, or continuation of https://github.com/dotnet/msbuild/pull/10009) - I'd hope that if we accumulate and properly deduplicate/compress the info (especially the names and locations, that will largely repeat) and then send everything in a single blob, the perf might not get that big of an impact. If it's still a deal breaker, than we can scope it only to the user code (the term is yet to be exactly defined) in the default mode.",
        "createdAt": "2024-05-07T16:29:13Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "There is small PoC here, where the proper place for logging is defined: https://github.com/YuliiaKovalova/msbuild/tree/dev/ykovalova/item_tracking_draft\nI emit raw messages there, it will be adjusted once I have more cases to test it against.\n\nCurrently, I need to gather more examples/real stories from the customers to understand what kind of information is useful for them.\n\nFeel free to ping me in the corresponding tickets.\n",
        "createdAt": "2025-01-28T15:50:52Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  }
}