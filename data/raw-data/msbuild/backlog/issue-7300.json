{
  "number": 7300,
  "title": "Common Flat Build Output via Directory.Build.props/.targets",
  "body": "In [Common Flat Build Output](https://nietras.com/2021/11/19/bendingdotnet-common-flat-build-output/) I thought I'd finally found a clean solution to a long search for getting flat build output from msbuild for .NET. Unfortunately, this approach has a serious flaw as reported in [F12 not working across C# projects in solution perhaps due to customized output paths in VS22](https://developercommunity.visualstudio.com/t/f12-not-working-across-c-projects-in-solution-perh/1629596). I then tweeted a bit about trying to fix the issue in https://twitter.com/nietras1/status/1462885254755147780 but I cannot find a good solution for it that does not require changing `csproj` files.\r\n\r\nThe premise is that I want to change the build output fully by only changing the `Directory.Build.props/.targets` in a common parent directory, and not have to do any changes to `csproj` for this since that is very cumbersome for a solution with hundreds or thousands of projects. One of the problems here then seems to be that e.g. `TargetFramework` is not defined at the point of `Directory.Build.props`. The same issue btw relates to `Configuration` and `Platform` and this has been a long standing issue since many then try to use these but they are often not defined at the point when `Directory.Build.props` is imported. Import order is somewhat covered in https://github.com/dotnet/msbuild/issues/2767#issuecomment-514342730 as far as I can tell.\r\n\r\nSource code from blog post with the go to definition issue:\r\n[CommonFlatBuild.zip](https://github.com/dotnet/msbuild/files/7874596/CommonFlatBuild.zip)\r\n\r\nFor a MSBuild novice like me I would think we are missing a set of extension points that complement the \"outermost\" `Directory.Build.props/.targets` so we perhaps instead could have something like:\r\n```\r\nDirectory.Build.props\r\n<LOTS OF IMPORTS ETC. props>\r\nDirectory.Project.props\r\n<Project File>\r\nDirectory.Project.targets\r\n<LOTS OF IMPORTS ETC. targets>\r\nDirectory.Build.targets\r\n```\r\nthat is we would add \"innermost\" complements to `Directory.Build.*` in the form of say `Directory.Project.*`. This should cover more use cases.\r\n\r\nHowever, perhaps there is another way of doing what I want that I just can't find.\r\n\r\ncc: @KirillOsenkov @sharwell ",
  "state": "OPEN",
  "createdAt": "2022-01-15T09:00:35Z",
  "updatedAt": "2024-01-31T08:18:45Z",
  "closedAt": null,
  "author": {
    "login": "nietras"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I'm guessing a custom SDK would resolve this with minimal modification of the projects. I haven't created one of those before so I'm not sure the process.",
        "createdAt": "2022-01-18T22:11:27Z",
        "updatedAt": "2022-01-18T22:11:27Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "I don't know how to that either or if that's a simple viable path. However, @Stefan75 appears to have found a possible solution as mentioned in https://github.com/nietras/nietras.github.io/issues/21 using:\r\n```xml\r\n<PropertyGroup>\t\t \r\n<BeforeTargetFrameworkInferenceTargets>$(MSBuildThisFileDirectory)BeforeTargetFrameworkInference.targets</BeforeTargetFrameworkInferenceTargets>\r\n</PropertyGroup>\r\n```\r\nIf there could be issues with that it would be great to know.",
        "createdAt": "2022-01-23T12:14:41Z",
        "updatedAt": "2022-01-23T12:14:41Z",
        "author": {
          "login": "nietras"
        }
      },
      {
        "body": "I'm a bit late but perhaps this is useful to someone.\r\n\r\n `CustomBeforeMicrosoftCommonProps`, `CustomBeforeMicrosoftCommonTargets`, `CustomAfterMicrosoftCommonProps` and `CustomAfterMicrosoftCommonTargets` can be of good use as well.\r\n\r\nSee: https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2022#customize-all-net-builds\r\n",
        "createdAt": "2022-06-29T18:56:54Z",
        "updatedAt": "2022-06-29T18:56:54Z",
        "author": {
          "login": "psollberger"
        }
      }
    ]
  }
}