{
  "number": 6620,
  "title": "Project includes do not handle soft symlinks on linux, instead copy entire linked directory",
  "body": "If I have something like the following in my project file:\r\n\r\n```csproj\r\n<None Include=\"fixtures\\**\" CopyToOutputDirectory=\"PreserveNewest\" LinkBase=\"fixtures\\\" />\r\n```\r\n\r\nAnd then inside of fixtures I have a symlinked folder I created using `ln -s [source] [link]`. But the problem is when I build the project dotnet removes the symlink and instead just copies everything over. This doesn't work as when running in debug I need the folder to be elsewhere on the system, both because of access and because it's very large.\r\n\r\nIs there a workaround for this?\r\n\r\nI put linux in the title, although I have not tested it on any other operating system.",
  "state": "CLOSED",
  "createdAt": "2021-05-27T18:08:25Z",
  "updatedAt": "2021-06-30T15:28:31Z",
  "closedAt": "2021-06-30T15:28:29Z",
  "author": {
    "login": "levihb"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I couldn't figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
        "createdAt": "2021-05-27T18:08:28Z",
        "updatedAt": "2021-05-27T18:08:28Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "I couldn't figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one area label.",
        "createdAt": "2021-05-28T15:31:05Z",
        "updatedAt": "2021-05-28T15:31:05Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "No, it doesn't look like `Copy` has a `CopySymlinksAsSymlinks` option. That would be difficult to implement, as the inputs to `Copy` are a list of _files_, which are discovered by the `**` pattern you're specifying, so we don't even have an entry for your symlink--we just thought of it as a directory to traverse.\r\n\r\nI think your best bet is to exclude the symlink directory from the pattern and explicitly set up the symlink using `<Exec Command=\"ln -s ...\" />` in a custom target.",
        "createdAt": "2021-06-23T21:56:24Z",
        "updatedAt": "2021-06-23T21:56:24Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}