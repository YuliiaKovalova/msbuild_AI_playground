{
  "number": 11415,
  "title": "Improve MSBuild Performance by Adjusting CPU Priority",
  "body": "### Summary\n\nI frequently build, run, and rebuild an MVC application on Windows 11 using my office laptop. To improve build performance, I\u2019ve found that manually adjusting the CPU priority for MSBuild.exe to High (via Task Manager or PowerShell) significantly reduces build times.\n\nIs there a built-in way to configure MSBuild to always run with High CPU priority\u2014either globally, from within Visual Studio, or via an MSBuild setting?\n\nI currently use a PowerShell script to set MSBuild\u2019s priority to High:\n\n```\nwhile ($true) {\n    $processes = @(\n        'MSBuild',\n        'devenv',\n        'ServiceHub.Host.dotnet.x64',\n        'ServiceHub.RoslynCodeAnalysisService'\n    )\n    \nforeach ($processName in $processes) {\n        Get-Process $processName -ErrorAction SilentlyContinue | ForEach-Object {\n            $_. PriorityClass = 'High'\n        }\n    }\n    Start-Sleep -Seconds 5\n}\n```\n\n### Background and Motivation\n\nBuilding and rebuilding my MVC application frequently on Windows 11, I\u2019ve noticed that manually setting MSBuild.exe to High CPU priority significantly reduces build times.\n\n### Proposed Feature\n\nProvide a built-in option to configure MSBuild to always run with High CPU priority, either globally, within Visual Studio, or via an MSBuild setting.\n\n### Alternative Designs\n\nA possible alternative is using an external script (e.g., PowerShell) to adjust MSBuild's process priority each time it runs, but this is not as seamless as a built-in solution.",
  "state": "CLOSED",
  "createdAt": "2025-02-10T23:54:06Z",
  "updatedAt": "2025-02-11T23:04:33Z",
  "closedAt": "2025-02-11T15:32:47Z",
  "author": {
    "login": "RezaRahmatzadeh"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "comments": {
    "nodes": [
      {
        "body": "Hi @RezaRahmatzadeh,\n\nAfter the team triage, we agreed to close the ticket since it doesn't fit a general windows model for handling the priorities.\nWe would recommend you to run devenv.exe with bumped priority and all spawns processes would inherit it.",
        "createdAt": "2025-02-11T15:32:47Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "> Hi [@RezaRahmatzadeh](https://github.com/RezaRahmatzadeh),\n> \n> After the team triage, we agreed to close the ticket since it doesn't fit a general windows model for handling the priorities. We would recommend you to run devenv.exe with bumped priority and all spawns processes would inherit it.\n\nThanks for your suggestion @YuliiaKovalova , when I tried to set devenv.exe to high after that I realized msbuild is not getting high priority so I needed to set them to high separately, setting msbuild to high fasting build process very remarkable.\n\nThis matches my experience as well - MSBuild seems to set its own priority rather than inheriting from devenv.exe, which is why explicitly setting MSBuild to high priority gives such noticeable performance improvements during builds.",
        "createdAt": "2025-02-11T16:08:29Z",
        "author": {
          "login": "RezaRahmatzadeh"
        }
      },
      {
        "body": "> > Hi [@RezaRahmatzadeh](https://github.com/RezaRahmatzadeh),\n> > After the team triage, we agreed to close the ticket since it doesn't fit a general windows model for handling the priorities. We would recommend you to run devenv.exe with bumped priority and all spawns processes would inherit it.\n> \n> Thanks for your suggestion [@YuliiaKovalova](https://github.com/YuliiaKovalova) , when I tried to set devenv.exe to high after that I realized msbuild is not getting high priority so I needed to set them to high separately, setting msbuild to high fasting build process very remarkable.\n> \n> This matches my experience as well - MSBuild seems to set its own priority rather than inheriting from devenv.exe, which is why explicitly setting MSBuild to high priority gives such noticeable performance improvements during builds.\n\nlet's ask @rainersigwald if he knows why it could happen",
        "createdAt": "2025-02-11T16:14:38Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "<https://learn.microsoft.com/en-us/windows/win32/procthread/scheduling-priorities>:\n\n> If the calling process is IDLE_PRIORITY_CLASS or BELOW_NORMAL_PRIORITY_CLASS, the new process will inherit this class.\n\nThis seems to mean HIGH_PRIORITY_CLASS is not inherited by child processes.",
        "createdAt": "2025-02-11T20:04:56Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Huh, TIL!\n\nHowever, I don't expect to add this option--it doesn't reliably improve performance for builds when we've tried it in the past, and spawning a bunch of high-pri processes is a great way to make a machine feel laggy and unusable.",
        "createdAt": "2025-02-11T23:04:32Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}