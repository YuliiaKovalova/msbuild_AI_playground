{
  "number": 7676,
  "title": "How can we clear the caches of last build",
  "body": "I have a custom msbuild target which can generate some cs files  from `.cadl` files and the generated files will be added to the compiler so that it can be compiled.  But every time, the code generation will clear the last generated files, due to the compiler caches , if some generated files in last build were renamed or deleted in current build, the compiler will report \"some files not found\", how can we solve this issue ?\r\nI try to exclude the generated file before compiling , like `<Compile Remove=\"**/generated/**/*.cs\" />`, but seems does not work\r\n\r\nhere is my custom build target : https://github.com/jianyexi/adl/blob/f74e9be533bf08a36b0fd221f755343cccd64a36/packages/cadl-msbuild-target/build/Microsoft.Cadl.MSBuild.targets#L63",
  "state": "CLOSED",
  "createdAt": "2022-06-06T03:06:48Z",
  "updatedAt": "2022-10-27T16:42:44Z",
  "closedAt": "2022-10-27T16:42:44Z",
  "author": {
    "login": "jianyexi"
  },
  "labels": [
    "needs-more-info",
    "needs-triage",
    "author-responded",
    "needs-attention"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "In addition, we are using `<Project Sdk=\"Microsoft.NET.Sdk.Web\">` and custom build target",
        "createdAt": "2022-06-06T03:18:24Z",
        "updatedAt": "2022-06-06T14:50:54Z",
        "author": {
          "login": "jianyexi"
        }
      },
      {
        "body": "> I try to exclude the generated file before compiling , like <Compile Remove=\"**/generated/**/*.cs\" />\r\n\r\nWhat target (if any) are you hooking this Remove into?\r\n\r\nAlso, the link to your custom build target doesn't work.",
        "createdAt": "2022-06-09T16:48:57Z",
        "updatedAt": "2022-06-09T16:48:57Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> > I try to exclude the generated file before compiling , like\r\n> \r\n> What target (if any) are you hooking this Remove into?\r\n> \r\n> Also, the link to your custom build target doesn't work.\r\n\r\nthe target is before 'CoreCompile'\r\nI put it here:\r\n```\r\n<Target Name=\"CadlCompileCore\">\r\n    <ItemGroup>\r\n      <CadlCompile Remove=\"@(CadlCompile)\" Condition=\" '%(CadlCompile.Compile)' != 'true' \" />\r\n    </ItemGroup>\r\n\r\n    <CadlCompiler Condition=\" '$(Language)' == 'C#' and '@(CadlCompile)' != '' \"\r\n                  Imports=\"%(CadlCompile.Imports)\"\r\n                  CadlInputPaths=\"@(CadlCompile)\"\r\n                  CadlCompilerPath=\"%(CadlCompile.CadlCompilerPath)\"\r\n                  ToolPath=\"%(CadlCompile.CommandPath)\"\r\n                  OutputDir=\"%(CadlCompile.OutputDir)\"\r\n                  OS=\"$(OS)\"\r\n                  Options=\"%(CadlCompile.Options)\"\r\n                  Emitters=\"%(CadlCompile.Emitters)\" >\r\n      <Output TaskParameter=\"GeneratedFiles\" ItemName=\"_Cadl_GeneratedFiles\"/>\r\n    </CadlCompiler>\r\n    \r\n    <Message Text=\"cadl gernerated @(_Cadl_GeneratedFiles)\" Importance=\"high\"/>\r\n    <ItemGroup>\r\n      <Compile Remove=\"generated/**/*.cs\" />\r\n      <Compile Remove=\"@(_Cadl_GeneratedFiles)\" MatchOnMetadata=\"Identity\" MatchOnMetadataOptions=\"PathLike\" />\r\n      <Compile Include=\"@(_Cadl_GeneratedFiles)\"  Watch=\"false\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <!-- Do cadl compilation by default in a C# project. In other types, the user invoke\r\n       CadlCompile directly where required. -->\r\n  <Target Name=\"_CadlCompile_BeforeCsCompile\" BeforeTargets=\"CoreCompile\" DependsOnTargets=\"CadlCompileCore\" Condition=\" '$(Language)' == 'C#' \" />\r\n```",
        "createdAt": "2022-06-10T01:43:01Z",
        "updatedAt": "2022-06-10T01:43:01Z",
        "author": {
          "login": "jianyexi"
        }
      },
      {
        "body": "@jianyexi I think several of the problems you're encountering could be resolved by generating the files into a folder in the `obj` (`$(IntermediateOutputPath)`) directory, instead of next to the checked-in source. That is the standard approach for generated files.\r\n\r\nWhat's happening now is that at evaluation time, before your target runs, the SDK globs all `**/*.cs` files that exist on disk, including the ones from the last run. Then you generate more, but the `<Compile Remove` in your target globs only the ones that exist on disk _at that time_, so any generated files that you deleted in your code generator would not be on the list to be removed.",
        "createdAt": "2022-08-04T17:02:51Z",
        "updatedAt": "2022-08-04T17:02:51Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for the response, is there any way to just skip or change the step of 'including the ones from the last run' when evaluating ",
        "createdAt": "2022-08-05T09:39:47Z",
        "updatedAt": "2022-08-05T09:39:47Z",
        "author": {
          "login": "jianyexi"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.",
        "createdAt": "2022-09-05T00:03:00Z",
        "updatedAt": "2022-09-05T00:03:00Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "@jianyexi yes, via SDK properties you can change the files that are automatically discovered under the project; see [`DefaultItemExcludes`](https://docs.microsoft.com/dotnet/core/project-sdk/msbuild-props#defaultitemexcludes) for example.",
        "createdAt": "2022-09-08T16:17:27Z",
        "updatedAt": "2022-09-08T16:17:27Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Closing as resolved.",
        "createdAt": "2022-10-27T16:42:44Z",
        "updatedAt": "2022-10-27T16:42:44Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}