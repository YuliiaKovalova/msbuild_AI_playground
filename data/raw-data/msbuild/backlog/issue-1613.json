{
  "number": 1613,
  "title": "Import Project path when evaluated to more than 256 chars fails rather than skipping to import",
  "body": "For e.g. let's assume here is an import as below\r\n\r\n```xml\r\n<PackageName>ReallyLongString</PackageName>\r\n<Scope>Foo</Scope>\r\n<Import Project=\"$(LibrarySourceFolder)\\$(Scope)\\**\\*$(PackageName).nuget.proj\" Condition=\" '$(Scope)' != 'all' \" />\r\n```\r\n\r\nIf the entire path is less than 256 and unable to evaluate to a valid path, it skips to import.\r\nBut if the entire path exceeds 256, it errors out saying, cannot import and prints the unevaluated literal path.\r\n\r\nActual: Errors out and prints literal unevaluated path\r\nExpected: Skip importing project even if the path exceeds 256\r\nHave consistent behavior in both cases.",
  "state": "CLOSED",
  "createdAt": "2017-01-26T02:55:20Z",
  "updatedAt": "2024-02-21T17:22:33Z",
  "closedAt": "2020-02-10T21:52:41Z",
  "author": {
    "login": "shahabhijeet"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is a combination of #53 (\"`MAX_PATH` exists\") and #406 (\"wildcard expansion returns the input when a recursive glob exceeds `MAX_PATH`\").",
        "createdAt": "2017-01-26T17:49:58Z",
        "updatedAt": "2017-01-26T17:49:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Closing since we have those other two issues.",
        "createdAt": "2020-02-10T21:52:41Z",
        "updatedAt": "2020-02-10T21:52:41Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}