{
  "number": 4339,
  "title": "Struggled to get Preview4 building in AzDops",
  "body": "I have been asked to submit my issue here by @rainersigwald \r\n\r\nOriginal Tweet:  https://twitter.com/gregpakes/status/1122672235439804416\r\n\r\n## Background\r\n\r\nI am porting a **tiny** WCF application to Asp.Net Core 3.0 Preview 4.  After port, it is a a basic Asp.Net Core Web Api with a database project (sqlproj).  Here are the issues I encountered:\r\n\r\n- None of the happy path templates worked out of the box, due to the fact sqlproj is non-sdk project system.  So `dotnet build` doesn't work.    \r\n- I used the `UseDotNet@2` task to install .net core 3.0 preview.  That was fine.\r\n- `dotnet build` would then give me this error: \r\n\r\n```error MSB4019: The imported project \"/opt/hostedtoolcache/dncs/3.0.100-preview4-011223/x64/sdk/3.0.100-preview4-011223/Microsoft/VisualStudio/v11.0/SSDT/Microsoft.Data.Tools.Schema.SqlTasks.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.```\r\n\r\n- I then realised I had to use msbuild instead.  (probably me, but this really wasn't clear to me).\r\n- When I used the MSBuild task or the `Visual Studio Build Task`, I would get this error:\r\n\r\n```\r\nError : Unable to locate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.\r\n```\r\n\r\nand\r\n\r\n```\r\nError MSB4236: The SDK 'Microsoft.NET.Sdk.Web' specified could not be found.\r\n```\r\n\r\n- At this point, I got confused about nuget restore.  I wasn't sure if I should be using separate nuget task or `dotnet restore`.  Given I had a sqlproj file, the error messages were confusing.  `dotnet build` would give me this:\r\n\r\n```error : This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is ..\\packages\\MSTest.TestAdapter.2.0.0-beta4\\build\\net45\\MSTest.TestAdapter.props.```\r\n\r\n- However, when I used a seperate nuget restore (using 5.x), I would get this:\r\n\r\n```\r\n[command]C:\\hostedtoolcache\\windows\\NuGet\\5.0.0\\x64\\nuget.exe sources Add -NonInteractive -Name NuGetOrg -Source https://api.nuget.org/v3/index.json -ConfigFile d:\\a\\1\\Nuget\\tempNuGet_24152.config\r\nPackage source with Name: NuGetOrg added successfully.\r\n[command]C:\\hostedtoolcache\\windows\\NuGet\\5.0.0\\x64\\nuget.exe restore d:\\a\\1\\s\\iSAMS.Mobile.sln -Verbosity Detailed -NonInteractive -ConfigFile d:\\a\\1\\Nuget\\tempNuGet_24152.config\r\nd:\\a\\1\\s\\iSAMS.Mobile.Api\\iSAMS.Mobile.Api.csproj : error : Unable to locate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.\r\nNuGet Version: 5.0.0.5923\r\nd:\\a\\1\\s\\iSAMS.Mobile.Api\\iSAMS.Mobile.Api.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk.Web' specified could not be found.\r\nMSBuild auto-detection: using msbuild version '16.0.461.62831' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nd:\\a\\1\\s\\iSAMS.Mobile.Api.Tests\\iSAMS.Mobile.Api.Tests.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk.Web' specified could not be found.\r\nMSBuild P2P timeout [ms]: 120000\r\nd:\\a\\1\\s\\iSAMS.Mobile.Api.IntegrationTests\\iSAMS.Mobile.Api.IntegrationTests.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk.Web' specified could not be found.\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\VssAdministrator\\AppData\\Local\\Temp\\NuGetScratch\\o513ajfj.g4g.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\VssAdministrator\\AppData\\Local\\Temp\\NuGetScratch\\vhcrbbfv.v00.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"C:\\hostedtoolcache\\windows\\NuGet\\5.0.0\\x64\\nuget.exe\" /p:RestoreSolutionDirectory=\"d:\\a\\1\\s\\\\\" /p:RestoreConfigFile=\"d:\\a\\1\\Nuget\\tempNuGet_24152.config\" /p:SolutionDir=\"d:\\a\\1\\s\\\\\" /p:SolutionName=\"iSAMS.Mobile\"\r\nd:\\a\\1\\s\\iSAMS.Mobile.Legacy\\iSAMS.Mobile.Legacy.csproj : error : Unable to locate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.\r\nNuGet.CommandLine.ExitCodeException: Exception of type 'NuGet.CommandLine.ExitCodeException' was thrown.\r\nd:\\a\\1\\s\\iSAMS.Mobile.Legacy\\iSAMS.Mobile.Legacy.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n   at NuGet.CommandLine.MsBuildUtility.<GetProjectReferencesAsync>d__6.MoveNext()\r\n```\r\n\r\n- I eventually settled on using `dotnet restore` as the sqlproj has no dependencies.\r\n- Now back to the `Error MSB4236: The SDK 'Microsoft.NET.Sdk.Web' specified could not be found.` error.\r\n- I solved this by setting the Msbuild architecture to `x64`.  Now the error message was:\r\n\r\n```\r\nError NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0.\r\n```\r\n\r\n- I fixed this by specifying a global.json.  From what I was reading, I really had no idea whether global.json was required.  It works in VS without it, so I am still confused as to why i need it in the build.\r\n\r\nApologies for the long rambling post.  I'm sure a lot of this is due to my unfamiliarity with the new bits, but I was asked to post... so I hope it helps.",
  "state": "OPEN",
  "createdAt": "2019-04-29T22:28:55Z",
  "updatedAt": "2024-02-21T16:31:24Z",
  "closedAt": null,
  "author": {
    "login": "gregpakes"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "Thanks! Some of these things are expected behavior, but we could definitely do a better job of improving errors and user experience.\r\n\r\n1. `dotnet build` can't build `.sqlproj`, because the targets for doing so are distributed with VS instead of as an SDK or NuGet package.\r\n1. Non-prerelease versions of Visual Studio (and MSBuild.exe) don't find prerelease versions of the .NET Core SDK. (Maybe we could sidestep this when using [the Azure Pipelines .NET Core Tool Installer task](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/dotnet-core-tool-installer?view=azure-devops) somehow? The user explicitly opted in in that scenario)\r\n1. `dotnet restore` can only restore for the projects that it can understand.\r\n1. `nuget.exe restore` is subject to the same constraints as `msbuild.exe`.\r\n\r\nSome things surprise me and need further investigation:\r\n\r\n1. What's the difference between x86 and amd64 MSBuild finding the SDK? That shouldn't be relevant.\r\n1. Can we produce better errors or guiderails in any of these situations?\r\n\r\nfyi @kathleendollard -- here's a (bad) early-adopter scenario story.",
        "createdAt": "2019-04-29T23:18:07Z",
        "updatedAt": "2019-04-29T23:18:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald how many of these things are in process for resolution? Do some need to be handed off to other teams? ",
        "createdAt": "2019-06-06T23:19:11Z",
        "updatedAt": "2019-06-06T23:19:11Z",
        "author": {
          "login": "KathleenDollard"
        }
      },
      {
        "body": "This worked for me:\r\n`- task: DotNetCoreInstaller@0\r\n  displayName: 'Install .net core 3.0 (preview)'\r\n  inputs:\r\n    packageType: 'sdk'\r\n    version: '3.0.100-preview6-012264'\r\n    includePreviewVersions: true\r\n    installationPath: $(Agent.ToolsDirectory)/dotnet\r\n\r\n- task: NuGetToolInstaller@0\r\n\r\n- task: NuGetCommand@2\r\n  inputs:\r\n    restoreSolution: '$(solution)'\r\n    \r\n- task: VSBuild@1\r\n  inputs:\r\n    solution: '$(solution)'\r\n    vsVersion: '16.0' \r\n    msbuildArchitecture: 'x64'\r\n    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation=\"$(build.artifactStagingDirectory)\\WebApp.zip\" /p:DeployIisAppPath=\"Default Web Site\"'\r\n    platform: '$(buildPlatform)'\r\n    configuration: '$(buildConfiguration)'`\r\n\r\nand the global.json \r\n\r\n`{\r\n  \"sdk\": {\r\n    \"version\": \"3.0.100-preview6-012264\"\r\n  }\r\n}`",
        "createdAt": "2019-06-16T10:55:03Z",
        "updatedAt": "2019-06-16T10:55:03Z",
        "author": {
          "login": "netcorefactory"
        }
      }
    ]
  }
}