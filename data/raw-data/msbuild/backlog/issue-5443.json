{
  "number": 5443,
  "title": "Consider disabling compression of target results",
  "body": "The code in `TargetResults.CompressItems()` and `TargetResults.DecompressItems()` may be hurting performance rather than helping. On the compression side we translate all task items into a `MemoryStream`, convert the stream to a `byte` array, then compress the `byte` array using a `DeflateStream`, then convert this stream to a `byte` array to finally subject it to the rest of the serialization logic to send it cross process. Similarly on the receiving side, we make a bunch of allocations and burn CPU to get to the original decompressed items. It's very likely that it would be faster and less memory intensive to simply send the uncompressed items.\r\n\r\nWe should:\r\n- Measure the performance impact of compression with a microbenchmark.\r\n- Remove it if it doesn't prove helpful.",
  "state": "CLOSED",
  "createdAt": "2020-06-17T23:44:10Z",
  "updatedAt": "2024-02-21T17:03:25Z",
  "closedAt": "2020-08-12T19:19:56Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "ostorc"
      }
    ]
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "I have seen MSBuild fail with this exception a couple of times. It is possible that the code in question also has a bug, which would be another reason to get rid of it \ud83d\ude09 \r\n\r\n![image](https://user-images.githubusercontent.com/12206368/84961767-67a46000-b105-11ea-95ca-451bba07a0b5.png)\r\n",
        "createdAt": "2020-06-17T23:49:35Z",
        "updatedAt": "2020-06-17T23:49:35Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "I've only ever seen that exception in internal scenarios that use the unsupported `DEVPATH` .NET runtime feature. Have you seen it outside of razzle/corext?\r\n\r\nThis is not an objection to deleting the code!",
        "createdAt": "2020-06-23T20:48:25Z",
        "updatedAt": "2020-06-23T20:48:25Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "It was indeed in razzle, apologies for blaming it on the code. Out of curiosity, is it understood how `DEVPATH` leads to this exception?",
        "createdAt": "2020-06-23T21:11:51Z",
        "updatedAt": "2020-06-23T21:11:51Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "I have tried to measure the impact of disabling of the compression. Benchmark was run 100 times for each group\r\n```\r\nCOMPRESSION - 100 items\r\n---------\r\nAVG: 17.8602 ms\r\n\r\nCOMPRESSION - 1000 items\r\n---------\r\nAVG: 22.7986 ms\r\n\r\nCOMPRESSION - 10000 items\r\n---------\r\nAVG: 47.2003 ms\r\n\r\nNO COMPRESSION - 100 items\r\n---------\r\nAVG: 15.6751 ms\r\n\r\nNO COMPRESSION - 1000 items\r\n---------\r\nAVG: 19.1399 ms\r\n\r\nNO COMPRESSION - 10000 items\r\n---------\r\nAVG: 51.6685 ms\r\n```\r\nMy testing target was simple task which put on output all items from one folder.\r\nAs you can see, the compression starts to reduce time around 10k items, but I haven't seen any project which would have so many items on output to other process (although my experience in this is rather shallow). Most of the projects have only one or two items on output (I have tried for example OrchardCore). So I think it makes sense to remove the code. What do you think @rainersigwald?",
        "createdAt": "2020-07-09T16:10:29Z",
        "updatedAt": "2020-07-09T16:20:43Z",
        "author": {
          "login": "ostorc"
        }
      },
      {
        "body": "Those numbers look convincing to me. While there's nothing _preventing_ extremely large results I agree that the common case is tiny and much more interesting than the extreme. Let's do it!",
        "createdAt": "2020-07-09T21:53:30Z",
        "updatedAt": "2020-07-09T21:53:30Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}