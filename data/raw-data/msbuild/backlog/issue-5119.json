{
  "number": 5119,
  "title": "Question about how tool package variables work when referenced by a project",
  "body": "### Question\r\nIf I have a package with a `tools` folder, lets call it `SomeTool.nupkg`, that gets referenced by a project called `Proj1.csproj` this will create a variable in `Proj1.csproj.nuget.g.props` called `PkgSomeTool`. \r\n\r\nMy question is: Is it possible to also create a `SomeTool.props` and `SomeTool.targets` in `SomeTool.nupkg` that can reference the `PkgSomeTool` variable? Something like...\r\n\r\nSomeTool.nuspec file\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<package >\r\n  <metadata>\r\n    ...\r\n  </metadata>\r\n  <files>\r\n    <file src=\"bin/Release/netcoreapp3.0/**\" target=\"tools\" />\r\n    <file src=\"SomeTool.props\" target=\"build\" />\r\n    <file src=\"SomeTool.targets\" target=\"build\" />\r\n  </files>\r\n</package>\r\n```\r\nSomeTool.props file\r\n```xml\r\n<Project>\r\n    <PropertyGroup>\r\n        <MyTool>$(PkgSomeTool)/tools/SomeTool.dll</MyTool>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\nSomeTool.targets file\r\n```xml\r\n<Project>\r\n    <Target Name=\"BeforeBuild\">\r\n        <Exec Command=\"dotnet $(MyTool)\" />\r\n    </Target>\r\n</Project>\r\n```\r\n### Actual\r\nThe command that runs during build is `dotnet /tools/SomeTool.dll`. \r\nOn the other hand, if the package only contains the `tools` folder, and I add \r\n```xml\r\n<PropertyGroup>\r\n  <MyTool>$(PkgSomeTool)/tools/SomeTool.dll</MyTool>\r\n  <PreBuildEvent>$(MyTool)</PreBuildEvent>\r\n</PropertyGroup>\r\n```\r\nto `Proj1.csproj`, the build works because `MyTool` has the full path.\r\n\r\nThanks for any help on this.\r\n",
  "state": "CLOSED",
  "createdAt": "2020-02-12T15:55:19Z",
  "updatedAt": "2024-02-21T17:05:03Z",
  "closedAt": "2020-02-18T13:17:02Z",
  "author": {
    "login": "eddie-jb"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "The usual approach to this is to anchor paths in your NuGet package payload with `$(MSBuildThisFileDirectory)` or similar. You can combine that with `..` to get full paths to files in the package.",
        "createdAt": "2020-02-14T23:16:50Z",
        "updatedAt": "2020-02-14T23:16:50Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "...Well that was easy, thanks \ud83d\udc4d",
        "createdAt": "2020-02-18T13:17:02Z",
        "updatedAt": "2020-02-18T13:17:02Z",
        "author": {
          "login": "eddie-jb"
        }
      }
    ]
  }
}