{
  "number": 7648,
  "title": "ARM64 As A Valid PlatformTarget When Targeting not-net481",
  "body": "Referenced comment in previous thread at https://github.com/dotnet/winforms-designer/pull/4303\r\n\r\n```\r\n// No target framework version restriction for buildPlatform x86 and amd64 as server process will run in\r\n// emulation mode.\r\n// But an arm64 .NET Framework process can only load version 4.8.1.\r\n```\r\n> On one hand I agree that this is true; logically you must target `net481` in order to validly have `<PlatformTarget>ARM64</PlatformTarget>`. On the other hand though MSBuild / .NET SDK will successfully build binaries when you target `net472`. Evidence being here: https://github.com/dotnet/roslyn/blob/main/src/Compilers/CSharp/csc-arm64/csc-arm64.csproj#L8-L11\r\n@rainersigwald  FYI, not sure if this is something we should consider warning on or highlighting. It's a subtle mistake I made and didn't even realize it.\r\n_Originally posted by @jaredpar in https://github.com/dotnet/winforms-designer/pull/4303#discussion_r876328399_",
  "state": "CLOSED",
  "createdAt": "2022-05-23T21:08:41Z",
  "updatedAt": "2024-02-21T17:00:27Z",
  "closedAt": "2022-05-25T17:47:48Z",
  "author": {
    "login": "benvillalobos"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "One issue though is that it's hard to build `net481`  compared to `net472`. As an example took a project currently building against `net472`, flipped it to `net481` and ended up with the following: \r\n\r\n> C:\\Program Files\\dotnet\\sdk\\7.0.100-preview.4.22252.9\\Microsoft.Common.CurrentVersion.targets(1221,5): error MSB3644: The reference assemblies for .NETFramework,Ver   \r\nsion=v4.8.1 were not found. To resolve this, install the Developer Pack (SDK/Targeting Pack) for this framework version or retarget your application. You can downlo   \r\nad .NET Framework Developer Packs at https://aka.ms/msbuild/developerpacks [C:\\Users\\jaredpar\\code\\roslyn\\src\\Compilers\\CSharp\\csc-arm64\\csc-arm64.csproj]\r\n\r\nThink we'd likely want to correct that before implementing the warning. ",
        "createdAt": "2022-05-23T21:30:50Z",
        "updatedAt": "2022-05-23T21:30:50Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "> Think we'd likely want to correct that before implementing the warning.\r\n\r\nRight, this is blocked on 481 availability.",
        "createdAt": "2022-05-23T22:38:07Z",
        "updatedAt": "2022-05-23T22:38:07Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Do we have an issue tracking that? I'm not even sure where that part of the stack ends up coming from. ",
        "createdAt": "2022-05-23T22:40:07Z",
        "updatedAt": "2022-05-23T22:40:07Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "@jaredpar oh interesting, I figured this was a generic `<Error` task in common.currentversion targets. Turns out it's coming from `GetReferenceAssemblyPaths`, which we own.\r\n\r\nEdit: \r\n> Do we have an issue tracking that?\r\n\r\nWhat's the issue with the message there? If 481 is available then it'd show up in the list at the link",
        "createdAt": "2022-05-23T22:51:59Z",
        "updatedAt": "2022-05-23T22:53:28Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Decided internally to close this.",
        "createdAt": "2022-05-25T17:47:48Z",
        "updatedAt": "2022-05-25T17:47:48Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}