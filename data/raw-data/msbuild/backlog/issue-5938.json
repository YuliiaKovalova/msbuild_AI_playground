{
  "number": 5938,
  "title": "CA0063 and CA0064 suddenly error instead of warning in 16.8",
  "body": "### Issue Description\r\nAfter installing .NET 5 on our build servers, we noticed that CA0063 and CA0064 suddenly changed from warning to error, making it a breaking change.\r\nThe .NET 5 installer replaced MSBuild 16.X with 16.8.\r\n\r\nThis also happens if a developer updates visual studio 2019 with the installer to the newest version.\r\n\r\n### Steps to Reproduce\r\nCreate a .csproj with code analysis enabled, but with a missing ruleset file.\r\n```\r\n    <RunCodeAnalysis>true</RunCodeAnalysis>\r\n    <CodeAnalysisRuleSet>..\\..\\build\\CodeAnalysis.ruleset</CodeAnalysisRuleSet>\r\n```\r\n\r\n### Expected Behavior\r\nCA0063 and CA0064 are warnings, as they were in 16.7 and below.\r\n\r\n### Actual Behavior\r\nCA0063 and CA0064 are errors in 16.8.\r\n\r\n\r\n### Analysis\r\n\r\n### Versions & Configurations\r\nMicrosoft (R)-Build-Engine, Version 16.8.2+25e4d540b\r\n\r\n### Attach a binlog\r\n",
  "state": "CLOSED",
  "createdAt": "2020-12-07T10:37:47Z",
  "updatedAt": "2020-12-10T19:37:23Z",
  "closedAt": "2020-12-10T19:37:23Z",
  "author": {
    "login": "acuntex"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@mavasani can you help us route this?",
        "createdAt": "2020-12-09T17:01:01Z",
        "updatedAt": "2020-12-09T17:01:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This is duplicate of https://developercommunity2.visualstudio.com/t/After-168-update-getting-lot-of-code-an/1251574?preview=true. Please see the [solution](https://developercommunity2.visualstudio.com/t/After-168-update-getting-lot-of-code-an/1251574?preview=true#T-N1255914) for workaround in 16.8. Customer should also consider moving away from legacy code analysis, i.e. remove `<RunCodeAnalysis>true</RunCodeAnalysis>` or set it to false.",
        "createdAt": "2020-12-09T17:22:21Z",
        "updatedAt": "2020-12-09T17:22:21Z",
        "author": {
          "login": "mavasani"
        }
      },
      {
        "body": "@mavasani That bug seems to be something completely different.\r\n\r\nThe problem is that two codes (CA0063 and CA0064) were previously (< 16.7) warnings, and are suddenly now (16.8) a hard error.\r\n\r\nThis means that a breaking change occurred within a major version. Once a developer clicks on \"Update\" in Visual Studio or something like .NET 5 gets installed on a build server, the project can't be built anymore because of this breaking change.",
        "createdAt": "2020-12-09T17:57:40Z",
        "updatedAt": "2020-12-09T18:08:04Z",
        "author": {
          "login": "acuntex"
        }
      },
      {
        "body": "> That bug seems to be something completely different.\r\n\r\n@acuntex Two things to point out:\r\n1. `<RunCodeAnalysis>true</RunCodeAnalysis>` is triggering [legacy code analysis](https://docs.microsoft.com/visualstudio/code-quality/migrate-from-legacy-analysis-to-net-analyzers), which has been deprecated for more than a year now. It will be removed from VS with next major release of VS, and we have been asking customers to move off it as soon as they can.\r\n1. The feedback ticket cited above is the same issue as this - All CA warnings coming from legacy code analysis are escalated errors in 16.8, they used to be reported as warnings by default in 16.7. This is a known regression in 16.8, which has been fixed in 16.9, but did not meet the 16.8 servicing bar as the regression is in a legacy, deprecated feature with a simple workaround.",
        "createdAt": "2020-12-09T18:02:33Z",
        "updatedAt": "2020-12-09T18:02:33Z",
        "author": {
          "login": "mavasani"
        }
      },
      {
        "body": "Yes, you can remove this flag easily, which we already did for our main branch.\r\n\r\nBut if you support fixing older versions, you now have to either do back ports this fix for all old versions or you have to provide separate build machines that have an older version of MSBuild (e.g. MSBuild 16.7) installed.\r\n\r\nIf it was a major version breaking change, there would be still a possibility do have the old version installed.\r\n\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin\\MSBuild.exe\t<-- Current Version (Either 16.7 or 16.8, but not both)\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\15.0\\Bin\\MSBuild.exe\t<-- Older 15.0 Version\r\n\r\nEdit: I'm sure there is a way to install an old version (e.g. 16.7) of the MSBuild Tools, but there does not seem to be an obvious one, because the installer always downloads the newest.",
        "createdAt": "2020-12-09T18:07:35Z",
        "updatedAt": "2020-12-09T18:30:19Z",
        "author": {
          "login": "acuntex"
        }
      },
      {
        "body": "Closing:\r\n\r\n> This is duplicate of https://developercommunity2.visualstudio.com/t/After-168-update-getting-lot-of-code-an/1251574?preview=true.",
        "createdAt": "2020-12-10T19:37:23Z",
        "updatedAt": "2020-12-10T19:37:23Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}