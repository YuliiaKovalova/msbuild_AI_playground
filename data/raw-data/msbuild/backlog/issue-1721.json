{
  "number": 1721,
  "title": "Directory.build.targets not imported when cross-targeting",
  "body": "Microsoft.Common.CrossTargeting.targets doesn't import these. As a result properties and tasks defined in Directory.build.props, Directory.build.targets are not available in the outer build.\r\n\r\nRepro:\r\n\r\n1) Create a .NET Core Library with project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp1.0;net46</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n2) Add Directory.Build.targets next to the .csproj file:\r\n\r\n```xml\r\n<Project>  \r\n  <Target Name=\"MyTarget\">\r\n    <Error Text=\"Boom!\"/>\r\n  </Target>\r\n</Project>\r\n```\r\n\r\n3) Run\r\n```\r\n> msbuild /t:Restore ClassLibrary.csproj\r\n...\r\n> msbuild /t:MyTarget ClassLibrary.csproj\r\nProject \"ClassLibrary.csproj\" on node 1 (MyTarget target(s)).\r\nClassLibrary.csproj : error MSB4057: The target \"MyTarget\" does not exist in the project.\r\nDone Building Project \"ClassLibrary.csproj\" (MyTarget target(s)) -- FAILED.\r\n```\r\n\r\nIf the project targets a single framework like so:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nThe target is invoked as expected:\r\n\r\n```\r\nProject \"ClassLibrary.csproj\" on node 1 (MyTarget target(s)).\r\nDirectory.Build.targets(7,5): error : Boom!\r\n```\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2017-02-17T02:07:53Z",
  "updatedAt": "2024-02-21T17:21:44Z",
  "closedAt": "2017-02-22T20:28:15Z",
  "author": {
    "login": "tmat"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "@srivatsn FYI",
        "createdAt": "2017-02-17T02:08:18Z",
        "updatedAt": "2017-02-17T02:08:18Z",
        "author": {
          "login": "tmat"
        }
      },
      {
        "body": "Nevermind I repro'd this incorrectly.  You are correct, the outer build does not import `Microsoft.Common.targets`.  @nguerrera is there a reason that `Microsoft.Common.CrossTargeting.targets` does not import `Microsoft.Common.targets`?  I see it imports project extensions but since it probably should be importing directory targets like this: https://github.com/Microsoft/msbuild/blob/xplat/src/Tasks/Microsoft.Common.targets#L137\r\n\r\n",
        "createdAt": "2017-02-17T03:11:35Z",
        "updatedAt": "2017-02-17T03:11:35Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "We don't import common targets by design because there are a lot of assumptions in it that don't hold for outer build. It is not really possible to give meaningful semantics to every target in common targets in the outer context.\r\n\r\nThat said, not importing Directory.* is an oversight. We may want to introduce Directory.CrossTargeting.targets so that we can support the scenario in a non breaking way. This would be consistent with nuget model where separate files are used to augment inner and outer build.",
        "createdAt": "2017-02-17T03:55:44Z",
        "updatedAt": "2017-02-17T03:55:44Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "Do we really need a separate file? The detection whether the current build is inner or outer is simple, if anyone needs to distinguish in the file.",
        "createdAt": "2017-02-17T05:55:07Z",
        "updatedAt": "2017-02-17T05:55:28Z",
        "author": {
          "login": "tmat"
        }
      },
      {
        "body": "I agree with @tmat, we should just import `Directory.Build.targets`.  `Directory.Build.props` is already being imported by the outer build so I think it would be confusing that there needs to be a separate targets file.  The `IsCrossTargetingBuild` property gives target authors enough control over what they wanted declared.\r\n\r\nCC @AndyGerlicher ",
        "createdAt": "2017-02-17T14:49:03Z",
        "updatedAt": "2017-02-17T14:49:03Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "If we use only one file, this would be a breaking change so we need to decide that we're prepared to make it or push to get it in right now.\r\n\r\nI'm not near a dev setup right now, but I would think that Directory.Build.props is already imported. If so, this can be used to hack a workaround: Set CustomAfterMicrosoftCommonCrossTargetingTargets to Directory.Build.targets in Directory.Build.props. However, those CustomXxx points are perilous, because they suffer from the \"What if two components do this?\" problem.",
        "createdAt": "2017-02-17T17:28:33Z",
        "updatedAt": "2017-02-17T17:31:09Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "`Directory.Build.props` is imported at the moment which is why I think it makes sense that `Directory.Build.targets` should be too.  Can you explain why this would be a breaking change to import the targets file?  Since the functionality is new to MSBuild 15, I assume it would be safe.",
        "createdAt": "2017-02-17T17:32:24Z",
        "updatedAt": "2017-02-17T17:32:24Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "I mean it's breaking if we ship MSBuild 15 like it is now and then start importing it in MSBuild 16.",
        "createdAt": "2017-02-17T17:33:22Z",
        "updatedAt": "2017-02-17T17:33:22Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "Consider a common case: AfterTargets=\"Build\", this would run only in inner build today, but start to run in both after change.",
        "createdAt": "2017-02-17T17:35:10Z",
        "updatedAt": "2017-02-17T17:35:10Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "Ah I see, I misunderstood.  So you're saying if we don't fix it for RTM, then we'll need a new file for future releases....",
        "createdAt": "2017-02-17T17:36:57Z",
        "updatedAt": "2017-02-17T17:36:57Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Or maybe honor a safe opt-in from Directory.Build.props:  `<ImportDirectoryTargetsForCrossTargeting>true</ImportDirectoryTargetsForCrossTargeting>`\r\n\r\nOr have the courage and permission to break.",
        "createdAt": "2017-02-17T17:39:12Z",
        "updatedAt": "2017-02-17T17:39:12Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "We should at least talk about it (bar check it as potentially now-or-never) in ship room. Just fixing it will simplify things for the long haul.",
        "createdAt": "2017-02-17T17:43:23Z",
        "updatedAt": "2017-02-17T17:43:23Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "I did more experiments and it _seems_ like Directory.build.props is imported but Directory.build.targets isn't. Odd.",
        "createdAt": "2017-02-17T18:39:12Z",
        "updatedAt": "2017-02-17T18:39:12Z",
        "author": {
          "login": "tmat"
        }
      },
      {
        "body": "We're going to bar check this with management to see what they think.  The change is a copy/paste from one file to another so the risk is very low but it might be too late.",
        "createdAt": "2017-02-17T18:56:53Z",
        "updatedAt": "2017-02-17T18:56:53Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "FYI this will have to be in a future update. It won't be in VS2017 RTW.",
        "createdAt": "2017-02-17T22:42:21Z",
        "updatedAt": "2017-02-17T22:42:21Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Hi. What's the state of this issue?\r\nWill this Directory.Build.targets be imported in some future release?",
        "createdAt": "2017-04-17T07:03:34Z",
        "updatedAt": "2017-04-17T07:03:34Z",
        "author": {
          "login": "JunielKatarn"
        }
      },
      {
        "body": "@JunielKatarn looks like the changes from #1722 are available in our latest packages (I checked [Microsoft.Build.Runtime 15.2.0-preview-000103-02](https://dotnet.myget.org/feed/msbuild/package/nuget/Microsoft.Build.Runtime/15.2.0-preview-000103-02), but not yet pulled into the CLI or VS builds. I believe this will go out with the 15.3 update.",
        "createdAt": "2017-04-17T15:44:44Z",
        "updatedAt": "2017-04-17T15:44:44Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald thanks!\r\nHowever, I somehow made it work.\r\nI can confirm that as of `dotnet` version `1.0.1`, I am able to implicitly import `Directory.Build.targets`.\r\n\r\nI think this use case is worth a short sample in the official docs. Is there a way to contribute to them?",
        "createdAt": "2017-04-17T18:01:24Z",
        "updatedAt": "2017-04-17T18:01:24Z",
        "author": {
          "login": "JunielKatarn"
        }
      }
    ]
  }
}