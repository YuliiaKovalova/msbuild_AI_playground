{
  "number": 4069,
  "title": "RoslynCodeTaskFactory cannot find compiler in VS2019",
  "body": "### Steps to reproduce\r\nJust follow the default doc instructions at https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2017#hello-world\r\n\r\n### Expected  behavior\r\nCompiles\r\n\r\n### Actual behavior\r\n`error MSB4175: The task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\Program\r\n Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\bin\\Microsoft.Build.Tasks.Core.dll\". The task factory must return a value for the \"TaskType\" property`\r\n\r\n### Environment data\r\n`msbuild /version` output: 16.0.218.25180\r\n\r\nOS info:\r\nWindows 10 Insider Pro 18312.1001\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\nBoth VS2017(15.9.5) and 2019(Preview 1.1) are installed.\r\n\r\nAfter investigating code, https://github.com/Microsoft/msbuild/tree/99997527ab8314a9f305701af7efb40a228ff3d2/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactoryCompilers.cs#L26-L38 , `RoslynCodeTaskFactory` attempts to find a `Roslyn` directory siding to `MSBuild.exe`. It exists for VS2017, but doesn't exist for VS2019.\r\n\r\n![image](https://user-images.githubusercontent.com/5644458/51089079-271f1500-17a2-11e9-995e-11916ef0d25a.png)\r\n![image](https://user-images.githubusercontent.com/5644458/51089084-3736f480-17a2-11e9-9520-eca645df2a17.png)\r\n",
  "state": "CLOSED",
  "createdAt": "2019-01-13T18:15:44Z",
  "updatedAt": "2024-02-21T17:09:44Z",
  "closedAt": "2019-02-08T13:01:58Z",
  "author": {
    "login": "huoyaoyuan"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "This seems like fallout from the move to the Current version scheme and the fact that roslyn hasn't moved its assemblies.",
        "createdAt": "2019-01-14T01:24:28Z",
        "updatedAt": "2019-01-14T01:24:28Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "The (original) plan was to move Roslyn, in which case we won't have to make any changes in MSBuild. We should follow up with them to make sure that's still the plan.",
        "createdAt": "2019-01-14T18:41:54Z",
        "updatedAt": "2019-01-14T18:41:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We are noticing a similar issue attempting to determine where `csc.exe` is by using `MSBuildBinPath` to locate the `Roslyn` folder and then subsequently `csc.exe`. Do we know if this will be fixed for Dev16 or do I need to find another way to locate `csc.exe` in my target?",
        "createdAt": "2019-01-16T21:54:15Z",
        "updatedAt": "2019-01-16T21:54:15Z",
        "author": {
          "login": "pieandcakes"
        }
      },
      {
        "body": "This is fixed in to-be-released-in-preview4 internal VS builds now, with https://github.com/dotnet/roslyn/pull/33114 and the corresponding #4138. Thanks for the reports!\r\n\r\n@pieandcakes that fix moves `csc.exe` to the same relative position from `MSBuildBinPath` that it had in dev15, so your stuff should start working again too.",
        "createdAt": "2019-02-08T13:01:57Z",
        "updatedAt": "2019-02-08T13:01:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Thanks. I added a variable for the Roslyn tools location to unblock me. Should i remove it now or rely on that location going forward?",
        "createdAt": "2019-02-08T19:21:45Z",
        "updatedAt": "2019-02-08T19:21:45Z",
        "author": {
          "login": "pieandcakes"
        }
      },
      {
        "body": "I don't think we _plan_ to move it again, but it'll be a little while before p4 is easily available . . .",
        "createdAt": "2019-02-08T21:37:20Z",
        "updatedAt": "2019-02-08T21:37:20Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}