{
  "number": 5810,
  "title": "The XslTransformation task is unable to transform XML files containing DTD",
  "body": "### Issue Description\r\nAttempting to transform an XML file that begins with a [Document Type Definition (DTD)](https://en.wikipedia.org/wiki/Document_type_definition) using MSBuild's `XslTransformation` task results in the following error message:\r\n\r\n```\r\nerror MSB3703: Unable to execute transformation. For security reasons DTD is prohibited in this XML document. To enable DTD processing set the DtdProcessing property on XmlReaderSettings to Parse and pass the settings into XmlReader.Create method.\r\n```\r\n\r\n### Steps to Reproduce\r\nRun the following sample project using MSBuild in order to get the above mentioned error message:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Target Name=\"Build\">\r\n    <PropertyGroup>\r\n      <XmlContent>\r\n        &lt;!DOCTYPE note SYSTEM &quot;Note.dtd&quot;&gt;\r\n        &lt;Repro&gt;\r\n          &lt;Bug /&gt;\r\n        &lt;/Repro&gt;\r\n      </XmlContent>\r\n      <XslContent>\r\n        &lt;xsl:stylesheet xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; version=&quot;1.0&quot;&gt;\r\n          &lt;xsl:output method=&quot;xml&quot; indent=&quot;yes&quot; /&gt;\r\n          &lt;xsl:template match=&quot;@*|node()&quot;&gt;\r\n            &lt;xsl:copy&gt;\r\n              &lt;xsl:apply-templates select=&quot;@*|node()&quot; /&gt;\r\n            &lt;/xsl:copy&gt;\r\n          &lt;/xsl:template&gt;\r\n          &lt;xsl:template match=&quot;/Repro/Bug&quot;&gt;\r\n            &lt;Fix /&gt;\r\n          &lt;/xsl:template&gt;\r\n        &lt;/xsl:stylesheet&gt;\r\n      </XslContent>\r\n      <OutputFile>output.xml</OutputFile>\r\n    </PropertyGroup>\r\n    <XslTransformation XmlContent=\"$(XmlContent)\" XslContent=\"$(XslContent)\" OutputPaths=\"$(OutputFile)\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nDeleting the line `&lt;!DOCTYPE note SYSTEM &quot;Note.dtd&quot;&gt;` results in a proper transformation.\r\n\r\n### Analysis\r\nLine 222 of the `XslTransformation` [source code](https://github.com/dotnet/msbuild/blob/master/src/Tasks/XslTransformation.cs#L222) sets the `DtdProcessing` property of the `XmlReaderSettings` object that is used to `DtdProcessing.Ignore`. This prevents XML files containing DTDs from being transformed. To be able to transform such files the property would need to be set to `DtdProcessing.Parse`.\r\n\r\n.NET offers this property to prevent denial of service attacks (see [here](https://en.wikipedia.org/wiki/Document_type_definition#Security) for more info). However, I'm not sure whether that would be an issue in an MSBuild task. If so, it would make sense to expose a property that changes the value of the `DtdProcessing` property.\r\n\r\nNot being able to transform DTD containing XML files is just cumbersome. You'd need to remove all DTD lines before the transformation and insert them again afterwards.",
  "state": "OPEN",
  "createdAt": "2020-10-19T17:29:02Z",
  "updatedAt": "2024-01-31T08:22:53Z",
  "closedAt": null,
  "author": {
    "login": "ackh"
  },
  "labels": [
    "bug",
    "needs-design",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: We're not sure we want to take a fix on this, as it's a security issue. Note that the [docs on XmlReaderSettings.DtdProcessing](https://docs.microsoft.com/dotnet/api/system.xml.xmlreadersettings.dtdprocessing) state that the default should be `Prohibit` anyway.\r\n\r\nRelated issue: http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/1043311",
        "createdAt": "2020-10-21T23:16:13Z",
        "updatedAt": "2020-10-21T23:16:13Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I don't have access to [http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/1043311](http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/1043311) so I don't know about its content. However, here's my general view regarding that topic:\r\n\r\nMSBuild tasks are to the design of build processes what .NET (or any other technology) APIs are to the design of software systems. If the .NET framework is improperly used, you can end up with nasty security problems and a whole array of other issues. But if you'd lock down the .NET framework in order to prevent certain things from being done you'd severely limit its usefulness.\r\n\r\nThe same applies to MSBuild tasks. If used improperly, you can create lots of problems as well. Use the `Delete` task improperly and you might end up reinstalling the operating system. Lock them down too much and they become impractical to solve anything else than the narrow happy case. People will turn away from them and use other means to get the job done. Other means that might even be more problematic. security-wise.\r\n\r\nSo, I think the MSBuild tasks should strive to be simple and secure to use BUT at the same time be flexible and powerful enough to \r\nsolve more than just happy cases. I opened this issue because in the Apple eco system, property list files (plist) are riddled with DTD and I had to turn to other means because MSBuild's XML manipulation tasks made me surrender and walk away to find other approaches.\r\n\r\nCurrently, there are three tasks shipped together with MSBuild that are designed to manipulate XML. These task behave differently in terms of DTD:\r\n\r\n1. [XmlPeek](https://github.com/dotnet/msbuild/blob/master/src/Tasks/XmlPeek.cs): Contains a `bool` property named `ProhibitDtd` which was discussed [here](https://github.com/dotnet/msbuild/pull/2794).\r\n2. [XmlPoke](https://github.com/dotnet/msbuild/blob/master/src/Tasks/XmlPoke.cs): Internally sets `DtdProcessing.Ignore` which means it simply strips out DTD when writing the modified file. I have opened a bug report regarding this [here](https://github.com/dotnet/msbuild/issues/5815).\r\n3. [XslTransformation](https://github.com/dotnet/msbuild/blob/master/src/Tasks/XslTransformation.cs): Also sets `DtdProcessing.Ignore` internally which leads to the issue reported above.\r\n\r\nSo, `XmlPoke` and `XslTransformation` ignore DTD which makes them useless when having to deal with DTD containing XML files while `XmlPeek` can be configured to work with DTD.\r\n\r\nI think a better approach would be to change all three tasks to prohibit DTD by default which would make them save to use by default. However, all three tasks should then be equipped with a property that would enable DTD. That would make them capable of dealing with more than just the happy case. From my perspective, that would be a good trade-off between ease-of-use and security.\r\n\r\nSo, I would add the `ProhibitDtd` `bool` property already available in `XmlPeek` to both `XmlPoke` and `XslTransformation`. Internally, the default should be `DtdProcessing.Prohibit` as you already pointed out [here](https://github.com/dotnet/msbuild/issues/5817). Enabling the property should change it to `DtdProcessing.Parse` for both `XmlPoke` and `XslTransformation` while leaving it at `DtdProcessing.Ignore` would be fine for `XmlPeek`. However, it could also be changed to `DtdProcessing.Prohibit` for `XmlPeek` but that would be a breaking change, I guess.\r\n\r\nNote that the part of the argumentation for introducing that property on `XmlPeek` was\r\n> The security settings should be OK to turn off since you should only open project files from a trusted source anyway\r\n\r\n(see [here](https://github.com/dotnet/msbuild/issues/2141)).\r\n\r\nThe argument above contains a valid point from my perspective. Security is a concern but shielding the tasks with a property would properly address that concern from my perspective.",
        "createdAt": "2020-10-22T14:58:12Z",
        "updatedAt": "2020-10-22T15:05:22Z",
        "author": {
          "login": "ackh"
        }
      },
      {
        "body": "Just a heads up, this is still being discussed internally.",
        "createdAt": "2020-11-04T19:34:01Z",
        "updatedAt": "2020-11-04T19:34:01Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}