{
  "number": 9336,
  "title": "Consider reducing ETW events",
  "body": "During investigation of graph build I have find out that we might be tracing too many ETW events.\r\n\r\nI believe that amount of ETW tracing shall be reasonable as extensive ETW logging can cause:\r\n- too big overhead of capturing ETW events, which could skew perf traces\r\n- too big trace files slowing down investigation\r\n- way too big trace files causing perfview capture circular buffer overrun which results in missing events - prohibiting some trace analysis\r\n- all above will result into more difficult/impossible trace capturing of tools integrated with MSBuild - such as Visual Studio\r\n\r\n </HEAD><BODY><!--StartFragment--><H2>Event Statistics</H2><TABLE border=\"1\"><TBODY><TR><TH align=\"Center\">Name</TH><TH title=\"The number of times this event occurs in the log.\" align=\"Center\">Count</TH><TH title=\"The average size of just the payload of this event.\" align=\"Center\">Average<BR>Data Size</TH><TH title=\"The number of times this event has a stack trace associated with it.\" align=\"Center\">Stack<BR>Count</TH></TR><TR><TD align=\"Left\">Microsoft-Windows-Kernel-File/Create</TD><TD align=\"Right\">4,292,940</TD><TD align=\"Right\">273</TD><TD align=\"Right\">4,292,940</TD></TR><TR><TD align=\"Left\">Microsoft-Build/ApplyLazyItemOperations/Stop</TD><TD align=\"Right\">3,170,927</TD><TD align=\"Right\">32</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Microsoft-Build/ApplyLazyItemOperations/Start</TD><TD align=\"Right\">3,170,924</TD><TD align=\"Right\">32</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Windows Kernel/StackWalk/StackKeyKernel</TD><TD align=\"Right\">2,466,245</TD><TD align=\"Right\">24</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Windows Kernel/StackWalk/StackKeyUser</TD><TD align=\"Right\">1,841,718</TD><TD align=\"Right\">24</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Windows Kernel/TcpIp/TCPCopy</TD><TD align=\"Right\">1,809,001</TD><TD align=\"Right\">28</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Windows Kernel/PerfInfo/Sample</TD><TD align=\"Right\">1,383,667</TD><TD align=\"Right\">16</TD><TD align=\"Right\">1,365,310</TD></TR><TR><TD align=\"Left\">Windows Kernel/StackWalk/KeyDelete</TD><TD align=\"Right\">1,345,336</TD><TD align=\"Right\">299</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Microsoft-Windows-DotNETRuntime/ClrStack/Walk</TD><TD align=\"Right\">1,090,282</TD><TD align=\"Right\">446</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Windows Kernel/DiskIO/ReadInit</TD><TD align=\"Right\">784,799</TD><TD align=\"Right\">12</TD><TD align=\"Right\">784,799</TD></TR><TR><TD align=\"Left\">Windows Kernel/DiskIO/Read</TD><TD align=\"Right\">784,799</TD><TD align=\"Right\">52</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Microsoft-Windows-DotNETRuntime/ThreadPoolWorkerThread/Wait</TD><TD align=\"Right\">776,601</TD><TD align=\"Right\">10</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Windows Kernel/TcpIp/Recv</TD><TD align=\"Right\">776,115</TD><TD align=\"Right\">28</TD><TD align=\"Right\">1</TD></TR><TR><TD align=\"Left\">Windows Kernel/DiskIO/WriteInit</TD><TD align=\"Right\">689,648</TD><TD align=\"Right\">12</TD><TD align=\"Right\">689,648</TD></TR><TR><TD align=\"Left\">Windows Kernel/DiskIO/Write</TD><TD align=\"Right\">689,647</TD><TD align=\"Right\">52</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Microsoft-Windows-DotNETRuntime/GC/AllocationTick</TD><TD align=\"Right\">644,655</TD><TD align=\"Right\">168</TD><TD align=\"Right\">644,639</TD></TR><TR><TD align=\"Left\">Microsoft-Build/EvaluateCondition/Stop</TD><TD align=\"Right\">608,035</TD><TD align=\"Right\">132</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">Microsoft-Build/EvaluateCondition/Start</TD><TD align=\"Right\">608,034</TD><TD align=\"Right\">128</TD><TD align=\"Right\">0</TD></TR><TR><TD align=\"Left\">System.Diagnostics.Eventing.FrameworkEventSource/ThreadPoolEnqueueWork</TD><TD align=\"Right\">481,685</TD><TD align=\"Right\">8</TD><TD align=\"Right\">481,685</TD></TR></TBODY></TABLE><!--EndFragment--></BODY></HTML>\r\n\r\nBased on above we shall reconsider if we need `ApplyLazyItemOperations(Start|Stop)` and `EvaluateCondition(Start|Stop)`. \r\n\r\nEasiest solution would be to have them `#IF DEBUG`.\r\n\r\nNote: In case it is needed to capture at customer equivalent data are captured by [Evaluation Profiling](https://github.com/dotnet/msbuild/blob/main/documentation/evaluation-profiling.md)\r\n",
  "state": "OPEN",
  "createdAt": "2023-10-17T13:49:29Z",
  "updatedAt": "2025-05-12T11:15:24Z",
  "closedAt": null,
  "author": {
    "login": "rokonec"
  },
  "milestone": {
    "title": "VS 17.9"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance",
    "Priority:2",
    "Area: Evaluation",
    "triaged",
    "internal-team-onboarding"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Could also define a keyword for less voluminous events so that they can be enabled while keeping ApplyLazyItemOperations and EvaluateCondition disabled.",
        "createdAt": "2023-10-17T14:49:08Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}