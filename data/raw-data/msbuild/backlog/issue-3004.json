{
  "number": 3004,
  "title": "Memory overhead of MSBuildAllProjects property in msbuild evaluation model",
  "body": "### Steps to reproduce\r\n\r\nInternal solution with a large number of projects inside, mostly small .Net Core projects.  VS runs out of memory after loading the solution.\r\n\r\nMSBuild evaluation model is one of the top contributor, uses 25% of the managed heap.  About half of it are used to store large strings (mostly between 1k to 10k, but some over 10k), and it turns out almost all the large strings are values of MSBuildAllProjects property. \r\n\r\nIt turns out all imported .props/.targets concat its full path to the property.  In .Net Core, it uses a large amount of .props/.targets file, and makes this issue worse.  The property seems to be used to track dependencies.\r\n\r\nHowever, it is easy for MSBuild to compute this value based on the import closure in memory, so why just makes it a built-in property instead of asking everyone to do the right thing.  Anyway, the current problem is that the memory overhead.  Can we find out a smart way to fix this problem?\r\n",
  "state": "CLOSED",
  "createdAt": "2018-02-17T01:50:23Z",
  "updatedAt": "2024-02-21T17:14:25Z",
  "closedAt": "2018-02-20T15:52:28Z",
  "author": {
    "login": "lifengl"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "In the trace, this property uses about half of the memory used by evaluation model, about 150M memory, which is quite excessive, and almost has no use in the design time.\r\n\r\nName                                                                                                  \tInc %\t          Inc\t   Inc Ct\tExc %\t        Exc\t Exc Ct\t     Fold\tFold Ct\r\nMicrosoft.Build!Microsoft.Build.Evaluation.Project                                                   \t28.1\t  339,988,704\t3,931,804.750\t 0.0\t 37,928.055\t862.005\t        0\t     0\r\n+ Microsoft.Build!Microsoft.Build.Evaluation.Project+Data                                             \t28.0\t  339,090,400\t3,905,625.750\t 0.0\t106,888.563\t861.992\t        0\t     0\r\n|+ mscorlib!List<Microsoft.Build.Evaluation.ProjectProperty>                                          \t15.7\t  190,223,296\t896,655.500\t 0.3\t3,801,356.250\t1,661.694\t3,780,692.250\t800.686\r\n||+ Microsoft.Build!Microsoft.Build.Evaluation.ProjectProperty+ProjectPropertyXmlBackedWithPredecessor\t13.8\t  166,770,416\t158,654.063\t 0.2\t2,584,567.750\t107,690.102\t        0\t     0\r\n|||+ mscorlib!String (Bytes > 1K)                                                                     \t12.3\t  149,074,112\t31,419.730\t12.3\t149,074,112\t31,419.730\t        0\t     0\r\n|||+ mscorlib!String (Bytes > 10K)                                                                    \t 1.2\t   14,496,685\t1,368.634\t 1.2\t 14,496,685\t1,368.634\t        0\t     0\r\n|||+ Microsoft.Build!Microsoft.Build.Construction.ProjectPropertyElement                              \t 0.0\t  543,095.375\t18,021.219\t 0.0\t 23,927.461\t747.733\t        0\t     0\r\n|||+ mscorlib!String                                                                                  \t 0.0\t   71,937.672\t  153.059\t 0.0\t 71,937.672\t153.059\t        0\t     0\r\n",
        "createdAt": "2018-02-17T01:51:08Z",
        "updatedAt": "2018-02-17T01:53:38Z",
        "author": {
          "login": "lifengl"
        }
      },
      {
        "body": "See https://github.com/Microsoft/msbuild/issues/1299\r\n\r\n",
        "createdAt": "2018-02-17T05:32:18Z",
        "updatedAt": "2018-02-17T05:32:18Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "Duplicate of #1299.",
        "createdAt": "2018-02-20T15:52:28Z",
        "updatedAt": "2018-02-20T15:52:28Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}