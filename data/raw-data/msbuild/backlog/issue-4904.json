{
  "number": 4904,
  "title": "ToolTask UseCommandProcessor should handle Unicode commands",
  "body": "Originally filed as [AB#1012708](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1012708) by @MrTrillian.\r\n\r\nWhen a `ToolTask`-derived task (like VC++'s `CustomBuild`) opts into running using `cmd.exe`, the batch file generated by `ToolTask`\r\n\r\nhttps://github.com/microsoft/msbuild/blob/b6e7d1e07e28ac7f8e70ebee110dcfe795c30adf/src/Utilities/ToolTask.cs#L1368\r\n\r\nmay be in an encoding incapable of representing the full string.\r\n\r\n`ToolTask` should do something like #143. But make sure to use the _current_ version of that special-casing, since it has had a number of bug fixes over the years.",
  "state": "CLOSED",
  "createdAt": "2019-11-08T17:42:52Z",
  "updatedAt": "2024-02-21T17:06:09Z",
  "closedAt": "2020-02-05T18:32:51Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Localization",
    "Area: C++ tasks and targets",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      },
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.5 Preview 3 (Sprint 165)"
  },
  "comments": {
    "nodes": [
      {
        "body": "One tricky side of this is that you can't change the batch file encoding without also changing the console output code page, which is what programs typically honor when writing to `stdout`. If you detect that the batch file would contain Unicode characters and emit a `chcp 65001`, your batch file will be able to represent the Unicode characters, but you also will likely change the encoding of the invoked programs' `stdout` to UTF-8. MSBuild could then read the `stdout` as UTF-8, but it was one of these programs that ignored the console output encoding and actually wrote in the OEM code page, then MSBuild would be \"at fault\" for having changed the code page and then decoded improperly.\r\n\r\nI was thinking that having MSBuild `chcp` to its own console output encoding in the batch file puts the burden of correctness on the caller. Since most callers will not change the console output encoding from OEM, the behavior in those cases will be preserved. When the callers do change it (likely to UTF-8), they should already be assuming that they will be calling programs that honor the console output code page, whether through the MSBuild indirection or not, so they can't blame MSBuild for having decided to change the console code page itself and break the target program's output. This is the case both currently (where MSBuild causes the child process' console output code page to revert to OEM), and if MSBuild opportunistically decides to change the output code page to UTF-8.",
        "createdAt": "2019-11-08T18:05:33Z",
        "updatedAt": "2019-11-08T18:59:25Z",
        "author": {
          "login": "tristanlabelle"
        }
      }
    ]
  }
}