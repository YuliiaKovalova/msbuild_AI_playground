{
  "number": 521,
  "title": "Node creation limit with /m",
  "body": "When [creating out-of-process nodes](https://github.com/Microsoft/msbuild/blob/07a15cfe9974dc1f558b8b0346a15ab375ee93a4/src/XMakeBuildEngine/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs#L245) for a /m build, MSBuild will spawn nodes until it has established a handshake with  the number of nodes if needs (usually number of processors). If this process doesn't work and the handshake fails, the created node may stay alive and the process starts again. This will continue until your machine becomes completely unusable and Windows stops creating processes (or the build finishes on master, whichever comes first).\n\nThis has come up in two scenarios:\n#511 - Handshake was incompatible because /nr was set in msbuild.rsp\n#520 - MSBuild.exe not found in a valid location, fallback to a version that is guaranteed to fail handshake. This really shouldn't happen, but it hit me yesterday.\n\nFix: We should limit the number of nodes we create so if another scenario is possible we fail a bit more gracefully.\n",
  "state": "OPEN",
  "createdAt": "2016-03-10T19:27:06Z",
  "updatedAt": "2024-02-21T16:38:44Z",
  "closedAt": null,
  "author": {
    "login": "AndyGerlicher"
  },
  "labels": [
    "help wanted",
    "Future Release Bar-check",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Discussion today about potential solutions. Rather than limit we should probably throttle creation. For example, no more than /m:<nodes> \\* 10 per 5 minutes (normal auto timeout for nodes). This should avoid scenarios where the machine becomes completely unusable.\n",
        "createdAt": "2016-03-15T22:51:11Z",
        "updatedAt": "2016-03-15T22:51:11Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "We independently redesigned this again in team standup yesterday. Pulling into the vNext milestone so we remember to consider it.",
        "createdAt": "2017-02-22T16:54:59Z",
        "updatedAt": "2017-02-22T16:54:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I think this was done, right? Now we limit it to 2 * numProcessors?",
        "createdAt": "2022-02-17T20:48:27Z",
        "updatedAt": "2022-02-17T20:48:27Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}