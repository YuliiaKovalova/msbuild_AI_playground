{
  "number": 9760,
  "title": "BuildCheck connector for binlog replaying",
  "body": "### Context\n\n#9627\n\nToday we have [`BuildCopConnectorLogger.cs`](https://github.com/dotnet/msbuild/blob/exp/build-analyzers/src/Analyzers/Infrastructure/BuildCopConnectorLogger.cs) as a connector between Logging infrastructure and BuildInfrastructure. It Implements the MSBuild `ILogger` interface and hance can be plugged in as logger, receive the `BuildEventArgs` data and push those to the [`BuildCopManager.cs`](https://github.com/dotnet/msbuild/blob/exp/build-analyzers/src/Analyzers/Infrastructure/BuildCopManager.cs).\n\nThe MSBuild is able to read the binlog and replay it to any attached loggers (via `MSBuild.exe <binlogpath> <other args - to attach loggers etc>`). \n\n### Goal\n\nWe aim to leverage both facts in 'BuildCop post-build mode' - MSBuild will replay `BuildEventArgs` from binlog and send them to BuildCop that will report it's findings.\n\n### Subproblems\n\n(Order is not strict)\n\n - [ ] Author an end-to-end unit test that would create binlog, then replay it in BuildCop mode and assert that report is outputed\n - [ ] Identify and fix or plan fix for any issues with analysis during replay mode\n - [ ] Make sure .editorconfig files (touched by BuildCop, or possibly all) in the source tree that is build with binlogger attached (`/bl`) are embedded into binlog file.\n-----------------\n - [ ] In replay mode - use .editorconfig files from the binlog (if any).\n - [ ] The build might have happen on top of sources without .editorconfig files, while in replay mode we might want to tune the rules - so add an option to specify editorconfig file during replay (e.g. via command line switch)\n - [ ] (skip now) There will be Analyzers, that will need to hook directly into executing nodes (the way of distinguishing those is yet TBD) - those will need to be skipped during replay analysis mode, but some message/warning will need to be output to inform about this. In a future version we might as well reconstruct some of those 'execution-specific' data during replay mode (e.g. we can reconstruct `ProjectInstance`/`Project` from the data embedded in binlog)",
  "state": "CLOSED",
  "createdAt": "2024-02-19T16:52:51Z",
  "updatedAt": "2024-07-01T15:00:36Z",
  "closedAt": "2024-06-26T08:51:28Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "triaged",
    "Area: BuildCheck"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "surayya-MS"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}