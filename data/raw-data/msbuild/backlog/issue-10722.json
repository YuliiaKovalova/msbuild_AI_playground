{
  "number": 10722,
  "title": "[Bug]: Logger missing information after upgrading Microsoft.Build tasks version ",
  "body": "### Issue Description\r\n\r\nWe are upgrading a tool that is compiling our application using MsBuild tasks.\r\nIt was previously doing it using versions 15.x\r\nNow we are moving to the most recent version up to now which is currently version 17.11.4 because we want to upgrade our build system to VS2022.\r\nWe have tried to use Microsoft.Build.Locator but we were unable to fix several errors of the type:\r\n- MSB4127 : The \"GetReferenceNearestTargetFrameworkTask\" task could not be instantiated from the assembly \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.Build.Tasks.dll\". Please verify the task assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. Unable to cast object of type 'NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask' to type 'Microsoft.Build.Framework.ITask'\r\n\r\nSo we are now trying deploying all dependencies within the compiler itself with the following package reference:\r\n\r\n`\r\n\r\n\t\t<PackageReference Include=\"Microsoft.Build\" Version=\"17.11.4\" />\r\n\t\t<PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"17.11.4\" />\r\n\t\t<PackageReference Include=\"Microsoft.Build.Tasks.Core\" Version=\"17.11.4\" />\r\n\t\t<PackageReference Include=\"NuGet.Build.Tasks\" Version=\"6.11.0\" />\r\n\r\n`\r\n\r\nThis is the closest we can get to have the application actually compiling our project. With those nuget packages the compiler is able to compile the solutions, but we have noticed some changes at logging level. Also it takes 10% more time to do it that former tool.\r\n\r\nIn our former version, in the IEventSource.ProjectStarted event we had 2 expectations:\r\n- When TargetNames == \"Build\", the attribe Items would be storing all the csproj projects associated to the sln that were going to be compiled\" related to the build configuration. In current version the Items property is always null.\r\n\r\nIn former version, for a sln file with 50 projects, we were expecting 51 project started events and 51 project finish events. First event corresponded to the Target build event, related to the sln file. Other events related each one to a csproj file. In current version both events, either ProjectStarted and ProjectFinished is being fired a whole lot more times, all of them logging the same information. For example, for a sln file with only 50 projects, the event ProjectFinished with the trace \"Done building project \"XXXX.csproj\" is being writen like 28 times.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nSorry I cannot provide any repro step, it is like a regression or I have missed some breaking change release notes.\r\nActually, if this is how it is the expected behaviour right now, what I would like to know is how to gather the previous logging information with current version. \r\nWe were using the expected information to log in which order projects were compiled and to trace how long it took to build each one. \r\nSo my questions are (if this is the current expected behaviour)\r\nHow do I know all projects that are going to be compiled.\r\nHow do I know how long it takes to build every single project.\r\n\r\nIf you still require a zipped project it is going to take sometime to generate it.\r\n\r\n### Expected Behavior\r\n\r\nWhen eventSource.ProjectStarted, at ProjectStartedEventArgs, when e.TargetNames == \"Build\", then e.Items should have the list of all projects that are going to be compiled\r\n\r\nEvents ProjectStarted and ProjectFinished should fire once per project in the solution.\r\n\r\n### Actual Behavior\r\n\r\nProjectStartedEventArgs.Items is always null\r\n\r\nProjectStarted and ProjectFinish is firing more than once per project in the solution.\r\n\r\n### Analysis\r\n\r\n_No response_\r\n\r\n### Versions & Configurations\r\n\r\nMSBuild version 17.9.5+33de0b227 for .NET Framework\r\n17.9.5.7608",
  "state": "CLOSED",
  "createdAt": "2024-09-30T06:09:07Z",
  "updatedAt": "2025-03-09T20:49:05Z",
  "closedAt": "2025-03-09T20:49:04Z",
  "author": {
    "login": "dilandau2001"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "GangWang01"
      }
    ]
  },
  "labels": [
    "bug",
    "author-responded"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Any news?.\nI guess it is easy to reproduce in your side, but if you don't I can try to prepare a full solution to test it.\nBasically our issue is with events ProjectFinished and ProjectStarted that are fired way more times than with former versions, and with different parameters.\nSpecially the \"Items\" property which in current version is always empty and previously it could contain the whole list of projects to be build.",
        "createdAt": "2024-10-15T13:43:09Z",
        "author": {
          "login": "dilandau2001"
        }
      },
      {
        "body": "@dilandau2001 can you provide the minimum sample that reproduces the issue? It will be very helpful to understand and investigate the issue.",
        "createdAt": "2025-02-25T06:40:10Z",
        "author": {
          "login": "GangWang01"
        }
      },
      {
        "body": "Hi, I am no longer related to that project.\nWhat I can say is that we had to stop using build tasks.\nInstead what we did, was to call msbuild.exe inside a hidden console, capture console outputs and parse them to our needs.",
        "createdAt": "2025-03-08T17:42:46Z",
        "author": {
          "login": "dilandau2001"
        }
      },
      {
        "body": "Although not really resolved I am no longer specially interested in the issue. ",
        "createdAt": "2025-03-09T20:49:04Z",
        "author": {
          "login": "dilandau2001"
        }
      }
    ]
  }
}