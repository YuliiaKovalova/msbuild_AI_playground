{
  "number": 3156,
  "title": "LoadProject API throws InvalidProjectFileException on .NET 2.1 preview project",
  "body": "### Steps to reproduce\r\n1. Install the .NET Core 2.1 preview\r\n2. Create a .NET Core console app using `dotnet new console` . No need to change the template code.\r\n3. In a separate .NET Core console app (doesn't matter if it is .NET Core 2.0 or 2.1), use the MSBuild API to load the other project.\r\n\r\nResults in this exception:\r\n\r\n```\r\nUnhandled Exception: Microsoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.NET.Sdk' specified could not be found.  c:\\src\\ShiftleftSecurity\\sl-microagent-dotnet\\ProjectAnalysis\\testconsole\\testconsole.csproj\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args) in E:\\A\\_work\\82\\s\\src\\Shared\\ProjectErrorUtilities.cs:line 440\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, Boolean throwOnFileNotExistsError) in E:\\A\\_work\\82\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2532\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement) in E:\\A\\_work\\82\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2303\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement) in E:\\A\\_work\\82\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2148\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport) in E:\\A\\_work\\82\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 1066\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext) in E:\\A\\_work\\82\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 819\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings) in E:\\A\\_work\\82\\s\\src\\Build\\Definition\\Project.cs:line 2644\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings) in E:\\A\\_work\\82\\s\\src\\Build\\Definition\\Project.cs:line 2635\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings) in E:\\A\\_work\\82\\s\\src\\Build\\Definition\\Project.cs:line 2714\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings) in E:\\A\\_work\\82\\s\\src\\Build\\Definition\\Project.cs:line 513\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion) in E:\\A\\_work\\82\\s\\src\\Build\\Definition\\ProjectCollection.cs:line 1118\r\n   at ProjectAnalyzer.Program.processProjectWithMsBuildApi(String projectFilename) in C:\\src\\ShiftLeftSecurity\\sl-microagent-dotnet\\ProjectAnalysis\\ProjectAnalyzer\\Program.cs:line 44\r\n   at ProjectAnalyzer.Program.processDirectories(String path) in C:\\src\\ShiftLeftSecurity\\sl-microagent-dotnet\\ProjectAnalysis\\ProjectAnalyzer\\Program.cs:line 29\r\n   at ProjectAnalyzer.Program.Main(String[] args) in C:\\src\\ShiftLeftSecurity\\sl-microagent-dotnet\\ProjectAnalysis\\ProjectAnalyzer\\Program.cs:line 18\r\n```\r\n\r\nHere is my program that uses the MSBuild API: Note that I pass the path to where the new console app was created as an argument:\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing Microsoft.Build.Evaluation;\r\n\r\nnamespace ProjectAnalyzer\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            //Find project(s) from the command line argument\r\n            foreach (var path in args)\r\n            {\r\n                processDirectories(path);\r\n            }\r\n        }\r\n\r\n        private static void processDirectories(string path)\r\n        {\r\n            string[] files = Directory.GetFiles(path);\r\n            foreach (var filename in files)\r\n            {\r\n                if (filename.EndsWith(\".csproj\"))\r\n                    processProjectWithMsBuildApi(filename);\r\n            }\r\n\r\n            string[] directories = Directory.GetDirectories(path);\r\n            foreach (var dir in directories)\r\n                processDirectories(dir);\r\n        }\r\n\r\n        private static void processProjectWithMsBuildApi(string projectFilename)\r\n        {\r\n            ProjectCollection projects = new ProjectCollection();\r\n            Project project = projects.LoadProject(projectFilename);\r\n            if (project == null)\r\n            {\r\n                Console.WriteLine(\"No project loaded.\");\r\n                return;\r\n            }\r\n\r\n            Console.WriteLine(\"PROJECT: {0}\", project.ToString());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Expected  behavior\r\nThe project is loaded by the LoadProject API and the project object is then printed to the console output.\r\n\r\n### Actual behavior\r\nInvalidProjectFileException occurs. See above.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n15.6.82.30579\r\n\r\nOS info:\r\nWindows 10 Pro\r\nVersion: 10.0.16299\r\n\r\ndotnet --list-sdks returns:\r\n2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.200-preview-007474 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.300-preview1-008174 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2018-04-02T15:46:34Z",
  "updatedAt": "2024-02-21T17:13:49Z",
  "closedAt": "2019-01-02T22:55:33Z",
  "author": {
    "login": "bobuva"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I have the same issue. Interestingly, the same code works fine when ran as a .NET Framework 4.7.2, yet fails as .netcore\r\n\r\nI've tried variety of things suggested elsewhere, but nothing seems to help. On both machines I've tried it I have both VS17 Enterprise and MSBuild17 installed with .NET Framework and .NET Core workloads, newest SDKs for both .NET (4.7.2) and Core (up to 2.1.300-preview1)",
        "createdAt": "2018-05-10T08:26:49Z",
        "updatedAt": "2018-05-10T08:26:49Z",
        "author": {
          "login": "p-kaczynski"
        }
      },
      {
        "body": "Fix is here: https://github.com/Microsoft/msbuild/issues/2532#issuecomment-417730525",
        "createdAt": "2018-11-09T21:55:45Z",
        "updatedAt": "2018-11-12T00:24:52Z",
        "author": {
          "login": "bugproof"
        }
      }
    ]
  }
}