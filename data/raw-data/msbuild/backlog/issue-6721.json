{
  "number": 6721,
  "title": "Can't write MSBuild_Logs to C:\\windows\\system32",
  "body": "If MSBuild.exe is run with the current directory pointing to C:\\windows\\system32 you may occasionally see the following failure.txt file next to the project being built:\r\n\r\n```\r\nUNHANDLED EXCEPTIONS FROM PROCESS 9724:\r\n=====================\r\n7/30/2021 8:32:57 PM\r\nSystem.UnauthorizedAccessException: Access to the path 'C:\\WINDOWS\\system32\\MSBuild_Logs' is denied.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.Directory.InternalCreateDirectory(String fullPath, String path, Object dirSecurityObj, Boolean checkHost)\r\n   at System.IO.Directory.InternalCreateDirectoryHelper(String path, Boolean checkHost)\r\n   at System.IO.Directory.CreateDirectory(String path)\r\n   at Microsoft.Build.Shared.ExceptionHandling.DumpExceptionToFile(Exception ex)\r\n   at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stream localWritePipe, ConcurrentQueue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTerminatePacketPump)\r\n   at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.PacketPumpProc()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n===================\r\n```\r\n\r\nI think it shouldn't attempt to write to MSBuild_Logs in this case and try the location next to the project instead.",
  "state": "CLOSED",
  "createdAt": "2021-07-31T03:40:32Z",
  "updatedAt": "2024-02-21T14:12:18Z",
  "closedAt": "2023-01-19T16:34:38Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "bug",
    "Good First Issue",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "vlada-shubina"
      }
    ]
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Turns out I have the amazing LocalDumps registry key enabled, and it got me a nice dump for this. The exception MSBuild tried to write to the text file in C:\\windows\\system32 was:\r\n\r\n```\r\nSystem.IOException: Pipe is broken.\r\n   at System.IO.Pipes.PipeStream.WinIOError(Int32 errorCode) in f:\\dd\\ndp\\fx\\src\\Core\\System\\IO\\Pipes\\PipeStream.cs:line 1168\r\n   at System.IO.Pipes.PipeStream.BeginWriteCore(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) in f:\\dd\\ndp\\fx\\src\\Core\\System\\IO\\Pipes\\PipeStream.cs:line 560\r\n   at System.IO.Pipes.PipeStream.WriteCore(Byte[] buffer, Int32 offset, Int32 count) in f:\\dd\\ndp\\fx\\src\\Core\\System\\IO\\Pipes\\PipeStream.cs:line 454\r\n   at System.IO.Pipes.PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count) in f:\\dd\\ndp\\fx\\src\\Core\\System\\IO\\Pipes\\PipeStream.cs:line 440\r\n   at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stream localWritePipe, ConcurrentQueue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTerminatePacketPump) in /_/src/Shared/NodeEndpointOutOfProcBase.cs:line 618\r\n```",
        "createdAt": "2021-07-31T04:59:28Z",
        "updatedAt": "2021-07-31T05:00:06Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "And this is the location that tried to write to file:\r\nhttps://github.com/dotnet/msbuild/blob/b6e7d6051a3c3f595bfa11bd3b2749c0c8cc7f3c/src/Shared/NodeEndpointOutOfProcBase.cs#L625",
        "createdAt": "2021-07-31T05:00:59Z",
        "updatedAt": "2021-07-31T05:00:59Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I suspect it was caused by two unrelated builds stealing nodes from each other, or some other crossfire of inter-node communication between unrelated builds.",
        "createdAt": "2021-07-31T05:01:46Z",
        "updatedAt": "2021-07-31T05:01:46Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I suppose I could repro on demand if someone was super interested. Basically trigger a build in the IDE and at the same time trigger a build at command line of the same large-ish solution and make sure the build is not incremental (otherwise nothing much will happen).",
        "createdAt": "2021-07-31T05:02:42Z",
        "updatedAt": "2021-07-31T05:02:42Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Certainly a low-pri bug I think.",
        "createdAt": "2021-07-31T05:03:00Z",
        "updatedAt": "2021-07-31T05:03:00Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I'm not sure about `try the location next to the project instead` because users might not want files in unexpected locations. Depending on their git settings, it might even show up as something to commit. On the other hand, it's nice to have the logs somewhere, and you can more easily move them around after your build than resetting everything and running the build again, but that assumes that you know where the log is. It might be reasonable to send a message or warning if this sort of thing happens (if that isn't already true), and if we end up making the log somewhere, we should maybe mention where in the message/warning. ",
        "createdAt": "2021-08-05T16:49:01Z",
        "updatedAt": "2021-08-05T16:49:01Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "https://github.com/dotnet/msbuild/pull/7366 likely made this scenario better. It looks like the fallback schema is MSBUILDDEBUGPATH --> current directory --> temp, and that third, at least, should (almost) always be writable.\r\n\r\nIt's potentially important that KirillOsenkov hit this from DumpExceptionToFile, however. We should check if that uses the same fallback logic. (Potentially unify if not?)",
        "createdAt": "2023-01-17T16:02:41Z",
        "updatedAt": "2023-01-17T16:02:41Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "I run `MSBuild.exe` from `system32` folder with logs enabled, and logs were created in \r\n```\r\nMSBuild logs and debug information will be at \"%TEMP%\\MSBuildTempvshubina\\MSBuild_Logs\"\r\n``` \r\ninstead. https://github.com/dotnet/msbuild/pull/7366 fixes it.\r\nSo, the initial issue is resolved. ",
        "createdAt": "2023-01-19T12:31:46Z",
        "updatedAt": "2023-01-19T12:39:26Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "I also verified, that `ExceptionHandling.DumpExceptionToFile` uses same logic and will be using path in the temp in this case.\r\n\r\n@Forgind @rainersigwald, suggesting to close as already fixed with https://github.com/dotnet/msbuild/pull/7366.\r\n",
        "createdAt": "2023-01-19T12:43:33Z",
        "updatedAt": "2023-01-19T12:43:33Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "Just a note to verify, if having logs from different runs in same folder is as expected:\r\n```\r\n    Directory: %TEMP%\\MSBuildTempvshubina\\MSBuild_Logs\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---           1/19/2023  1:38 PM         351423 CentralNode_MSBuild_PID=18860_x86_BuildManager_Default.binlog\r\n-a---           1/19/2023  1:28 PM         351411 CentralNode_MSBuild_PID=2936_x86_BuildManager_Default.binlog\r\n-a---           1/19/2023  1:39 PM         352278 CentralNode_MSBuild_PID=30624_x86_BuildManager_Default.binlog\r\n-a---           1/19/2023  1:38 PM            605 EngineTrace_18860.txt\r\n-a---           1/19/2023  1:28 PM            604 EngineTrace_2936.txt\r\n-a---           1/19/2023  1:39 PM            604 EngineTrace_30624.txt\r\n-a---           1/19/2023  1:38 PM           1083 SchedulerState_18860.txt\r\n-a---           1/19/2023  1:28 PM           1083 SchedulerState_2936.txt\r\n-a---           1/19/2023  1:39 PM           1083 SchedulerState_30624.txt\r\n-a---           1/19/2023  1:38 PM            689 SchedulerTrace_18860.txt\r\n-a---           1/19/2023  1:28 PM            689 SchedulerTrace_2936.txt\r\n-a---           1/19/2023  1:39 PM            689 SchedulerTrace_30624.txt\r\n\r\n```\r\n",
        "createdAt": "2023-01-19T12:46:12Z",
        "updatedAt": "2023-01-19T12:46:12Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "> Just a note to verify, if having logs from different runs in same folder is as expected:\r\n> \r\n> ```\r\n>     Directory: %TEMP%\\MSBuildTempvshubina\\MSBuild_Logs\r\n> \r\n> Mode                 LastWriteTime         Length Name\r\n> ----                 -------------         ------ ----\r\n> -a---           1/19/2023  1:38 PM         351423 CentralNode_MSBuild_PID=18860_x86_BuildManager_Default.binlog\r\n> -a---           1/19/2023  1:28 PM         351411 CentralNode_MSBuild_PID=2936_x86_BuildManager_Default.binlog\r\n> -a---           1/19/2023  1:39 PM         352278 CentralNode_MSBuild_PID=30624_x86_BuildManager_Default.binlog\r\n> -a---           1/19/2023  1:38 PM            605 EngineTrace_18860.txt\r\n> -a---           1/19/2023  1:28 PM            604 EngineTrace_2936.txt\r\n> -a---           1/19/2023  1:39 PM            604 EngineTrace_30624.txt\r\n> -a---           1/19/2023  1:38 PM           1083 SchedulerState_18860.txt\r\n> -a---           1/19/2023  1:28 PM           1083 SchedulerState_2936.txt\r\n> -a---           1/19/2023  1:39 PM           1083 SchedulerState_30624.txt\r\n> -a---           1/19/2023  1:38 PM            689 SchedulerTrace_18860.txt\r\n> -a---           1/19/2023  1:28 PM            689 SchedulerTrace_2936.txt\r\n> -a---           1/19/2023  1:39 PM            689 SchedulerTrace_30624.txt\r\n> ```\r\n\r\nI don't think that's ideal, but that's what I would've expected. You can always sort by when they were made, so I don't think it's a big deal. If you want to change that, I wouldn't be opposed, but I'd consider it pretty low priority.\r\n\r\nClosing as fixed.",
        "createdAt": "2023-01-19T16:34:38Z",
        "updatedAt": "2023-01-19T16:34:38Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}