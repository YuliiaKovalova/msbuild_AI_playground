{
  "number": 6621,
  "title": "Condition attributes appear to work incorrectly for PropertyGroup elements in Directory.Build.props",
  "body": "Basically, I am building a solution that has several projects, and I have a `Directory.Build.props` in the .sln folder.\r\n\r\nInside the `Directory.Build.props` file, I have the following markup:\r\n\r\n`<PropertyGroup Condition=\"'$(Configuration)|$(Platform)|$(IsTestProject)' == 'Debug|AnyCPU|true'\">`\r\n  `<PackageIcon>Assets\\NuGet\\Tests %28debug%29.png</PackageIcon>`\r\n`</PropertyGroup>`\r\n    \r\n`<ItemGroup Condition=\"'$(Configuration)|$(Platform)|$(IsTestProject)' == 'Debug|AnyCPU|true'\">`\r\n  `<None Include=\"..\\..\\..\\BluBlaze.Labs.Assets\\Icons\\ADO\\Tests %28debug%29.png\" Link=\"Assets\\NuGet\\Tests %28debug%29.png\" Pack=\"true\" PackagePath=\"Assets\\NuGet\\Tests %28debug%29.png\" />`\r\n`</ItemGroup>`\r\n\r\nNow the issue is, the `PropertyGroup` condition is not working properly, but the `ItemGroup` condition is. The conditions are identical. In all of my test projects, they properly link the file `Tests (debug).png`, and non-test projects properly link the file `Package API (debug).png`. _However_, When compiling the project, test projects are not able to find the `PackageIcon` markup specified above. In fact, after some experimenting, I noticed that test projects are consuming this markup instead:\r\n\r\n`<PropertyGroup Condition=\"'$(Configuration)|$(Platform)|$(IsTestProject)' == 'Debug|AnyCPU|'\">`\r\n  `<PackageIcon>Assets\\NuGet\\Package API %28debug%29.png</PackageIcon>`\r\n`</PropertyGroup>`\r\n\r\nwhich indicates for whatever reason, `$(IsTestProject)` is resolving to null or empty. But the weird thing is, `$(IsTestProject)` resolves to `true` inside the `ItemGroup` element condition, in the same `Directory.Build.props` file.\r\n\r\nFinally, the kicker. If I copy and paste, verbatim exactly the `PropertyGroup` and `ItemGroup` markup specified above for test projects directly into the .csproj file itself, it works entirely as intended. It just seems for whatever strange reason, the condition in the `ItemGroup` element doesn't work correctly, and only while inside the `Directory.Build.props` file.\r\n\r\nI don't know if this issue is scoped to just the `PropertyGroup` element, the `$(IsTestProject)` element, or any other factors.\r\n\r\nFor now I have a workaround and can just place the markup in the .csproj file, but some insight as to why this happens and if it'll be address would be greatly appreciated.\r\n\r\nThe test projects are multi-framework, and have .NET Framework and .NET Core builds, if that's important. Any other info I can provide feel free to let me know.\r\n",
  "state": "CLOSED",
  "createdAt": "2021-05-27T00:15:51Z",
  "updatedAt": "2024-02-21T14:13:19Z",
  "closedAt": "2021-06-23T22:44:42Z",
  "author": {
    "login": "BlazingArdor"
  },
  "labels": [
    "question",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "marcpopMSFT"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I couldn't figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one area label.",
        "createdAt": "2021-05-27T00:15:53Z",
        "updatedAt": "2021-05-27T00:15:53Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "The issue you're running into has to do with the order in which MSBuild evaluates your project, and the order of default imports on your project.\r\n\r\nBasically, MSBuild evaluates properties before items and it hasn't found a definition for `IsTestProject` when parsing your PropertyGroup. It turns out this is because `IsTestProject` is defined in `Microsoft.NET.Test.Sdk.props` which is imported _after_ Directory.Build.props. By the time it starts parsing ItemGroups, it's gotten a value for IsTestProject and the condition succeeds.\r\n\r\nIf you want your logic to run for each project in your sln, you'll want your checks either in:\r\na. Each project (like you've done as a workaround)\r\nb. In a Directory.Build.targets file. `.targets` files are imported after `.props` files.\r\n\r\nClosing the issue but feel free to ask other questions!",
        "createdAt": "2021-06-23T22:44:42Z",
        "updatedAt": "2021-06-23T22:44:42Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}