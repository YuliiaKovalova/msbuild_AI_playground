{
  "number": 899,
  "title": "CoreCLR CI failing with: The task factory \"*TaskFactory\" could not be loaded from the assembly",
  "body": "where `*` in (Code, Xaml)\n\n`CodeTaskFactory` example: http://dotnet-ci.cloudapp.net/job/dotnet_coreclr/job/master/job/x64_release_windows_nt_pri1_prtest/4507/\n\n`XamlTaskFactory` example: http://dotnet-ci.cloudapp.net/job/dotnet_coreclr/job/master/job/x86_lb_checked_windows_nt_prtest/2829/\n\nDownstream issue: dotnet/coreclr#1652.\n\n/cc @weshaggard, @mmitche\n",
  "state": "CLOSED",
  "createdAt": "2016-08-12T16:35:28Z",
  "updatedAt": "2024-02-21T17:26:36Z",
  "closedAt": "2017-01-13T19:16:38Z",
  "author": {
    "login": "ghost"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Also tracked with https://github.com/dotnet/dotnet-ci/issues/402\n",
        "createdAt": "2016-08-16T19:43:51Z",
        "updatedAt": "2016-08-16T19:43:51Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "@mmitche are you investigating this? The links are expired and we're not sure how to go about reproducing this issue.\n",
        "createdAt": "2016-08-16T22:38:32Z",
        "updatedAt": "2016-08-16T22:38:32Z",
        "author": {
          "login": "Sarabeth-Jaffe-Microsoft"
        }
      },
      {
        "body": "I'm trying to track down what changed.  It's non-deterministic, but I do know a way to reproduce it more often:\n\nFill the TEMP directory used by msbuild with temp files.  It may help to have them have the same base name as those that would be generated by the task factory compile steps.  40k-50k should do, size does not matter.  Then running the coreclr build in a loop should eventually show the issue.\n",
        "createdAt": "2016-08-16T22:41:15Z",
        "updatedAt": "2016-08-16T22:41:15Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "And actually, since it's based on time to evaluate the file names in the temp dir and a lot of people have fast SSD's, you might even up that by an order of magnitude or so.\n",
        "createdAt": "2016-08-16T22:42:16Z",
        "updatedAt": "2016-08-16T22:42:16Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "@Sarabeth-Jaffe-Microsoft I'm investigating this for mitigating the issue, not for solving the actual bug.  Since we have existing projects that are still using VS2015 we don't have the opportunity to fix and update msbuild there as easily.\n",
        "createdAt": "2016-08-16T23:03:10Z",
        "updatedAt": "2016-08-16T23:03:10Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "I reproduced this outside of Jenkins (on just a regular VM) using ChakraCore, so the Jenkins environment doesn't seem to be the cause.  I'm thinking there may have been some kind of background change in VM perhaps (since this is the same image we have used for 5 months.\n\n@Sarabeth-Jaffe-Microsoft do you know whether Update 3 contains any potential fixes for this issue?\n",
        "createdAt": "2016-08-17T16:32:05Z",
        "updatedAt": "2016-08-17T16:32:05Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "I have also started seeing this issue in a separate project after adding a MASM target to the build, which depends on XamlTaskFactory. The repro rate is roughly 50%. Our CI also runs through Jenkins and I can't reproduce the issue by manually kicking off the build. Our build agents' temp dirs were pretty bloated when the issue first started but clearing them out has not alleviated it at all.\n\nAt first we were on VS2015 Update 2 but upgrading to Update 3 has also not fixed the issue.\n",
        "createdAt": "2016-10-05T17:22:36Z",
        "updatedAt": "2016-10-05T17:22:36Z",
        "author": {
          "login": "phsteven"
        }
      },
      {
        "body": "We found a workaround: disable MSBuild node reuse with the /nodeReuse flag. For us, it didn't have a significant impact on build time.\n",
        "createdAt": "2016-10-11T18:27:32Z",
        "updatedAt": "2016-10-11T18:27:32Z",
        "author": {
          "login": "phsteven"
        }
      },
      {
        "body": "Unable to repro, please re-open if this is still an issue.",
        "createdAt": "2017-01-13T19:16:38Z",
        "updatedAt": "2017-01-13T19:16:38Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Still running into this, I don't have a repro.",
        "createdAt": "2017-04-21T02:42:02Z",
        "updatedAt": "2017-04-21T02:42:02Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@davkean you're still running into this even with node reuse turned off?",
        "createdAt": "2017-04-21T15:34:23Z",
        "updatedAt": "2017-04-21T15:34:23Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "No I had node reuse turned on. Want to indicate that this is still an issue.",
        "createdAt": "2017-04-23T23:49:53Z",
        "updatedAt": "2017-04-23T23:49:53Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@davkean The CodeTaskFactory is using CodeDom to compile an \"in memory\" assembly.  [This](https://github.com/Microsoft/msbuild/blob/master/src/Tasks/CodeTaskFactory.cs#L825) call eventually writes the source code to disk and compiles an assembly to disk which the CodeDom loads into memory and then deletes.  Judging from the error I saw in one of the referenced failures, I suspect something is going wrong with CodeDom and not the CodeTaskFactory itself.  Any more error info would be helpful and obviously a repro would be the best.  I wonder if this is a known issue with CodeDom?\r\n\r\nAs a side note, I am working on a Roslyn-based CodeTaskFactory which hopefully would not have this issue...",
        "createdAt": "2017-04-25T14:55:41Z",
        "updatedAt": "2017-04-25T14:55:41Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  }
}