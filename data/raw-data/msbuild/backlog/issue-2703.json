{
  "number": 2703,
  "title": "Enable node reuse on .NET Core",
  "body": "Support `/nodereuse` command to improve inner-loop performance.",
  "state": "CLOSED",
  "createdAt": "2017-11-06T21:31:29Z",
  "updatedAt": "2024-02-21T17:15:49Z",
  "closedAt": "2018-03-23T00:38:04Z",
  "author": {
    "login": "AndyGerlicher"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 15.7"
  },
  "comments": {
    "nodes": [
      {
        "body": "@AndyGerlicher This needs to be done with care.  We had severe problems with nodes living from build to build and breaking when build task dlls would change.",
        "createdAt": "2017-11-06T21:42:12Z",
        "updatedAt": "2017-11-06T21:42:12Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "There isn't a plan to change that aspect of it. We'll want to turn it off in CI.",
        "createdAt": "2017-11-07T02:54:24Z",
        "updatedAt": "2017-11-07T02:54:24Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "@mmitche node reuse is a good fit for the local dev loop where the startup cost matters and they are unlikely to be modifying the task assemblies, and can disable it if needed. CI should definitely disable it.",
        "createdAt": "2017-11-07T05:39:16Z",
        "updatedAt": "2017-11-07T05:39:16Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I think it could work in CI too.  Is there a way to ensure that loaded task assemblies match any new assemblies that are about to be loaded?  That would solve previously seen problems too.",
        "createdAt": "2017-11-07T16:15:16Z",
        "updatedAt": "2017-11-07T16:15:16Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "Are you tracking/planning on changing how node reuse works @AndyGerlicher so that you can get the benefit of it for a single project?",
        "createdAt": "2017-11-09T22:59:50Z",
        "updatedAt": "2017-11-09T22:59:50Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "To get this to work, we need:\r\n\r\n- [x] To enable node-finding on core\r\n  - [x] Can just attempt to connect to every `dotnet` process as a worker node\r\n  - [ ] Ideally would look at command lines to see if processes are worker nodes at all\r\n- [ ] A mechanism to ensure that a user with a low-priv MSBuild can't get connected to by a high-priv MSBuild and send arbitrary build commands. Currently planning to use a new `PipeOptions` setting: https://github.com/dotnet/corefx/issues/25427\r\n- [x] Simplify the pipe-handling code to be unified (.NET Core 2 has most of what we needed to ifdef out for pre-1.0)\r\n- [x] Testing on at least a Linux, macOS, and Windows.\r\n\r\nChanging how node reuse works is out of scope for this item.",
        "createdAt": "2018-01-16T17:44:39Z",
        "updatedAt": "2018-02-09T03:35:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "cc @safern who is in progress on https://github.com/dotnet/corefx/issues/25427",
        "createdAt": "2018-01-16T17:54:28Z",
        "updatedAt": "2018-01-16T17:54:28Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "https://github.com/Microsoft/msbuild/pull/2961 is working with everything except `PipeOptions.CurrentUserOnly`.",
        "createdAt": "2018-02-09T16:00:28Z",
        "updatedAt": "2018-02-09T16:00:28Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald I expect @pjanotti to get the `PipeOptions.CurrentUserOnly` PR into master next week.",
        "createdAt": "2018-02-09T21:05:00Z",
        "updatedAt": "2018-02-09T21:05:00Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@rainersigwald the `PipeOptions.CurrentUserOnly` work is done in the corefx side. @pjanotti merged this ~ last week into master. ",
        "createdAt": "2018-03-12T18:18:25Z",
        "updatedAt": "2018-03-12T18:18:45Z",
        "author": {
          "login": "safern"
        }
      },
      {
        "body": "@jeffkl is picking #2961 up. Currently blocked on adopting the latest corefx build because of behavior changes that broke us in other ways--see #3061.",
        "createdAt": "2018-03-12T18:26:30Z",
        "updatedAt": "2018-03-12T18:26:30Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}