{
  "number": 5221,
  "title": "Visual Studio reuses MSBuild process although MSBuild node reuse is disabled",
  "body": "MSBuild Node reuse is disabled via Environment variable (MSBUILDDISABLENODEREUSE=1), but Visual Studio starts the MSBuild child process with /nodeReuse:true.\r\n\r\n\r\nAs we are developing an MSBuild task that is compiled and used in the same project, we are getting file locking issues, because of the kept alive msbuild processes.\r\n\r\n-----\r\n\r\nIssue created from feedback ticket: [AB#1055938](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1055938)",
  "state": "CLOSED",
  "createdAt": "2020-04-01T16:20:07Z",
  "updatedAt": "2024-02-21T17:04:25Z",
  "closedAt": "2020-06-26T15:36:10Z",
  "author": {
    "login": "benvillalobos"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.7 Preview 4"
  },
  "comments": {
    "nodes": [
      {
        "body": "Responded to the thread with a _permanent_ fix that I'll post here in case someone runs into this issue.\r\n\r\nhttps://github.com/microsoft/msbuild/pull/5144. Basically you need to set `TaskFactory=\"TaskHostFactory\"` as metadata on the task you're using.\r\n\r\nOr see the feedback ticket [here](https://developercommunity.visualstudio.com/content/problem/893220/visual-studio-reuses-msbuild-process-although-msbu.html)",
        "createdAt": "2020-04-09T21:12:07Z",
        "updatedAt": "2020-04-09T22:07:20Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I'd describe that as a long-term fix for the build-task-and-use-it-in-same-solution problem; it's more than a workaround :)",
        "createdAt": "2020-04-09T21:52:11Z",
        "updatedAt": "2020-04-09T21:52:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I totally knew that and posted that originally and never edited the post \ud83d\udc40 nope not me.\r\n\r\nThanks!",
        "createdAt": "2020-04-09T22:04:51Z",
        "updatedAt": "2020-04-09T22:04:51Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Gentle nudge @sabotageandi. Please see the [feedback ticket](https://developercommunity.visualstudio.com/content/problem/893220/visual-studio-reuses-msbuild-process-although-msbu.html) for my response.",
        "createdAt": "2020-05-01T16:42:13Z",
        "updatedAt": "2020-05-01T16:42:13Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "After some investigation it looks like MSBuild is launched differently for Design Time Builds compared to regular builds. These builds don't respect the environment variable `MSBUILDDISABLENODEREUSE` because they explicitly set nodeReuse to true.\r\n\r\nA point of discussion to have: Should we update the MSBuild API https://github.com/microsoft/msbuild/blob/9eb5d09e6cd262375e37a15a779d56ab274167c8/src/Build/BackEnd/BuildManager/BuildParameters.cs#L397 to respect the environment variable `MSBUILDDISABLENODEREUSE`, or should we kick it off to the CPS folks?\r\n\r\nFollow the link for the code on the CPS side of things (internal link): \r\nhttps://devdiv.visualstudio.com/DevDiv/_git/ProjectServices?path=%2Fsrc%2FMicrosoft.VisualStudio.ProjectServices%2FDesignTimeBuild%2FDesignTimeBuildScheduler.cs&version=GBmaster&line=635&lineEnd=635&lineStartColumn=21&lineEndColumn=44&lineStyle=plain",
        "createdAt": "2020-06-16T21:41:12Z",
        "updatedAt": "2020-06-16T21:41:12Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@lifengl do you know anything about the history of CPS explicitly setting `EnableNodeReuse=true`? Would you have a problem if we stopped respecting that (if the user has specified the undocumented environment-variable escape hatch)?",
        "createdAt": "2020-06-17T20:35:45Z",
        "updatedAt": "2020-06-17T20:35:45Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}