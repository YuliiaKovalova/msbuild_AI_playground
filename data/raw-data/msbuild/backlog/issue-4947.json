{
  "number": 4947,
  "title": "Cannot load project with ToolsVersion=\"15.0\"",
  "body": "Running Visual Studio 2019. Consider a C# project with `ToolsVersion` set to `15.0`:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\r\n  <PropertyGroup>\r\n  <!-- ... -->\r\n</Project>\r\n```\r\n\r\nThen loading the project throws an error. Why?\r\n\r\n```c#\r\nProjectCollection.GlobalProjectCollection.LoadProject(path);\r\n```\r\n\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: Microsoft.Build.Exceptions.InvalidProjectFileException: The tools version \"Current\" is unrecognized. Available tools versions are \"14.0\", \"2.0\", \"3.5\", \"4.0\".  C:\\Path\\Foo.csproj.\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args) in /_/src/Shared/ProjectErrorUtilities.cs:line 412\r\n   at Microsoft.Build.Evaluation.Project.Data.InitializeForEvaluation(IToolsetProvider toolsetProvider, IFileSystem fileSystem) in /_/src/Build/Definition/Project.cs:line 3245\r\n   at Microsoft.Build.Evaluation.Evaluator`4..ctor(IEvaluatorData`4 data, ProjectRootElement projectRootElement, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean profileEvaluation, Boolean interactive) in /_/src/Build/Evaluation/Evaluator.cs:line 212\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive) in /_/src/Build/Evaluation/Evaluator.cs:line 295\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) in /_/src/Build/Definition/Project.cs:line 2713\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) in /_/src/Build/Definition/Project.cs:line 2688\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) in /_/src/Build/Definition/Project.cs:line 2797\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) in /_/src/Build/Definition/Project.cs:line 516\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion) in /_/src/Build/Definition/ProjectCollection.cs:line 1150\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName) in /_/src/Build/Definition/ProjectCollection.cs:line 1070\r\n   at ...\r\n```",
  "state": "CLOSED",
  "createdAt": "2019-11-28T10:45:13Z",
  "updatedAt": "2024-10-29T15:08:14Z",
  "closedAt": "2024-10-29T15:08:13Z",
  "author": {
    "login": "znakeeye"
  },
  "labels": [],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "Solved it by installing `Microsoft.Build.Runtime`:\r\n\r\n```\r\nInstall-Package Microsoft.Build.Runtime -Version 16.3.0\r\n```",
        "createdAt": "2019-11-28T11:30:54Z",
        "updatedAt": "2019-11-28T11:30:54Z",
        "author": {
          "login": "znakeeye"
        }
      },
      {
        "body": "@znakeeye also see https://docs.microsoft.com/en-us/visualstudio/msbuild/updating-an-existing-application?view=vs-2019 -- it depends on your scenario, but you probably want to use MSBuildLocator in order to be able to load projects \"like Visual Studio\".",
        "createdAt": "2019-12-02T16:07:30Z",
        "updatedAt": "2019-12-02T16:07:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "It seems very hard to get this `Locator` to work in a unit test project. It keeps telling me this:\r\n\r\n> System.InvalidOperationException: Microsoft.Build.Locator.MSBuildLocator.RegisterInstance was called, but MSBuild assemblies were already loaded.\r\n>     Ensure that RegisterInstance is called before any method that directly references types in the Microsoft.Build namespace has been called.\r\n>     Loaded MSBuild assemblies: Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n>     Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.\r\n>   Stack Trace: \r\n\r\nSo I tried skipping the registration part, but then I get the original error as described above.",
        "createdAt": "2019-12-03T19:19:40Z",
        "updatedAt": "2019-12-03T19:19:40Z",
        "author": {
          "login": "znakeeye"
        }
      },
      {
        "body": "@znakeeye You must call Locator before entering any method that uses the MSBuild API. In unit test projects, that's often in a test-setup method (usually at the class or assembly level).",
        "createdAt": "2019-12-04T17:02:49Z",
        "updatedAt": "2019-12-04T17:02:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I have an exe that generates some c# classes and i am using \r\n\r\n`var project = new Microsoft.Build.Evaluation.Project(projectFile); `\r\n\r\nthis code to add items on the fly\r\n```\r\nforeach (var controller in workList)\r\n{\r\n      project.AddItem(\"Compile\", $@\"{targetFolder}\\{controller}\");\r\n }\r\n```\r\ni've installed these\r\n\r\n```\r\n<package id=\"Microsoft.Build\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n<package id=\"Microsoft.Build.Framework\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n<package id=\"Microsoft.Build.Runtime\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n<package id=\"Microsoft.Build.Tasks.Core\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n<package id=\"Microsoft.Build.Utilities.Core\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n```\r\n\r\nand getting this error\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: 'The tools version \"Current\" is unrecognized. Available tools versions are \"2.0\", \"3.5\", \"4.0\".  D:\\JoinersAgent2\\_work\\43\\s\\project.csproj\r\n```\r\ni can't figure it out.",
        "createdAt": "2020-02-26T14:43:45Z",
        "updatedAt": "2020-02-26T14:45:18Z",
        "author": {
          "login": "morrisond91"
        }
      },
      {
        "body": "@morrisond91 How did you resolved it?",
        "createdAt": "2020-08-17T06:41:51Z",
        "updatedAt": "2020-08-17T06:41:51Z",
        "author": {
          "login": "qub1n"
        }
      },
      {
        "body": "I was able to solve this issue by installing the nuget package `Microsoft.Build.Runtime` as indicated and/or setting the `MSBUILD_EXE_PATH` environment variable as indicated [here](https://github.com/dotnet/msbuild/issues/2369#issuecomment-323153193) and [here](https://github.com/dotnet/roslyn/issues/44746#issue-628419626).\r\n\r\n`Environment.SetEnvironmentVariable(\"MSBUILD_EXE_PATH\", @\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe\");`",
        "createdAt": "2020-11-09T05:04:00Z",
        "updatedAt": "2020-11-09T05:13:57Z",
        "author": {
          "login": "icnocop"
        }
      },
      {
        "body": "> I have an exe that generates some c# classes and i am using\r\n> \r\n> `var project = new Microsoft.Build.Evaluation.Project(projectFile); `\r\n> \r\n> this code to add items on the fly\r\n> \r\n> ```\r\n> foreach (var controller in workList)\r\n> {\r\n>       project.AddItem(\"Compile\", $@\"{targetFolder}\\{controller}\");\r\n>  }\r\n> ```\r\n> \r\n> i've installed these\r\n> \r\n> ```\r\n> <package id=\"Microsoft.Build\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n> <package id=\"Microsoft.Build.Framework\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n> <package id=\"Microsoft.Build.Runtime\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n> <package id=\"Microsoft.Build.Tasks.Core\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n> <package id=\"Microsoft.Build.Utilities.Core\" version=\"16.4.0\" targetFramework=\"net472\" />\r\n> ```\r\n> \r\n> and getting this error\r\n> \r\n> ```\r\n> Microsoft.Build.Exceptions.InvalidProjectFileException: 'The tools version \"Current\" is unrecognized. Available tools versions are \"2.0\", \"3.5\", \"4.0\".  D:\\JoinersAgent2\\_work\\43\\s\\project.csproj\r\n> ```\r\n> \r\n> i can't figure it out.\r\n\r\nWe see the same problem now after latest update of Visual Studio 2022 from 17.7.3 -> 17.7.4\r\nAnd I am also very interested in a solution that can fix this issue.\r\nThe error make no sense and we have not made any changes to the source code, only the Visual Studio update.",
        "createdAt": "2023-10-13T06:15:16Z",
        "updatedAt": "2023-10-13T06:15:16Z",
        "author": {
          "login": "notes2c"
        }
      }
    ]
  }
}