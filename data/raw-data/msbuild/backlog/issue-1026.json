{
  "number": 1026,
  "title": "Crossplat MSBuild and glob expansion",
  "body": "When MSBuild expands globs, it currently \n- uses the file system's path separator to stitch together path fragments that are coming from the recursive directory walk\n- uses the original string values for the path fragments already provided by the user\n\nOn windows there is the following behaviour:\n\n`**` expands to `a\\b\\c\\foo.cs`\n`a/**` expands to `a/b\\c\\foo.cs`\n`a\\**` expands to `a\\b\\c\\foo.cs`\n\nHowever, on crossplat msbuild we should choose whether to keep the current behaviour or change to some other things:\n- impose a standard slash indifferent of the OS: `a/**` expands to either `a\\b\\c\\foo.cs` or to `a/b/c/foo.cs` (depending on which slash we choose as the standard one).\n  - Pros:\n    - Project files are crossplatform. The user knows what slashes MSBuild uses so it can directly use them in conditions and such\n    - If we use `\\` as the standard, legacy project files won't break\n  - Cons:\n    - Task consuming the paths may break if they are using slash agnostic System.IO libraries\n- use the OS specific slashes\n  - Pros\n    - Task consuming the paths won't break if they are using slash agnostic System.IO libraries\n  - Cons\n    - Project files are not crossplatform. If the user has conditions based on paths, conditions might now evaluate differently on windows vs !windows\n    - Follows from the previous one: legacy project files are not crossplat if the user has conditions based on paths\n",
  "state": "CLOSED",
  "createdAt": "2016-09-14T20:44:45Z",
  "updatedAt": "2024-02-21T17:25:58Z",
  "closedAt": "2019-11-04T21:52:23Z",
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "needs-design",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "My two cents: this shouldn't matter, [if `\\` and `/` are treated as the same character in string comparisons](https://github.com/Microsoft/msbuild/issues/1024#issuecomment-248669947).\n\nYou should thus use `\\` in all project files, and when using glob expansion, it won't really matter what the result is, because `/` and `\\` will be treated interchangeably.\n",
        "createdAt": "2016-09-21T16:42:02Z",
        "updatedAt": "2016-09-21T16:42:02Z",
        "author": {
          "login": "jonpryor"
        }
      },
      {
        "body": "Another question: what about the ['?' wildcard](https://msdn.microsoft.com/en-us/library/ms171453.aspx#Anchor_3)? On Windows, '?' is an invalid filename character, but not on *nix/macOS. \n",
        "createdAt": "2016-09-26T20:01:12Z",
        "updatedAt": "2016-09-26T20:01:12Z",
        "author": {
          "login": "natemcmaster"
        }
      },
      {
        "body": "You have to escape `?` with `%3F` to have it treated as a literal. Same with the rest of the globbing chars.\n",
        "createdAt": "2016-09-26T23:42:11Z",
        "updatedAt": "2016-09-26T23:42:26Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Would be great if there was a standardised path seperator when writing paths to project files. For projects with collaborators on multiple platforms, adding and removing an item from the project shouldn't cause a path to be changed within the project file, from previoulsy using '/' to using '\\' etc - as this will then show as a change, when really nothing has changed.",
        "createdAt": "2017-01-07T01:33:59Z",
        "updatedAt": "2017-01-07T01:33:59Z",
        "author": {
          "login": "dazinator"
        }
      },
      {
        "body": "We have chosen to keep the current behavior. At this point, changing this would be a big breaking change for what does not look like a fantastic improvement.",
        "createdAt": "2019-11-04T21:52:23Z",
        "updatedAt": "2019-11-04T21:52:23Z",
        "author": {
          "login": "livarcocc"
        }
      }
    ]
  }
}