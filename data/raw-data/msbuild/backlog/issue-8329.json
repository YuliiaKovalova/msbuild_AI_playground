{
  "number": 8329,
  "title": "Ensure green test runs in VS",
  "body": "### Issue Description\r\n\r\nRunning unit tests in VS leads to some test failures - this should not be a case. VS-centric developer workflow should not be neglected\r\n\r\nClasses of problems to tackle:\r\n- [x] Tests using `ExecMSBuild` fail on core: https://github.com/dotnet/msbuild/issues/8313\r\n- [x] (Reported by @vlada-shubina) Some `BuildEnvironmentHelper_Tests` fail on core (extra RID in path) - https://github.com/dotnet/msbuild/pull/8348\r\n    ```\r\n    Shouldly.ShouldAssertException : BuildEnvironmentHelper.Instance.MSBuildToolsDirectory32\r\n        should be\r\n    \"C:\\Users\\jankrivanek\\AppData\\Local\\Temp\\lhywa2vr.vir\\2dfce9d58278472ea474ec9359cd7edd\\MSBuild\\Current\\Bin\"\r\n        but was\r\n    \"C:\\Users\\jankrivanek\\AppData\\Local\\Temp\\lhywa2vr.vir\\2dfce9d58278472ea474ec9359cd7edd\\MSBuild\\Current\\Bin\\amd64\"\r\n    ``` \r\n- [x] Tests marked with `TestPlatforms.AnyUnix` run on Windows (and can fail). Can we use https://github.com/xunit/xunit/issues/2073 here? - https://github.com/dotnet/msbuild/pull/8348\r\n- [x] Test marked with `SkipOnTargetFramework` run on excluded FW (and can fail) Can we use https://github.com/xunit/xunit/issues/2073 here? - https://github.com/dotnet/msbuild/pull/8348\r\n- [x] StringTool `RetainsLastStringWithGivenHashCode`: #8340  \r\n    ```\r\n    Shouldly.ShouldAssertException : _cache.GetDebugInfo()\r\n       should be\r\n    Microsoft.NET.StringTools.WeakStringCache+DebugInfo (-1703002807)\r\n        but was\r\n    Microsoft.NET.StringTools.WeakStringCache+DebugInfo (-1703002806)\r\n    ```\r\n- [ ] `ProjectItemSpecTooLong` (might be env setup on my machine) - related? https://github.com/dotnet/msbuild/issues/4247\r\n- [x] `ProjectGetterResultsInWindowsDriveEnumerationWarning` on Win (might be path specific?) - fixed by https://github.com/dotnet/msbuild/issues/7330\r\n- [x] `LogWarningUponProjectInstanceCreationFromDriveEnumeratingContent` & `LogWindowsWarningUponProjectInstanceCreationFromDriveEnumeratingContent` (env specific?) - https://github.com/dotnet/msbuild/issues/7330\r\n- [x] `EvaluationProfiler_Tests` (all) - no repro. (might have been caused by the bug in not unsetting the reverted change waves in tests)\r\n- [x] `LogWindowsWarningUponBuildingProjectWithDriveEnumeration` - likely just needs application of the following fix: https://github.com/dotnet/msbuild/pull/8366",
  "state": "OPEN",
  "createdAt": "2023-01-20T13:23:12Z",
  "updatedAt": "2024-03-06T09:14:43Z",
  "closedAt": null,
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "bug",
    "backlog",
    "Area: Our Own Build",
    "Priority:3",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "https://github.com/dotnet/msbuild/pull/8328 as inspiration for proper conditional skipping of tests",
        "createdAt": "2023-01-23T07:41:42Z",
        "updatedAt": "2023-01-23T07:41:42Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> Running unit tests in VS leads to some test failures\r\n\r\nJust wanted to mention that some of these issues reproduce on the command line as well. For example, `dotnet test` in `src\\Build.OM.UnitTests` on Windows happily runs Unix-only test cases such as `LogUnixWarningUponBuildingProjectWithDriveEnumeration`.",
        "createdAt": "2023-01-23T14:15:52Z",
        "updatedAt": "2023-01-23T14:15:52Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "> LogUnixWarningUponBuildingProjectWithDriveEnumeration\r\n\r\nIt seems Visual Studio ignores those attributes `[PlatformSpecific(TestPlatforms.AnyUnix)]`, whereas CI build filter tests based on them. I had the same situation with `BuildEnvironmentHelper_Tests` today.\r\n\r\nVisual Studio shows them as `failing`\r\n<img width=\"550\" alt=\"image\" src=\"https://user-images.githubusercontent.com/56045248/214146326-91984385-b1cc-4bc8-8e81-748cd3bdbd28.png\">\r\nbut they are still run. \r\n\r\nI'm not sure whether this is a problem in how VS handling traits,  or this is expected UX in VS, imo custom theory / fact attributes seems better solution as they work in VS and cmd and CI equally.",
        "createdAt": "2023-01-23T20:47:37Z",
        "updatedAt": "2023-01-23T20:47:37Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "Not related to VS Run, but when running test of x64: ` .\\build.cmd -test -ci /p:Platform=\"x64` \r\n`Microsoft.Build.Graph.UnitTests.IsolateProjectsTests.UndeclaredReferenceEnforcementShouldNormalizeFilePaths` took more than 1:30, after i killed the job.",
        "createdAt": "2023-01-24T11:17:42Z",
        "updatedAt": "2023-01-24T11:17:55Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "https://github.com/dotnet/msbuild/pull/8348 solves # 2, 3 and 4 in the list, and likely other cases as well. The Unix only cases will be skipped in VS now, as the tests running on unsupported framework. This should reduce number of red tests in VS.",
        "createdAt": "2023-01-24T17:24:22Z",
        "updatedAt": "2023-01-24T17:25:14Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "Tests which are still failing:\r\n```\r\nMicrosoft.Build.Utilities.UnitTests (net7.0): 1 test\r\nMicrosoft.Build.UnitTests.PrintLineDebugger_Tests.ArtifactsDirectoryLooksGood\r\n\r\nMicrosoft.Build.Utilities.UnitTests (net472): 1 test\r\nMicrosoft.Build.UnitTests.PrintLineDebugger_Tests.ArtifactsDirectoryLooksGood\r\n\r\n\r\nMicrosoft.Build.Tasks.UnitTests (net7.0): 13 tests + 1 hangs\r\nMicrosoft.Build.UnitTests.CreateItem_Tests.RecursiveDirOutOfProc - hangs\r\nMicrosoft.Build.UnitTests.PrintLineDebugger_Tests.ArtifactsDirectoryLooksGood\r\nMicrosoft.Build.UnitTests.MSBuildTask_Tests.ProjectItemSpecTooLong\r\nMicrosoft.Build.UnitTests.CreateItem_Tests.LogWindowsWarningUponItemCreationWithDriveEnumeration (3 sets)\r\nMicrosoft.Build.UnitTests.CreateItem_Tests.LogWindowsWarningUponCreateItemExecution (3 sets)\r\nMicrosoft.Build.Tasks.UnitTests.RoslynCodeTaskFactory_Tests.RoslynCodeTaskFactory_ReuseCompilation\r\nMicrosoft.Build.Tasks.UnitTests.ResourceManagement_Tests (4 tests)\r\n\r\n\r\nMicrosoft.Build.Tasks.UnitTests (net472): 8 tests\r\nMicrosoft.Build.UnitTests.PrintLineDebugger_Tests.ArtifactsDirectoryLooksGood\r\nMicrosoft.Build.UnitTests.MSBuildTask_Tests.ProjectItemSpecTooLong\r\nMicrosoft.Build.UnitTests.CreateItem_Tests.LogWindowsWarningUponItemCreationWithDriveEnumeration (3 sets)\r\nMicrosoft.Build.UnitTests.CreateItem_Tests.LogWindowsWarningUponCreateItemExecution (3 sets)\r\n\r\n\r\nMicrosoft.Build.Engine.UnitTests (net7.0): 55 tests\r\nMicrosoft.Build.Engine.UnitTests.EvaluationProfiler_Tests (12 tests) - also took 60 minutes\r\nMicrosoft.Build.Engine.UnitTests.BackEnd.TaskHostFactory_Tests (all tests) - 2 tests - took 10 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.RunningProxyBuildsOnOutOfProcNodesShouldIssueWarning - 2 sets took 10 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.ProxyCacheHitsOnPreviousCacheMissesShouldWork - took 40 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.ProjectCacheByVsScenarioWorks - took 40 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.ProjectCacheByBuildParametersAndGraphBuildWorks - took 30 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.ProjectCacheByBuildParametersAndBottomUpBuildWorks - took 35.1 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.ParallelStressTestForVsScenario - 2 sets - took 160.1 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.ParallelStressTest (1 data set) - took 20 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.CacheShouldNotGetQueriedForNestedBuildRequests - took 5 minutes\r\nMicrosoft.Build.Engine.UnitTests.ProjectCache.ProjectCacheTests.CacheShouldBeQueriedInParallelDuringGraphBuilds - 1 set - took 10 minutes\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.UndeclaredReferenceEnforcementShouldNormalizeFilePaths - 70 minutes\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.UndeclaredReferenceEnforcementShouldFailOnUndeclaredReference - 2 sets -  10 minutes\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.UndeclaredReferenceEnforcementShouldFailOnPreviouslyBuiltButUndeclaredReferences - 5 minutes\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.SkippedTargetsShouldNotTriggerCacheMissEnforcement\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.IsolationRelatedMessagesShouldNotBePresentInNonIsolatedBuilds\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.IsolationRelatedMessageShouldBePresentInIsolatedBuildsWithMessaging - 5 mintes\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.EnforcementsCanBeSkipped - 4 sets - 20 minutes\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.CacheEnforcementShouldFailWhenReferenceWasNotPreviouslyBuiltWithoutContinueOnError\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.CacheEnforcementShouldAcceptPreviouslyBuiltReferences - 2 sets - 10 minutes\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.CacheAndUndeclaredReferenceEnforcementShouldAcceptSelfReferences - 2 sets - 10 minutes\r\nMicrosoft.Build.Graph.UnitTests.IsolateProjectsTests.CacheAndUndeclaredReferenceEnforcementShouldAcceptCallTarget\r\nMicrosoft.Build.UnitTests.EscapingInProjects_Tests.SimpleScenarios.SemicolonInPropertyPassedIntoStringParam_UsingTaskHost\r\nMicrosoft.Build.UnitTests.EscapingInProjects_Tests.SimpleScenarios.ItemTransformContainingSemicolon_InTaskHost\r\nMicrosoft.Build.UnitTests.EscapingInProjects_Tests.SimpleScenarios.EscapedWildcardsShouldNotBeExpanded_InTaskHost\r\nMicrosoft.Build.UnitTests.PrintLineDebugger_Tests.ArtifactsDirectoryLooksGood\r\nMicrosoft.Build.UnitTests.MSBuildTask_Tests.ProjectItemSpecTooLong\r\nMicrosoft.Build.UnitTests.FileMatcherTest.DriveEnumeratingWildcardIsLoggedOnWindows (4 sets)\r\nMicrosoft.Build.UnitTests.BackEnd.TaskHost_Tests.TasksGetNoGlobalPropertiesIfNoneSpecified\r\nMicrosoft.Build.UnitTests.BackEnd.TaskHost_Tests.TasksCanGetGlobalProperties\r\nMicrosoft.Build.UnitTests.BackEnd.SdkResultOutOfProc_Tests.RunOutOfProcBuild - 5 minutes\r\nMicrosoft.Build.UnitTests.BackEnd.SdkResultOutOfProc_Tests.RunOutOfProcBuildWithTwoProjects - 5 minutes\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.VerifyMultipleRequestForSameProjectWithErrors_Simple\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.VerifyMultipleRequestForSameProjectWithErrors_OnErrorChain\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.VerifyMultipleRequestForSameProjectWithErrors_ErrorAndContinue\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.VerifyMultipleRequestForSameProjectWithErrors_DifferentEntrypoints\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.TestSimultaneousSubmissionsWithLegacyThreadingData_P2P_MP - do not run in VS\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.TaskInputLoggingIsExposedToTasks (2 data sets)\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.SimpleP2PBuildOutOfProc\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.SimpleP2PBuildInProc\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.SimpleBuildWithFailure\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.SimpleBuildOutOfProcess\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.ShouldBuildMutatedProjectInstanceWhoseProjectWasPreviouslyBuiltAsAP2PDependency\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.SequentialBuildsOfTheSameProjectAllowed\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.SequentialBuild\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.RequestedResultsAreSatisfied\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.Regress265010\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.Regress251333\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.Regress239661\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.ProjectInstanceTransfersToOOPNode\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.OverlappingBuildSubmissions\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.OutOfProcProjectInstanceBasedBuildDoesNotReloadFromDisk(2 data sets)\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.OutOfProcFileBasedP2PBuildSucceeds\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.OutOfProcEvaluationIdsUnique\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.MultiProcReentrantProjectWithCallTargetDoesNotFail\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.MsBuildForwardAllPropertiesFromChildLaunchChildNode\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.GraphBuildFail\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.ForwardNoPropertiesLaunchChildNodeDefault\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.ForwardNoPropertiesLaunchChildNode\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.FailedAfterTargetInP2PShouldCauseOverallBuildFailure_MultipleEntrypoints(1 data set)\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.ExplicitInprocAffinityGetsOverruledByDisableInprocNode\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.DisableInProcNode\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.CancelledBuildWithDelay40\r\nMicrosoft.Build.UnitTests.BackEnd.BuildManager_Tests.CacheLifetime\r\n\r\n\r\n\r\nMicrosoft.Build.Engine.UnitTests (net472): 12 tests\r\nMicrosoft.Build.UnitTests.PrintLineDebugger_Tests.ArtifactsDirectoryLooksGood\r\nMicrosoft.Build.UnitTests.MSBuildTask_Tests.ProjectItemSpecTooLong\r\nMicrosoft.Build.UnitTests.FileUtilities_Tests.FileOrDirectoryExistsNoThrowTooLongWithDotsRelative\r\nMicrosoft.Build.UnitTests.FileUtilities_Tests.FileOrDirectoryExistsNoThrowTooLongWithDots\r\nMicrosoft.Build.UnitTests.FileUtilities_Tests.FileExistsNoThrowTooLongWithDotsRelative\r\nMicrosoft.Build.UnitTests.FileUtilities_Tests.FileExistsNoThrowTooLongWithDots\r\nMicrosoft.Build.UnitTests.FileUtilities_Tests.DirectoryExistsNoThrowTooLongWithDotsRelative\r\nMicrosoft.Build.UnitTests.FileMatcherTest.DriveEnumeratingWildcardIsLoggedOnWindows (4 sets)\r\nMicrosoft.Build.Engine.UnitTests.BuildEnvironmentHelper_Tests.BuildEnvironmentFindsAmd64RunningInAmd64\r\n\r\n\r\nMicrosoft.Build.Engine.OM.UnitTests (net7.0): 4 tests\r\nMicrosoft.Build.UnitTests.OM.Instance.ProjectItemInstance_Tests.LogWindowsWarningUponBuildingProjectWithDriveEnumeration (4 sets)\r\n\r\nMicrosoft.Build.Engine.OM.UnitTests (net472): 4 tests\r\nMicrosoft.Build.UnitTests.OM.Instance.ProjectItemInstance_Tests.LogWindowsWarningUponBuildingProjectWithDriveEnumeration (4 sets)\r\n\r\n\r\nMicrosoft.Build.CommandLine.UnitTests (net472): 1 test\r\nMicrosoft.Build.Engine.UnitTests.MSBuildServer_Tests.MSBuildServerTest\r\n\r\n```\r\n",
        "createdAt": "2023-02-16T16:31:18Z",
        "updatedAt": "2023-02-20T15:31:12Z",
        "author": {
          "login": "vlada-shubina"
        }
      },
      {
        "body": "Related issue: https://github.com/dotnet/msbuild/issues/8457",
        "createdAt": "2023-02-16T16:31:47Z",
        "updatedAt": "2023-02-16T16:31:47Z",
        "author": {
          "login": "vlada-shubina"
        }
      }
    ]
  }
}