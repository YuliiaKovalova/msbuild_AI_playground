{
  "number": 9781,
  "title": "Introduce analyzer or some other mechanism to flag builds that invoke the compiler (i.e. CoreCompile target) with same inputs and outputs to avoid race conditions",
  "body": "Similar to https://github.com/dotnet/msbuild/issues/9553\r\n\r\nhttps://github.com/dotnet/command-line-api/pull/2336 is a good example to talk about the issue. `System.CommandLine.csproj` was built twice because two additional global properties were passed in when referencing it from a specific test project. The global properties didn't affect the CoreCompile target and the compiled output at all. This resulted in a race condition as two processes were trying to copy to the same output at the same time:\r\n\r\n> MSB4018: System.IO.IOException: The process cannot access the file '/vmr/src/command-line-api/artifacts/bin/System.CommandLine/Release/net7.0/System.CommandLine.deps.json' because it is being used by another process. [/vmr/src/command-line-api/src/System.CommandLine/System.CommandLine.csproj::TargetFramework=net7.0]\r\n\r\n99% of the time this is unintentional and it would be great if msbuild could flag that somehow via an analyzer or some other means.",
  "state": "OPEN",
  "createdAt": "2024-02-26T12:10:37Z",
  "updatedAt": "2024-02-26T16:10:00Z",
  "closedAt": null,
  "author": {
    "login": "ViktorHofer"
  },
  "labels": [
    "Feature: Warning Waves",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Yeah this is my top analyzer request. @JanKrivanek do we not have a tracking bug? I would have sworn we did but don't see one.",
        "createdAt": "2024-02-26T15:13:00Z",
        "updatedAt": "2024-02-26T15:13:00Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Adding to https://github.com/dotnet/msbuild/issues/9630",
        "createdAt": "2024-02-26T16:09:58Z",
        "updatedAt": "2024-02-26T16:09:58Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}