{
  "number": 5130,
  "title": "Read evaluation time value of property via CLI command",
  "body": "It'd be super cool if we were able to read a given property value by querying it from the command line.\r\n\r\n# Example\r\nGiven the following project file\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <Extensions>cs</Extensions>\r\n    <Extensions>$(Extensions);vb</Extensions>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n```posh\r\n$extensions = dotnet msbuild sample.proj getproperty \"Extensions\"\r\n# $extension = \"cs;vb\"\r\n```\r\n\r\n# UseCase\r\n\r\nLet's say Alice is a .NET developer writing her own library which she plans to distribute via NuGet.\r\nShe's got her new CSProj goodness up to snuff so that everything is really just a matter of `dotnet pack`, `dotnet test`, etc.\r\n\r\nBecause she doesn't like generating version strings on-the-fly and instead much rather checks in the version string into a `Directory.Build.props` file at the root of the repository so that all projects in the repository get this version property set.\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <Version>1.3.3.7</Version>\r\n    <Author>Alice</Author>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\nNow that she's ready for bringing her CICD game up to snuff;\r\nfor that she wants to use PowerShell.\r\n```posh\r\ndotnet test librarytests.csproj\r\ndotnet pack library.csproj\r\ndotnet nuget push library.nupkg -source X -k XAPIKey\r\n```\r\nBecause she doesn't like msbuild target writing and she's forced by the ci service provider to do some magic with remotes in the powershell script already, she would like to `git tag / git push` directly in powershell.\r\n\r\nBut now she has a problem: Where does she get the current version string from? She doesn't want to move the version string into the powershell script, because that would mean that her local builds in VS would fall back to version 1.0.0. She also doesn't want to keep both variables.\r\nAt the end of the day she gives up, writes a target that generates a file with the string which she may read from powershell afterwards.\r\n\r\n\r\n*Instead of forcing the file writing path, i propose that we offer a read property command that we may use to read a specific property after evaluation.*\r\n\r\n```posh\r\n$version = dotnet msbuild src/library.csproj /g:\"version\"\r\ngit tag $version\r\ngit push origin $version\r\n```\r\n",
  "state": "CLOSED",
  "createdAt": "2020-02-17T13:07:03Z",
  "updatedAt": "2024-02-21T17:05:02Z",
  "closedAt": "2020-02-18T22:42:26Z",
  "author": {
    "login": "MeikTranel"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is an interesting idea; we're tracking it as #3911.",
        "createdAt": "2020-02-18T22:42:26Z",
        "updatedAt": "2020-02-18T22:42:26Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}