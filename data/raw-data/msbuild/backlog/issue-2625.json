{
  "number": 2625,
  "title": "ReferenceTable.ComputeClosure is called twice",
  "body": "While profiling the build of a .NET Core console project I realized that ReferenceTable.ComputeClosure is called twice from ResolveAssemblyReference. Here's the dottrace output:\r\n\r\n![image](https://user-images.githubusercontent.com/95136/31428118-86e0afb0-ae1e-11e7-9bcf-c9bacc595fc9.png)\r\n\r\nThe calls are here:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/3fe75d144ab49f8ae1c30754d7d6538f6357e36d/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs#L2159\r\n\r\nAnd here:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/3fe75d144ab49f8ae1c30754d7d6538f6357e36d/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs#L2201\r\n\r\n/cc @davkean @cdmihai \r\n",
  "state": "CLOSED",
  "createdAt": "2017-10-11T07:54:11Z",
  "updatedAt": "2024-02-21T17:16:16Z",
  "closedAt": "2018-09-07T16:32:56Z",
  "author": {
    "login": "davidfowl"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.6"
  },
  "comments": {
    "nodes": [
      {
        "body": "I dug into this a little and it seems like the process is:\r\n\r\n- Resolve the closure using an less than optimal algorithm\r\n- Run the unification algorithm to find conflicts\r\n- Resolve the closure using an less than optimal algorithm using the resolved conflicts. Interestingly, if there are no conflicts it *still* re-runs the algorithm.\r\n- Run the unification algorithm to find conflicts again",
        "createdAt": "2017-10-13T04:48:35Z",
        "updatedAt": "2017-10-13T04:48:35Z",
        "author": {
          "login": "davidfowl"
        }
      },
      {
        "body": "\ud83d\udc4d \ud83d\ude04 ",
        "createdAt": "2018-09-07T17:11:36Z",
        "updatedAt": "2018-09-07T17:11:36Z",
        "author": {
          "login": "davidfowl"
        }
      }
    ]
  }
}