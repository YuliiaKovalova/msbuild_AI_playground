{
  "number": 6124,
  "title": "Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll sometimes does not write warning/errors to console?",
  "body": "### Issue Description\r\n<!--\r\n* Please include a clear and concise description of the problem.\r\n-->\r\n\r\nAfter we upgraded from VS2019Update5 to VS2019Update7 we see the following occurring every once in a while:\r\n- MSBuild does not seem to 'report' build issues to the AzureDevOps server, we only see \"MSBuild exited with exit code 1\"\r\n\r\n### Steps to Reproduce\r\n\r\nUnfortunately we cannot reproduce it 1 on 1.\r\nIt happens to occur every once in a while for a ~2 hour build and we build several feature branches a night.\r\n\r\n### Expected Behavior\r\n\r\nMSBuild/azure-pipelines-agent to correctly report all errors that occurred during a build\r\n\r\n### Actual Behavior\r\n\r\nBuild reported \"MSBuild exited with code 1\", no errors visible in the AzureDevOps Server Build page.\r\nThe related binlog file does contain all errors\r\n\r\n### Analysis\r\n<!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n-->\r\n\r\nI tried to investigate and what I can gather is the following:\r\n- The azure-pipelines-tasks MSBuild Task uses the Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll to process MSBuild events (like errors/warnings) and does a Console.WriteLine($\"##vso[task.logissue on receving of certain MSBuild messages.\r\n- This ##vso[task.logissue console output gets process by the azure-pipelines-agent so the errors are nicely reported in the AzureDevOps Server\r\n\r\nHowever, it seems that MSBuild might have stopped \"printing\" certain console output (maybe for a specific MSBuild node?) and this is causing errors to not be reported in AzureDevOps Server.\r\n\r\nThe binlog files of these 'wrong' builds correctly contain the right errors reported by MSBuild, only the build summary/reporting in AzureDevOps server is incorrect.\r\n\r\nThis leads me to believe that there is a scenario where (some) MSBuild nodes stop printing to the console that we seem to be hitting with a fair bit of consistency.\r\n(searching existing issues shows there are other console output related issues, but I wanted to record this specific instance as a separate one)\r\n\r\n### Versions & Configurations\r\n\r\nMSBuild info:\r\nMicrosoft (R) Build Engine version 16.7.0+b89cb5fde for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n16.7.0.37604\r\n\r\nazure-pipelines-task info:\r\nTask         : MSBuild\r\nDescription  : Build with MSBuild\r\nVersion      : 1.166.2\r\nAuthor       : Microsoft Corporation\r\nHelp         : https://docs.microsoft.com/azure/devops/pipelines/tasks/build/msbuild\r\n\r\nBuild Servers are running Windows Server 2016\r\nazure-pipelines agent: 2.175.2\r\nAzureDevOps Server 2020 Dev18.M170.6\r\n\r\n### Attach a binlog\r\n\r\nI can provide binlog files (privately), but as already mentioned the binlog files seem to be fine.",
  "state": "CLOSED",
  "createdAt": "2021-02-04T16:35:29Z",
  "updatedAt": "2021-05-20T17:13:25Z",
  "closedAt": "2021-05-20T17:13:25Z",
  "author": {
    "login": "japj"
  },
  "labels": [
    "bug",
    "Area: Logging",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: Does this happen with printing debug information that won't be processed by azure devops?\r\nCan you reproduce this locally?",
        "createdAt": "2021-02-10T16:47:32Z",
        "updatedAt": "2021-02-10T16:47:32Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> Does this happen with printing debug information that won't be processed by azure devops?\r\n\r\nI'm not about the exact context/nature of this question.\r\n\r\nExample scenario that we are currently looking into:\r\n- MSBuild Project File is running a Target which does an Exec of Ant\r\n- Ant is running a (java) build and tests\r\n- The build process and testing progress are logged to the BuildPhase logging and visible in the binlog (do you consider this \"debug information that won't be processed by azure devops\"?)\r\n- There is a java test that fails, this is correctly reported by MSBuild in the binlog and in the agent Buildphase logging\r\n- The buildphase logging does not contain the ##[error] at the relevant MSBuild error lines\r\n  - note this ##[error] was expected to be generated by the Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll console log command\r\n\r\nExample correct Buildphase logging:\r\n```\r\n##[error]C:\\somefolder\\Java.targets(109,9): Error : [junit] TEST someTest FAILED [C:\\agent\\_work\\1\\s\\someproject.proj]\r\nC:\\somefolder\\Java.targets(109,9): Error : [junit] TEST someTest FAILED [C:\\agent\\_work\\1\\s\\someproject.proj] [C:\\agent\\_work\\1\\s\\somesolution.sln]\r\n```\r\n\r\nExample incorrect Buildphase logging:\r\n```\r\nC:\\somefolder\\Java.targets(109,9): Error : [junit] TEST someTest FAILED [C:\\agent\\_work\\1\\s\\someproject.proj] [C:\\agent\\_work\\1\\s\\somesolution.sln]\r\n```\r\n\r\n> Can you reproduce this locally?\r\n\r\nSince this a fairly large build we have not looked into reproducing this locally.\r\n\r\nWould it also be possible to try and reproduce this issue by replaying the binlog file without running the actual build?",
        "createdAt": "2021-02-16T11:12:18Z",
        "updatedAt": "2021-02-16T11:12:18Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "Hello @BenVillalobos, we have reproduced a scenario where the issue occurs within 6 minutes. This is a scenario that includes the InstallShield MSBuild task (we have raw build-phase logging, binlog files, etc that contains private information).\r\n\r\nShould we proceed with making a regular MS case (through our AzureDevOps support) or how can we best handle this?",
        "createdAt": "2021-02-22T10:21:54Z",
        "updatedAt": "2021-02-22T10:21:54Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "@japj Yep! You can file feedback at [Developer Community](https://developercommunity.visualstudio.com/spaces/8/index.html) and include confidential-to-Microsoft attachments. Please link the issue here so I can expedite routing it to our team.\r\n\r\n> Would it also be possible to try and reproduce this issue by replaying the binlog file without running the actual build?\r\n\r\nYes, you can replay the binlog on the command line. We often do this with `-flp:v=diag` to get a raw text file of all messages.",
        "createdAt": "2021-02-22T18:07:03Z",
        "updatedAt": "2021-02-22T18:07:03Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos reported the issue (incl private logfiles) at https://developercommunity2.visualstudio.com/t/Error-msbuildexe-exited-with-code-1/1346765",
        "createdAt": "2021-02-23T13:27:02Z",
        "updatedAt": "2021-02-23T13:27:02Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "@BenVillalobos we did a replay of the (developercommunity) attached binlog and can reproduce the issue by running the binlog through the MSBuild_c6c4c611-aa2e-4a33-b606-5eaba2196824\\1.166.2\\ps_modules\\MSBuildHelpers\\Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll\r\n\r\nOnly one occurrence of `##vso[task.logissue type=Warning;` (logged by the DistributedTask) exists, while more warnings are present (and shown yellow by MSBuild), no errors seem to be processed at all.\r\n\r\nHope this helps with reproducing on your end/finding the actual issue!",
        "createdAt": "2021-02-23T13:47:38Z",
        "updatedAt": "2021-02-23T13:47:38Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "@BenVillalobos did you a chance yet to look at the logging? thanks in advance!",
        "createdAt": "2021-02-25T14:08:41Z",
        "updatedAt": "2021-02-25T14:08:41Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "@BenVillalobos I came across https://github.com/microsoft/azure-pipelines-tasks/issues/14211, which might be in the same area? Not sure atm if this relates to the problem we have, but at least it seems to be another case where MSBuild is somehow not correctly reporting error/warnings in combination with the distributedlogger",
        "createdAt": "2021-02-25T19:21:08Z",
        "updatedAt": "2021-02-25T19:21:08Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "@BenVillalobos I have been able reproduce the error by replaying the binlog with msbuild 16.6 (from dotnet 3.1.302)\r\n\r\nInitially the following is shown\r\n```\r\n##vso[task.logissue type=Warning;sourcepath=<file>;linenumber=<line>;columnnumber=0;code=MIDL2362;]<warning>' \r\n<file>(<line>): <warning>' \r\n##\r\n```\r\nlater in the replay, no more `##vso[task.logissue` output is shown\r\n\r\nUnfortunately the binlog file format is version 9, so I cannot replay with msbuild 16.5",
        "createdAt": "2021-03-17T09:01:13Z",
        "updatedAt": "2021-03-17T09:01:13Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "This might be an interaction between MSBuild and the distributed logger. Unfortunately I don\u2019t have any source code to that to fully understand, but replaying it with the vs debugger is possible. It looks like there is something with BuildEventContext lookup handling and logging/postpone logging of the error/warnings and orphan projects (using vs debug disassemble code)?",
        "createdAt": "2021-03-30T21:15:06Z",
        "updatedAt": "2021-03-30T21:15:06Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "For future reference, the Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll is from https://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/Common/MSBuildHelpers/make.json, which is embedded in the MSBuild and VisualStudio agent tasks.",
        "createdAt": "2021-04-07T04:44:21Z",
        "updatedAt": "2021-04-07T04:44:21Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "I was able to reproduce locally; we think it's a bug in `Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll`, I'm tracking down the source code and the owners",
        "createdAt": "2021-04-07T04:49:59Z",
        "updatedAt": "2021-04-07T04:49:59Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "FYI @anatolybolshakov we think there's an issue in `Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll` where some projects always remain orphaned, so their warnings/errors are never printed to the console.\r\n\r\n**To reproduce:** \r\ndownload the binlog from https://developercommunity2.visualstudio.com/t/Error-msbuildexe-exited-with-code-1/1346765\r\n\r\n```\r\nmsbuild bld-bf.5168.Win32.binlog /m /dl:CentralLogger,\"Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll\";\"RootDetailId=...|SolutionDir=C:\\temp\\japj\"*ForwardingLogger,\"Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll\"\r\n```\r\n\r\n**Expected:** should print numerous errors\r\n\r\n**Actual:** only prints one `##vso[task.logissue type=Warning`",
        "createdAt": "2021-04-07T05:04:31Z",
        "updatedAt": "2021-04-07T05:04:31Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "See also https://github.com/microsoft/azure-pipelines-tasks/issues/14255",
        "createdAt": "2021-04-07T05:21:52Z",
        "updatedAt": "2021-04-07T05:21:52Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "It doesn't preserve the parent-child relationship between projects, and orphans never find their parent.",
        "createdAt": "2021-04-07T05:54:57Z",
        "updatedAt": "2021-04-07T05:54:57Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Hi @anatolybolshakov , did you have a chance to look at the distributed task logger sources?",
        "createdAt": "2021-04-14T16:43:31Z",
        "updatedAt": "2021-04-14T16:43:31Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "What is the best repo to track this issue to get clear on the progress (if it is not a MSBuild issue)?",
        "createdAt": "2021-04-22T08:03:38Z",
        "updatedAt": "2021-04-22T08:03:38Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "Hi @japj we are working on more prioritized issues at the moment, will let you know once we have any updates.",
        "createdAt": "2021-04-22T10:10:45Z",
        "updatedAt": "2021-04-22T10:10:45Z",
        "author": {
          "login": "anatolybolshakov"
        }
      },
      {
        "body": "> Hi @japj we are working on more prioritized issues at the moment, will let you know once we have any updates.\r\n\r\nHI Anatoly,\r\n\r\nhow can we move up the prio for this issue?\r\n\r\nWe have about 800 developers working with azure devops server who are running in this error day by day .\r\n\r\nthx for your help",
        "createdAt": "2021-04-26T14:01:00Z",
        "updatedAt": "2021-04-26T14:01:00Z",
        "author": {
          "login": "Stevek83"
        }
      },
      {
        "body": "@anatolybolshakov it looks like MSBuild.Logger.BuildEventContextComparer.cs in Microsoft.TeamFoundation.DistributedTask.MSBuild.Logger.dll has an implementation for Equals and GetHashCode from 2015 (when comparing these to https://github.com/dotnet/msbuild/blob/main/src/Framework/BuildEventContext.cs history).\r\n\r\nI \"patched\" this MSBuild.Logger.BuildEventContextComparer locally with calls to the (new) MSBuild BuildEventContext implementation and when I replay my binlog I get the correct output, e.g. `##vso[task.logissue type=Error;sourcepath=....` lines are now present where they were previously not present.\r\n\r\nSo I think this issue probably needs to move to the https://github.com/microsoft/azure-pipelines-tasks repository, as it needs to be fixed there with a new version of the Common MSBuildHelpers package (and that then needs to be integrated in all the tasks that use it)\r\n\r\n",
        "createdAt": "2021-05-04T06:32:59Z",
        "updatedAt": "2021-05-04T06:32:59Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "@anatolybolshakov can this fix be taken along in the upcoming AzureDevOps Server 2020 Update 1 (there is currently a RC2 out, but I don't know when the final release is exactly planned)",
        "createdAt": "2021-05-04T06:48:16Z",
        "updatedAt": "2021-05-04T06:48:16Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "FYI @anatolybolshakov , I changed:\r\n```c#\r\nnamespace MSBuild.Logger\r\n{\r\n\tinternal sealed class BuildEventContextComparer : IEqualityComparer<BuildEventContext>\r\n\t{\r\n\t\tpublic int GetHashCode(BuildEventContext x)\r\n\t\t{\r\n\t\t\treturn x.ProjectContextId + (x.NodeId << 24);\r\n\t\t}\r\n        }\r\n}\r\n```\r\n\r\ninto\r\n\r\n```c#\r\nnamespace MSBuild.Logger\r\n{\r\n\tinternal sealed class BuildEventContextComparer : IEqualityComparer<BuildEventContext>\r\n\t{\r\n\r\n\t\tpublic int GetHashCode(BuildEventContext x)\r\n\t\t{\r\n\t\t\treturn x.GetHashCode();\r\n\t\t\t// using the MSBuild provided GetHashCode, since the MSBuild internal BuildEventContext.GetHashCode() has evolved a lot since the below line:\r\n\t\t\t// return x.ProjectContextId + (x.NodeId << 24);\r\n\t\t}\r\n        }\r\n}\r\n```\r\n\r\n(and a similar change for the `public bool Equals(BuildEventContext x, BuildEventContext y)`",
        "createdAt": "2021-05-17T11:49:41Z",
        "updatedAt": "2021-05-17T11:49:41Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "We have been running the fix for several days now and just ran into another case of only \"MSBuild exited with code 1\".\r\nSo the fix is (unfortunately) not complete yet.\r\n\r\nIt seems the `GetExternalProjectEventContext` logic also interacts with the GetHashCode in a way that is not clear to me.\r\nSo although the current solution helps in a lot of cases, there is still an edge case that has an issue.\r\n\r\nI have uploaded an 78kb binlog file showcasing this to https://developercommunity2.visualstudio.com/t/Error-msbuildexe-exited-with-code-1/1346765",
        "createdAt": "2021-05-20T13:37:57Z",
        "updatedAt": "2021-05-20T13:37:57Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "Hey folks, closing this issue since it's not MSBuild. Please continue the conversation over at https://github.com/microsoft/azure-pipelines-tasks/issues/14863 \r\n\r\nSide note: Was unable to use a nice issue-mover to carry the entire conversation over there \ud83d\ude1f",
        "createdAt": "2021-05-20T17:13:25Z",
        "updatedAt": "2021-05-20T17:13:25Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}