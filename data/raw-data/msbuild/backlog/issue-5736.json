{
  "number": 5736,
  "title": "Allocating exactly same ImmutableDictionary.Comparer in ProjectMetadataInstance dictionary",
  "body": "I believe using immutable dictionary inside ProjectInstance is a new change. But those dictionaries doesn't share the same comparer. It leads 850k of exactly same comparer objects loaded in the memory after loading Roslyn.sln.\r\n\r\nIt should be straight to fix: please create a shared empty collection (after calling WithComparer) to be the base collection to start with instead of calling WithComparer on every instance. + @ladipro & @panopticoncentral : i think this is related to recent changes in this area.\r\n\r\nName | Exc % | Exc | Exc Ct | Inc % | Inc | Inc Ct\r\n-- | -- | -- | -- | -- | -- | --\r\n\\|\\| \u00a0+ System.Collections.Immutable!Immutable.ImmutableDictionary+Comparers | 0.2 | 853,936 | 53,371 | 0.2 | 853,936 | 53,371\r\n\r\nHere are some samples:\r\n\r\n```\r\n0:000> !do 0x20a36144\r\nName:        System.Collections.Immutable.ImmutableDictionary`2+Comparers[[System.String, mscorlib],[Microsoft.Build.Execution.ProjectMetadataInstance, Microsoft.Build]]\r\nMethodTable: 261858d4\r\nEEClass:     797915d4\r\nSize:        16(0x10) bytes\r\nFile:        C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\PrivateAssemblies\\System.Collections.Immutable.dll\r\nFields:\r\n      MT    Field   Offset                 Type VT     Attr    Value Name\r\n733890fc  400008a        4 ...Canon, mscorlib]]  0 instance 20aceb0c _keyComparer\r\n733890fc  400008b        8 ...Canon, mscorlib]]  0 instance 2b6bf014 _valueComparer\r\n7976a7f4  4000089        0 ...Canon, mscorlib]]  0   shared   static Default\r\n    >> Domain:Value dynamic statics NYI 01467068:NotInit  <<\r\n0:000> !do 0x20a4395c\r\nName:        System.Collections.Immutable.ImmutableDictionary`2+Comparers[[System.String, mscorlib],[Microsoft.Build.Execution.ProjectMetadataInstance, Microsoft.Build]]\r\nMethodTable: 261858d4\r\nEEClass:     797915d4\r\nSize:        16(0x10) bytes\r\nFile:        C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\PrivateAssemblies\\System.Collections.Immutable.dll\r\nFields:\r\n      MT    Field   Offset                 Type VT     Attr    Value Name\r\n733890fc  400008a        4 ...Canon, mscorlib]]  0 instance 20aceb0c _keyComparer\r\n733890fc  400008b        8 ...Canon, mscorlib]]  0 instance 2b6bf014 _valueComparer\r\n7976a7f4  4000089        0 ...Canon, mscorlib]]  0   shared   static Default\r\n    >> Domain:Value dynamic statics NYI 01467068:NotInit  <<\r\n0:000> !do 0x20a43a8c\r\nName:        System.Collections.Immutable.ImmutableDictionary`2+Comparers[[System.String, mscorlib],[Microsoft.Build.Execution.ProjectMetadataInstance, Microsoft.Build]]\r\nMethodTable: 261858d4\r\nEEClass:     797915d4\r\nSize:        16(0x10) bytes\r\nFile:        C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\PrivateAssemblies\\System.Collections.Immutable.dll\r\nFields:\r\n      MT    Field   Offset                 Type VT     Attr    Value Name\r\n733890fc  400008a        4 ...Canon, mscorlib]]  0 instance 20aceb0c _keyComparer\r\n733890fc  400008b        8 ...Canon, mscorlib]]  0 instance 2b6bf014 _valueComparer\r\n7976a7f4  4000089        0 ...Canon, mscorlib]]  0   shared   static Default\r\n    >> Domain:Value dynamic statics NYI 01467068:NotInit  <<\r\n```",
  "state": "CLOSED",
  "createdAt": "2020-09-14T00:25:26Z",
  "updatedAt": "2024-02-21T14:16:50Z",
  "closedAt": "2020-09-23T15:44:20Z",
  "author": {
    "login": "lifengl"
  },
  "labels": [
    "Area: Performance",
    "under-investigation",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Yes, I think this comes out of the change @rainersigwald made to move to immutable dictionaries.",
        "createdAt": "2020-09-15T04:54:08Z",
        "updatedAt": "2020-09-15T04:54:08Z",
        "author": {
          "login": "panopticoncentral"
        }
      }
    ]
  }
}