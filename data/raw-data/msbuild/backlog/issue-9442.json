{
  "number": 9442,
  "title": "[Bug]: Enclosed target list works differently in PWS and CDM",
  "body": "### Issue Description\r\n\r\nEnclosed target list works differently in PWS and CDM\r\n\r\n```cmd\r\nPWS> msbuild /t:`\"Clean`;Build`\" QuotedTargetRepro.csproj - FAIL\r\nPWS> msbuild /t:\"Clean;Build\" QuotedTargetRepro.csproj - SUCCESS\r\nCMD> msbuild /t:\"Clean;Build\" QuotedTargetRepro.csproj - FAIL\r\n```\r\n\r\nI believe we shall support `/t:\"Clean;Build\"` in both powershell and command line terminal.\r\n\r\nRelated to: #9376\r\n\r\n### Steps to Reproduce\r\n- CMD> dotnet new console\r\n- CMD> msbuild /t:\"Clean;Build\" console.csproj\r\n\r\n### Expected Behavior\r\n\r\n`CMD> msbuild /v:m /graph:false /t:\"Clean;Build\" QuotedTargetRepro.csproj - SUCCESS`\r\n\r\n### Actual Behavior\r\n\r\n`CMD> msbuild /v:m /graph:false /t:\"Clean;Build\" QuotedTargetRepro.csproj - FAIL`\r\n\r\n### Analysis\r\n\r\n-\r\n\r\n### Versions & Configurations\r\n\r\n-",
  "state": "CLOSED",
  "createdAt": "2023-11-21T10:54:34Z",
  "updatedAt": "2024-02-21T14:02:58Z",
  "closedAt": "2023-12-04T09:45:26Z",
  "author": {
    "login": "rokonec"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "f-alizada"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "A few more PowerShell 7.4.0 cases on Windows:\r\n\r\n```\r\nPS> $PSNativeCommandArgumentPassing = [System.Management.Automation.NativeArgumentPassingStyle]::Windows\r\nPS> dotnet msbuild -t:\"Clean;Build\" QuotedTargetRepro.csproj # OK\r\nPS> dotnet msbuild --% -t:\"Clean;Build\" QuotedTargetRepro.csproj # FAIL: The target \"Clean;Build\" does not exist in the project.\r\nPS> dotnet msbuild -t:`\"Clean`;Build`\" QuotedTargetRepro.csproj # FAIL: The target \"Clean;Build\" does not exist in the project.\r\nPS> dotnet msbuild --% -t:`\"Clean`;Build`\" QuotedTargetRepro.csproj # FAIL: The target \"`Clean`;Build`\" does not exist in the project.\r\nPS> dotnet msbuild \"-t:Clean;Build\" QuotedTargetRepro.csproj # OK\r\nPS> dotnet msbuild --% \"-t:Clean;Build\" QuotedTargetRepro.csproj # OK\r\n```\r\n\r\n```\r\nPS> $PSNativeCommandArgumentPassing = [System.Management.Automation.NativeArgumentPassingStyle]::Standard\r\nPS> dotnet msbuild -t:\"Clean;Build\" QuotedTargetRepro.csproj # OK\r\nPS> dotnet msbuild --% -t:\"Clean;Build\" QuotedTargetRepro.csproj # FAIL: The target \"Clean;Build\" does not exist in the project.\r\nPS> dotnet msbuild -t:`\"Clean`;Build`\" QuotedTargetRepro.csproj # FAIL: The target \"Clean;Build\" does not exist in the project.\r\nPS> dotnet msbuild --% -t:`\"Clean`;Build`\" QuotedTargetRepro.csproj # FAIL: The target \"`Clean`;Build`\" does not exist in the project.\r\nPS> dotnet msbuild \"-t:Clean;Build\" QuotedTargetRepro.csproj # OK\r\nPS> dotnet msbuild --% \"-t:Clean;Build\" QuotedTargetRepro.csproj # OK\r\n```\r\n\r\nSo `$PSNativeCommandArgumentPassing` did not change the results after all.  But perhaps it would make a difference on non-Windows.",
        "createdAt": "2023-11-21T13:07:14Z",
        "updatedAt": "2023-11-21T13:07:14Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "With cmd the error message is\r\n\r\n```\r\nerror MSB4057: The target \"clean;build\" does not exist in the project.\r\n```\r\n\r\nNote that the semi-colon is the command separator in *nix shells (e.g. bash, zsh) and `dotnet msbuild -t:clean;build QuotedTargetRepro.csproj` will fail with an error because `build QuotedTargetRepro.csproj` will be taken as a separate command.\r\n\r\nIn a *nix shell, quotes are **required** when a list is passed to an msbuild switch.",
        "createdAt": "2023-11-21T13:11:47Z",
        "updatedAt": "2023-11-21T13:22:39Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "Possibly supersedes https://github.com/dotnet/msbuild/issues/9376 - please decide the fate of that bug and associated PR (can be done upon fixing this one)",
        "createdAt": "2023-11-28T09:41:00Z",
        "updatedAt": "2023-11-28T09:41:00Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Should the same behavior be utilized for all switches that are specified as multi-values-allowed and unquote?\r\n\r\nhttps://github.com/dotnet/msbuild/blob/5fcddc790f4eeaf953a3d283e39751dd0e1f2992/src/MSBuild/CommandLineSwitches.cs#L229-L282",
        "createdAt": "2023-11-28T18:39:04Z",
        "updatedAt": "2023-11-28T18:39:04Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> Should the same behavior be utilized for all switches that are specified as multi-values-allowed and unquote?\r\n> \r\n> https://github.com/dotnet/msbuild/blob/5fcddc790f4eeaf953a3d283e39751dd0e1f2992/src/MSBuild/CommandLineSwitches.cs#L229-L282\r\n\r\nAs was discussed in the [PR ](https://github.com/dotnet/msbuild/pull/9452) it was decided to unquote only Target parameter",
        "createdAt": "2023-12-04T09:43:33Z",
        "updatedAt": "2023-12-04T09:43:33Z",
        "author": {
          "login": "f-alizada"
        }
      }
    ]
  }
}