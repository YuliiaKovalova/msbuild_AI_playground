{
  "number": 6927,
  "title": "MSBuild glob expansion API",
  "body": "I need to be able to exactly reproduce MSBuild glob expansion outside the context of msbuild project evaluation.\r\n\r\nThe scenario is that the glob _may_ originally come from an msbuild project, and the expanded result capture after project evaluation. Later, *without* loading the project, we want to see if values cached from msbuild are still valid by scanning all the input files and re-expanding globs to see if the msbuild project's inputs are effectively the same, which would allow us to skip msbuild project load.\r\n\r\nThe process that will do the glob expansion runs a service that targets netstandard2.0, so it would be great if the msbuild glob API was in a netstandard2.0 compliant assembly (i.e. _not_ microsoft.build.dll). Besides, bringing in the whole engine for something like glob parsing/expansion feels a bit heavy IMO.",
  "state": "CLOSED",
  "createdAt": "2021-10-08T14:49:31Z",
  "updatedAt": "2024-02-21T14:11:25Z",
  "closedAt": "2022-03-29T16:16:46Z",
  "author": {
    "login": "AArnott"
  },
  "labels": [
    "Area: Performance",
    "Partner request",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "cc: @ladipro\r\n\r\nAt face value, this sounds similar to https://github.com/dotnet/msbuild/pull/6694, but that wouldn't help here because you'd still have to load M.B.dll. I'm curious if we could spin off a small assembly with the requisite pieces, but that seems like a messy solution; ladipro presumably has a better idea.",
        "createdAt": "2021-10-27T23:09:54Z",
        "updatedAt": "2021-10-27T23:09:54Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The regex would still require me to enumerate the files and folders myself. Should I list hidden/system files? What about directory junctions? Even for ordinary files, should I enumerate `*` files to match against the regex or can I list just `*.cs` and then run the regex against each result?\r\n\r\nMy point being, there is so much room for policy and optimization if the MSBuild glob API just offers an `Expand` method that does it all for me rather than just expose one small piece (the regex) of the puzzle.",
        "createdAt": "2021-10-29T01:32:51Z",
        "updatedAt": "2021-10-29T01:32:51Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "Correct, #6694 is different. Adding the API is going to be fairly easy. The requirement to have it exposed from a separate netstandard2.0 compliant assembly makes it a bit more complex. We probably wouldn't want to refactor MSBuild into multiple assemblies to avoid impacting mainline scenarios. That leaves us with double-compiling the relevant code, which may be OK.\r\n\r\nThere's one more wrinkle: @AArnott, our globbing implementation has been adopting new `System.IO` API that's not available in netstandard2.0. How hard of a requirement is it to target 2.0? Would netstandard2.1 work as well?",
        "createdAt": "2021-11-01T15:44:06Z",
        "updatedAt": "2021-11-01T15:44:06Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "`netstandard2.0` support is a nice-to-have. `net472` *might* not be necessary either, but I would be surprised if we didn't end up needing that. So dual-targeting `net472` and `netstandard2.1` should be fine. In fact if you held my feet to the fire, at this point `net472` and `net5.0` support would probably be ok as well.",
        "createdAt": "2021-11-01T18:10:19Z",
        "updatedAt": "2021-11-01T18:10:19Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "@AArnott What is current priority of this?",
        "createdAt": "2022-03-28T12:39:48Z",
        "updatedAt": "2022-03-28T12:39:48Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "The overall effort that led to this requirement has been canceled. I don't need this any more.",
        "createdAt": "2022-03-29T16:16:46Z",
        "updatedAt": "2022-03-29T16:16:46Z",
        "author": {
          "login": "AArnott"
        }
      }
    ]
  }
}