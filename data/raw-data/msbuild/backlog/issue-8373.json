{
  "number": 8373,
  "title": "Unix drive enumeration imports not expanded?",
  "body": "### Background\r\n\r\n**1) Drive enumeration imports doesn't seem to be expanded**\r\n\r\nThis is only failing leftover case from https://github.com/dotnet/msbuild/issues/7330\r\n\r\nInvestigation needed - it seems that the `\\**\\*.targets` path in project import is not expanded\r\n\r\nTestcase:\r\nhttps://github.com/dotnet/msbuild/blob/main/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs#L908-L911\r\n\r\nFailing on unix:\r\n\r\n```\r\n  Message:\u2009\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException : The imported project \"/**/*.targets\" was not found. Confirm that the expression in the Import declaration \"/**/*.targets\" is correct, and that the file exists on disk.  /tmp/1smloziu.eao/MSBuildTemproot/Temporary6dfc065a89bb48c6b0fbe28f55e56cfb/build.proj\r\n\r\n  Stack Trace:\u2009\r\nProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\u2009line\u2009405\r\nProjectErrorUtilities.ThrowInvalidProject[T1,T2](IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1)\u2009line\u200998\r\nEvaluator`4.ExpandAndLoadImportsFromUnescapedImportExpression(String directoryOfImportingFile, ProjectImportElement importElement, String unescapedExpression, Boolean throwOnFileNotExistsError, List`1& imports)\u2009line\u20092298\r\nEvaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult)\u2009line\u20091926\r\nEvaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\u2009line\u20091576\r\nEvaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\u2009line\u20091459\r\nEvaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\u2009line\u2009910\r\nEvaluator`4.Evaluate()\u2009line\u2009644\r\nEvaluator`4.Evaluate(IEvaluatorData`4 data, Project project, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive)\u2009line\u2009337\r\nProjectInstance.Initialize(ProjectRootElement xml, IDictionary`2 globalProperties, String explicitToolsVersion, String explicitSubToolsetVersion, Int32 visualStudioVersionFromSolution, BuildParameters buildParameters, ILoggingService loggingService, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, Nullable`1 projectLoadSettings, EvaluationContext evaluationContext)\u2009line\u20092785\r\nProjectInstance.ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, Nullable`1 projectLoadSettings, EvaluationContext evaluationContext)\u2009line\u2009278\r\nProjectInstance.FromFile(String file, ProjectOptions options)\u2009line\u2009739\r\nProjectItem_Tests.CreateProjectInstanceFromFileWithDriveEnumeratingWildcard(TestEnvironment env, String testProjectFile, Boolean throwException)\u2009line\u2009992\r\nProjectItem_Tests.CleanContentsAndCreateProjectInstanceFromFileWithDriveEnumeratingWildcard(String content, Boolean throwException)\u2009line\u2009967\r\nProjectItem_Tests.LogWarningUponProjectInstanceCreationFromDriveEnumeratingContent(String content, String placeHolder, String excludePlaceHolder)\u2009line\u2009955\r\nRuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\nMethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n\r\n```\r\n\r\n**2) Long run of the ProjectGetterResultsInUnixDriveEnumerationWarning and LogWarningUponProjectInstanceCreationFromDriveEnumeratingContent tests on Unix platforms**\r\n\r\nThis is caused by the fact that the actual whole root is attempted to be enumerated.\r\nWe should try to find similar mapping trick as for the Windows runs (https://unix.stackexchange.com/questions/206493/mount-directory-onto-root ?), or make the production code to detect and bail out quicker.",
  "state": "OPEN",
  "createdAt": "2023-01-31T09:49:26Z",
  "updatedAt": "2024-01-31T08:15:19Z",
  "closedAt": null,
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "backlog",
    "Priority:3",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "For the long-running tests, I have tried throwing an exception from the test logger when the warning is logged, hoping that the exception would be caught by the test and the actual enumeration skipped (https://github.com/dotnet/msbuild/commit/b7f501ba955d75dd1bca329508f40e493ddf780e). Unfortunately this doesn't work because the warning is logged *after* the enumeration. This by itself is iffy. In interactive scenarios ideally the user would be given an indication of why the build is about to hang before it happens.",
        "createdAt": "2023-01-31T15:39:07Z",
        "updatedAt": "2023-01-31T15:39:07Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "> Unfortunately this doesn't work because the warning is logged _after_ the enumeration. This by itself is iffy. In interactive scenarios ideally the user would be given an indication of why the build is about to hang before it happens.\r\n\r\nI agree.",
        "createdAt": "2023-01-31T16:14:45Z",
        "updatedAt": "2023-01-31T16:14:45Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}