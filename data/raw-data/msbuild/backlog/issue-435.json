{
  "number": 435,
  "title": "MSBuild detects wrong core count on multi-proc machines",
  "body": "If you use `msbuild /m` on a machine with more than 32 cores, we will only launch up to 32 processes. This appears to be because we generally run as a 32-bit process, and 32-bit Windows had a 32-core limit. But we should be able to use as many processes as cores, so we need to call an API that gives us \"the real truth\" about `NUMBER_OF_PROCESSORS`.\n",
  "state": "CLOSED",
  "createdAt": "2016-01-20T17:28:22Z",
  "updatedAt": "2024-02-21T17:29:19Z",
  "closedAt": "2020-09-18T16:39:39Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "16.8"
  },
  "comments": {
    "nodes": [
      {
        "body": "Team brainstorming: We would like to fix this, not entirely sure how. The only way we know to get this is WMI, which is terribly slow. One proposal is to check if Environment.ProcessorCount == 32 then use WMI to get processor count. This way at least we'd only take the ~1sec hit when >32 is likely.\n",
        "createdAt": "2016-01-26T23:41:02Z",
        "updatedAt": "2016-01-26T23:41:02Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "I can confirm the issue. On machine with `NUMBER_OF_PROCESSORS=48` and VS2015 Update 1 installed, MSBuild utilises only up to 32 cores.\n",
        "createdAt": "2016-02-18T13:34:06Z",
        "updatedAt": "2016-02-18T13:34:06Z",
        "author": {
          "login": "mloskot"
        }
      },
      {
        "body": "I didn't update with the workaround that people are using internally until we can get a good fix in: we will spawn the correct number of processes if passed a number higher than 32 on the command line. _Getting_ that number from a 32-bit command prompt can be a bit tricky, but if you can bury it in a script this might be worthwhile (presuming you have a very parallel build).\n\n@mloskot, on your machine you should be able to use `msbuild.exe /m:48` to use the full machine.\n",
        "createdAt": "2016-02-18T16:13:07Z",
        "updatedAt": "2016-02-18T16:13:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald It works, thanks.\n\n![msbuild-48-cores](https://cloud.githubusercontent.com/assets/80741/13151840/4bdc4342-d66c-11e5-9aab-04fb2ec05217.png)\n\n[Trying parallel MSBuild](https://gist.github.com/mloskot/eb93fe8303f2338c1252) with 115 `.vcxproj` large solution.\n",
        "createdAt": "2016-02-18T17:22:14Z",
        "updatedAt": "2016-02-18T17:22:49Z",
        "author": {
          "login": "mloskot"
        }
      },
      {
        "body": "I think we might be able to P/Invoke to [GetLogicalProcessorInformationEx](https://msdn.microsoft.com/en-us/library/windows/desktop/dd405488%28v=vs.85%29.aspx) to get the correct count quickly. Haven't looked at it deeply though.\n",
        "createdAt": "2016-02-18T19:57:42Z",
        "updatedAt": "2016-02-18T19:57:42Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Would you have any update on that?",
        "createdAt": "2017-03-15T09:04:21Z",
        "updatedAt": "2017-03-15T09:04:21Z",
        "author": {
          "login": "mloskot"
        }
      },
      {
        "body": "No progress yet. We should consider scheduling this for the next big update.\r\n\r\n(It's still up-for-grabs, if anyone outside the core team would like to contribute a fix.)",
        "createdAt": "2017-03-15T15:55:23Z",
        "updatedAt": "2017-03-15T15:55:23Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Worse than this, on a 72-thread machine, NUMBER_OF_PROCESSORS is for some reason only reporting 36, and apparently VS only builds with 32, so this really leaves the machine empty by default (without /m:72).",
        "createdAt": "2017-05-02T01:17:07Z",
        "updatedAt": "2017-05-02T01:17:07Z",
        "author": {
          "login": "missmah"
        }
      },
      {
        "body": "Just checking, is there a proven way to get the correct core count from win32? Or is that still part of the investigating into this issue? By chance I discovered we ran into this too.",
        "createdAt": "2017-12-05T16:55:00Z",
        "updatedAt": "2017-12-05T16:55:00Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "On a side note, should this not be in dotnet api, so this can work correctly cross platform?",
        "createdAt": "2017-12-16T10:21:17Z",
        "updatedAt": "2017-12-16T10:21:17Z",
        "author": {
          "login": "japj"
        }
      }
    ]
  }
}