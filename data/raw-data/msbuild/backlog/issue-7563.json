{
  "number": 7563,
  "title": "Passing an empty string to `RemoveDir` results in wiping the `C:\\` drive contents",
  "body": "Executing the following : \r\n```xml\r\n<PropertyGroup>\r\n  <MyPath></MyPath>\r\n</PropertyGroup>\r\n<RemoveDir Directories=\"$(MyPath)\" />\r\n```\r\non windows results in MSBuild happily wiping the contents of the `C:\\` drive, with all the consequences you can imagine.\r\n\r\nAfter experiencing this, I'm now gating all `RemoveDir` calls behind a `Condition=\"'$(MyPath)' != ''\"`, but I feel this is something that should somehow be done by default...\r\n\r\nMaybe abort and log an error if `string.IsNullOrWhiteSpace(directory.ItemSpec)` before calling https://github.com/dotnet/msbuild/blob/518c041f4511a6bc23eb40703b69a94ea46c65fd/src/Tasks/RemoveDir.cs#L107 ",
  "state": "CLOSED",
  "createdAt": "2022-04-21T22:20:35Z",
  "updatedAt": "2024-02-21T14:09:03Z",
  "closedAt": "2022-05-12T11:40:09Z",
  "author": {
    "login": "gotmachine"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "This is bad. I always do check the property instinctively but not everyone does. I agree that this should be gated.\r\n\r\nAlso, MSBuild should always take any relative or relative root to the volume as relative to project directory unless explicitly provided instead of a property. It should provide a concept of an executing/current/working directory. There are tasks and features that could benefit MSBuild having more constrained location.",
        "createdAt": "2022-04-23T02:17:06Z",
        "updatedAt": "2022-04-25T16:46:06Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> Maybe abort and log an error if `string.IsNullOrWhiteSpace(directory.ItemSpec)` before calling\r\n> \r\n> https://github.com/dotnet/msbuild/blob/518c041f4511a6bc23eb40703b69a94ea46c65fd/src/Tasks/RemoveDir.cs#L107\r\n\r\nYes, `RemoveDir` should absolutely do that.",
        "createdAt": "2022-04-25T15:51:26Z",
        "updatedAt": "2022-04-25T15:51:26Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Only null check might not be enough! Also, Is whitespace a valid path? If so, we should use `string.IsNullOrEmpty(directory.ItemSpec)`.\r\n\r\nBut before we do that, can we add some untouchable directories (_like `C:\\`, `%SystemRoot%\\Windows\\`, etc..._) to some sort of a blocklist and check against it and provide an error and abort. If we want to proceed deleting the blocked directories, an option (_like `Force` or \"I know what I'm doing\"_) could be provided!\r\n\r\nOR even simpler solution is run MSBuild as ***restricted*** process to have these directories blocked by ACLs!? (_I don't even know if this is possible_)\r\n\r\nI know this could be overkill but I've seen so many of these complaints in my lifetime as a developer that could at least warrant a discussion. \ud83d\ude07",
        "createdAt": "2022-04-25T17:10:00Z",
        "updatedAt": "2022-04-25T17:10:49Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "I think the easiest solution is a null or empty check for now. Let's go with that and handle any future scenarios as they come \ud83d\udc4d",
        "createdAt": "2022-05-09T18:44:57Z",
        "updatedAt": "2022-05-09T18:44:57Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}