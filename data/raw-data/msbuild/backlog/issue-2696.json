{
  "number": 2696,
  "title": "ExpandExpressionCaptureIntoStringBuilder is spending ~4.8 of allocations resizing the string builder",
  "body": "This is in a large mixed solution with collection of .NET Core and ASP.NET Core projects. Looking into this, we're resizing the underlying StringBuilder because it's default size isn't large enough when expanding an expression like `@(Compile)` (not `@(Compile, '|')` because there's not a lot of those).\r\n\r\nWe should change this method to figure out the up-front cost before allocating the stringbuilder:\r\n![image](https://user-images.githubusercontent.com/1103906/32363182-1749664a-c0c2-11e7-9748-b3cf8ee6534d.png)\r\n",
  "state": "CLOSED",
  "createdAt": "2017-11-03T07:12:16Z",
  "updatedAt": "2024-02-21T17:15:52Z",
  "closedAt": "2021-08-13T09:45:59Z",
  "author": {
    "login": "davkean"
  },
  "labels": [
    "backlog",
    "Area: Performance",
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.10"
  },
  "comments": {
    "nodes": [
      {
        "body": "In the case of expanding `@(Compile)` it would be easy to start with # of entries in the item list multiplied by some factor like 10. Seems pretty unlikely to be over estimate.",
        "createdAt": "2017-12-08T21:38:49Z",
        "updatedAt": "2017-12-08T21:38:49Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "This was optimized by using `SpanBasedStringBuilder` instead of `ReuseableStringBuilder` in #6128.",
        "createdAt": "2021-08-13T09:45:58Z",
        "updatedAt": "2021-08-13T09:45:58Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}