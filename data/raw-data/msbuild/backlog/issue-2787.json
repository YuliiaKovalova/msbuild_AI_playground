{
  "number": 2787,
  "title": "No any IntelliSense while editing csproj file of .net core project.",
  "body": "### Steps to reproduce\r\n- Create a new .net core/standard project.\r\n- Right-click project, select \"Edit *.csproj\".\r\n- No any IntelliSense while editing csproj file.\r\n![image](https://user-images.githubusercontent.com/24784908/33756845-4b1bc91e-dc32-11e7-911a-659f0958383a.png)\r\n### Environment data\r\nVS Build: d15.6stg.27207.3002\r\ndotnet --info:\r\n![image](https://user-images.githubusercontent.com/24784908/33757032-44e1a4fa-dc33-11e7-8a93-cb2d1376219a.png)",
  "state": "CLOSED",
  "createdAt": "2017-12-08T08:37:54Z",
  "updatedAt": "2024-02-21T17:15:19Z",
  "closedAt": "2020-02-22T21:49:36Z",
  "author": {
    "login": "ghost"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I always add `xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"` to the main document `Project` node, try this as a workaround. Makes `/pp:` output much cleaner too!",
        "createdAt": "2017-12-09T23:14:33Z",
        "updatedAt": "2017-12-09T23:14:33Z",
        "author": {
          "login": "kkm000"
        }
      },
      {
        "body": "Validate this on d15.6/27401.00 (15.6 Preview 4):\r\nFor C# and VB .Net Core project, the IntelliSense can work well.\r\nBut for F# .Net Core project, the IntelliSense can't work well.\r\n![image](https://user-images.githubusercontent.com/24784908/35723634-f769237c-0835-11e8-97c2-cbee8a088d53.png)\r\n",
        "createdAt": "2018-02-02T08:28:09Z",
        "updatedAt": "2018-02-02T08:28:09Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "@Xiu-Li, again, simply add `xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003` attribute, like `<Project Sdk=\"...\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">`. This does not affect the build, but makes the XML editor pick up the schema, and enables Intellisense.\r\n\r\nIn any case, the magic of referring the namespace happens in some VS extension, I doubt the MsBuild repository is the correct place to report the problem. Sorry, I cannot suggest where is the right repository for that. What happens for C# projects is the XML editor extension in Visual Studio is hooked up by some other VSIX extension, which supplies the namespace when sees a namespace-less document with the `.csproj` extension. Try asking the roslyn team.",
        "createdAt": "2018-02-05T03:27:39Z",
        "updatedAt": "2018-02-05T03:28:27Z",
        "author": {
          "login": "kkm000"
        }
      },
      {
        "body": "@kkm000, thanks very much, after adding `xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003 attribute`, enables Intellisense successfully.",
        "createdAt": "2018-02-05T10:25:03Z",
        "updatedAt": "2018-02-05T10:25:03Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "I have this issue to. **But adding `xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"` to the project node does NOT resolve the issue for me!**",
        "createdAt": "2018-08-05T14:27:41Z",
        "updatedAt": "2018-08-05T14:27:41Z",
        "author": {
          "login": "fredrikhr"
        }
      },
      {
        "body": "I had the same issue. Adding the schema worked for me after restarting Visual Studio (v15.8.1).",
        "createdAt": "2018-08-19T03:34:07Z",
        "updatedAt": "2018-08-19T03:34:35Z",
        "author": {
          "login": "simplexidev"
        }
      },
      {
        "body": "I just rechecked, unlike @tom-corwin I really do not get any IntelliSense for my csproj file. Adding the schema does not work, and after restarting Visual Studio it still does not work. After completely reinstalling Visual Studio it still does not work.\r\n\r\nWhat is **VERY** strange however, is that IntelliSense in the `Directory.Build.props` works flawlessly!",
        "createdAt": "2018-08-19T12:06:06Z",
        "updatedAt": "2018-08-19T12:06:06Z",
        "author": {
          "login": "fredrikhr"
        }
      },
      {
        "body": "@couven92 I'm not sure if it will help. But in the `XML>Schemas...` menu, have you tried removing and readding the local copy of the schema?  ",
        "createdAt": "2018-08-19T13:05:28Z",
        "updatedAt": "2018-08-19T13:06:20Z",
        "author": {
          "login": "simplexidev"
        }
      },
      {
        "body": "@tom-corwin nope, does not help, still no IntelliSense.",
        "createdAt": "2018-08-19T14:57:01Z",
        "updatedAt": "2018-08-19T14:57:01Z",
        "author": {
          "login": "fredrikhr"
        }
      },
      {
        "body": "I have the same problem with .Net Core Projects. IntelliSense for .csproj files does not work if the project is loaded.\r\nBUT IntelliSense works if you unload the project and then edit the .csproj file.\r\n\r\n(VS2017 Enterprise 15.8.3)\r\n\r\ndotnet --info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.401\r\n Commit:    91b1c13032\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.3\r\n  Commit:  124038c13e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```",
        "createdAt": "2018-08-28T13:51:30Z",
        "updatedAt": "2018-09-06T20:22:26Z",
        "author": {
          "login": "enricoreich"
        }
      },
      {
        "body": "Yes, not repro for F# .Net Core project on VS2017 Enterprise 15.8.3.\r\n",
        "createdAt": "2018-08-30T10:25:59Z",
        "updatedAt": "2018-08-30T10:38:09Z",
        "author": {
          "login": "YunWeiaa"
        }
      },
      {
        "body": "+EnrichoReich\r\nThe problem persists  (multitarget, .NET Standard 2.0), even after:\r\n- adding the schema \r\n- unloading the project and opening .csproj\r\nVS Community 2017 15.7.4\r\n\r\n",
        "createdAt": "2018-09-13T14:26:59Z",
        "updatedAt": "2018-09-13T14:27:14Z",
        "author": {
          "login": "gorangrubic"
        }
      },
      {
        "body": "@gorangrubic \r\nSorry for my late answer. Yes, I also noticed. After unloading the project you have to close and reopen the solution. Now, if you open the csproj file from the unloaded project Intellisense should work. But if you reload the project Intellisense stop working again.\r\n\r\nI have reinstalled VS (15.8.4) with no extensions and created a new dotnet core (ASP.NET core) project but that did not help, Intellisense in csproj file does not work.\r\n\r\nAfter creading a new project the schema parameter in csproj file properties is empty!\r\nEven if I do add the Microsoft.Build.xsd Schema manually or add xmlns attribute suggested by kkm000 Intellisense does not recognize it.\r\n\r\nIt is frustrating!",
        "createdAt": "2018-09-19T08:24:27Z",
        "updatedAt": "2018-09-19T08:26:33Z",
        "author": {
          "login": "enricoreich"
        }
      },
      {
        "body": "Hey,\r\n\r\nI did some investigations and found out, if you put your project into a solution folder like\r\n\r\n![brokenintellisense](https://user-images.githubusercontent.com/316637/45843530-2a3c5400-bd20-11e8-8feb-5a60ebc4ec45.png)\r\n\r\nIntellisense for csproj files does not work properly after reloading the solution. This also happens with .Net-Framework projects. I think it is a VS XML-Editor Problem but I'm not sure.\r\nIf yxou move the project out of the solution folder and reload the solution Intellisense for csproj file works without problems.\r\n\r\nSo, this is sad because I like to organize my projects into solution folders.  :disappointed:",
        "createdAt": "2018-09-20T20:01:49Z",
        "updatedAt": "2018-09-20T20:11:37Z",
        "author": {
          "login": "enricoreich"
        }
      },
      {
        "body": "@EnricoReich: Looks like it, thanks for nailing it down!  Unloading a project before editing (i. e. not the shadow-editing with the project still loaded) does not pick up the IS schema either, even though all the right schemata are checked as \"use\" in the file properties window. But if you copy the file, give it an extension \".xml\" and open, then IS works. As if the schema is forced into the XML editor by some Roslyn VS integration component, when the VS is aware (let's say, *way too* aware in this case) that  the file is actually a project file, not just any run-off-the-mill XML document.\r\n\r\nIf only we find the *right* team to deal with the issue. I am sure this is not a problem with MSBuild! Let me try to find the folk on GitHub who likely own that part.",
        "createdAt": "2018-10-02T23:04:02Z",
        "updatedAt": "2018-10-02T23:04:02Z",
        "author": {
          "login": "kkm000"
        }
      },
      {
        "body": "Problem still happening for me too at version VS Community 2017 15.8.6 - even when project is unloaded and with xmlns attribute added to <project>.",
        "createdAt": "2018-10-08T21:37:50Z",
        "updatedAt": "2018-10-08T21:40:15Z",
        "author": {
          "login": "tb-mtg"
        }
      },
      {
        "body": "@kkm000, I know there's a repo for [ASP.NET Core tooling](https://github.com/aspnet/tooling) for VS, but I don't know if there is one just for .NET Core. If there is, that's probably the best place for this issue (i'd assume, anyways)",
        "createdAt": "2018-10-09T17:44:53Z",
        "updatedAt": "2018-10-09T17:44:53Z",
        "author": {
          "login": "simplexidev"
        }
      },
      {
        "body": "I described this problem a few weeks ago at the Visual Studio Developer Community website but apparently there is hardly anyone interested in it. Maybe if it gets some upvotes or comments someone will take care of it.\r\n\r\nhttps://developercommunity.visualstudio.com/content/problem/340537/intellisense-for-csproj-file-not-working-if-projec.html",
        "createdAt": "2018-10-09T18:33:22Z",
        "updatedAt": "2018-10-09T18:33:48Z",
        "author": {
          "login": "enricoreich"
        }
      },
      {
        "body": "@EnricoReich I gave it an upvote, hopefully they'll fix it sooner rather than later.",
        "createdAt": "2018-10-09T18:39:39Z",
        "updatedAt": "2018-10-09T18:39:39Z",
        "author": {
          "login": "simplexidev"
        }
      },
      {
        "body": "@tom-corwin  @EnricoReich I also gave it an upvote.",
        "createdAt": "2018-10-10T02:44:29Z",
        "updatedAt": "2018-10-10T02:44:29Z",
        "author": {
          "login": "tb-mtg"
        }
      },
      {
        "body": "@EnricoReich I found the project I was looking for [dotnet/project-system](https://github.com/dotnet/project-system)\r\n\r\nHere's an issue tracking IntelliSense not working in C# projects: https://github.com/dotnet/project-system/issues/3225",
        "createdAt": "2018-10-10T22:26:03Z",
        "updatedAt": "2018-10-10T22:26:03Z",
        "author": {
          "login": "simplexidev"
        }
      },
      {
        "body": "Here's another two hits of this: \r\n\r\nhttps://github.com/dotnet/project-system/issues/3225\r\nhttps://github.com/dotnet/project-system/issues/4061#issuecomment-434599079\r\n",
        "createdAt": "2018-10-31T08:20:53Z",
        "updatedAt": "2018-10-31T08:20:53Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Not repro on VS-Val/d15.9/28230.54 (15.9 preview 5.0). For C#/VB/F# .Net Core project, the IntelliSense can work well.\r\n",
        "createdAt": "2018-10-31T09:41:00Z",
        "updatedAt": "2018-10-31T09:41:00Z",
        "author": {
          "login": "YunWeiaa"
        }
      },
      {
        "body": "For my cases:\r\nOS: Win10 Pro 17763, Simplified Chinese\r\nVS: 15.8.8, Simplified Chinese/English\r\n\r\nWhen switching VS to English, IntelliSense works with a simple playground project. When switching to Chinese it does not work.\r\nBut it does not work with my [customized projects](https://github.com/amatukaze/ing/blob/master/src/Infrastructure/Sakuno.ING.Standard/Sakuno.ING.Standard.csproj), even in English.\r\nFurther information: these projects use `Directory.Build.props` to import target framework, and VS cannot load them if explicitly set project GUID in solution file. \r\n\r\nVS 15.8.8 gives my project files(on which IntelliSense not works) indent=4, while some older version gives 2.\r\n\r\nEdit: the cause for my projects should be **Solution Directories**. When I move a project into root level of solution, it just suddenly works(without reloading).",
        "createdAt": "2018-11-01T06:45:46Z",
        "updatedAt": "2018-11-01T07:37:34Z",
        "author": {
          "login": "huoyaoyuan"
        }
      },
      {
        "body": "I can repro this in VS-Enterprise 15.8.9 & 15.9preview5.\r\n\r\nOS: Windows 10 Pro [17763.55, 1809], Language: German\r\nVS: 15.8.9 & 15.9preview5 (without additional extensions), Language: English (both)\r\n\r\nIf I create a project at solution root (in VS) Intellisense for csproj files works as intended. But if I create or drag&drop a project into a solution folder/directory and reload the solution, it does not work e.g. almost no Intellisense for csproj files. Only code completions for CDATA and comments are shown.",
        "createdAt": "2018-11-08T12:37:36Z",
        "updatedAt": "2018-11-08T12:37:36Z",
        "author": {
          "login": "enricoreich"
        }
      },
      {
        "body": "Same here as @EnricoReich describes. I actually use a `Directory.props` file to enforce the following .NET repository structure:\r\n\r\n``` txt\r\nroot\r\n\u251c\u2500 bin\r\n|  \u251c\u2500 Debug\r\n|  |  \u251c\u2500 netstandard1.3\r\n|  |  \u2514\u2500 netstandard2.0\r\n|  \u2514\u2500 Release\r\n|     \u251c\u2500 netstandard1.3\r\n|     \u2514\u2500 netstandard2.0\r\n\u251c\u2500 obj\r\n|  \u2514\u2500 ...\r\n\u251c\u2500 src\r\n|  \u2514\u2500 ...\r\n\u251c\u2500 sample\r\n|  \u2514\u2500 ...\r\n\u251c\u2500 test\r\n|  \u2514\u2500 ...*.Test\r\n\u251c\u2500 .gitignore\r\n\u251c\u2500 .gitattributes\r\n\u251c\u2500 .editorconfig\r\n\u251c\u2500 LICENSE\r\n\u251c\u2500 README.md\r\n\u251c\u2500 AllRules.ruleset\r\n\u251c\u2500 Directory.Build.props\r\n\u2514\u2500 *.sln\r\n```\r\n\r\nI use `dotnet sln add` to add projects to the solution which will organise the projects in solution folders that match the actual on-disk file system hierarchy.",
        "createdAt": "2018-11-09T23:57:22Z",
        "updatedAt": "2018-11-09T23:57:22Z",
        "author": {
          "login": "fredrikhr"
        }
      },
      {
        "body": "Just an FYI, even though I get limited Intellisense in the latest VS 15.9 builds, it still doesn't have any information on `None`/`Content` attributes like `Pack` and `PackagePath`.",
        "createdAt": "2018-12-27T19:59:56Z",
        "updatedAt": "2018-12-27T19:59:56Z",
        "author": {
          "login": "robertmclaws"
        }
      },
      {
        "body": "I don't yet know the underlying cause of the problem, but let me share the experience I just had with a customer reporting the same problem in the VS 2019 Enterprise 16.4.5 XML editor, trying to edit a .csproj. Setting the xmlns made no difference to him.  \r\nHowever, when I observed that his system was set to locale 1036 (French - France) and mine is 1033 (English - US), just as an experiment, I zipped up all of my xml\\schemas folder and subfolders and shared them with him.  He dropped that into his machine, and the IntelliSense is working for him.  We haven't yet taken the time to investigate the differences, but it's important to note that this problem may be related to language/locale-specific differences.",
        "createdAt": "2020-02-22T19:58:01Z",
        "updatedAt": "2020-02-22T19:58:01Z",
        "author": {
          "login": "ScotBren"
        }
      },
      {
        "body": "It looks like there may be multiple issues reported here. I think the main one was fixed as #2723 for Visual Studio 16.5. I'm going to close this issue, but please don't hesitate to file a new issue if you see problems on 16.5 or higher. Please include details like your OS and Visual Studio versions, language settings, and what you expect to see and actually experience.",
        "createdAt": "2020-02-22T21:49:36Z",
        "updatedAt": "2020-02-22T21:49:36Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "VS 2019: I get no intellisense for the `import `element but not for the attributes. The `import `is located directly under `Projects`",
        "createdAt": "2020-07-04T23:13:12Z",
        "updatedAt": "2020-07-04T23:13:31Z",
        "author": {
          "login": "Legends"
        }
      }
    ]
  }
}