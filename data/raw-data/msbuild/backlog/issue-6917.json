{
  "number": 6917,
  "title": "Underbuild in Visual Studio when using ref assemblies ",
  "body": "### Issue Description\r\n\r\nNormal development operations can result in MSBuild and Visual Studio deciding that a project is [up to date](https://github.com/dotnet/project-system/blob/main/docs/up-to-date-check.md) and skipping its build, resulting in debugging or running tests on code that doesn't include the latest changes.\r\n\r\nA workaround is available: https://github.com/dotnet/msbuild/issues/6917#issuecomment-937703129\r\n\r\n### Steps to Reproduce\r\n\r\nIn a solution with three class libraries, C referencing B referencing A, all using reference assemblies (targeting .NET 5.0+):\r\n\r\n1. Build solution.\r\n2. Make changes to project C.\r\n3. Build.\r\n2. Make internal changes to source files of project B.\r\n3. Build in Visual Studio.\r\n\r\n### Expected Behavior\r\n\r\nProjects B and C build; `B.dll` in the `bin` folder of C is the latest version.\r\n\r\n### Actual Behavior\r\n\r\n_Only_ project B builds, project C is considered up to date with a log entry like\r\n\r\n```\r\n3>FastUpToDate: Output marker 'C:\\Users\\raines\\source\\repos\\IncrementalUnderbuild\\C\\obj\\Debug\\net5.0\\C.csproj.CopyComplete' does not exist, skipping marker check. (C)\r\n```\r\n\r\n### Analysis\r\n\r\nThis is happening because `IncrementalClean` will delete the `.CopyComplete` marker file on a build that didn't need to copy references because they were all up-to-date (the build from step 3 that affected only C).\r\n\r\nThat's happening because the marker is only added to the `@(FileWrites)` item (which means \"files that would have been created by a clean build of this project\") if it needed to be touched:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/bbb9655b007be6d079985f3a7ec14f5d82a18f64/src/Tasks/Microsoft.Common.CurrentVersion.targets#L4834-L4838\r\n\r\nSo `IncrementalClean` decided it was a stale output and decided to delete it.\r\n\r\nThat bug has been present for a very long time (since dotnet/msbuild#2878) but was masked by #6576, which caused the marker to be touched any time the project built. Since that was fixed in Visual Studio 16.11.4, it revealed this (worse!) bug.",
  "state": "CLOSED",
  "createdAt": "2021-10-07T11:09:49Z",
  "updatedAt": "2024-02-21T17:00:59Z",
  "closedAt": "2021-10-15T08:35:37Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "regression",
    "Visual Studio",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "Thanks to @BrennanConroy, @jcouv, @jaredpar, and @jasonmalinowski who have been reporting this offline and getting logs, and to @drewnoakes who paired with me to debug it.",
        "createdAt": "2021-10-07T11:18:40Z",
        "updatedAt": "2021-10-07T11:18:40Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "# Workaround\r\n\r\nAdd this target to your affected projects:\r\n\r\n```xml\r\n<!-- Prevent underbuild in Visual Studio, https://github.com/dotnet/msbuild/issues/6917 -->\r\n<Target Name=\"WorkAroundDotnetMsbuild6917\" AfterTargets=\"_CopyFilesMarkedCopyLocal\">\r\n  <ItemGroup>\r\n    <FileWrites Include=\"@(CopyUpToDateMarker)\" />\r\n  </ItemGroup>\r\n</Target>\r\n```\r\n\r\nThis can be added to a `Directory.Build.targets` in your repo or applied to all projects you build by putting it in [MSBuildUserExtensionsPath](https://docs.microsoft.com/visualstudio/msbuild/customize-your-build?view=vs-2019#msbuildextensionspath-and-msbuilduserextensionspath), which is `%LOCALAPPDATA%\\Microsoft\\MSBuild`. For instance on my machine I created\r\n\r\n```\r\nC:\\Users\\raines\\AppData\\Local\\Microsoft\\MSBuild\\Current\\Imports\\Microsoft.Common.props\\ImportAfter\\WorkaroundMSBuild6917.props\r\n```\r\n\r\nwith the contents\r\n\r\n```xml\r\n<Project>\r\n  <!-- Prevent underbuild in Visual Studio, https://github.com/dotnet/msbuild/issues/6917 -->\r\n  <Target Name=\"WorkAroundDotnetMsbuild6917\" AfterTargets=\"_CopyFilesMarkedCopyLocal\">\r\n    <ItemGroup>\r\n      <FileWrites Include=\"@(CopyUpToDateMarker)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nThis workaround **will not** conflict with the real fix once it is available, so it can be adopted and removed much later.",
        "createdAt": "2021-10-07T11:27:38Z",
        "updatedAt": "2021-10-07T11:27:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Note on the workaround: you may need to add `Condition=\"'@(ReferenceCopyLocalPaths)' != ''\"` to the target for it to work correctly.",
        "createdAt": "2021-11-08T18:41:52Z",
        "updatedAt": "2021-11-08T18:41:52Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}