{
  "number": 4413,
  "title": "Avoid losing callstack for some exceptions",
  "body": "https://github.com/microsoft/msbuild/blob/c70d6ded175c0a7da632018b856daff9f9cd392e/src/Build/BackEnd/BuildManager/BuildManager.cs#L411-L417\r\n\r\nhttps://github.com/microsoft/msbuild/blob/c70d6ded175c0a7da632018b856daff9f9cd392e/src/Build/BackEnd/BuildManager/BuildManager.cs#L776-L780\r\n\r\nI think these could both be improved if we threw a new exception that had a stringification (including stack) of the original exception.",
  "state": "CLOSED",
  "createdAt": "2019-05-31T21:02:22Z",
  "updatedAt": "2024-02-21T17:08:15Z",
  "closedAt": "2019-06-05T20:47:51Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Debuggability",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "You could either wrap, preserving inner exception, or use [ExceptionDispatchInfo](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.exceptionservices.exceptiondispatchinfo?view=netframework-4.8) to preserve the original stack ([examples](https://source.dot.net/#System.Private.CoreLib/shared/System/Runtime/ExceptionServices/ExceptionDispatchInfo.cs,1443447025759846,references)).",
        "createdAt": "2019-06-03T21:21:59Z",
        "updatedAt": "2019-06-03T21:21:59Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "`ExceptionDispatchInfo` is _perfect_ for this, thank you.",
        "createdAt": "2019-06-03T21:35:41Z",
        "updatedAt": "2019-06-03T21:35:41Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}