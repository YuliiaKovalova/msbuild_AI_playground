{
  "number": 8886,
  "title": "[Bug]: ResolveAssemblyReferences does not generate necessary binding redirect for PackageReference conflict",
  "body": "### Issue Description\n\nIn a simple scenario where a project depends on two projects that, in turn, depend on conflicting versions of a NuGet package, no binding redirect is generated in the first project's output directory.\n\n### Steps to Reproduce\n\nhttps://github.com/mvanhilst-msft/ResolveAssemblyReferences-Bug\r\n\r\n     Project C (Console App)\r\n      |\r\n      +-[ProjectReference]-> Project A (Class Library)\r\n      |                       |\r\n      |                       +-[PackageReference]-> Microsoft.Diagnostics.Tracing.EventSource 1.1.28\r\n      |                       |                       |\r\n      |                       |                       +-[dependency]-> Microsoft.Diagnostics.Tracing.EventSource.Redist 1.1.28\r\n      |                       |                                                 /|\\\r\n      |                       |                                             [comes from]\r\n      |                       |                                                  |\r\n      |                       +-[code reference]-> Microsoft.Diagnostics.Tracing.EventSource.dll 1.1.28.0\r\n      |\r\n      +-[ProjectReference]-> Project B (Class Library)\r\n                              |\r\n                              +-[PackageReference]-> Microsoft.Diagnostics.Tracing.EventSource.Redist 2.2.0\r\n                              |                                         /|\\\r\n                              |                                     [comes from]\r\n                              |                                          |\r\n                              +-[code reference]-> Microsoft.Diagnostics.Tracing.EventSource.dll 2.0.3.0\r\n                              \r\nProject A and B each have a simple Hello World example program using Microsoft.Diagnostics.Tracing.EventSource. Project C invokes the code from A and B.\n\n### Expected Behavior\n\nNo runtime errors.\n\n### Actual Behavior\n\n    Unhandled Exception: System.IO.FileLoadException: Could not load file or assembly 'Microsoft.Diagnostics.Tracing.EventSource, Version=1.1.28.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n       at ProjectA.ClassA.DoThing()\r\n       at ProjectC.Program.Main(String[] args) in C:\\repos\\misc\\ResolveAssemblyReferences-Bug\\ResolveAssemblyReferencesBug\\ProjectC\\Program.cs:line 10\n\n### Analysis\n\nI checked the following things:\r\n\r\nThe NuGet package metadata appears correct for the packages involved.\r\n\r\nResolveAssemblyReferences does detect the conflict:\r\n\r\n    There was a conflict between \"Microsoft.Diagnostics.Tracing.EventSource, Version=2.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" and \"Microsoft.Diagnostics.Tracing.EventSource, Version=1.1.28.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n\r\nGenerateBindingRedirects says ResolveAssemblyReferences did not suggest any binding redirects:\r\n\r\n    Task \"GenerateBindingRedirects\" (TaskId:87)\r\n      Task Parameter:OutputAppConfigFile=obj\\Debug\\ProjectC.exe.config (TaskId:87)\r\n      Task Parameter:AppConfigFile=App.config\r\n                      OriginalItemSpec=App.config\r\n                      TargetPath=ProjectC.exe.config (TaskId:87)\r\n      Task Parameter:TargetName=ProjectC.exe.config (TaskId:87)\r\n      No suggested binding redirects from ResolveAssemblyReferences. (TaskId:87)\r\n    Done executing task \"GenerateBindingRedirects\". (TaskId:87)\r\n\r\nThe output directory of ProjectC contains `Microsoft.Diagnostics.Tracing.EventSource, Version=2.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`.\n\n### Versions & Configurations\n\nMicrosoft Visual Studio Enterprise 2022 (64-bit) - Current\r\nVersion 17.6.3\r\n\r\nMSBuild version 17.6.3+07e294721 for .NET Framework\r\n17.6.3.22601",
  "state": "CLOSED",
  "createdAt": "2023-06-15T01:07:39Z",
  "updatedAt": "2023-06-19T14:13:09Z",
  "closedAt": "2023-06-16T23:33:56Z",
  "author": {
    "login": "mvanhilst-msft"
  },
  "labels": [
    "bug",
    "Area: Task: Resolve Assembly References (RAR)",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Ah, it's because the `PublicKeyToken` is different between `1.1.28.0` and `2.0.3.0`. Is there anything that can be done about this situation?",
        "createdAt": "2023-06-16T22:41:51Z",
        "updatedAt": "2023-06-16T22:49:55Z",
        "author": {
          "login": "mvanhilst-msft"
        }
      },
      {
        "body": "Closing for now as it is by design and it appears there is no solution other than to avoid taking a dependency on 2.0.0+ of `Microsoft.Diagnostics.Tracing.EventSource`.",
        "createdAt": "2023-06-16T23:33:56Z",
        "updatedAt": "2023-06-16T23:33:56Z",
        "author": {
          "login": "mvanhilst-msft"
        }
      },
      {
        "body": "Yeah, I'm afraid having different `PublicKeyToken`s means .NET Framework doesn't have any way to create binding redirects, so that kind of breaking change is quite difficult to deal with in a diamond dependency situation.\r\n\r\nThe only other option (beyond \"avoid the conflict\") is to move one version to a subfolder and have a custom [`AssemblyResolve`](https://learn.microsoft.com/dotnet/api/system.appdomain.assemblyresolve?view=netframework-4.8) handler that can locate it--and that can result in confusing conflicts because they will both be loaded in the same process.\r\n\r\ncc @AR-May ",
        "createdAt": "2023-06-19T14:13:08Z",
        "updatedAt": "2023-06-19T14:13:08Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}