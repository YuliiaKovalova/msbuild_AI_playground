{
  "number": 5106,
  "title": "RoslynCodeTaskFactory doesn't load external assemblies",
  "body": "### Steps to reproduce\r\n\r\nWhen using an inline task that references an assembly by full path outside of a standard load directory, `RoslynCodeTaskFactory` is able to compile the snippet properly but not execute it.\r\n\r\nThis is a difference from `CodeTaskFactory` [which installs a custom assembly resolve handler](https://github.com/microsoft/msbuild/blob/1105f6db2fca58a45920ffb953a00aad2e93d794/src/Tasks/CodeTaskFactory.cs#L30-L55) to cope with this case.\r\n\r\nAs a workaround you can create a dummy inline task that uses `CodeTaskFactory` for the sole purpose of leveraging that assembly resolve handler:\r\n\r\n```xml\r\n<UsingTask\r\n\tTaskName=\"MyInlineTask\"\r\n\tTaskFactory=\"RoslynCodeTaskFactory\"\r\n\tAssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\">\r\n\t<Task>\r\n\t\t<Reference Include=\"$(PathToMyInlineTaskDependency)\" />\r\n<!-- ... -->\r\n\t</Task>\r\n</UsingTask>\r\n\r\n<UsingTask\r\n\tTaskName=\"LoadMyDependencies\"\r\n\tTaskFactory=\"CodeTaskFactory\"\r\n\tAssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\">\r\n\t<Task>\r\n\t\t<Reference Include=\"$(PathToMyInlineTaskDependency)\" />\r\n\t\t<Code Type=\"Fragment\" Language=\"cs\"></Code>\r\n\t</Task>\r\n</UsingTask>\r\n```\r\n\r\n### Expected behavior\r\n\r\n`RoslynCodeTaskFactory` should be able to run inline tasks equally as well than `CodeTaskFactory`.\r\n\r\n### Actual behavior\r\n\r\nIt doesn't support assemblies that are not on a standard loading path.",
  "state": "CLOSED",
  "createdAt": "2020-02-04T20:43:43Z",
  "updatedAt": "2024-02-21T17:05:12Z",
  "closedAt": "2022-04-21T02:15:42Z",
  "author": {
    "login": "garuma"
  },
  "labels": [
    ".NET Core",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.2"
  },
  "comments": {
    "nodes": []
  }
}