{
  "number": 10608,
  "title": "BuildCheck template targets NETStandard 2.0, while referenced Microsoft.Build does not",
  "body": "### Context\r\n\r\nIn order to support custom Check compatibility between NETFx and .NET MSBuild hosting - the checks should target .NETStandard 2.0.\r\nAt the same time the Checks need to reference `Microsoft.Build` (for the OM) - that however only targets net472 and current .NET. This can create possible issues.\r\n\r\n### Repro\r\n\r\n* `dotnet install msbuildcheck`\r\n* `dotnet new msbuildcheck -n test`\r\n* `dotnet build`\r\n\r\n**Result:**\r\n\r\n```\r\n    C:\\repro\\Contoso.BuildChecks.csproj : warning NU1701: Package 'Microsoft.Build 17.11.4' was restored using '.NETFramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8, .NETFramework,Version=v4.8.1' instead of the project target framework '.NETStandard,Version=v2.0'. This package may not be fully compatible with your project.\r\n```\r\n\r\n### Notes\r\n\r\n* Targeting Microsoft.Build (and transitively other assemblies) to NETSTandard isn't likely viable.\r\n* Another alternative is revisiting the option of having contracts assembly: https://github.com/dotnet/msbuild/issues/9826\r\n* Or since we are anyway loading this into MSBuild that's going to have the .NET or .NETFx TFM - this might be 'just fine'. If that's the case - then we can simply add NU1701 NoWarn into the packet Directory.Build.props https://github.com/dotnet/msbuild/blob/main/template_feed/content/Microsoft.CheckTemplate/Directory.Packages.props",
  "state": "OPEN",
  "createdAt": "2024-09-03T11:49:56Z",
  "updatedAt": "2025-06-02T08:30:25Z",
  "closedAt": null,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "triaged",
    "Area: BuildCheck"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Team triage: adding a .NETStandard ref assembly in Microsoft.Build should be the way to go here.",
        "createdAt": "2024-09-10T14:13:03Z",
        "author": {
          "login": "maridematte"
        }
      }
    ]
  }
}