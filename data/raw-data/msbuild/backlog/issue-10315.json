{
  "number": 10315,
  "title": "Multiword configuration options renaming",
  "body": "### Context\n\n`.editorconfig` standard allows only lowercase names. For this reason multiword options usually use underscores to separate multiple words within same option (e.g. `csharp_space_after_keywords_in_control_flow_statements`).\n\nIn our implementation and documentation we are using camel-casing.\n\n### Goal\n\n* Configuration module should be able to translate options_with_underscores to C# OptionsInCamelCase.\n* Our documentation should properly refer to the options in the underscore notation.",
  "state": "CLOSED",
  "createdAt": "2024-07-01T16:31:58Z",
  "updatedAt": "2024-07-24T10:51:20Z",
  "closedAt": "2024-07-24T10:47:45Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [],
  "assignees": {
    "nodes": [
      {
        "login": "f-alizada"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Could you please clarify if the same applicable to the custom configuration data? \r\nExample: \r\nif I specify the `my_test_data` in the editor config I expect find `my_test_data` in the custom configuration dictionary.\r\nOr the goal is applicable only for the configuration recognized by the infrastructure? \r\n",
        "createdAt": "2024-07-02T08:06:17Z",
        "updatedAt": "2024-07-02T08:06:17Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "I would not manipulate custom config data at all - let's just ensure they are case insensitive (which I believe you already did).\r\n\r\nFor the infra-recongnized config keys - let's check with @baronfel what syntax feels preferrable. E.g. for `EvaluationAnalysisScope` configuration (within our code - only going to be added soon) - do we want that to be exposed in .editorconfig as `evaluation_analysis_scope` or anyhow differently?",
        "createdAt": "2024-07-02T08:12:58Z",
        "updatedAt": "2024-07-02T08:12:58Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "It was discussed offline, great idea from @baronfel is to simplify the usage of the `evaluation_analysis_scope` for future is to reference it from the configuration/editorconfig by the `scope` key :) ",
        "createdAt": "2024-07-04T15:11:10Z",
        "updatedAt": "2024-07-04T15:11:10Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "@JanKrivanek I would like to point out to the 1st Goal in the list\r\n\r\n> Configuration module should be able to translate options_with_underscores to C# OptionsInCamelCase.\r\n\r\nIs there a chnace you could clarify the use case for that? \r\n\r\nThe editorconfig is closely related to the user facing scenarios, hence I would like to propose to **decouple** the variable namings defined in the code from the configuration. \r\n\r\nMeaning that what was suggested if we have the `scope` key defined in the configuration it is mapped (1-1) to the EvaluatioAnalysisScope. Something like that: https://github.com/dotnet/msbuild/pull/10361/files",
        "createdAt": "2024-07-12T11:30:44Z",
        "updatedAt": "2024-07-12T11:32:16Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "> @JanKrivanek I would like to point out to the 1st Goal in the list\r\n> \r\n> > Configuration module should be able to translate options_with_underscores to C# OptionsInCamelCase.\r\n> \r\n> Is there a chnace you could clarify the use case for that?\r\n> \r\n> The editorconfig is closely related to the user facing scenarios, hence I would like to propose to **decouple** the variable namings defined in the code from the configuration.\r\n> \r\n> Meaning that what was suggested if we have the `scope` key defined in the configuration it is mapped (1-1) to the EvaluatioAnalysisScope. Something like that: https://github.com/dotnet/msbuild/pull/10361/files\r\n\r\n\r\nThe current implementation proposal looks great: https://github.com/dotnet/msbuild/pull/10361/files#diff-889c51f15e7c4415667244aaecf9a9c77442af8baefec35fe30a95ac3425915cR85-R93\r\n\r\nAs soon as we do not mandate casing nor multiword keys without separation (e.g. 'someconfigurationkey') within editorconfig - it's completely internal detail what will be the internal configuration keys within our code and how the mapping will work.\r\n\r\nLet's just make sure the documentation is up to date with what we support in editorconfig (which we might already have updated)\r\n\r\n\r\ntl;dr; - there might actually by no work already :-)",
        "createdAt": "2024-07-12T13:29:21Z",
        "updatedAt": "2024-07-12T13:29:21Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Conclusion: \r\nHaving the infrastructure that allows use any configuration values and keys from the defined in the code, the goal defined in the issue:\r\n> Configuration module should be able to translate options_with_underscores to C# OptionsInCamelCase.\r\n\r\n\r\nis solved. There is no need to have this possibility in the configuration provider to translate and map, but just map. \r\n\r\nPlease feel free to reopen if needed",
        "createdAt": "2024-07-24T10:51:01Z",
        "updatedAt": "2024-07-24T10:51:20Z",
        "author": {
          "login": "f-alizada"
        }
      }
    ]
  }
}