{
  "number": 8228,
  "title": "DeleteFiles function doesn't delete first file directory when second file is in the subfolder of first file",
  "body": "### Issue Description\r\nThere's a bug in the cleanup logic here. Specifically, it creates the source and dest files, and at the end of the test, it calls Helpers.DeleteFiles(sourceFile, destFile); That method loops through each file and deletes it if it exists, then deletes the directory containing it if it's empty...but when we delete the source file, the directory isn't empty; it has the destination folder/file. When we delete the destination file, its folder just contains the destination file, so we delete that. Afterwards, the source folder never gets deleted. That means we can't write to it.  Mentioned in https://github.com/dotnet/msbuild/pull/8211#discussion_r1040269656\r\n\r\nhttps://github.com/dotnet/msbuild/blob/c5532da3a3c99817e70d95fe9e07302ba72ee523/src/Shared/UnitTests/ObjectModelHelpers.cs#L1818-L1833",
  "state": "CLOSED",
  "createdAt": "2022-12-07T05:47:46Z",
  "updatedAt": "2023-01-19T08:01:10Z",
  "closedAt": "2023-01-19T08:01:09Z",
  "author": {
    "login": "JaynieBai"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "milestone": {
    "title": "8.0P1"
  },
  "comments": {
    "nodes": []
  }
}