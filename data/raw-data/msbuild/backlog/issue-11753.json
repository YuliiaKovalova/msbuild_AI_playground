{
  "number": 11753,
  "title": "Conditionally skipped targets may lead to bad performance of a build.",
  "body": "### Description\nWhen building a project:\n- If a target is skipped due to a condition during the project's build, and\n- Other projects depend on this target (commonly an initial target)\n\nThis situation can cause delays in the build process for dependent projects.\n\n### Symptoms\n- Significant variance in build times between builds.\n- MSBuild tasks show inconsistent performance between builds.\n- When switching to graph build mode, MSBuild tasks take considerably longer to resolve than expected (they should normally resolve almost immediately).\n\n### Technical details \nWhen the initial target of a project (or another target necessary for a dependent project's build) is skipped due to a condition:\n-The ResultsCache does not resolve this target in the main node when the build results are requested by a dependent project.\n-Instead, the project is rescheduled to build the skipped target again. It waits in the queue for a build node, and if the condition still evaluates to false, the node resolves the target immediately with the same \"skipped\" result.\n-If the build node is occupied, this can lead to delays in the overall build process.\nFor more details, refer to #11637.\n\n### Fix\nTo address this issue: \n1. Check for conditional targets on which dependent projects rely (e.g., conditional initial targets).\n2. If such targets are found, consider:\n    - Removing the condition, or\n    - Removing the dependency link from this target.\n",
  "state": "OPEN",
  "createdAt": "2025-04-23T08:43:08Z",
  "updatedAt": "2025-05-12T15:10:21Z",
  "closedAt": null,
  "author": {
    "login": "AR-May"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance"
  ],
  "comments": {
    "nodes": [
      {
        "body": "We have had a fix idea: by default accept \"skipped\" as a valid result for the target and let skipped targets not to cause ResultsCache miss. \n\nIt seems like current behavior on conditional targets would not allow us to make this change. See [this test](https://github.com/dotnet/msbuild/blob/9ac084356adce82b0329dae5facd292685665112/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs#L1430). The condition outside of the target is evaluated during evaluations, conditions inside of the target - on runtime, but conditions on the target itself are computed also during the run. So, there could be situation when the skipped target gets executed again and the condition could be evaluated differently: [documentation link](https://learn.microsoft.com/en-us/visualstudio/msbuild/target-element-msbuild?view=vs-2022#remarks). Whoever relies on this behavior might be broken if the target would be resolved from the results cache as skipped.\n\n",
        "createdAt": "2025-04-28T15:47:24Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "Next steps: revisit SDK and MSBuild common targets and fix the issue there instead of modifying the MSBuild behavior, similar as arcade fix was done: https://github.com/dotnet/arcade/pull/15743.",
        "createdAt": "2025-05-12T15:10:20Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}