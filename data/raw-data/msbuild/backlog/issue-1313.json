{
  "number": 1313,
  "title": "CopyFilesToOutputDirectory not respected",
  "body": "I have a snippet of MSBuild code in my C# project (private repo) that looks like this:\r\n\r\n```xml\r\n<PSModuleContent Include=\"../modules/Shared/Microsoft.PowerShell.Archive\">\r\n  <TargetPath>Modules/Microsoft.PowerShell.Archive</TargetPath>\r\n</PSModuleContent>\r\n```\r\n\r\nI then have some more MSBuild code in a targets file, imported into the C# project, that processes the items defined in the above snippet. Here is the targets file, in its entirety:\r\n\r\n```xml\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Target Name=\"CopyPSModules\" AfterTargets=\"Compile\" Condition=\"'@(PSModuleContent)' != ''\">\r\n    <CreateItem Include=\"@(PSModuleContent -> '%(Identity)/*')\" AdditionalMetadata=\"TargetPath=%(PSModuleContent.TargetPath)\">\r\n      <Output TaskParameter=\"Include\" ItemName=\"_PSModuleContentFiles\" />\r\n    </CreateItem>\r\n\r\n    <Message Importance=\"high\" Text=\"Here is the module content: @(_PSModuleContentFiles, '&#xD;&#xA;')\" />\r\n\r\n    <ItemGroup>\r\n      <Content Include=\"@(_PSModuleContentFiles)\">\r\n        <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n        <Link>%(_PSModuleContentFiles.TargetPath)/%(Filename)%(Extension)</Link>\r\n      </Content>\r\n    </ItemGroup>\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nWhen I build this project, the `CopyPSModules` task runs, and I can prove as such thanks to the `<Message/>` task. However, the `<Content>` items added are not copied to the output directory as they should be. However (as far as I can tell) any `<Content>` items included in the csproj file itself are copied. The main reason I am using the `CopyPSModules` target instead of simply including the files in the csproj itself is because the `<PSModuleContent>` items reference directories, not single files. I want the contents of the entire directory copied to the output.\r\n\r\nAlso note that I am running this task after the Compile task, which is the only way I can get it to run where I really want it: Before the private `_CopyOutOfDateSourceItemsToOutputDirectoryAlways` target that actually does the copying. If I run it before the public `CopyFilesToOutputDirectory` target, the `<ItemGroup>` within the target is evaluated after the `_CopyOutOfDateSourceItemsToOutputDirectoryAlways` target is run, and therefore has no effect. However, the change in timing does not seem to do anything. Any pointers? Thanks!",
  "state": "CLOSED",
  "createdAt": "2016-11-04T18:28:17Z",
  "updatedAt": "2024-02-21T17:24:31Z",
  "closedAt": "2019-11-04T21:30:30Z",
  "author": {
    "login": "wjk"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "*bump\r\nAny news on this topic ? Facing a similar issue.",
        "createdAt": "2017-12-20T07:27:16Z",
        "updatedAt": "2017-12-20T07:27:16Z",
        "author": {
          "login": "bartdkmediahuis"
        }
      },
      {
        "body": "This is very confusing, because the process to go from `@(Content)` items to actual file copies has many steps. The target in the OP adds `Content` items before the copy happens (in `_CopyOutOfDateSourceItemsToOutputDirectoryAlways`), but the copy doesn't look at `@(Content)`, it looks at `@(_SourceItemsToCopyToOutputDirectoryAlways)`, which is created in the target `GetCopyToOutputDirectoryItems`, using `@(ContentWithTargetPath)` which is created in `AssignTargetPaths`.\r\n\r\n@wjk I was able to get your example to work by changing the dependencies on your target:\r\n\r\n```diff\r\n  <Target Name=\"CopyPSModules\"\r\n-         AfterTargets=\"Compile\"\r\n+         BeforeTargets=\"AssignTargetPaths\" \r\n          Condition=\"'@(PSModuleContent)' != ''\">\r\n```\r\n\r\nThat way they get the full processing given to evaluation-time `Content` items, which starts at `AssignTargetPaths`.\r\n\r\n@bartdkmediahuis If that's not enough to get your problem fixed, can you share your targets?",
        "createdAt": "2017-12-20T16:31:40Z",
        "updatedAt": "2017-12-20T16:31:40Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Closing as @rainersigwald has provided a way to get the proper behavior.",
        "createdAt": "2019-11-04T21:30:30Z",
        "updatedAt": "2019-11-04T21:30:30Z",
        "author": {
          "login": "livarcocc"
        }
      }
    ]
  }
}