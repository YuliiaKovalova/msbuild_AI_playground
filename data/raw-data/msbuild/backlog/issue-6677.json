{
  "number": 6677,
  "title": "CS warnings appear in Resources.Designer.cs when a resource file excerpt line starts with `/`",
  "body": "Due to a bug in CodeDom's generation of C# code comments that the StronglyTypedResourceBuilder class in this repo does nothing to avoid, any project with `<GenerateDocumentationFile>true</GenerateDocumentationFile>` that embeds a file that contains a line that starts with `/` gets invalid C# documentation syntax in .Designer.cs, resulting in warnings:\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/119894744-fb340280-bf0a-11eb-99a1-0cfdd46f18a7.png)\r\n\r\nI asked first at https://github.com/dotnet/roslyn/issues/53729 in case the compiler team thought that documentation warnings should be skipped in generated code, and they decided that the current behavior is by design.\r\n\r\n### Steps to Reproduce\r\n\r\nFull repro: [Repro.zip](https://github.com/dotnet/roslyn/files/6556702/Repro.zip)\r\n\r\nResource file being included (real-life example was a SQL file that was truncated by the resource code generator when included in the XML comment):\r\n\r\n```\r\n\r\n/\r\n```\r\n\r\nProblematic excerpt from Resources.Designer.cs:\r\n\r\n```cs\r\n/// <summary>\r\n///   Looks up a localized string similar to \r\n////.\r\n/// </summary>\r\ninternal static string SomeResourceFile {\r\n    get {\r\n        return ResourceManager.GetString(\"SomeResourceFile\", resourceCulture);\r\n    }\r\n}\r\n```\r\n\r\nProject file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <GenerateDocumentationFile>true</GenerateDocumentationFile>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Update=\"Properties\\Resources.Designer.cs\">\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n      <DependentUpon>Resources.resx</DependentUpon>\r\n    </Compile>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <EmbeddedResource Update=\"Properties\\Resources.resx\">\r\n      <Generator>ResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nSpecific errors:\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/119894927-39c9bd00-bf0b-11eb-818a-fb195ef813a9.png)\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/119894894-2f0f2800-bf0b-11eb-8bc9-62701c664b2c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/119894847-1bfc5800-bf0b-11eb-83ea-2fbf378d4f39.png)\r\n\r\n### Analysis\r\n\r\nThis is where CodeDom creates the invalid `////` XML doc comment line: https://github.com/dotnet/runtime/blob/v5.0.6/src/libraries/System.CodeDom/src/Microsoft/CSharp/CSharpCodeGenerator.cs#L879\r\n.NET Framework's CodeDom has the same bug: https://referencesource.microsoft.com/#System/compmod/microsoft/csharp/csharpcodeprovider.cs,e0b125d92a26ca23\r\n\r\nOn that line it outputs `///` because of `string commentLineStart = e.DocComment ? \"///\" : \"//\";` outside that loop. Then the next character of `value` that will be written after that is a single `/`. This causes invalid C# any time a forward slash follows a newline in `CodeComment.Text`.\r\n\r\nThere does not appear to be a way to work around this by instructing the Resources.Designer.cs generator to stop putting file content in XML comments: https://github.com/dotnet/msbuild/blob/v16.10.0/src/Tasks/system.design/stronglytypedresourcebuilder.cs#L562-L593\r\n\r\nA workaround is to put this in .editorconfig:\r\n\r\n```ini\r\n[*.Designer.cs] # Workaround for https://github.com/dotnet/roslyn/issues/53729\r\ndotnet_diagnostic.CS1570.severity = none\r\ndotnet_diagnostic.CS1587.severity = none\r\n```\r\n\r\n### Versions & Configurations\r\n\r\nVisual Studio 16.10.0\r\n\r\nThis also afflicts the StronglyTypedResourceBuilder in .NET Framework's Microsoft.Build.Tasks.v4.0.dll assembly, file version 4.8.4084.0.",
  "state": "OPEN",
  "createdAt": "2021-07-15T00:33:35Z",
  "updatedAt": "2024-01-31T08:20:49Z",
  "closedAt": null,
  "author": {
    "login": "jnm2"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "It sounds like the main issue is in the runtime. Is there a canonical issue for this bug?",
        "createdAt": "2021-07-22T17:28:10Z",
        "updatedAt": "2021-07-22T17:28:10Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos Not yet. Would you like me to create it? Either way, MSBuild might want to work properly on .NET Framework and on past versions of .NET Core.",
        "createdAt": "2021-07-22T17:31:54Z",
        "updatedAt": "2021-07-22T17:31:54Z",
        "author": {
          "login": "jnm2"
        }
      },
      {
        "body": "@jnm2 That'd be great. We're interested in seeing where this ranks for them",
        "createdAt": "2021-07-22T17:53:19Z",
        "updatedAt": "2021-07-22T17:53:19Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos Here's the runtime issue: https://github.com/dotnet/runtime/issues/56267",
        "createdAt": "2021-07-24T14:02:46Z",
        "updatedAt": "2021-07-24T14:02:46Z",
        "author": {
          "login": "jnm2"
        }
      },
      {
        "body": "It's going to be low priority unless perhaps a community member offers a change. I assume you have to work around this anyway for .NET Framework",
        "createdAt": "2021-07-24T14:58:35Z",
        "updatedAt": "2021-07-24T14:58:35Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "ResXFileCodeGenerator can also generate a different kind of XML syntax error:\r\n\r\n> Properties\\Resources.Designer.cs(604,12,604,12): warning CS1570: XML comment has badly formed XML -- ''\u001b', hexadecimal value 0x1B, is an invalid character.'\r\n\r\nI suggest that CodeDom be left alone and StronglyTypedResourceBuilder omit the text sample from the XML when the string resource needs special cases like this. Either use a constant comment:\r\n\r\n```C#\r\n/// <summary>\r\n///   Looks up a localized string.\r\n/// </summary>\r\n```\r\n\r\nOr omit the whole XML comment. Roslyn will detect Resources.Designer.cs as a generated file and not report warning CS1591, even if the class and the properties are public.\r\n\r\nIf it is difficult to make StronglyTypedResourceBuilder recognize the problematic syntax, it could instead take a parameter that suppresses the text samples or XML comments of all string resources. This would be easy to implement for classes that are generated at build time with the GenerateResource task, but harder to implement for classes that are generated at design time with Visual Studio.",
        "createdAt": "2021-07-24T19:27:46Z",
        "updatedAt": "2021-07-24T19:27:46Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "> Roslyn will detect Resources.Designer.cs as a generated file and not report warning CS1591, even if the class and the properties are public.\r\n\r\nIs this the case? If so, then Roslyn also shouldn't be reporting the CS warnings that motivated filing this issue in the first place.",
        "createdAt": "2021-07-26T14:23:50Z",
        "updatedAt": "2021-07-26T14:23:50Z",
        "author": {
          "login": "jnm2"
        }
      },
      {
        "body": "This is now fixed in the main branch in dotnet/runtime, so I assume the fix will be in .NET 6. However, it still affects MSBuild running on .NET Framework and older .NET Core.\r\n\r\nThe nature of the .NET 6 fix is that it only comes into play when absolutely necessary to avoid invalid C#. This makes it easy for StronglyTypedResourceBuilder to fix the bug without affecting behavior on .NET 6. This can be done in a number of ways. If StronglyTypedResourceBuilder provides a string to CodeDOM that doesn't trigger the problem on older versions of .NET, .NET 6 behaves just like all other versions of .NET.\r\n\r\nOne of my favorite ways would be for StronglyTypedResourceBuilder to stop causing updates in the designer file when resource file content changes. Embedded files are usually edited directly and changed frequently without triggering the IDE to regenerate the .Designer.cs file, making the sudden update to the file excerpt in the doc comment in the .Designer.cs file feel arbitrary and unpredictable when something does trigger the IDE to regenerate it.",
        "createdAt": "2021-08-09T03:44:11Z",
        "updatedAt": "2021-08-09T03:45:15Z",
        "author": {
          "login": "jnm2"
        }
      }
    ]
  }
}