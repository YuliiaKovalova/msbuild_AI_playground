{
  "number": 4495,
  "title": "Unexpected performance degradation running CL tasks",
  "body": "### Steps to reproduce\r\n\r\n1. Download and unzip project [teavm-rhino-shell.zip](https://github.com/microsoft/msbuild/files/3372860/teavm-rhino-shell.zip)\r\n2. Open console and cd to location where project was unzipped.\r\n3. Run script that sets proper environment variables for x64 system (mine is `@call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\vc\\auxiliary\\build\\vcvarsall.bat\" x64`).\r\n4. Run `gen-project.bat`.\r\n5. `cd build`\r\n6. Open task manager and switch to tab with CPU load.\r\n7. `msbuild.exe teavm_rhino_shell.sln`\r\n\r\n### Expected  behavior\r\n\r\nBuild is expected to utilize all CPU cores\r\n\r\n### Actual behavior\r\n\r\nBuild starts utilizing all CPU cores (load is 100%), but after some time CPU utilization decreases to 100% / number of cpu cores (12% on my machine). Also I noticed that when build runs fast, short file names are printed to console, but right after performance degradation MSBuild start showing full commands, i.e.:\r\n\r\n```\r\n  DecimalFormat@dCurrencyField.c\r\n  DecimalFormat@dPercentField.c\r\n  TreeMap@dEntrySet.c\r\n  MatchResultImpl.c\r\n  TreeMap@dEntryIterator.c\r\n  IntArrHash.c\r\n  void.c    <-- slow down right after this file\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.21.27702\\bin\\HostX86\\x64\\CL.exe /c /I\"\r\n  C:\\Users\\konsoletyper\\devel\\vcpkg\\installed\\x64-windows\\include\" /ZI /JMC /nologo /W3 /WX- /diagnostics:column /MP /O\r\n  d /Ob0 /D WIN32 /D _WINDOWS /D \"CMAKE_INTDIR=\\\"Debug\\\"\" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forS\r\n  cope /Zc:inline /Fo\"teavm_rhino_shell.dir\\Debug\\/target/generated/c/date.c.obj\" /Fd\"teavm_rhino_shell.dir\\Debug\\vc142\r\n  .pdb\" /Gd /TC /errorReport:queue \"C:\\Users\\konsoletyper\\teavm-rhino-shell\\target\\generated\\c\\date.c\"\r\n  date.c\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.21.27702\\bin\\HostX86\\x64\\CL.exe /c /I\"\r\n  C:\\Users\\konsoletyper\\devel\\vcpkg\\installed\\x64-windows\\include\" /ZI /JMC /nologo /W3 /WX- /diagnostics:column /MP /O\r\n  d /Ob0 /D WIN32 /D _WINDOWS /D \"CMAKE_INTDIR=\\\"Debug\\\"\" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forS\r\n  cope /Zc:inline /Fo\"teavm_rhino_shell.dir\\Debug\\/target/generated/c/file.c.obj\" /Fd\"teavm_rhino_shell.dir\\Debug\\vc142\r\n  .pdb\" /Gd /TC /errorReport:queue \"C:\\Users\\konsoletyper\\teavm-rhino-shell\\target\\generated\\c\\file.c\"\r\n  file.c\r\n```\r\n\r\n### Environment data\r\n\r\n`msbuild /version` output: 16.1.76.45076\r\n\r\nOS info: Windows 10 Pro, 1903, buid 18362.175\r\n\r\nI have Visual Studio 2019 with CMake installed, and issue is reproduced both from console and from VS.\r\n\r\n### Additional information\r\n\r\nNinja does not show this performance degradation and always using all CPU cores. Ninja build performs much faster than MSBuild. However, Ninja is unable to build UWP application, so I can't use this as a workaround.",
  "state": "OPEN",
  "createdAt": "2019-07-09T12:37:24Z",
  "updatedAt": "2024-02-21T16:31:02Z",
  "closedAt": null,
  "author": {
    "login": "konsoletyper"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}