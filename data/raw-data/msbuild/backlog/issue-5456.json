{
  "number": 5456,
  "title": "[Static Graph] Transitive project references that are directly used fail with `/graph` ",
  "body": "The details are below. I get the sense this might be intended based on some of the documentation for the static graph feature. However, it's not obvious from the error thrown nor is it obvious from the public documentation (like the CLI -help) on the graph flag.\r\n\r\n### Steps to reproduce\r\n\r\n1. Have three projects, A,B,C\r\n2. Add project reference from A -> B\r\n3. Add project reference from B -> C\r\n4. Add direct call into C from A.\r\n5. msbuild.exe /t:build /graph A.csproj\r\n\r\n### Expected behavior\r\n\r\nSuccessfully compiles or throws error indicating code directly used cannot be indirectly referenced.\r\n\r\n### Actual behavior\r\n\r\n`The type or namespace name 'C' could not be found (are you missing a using directive or an assembly reference?) [C:\\...]`\r\n\r\n### Environment data\r\n`msbuild /version` output: `16.5.0.12403`\r\n",
  "state": "CLOSED",
  "createdAt": "2020-06-25T00:15:30Z",
  "updatedAt": "2024-02-21T17:03:19Z",
  "closedAt": "2020-06-26T18:27:33Z",
  "author": {
    "login": "kassemsandarusi"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Support for transitive references added in #5326\r\nTested and works for me with msbuild version 16.7.0.30801\r\n",
        "createdAt": "2020-06-26T18:27:33Z",
        "updatedAt": "2020-06-26T18:27:49Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  }
}