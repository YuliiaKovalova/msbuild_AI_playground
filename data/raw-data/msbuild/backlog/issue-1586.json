{
  "number": 1586,
  "title": "Allow copying empty directories with <Content>",
  "body": "This issue has been inspired by dotnet/cli#2911. In short, if I specify something like this:\r\n\r\n```xml\r\n<ItemGroup>\r\n    <Content Include=\"logs\">\r\n       <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </Content>\r\n</ItemGroup>\r\n```\r\n\r\nMSBuild will throw an error saying that the `Copy` task does not support copying directories. I can put in a glob, but if there are no files, nothing gets copied out (with a glob the *why* of that behavior is clear to me at least).\r\n\r\n/cc @moozzyk ",
  "state": "OPEN",
  "createdAt": "2017-01-19T16:41:38Z",
  "updatedAt": "2024-02-21T16:37:41Z",
  "closedAt": null,
  "author": {
    "login": "blackdwarf"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "The referenced issue should address the fact that the ANCM cannot currently create the path specified in `web.config` for stdout logs. https://github.com/aspnet/AspNetCoreModule/issues/43\r\n\r\nThe suggestion here is still great imo: I'd like to be able to create empty folders without having to resort to ...\r\n```\r\n<Target Name=\"CreateLogsFolder\" AfterTargets=\"AfterPublish\">\r\n  <MakeDir Directories=\"$(PublishDir)logs\" Condition=\"!Exists('$(PublishDir)logs')\" />\r\n</Target>\r\n```",
        "createdAt": "2017-01-19T17:09:28Z",
        "updatedAt": "2017-01-19T17:09:28Z",
        "author": {
          "login": "guardrex"
        }
      },
      {
        "body": "We're struggling with this also, after the JSON to csproj migration. GuardRex, how does your CreateLogsFolder target work? I've tried exactly that, and the logs folder isn't created in the final default publish location of .\\bin\\Debug\\PublishOutput. I suspect $PublishDir is that temporary publish location, before the final move?",
        "createdAt": "2017-03-14T21:43:15Z",
        "updatedAt": "2017-03-14T21:43:15Z",
        "author": {
          "login": "WildBamboo"
        }
      },
      {
        "body": "@WildBamboo That :point_up: does work here. Are you using the `Microsoft.NET.Sdk.Web` SDK? Here's a test proj sample `csproj` showing how I have it set up:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n    <RuntimeFrameworkVersion>1.1.1</RuntimeFrameworkVersion>\r\n    <WarningsAsErrors>true</WarningsAsErrors>\r\n    <OutputType>Exe</OutputType>\r\n    <Optimize Condition=\" '$(Configuration)' != 'Debug' \">true</Optimize>\r\n    <MvcRazorCompileOnPublish Condition=\" '$(Configuration)' == 'Release' \">true</MvcRazorCompileOnPublish>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.IISIntegration\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Console\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.ViewCompilation\" Version=\"1.1.0\" PrivateAssets=\"All\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"CreateLogsFolder\" AfterTargets=\"AfterPublish\">\r\n    <MakeDir Directories=\"$(PublishDir)Logs\" Condition=\"!Exists('$(PublishDir)Logs')\" />\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n![capture](https://cloud.githubusercontent.com/assets/1622880/23925164/f88fc1f2-08db-11e7-9038-0d6fd91b3f12.PNG)\r\n",
        "createdAt": "2017-03-14T21:47:14Z",
        "updatedAt": "2017-03-14T22:30:56Z",
        "author": {
          "login": "guardrex"
        }
      },
      {
        "body": "If directories could be used as items, it would also be great if it were possible to use their timestamps for incremental compilation (=> usable as `Inputs` and `Outputs` for targets).",
        "createdAt": "2017-03-14T22:18:09Z",
        "updatedAt": "2017-03-14T22:18:09Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "@GuardRex I've just made a new ASP.NET Core Web Application (.NET Core) project, using the ASP.NET Core 1.1 empty template, and added your target. I published to the filesystem, default location, and no logs folder is present.\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ApplicationInsights.AspNetCore\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.1\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"CreateLogsFolder\" AfterTargets=\"AfterPublish\">\r\n    <MakeDir Directories=\"$(PublishDir)Logs\" Condition=\"!Exists('$(PublishDir)Logs')\" />\r\n  </Target>\r\n  \r\n</Project>\r\n```\r\n\r\nSo I dunno; works on your machine :)",
        "createdAt": "2017-03-14T23:14:53Z",
        "updatedAt": "2017-03-14T23:15:13Z",
        "author": {
          "login": "WildBamboo"
        }
      },
      {
        "body": "@dasMulli Can you think of a reason why it might not work? Does it need an entry point to work?\r\n\r\n@WildBamboo btw - the `wwwroot` folder is handled by the `Sdk.Web`, so you can drop that `<ItemGroup>` if you want. It shouldn't hurt anything tho if you leave it there.",
        "createdAt": "2017-03-14T23:20:02Z",
        "updatedAt": "2017-03-14T23:20:21Z",
        "author": {
          "login": "guardrex"
        }
      },
      {
        "body": "@GuardRex, wwwroot tip noted; that was just how the template came.",
        "createdAt": "2017-03-14T23:30:36Z",
        "updatedAt": "2017-03-14T23:30:36Z",
        "author": {
          "login": "WildBamboo"
        }
      },
      {
        "body": "Once you think you understand how things work, VS comes along and does things differently :trollface: \r\n\r\nIt really publishes the app to `obj\\Release\\netcoreapp1.1\\PubTmp\\Out` and then copies things around - but not the Logs folder. Doesn't appear to be target ordering either because even if I use `BeforeTargets=\"PerpareForPublish\"`, the web publish targets pretend it didn't happen.\r\n\r\nIf I understand it correctly, the logic for it lives somewhere in https://github.com/aspnet/websdk/tree/dev/src/Publish, maybe we can move this issue over there?",
        "createdAt": "2017-03-14T23:37:51Z",
        "updatedAt": "2017-03-14T23:38:46Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "@dasMulli So the reason it works for me is that I'm using VS Code! :trollface:  lol ... which runs right on the CLI without so much VS magic.\r\n\r\n@WildBamboo Yes, open an issue over on `websdk` ... but actually, I think there already is an issue over there about the `Logs` folder (I think). Search and see if you can piggyback on that issue (IIRC about it being there).",
        "createdAt": "2017-03-14T23:40:39Z",
        "updatedAt": "2017-03-14T23:41:22Z",
        "author": {
          "login": "guardrex"
        }
      },
      {
        "body": "However, I'm guessing the web targets would also need support for folders as items to get that out of the box - so we're back here.\r\n\r\nIn the meantime, we can of course hook into file system publish:\r\n```xml\r\n<Target Name=\"CreateLogsFolderOnFileSystem\" AfterTargets=\"FileSystemPublish\">\r\n  <MakeDir Directories=\"$(PublishUrl)Logs\" Condition=\"!Exists('$(PublishUrl)Logs')\" />\r\n</Target>\r\n```",
        "createdAt": "2017-03-14T23:42:38Z",
        "updatedAt": "2017-03-14T23:43:07Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Thanks all. I can't see any issue related to the logs folder, so I created https://github.com/aspnet/websdk/issues/152\r\n\r\nCurrently using the workaround suggested by @dasMulli above, which works great for what we need right now.",
        "createdAt": "2017-03-15T00:47:58Z",
        "updatedAt": "2017-03-15T00:47:58Z",
        "author": {
          "login": "WildBamboo"
        }
      },
      {
        "body": "Ok, so publishing in VS is sorted now, but I'm guessing the `FileSystemPublish` target doesn't run when using the cli `dotnet publish src\\myproj.csproj --framework net462 --output \"c:\\temp\" --configuration Release` since the log folder is not present at `c:\\temp\\logs`.\r\n\r\nSo I've now got one target for cli/VSCode, and one for VS:\r\n```\r\n  <Target Name=\"CreateLogsFolderDuringCliPublish\" AfterTargets=\"AfterPublish\">\r\n    <MakeDir Directories=\"$(PublishDir)logs\" Condition=\"!Exists('$(PublishDir)logs')\" />\r\n  </Target>\r\n\r\n  <Target Name=\"CreateLogsFolderDuringVSPublish\" AfterTargets=\"FileSystemPublish\">\r\n    <MakeDir Directories=\"$(PublishUrl)logs\" Condition=\"!Exists('$(PublishUrl)logs')\" />\r\n  </Target>\r\n```\r\n\r\nI can go home now :)",
        "createdAt": "2017-03-15T01:39:37Z",
        "updatedAt": "2017-03-15T01:40:14Z",
        "author": {
          "login": "WildBamboo"
        }
      },
      {
        "body": "I have another problem with it - I cannot have empty AppData folder on publish.\r\nIn my specific case I want to test sqlite database to be initialized and filled with test data, but before I have to open it and I get \"Unable to open file\" error, which I dont get even when folder is empty and there is no file.\r\nI believe there is more cases like that where something cannot check something when folder from path don't exist",
        "createdAt": "2020-01-15T16:09:48Z",
        "updatedAt": "2020-01-15T16:09:48Z",
        "author": {
          "login": "CaCTuCaTu4ECKuu"
        }
      },
      {
        "body": "Slightly off target but I thought it worth mentioning this here as I got to this thread trying to resolve my problem 'How can I create a folder when I publish my MVC 4 app in VS Code'.\r\n\r\nThe key to solving what you need to do is to look at the output of the publish process. I have a 'publish' process in my '.vscode/tasks.json' file thus:\r\n```\r\n        {\r\n            \"label\": \"publish\",\r\n            \"type\": \"shell\",\r\n            \"command\": \"msbuild\",\r\n            \"args\": [\r\n                // Ask msbuild to generate full paths for file names.\r\n                \"/property:GenerateFullPaths=true\",\r\n                \"/t:build\",\r\n                \"/p:Platform=AnyCPU\",\r\n                \"/p:Configuration=Release\",\r\n                \"/p:DeployOnBuild=true\", \r\n                \"/p:PublishProfile=FolderProfile\",\r\n                // Do not generate summary otherwise it leads to duplicate errors in Problems panel\r\n                \"/consoleloggerparameters:NoSummary\"\r\n            ],\r\n            \"group\": \"build\",\r\n            \"presentation\": {\r\n                // Reveal the output only if unrecognized errors occur.\r\n                \"reveal\": \"silent\"\r\n            },\r\n            // Use the standard MS compiler pattern to detect errors, warnings and infos\r\n            \"problemMatcher\": \"$msCompile\"\r\n        }\r\n```\r\nWhen this runs, open the terminal window (click on the 'Building..' in the taskbar), and check the headings in the output window printed in blue. When I was building an old MVC 4 app I got headings like this:\r\nAfterWebPublish:\r\nPreAutoParameterizationWebConfigConnectionStrings:\r\n\r\nTo trigger my post publish task to create an output folder, I created an section like this in my .csproj file:\r\n```\r\n  <Target Name=\"AfterWebPublish\" AfterTargets=\"WebFileSystemPublish\">\r\n    <MakeDir Directories=\"$(PublishUrl)\\logs\" Condition=\"!Exists('$(PublishUrl)\\logs')\" />\r\n  </Target>\r\n```\r\nN.B. The name of the event in AfterTargets=\"XYZ\" needs to match the name of the event observed earlier.",
        "createdAt": "2020-04-19T19:19:58Z",
        "updatedAt": "2020-04-19T19:22:47Z",
        "author": {
          "login": "ianef"
        }
      }
    ]
  }
}