{
  "number": 6791,
  "title": "project that references a task project, builds on Visual studio but not with donet build",
  "body": "I have created a task project (.net standard 2.0), this is referenced by a .net 5 project and uses its task as below :\r\n\r\n```\r\n<Target Name=\"CopyTaskDLL\" AfterTargets=\"CopyFilesToOutputDirectory\">\r\n  <Copy SourceFiles=\"$(OutDir)TaskA.DLL\" DestinationFolder=\"$(TempFolder)\"/>\r\n  <--!To prevent ms build lock the dll the task.dll is copied to temp folder-->\r\n</Target>\r\n\r\n<Using TaskFactory = \"TaskHostFactory\" TaskName=\"TaskA\" AssemblyFile=\"$(TempFolder)\\TaskA.DLL\"/>\r\n\r\n<Target Name=\"TaskA\" DependsOnTargets=\"CopyFilesToOutputDirectory\"  AfterTargets=\"CopyFilesToOutputDirectory\">\r\n    <TaskA />\r\n</Target >\r\n```\r\n\r\nIt builds successfully in Visual Studio and runs the TaskA, however when I run the dotnet build, it fails  : \r\n\r\n`Could not run the \"TaskA\" task because MSBuild could not create or connect to a task host with runtime \"CLR4\" and architecture \"x64\".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable \"C:\\Program Files\\dotnet\\sdk\\5.0.303\\MSBuild.exe\" exists and can be run.`\r\n\r\n**Note**: \r\nAlready tried to add the mentioned config [here] (https://stackoverflow.com/questions/61663658/why-is-msbuild-exe-missing-in-c-program-files-dotnet-sdk-3-1-201-causing-azure) to both projects but it did not work. \r\n\r\ndotnet --verision : 5.0.303",
  "state": "CLOSED",
  "createdAt": "2021-08-27T09:53:38Z",
  "updatedAt": "2024-02-21T14:11:48Z",
  "closedAt": "2021-08-30T21:56:25Z",
  "author": {
    "login": "persiandeveloper"
  },
  "labels": [
    "has-repro",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "What happens if you add `Architecture=\"x64\"` (or x86) to your usingtask like so?\r\n\r\n<UsingTask TaskFactory=\"TaskHostFactory\" TaskName=\"TaskA\" AssemblyFile=\"$(TempFolder)\\TaskA.DLL\" Architecture=\"x64\"/>\r\n\r\nIf that doesn't work, could you provide a simple repro project as a github repo? That way we can poke around and quickly see what's going on.",
        "createdAt": "2021-08-27T21:18:01Z",
        "updatedAt": "2021-08-27T21:19:25Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> What happens if you add `Architecture=\"x64\"` (or x86) to your usingtask like so?\r\n> \r\n> If that doesn't work, could you provide a simple repro project as a github repo? That way we can poke around and quickly see what's going on.\r\n\r\nI pushed it here https://github.com/persiandeveloper/custom-build-task/tree/use-props",
        "createdAt": "2021-08-28T17:25:40Z",
        "updatedAt": "2021-08-28T17:25:40Z",
        "author": {
          "login": "persiandeveloper"
        }
      },
      {
        "body": "Notes as I go:\r\n\r\n`msbuild *.sln` works with 17.0 preview, `dotnet build *.sln` fails with 6.0.100 preview 7.\r\n\r\nIn the error message: \r\n`and (2) that the required executable \"C:\\Program Files\\dotnet\\sdk\\6.0.100-preview.7.21379.14\\MSBuild.exe\" exists and can be run.`\r\n\r\nis this just the error message, or are we attempting to look for a `.exe` where it should find the `.dll`? Seems like a red herring. cc @rainersigwald ",
        "createdAt": "2021-08-30T21:40:40Z",
        "updatedAt": "2021-08-30T21:40:40Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I don't think we support taskhosts on core at the moment: dotnet/msbuild#5158",
        "createdAt": "2021-08-30T21:42:54Z",
        "updatedAt": "2021-08-30T21:42:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "As Rainer just reminded me offline, `TaskFactory=\"TaskHostFactory\"` causes the task to run out of process, which isn't supported in `dotnet build` scenarios.\r\n\r\nIf you can get away with it, you can remove that metadata and your build should work fine. Closing this as a duplicate of https://github.com/dotnet/msbuild/issues/5158.\r\n\r\nFeel free to comment here with any more questions!",
        "createdAt": "2021-08-30T21:56:25Z",
        "updatedAt": "2021-08-30T21:56:25Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}