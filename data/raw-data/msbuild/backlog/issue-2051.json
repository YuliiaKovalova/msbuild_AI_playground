{
  "number": 2051,
  "title": "XmlPoke task should save changes when only attribute values are changed",
  "body": "The `XmlPoke` task only saves the xml document it is modifying if changes have been made, however with certain XPath expressions the changes are erroneously not counted, so while the poke does occur, it will not be saved unless other changes are made which are counted. The underlying problem is likely misuse of a `XPathNodeIterator`, which is not guaranteed to work properly if modifications are being made to the nodes as they are iterated, and misuse of the `Count` property on the `XPathNodeIterator`.\r\n\r\nHere is a small example that reproduces the problem.\r\n\r\n- Save the files listed below into the same directory\r\n- Run `MSBuild /v:detailed test.targets` on the command line\r\n- Observe output.xml\r\n- Remove `<replaceme/>` from line 3 in test.xml\r\n- Run MSBuild and observe output.xml again\r\n\r\nYou will notice that the value of the attribute on line 2 of test.xml is replaced due to the `/root/element/@attr[.='replaceme']` portion of the XPath expression only if the `<replaceme/>` element exists in the document. This is because the poke due to `/root/replaceme` is counted, whereas the replacement of the attribute value is not. The poke is always visible in the build output.\r\n\r\n_test.targets_\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n\t<Target Name=\"Build\">\r\n\t\t<Copy SourceFiles=\"test.xml\" DestinationFiles=\"output.xml\"/>\r\n\t\t<XmlPoke Query=\"/root/element/@attr[.='replaceme']|/root/replaceme\" Value=\"X\" XmlInputPath=\"output.xml\"/>\r\n\t</Target>\r\n</Project>\r\n```\r\n_test.xml_\r\n```\r\n<root>\r\n  <element attr=\"replaceme\" />\r\n  <replaceme/>\r\n</root>\r\n```",
  "state": "CLOSED",
  "createdAt": "2017-05-03T21:10:22Z",
  "updatedAt": "2024-02-21T17:19:24Z",
  "closedAt": "2022-01-12T17:04:26Z",
  "author": {
    "login": "kygagner"
  },
  "labels": [
    "help wanted",
    "Area: Tasks",
    "Good First Issue",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Other users on StackOverflow have discovered this problem as well.\r\n[MSBuild - XPath - XmlPeek can read but XmlPoke can not write](https://stackoverflow.com/a/30244041/901812)",
        "createdAt": "2017-06-26T18:19:23Z",
        "updatedAt": "2017-06-26T18:19:23Z",
        "author": {
          "login": "kygagner"
        }
      },
      {
        "body": "This issue is the more annoying because just four extra lines in src/Tasks/XmlPoke.cs would dispose of it:\r\n\r\n```diff\r\n@@ -199,12 +199,14 @@ public override bool Execute()\r\n             }\r\n \r\n             XPathNodeIterator iter = nav.Select(expr);\r\n+            int count = 0;\r\n \r\n             while (iter.MoveNext())\r\n             {\r\n                 try\r\n                 {\r\n                     iter.Current.InnerXml = _value.ItemSpec;\r\n+                    count++;\r\n                     Log.LogMessageFromResources(MessageImportance.Low, \"XmlPoke.Replaced\", iter.Current.Name, _value.ItemSpec);\r\n                 }\r\n                 catch (Exception e)\r\n@@ -219,9 +221,9 @@ public override bool Execute()\r\n                 }\r\n             }\r\n \r\n-            Log.LogMessageFromResources(MessageImportance.Normal, \"XmlPoke.Count\", iter.Count);\r\n+            Log.LogMessageFromResources(MessageImportance.Normal, \"XmlPoke.Count\", count);\r\n \r\n-            if (iter.Count > 0)\r\n+            if (count > 0)\r\n             {\r\n #if RUNTIME_TYPE_NETCORE\r\n                 using (Stream stream = File.Create(_xmlInputPath.ItemSpec))\r\n```\r\nI donate this diff to anyone willing to go through the rigmarole of building and submitting a PR.",
        "createdAt": "2017-10-30T20:48:19Z",
        "updatedAt": "2020-07-01T16:21:54Z",
        "author": {
          "login": "atykhyy"
        }
      },
      {
        "body": "Using Visual Studio 16.9.2 the issue appears to be fixed - is that expected due to the merged in change, or is this not in VS yet and simply a change in undefined behavior? If the former, we should close the issue.",
        "createdAt": "2021-04-28T18:50:38Z",
        "updatedAt": "2021-04-28T18:51:09Z",
        "author": {
          "login": "kygagner"
        }
      },
      {
        "body": "Tested on macOS Monterey (v12.1) with an Apple M1 Pro CPU with .NET 6.0 for ARM64.\r\n\r\n`dotnet msbuild -version` reports\r\n```\r\nMicrosoft (R) Build Engine version 17.0.0+c9eb9dd64 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n17.0.0.52104\r\n```\r\n\r\nFollowing the steps in the example in the original description (except using `dotnet msbuild /v:detailed test.targets`), the problem is not reproduced. The problem appears to be fixed and the issue can probably be closed.",
        "createdAt": "2022-01-09T23:56:48Z",
        "updatedAt": "2022-01-09T23:56:48Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "I have confirmed this issue fixed in both the .NET Framework MSBuild shipped with Visual Studio 2019 and the .NET MSBuild shipped with .NET 6 SDK.",
        "createdAt": "2022-01-12T17:04:26Z",
        "updatedAt": "2022-01-12T17:04:26Z",
        "author": {
          "login": "kygagner"
        }
      }
    ]
  }
}