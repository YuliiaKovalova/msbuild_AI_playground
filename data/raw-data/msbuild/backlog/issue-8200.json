{
  "number": 8200,
  "title": "Replacing a property group with an import of a project which has the same property group changes behavior",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\n<!--\r\n* Please include a clear and concise description of the problem.\r\n-->\r\nWe are using MSBuild with a Visual C++ project. We would like to set a property called LocalDebuggerCommand from an imported project (in Nuget packaged SDK, but this has nothing to do with Nuget, it happens without it too), this however does not work for us.\r\n\r\n### Steps to Reproduce\r\n<!--\r\n* Include as much of the following as possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behaviour.\r\n* Your command line invocation\r\n\r\nIf providing steps to reproduce the issue proves difficult, consider attaching a binlog:\r\n[Details on sharing binary logs](https://aka.ms/msbuild/binlog)\r\n[More information on binary logs](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md)\r\nNOTE: Binary logs capture environment information. Ensure it does not include any information you don't want to be public before you attach one.\r\nIf you want to share one just with Microsoft, you can [report a problem through Visual Studio](https://developercommunity.visualstudio.com/report) and share it privately with Microsoft.\r\n-->\r\nCreate a C++ dll library app. Create a property group in the vcxproj and set the LocalDebuggerCommand to some exe, observe that it works properly (this property defines the app to start on launch). Now replace the property group with an import, and add the property group in the imported project (directly, without a target), observe that now the property has no effect.\r\n\r\n### Expected Behavior\r\n<!--\r\n* The expected output or behavior.\r\n-->\r\nProperties should work the same way when set by imported projects.\r\n\r\n### Actual Behavior\r\n<!--\r\n* The actual output or behavior.\r\n-->\r\nSome properties (e.g. LocalDebuggerCommand) do not work when set by imported projects.\r\n\r\n### Analysis\r\n<!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n-->\r\nWe suspect that either:\r\n* Our assumption that the import tag for msbuild is like a import pragma in C++ is wrong. The import tag does not import the property where it is placed - according to MSDN it should\r\n* Some properties are read directly from the msbuild project file by tools directly, and they do not check imported projects for these values - this would mean it is a limitation of visual studio\r\n\r\n### Versions & Configurations\r\n<!--\r\n* In a Visual Studio developer command prompt, run `msbuild -version` and paste the output here.\r\n* If applicable, include the version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\n* Post any other relevant configuration settings here.\r\n*   OS, architecture, etc.\r\n-->\r\nMSBuild version 17.4.0+18d5aef85 for .NET Framework\r\n17.4.0.51802\r\n\r\nWindows 11 22H2\r\nVS 2022 17.4.1",
  "state": "CLOSED",
  "createdAt": "2022-11-29T15:32:11Z",
  "updatedAt": "2024-02-21T14:06:58Z",
  "closedAt": "2023-06-24T19:01:35Z",
  "author": {
    "login": "axodox"
  },
  "labels": [
    "bug",
    "needs-more-info",
    "stale",
    "closed-by-bot",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I tried this out with a generic property in a csproj, and it worked as expected\u2014that is, adding something like `<Import Project=\"Import.props\" />` and setting a property in it made that property available when I then tried to print that out. With that in mind, I suspect this is a CPS-specific issue. @lifengl, does that sound right to you?",
        "createdAt": "2022-12-03T00:09:06Z",
        "updatedAt": "2022-12-03T00:09:06Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "This C++ Project [Dll1.zip](https://github.com/dotnet/msbuild/files/11351709/Dll1.zip) set the property LocalDebuggerCommand in the imported project. it works as expected. \r\n@axodox  Could you have a look if there are any differences between your project and mine?\r\n",
        "createdAt": "2023-04-28T08:48:44Z",
        "updatedAt": "2023-04-28T08:48:44Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "> Some properties are read directly from the msbuild project file by tools directly, and they do not check imported projects for these values - this would mean it is a limitation of visual studio\r\n\r\nIIRC, Visual Studio 2017 reads `ProjectTypeGuids` from a C# project even if it is within an XML comment.",
        "createdAt": "2023-04-28T08:53:40Z",
        "updatedAt": "2023-04-28T08:53:40Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "> This C++ Project [Dll1.zip](https://github.com/dotnet/msbuild/files/11351709/Dll1.zip) set the property LocalDebuggerCommand in the imported project. it works as expected. @axodox Could you have a look if there are any differences between your project and mine?\r\n\r\nThanks for the example. I think there could be difference in the import order, as my project comes through a nuget package, I will look into it next week.",
        "createdAt": "2023-04-28T11:00:08Z",
        "updatedAt": "2023-04-28T11:00:08Z",
        "author": {
          "login": "axodox"
        }
      },
      {
        "body": "The /pp switch might help show ordering here.",
        "createdAt": "2023-04-28T12:41:39Z",
        "updatedAt": "2023-04-28T12:41:39Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.",
        "createdAt": "2023-06-10T00:01:40Z",
        "updatedAt": "2023-06-10T00:01:40Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "This issue was closed due to inactivity. If you can still reproduce this bug, please comment with the requested information, detailed steps to reproduce the problem, or any other notes that might help in the investigation.",
        "createdAt": "2023-06-24T19:01:36Z",
        "updatedAt": "2023-06-24T19:01:36Z",
        "author": {
          "login": "ghost"
        }
      }
    ]
  }
}