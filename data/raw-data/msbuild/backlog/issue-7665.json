{
  "number": 7665,
  "title": "Items returned by tasks not considered for EmbedInBinlog",
  "body": "I'd expect this to embed `C:\\temp\\1.txt` into the binlog, but it doesn't:\r\n\r\n```\r\n<Project>\r\n\r\n  <Target Name=\"Build\">\r\n    <MSBuild Projects=\"$(MSBuildThisFileFullPath)\" Targets=\"GetItems\">\r\n      <Output TaskParameter=\"TargetOutputs\" ItemName=\"EmbedInBinlog\" />\r\n    </MSBuild>\r\n  </Target>\r\n\r\n  <Target Name=\"GetItems\" Returns=\"@(ResultItem)\">\r\n    <ItemGroup>\r\n      <ResultItem Include=\"C:\\temp\\1.txt\" />\r\n    </ItemGroup>\r\n  </Target>\r\n  \r\n</Project>\r\n```\r\n\r\nAs a workaround to fix this, also need to add an explicit ItemGroup:\r\n```\r\n<Project>\r\n\r\n  <Target Name=\"Build\">\r\n    <MSBuild Projects=\"$(MSBuildThisFileFullPath)\" Targets=\"GetItems\">\r\n      <Output TaskParameter=\"TargetOutputs\" ItemName=\"EmbedInBinlog\" />\r\n    </MSBuild>\r\n    <ItemGroup>\r\n      <EmbedInBinlog Include=\"@(EmbedInBinlog)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"GetItems\" Returns=\"@(ResultItem)\">\r\n    <ItemGroup>\r\n      <ResultItem Include=\"C:\\temp\\1.txt\" />\r\n    </ItemGroup>\r\n  </Target>\r\n  \r\n</Project>\r\n```\r\n\r\nI think this line:\r\nhttps://github.com/dotnet/msbuild/blob/f1dae6ab690483458d37b8900f1d1e4a5fc72851/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs#L521\r\n\r\nshould also allow for `TaskParameterMessageKind.TaskOutput`",
  "state": "CLOSED",
  "createdAt": "2022-06-01T19:29:42Z",
  "updatedAt": "2024-02-21T17:00:23Z",
  "closedAt": "2022-08-16T17:45:34Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "help wanted",
    "Area: Debuggability",
    "Good First Issue",
    "Area: Logging",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "MeikTranel"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Y'all can assign me this one - just have to do the dunkin' after \u2b06\ufe0f",
        "createdAt": "2022-06-01T19:34:46Z",
        "updatedAt": "2022-06-01T19:34:46Z",
        "author": {
          "login": "MeikTranel"
        }
      },
      {
        "body": "hey btw i've noticed this last week - does anyone else have issues with dependabot running on forks recently?https://github.com/MeikTranel/msbuild/pull/1/",
        "createdAt": "2022-06-01T20:00:45Z",
        "updatedAt": "2022-06-01T20:00:45Z",
        "author": {
          "login": "MeikTranel"
        }
      },
      {
        "body": "@MeikTranel it has happened on mine before but I was assuming/hoping that was a weird vestige of me having tested it there before configuring it here. Can you check this setting on your fork? https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuring-dependabot-version-updates#enabling-version-updates-on-forks",
        "createdAt": "2022-06-01T20:03:02Z",
        "updatedAt": "2022-06-01T20:03:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Is it possible this dependabot.csproj is responsible? \r\n![image](https://user-images.githubusercontent.com/6466560/171492968-c4be496c-0c7a-4a07-bc9a-bd92f5342d8b.png)\r\n\r\nThere's no disable there though.\r\n\r\nEven under settings dependabot seems disabled:\r\n![image](https://user-images.githubusercontent.com/6466560/171493313-5223b1fc-3411-4600-a0f0-710022d2f3f9.png)\r\n\r\n",
        "createdAt": "2022-06-01T20:14:43Z",
        "updatedAt": "2022-06-01T20:14:43Z",
        "author": {
          "login": "MeikTranel"
        }
      },
      {
        "body": "Well good news is @KirillOsenkov was absolutely right - it really just was that TaskOutput that needed to be added to the filter.\r\n\r\n![image](https://user-images.githubusercontent.com/6466560/171508233-ddb90d2b-2bbf-49a2-89c7-5e119c36ff60.png)\r\n\r\nOn the other hand i'm having trouble writing a test for this one and i really think the binary log deserves some love there (only a single test confirming parallel and console loggers are roundtripping through binary logs - otherwise no test coverage for binary log contents).\r\n\r\nI'd like some guidance regarding the BinaryLogs created by the `TestEnvironment` / `ObjectModelHelper`  in the following code:\r\n<details>\r\n  <summary>BinaryLogger_Tests.cs</summary>\r\n\r\n  ```csharp\r\n [Fact]\r\npublic void BinaryLoggerShouldEmbedFilesViaTaskOutput()\r\n{\r\n    using var buildManager = new BuildManager();\r\n    var binaryLogger = new BinaryLogger()\r\n    {\r\n        Parameters = $\"LogFile={_logFile}\",\r\n        CollectProjectImports = BinaryLogger.ProjectImportsCollectionMode.Embed\r\n    };\r\n\r\n    var testProject = @\"\r\n<Project>\r\n  <Target Name=\"\"Build\"\">\r\n    <MSBuild Projects=\"\"$(MSBuildThisFileFullPath)\"\" Targets=\"\"GetItems\"\" >\r\n      <Output TaskParameter=\"\"TargetOutputs\"\" ItemName=\"\"EmbedInBinlog\"\" />\r\n    </MSBuild>\r\n  </Target>\r\n\r\n  <Target Name=\"\"GetItems\"\" Returns=\"\"@(ResultItem)\"\">\r\n    <CreateItem Include=\"\"../**/*\"\">\r\n        <Output TaskParameter=\"\"Include\"\" ItemName=\"\"ResultItem\"\" />\r\n    </CreateItem>\r\n  </Target>\r\n</Project>\";\r\n    ObjectModelHelpers.BuildProjectExpectSuccess(testProject, binaryLogger);\r\n\r\n    //Replay and verify file entries\r\n    var logReader = new BinaryLogReplayEventSource();\r\n    var files = new List<string>();\r\n    logReader.AnyEventRaised += (object sender, BuildEventArgs e) =>\r\n    {\r\n        if (e is ProjectImportedEventArgs importArgs)\r\n        {\r\n            files.Add(importArgs.File);\r\n        }\r\n    };\r\n    logReader.Replay(_logFile);\r\n}\r\n  ```\r\n  \r\nWhen i open the log written by the following code the entire thing looks like a light binlog - no parameter logging nothing.\r\n  \r\n![image](https://user-images.githubusercontent.com/6466560/171511652-11a3ba4d-9641-4f8b-87fd-ddd280ff1808.png)\r\n\r\n If i run `dotnet build /bl` over the same temporary project file everything is where it is expected - see above.\r\n</details>\r\n",
        "createdAt": "2022-06-01T22:29:30Z",
        "updatedAt": "2022-06-01T22:30:51Z",
        "author": {
          "login": "MeikTranel"
        }
      },
      {
        "body": "could it be we need to set the verbosity to diagnostic inside BuildProjectExpectSuccess?\r\n\r\n",
        "createdAt": "2022-06-02T00:38:57Z",
        "updatedAt": "2022-06-02T00:38:57Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I already tried setting `BinaryLogger.Verbosity` to `Diagnostic` to no avail - is there another verbosity setting somewhere i'm missing? I'm also not sure which of the APIs i'm supposed to use for running a simple project build with a binarylogger attached that i can parse for events later on. Maybe @rainersigwald has some guidance?",
        "createdAt": "2022-06-02T08:27:51Z",
        "updatedAt": "2022-06-02T08:27:51Z",
        "author": {
          "login": "MeikTranel"
        }
      },
      {
        "body": "> There's no disable there though.\r\n> \r\n> Even under settings dependabot seems disabled:\r\n\r\nAsked internally, and got pointed to dependabot/dependabot-core#2804 which sure sounds related. The workaround suggested there is delete/recreate the fork, which is pretty heavyweight.",
        "createdAt": "2022-06-02T14:08:15Z",
        "updatedAt": "2022-06-02T14:08:15Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Jesus somebody is pretty petty under that issue - how did they manage to link 1500 PRs to that issue :D:D\r\n\r\nHave you looked at the problem regarding tests and binary logs ? Wanted to give it another look after work today.\r\n\r\nMake sure to expand the spoiler section: https://github.com/dotnet/msbuild/issues/7665#issuecomment-1144206481",
        "createdAt": "2022-06-02T14:13:48Z",
        "updatedAt": "2022-06-02T14:13:48Z",
        "author": {
          "login": "MeikTranel"
        }
      },
      {
        "body": "I think i found a good solution to have some test coverage - sorry that it took so long - got super distracted and kind of forgot that i still had this laying around.",
        "createdAt": "2022-08-08T22:11:05Z",
        "updatedAt": "2022-08-08T22:11:05Z",
        "author": {
          "login": "MeikTranel"
        }
      }
    ]
  }
}