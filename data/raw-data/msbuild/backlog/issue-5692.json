{
  "number": 5692,
  "title": "missing MinimumRecommendedRules.ruleset because of double backslash",
  "body": "### Issue Description\r\nIt looks like that after upgrade to 16.7.2 the msbuild behaves different in calculate the ruleset path:\r\n```\r\n/ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\r\n```\r\n\r\n**see analysis**\r\n\r\n### Steps to Reproduce\r\nbuild a project in VS2019 or with Msbuild which has enabled the\r\nmy settings:\r\n\r\n```\r\n    <CodeAnalysisIgnoreBuiltInRuleSets>true</CodeAnalysisIgnoreBuiltInRuleSets>\r\n    <CodeAnalysisIgnoreBuiltInRules>false</CodeAnalysisIgnoreBuiltInRules>\r\n    <CodeAnalysisFailOnMissingRules>true</CodeAnalysisFailOnMissingRules>\r\n```\r\n\r\n### Expected Behavior\r\nno warning\r\n\r\n### Actual Behavior\r\nwarning MSB3884\r\n### Analysis\r\nseems to appear after upgrade to 16.7.2 of VS2019\r\n**seems already in fixed in 16.8.0 Preview 2.0 or earlier preview**\r\n\r\n### Attach a binlog",
  "state": "CLOSED",
  "createdAt": "2020-08-28T11:54:57Z",
  "updatedAt": "2024-03-16T19:56:52Z",
  "closedAt": "2024-03-16T19:56:50Z",
  "author": {
    "login": "trivalik"
  },
  "labels": [
    "bug",
    "needs-more-info",
    "stale",
    "closed-by-bot",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I tried this with MSBuild 16.7.2 and 16.8.0 Preview 2.0, and I saw a warning for both. Can you clarify how you found that 16.8.0p2 works as expected? What version (before 16.7.2) also worked?\r\n\r\n(Knowing this will help me find which change may have induced this problem.)",
        "createdAt": "2020-09-02T16:35:26Z",
        "updatedAt": "2020-09-02T16:35:26Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Here is the test project which have warning with 16.7.0+b89cb5fde, but no warning with 16.8.0-preview-20411-05+9a32a8063\r\nI would say the VS2019 16.7.1 version did not had this issue.\r\n[TestWarning.zip](https://github.com/dotnet/msbuild/files/5186330/TestWarning.zip)\r\n\r\n",
        "createdAt": "2020-09-08T05:22:39Z",
        "updatedAt": "2020-09-08T05:51:13Z",
        "author": {
          "login": "trivalik"
        }
      },
      {
        "body": "I'm still having trouble seeing what you see. Building that project with 16.8 p2 (a slightly later version than yours still gave a warning:\r\n![image](https://user-images.githubusercontent.com/12969783/92505604-2fb73100-f1b9-11ea-9a58-f7067cb6a49b.png)\r\n\r\nOn the other hand, if I explicitly specified the path to the ruleset by adding:\r\n```\r\n<CodeAnalysisRuleSet>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>\r\n```\r\n\r\nIt was able to build with no warning despite the extra slash.\r\n![image](https://user-images.githubusercontent.com/12969783/92505469-faaade80-f1b8-11ea-8cfd-9116a4eace4e.png)\r\n\r\nDoes that workaround work for you? I'm sorry this has been causing you trouble, but the file that tries to find the rule set (ResolveCodeAnalysisRuleSet.cs) hasn't been changed in the past few years, and I didn't see any change in behavior between versions when I tried the repro locally.",
        "createdAt": "2020-09-08T17:01:46Z",
        "updatedAt": "2020-09-08T17:01:46Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The thing is that our CI server has the same issue. 16.8.0 Preview.3.0 still works.\r\n\r\nAdding this workaround works, but I don't want:\r\n```\r\n  <PropertyGroup>\r\n\t<CodeAnalysisRuleSet>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Team Tools\\Static Analysis Tools\\Rule Sets\\MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>\r\n  </PropertyGroup>\r\n```\r\n\r\n\r\nThe output with -v:diag of 16.7.3\r\n\r\n```\r\n...\r\nResolveCodeAnalysisRuleSet-Aufgabe (Aufgaben-ID: 21)\r\n  Aufgabenparameter:CodeAnalysisRuleSet=MinimumRecommendedRules.ruleset (Aufgaben-ID: 21)\r\n  Aufgabenparameter:MSBuildProjectDirectory=D:\\TestWarning (Aufgaben-ID: 21)\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\Microsoft.CSharp.CurrentVersion.targets(135,9): warning MSB3884: Regelsatzdatei \"MinimumRecommendedRules.ruleset\" konnte nicht gefunden werden. [D:\\TestWarning\\TestWarning.csproj]\r\nAusf\u00fchren der ResolveCodeAnalysisRuleSet-Aufgabe beendet. (Aufgaben-ID: 21)\r\n```\r\n\r\nbut in preview version is the ResolveCodeAnalysisRuleSet ignored:\r\n```\r\nDas Ziel \"ResolveCodeAnalysisRuleSet\" wurde \u00fcbersprungen, da die Bedingung \"false\" war . ('$(CodeAnalysisRuleSet)' != '') wurde als ('' != '') ausgewertet.\r\n```\r\n\r\nMeans \"CodeAnalysisRuleSet\" is in preview empty.\r\nWhere is the default for \"CodeAnalysisRuleSet\" defined?",
        "createdAt": "2020-09-15T12:55:42Z",
        "updatedAt": "2020-09-15T12:56:23Z",
        "author": {
          "login": "trivalik"
        }
      },
      {
        "body": "I did some more digging, and here's what I found:\r\n1. There isn't a default version defined in MSBuild or the SDK.\r\n2. Roslyn explicitly specifies a location for the CodeAnalysisRuleSet.\r\n3. ResolveCodeAnalysisRuleSet (in MSBuild) hasn't been touched for 6+ years, as I noted earlier, and its condition specifies that it won't run unless there is some value defined for $(CodeAnalysisRuleSet). See https://github.com/dotnet/msbuild/blob/0220c5eaeac8dd1770a597a7ba4306651c421bf4/src/Tasks/Microsoft.CSharp.CurrentVersion.targets#L132\r\n\r\nPerhaps you used to have a custom .props or .targets file that gave you a default value?",
        "createdAt": "2020-09-15T15:14:46Z",
        "updatedAt": "2020-09-15T15:14:46Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "After searching I found that Microsoft.CodeAnalysis.Targets seems to set this variable.\r\n\r\nSince in  -v:diag of 16.7.3\r\n\r\n```\r\nCleanFile = TestWarning.csproj.FileListAbsolute.txt\r\nCmdUIContextGuid = {FAE04EC1-301F-11d3-BF4B-00C04F79EFBC}\r\nCodeAnalysisApplyLogFileXsl = false\r\nCodeAnalysisFailOnMissingRules = true\r\nCodeAnalysisForceOutput = true\r\nCodeAnalysisGenerateSuccessFile = true\r\nCodeAnalysisIgnoreBuiltInRules = false\r\nCodeAnalysisIgnoreBuiltInRuleSets = true\r\nCodeAnalysisIgnoreGeneratedCode = true\r\nCodeAnalysisIgnoreInvalidTargets = true\r\nCodeAnalysisIgnoreMissingIndirectReferences = false\r\nCodeAnalysisInputAssembly = Bin\\Debug\\TestWarning.dll\r\nCodeAnalysisLogFile = Bin\\Debug\\TestWarning.dll.CodeAnalysisLog.xml\r\nCodeAnalysisModuleSuppressionsFile = GlobalSuppressions.cs\r\nCodeAnalysisOutputToConsole = false\r\nCodeAnalysisOverrideRuleVisibilities = false\r\nCodeAnalysisPath = C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Team Tools\\Static Analysis Tools\\FxCop\\\r\nCodeAnalysisQuiet = false\r\nCodeAnalysisRuleDirectories = ;C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Team Tools\\Static Analysis Tools\\FxCop\\\\Rules\r\nCodeAnalysisRuleSet = MinimumRecommendedRules.ruleset\r\nCodeAnalysisSaveMessagesToReport = Active\r\nCodeAnalysisSearchGlobalAssemblyCache = true\r\nCodeAnalysisStaticAnalysisDirectory = C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Team Tools\\Static Analysis Tools\\\r\nCodeAnalysisSucceededFile = Bin\\Debug\\TestWarning.dll.lastcodeanalysissucceeded\r\nCodeAnalysisSummary = false\r\nCodeAnalysisTargets = C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\CodeAnalysis\\Microsoft.CodeAnalysis.targets\r\nCodeAnalysisTimeout = 120\r\nCodeAnalysisTreatWarningsAsErrors = false\r\nCodeAnalysisUpdateProject = false\r\nCodeAnalysisUseTypeNameInSuppression = true\r\nCodeAnalysisVerbose = false\r\n```\r\n\r\nbut in preview output is just the `CodeAnalysisRuleSet` assignment missing:\r\n\r\n```\r\nCleanFile = TestWarning.csproj.FileListAbsolute.txt\r\nCmdUIContextGuid = {FAE04EC1-301F-11d3-BF4B-00C04F79EFBC}\r\nCodeAnalysisApplyLogFileXsl = false\r\nCodeAnalysisFailOnMissingRules = true\r\nCodeAnalysisForceOutput = true\r\nCodeAnalysisGenerateSuccessFile = true\r\nCodeAnalysisIgnoreBuiltInRules = false\r\nCodeAnalysisIgnoreBuiltInRuleSets = true\r\nCodeAnalysisIgnoreGeneratedCode = true\r\nCodeAnalysisIgnoreInvalidTargets = true\r\nCodeAnalysisIgnoreMissingIndirectReferences = false\r\nCodeAnalysisInputAssembly = Bin\\Debug\\TestWarning.dll\r\nCodeAnalysisLogFile = Bin\\Debug\\TestWarning.dll.CodeAnalysisLog.xml\r\nCodeAnalysisModuleSuppressionsFile = GlobalSuppressions.cs\r\nCodeAnalysisOutputToConsole = false\r\nCodeAnalysisOverrideRuleVisibilities = false\r\nCodeAnalysisPath = C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\FxCop\\\r\nCodeAnalysisQuiet = false\r\nCodeAnalysisRuleDirectories = ;C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\FxCop\\\\Rules\r\nCodeAnalysisSaveMessagesToReport = Active\r\nCodeAnalysisSearchGlobalAssemblyCache = true\r\nCodeAnalysisStaticAnalysisDirectory = C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Team Tools\\Static Analysis Tools\\\r\nCodeAnalysisSucceededFile = Bin\\Debug\\TestWarning.dll.lastcodeanalysissucceeded\r\nCodeAnalysisSummary = false\r\nCodeAnalysisTargets = C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\CodeAnalysis\\Microsoft.CodeAnalysis.targets\r\nCodeAnalysisTimeout = 120\r\nCodeAnalysisTreatWarningsAsErrors = true\r\nCodeAnalysisUpdateProject = false\r\nCodeAnalysisUseTypeNameInSuppression = true\r\nCodeAnalysisVerbose = false\r\n```\r\n\r\nbut  I cannot see evalutation of condition in this Microsoft.CodeAnalysis.targets file:\r\n\r\n```\r\n<When Condition=\"!Exists('$(CodeAnalysisRuleSet)') and ('$(CodeAnalysisVSSku)'=='Express' or ('$(CodeAnalysisRules)'=='' and '$(CodeAnalysisRuleAssemblies)'=='' and '$(CodeAnalysisRuleSet)'==''))\">\r\n```",
        "createdAt": "2020-09-16T07:31:05Z",
        "updatedAt": "2020-09-16T07:31:05Z",
        "author": {
          "login": "trivalik"
        }
      },
      {
        "body": "I found the difference!!! \r\n\r\nIn preview MSBuild\\Microsoft\\VisualStudio\\v16.0\\CodeAnalysis\\Microsoft.CodeAnalysis.Targets is this *missing*:\r\n```\r\n          <Otherwise>\r\n              <PropertyGroup>\r\n                <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>\r\n              </PropertyGroup>\r\n          </Otherwise>\r\n```",
        "createdAt": "2020-09-16T07:47:31Z",
        "updatedAt": "2020-09-16T07:47:31Z",
        "author": {
          "login": "trivalik"
        }
      },
      {
        "body": "Ah, this actually explains a lot! I was very confused because changing the version of _MSBuild_ didn't affect anything because we don't own that. With some digging, I found the commit that removed it, but its message wasn't terribly illuminating. I can message the dev who wrote that and see what his rationale was, though. Nice digging!",
        "createdAt": "2020-09-21T19:14:37Z",
        "updatedAt": "2020-09-21T19:14:37Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The rulesets shipping in VS along with FxCop are legacy, and will be completely removed from VS in next major release. Are you still running the deprecated binary/legacy FxCop for your analysis? If so, you should consider migrating to analyzers instead: https://docs.microsoft.com/visualstudio/code-quality/migrate-from-legacy-analysis-to-fxcop-analyzers?view=vs-2019. Also see https://docs.microsoft.com/visualstudio/code-quality/configure-fxcop-analyzers?view=vs-2019#enable-a-category-of-rules",
        "createdAt": "2020-09-22T01:38:01Z",
        "updatedAt": "2020-09-22T01:39:05Z",
        "author": {
          "login": "mavasani"
        }
      },
      {
        "body": "We do not use it at all. It was just found the behavior changed. Seems that few older projects have set this random.",
        "createdAt": "2020-09-22T04:45:41Z",
        "updatedAt": "2020-09-22T04:45:41Z",
        "author": {
          "login": "trivalik"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "createdAt": "2024-03-01T17:30:54Z",
        "updatedAt": "2024-03-01T17:30:54Z",
        "author": {
          "login": "dotnet-policy-service[bot]"
        }
      },
      {
        "body": "This issue was closed due to inactivity. If you can still reproduce this bug, please comment with the requested information, detailed steps to reproduce the problem, or any other notes that might help in the investigation.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "createdAt": "2024-03-16T19:56:51Z",
        "updatedAt": "2024-03-16T19:56:51Z",
        "author": {
          "login": "dotnet-policy-service[bot]"
        }
      }
    ]
  }
}