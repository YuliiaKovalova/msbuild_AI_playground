{
  "number": 9478,
  "title": "[Feature Request]: MSBuild should transform appsettings.json and launchprofile.json",
  "body": "### Summary\n\nIt would be easier to switch between Build Config if the AppSettings was automatically tranformed. \r\nWeb.Config has had this feature for the past 30 years and is missing in respect to AppSettings.json. \n\n### Background and Motivation\n\nI dont know the background story, but i know the struggle of developers that have to fight with Build Config (the selector in Visual Studio Professional) being disconnected with AppSettings.json. Which leads to unorganized hacks to make it work. \r\n\r\nSwitching easily between Build Config have been a much used feature of Visual Studio for the past 20? 30? years - which has broken since .NET Core was introduced with its AppSettings.json. \r\n\r\nIf the appsettings.json (and maybe launchprofile.json) was tranformed during build time, it would:\r\n\r\n1. Make it very simple for the developer to setup different environments using appsettings.staging.json and appsettings.release.json\r\n2. Make it easier to understand how to publish and deploy different environments without the need for \"EnvironmentVariable\"\r\n3. The output would only have 1 config file and the chance of cross contamination of Staging vs Production is reduced.\r\n4. Separate environments even better (currently ALL versions of appsettings are deployed) \r\n5. Make it possible to switch between Build Config in Visual Studio on the developer machine to test Debug, Staging and Release builds. \r\n\r\nDiscussions:\r\nhttps://github.com/dotnet/aspnetcore/issues/12351\r\nhttps://github.com/dotnet/aspnetcore/issues/2019\r\n\r\n\n\n### Proposed Feature\n\nMSBuild should simply transform the AppSettings and only output 1 file \r\n\r\neg AppSettings.json + AppSettings.Staging.json ==> AppSettings.json \r\n\r\nJust like we know it from Web.Config \n\n### Alternative Designs\n\nCurrently there is a solution : https://marketplace.visualstudio.com/items?itemName=vscps.SlowCheetah-XMLTransforms\r\n\r\nBut millions and billions of developers who doesn't know about SlowCheetah are suffering because they have to hack solutions by themselves as described in the dicussions. ",
  "state": "CLOSED",
  "createdAt": "2023-11-30T09:31:05Z",
  "updatedAt": "2023-12-01T14:39:57Z",
  "closedAt": "2023-11-30T20:06:37Z",
  "author": {
    "login": "Montago"
  },
  "labels": [
    "Feature Request",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is a feature request for the layers that look at AppSettings, which is, as I understand it, ASP.NET. I don't think it belongs in the core MSBuild engine, which currently doesn't know anything about those files. Feels like a dotnet/aspnetcore feature request to me.",
        "createdAt": "2023-11-30T20:06:37Z",
        "updatedAt": "2023-11-30T20:06:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald  AppSettings.json are used by ALL new .NET core projects: Console, WPF, aspnet .... \r\nThe file is loaded by the ConfigurationRoot object. \r\n\r\nWhat project is currently responsible for transforming App.Config and Web.Config files ? ",
        "createdAt": "2023-12-01T07:16:44Z",
        "updatedAt": "2023-12-01T07:37:38Z",
        "author": {
          "login": "Montago"
        }
      },
      {
        "body": "If you mean `xmlns:xdt=\"http://schemas.microsoft.com/XML-Document-Transform\"` -- AFAICT, the MSBuild integration for this is in two places\r\n\r\n- Microsoft.Web.Publishing.targets, which is part of Visual Studio\r\n- SlowCheetah",
        "createdAt": "2023-12-01T09:01:10Z",
        "updatedAt": "2023-12-01T09:01:39Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "> * SlowCheetah\r\n\r\nThat's an extension for Visual Studio.. \r\n\r\nBut if you are right in what you are saying about Microsoft.Web.Publishing.targets .. then the Transform is historically been done by Visual Studio ? \r\n\r\n",
        "createdAt": "2023-12-01T12:47:53Z",
        "updatedAt": "2023-12-01T12:47:53Z",
        "author": {
          "login": "Montago"
        }
      },
      {
        "body": "> That's an extension for Visual Studio..\n\nSlowCheetah has a NuGet package that can be used without the Visual Studio extension.",
        "createdAt": "2023-12-01T14:39:56Z",
        "updatedAt": "2023-12-01T14:39:56Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}