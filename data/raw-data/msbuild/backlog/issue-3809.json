{
  "number": 3809,
  "title": "MSBuild incorrectly including files from another project",
  "body": "### Steps to reproduce\r\nTo recreate the bug:\r\n1. Build solution in attached zip file using msbuild. Solution contains two projects - A and B. Go to the build directory for project B - in the build directory there is B.dll and also incorrectly TextFile.txt (Which is part of project A).\r\n\r\nAttached is the sample solution in a zip file\r\n\r\n### Expected  behavior\r\nBuild directory should just include B.dll (Building in Visual Studio produces this correctly)\r\n\r\n### Actual behavior\r\nTextFile.txt (Which is part of project A) is included in project B's build directory when building using MSBuild (A.dll is correctly not included)\r\n\r\nTextFile.txt is in project A and project A is not a project reference in project B so TextFile.txt should not be included in the build directory when building project B.\r\nProject A is set as a build dependency on project B to control the build order, but this shouldn't cause project A's files to be included in B's build directory as it is not a project reference\r\n\r\n### To recreate the sample solution:\r\n1. Create new Visual Studio solution with class library project A.\r\n2. Add text file to project - set build action 'None' and 'Copy to output directory' to 'Copy if newer'\r\n3. Add class library project B\r\n4. Right click project B - click 'Build dependencies' -> 'Project dependencies' - in the dialog tick project A\r\n\r\n### Environment data\r\n`msbuild /version` output: 15.6.85.37198\r\n\r\nOS info: Windows 10\r\n[MsBuild File Issue.zip](https://github.com/Microsoft/msbuild/files/2428467/MsBuild.File.Issue.zip)\r\n\r\n",
  "state": "OPEN",
  "createdAt": "2018-09-28T14:03:08Z",
  "updatedAt": "2024-02-21T16:32:43Z",
  "closedAt": null,
  "author": {
    "login": "Hallupa"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}