{
  "number": 4773,
  "title": "GenerateResource w/ ResXFileRef System.IO.MemoryStream, mscorlib, Version=2.0.0.0 fails at runtime",
  "body": "Originally reported here https://github.com/dotnet/coreclr/issues/26472#issuecomment-536176848.  Thanks @koszeggy \r\n\r\n### Steps to reproduce\r\nInclude resources that use ResXFileRef for a MemoryStream with 2.0.0.0 assembly identity for mscorlib.\r\nBuild.\r\nAccess resource at runtime.\r\n\r\n### Expected  behavior\r\nResource is returned as UnmanagedMemoryStream.\r\n\r\n### Actual behavior\r\nResource is treated as an Activator resource and we attempt to call the a MemoryStream constructor passing in the backing stream, which fails because MemoryStream doesn't have a constructor that takes a stream.\r\n\r\n### Environment data\r\ndotnet.exe 3.0.100\r\n\r\nBug is here: https://github.com/microsoft/msbuild/commit/edb3be367107d5976dd5a9b30ed067b24f982668#diff-5a51b7df470ec16b6d58bdf7234efefeR85\r\n\r\nHere's  a repro: https://github.com/ericstj/repros/tree/master/testMemStreamResXFileRef\r\n\r\n/cc @rainersigwald ",
  "state": "CLOSED",
  "createdAt": "2019-10-01T19:09:22Z",
  "updatedAt": "2024-02-21T17:06:50Z",
  "closedAt": "2019-10-22T20:11:21Z",
  "author": {
    "login": "ericstj"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.4"
  },
  "comments": {
    "nodes": [
      {
        "body": "I could have sworn we discussed this and decide on only 4, but I don't see that discussion, just the mscorlib/System.Private.CoreLib. Perhaps I was just confused. This is similar to what was necessary for `string` in microsoft/msbuild#4638.\r\n\r\nIs checking for `2.0.0.0` sufficient, or are there other relevant versions? Looks like string was just 2.\r\n\r\n## Workaround\r\n\r\nChange the resx to MemoryStream version 4, for example:\r\n\r\n```diff\r\ndiff --git a/testMemStreamResXFileRef/Resources.resx b/testMemStreamResXFileRef/Resources.resx\r\nindex f4201cc..f7d3df7 100644\r\n--- a/testMemStreamResXFileRef/Resources.resx\r\n+++ b/testMemStreamResXFileRef/Resources.resx\r\n@@ -122,6 +122,6 @@\r\n     <value>test.wav;System.IO.MemoryStream, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>\r\n   </data>\r\n   <data name=\"test2.0\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\">\r\n-    <value>test.wav;System.IO.MemoryStream, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>\r\n+    <value>test.wav;System.IO.MemoryStream, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>\r\n   </data>\r\n </root>\r\n\\ No newline at end of file\r\n```",
        "createdAt": "2019-10-01T19:29:15Z",
        "updatedAt": "2019-10-01T19:29:15Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Looks like this eventually calls Type.GetType https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/Resources/ResXFileRef.cs,289\r\n\r\nThat appears to be super tolerant of garbage if the assembly name is `mscorlib`.  All the following work for me:\r\n```\r\nType.GetType(\"System.IO.MemoryStream, mscorlib, Version=5i.300.-2.\u03c0, Culture=neutral, PublicKeyToken=0000086753090000\")\r\nType.GetType(\"System.IO.MemoryStream, mscorlib, Version=never, Culture=nowhere, PublicKeyToken=nobody\")\r\nType.GetType(\"System.IO.MemoryStream, mscorlib, trash trash, blah blah\")\r\nType.GetType(\"System.IO.MemoryStream, mscorlib, ............\")\r\nType.GetType(\"System.IO.MemoryStream, mscorlib, , , , , , , , , , , , , , , \")\r\nType.GetType(\"System.IO.MemoryStream, mscorlib,............\")\r\nType.GetType(\"System.IO.MemoryStream, mscorlib,d.dkjfhsahgliofsdty -08u[0ip'fjsdcgv;okhn aWE; YUFGQPOIJH DFSG/LVN'ASSDFAKULGD FLIKJHJDGFKAJHSDL'AH;vrne4oosjh;'lyhkjh;'lskdfgjh;'okshj'pofrijg]sdojf.,fkdf;'.afds./.,/s.fdfdDZlJXJMDA;KOLUIFDUH\")\r\n```\r\n\r\nI bet a check of StartsWith would be safe and match what was previously permitted.",
        "createdAt": "2019-10-01T21:51:40Z",
        "updatedAt": "2019-10-01T21:51:40Z",
        "author": {
          "login": "ericstj"
        }
      }
    ]
  }
}