{
  "number": 3316,
  "title": "I want to have the target for build full MSBuild zip distribution.",
  "body": "Currently, MSBuild compiles into artifacts folder. I cannot find one place with full functional MSBuild. I found a lot of folders with output assemblies. I did not find a folder with content looks like MSBuild folder shipped with Visual Studio.",
  "state": "OPEN",
  "createdAt": "2018-05-16T17:29:50Z",
  "updatedAt": "2024-02-21T16:34:01Z",
  "closedAt": null,
  "author": {
    "login": "mfilippov"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is really hard to do unfortunately. It requires a bunch of run-time dependencies and to work fully VS will drop targets/tasks (which may not all be open source) into our folder layout. We have a bootstrap build you can find in `artifacts/Debug/bootstrap` which tries to do this, but it copies a lot of machine state into that folder to accomplish that. In #3246 I tried to move more of the dependency acquisition to NuGet packages, but it's not complete. To fully get this we would need to move everything in our bootstrap targets file from local machine to NuGet packages:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/master/build/BootStrapMSBuild.targets",
        "createdAt": "2018-05-16T20:14:00Z",
        "updatedAt": "2018-05-16T20:14:00Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "@AndyGerlicher I understand it. I saw bootstrap build. It copies proprietary targets from installed VS. It's the main reason why I create this PR.  I need create MIT based distribution without closed source parts. It would be the cool candidate to deploy on GitHub release page and good entry point for creation own toolset for your customers.",
        "createdAt": "2018-05-16T20:20:02Z",
        "updatedAt": "2018-05-16T20:20:02Z",
        "author": {
          "login": "mfilippov"
        }
      },
      {
        "body": "Just for information purpose: For mono/unix we do this by adding to the `bootstrap` in https://github.com/mono/msbuild/blob/xplat-master/src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj (see the `$(MonoBuild)==true` parts, and deployment in https://github.com/mono/msbuild/blob/xplat-master/mono/build/install.proj .\r\n\r\nAnd https://github.com/mono/msbuild/blob/xplat-master/mono/create_bootstrap.sh let's you create a zip.",
        "createdAt": "2018-05-22T19:38:20Z",
        "updatedAt": "2018-05-22T19:39:17Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "@radical Looks good for the start point. Thank you for the information.",
        "createdAt": "2018-05-22T19:40:48Z",
        "updatedAt": "2018-05-22T19:40:48Z",
        "author": {
          "login": "mfilippov"
        }
      },
      {
        "body": "@AndyGerlicher Maybe zip target would be useful for Mono.",
        "createdAt": "2018-05-22T19:42:58Z",
        "updatedAt": "2018-05-22T19:42:58Z",
        "author": {
          "login": "mfilippov"
        }
      }
    ]
  }
}