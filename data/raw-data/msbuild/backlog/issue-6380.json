{
  "number": 6380,
  "title": "Add more options to control trimming behavior",
  "body": "https://github.com/mono/linker/issues/1269#issuecomment-731231382 proposes two new ways to configure trimming:\r\n- Allow opting into trimming via an ItemGroup, not just via IsTrimmable metadata\r\n- A property that simplifies opting everything into trimming: TrimAllAssemblies\r\n\r\nCurrently, the `IsTrimmable` metadata in MSBuild controls which assemblies are trimmed (see https://docs.microsoft.com/en-us/dotnet/core/deploying/trimming-options#trimmed-assemblies). The metadata can be set on a `PackageReference` and it will flow to the referenced assemblies, but setting it for individual assemblies requires adding this metadata at the appropriate step in the build with a custom target. The above suggestions would simplify this. For example:\r\n\r\n```xml\r\n<Target Name=\"ConfigureTrimming\"\r\n        BeforeTargets=\"PrepareForILLink\">\r\n  <ItemGroup>\r\n    <ManagedAssemblyToLink Condition=\"'%(Filename)' == 'MyAssembly'\">\r\n      <IsTrimmable>true</IsTrimmable>\r\n    </ManagedAssemblyToLink>\r\n  </ItemGroup>\r\n</Target>\r\n```\r\ncould be simplified to:\r\n```xml\r\n<ItemGroup>\r\n  <TrimmableAssembly Include=\"MyAssembly\" />\r\n</ItemGroup>\r\n```\r\n\r\nIt would be important to clarify whether the ItemGroup refers to assemblies by name or by file path (it's more common for ItemGroups to represent files on disk). This is similar to the behavior of [`TrimmerRootAssembly`](https://docs.microsoft.com/en-us/dotnet/core/deploying/trimming-options#root-assemblies).",
  "state": "OPEN",
  "createdAt": "2020-11-20T19:54:48Z",
  "updatedAt": "2024-02-21T16:28:48Z",
  "closedAt": null,
  "author": {
    "login": "sbomer"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Some more comments from @marek-safar on the other thread:\r\n\r\n> I think it's crucial during the transition period to allow developers to easily experiment with enabling trimming for any assembly. It should be as simple as passing/adding msbuild property. Something like /p:AssemblyTrimModeLink=FSharp.Core (or whatever is best msbuild syntax). We could use the same for an explicit manual override for any assembly.\r\n\r\nWe could do it via a property by supporting, say, semicolon-delimited assembly names and parsing the property into an ItemGroup - but I'm not sure that's best MSBuild practice. I think making it an ItemGroup would be the best choice, even though it doesn't let you set it on the command-line, to my knowledge.\r\n\r\n@rainersigwald do you have any advice on representing a per-assembly option in MSBuild?",
        "createdAt": "2020-11-20T23:34:14Z",
        "updatedAt": "2020-11-20T23:34:14Z",
        "author": {
          "login": "sbomer"
        }
      }
    ]
  }
}