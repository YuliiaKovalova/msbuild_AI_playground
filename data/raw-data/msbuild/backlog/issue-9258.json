{
  "number": 9258,
  "title": "Setting changewave 17.8 causes crashes on .NET 8",
  "body": "Since https://github.com/dotnet/sdk/pull/34402, triggering the old behavior by opting into the escape hatch introduced in https://github.com/dotnet/msbuild/pull/8779 causes crashes instead of cleanly reported MSBuild errors.\r\n\r\n```sh-session\r\n> set ms\r\nMSBUILDDISABLEFEATURESFROMVERSION=17.8\r\nMSBUILDNOINPROCNODE=1\r\n\r\n> dotnet msbuild .\\foo.proj\r\nMSBuild version 17.8.0-preview-23418-03+0125fc9fb for .NET\r\n\r\nS:\\msbuild\\foo.proj(5,17): error MSB4113: Specified condition \"''\" evaluates to \"\" instead of a boolean.\r\nMSBUILD : error MSB4166: Child node \"2\" exited prematurely. Shutting down. Diagnostic information may be found in files\r\n in \"C:\\Users\\raines\\AppData\\Local\\Temp\\MSBuildTempraines\\\" and will be named MSBuild_*.failure.txt. This location can\r\nbe changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.\r\nMSBUILD : error MSB4166: C:\\Users\\raines\\AppData\\Local\\Temp\\MSBuildTempraines\\MSBuild_pid-1588_93c93e5ec6e5461799877462\r\n8589f648.failure.txt:\r\nMSBUILD : error MSB4166: UNHANDLED EXCEPTIONS FROM PROCESS 1588:\r\nMSBUILD : error MSB4166: =====================\r\nMSBUILD : error MSB4166: 9/22/2023 11:36:44 AM\r\nMSBUILD : error MSB4166: System.NotSupportedException: BinaryFormatter serialization and deserialization are disabled w\r\nithin this application. See https://aka.ms/binaryformatter for more information.\r\nMSBUILD : error MSB4166:    at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream serializ\r\nationStream, Object graph)\r\nMSBUILD : error MSB4166:    at Microsoft.Build.Execution.BuildResult.Microsoft.Build.BackEnd.ITranslatable.Translate(IT\r\nranslator translator)\r\nMSBUILD : error MSB4166:    at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stre\r\nam localWritePipe, ConcurrentQueue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTermina\r\ntePacketPump)\r\nMSBUILD : error MSB4166: ===================\r\nMSBUILD : error MSB4166:\r\nMSBUILD : error MSB4166:\r\n```\r\n\r\n`foo.proj` is from https://github.com/dotnet/msbuild/issues/6215#issuecomment-1553276894.",
  "state": "CLOSED",
  "createdAt": "2023-09-22T16:39:38Z",
  "updatedAt": "2024-05-15T12:12:02Z",
  "closedAt": "2024-05-15T12:12:02Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "bug",
    "regression",
    "Area: Engine",
    "Servicing-consider"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "VS 17.8"
  },
  "comments": {
    "nodes": [
      {
        "body": "FYI @rokonec - this is the scenario we discussed the other day (customer opting-out from the reworked serialization, but not having the BinFmt opted-in in msbuild runtimeconfig.json).\r\n\r\nDiscussed briefly with @rainersigwald and we should probably completely disallow opting-out of the new serialization via 17.8 changevawe. Namely:\r\n * Allowing BinFmt serialization of legacy Custom events: https://github.com/dotnet/msbuild/blob/3847162365a20626dbef16f2b1153dada9c26965/src/Build/BackEnd/Node/OutOfProcNode.cs#L590 (so https://github.com/dotnet/msbuild/blob/3847162365a20626dbef16f2b1153dada9c26965/src/Build/BackEnd/Components/Logging/LoggingService.cs#L918 should go away as well)\r\n * Allowing BinFmt serialization of Exceptions: https://github.com/dotnet/msbuild/blob/3847162365a20626dbef16f2b1153dada9c26965/src/Framework/BinaryTranslator.cs#L585 and https://github.com/dotnet/msbuild/blob/3847162365a20626dbef16f2b1153dada9c26965/src/Framework/BinaryTranslator.cs#L1294\r\n\r\nUnless there is a reliable and fast check of BinFmt being opted in (via [EnableUnsafeBinaryFormatterSerialization](https://learn.microsoft.com/en-us/dotnet/core/compatibility/serialization/7.0/binaryformatter-apis-produce-errors#enableunsafebinaryformatterserialization-property)), then we cannot determine whather fallbacking to legacy behavior won't cause unhandled exception - and we should not allow users to switch on unhandled exceptions. Hence the decision not to control this behavior by changewave",
        "createdAt": "2023-09-22T17:22:39Z",
        "updatedAt": "2023-09-22T17:22:39Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Seems like:\r\n\r\n```csharp\r\nAppContext.TryGetSwitch(\"System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization\", out bool enabled)\r\n```\r\n\r\nis the way to determine whether legacy serialization will crash or not.\r\nSo we can keep the changewave, but error out proactively if the BinFmt is not enabled.\r\n\r\nBtw. the legacy Custom events should probably be mentioned in the ChangeWave doc",
        "createdAt": "2023-09-22T17:38:48Z",
        "updatedAt": "2023-09-22T17:38:48Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "@JanKrivanek did your PR fix that?",
        "createdAt": "2024-05-14T13:39:53Z",
        "updatedAt": "2024-05-14T13:39:53Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}