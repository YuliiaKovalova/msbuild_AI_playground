{
  "number": 1941,
  "title": "64bit projects depending on Microsoft.Build.Runtime cannot programmatically start out of proc builds",
  "body": "```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net46</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <PlatformTarget>x64</PlatformTarget>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build.Runtime\" Version=\"15.1.548\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.IO;\r\nusing Microsoft.Build.Execution;\r\n\r\nnamespace ConsoleApp4\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var projecContents = @\"\r\n<Project>\r\n  <Target Name=\"\"build\"\">  \r\n    <Message Text=\"\"Hello\"\"/>\r\n  </Target>\r\n</Project>\";\r\n\r\n            var projectFile = Path.GetTempFileName();\r\n            File.WriteAllText(projectFile, projecContents);\r\n\r\n            var requestData = new BuildRequestData(projectFile, new Dictionary<string, string>(), null, new string[0], null);\r\n            var buildParameters = new BuildParameters\r\n            {\r\n                MaxNodeCount = Environment.ProcessorCount,\r\n                EnableNodeReuse = false,\r\n                DisableInProcNode = true\r\n            };\r\n\r\n            var buildResults = new BuildManager().Build(buildParameters, requestData);\r\n\r\n            Trace.Assert(buildResults.OverallResult == BuildResultCode.Success);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nFails with:\r\n`Build was canceled. Failed to successfully launch or connect to a child MSBuild.exe process. Verify that the MSBuild.exe \"C:\\Users\\micodoba\\Documents\\visual studio 2017\\Projects\\ConsoleApp4\\ConsoleApp4\\bin\\Debug\\net46\\MSBuild.exe\" launches successfully, and that it is loading the same microsoft.build.dll that the launching process loaded. If the location seems incorrect, try specifying the correct location in the BuildParameters object, or with the MSBUILD_EXE_PATH environment variable.`\r\n\r\nThis is because the starting process is 64bit but the spawned msbuild nodes are 32bit.\r\n\r\nThere are two action items for this issue:\r\n- [ ] include x64 msbuild.exe in the nuget packages\r\n- [ ] update `NodeProviderOutOfProcBase.GetNode` to search for x64 msbuild.exe if the invoking process is (not msbuild.exe) and x64.",
  "state": "CLOSED",
  "createdAt": "2017-04-04T23:54:14Z",
  "updatedAt": "2024-02-21T17:20:11Z",
  "closedAt": "2022-01-21T19:24:35Z",
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I don't think we'll add this support to the Runtime package--that's now entirely an implementation detail of the .NET SDK. Instead, use MSBuildLocator.",
        "createdAt": "2022-01-21T19:24:33Z",
        "updatedAt": "2022-01-21T19:24:33Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}