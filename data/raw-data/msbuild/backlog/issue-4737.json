{
  "number": 4737,
  "title": "msbuild cannot find NetCore 3.0 preview sdk",
  "body": "My solution contains projects that target NetStandard 2.1 - requiring the NetCore 3.0 preview, which I have installed.\r\n\r\nI can build the solution via command line msbuild on my local machine, but not on our build agents. \r\nThe only difference I'm aware of being that I have the full Visual Studio 2019 installed on my local machine, but only the [VS2019 buildtools](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=16) on the build agents.\r\n\r\nI get this error:\r\nerror NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. \r\n\r\nIs it possible to use the .Net Core 3.0 sdk when building using msbuild tools? Obviously, without the full VS2019 installed, I'm unable to check \"Use previews of the .NET Core SDK (requires restart)\". Is there an equivalent for the command line tools only?\r\n\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\nMicrosoft (R) Build Engine version 16.2.37902+b5aaefc9f for .NET Framework\r\n\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview8-013656\r\n Commit:    8bf06ffc8d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview8-013656\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-28405-07\r\n  Commit:  d01b2fb7bc\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013656 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\nOS info:\r\nWindows 2012 R2\r\nInvoking MSBuild from the command line\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2019-09-17T13:05:00Z",
  "updatedAt": "2024-02-21T17:07:05Z",
  "closedAt": "2019-09-18T11:42:05Z",
  "author": {
    "login": "RobSwDev"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "@nguerrera do you know?",
        "createdAt": "2019-09-17T14:44:46Z",
        "updatedAt": "2019-09-17T14:44:46Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "In general, for command line builds, you can specify a preview version in global.json and it will be honored irrespective of the checkbox. See https://docs.microsoft.com/en-us/dotnet/core/tools/global-json\r\n\r\nThe following will allow the latest 3.0.100-* installed to bind due to the default roll forward policy.\r\n``` js\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"3.0.100-preview\"\r\n  }\r\n}\r\n```\r\n\r\nThis file must go at the level of your sln or higher in the directory tree.\r\n\r\nStarting with 16.3, you will be able to specify the following in global.json to say \"use latest preview\" without specifying any version:\r\n\r\n``` js\r\n{\r\n  \"sdk\": {\r\n    \"allowPrerelease\": true\r\n  }\r\n}\r\n```\r\n\r\nSee https://github.com/dotnet/core-setup/pull/6953\r\n\r\nBut obviously, that won't help without having 16.3 RTM first, at which point 3.0 RTM will be available and there would be no need to use a preview for 3.0. This would be a good option for future previews.\r\n\r\nPlease do note the latest 3.0 previews are only officially supported on 16.3 previews, and not on 16.2. We had actually intended to start blocking 16.2 already, but a mishap in infrastructure made it so that only 3.0 RTM will be blocked from use in 16.2 or earlier. However, even though it is not blocked outright, there are several things that don't work, and there is no testing of that combination. There were several VS changes made to align with SDK changes for 3.0/16.3.\r\n\r\nMy recommendation would be to do one of the following:\r\n\r\n1. Wait a week and upgrade to VS (build tools) 16.3, with 3.0 RTM SDK\r\n2. Use a preview installation of VS (build tools) 16.3",
        "createdAt": "2019-09-17T20:31:49Z",
        "updatedAt": "2019-09-17T20:31:49Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "@nguerrera Thanks! The global.json seems to work.\r\n\r\nPreviously I tried it and had problems with a (test) project using multiple versions of a managed dll and aliases not compiling correctly. Not sure what changed (maybe using full version 3.0.100-preview8-013656 instead of 3.0.100?), but I'm happy it works now.\r\n\r\n",
        "createdAt": "2019-09-18T11:41:50Z",
        "updatedAt": "2019-09-18T11:41:50Z",
        "author": {
          "login": "RobSwDev"
        }
      },
      {
        "body": ":mips-interest",
        "createdAt": "2020-06-10T08:36:06Z",
        "updatedAt": "2020-06-10T08:36:06Z",
        "author": {
          "login": "xiangzhai"
        }
      }
    ]
  }
}