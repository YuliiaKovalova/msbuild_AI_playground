{
  "number": 7640,
  "title": "NuGets referenced from analyzer/source-generator should automatically include DLL's",
  "body": "Let's say that my analyzer or source generator depends on the `GraphQL` NuGet:\r\n```xml\r\n<ItemGroup>\r\n    <PackageReference Include=\"GraphQL\" Version=\"4.7.1\" GeneratePathProperty=\"true\" PrivateAssets=\"all\" />\r\n</ItemGroup>\r\n```\r\n\r\nThis will fail, because MSBuild won't automatically include GraphQL's DLL's, so I need to do this:\r\n```xml\r\n<!-- See https://github.com/dotnet/roslyn-sdk/blob/0313c80ed950ac4f4eef11bb2e1c6d1009b328c4/samples/CSharp/SourceGenerators/SourceGeneratorSamples/SourceGeneratorSamples.csproj#L13-L30\r\nand https://github.com/dotnet/roslyn/discussions/47517#discussioncomment-64145 -->\r\n<PropertyGroup>\r\n    <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>\r\n</PropertyGroup>\r\n\r\n<Target Name=\"GetDependencyTargetPaths\">\r\n    <!-- Manually include the DLL of each NuGet package that this analyzer uses. -->\r\n    <ItemGroup>\r\n        <TargetPathWithTargetPlatformMoniker Include=\"$(PKGGraphQL)\\lib\\netstandard2.0\\GraphQL.dll\" IncludeRuntimeDependency=\"false\" />\r\n    </ItemGroup>\r\n</Target>\r\n```\r\n\r\nI'd like to request that when an analyzer/source-generator references a NuGet, MSBuild automatically hooks up the NuGet's DLL's \ud83d\ude42\r\n\r\nThis seems to have been a source of confusion for many! See all of the comments at https://github.com/dotnet/roslyn/discussions/47517 \ud83d\ude42\r\n\r\nP.S.\r\nNot sure if MSBuild is the correct place to post this?",
  "state": "OPEN",
  "createdAt": "2022-05-20T03:32:30Z",
  "updatedAt": "2024-01-31T08:16:53Z",
  "closedAt": null,
  "author": {
    "login": "Eli-Black-Work"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "MSBuild Team Triage: It looks like there's a built in mechanism to do this. If you set property `CopyLocalLockFileAssemblies` to true in your analyzer project, it will copy over the graphql dependencies you need to its `bin/` folder.",
        "createdAt": "2022-05-26T16:39:28Z",
        "updatedAt": "2022-05-26T16:39:28Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos Thanks for the reply! \ud83d\ude42\r\n\r\nI just gave `CopyLocalLockFileAssemblies` a shot. When building from the command-line, everything works fine, but when I open my project in Visual Studio, the generator crashes with this error:\r\n\r\n```\r\nGenerator 'ControllerGenerator' failed to generate source.\r\nIt will not contribute to the output and compilation errors may occur as a result.\r\nException was of type 'FileNotFoundException' with message 'Could not load file or assembly 'Microsoft.OpenApi.Readers, Version=1.2.3.0, Culture=neutral, PublicKeyToken=3f5743946376f042' or one of its dependencies. The system cannot find the file specified.'\r\n```\r\n\r\nHere's an example project that reproduces the issue: https://github.com/Bosch-Eli-Black/source-generator-example\r\n\r\nI'm using VS 17.3.0 Preview 1.1\r\n\r\nIs this something for the MSBuild team to look into, or should I file it somewhere else?",
        "createdAt": "2022-06-01T04:32:31Z",
        "updatedAt": "2022-06-15T21:59:52Z",
        "author": {
          "login": "Eli-Black-Work"
        }
      },
      {
        "body": "Opened a Roslyn issue for supporting `CopyLocalLockFileAssemblies` in VS: https://github.com/dotnet/roslyn/issues/61940",
        "createdAt": "2022-06-14T09:39:03Z",
        "updatedAt": "2022-06-15T21:59:52Z",
        "author": {
          "login": "Eli-Black-Work"
        }
      }
    ]
  }
}