{
  "number": 4763,
  "title": "<UsingTask> with <TargetFramework> that .NET Framework doesn't support failed in VS",
  "body": "### Steps to reproduce\r\n\r\nGiven the simplest sample\r\n\r\n*MyTask.csproj*\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>see below</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"16.0.461\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n*MyTask.cs*\r\n```cs\r\npublic class MyTask : Microsoft.Build.Utilities.Task\r\n{\r\n    public const string S1 = \"1\";\r\n    public const string S2 = \"2\";\r\n\r\n    public override bool Execute() => true;\r\n}\r\n```\r\n\r\nMain project\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <UsingTask TaskName=\"MyTask\" AssemblyFile=\"...MyTask.dll\" />\r\n\r\n  <Target Name=\"AfterBuild\" AfterTargets=\"Build\">\r\n    <MyTask />\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n\r\n### Expected  behavior\r\n\r\nThe task should work when the `<TargetFramework>` is specified as `netcoreapp3.0`.\r\n\r\n### Actual behavior\r\n\r\nMSBuild in .NET CLI succeeds.\r\n\r\nMSBuild in VS:\r\n\r\nIf the `<TargetFramework>` is specified as `netstandard2.0`, the build succeeds with the runtime to be .NET Framework.\r\n\r\nIf the `<TargetFramework>` is specified as `netcoreapp3.0`\r\n\r\n> error MSB4062: The \"MyTask\" task could not be loaded from the assembly ...MyTask.dll. Could not load file or assembly '**System.Runtime**, Version=4.2.1.0, ...' or one of its dependencies. The system cannot find the file specified. ...\r\n\r\nIf the `<TargetFramework>` is specified as `netstandard2.1`\r\n\r\n> error MSB4062: The \"MyTask\" task could not be loaded from the assembly ...MyTask.dll. Could not load file or assembly '**netstandard**, Version=2.1.0.0, ...' or one of its dependencies. The system cannot find the file specified. ...\r\n\r\n### Environment data\r\n\r\n`MSBuildBinPath` in VS:\r\n*C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin*",
  "state": "CLOSED",
  "createdAt": "2019-09-26T08:27:46Z",
  "updatedAt": "2024-02-21T17:06:53Z",
  "closedAt": "2019-09-26T12:47:04Z",
  "author": {
    "login": "nxtn"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "The way all .NET Core tooling does this at the moment is building for both .NET Framework and .NET Core and using msbuild logic to determine the correct assembly at runtime:\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <CustomTaskAssembly Condition=\" '$(MSBuildRuntimeType)' == 'Core' \">...\\netcoreapp3.0\\tasks.dll</CustomTaskAssembly>\r\n  <CustomTaskAssembly Condition=\" '$(MSBuildRuntimeType)' != 'Core' \">...\\net472\\tasks.dll</CustomTaskAssembly>\r\n</PropertyGroup>\r\n\r\n<UsingTask TaskName=\"MyTask\" AssemblyFile=\"$(CustomTaskAssembly)\" />\r\n```\r\n",
        "createdAt": "2019-09-26T12:21:08Z",
        "updatedAt": "2019-09-26T12:21:08Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "So it's not possible to use .NET Core specific APIs right now?",
        "createdAt": "2019-09-26T12:39:45Z",
        "updatedAt": "2019-09-26T12:39:45Z",
        "author": {
          "login": "nxtn"
        }
      },
      {
        "body": "Not if it has to run on the .NET Framework version of MSBuild which is used by VS as well as VS/Mac and OmniSharp (mono).",
        "createdAt": "2019-09-26T12:42:40Z",
        "updatedAt": "2019-09-26T12:42:40Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "@dasMulli is there any eta on when netstandard2.1 will be able to be used when running an msbuild task from within VS? is there any issue to track that work?",
        "createdAt": "2019-10-21T00:14:04Z",
        "updatedAt": "2019-10-21T00:14:04Z",
        "author": {
          "login": "SimonCropp"
        }
      },
      {
        "body": "I think never since .net framework will never support ns2.1\r\nBut not sure if the Team has other plans",
        "createdAt": "2019-10-21T10:48:37Z",
        "updatedAt": "2019-10-21T10:48:37Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Filed dotnet/msbuild#4834 to track @SimonCropp's request. It is not currently on our radar, but I suspect that we'll need it at some point as adoption of .NET Core increases.",
        "createdAt": "2019-10-21T14:32:36Z",
        "updatedAt": "2023-08-03T20:54:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Is this feature coming in .Net 8?",
        "createdAt": "2023-08-03T20:54:00Z",
        "updatedAt": "2023-08-03T20:54:00Z",
        "author": {
          "login": "Jinjinov"
        }
      }
    ]
  }
}