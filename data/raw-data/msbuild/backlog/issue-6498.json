{
  "number": 6498,
  "title": "Azure Devops pipelines crashing in MSBuild logger, as of 5/25 VS2019 image",
  "body": "Beginning on 5/25, a stage of the WinUI build which executes on hosted VS2019 agents, began failing intermittently with the stack below.  Subsequent runs of the pipeline produce different combinations of success/failure.\r\n\r\n```\r\nMSBUILD : error MSB4017: The build stopped unexpectedly because of an unexpected logger failure. \r\nMicrosoft.Build.Exceptions.InternalLoggerException: The build stopped unexpectedly because of an unexpected logger failure. ---> System.NullReferenceException: Object reference not set to an instance of an object. \r\nat MSBuild.Logger.BuildConfiguration.Equals(Object obj) \r\nat System.Collections.Generic.ObjectEqualityComparer`1.Equals(T x, T y) \r\nat System.Collections.Generic.List`1.Contains(T item) \r\nat MSBuild.Logger.ProjectTrees.AddTopLevelProject(ProjectStartedEventArgs startedEvent, BuildConfiguration platformConfiguration) \r\nat MSBuild.Logger.CentralLogger.HandleProjectStarted(Object sender, ProjectStartedEventArgs e) \r\nat Microsoft.Build.BackEnd.Logging.EventSourceSink.RaiseProjectStartedEvent(Object sender, ProjectStartedEventArgs buildEvent) \r\n```",
  "state": "CLOSED",
  "createdAt": "2021-05-28T01:10:09Z",
  "updatedAt": "2024-02-21T14:13:15Z",
  "closedAt": "2021-06-15T21:46:48Z",
  "author": {
    "login": "Scottj1s"
  },
  "labels": [
    "bug",
    "regression",
    "Partner request",
    "Area: Logging",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.11"
  },
  "comments": {
    "nodes": [
      {
        "body": "This issue was moved to microsoft/azure-pipelines-tasks#14904",
        "createdAt": "2021-05-28T15:20:25Z",
        "updatedAt": "2021-05-28T15:20:25Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I think this is a regression caused by #6287. In this case there's a binary logger _and_ a third-party logger attached, and the third-party logger looks through `ProjectStartedEventArgs.Properties`.\r\n\r\nSpecifically I think this logic is not as backward-compatible as hoped:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/2fd48ab730134f7698a14fdd5752349737f0e3bd/src/Build/BackEnd/Components/Logging/LoggingService.cs#L511-L519\r\n\r\nWe want to turn that on if _only_ enlightened loggers are attached, not if _any_ enlightened logger is attached.\r\n\r\ncc @KirillOsenkov ",
        "createdAt": "2021-05-28T15:53:38Z",
        "updatedAt": "2021-05-28T15:53:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "## Workaround 1 (tested):\r\n\r\nUse the VSBuild task parameter `enableDefaultLogger: false` to disable the Azure DevOps logger and avoid microsoft/azure-pipelines-tasks#14904.\r\n\r\n## Workaround 2 (please report if this works)\r\n\r\nSet the environment variable `MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION=false` around your MSBuild invocation.",
        "createdAt": "2021-05-28T21:04:22Z",
        "updatedAt": "2021-05-28T21:04:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "ProjectStartedEventArgs.Properties could be null even in 16.9, if the project built in a worker node. I\u2019m guessing their logger was always buggy but happened to work for single-process builds.",
        "createdAt": "2021-05-29T00:26:36Z",
        "updatedAt": "2021-05-29T00:26:36Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "What is the other logger (MSBuild.Logger) and how do I test it and where is the source?",
        "createdAt": "2021-05-29T04:06:28Z",
        "updatedAt": "2021-05-29T04:06:28Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Hmm, so should we change that .Any to .All?",
        "createdAt": "2021-05-29T04:08:57Z",
        "updatedAt": "2021-05-29T04:08:57Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Also should we initialize ProjectStartedEventArgs.Properties to an empty array instead of being null? Or will this only mask other failures because loggers might rely on a certain property being there?",
        "createdAt": "2021-05-29T04:10:17Z",
        "updatedAt": "2021-05-29T04:10:17Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "> What is the other logger (MSBuild.Logger) and how do I test it and where is the source?\r\n\r\nIt's internal and the source is . . . a long story. I was grousing about it in our Teams channel.\r\n\r\n> Hmm, so should we change that .Any to .All?\r\n\r\nI think so, plus opt the text loggers into the new behavior so the standard console logger + `-bl` continues to work nicely.\r\n\r\n> Also should we initialize ProjectStartedEventArgs.Properties to an empty array instead of being null? Or will this only mask other failures because loggers might rely on a certain property being there?\r\n\r\nI think this is a good mitigation. I'd be shocked if there were loggers that depended on a particular property being set in _all_ projects (but of course I've been surprised before . . .)",
        "createdAt": "2021-06-02T03:15:57Z",
        "updatedAt": "2021-06-02T03:15:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Fix attempt in https://github.com/dotnet/msbuild/pull/6514\r\n\r\nI'm guessing if unenlightened, but well-behaved loggers are co-present with binlog, this will revert to the legacy behavior silently. This will increase binlog sizes. I suppose it's OK and we should drive logger authors to opt-in to the new behavior slowly - fortunately there aren't really that many loggers floating around, but I imagine each CI provider would have one, and many tool vendors such as JetBrains.\r\n\r\nNo idea how to communicate this other than ad-hoc on Twitter.",
        "createdAt": "2021-06-03T03:17:26Z",
        "updatedAt": "2021-06-03T03:17:26Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Judging from the callstack, the null ref in the logger is somewhere here:\r\n![image](https://user-images.githubusercontent.com/679326/121955043-50964f00-cd14-11eb-9ee1-d53f1a1080cd.png)\r\n",
        "createdAt": "2021-06-14T20:27:53Z",
        "updatedAt": "2021-06-14T20:27:53Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@Forgind ",
        "createdAt": "2021-06-14T20:28:06Z",
        "updatedAt": "2021-06-14T20:28:06Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Visual Studio 16.10.2 has been released and will be picked up by Azure DevOps/GitHub Actions hosted images shortly.",
        "createdAt": "2021-06-15T21:46:48Z",
        "updatedAt": "2021-06-15T21:46:48Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}