{
  "number": 11446,
  "title": "RAR discovers new resource DLLs that aren't culture-related after custom-culture change",
  "body": "An internal Microsoft team reached out to me to report a behavior change between .NET SDK 9.0.103 and 9.0.200. A new DLL was present in their output folder, which failed the build since they have an explicit \"is anything unexpected appearing in our output\" check.\n\nLooking at the log, the first reference to the new `Resources\\xxxx.resources.dll` file was in the referencing project's `ResolveAssemblyReferences`. Eventually we figured out that a custom tool used to create resources (not standard .NET resources but something custom). That tool (invoked via an `<Exec`) appears to have created the `.resources.dll` both before and after the SDK change, but it was ignored until #11000 stopped validating culture names in resource subdirectories:\n\nhttps://github.com/dotnet/msbuild/blob/aff54559404d31214c71aa2ea6d2caa6003b0334/src/Tasks/AssemblyDependency/ReferenceTable.cs#L965-L981\n\nNow, `Resources` is considered a culture and the `.resources.dll` file is discovered (and copied to the output), leading to customer surprise.",
  "state": "CLOSED",
  "createdAt": "2025-02-14T21:03:27Z",
  "updatedAt": "2025-04-02T16:58:06Z",
  "closedAt": "2025-04-02T16:58:06Z",
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "YuliiaKovalova"
      }
    ]
  },
  "labels": [
    "Area: Task: Resolve Assembly References (RAR)",
    "Priority:1",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Agreed offline on the way to resolve it:\n\nImplement feature flag: \nMake the custom culture implementation optional through a feature flag, allowing users who specifically need this functionality to opt in. \nThis approach will be enhanced with a dedicated property to exclude specific directories: This would enable filtering out additional assemblies that shouldn't be treated as culture-specific resources (adds more flexibility if somebody wants to have this feature with configurability e.g. `<NonCultureResourceDirectories>long;hash</NonCultureResourceDirectories>`)\n\n+ add detailed documentation to describe how to work with it.",
        "createdAt": "2025-03-14T13:33:15Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  }
}