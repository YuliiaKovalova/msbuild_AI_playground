{
  "number": 2417,
  "title": "Design-time builds in CPS are doing too much work because BuildingProject is set to true",
  "body": "To reduce build times, CPS groups build targets for a project together. This has the unintended side-effect of turning `$(BuildingProject)` on during lots of CPS design-time builds.\r\n\r\nLots of behavior in common targets is driven by `$(BuildingProject)`, it's basically the legacy equivalent of `$(DesignTimeBuild)` != 'true'\":\r\n\r\n```\r\n186>------ Build started: Project: Microsoft.VisualStudio.ProjectSystem.Managed, Targets: CollectResolvedSDKReferencesDesignTime, DebugSymbolsProjectOutputGroup, CollectPackageReferences, ResolveComReferencesDesignTime, ContentFilesProjectOutputGroup, DocumentationProjectOutputGroupDependencies, SGenFilesOutputGroup, ResolveProjectReferencesDesignTime, SourceFilesProjectOutputGroup, DebugSymbolsProjectOutputGroupDependencies, SatelliteDllsProjectOutputGroup, BuiltProjectOutputGroup, SGenFilesOutputGroupDependencies, ResolveAssemblyReferencesDesignTime, CollectAnalyzersDesignTime, CollectSDKReferencesDesignTime, DocumentationProjectOutputGroup, PriFilesOutputGroup, BuiltProjectOutputGroupDependencies, ResolvePackageDependenciesDesignTime, SatelliteDllsProjectOutputGroupDependencies, SDKRedistOutputGroup, CompileDesignTime, CollectResolvedCompilationReferencesDesignTime ------\r\n\r\n...\r\n\r\n186>Target \"BuildOnlySettings\" in file \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets\":\r\n186>  Set Property: BuildingProject=true\r\n```\r\n\r\n`BuildOnlySettings` is basically a dependency of most of the output groups targets.\r\n\r\nThings that I'm seeing we're doing:\r\n\r\n- ResolveAssemblyReferences; FindDependencies, FindSatellites, FindSerializationAssemblies, FindRelatedFiles is all true.\r\n- ResolveAssemblyReferences; Silent is false - undecided if this is good or bad.\r\n\r\nThis would explain why ResolveAssemblyReferences is showing up on traces, FindDependencies is very slow.\r\n",
  "state": "OPEN",
  "createdAt": "2017-08-11T02:03:08Z",
  "updatedAt": "2025-06-02T08:26:47Z",
  "closedAt": null,
  "author": {
    "login": "davkean"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "This is also blocking XAML: https://github.com/dotnet/project-system/issues/2488.",
        "createdAt": "2017-09-11T23:41:38Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "The output groups have been like this for a looooooooong time. It went in with this commit:\r\n\r\n```\r\nChange 1159138 by \u2588\u2588\u2588\u2588\u2588\u2588\u2588 on 2005/05/30 22:19:17\r\n\r\n\t   MSBuild RTM bugs\r\n\t\r\n\t   Fixes for the following bugs:\r\n\t   493328\t\"unable to copy file ... because it is being used by\r\n\t   another process\" after building twice in a row, old resx format\r\n\t   494837\t.RESTEXT files are not given the right manifest resource\r\n\t   name.\r\n\t   494963\tDefault value for metadata <InProject> should be \"false\"\r\n\t   when item is coming from a .TARGETS file.\r\n\t   494967\tThere's no way for the author of a custom build process\r\n\t   to add entries into the BuildAction dropdown in the IDE.\r\n\t   494968\tTasks that have ContinueOnError=true should not log\r\n\t   errors.\r\n\t   495734\tVisual Studio holds/leaks reference to build target\r\n\t   DLLs, preventing builds.\r\n\t   495747\tMSBUILD: Usage of \"Target\" metadata in AL.exe /link\r\n\t   option does not work\r\n\t   496301\tWe should kill the \"AssignTargetPaths\" target if\r\n\t   possible.\r\n\t   498702\tToolTask needs a way to allow the task author to parse\r\n\t   stdout/stderror themselves.\r\n\t   456966\tSaving a vb code file to a different location causes\r\n\t   information to be lost over VB->C# project reference.\r\n```\r\n\r\nNone of those bugs looks particularly _related_ to me.\r\n\r\nI'd be willing to try dropping the dependency and seeing what happens.",
        "createdAt": "2018-11-13T17:54:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Something that came up in a meeting just now, talking to @davkean who was looking at this. It is in fact deliberate that output groups trigger finding of dependencies. Some of the items inside the groups rely on it. CPS needs to handle this somehow. \r\n\r\n@davkean should this be moved to project-system given that?",
        "createdAt": "2019-01-25T01:32:40Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "I may be missing a lot of context here, so take this with a grain of salt, but design time builds of Roslyn.sln at least don't have `BuildingProject` set to true, presumably because they don't specify `PriFilesOutputGroup` as a target (which in turn depends on `BuildOnlySettings`).",
        "createdAt": "2019-07-22T04:41:18Z",
        "author": {
          "login": "davidwengier"
        }
      },
      {
        "body": "@davidwengier Output groups are merged with design-time build if features request them, which happens a lot depending on what VS features you are using, such as XAML designer, Unit Tests, etc. ie This problem still exists.",
        "createdAt": "2019-07-22T04:51:45Z",
        "author": {
          "login": "davkean"
        }
      }
    ]
  }
}