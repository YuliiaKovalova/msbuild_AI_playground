{
  "number": 11430,
  "title": "msbuild 17.12 fails to resolve SDKs",
  "body": "### Issue Description\n\nAfter updating to the newest version of Visual Studio on our build servers, build randomly fail due to failure to resolve SDKs.\n```\nError : Could not resolve SDK \"Microsoft.NET.Sdk.Web\". Exactly one of the probing messages below indicates why we could not resolve the SDK. Investigate and resolve that message to correctly specify the SDK.\n```\nThis also happens with other SDKs, which are specified in `global.json`, such as `Microsoft.NET.Sdk` and `Microsoft.Build.NoTargets`.\n\n### Steps to Reproduce\n\nI can't provide any samples or logs\n\n### Expected Behavior\n\nBuilds the same as in 17.10\n\n### Actual Behavior\n\nFails to resolve SDKs\n\n### Analysis\n\nThe problem started happening immediately after VS 17.12.4 was installed. We did not see this problem in version 17.10.3.\n\n### Versions & Configurations\n\n```\n**********************************************************************\n** Visual Studio 2022 Developer Command Prompt v17.12.4\n** Copyright (c) 2022 Microsoft Corporation\n**********************************************************************\n[vcvarsall.bat] Environment initialized for: 'x64'\n\nC:\\Program Files\\Microsoft Visual Studio\\2022\\professional>msbuild --version\nMSBuild version 17.12.12+1cce77968 for .NET Framework\n17.12.12.57101\n```\n\n```json\n{\n  \"msbuild-sdks\": {\n...\n    \"Microsoft.Build.NoTargets\": \"3.7.56\",\n...\n    \"MSTest.Sdk\": \"3.7.3\"\n  },\n  \"sdk\": {\n    \"version\": \"8.0.302\",\n    \"rollForward\": \"latestPatch\"\n  }\n}\n```\n\nWindows Server 2022 (21H2)\nx64\nIntel(R) Xeon(R) Gold 6238R CPU @ 2.20GHz, 2195 Mhz, 28 Core(s), 56 Logical Processor(s)\n\n",
  "state": "OPEN",
  "createdAt": "2025-02-12T15:37:00Z",
  "updatedAt": "2025-05-23T12:00:41Z",
  "closedAt": null,
  "author": {
    "login": "BenjaminBrienen"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "SimaTian"
      }
    ]
  },
  "labels": [
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "```\nPS C:\\Users\\ovl-svc-PRISMAsync-b> dotnet --list-sdks\n5.0.404 [C:\\Program Files\\dotnet\\sdk]\n6.0.136 [C:\\Program Files\\dotnet\\sdk]\n6.0.302 [C:\\Program Files\\dotnet\\sdk]\n6.0.428 [C:\\Program Files\\dotnet\\sdk]\n8.0.112 [C:\\Program Files\\dotnet\\sdk]\n8.0.308 [C:\\Program Files\\dotnet\\sdk]\n9.0.102 [C:\\Program Files\\dotnet\\sdk]\n```",
        "createdAt": "2025-02-12T15:38:20Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "Could you provide the list of error messages that you see? The message you linked says there should be sub-errors with more information.",
        "createdAt": "2025-02-12T15:42:23Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "```\n##[error]0>C:\\cagnt03\\_work\\15\\s\\remctrl\\CanonWebProxy\\Module\\CanonWebProxy.Module.csproj(0,0): Error : Could not resolve SDK \"Microsoft.NET.Sdk\". Exactly one of the probing messages below indicates why we could not resolve the SDK. Investigate and resolve that message to correctly specify the SDK.\n           Copying file from \"C:\\cagnt03\\_work\\15\\b\\Release_x64\\jprep\\Binaries\\net8.0\\win-x64\\Sheela.Simulator\\JobModel.ProblemModel.Impl.pdb\" to \"C:\\cagnt03\\_work\\15\\b\\Release_x64\\jprep\\Binaries\\net8.0\\win-x64\\Sheela.Tools.PrismaSyncToCje\\JobModel.ProblemModel.Impl.pdb\".\n0>C:\\cagnt03\\_work\\15\\s\\remctrl\\CanonWebProxy\\Module\\CanonWebProxy.Module.csproj : error : Could not resolve SDK \"Microsoft.NET.Sdk\". Exactly one of the probing messages below indicates why we could not resolve the SDK. Investigate and resolve that message to correctly specify the SDK. [C:\\cagnt03\\_work\\15\\s\\BuildProcessTemplates\\Templates\\Build\\Build.proj]\n##[error]remctrl\\CanonWebProxy\\Module\\CanonWebProxy.Module.csproj(0,0): Error : \n           Copying file from \"C:\\cagnt03\\_work\\15\\b\\Release_x64\\jprep\\Binaries\\net8.0\\win-x64\\Sheela.Simulator\\JobModel.Abstractions.pdb\" to \"C:\\cagnt03\\_work\\15\\b\\Release_x64\\jprep\\Binaries\\net8.0\\win-x64\\Sheela.Tools.PrismaSyncToCje\\JobModel.Abstractions.pdb\".\nC:\\cagnt03\\_work\\15\\s\\remctrl\\CanonWebProxy\\Module\\CanonWebProxy.Module.csproj : error :  [C:\\cagnt03\\_work\\15\\s\\BuildProcessTemplates\\Templates\\Build\\Build.proj]\n       1>Project \"C:\\cagnt03\\_work\\15\\s\\remctrl\\remctrl.sln\" (1) is building \"C:\\cagnt03\\_work\\15\\s\\remctrl\\CanonWebProxy\\Module\\CanonWebProxy.Module.csproj\" (3) on node 7 (default targets).\n##[error]3>C:\\cagnt03\\_work\\15\\s\\remctrl\\CanonWebProxy\\Module\\CanonWebProxy.Module.csproj(0,0): Error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\n3>C:\\cagnt03\\_work\\15\\s\\remctrl\\CanonWebProxy\\Module\\CanonWebProxy.Module.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found. [C:\\cagnt03\\_work\\15\\s\\BuildProcessTemplates\\Templates\\Build\\Build.proj]\n       3>Done Building Project \"C:\\cagnt03\\_work\\15\\s\\remctrl\\CanonWebProxy\\Module\\CanonWebProxy.Module.csproj\" (default targets) -- FAILED.\n       1>Project \"C:\\cagnt03\\_work\\15\\s\\remctrl\\remctrl.sln\" (1) is building \"C:\\cagnt03\\_work\\15\\s\\remctrl\\ColoradoAPI2\\ColoradoAPI2.ColoradoAPI2.csproj\" (4) on node 25 (default targets).\n           Copying file from \"C:\\cagnt03\\_work\\15\\b\\Release_x64\\jprep\\Binaries\\net8.0\\win-x64\\CanonPP.Api.JobLogic\\JobModel.IntentModel.Impl.pdb\" to \"C:\\cagnt03\\_work\\15\\b\\Release_x64\\jprep\\Binaries\\net8.0\\win-x64\\Sheela.Tools.PrismaSyncToCje\\JobModel.IntentModel.Impl.pdb\".\n##[error]4>C:\\cagnt03\\_work\\15\\s\\remctrl\\ColoradoAPI2\\ColoradoAPI2.ColoradoAPI2.csproj(0,0): Error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found.\n4>C:\\cagnt03\\_work\\15\\s\\remctrl\\ColoradoAPI2\\ColoradoAPI2.ColoradoAPI2.csproj : error MSB4236: The SDK 'Microsoft.NET.Sdk' specified could not be found. [C:\\cagnt03\\_work\\15\\s\\BuildProcessTemplates\\Templates\\Build\\Build.proj]\n       4>Done Building Project \"C:\\cagnt03\\_work\\15\\s\\remctrl\\ColoradoAPI2\\ColoradoAPI2.ColoradoAPI2.csproj\" (default targets) -- FAILED.\n\n```",
        "createdAt": "2025-02-12T15:54:36Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "![Image](https://github.com/user-attachments/assets/c4519f23-eb40-4896-932f-d5d7ba41aa03)",
        "createdAt": "2025-02-12T15:55:26Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "All of the errors are the same sort of message, one for each proejct in the solution. No other error codes besides the final \"build failed\".",
        "createdAt": "2025-02-12T15:59:34Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "That's fascinating - this error is coming from the 'base' .NET SDK resolver, the one that locates the MSBuild SDKs that we ship with the .NET SDK installer. Can you see what the contents of `C:\\Program Files\\dotnet\\sdk\\8.0.308\\Sdks\\` are on this host?\n",
        "createdAt": "2025-02-12T16:48:46Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "```\nPS C:\\Program Files\\dotnet\\sdk\\8.0.308\\Sdks> dir\n\n\n    Directory: C:\\Program Files\\dotnet\\sdk\\8.0.308\\Sdks\n\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\nd-----          2/8/2025   8:36 AM                FSharp.NET.Sdk\nd-----          2/8/2025   8:36 AM                Microsoft.Build.Tasks.Git\nd-----          2/8/2025   8:36 AM                Microsoft.Docker.Sdk\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.BlazorWebAssembly\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.Publish\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.Razor\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.StaticWebAssets\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.Web\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.Web.ProjectSystem\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.WebAssembly\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.WindowsDesktop\nd-----          2/8/2025   8:36 AM                Microsoft.NET.Sdk.Worker\nd-----          2/8/2025   8:36 AM                Microsoft.SourceLink.AzureRepos.Git\nd-----          2/8/2025   8:36 AM                Microsoft.SourceLink.Bitbucket.Git\nd-----          2/8/2025   8:36 AM                Microsoft.SourceLink.Common\nd-----          2/8/2025   8:36 AM                Microsoft.SourceLink.GitHub\nd-----          2/8/2025   8:36 AM                Microsoft.SourceLink.GitLab\nd-----          2/8/2025   8:36 AM                NuGet.Build.Tasks.Pack\n```",
        "createdAt": "2025-02-12T17:07:18Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "We are going to patch `C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\MSBuild\\Current\\Bin\\SdkResolvers\\Microsoft.DotNet.MSBuildSdkResolver` and see if that fixes it.",
        "createdAt": "2025-02-12T17:07:45Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "It didn't work. Do you have any advice for how we can avoid this error? Mitigations or workarounds? @baronfel \n",
        "createdAt": "2025-02-18T08:52:32Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "@surayya-MS reverting #11079 seems to fix this issue. It is a build flipper, so it is hard to say for sure. We have run multiple rounds of concurrent builds and haven't seen the issue so far. If you investigate that and determine that this is a regression due to that PR, we are interested in knowing how soon we can expect a patch to 17.12.",
        "createdAt": "2025-02-26T14:27:57Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "@SimaTian can you investigate please and see if that PR could have had this kind of side effect? ",
        "createdAt": "2025-02-26T14:34:29Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "@BenjaminBrienen do you have a [binlog](https://aka.ms/binlog) @SimaTian can look at? preferably one taken with the env var `DOTNET_MSBUILD_SDK_RESOLVER_ENABLE_LOG=1` enabled?",
        "createdAt": "2025-02-26T14:56:56Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "> @BenjaminBrienen do you have a [binlog](https://aka.ms/binlog) @SimaTian can look at? preferably one taken with the env var `DOTNET_MSBUILD_SDK_RESOLVER_ENABLE_LOG=1` enabled?\n\nProbably not, since our logs aren't sanitized and might contain sensitive info. Also, enabling that variable breaks our build because of the way we run `<Exec>` and capture the console output and expect it to be a certain format.",
        "createdAt": "2025-02-26T15:25:12Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "@BenjaminBrienen if you can somehow enable the env var and look at the log messages generated (the ones in the `logger?.LogMessage` calls in [this range of code](https://github.com/dotnet/sdk/blob/843734df45746db9cbb4d2f5db721ae53f4c959f/src/Resolvers/Microsoft.DotNet.MSBuildSdkResolver/MSBuildSdkResolver.cs#L84-L252) that may provide a useful clue.\n\nHaving more information about your build environment or scenario overall may help us - based on what you've said I would expect _so many_ people to be broken. Since we're not seeing that in our reports I have to assume there's something weird in your environment.",
        "createdAt": "2025-02-26T15:28:43Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "> Having more information about your build environment or scenario overall may help us - based on what you've said I would expect _so many_ people to be broken. Since we're not seeing that in our reports I have to assume there's something weird in your environment.\n\nWe have a bunch of Windows Server 2022 machines and each one has multiple self-hosted build agents running on them. Each one is in a different pool. The builds are not containerized. The servers have Visual Studio 2022 (17.12) installed with multiple side-by-side .NET SDK installations including as old as .NET 5. The projects get the error whether they have sdk 8.0 or 9.0 in their global.json.",
        "createdAt": "2025-02-26T15:33:36Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "This is what I get when building on my local dev machine. This is not an example of a failed build. I cannot reproduce the error on my local dev machine. Reproducing the error with this logging enabled on the build servers may be possible if you need me to, but I would really need to figure out how to do that.\n```\nPS C:\\sources\\COES> $env:COREHOST_TRACE=1; $env:COREHOST_TRACE_VERBOSITY=4; $env:DOTNET_MSBUILD_SDK_RESOLVER_ENABLE_LOG=1; msbuild COES /bl /r > output.txt\nTracing enabled @ Wed Feb 26 15:36:14 2025 GMT\n--- Invoked hostfxr_resolve_sdk2 [version: 9.0.1 @Commit: c8acea22626efab11c13778c028975acdc34678f]\n  exe_dir=C:\\Program Files\\dotnet\n  working_dir=C:\\sources\\COES\\COES\n  flags=1\nProbing path [C:\\sources\\COES\\COES\\global.json] for global.json\nProbing path [C:\\sources\\COES\\global.json] for global.json\nFound global.json [C:\\sources\\COES\\global.json]\n--- Resolving SDK information from global.json [C:\\sources\\COES\\global.json]\nValue 'sdk/allowPrerelease' is missing or null in [C:\\sources\\COES\\global.json]\nResolving SDKs with version = '9.0.102', rollForward = 'latestPatch', allowPrerelease = false\nSearching for SDK versions in [C:\\Program Files\\dotnet\\sdk]\nIgnoring version [6.0.302] because it does not match the roll-forward policy\nIgnoring version [6.0.428] because it does not match the roll-forward policy\nIgnoring version [8.0.100] because it does not match the roll-forward policy\nIgnoring version [8.0.309] because it does not match the roll-forward policy\nIgnoring version [8.0.406] because it does not match the roll-forward policy\nVersion [9.0.102] is a better match than [none]\nSDK path resolved to [C:\\Program Files\\dotnet\\sdk\\9.0.102]\n--- Invoked hostfxr_resolve_sdk2 [version: 9.0.1 @Commit: c8acea22626efab11c13778c028975acdc34678f]\n  exe_dir=C:\\Program Files\\dotnet\n  working_dir=C:\\sources\\COES\\COES\n  flags=1\nProbing path [C:\\sources\\COES\\COES\\global.json] for global.json\nProbing path [C:\\sources\\COES\\global.json] for global.json\nFound global.json [C:\\sources\\COES\\global.json]\n--- Resolving SDK information from global.json [C:\\sources\\COES\\global.json]\nValue 'sdk/allowPrerelease' is missing or null in [C:\\sources\\COES\\global.json]\nResolving SDKs with version = '9.0.102', rollForward = 'latestPatch', allowPrerelease = false\nSearching for SDK versions in [C:\\Program Files\\dotnet\\sdk]\nIgnoring version [6.0.302] because it does not match the roll-forward policy\nIgnoring version [6.0.428] because it does not match the roll-forward policy\nIgnoring version [8.0.100] because it does not match the roll-forward policy\nIgnoring version [8.0.309] because it does not match the roll-forward policy\nIgnoring version [8.0.406] because it does not match the roll-forward policy\nVersion [9.0.102] is a better match than [none]\nSDK path resolved to [C:\\Program Files\\dotnet\\sdk\\9.0.102\n```",
        "createdAt": "2025-02-26T15:40:21Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "Would it be possible to set up some small toy project to showcase the issue please?\nI've looked through the code of the PR that you mentioned and didn't see anything obvious. However I could be missing something.\n\nThe information about reproduction only happening on servers is interesting, however it makes local reproduction on our side more complicated.",
        "createdAt": "2025-02-26T15:42:07Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "All of those logs are from the `dotnet` muxer, not from MSBuild SDK resolution unfortunately - the logs I'm interested in will only come as part of the _build_'s logs. Privacy is a very valid concern - if you like you can submit binlogs to VS Developer Community as private attachments so that only MS/.NET employees can see them, and then you can delete them entirely once we complete the investigation. If you choose to do this, please link the DevCom ticket here so that we can skip the DevCom triage process.",
        "createdAt": "2025-02-26T15:42:44Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "The binlogs should be ready soon. Where can I upload them?",
        "createdAt": "2025-02-27T12:45:27Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "In case you need them to be shared privately, please use\nhttps://developercommunity.microsoft.com/dotnet/report\nthen link me here the ticket so that we skip the triage/assignment part.",
        "createdAt": "2025-02-27T13:52:50Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "@SimaTian https://developercommunity.microsoft.com/t/msbuild-1712-fails-to-resolve-SDKs/10860258",
        "createdAt": "2025-02-27T15:02:43Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "If I view that link in a private browser (logged out) I can still view the ticket and download the zip files. I'm pretty sure that the feedback is visible to the public!\n\nedit: Not cool!\n\n![Image](https://github.com/user-attachments/assets/5b47debe-e308-43d1-b236-15ab02f77fbd)",
        "createdAt": "2025-02-27T15:04:27Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "The text in the Description says that private data must be attached as a private comment after posting. I agree the UX is terrible. I've pinged folks in my org that may be able to purge the entire post. Will update as I know more.",
        "createdAt": "2025-02-27T15:15:20Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "My fault for not reading the text. I'm used to the placeholder text being unimportant, and I let my guard down.",
        "createdAt": "2025-02-27T15:20:18Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "The UX _is pretty garbage_, the easy thing is the worst possible outcome. We don't control the DevCom experience so I can only push internal teams for some changes, but we _do_ control our binlog guidance at https://aka.ms/binlog and we'll update that with screenshots and details to highlight the risk better.",
        "createdAt": "2025-02-27T15:24:16Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "The error happened on a patched server, so that commit was not the issue. I'll upload the binlogs to the other issue. Unfortunately, it isn't with the environment variables set, but I do have the environment variables enabled on many of the servers. Hopefully we catch it soon.",
        "createdAt": "2025-02-28T12:03:44Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "I am now wondering about https://github.com/dotnet/msbuild/pull/10603",
        "createdAt": "2025-02-28T12:56:16Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "In the most recent failure that I mentioned, there was only that 1 agent running that 1 build at that time. I don't think that contention is the issue.",
        "createdAt": "2025-02-28T13:01:30Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "I've got the latest logs. Thank you for providing the information, I'll see what I can do.",
        "createdAt": "2025-03-03T08:22:18Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "One thing I will have to dig deeper into, but that could be relevant.\nAlso please correct me if I read the logs incorrectly - I could be building on wrong assumptions here if that is the case.\n\n- Your main build is running with `-m` e.g. with multiprocessing. (what I see in the Trace section of binlogs supports this assumption)\n- Each (or at least many) of the subprojects are then calling `<Exec $(CanonSQwrapper) MSBuild.exe $(someparameters)`\n- where the parameters include /p:BuildInParallel=true /m\n- e.g. each of your child processes, which are SQ wrapped MSBuilds is running in a multiprocess mode.\n\nNow if all this happens on a single machine, then your build could be contending with itself due to the way is structured.\n\nI will have to dig deeper in the SDK resolver logic to see what could go wrong, however I'm not sure this is a supported scenario.\nMeanwhile, I've got some questions and suggestions. Can you take a look at them please?\n\n - could you try to run the internal builds without `buildInParallel` and `/m` properties please?\n   -  while this will slow down your build some, it could help with the consistency by limiting the number of stuff that is happening concurrently.\n - is there any option to make do without the <exec> tasks invoking MSBuild? Ideally, all should be achieveable within a single project. e.g. using the SonarQube scan in the outermost build and then run with a single MSBuild entry point (which can contain multiple projects, which is fine and supported)\n   - currently it seems that you're mixing two layers of parallelism (both in the inner and in the outer build) which might lead to unexpected results.\n - does this error happen when using msbuild without the SonarQube wrapper? \n   - directly after the exec, there is a MSBuild task invoked if SQ isn't available.\n   - if disabling the SQ helps, it could be some interaction of msbuild with SonarQube. ",
        "createdAt": "2025-03-03T12:16:15Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "This is still happening, by the way. Unfortunately, we can't bisect the issue because our projects are already updated to vs17.12 and using msbuild vs17.11.9 is incompatible.",
        "createdAt": "2025-03-18T14:51:07Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "```\nC:\\cagnt03\\_work\\25\\s\\Directory.Build.props(18,9): error MSB4014: The build stopped unexpectedly because of an internal failure.\nSystem.InvalidOperationException: Collection was modified; enumeration operation may not execute.\n   at System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)\n   at System.Collections.Generic.List`1.Enumerator.MoveNextRare()\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.GetResolvers(IList`1 resolversManifests, LoggingContext loggingContext, ElementLocation sdkReferenceLocation)\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdkUsingResolversWithPatternsFirst(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio, Boolean failOnUnresolvedSdk)\n   at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.<>c__DisplayClass3_0.<ResolveSdk>b__2()\n   at System.Lazy`1.CreateValue()\n   at System.Lazy`1.LazyInitValue()\n   at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio, Boolean failOnUnresolvedSdk)\n   at Microsoft.Build.BackEnd.SdkResolution.MainNodeSdkResolverService.PacketReceived(Int32 node, INodePacket packet)\n```",
        "createdAt": "2025-03-20T10:55:56Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "@YuliiaKovalova can we see if the team can see if we have a race condition in the resolver infrastructure? ",
        "createdAt": "2025-03-20T12:37:59Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "It seems to be related to this https://github.com/dotnet/msbuild/issues/7927",
        "createdAt": "2025-03-20T13:19:52Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "@baronfel I think the customer is right and it comes from #7927\nThis analysis is robust, once we have the availability, we should apply the suggested fix: https://github.com/dotnet/msbuild/issues/7927#issuecomment-1973203412\n\n",
        "createdAt": "2025-03-20T13:28:37Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "> MSBuild version 17.12.12+1cce77968 for .NET Framework\n\n<https://github.com/dotnet/msbuild/blob/1cce77968bca1366760f361c837ffbc3a6af70f0/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs> in that version does not yet include the fix <https://github.com/dotnet/msbuild/pull/11079>.  v17.14.0-preview-25110-01 includes that fix.",
        "createdAt": "2025-03-20T14:53:16Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "ah, so it's a question of backporting. I could definitely see us backporting this to 17.12 because that's the version that's used by source-build. will discuss with the team.",
        "createdAt": "2025-03-20T14:55:26Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "Please note that the \"could not resolve SDK\" error is different from the internal exception. It might be the same root cause. We only started seeing the \"could not resolve SDK\" error when upgrading from 17.10 to 17.12.",
        "createdAt": "2025-03-20T16:57:59Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "PR is in review - bacporting to vs17.12",
        "createdAt": "2025-03-27T19:13:35Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "@SimaTian is it scheduled to land in 17.12 soon?",
        "createdAt": "2025-04-18T08:41:41Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "I'm sorry I was away for a bit due to personal reasons. \nThe backport was postponed to a later date:\nhttps://github.com/dotnet/msbuild/pull/11612\nI'll check with the team and see what happened/needs to happen.",
        "createdAt": "2025-05-02T08:59:03Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "Hi, I'm running into a similar issue and I think it's caused by this bug as well:\n\n`The SDK resolver assembly \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\MSBuild\\Current\\Bin\\SdkResolvers\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.DotNet.MSBuildSdkResolver.dll\" could not be loaded. Could not load file or assembly 'Microsoft.DotNet.MSBuildSdkResolver, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.`",
        "createdAt": "2025-05-07T18:23:57Z",
        "author": {
          "login": "Ralph-Sampson"
        }
      },
      {
        "body": "So, it isn't just us!",
        "createdAt": "2025-05-08T08:02:03Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      },
      {
        "body": "So the first step is done: the backport was merged.\nNow there are some additional steps to let this propagate through the system. I will post updates as they happen.",
        "createdAt": "2025-05-23T12:00:40Z",
        "author": {
          "login": "SimaTian"
        }
      }
    ]
  }
}