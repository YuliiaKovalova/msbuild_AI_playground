{
  "number": 9842,
  "title": "[NETSDKE2E] Only \"build succeed\" log is displayed after running .net format project with \"test.cmd\" command.",
  "body": "### Issue Description\r\n\r\nOnly \"build succeed\" log is displayed after running .net format project with \"test.cmd\" command.\r\n\r\n### Steps to Reproduce\r\n\r\n1.install Net 9.0.100-preview.3.24157.13 SDK on window11-x64.\r\n2.Checkout the dotnet-format repo. git clone https://github.com/dotnet/format.git\r\n3.Update the gobal.json by removing the \"sdk\" configuration. \r\nbefore\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/12daed5f-d7a7-4418-9e21-ff3f25968b4e)\r\n\r\nAfter\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/e60d5eb5-64c5-4185-bb31-93a9cfdd39bc)\r\n\r\n4.Run Restore.cmd.\r\n5.Run Build.cmd.\r\n6.Run Test.cmd.\r\n\r\n\r\n### Expected Behavior\r\n\r\nRestore/build and test project without any issue and the log can be displayed well.\r\n\r\n### Actual Behavior\r\n\r\n4. After restore.cmd, duplicate \"Build succeeded\" info displays, this issue seems similar with the bug [9614](https://github.com/dotnet/msbuild/issues/9614), and it has been fixed, will check in Monday's build.\r\n5. Build successfully and log displays well.\r\n6. Only \"build succeed\" log is displayed after running .NET format project with \"test.cmd\" command, but we can see about test succeed log in previous log template.\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/c67d8aca-e480-42c0-8dba-c741d2af43fa)\r\n\r\n\r\n\r\nprevious log template\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/077881de-9d0e-42b7-843a-a59858757bac)\r\n\r\ndotnet --info\r\nC:\\Windows\\system32>dotnet --info\r\n.NET SDK:\r\n Version:           9.0.100-preview.3.24157.13\r\n Commit:            34940c02d7\r\n Workload version:  9.0.100-manifests.4c56e492\r\n MSBuild version:   17.10.0-preview-24127-03+6f44380e4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.20348\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100-preview.3.24157.13\\\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      9.0.0-preview.3.24156.25\r\n  Architecture: x64\r\n  Commit:       8330db9986\r\n\r\n.NET SDKs installed:\r\n  9.0.100-preview.3.24157.13 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 9.0.0-preview.3.24156.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 9.0.0-preview.3.24156.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0-preview.3.24156.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n\r\n\r\n\r\n### Analysis\r\n\r\n_No response_\r\n\r\n### Versions & Configurations\r\n\r\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-03-08T09:35:10Z",
  "updatedAt": "2024-05-10T08:15:03Z",
  "closedAt": "2024-04-03T16:04:36Z",
  "author": {
    "login": "vdanche"
  },
  "labels": [
    "bug",
    "triaged",
    "Area: Terminal Logger"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "AR-May"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "is it an expected behavior for only \"Build succeeded\" log displaying after running test.cmd?",
        "createdAt": "2024-03-08T09:37:03Z",
        "updatedAt": "2024-03-08T09:37:03Z",
        "author": {
          "login": "vdanche"
        }
      },
      {
        "body": "It's expected for the current behavior but not desirable. @AR-May can you look at this repro and confirm your work for #9667 works here too?\n\nFor now you can add\n\n    -tl:false\n\nTo the build command line to get back to older behavior.",
        "createdAt": "2024-03-08T14:01:21Z",
        "updatedAt": "2024-03-08T14:01:21Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I took a look at this repro.\r\n\r\nSo, first of all, the `Restore.cmd`. It calls MSBuild twice, first to restore toolset and then to do the project restore. That's why we see two \"Build succeeded\" lines. Before, the first call of MSBuild was silenced by [setting \"/clp:ErrorsOnly;NoSummary\"](https://github.com/dotnet/format/blob/91f60316ebd9c75d6be8b7f9b7c201bab17240c9/eng/common/tools.ps1#L721) which works only for console logger, since it is a console logger parameter. Instead, if this call needs to be silenced, I suggest passing \"/v:q\" to set verbosity for any logger that will be used. So, when [my change](https://github.com/dotnet/msbuild/pull/9810) takes place, the terminal logger will respect this setting.\r\n\r\nThe `Build.cmd` seems to have a good output.\r\n\r\nThe `Test.cmd` does not have a custom test output. The fix for that is to increase the TL verbosity to detailed passing `-v:d` in this script. When my change for respecting verbosity takes place, it will also show the high-prio messages:\r\n```\r\nPS C:\\Users\\alinama\\work\\msbuild\\test_repos\\format> .\\Test.cmd\r\n  dotnet-format.UnitTests succeeded (345.1s)\r\n    echo === COMMAND LINE === > C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\log\\Debug\\dotnet-format.UnitTests_net9.0_x64.log\r\n                   echo \"C:\\Program Files\\dotnet\\dotnet.exe\" test C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\bin\\dotnet-format.UnitTests\\Debug\\net9.0\\dotnet-format.UnitTests.dll --logger:\"console;verbosity=normal\" --logger:\"trx;LogFileName=dotnet-format.UnitTests_net9.0_x64.trx\" --logger:\"html;LogFileName=dotnet-format.UnitTests_net9.0_x64.html\" \"--ResultsDirectory:C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\TestResults\\Debug\" \"--Framework:.NETCoreApp,Version=v9.0\" >> \"C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\log\\Debug\\dotnet-format.UnitTests_net9.0_x64.log\" 2>&1 >> C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\log\\Debug\\dotnet-format.UnitTests_net9.0_x64.log\r\n    Running tests: C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\bin\\dotnet-format.UnitTests\\Debug\\net9.0\\dotnet-format.UnitTests.dll [net9.0|x64]\r\n    \"C:\\Program Files\\dotnet\\dotnet.exe\" test C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\bin\\dotnet-format.UnitTests\\Debug\\net9.0\\dotnet-format.UnitTests.dll --logger:\"console;verbosity=normal\" --logger:\"trx;LogFileName=dotnet-format.UnitTests_net9.0_x64.trx\" --logger:\"html;LogFileName=dotnet-format.UnitTests_net9.0_x64.html\" \"--ResultsDirectory:C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\TestResults\\Debug\" \"--Framework:.NETCoreApp,Version=v9.0\" >> \"C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\log\\Debug\\dotnet-format.UnitTests_net9.0_x64.log\" 2>&1\r\n    Tests succeeded: C:\\Users\\alinama\\work\\msbuild\\test_repos\\format\\artifacts\\bin\\dotnet-format.UnitTests\\Debug\\net9.0\\dotnet-format.UnitTests.dll [net9.0|x64]\r\n\r\nBuild succeeded in 346.3s\r\n```\r\nI am not sure how the line \"echo === COMMAND LINE === >\" was skipped before, probably with one more console logger setting. Nevertheless, is such output fine for your goals?",
        "createdAt": "2024-03-18T12:36:09Z",
        "updatedAt": "2024-03-18T12:36:09Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "Should be completed by PR #9810.",
        "createdAt": "2024-04-03T16:04:36Z",
        "updatedAt": "2024-04-03T16:04:36Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "@AR-May it still repro on today's build-9.0.100-preview.4.24206.1(runtime-9.0.0-preview.4.24204.3), we'll keep tracking.\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/df34a352-aceb-46ab-9ad9-d2206e6258b9)\r\n\r\n",
        "createdAt": "2024-04-07T09:13:07Z",
        "updatedAt": "2024-04-07T09:13:07Z",
        "author": {
          "login": "vdanche"
        }
      },
      {
        "body": "> @AR-May it still repro on today's build-9.0.100-preview.4.24206.1(runtime-9.0.0-preview.4.24204.3), we'll keep tracking. \r\n\r\nIt takes some time to propagate changes to dotnet. I can see that msbuild with my change is still not inserted there. Let's wait a bit more. Please do not forget that you also need to replace the build parameters `/clp:ErrorsOnly;NoSummary` with `/v:q` to make it apply to both Terminal Logger and Console Logger.",
        "createdAt": "2024-04-08T07:17:31Z",
        "updatedAt": "2024-04-08T07:18:12Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "@AR-May checked on 9.0.100-preview.4.24221.5, the issue still repro. you mean we need to add /v:q when running restore.cmd/build.cmd/test.cmd?\r\n\r\nRun restore.cmd /v:q, dup build succeed still repro, but the bug https://github.com/dotnet/msbuild/issues/9614 is fixed.\r\nRun Test.cmd /v:q,  only \"build succeed\" log is displayed after running .NET format project with \"test.cmd\" \r\n![image](https://github.com/dotnet/msbuild/assets/65637796/fe5a16e0-725a-46c4-9baf-fd229ee6a7fd)\r\n\r\n8.0 template as below\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/2388084d-fc61-4b84-9c1c-f0f1d8b83c88)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ",
        "createdAt": "2024-04-23T03:13:34Z",
        "updatedAt": "2024-04-23T03:13:34Z",
        "author": {
          "login": "vdanche"
        }
      },
      {
        "body": "@vdanche adding the `/v:q` parameter to the call of restore.cmd does not help because such parameter is not propagated inside the script to all msbuild calls. [Here](https://github.com/dotnet/format/blob/91f60316ebd9c75d6be8b7f9b7c201bab17240c9/eng/common/tools.ps1#L721) is the call of restore that shows the extra `Build succeeded` and the verbosity parameter is not propagated to it. It is probably because the authors wanted this run to be always silenced and not dependent on a verbosity passed by user of the script. And when the console logger was on by default it was silenced, by the console logger specific parameters: `/clp:ErrorsOnly;NoSummary`. Now that terminal logger is default, a full output shows and it is no more silenced. You will need to fix this place of the script to make the fix work.",
        "createdAt": "2024-04-23T08:02:47Z",
        "updatedAt": "2024-04-23T08:02:47Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "@AR-May I have replaced /clp:ErrorsOnly;NoSummary with /v:q in file tools.ps1(C:\\Users\\v-danche\\format\\eng\\common), but still repro. Is there anything else we need to do?\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/ee9b1106-84f9-48a5-b865-adf0de27256c)\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/46a6e115-b721-4f0a-b618-bb0a7687deb9)\r\n\r\n",
        "createdAt": "2024-04-23T08:50:14Z",
        "updatedAt": "2024-04-23T09:06:31Z",
        "author": {
          "login": "vdanche"
        }
      },
      {
        "body": "@vdanche hmm, when I checked the fix, it worked. It has been a while, I might have forgotten some details about the fix, or maybe I made some mistake when I checked it. I will re-check.",
        "createdAt": "2024-04-23T13:24:10Z",
        "updatedAt": "2024-04-23T13:24:10Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "@vdanche I checked again the restore command and the fix with adding `/v:q` to the specified line works for me:\r\n```\r\nPS C:\\Users\\alinama\\work\\msbuild\\test_repos\\format> .\\Restore.cmd\r\nRestore complete (0.9s)\r\n\r\nBuild succeeded in 4.6s\r\n```\r\nCan you try to verify this again? I see couple of possible reasons it did not work for you: maybe the file was not saved (happens to me often) or the wrong version of sdk was installed? I see that it downloads preview 1 sdk.\r\n\r\nAs for the test.cmd, you need to set the detailed verbosity, not the quiet: ` Test.cmd /v:d`",
        "createdAt": "2024-05-03T15:31:18Z",
        "updatedAt": "2024-05-03T15:31:18Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "\r\n\r\n> @vdanche I checked again the restore command and the fix with adding `/v:q` to the specified line works for me:\r\n> \r\n> ```\r\n> PS C:\\Users\\alinama\\work\\msbuild\\test_repos\\format> .\\Restore.cmd\r\n> Restore complete (0.9s)\r\n> \r\n> Build succeeded in 4.6s\r\n> ```\r\n> \r\n> Can you try to verify this again? I see couple of possible reasons it did not work for you: maybe the file was not saved (happens to me often) or the wrong version of sdk was installed? I see that it downloads preview 1 sdk.\r\n> \r\n> As for the test.cmd, you need to set the detailed verbosity, not the quiet: ` Test.cmd /v:d`\r\n\r\n@AR-May Thank you very much\r\nYes, it downloads preview 1 sdk, we need to  modify dotnet tools version \"net9 preview 1\" to 9.0.100-preview.4.24253.11 manually in globaljson file, we try it again, we can get the correct log.\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/08c11539-6e9a-4edf-9ab6-9b76cc7158b5)\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/4232dd43-3543-403b-8967-51ce46865c29)\r\n\r\nDetails steps as below, \r\n1.install Net 9.0.100-preview.4.24253.11 SDK on window11-x64.\r\n2.Checkout the dotnet-format repo. git clone https://github.com/dotnet/format.git\r\n3.Update the gobal.json by removing the \"sdk\" configuration.\r\nbefore\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/e55c7290-f399-4723-9abb-6cab80b5c00a)\r\nAfter\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/7bc4aa9d-4593-4234-90ae-c2782f5e36f3) and modify dotnet tools version \"net9 preview 1\" to 9.0.100-preview.4.24253.11\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/08c11539-6e9a-4edf-9ab6-9b76cc7158b5)\r\n\r\n4.  replaced /clp:ErrorsOnly;NoSummary with /v:q in file tools.ps1(C:\\Users\\v-danche\\format\\eng\\common) and save\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/89612090-74f7-454e-b122-a828b26b8fa6)\r\n\r\n5.Run Restore.cmd.\r\n6.Run Build.cmd.\r\n7.Run Test.cmd /v:d",
        "createdAt": "2024-05-06T09:29:18Z",
        "updatedAt": "2024-05-06T09:32:37Z",
        "author": {
          "login": "vdanche"
        }
      },
      {
        "body": "@vdanche good. I thought a bit more about the fix for the `restore.cmd`. I will recommend instead of replacing `/clp:ErrorsOnly;NoSummary` with `/v:q`, just add `/tlp:verbosity=q` to the call. In this case if Terminal Logger is not used (for example, the output redirected to a file), the behavior of the console logger would be guaranteed as before the fix. And if the Terminal Logger would be used, it will fix the problem.  ",
        "createdAt": "2024-05-06T11:01:46Z",
        "updatedAt": "2024-05-06T11:02:15Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "\r\n\r\n> @vdanche good. I thought a bit more about the fix for the `restore.cmd`. I will recommend instead of replacing `/clp:ErrorsOnly;NoSummary` with `/v:q`, just add `/tlp:verbosity=q` to the call. In this case if Terminal Logger is not used (for example, the output redirected to a file), the behavior of the console logger would be guaranteed as before the fix. And if the Terminal Logger would be used, it will fix the problem.\r\n\r\n@AR-May we just try to add /tlp:verbosity=q in tools.ps1(C:\\Users\\v-danche\\format\\eng\\common), we also can get the correct log. Thanks\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/5cfa0431-f0fc-4eed-9ccc-c60821b6a7ee)\r\n![image](https://github.com/dotnet/msbuild/assets/65637796/f73169b0-ac36-48eb-89bd-6e1888f7b762)\r\n\r\n",
        "createdAt": "2024-05-10T08:11:27Z",
        "updatedAt": "2024-05-10T08:15:03Z",
        "author": {
          "login": "vdanche"
        }
      }
    ]
  }
}