{
  "number": 9790,
  "title": "[Feature Request]: the `Exec` task should support using `$SHELL` instead of `/bin/sh` ",
  "body": "### Summary\n\nLinux systems declare their shells in the $SHELL environment variable, and we should consider using this when we `Exec` in cases where `/bin/sh` doesn't exist.\n\n### Background and Motivation\n\nThis also opens the door to using different shell syntaxes instead of the `sh` POSIX-only compatibility layer\n\n### Proposed Feature\n\n`Exec` should fallback to $SHELL when `/bin/sh` isn't available. It could also add a new metadata that would control if $SHELL or /bin/sh should be preferred (which would allow for using shell-specific syntaxes instead of POSIX base behaviors).\n\n### Alternative Designs\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-02-27T16:41:11Z",
  "updatedAt": "2024-02-27T20:59:59Z",
  "closedAt": "2024-02-27T20:59:58Z",
  "author": {
    "login": "baronfel"
  },
  "labels": [
    "Feature Request",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "POSIX requires that `make` keep the SHELL macro separate from the SHELL environment variable: the environment variable shall not affect `$(SHELL)` expansion in makefiles, and `SHELL=foo` assignments in makefiles shall not affect the `SHELL` environment variable inherited by child processes.  Which I suppose keeps makefiles more portable between users who choose to use different shells.",
        "createdAt": "2024-02-27T17:15:56Z",
        "updatedAt": "2024-02-27T17:15:56Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "The POSIX requirements on `make` do not directly apply to MSBuild, but the rationale still applies; SHELL is a user preference setting and should not affect the parsing of commands in build scripts.  There may be some advantage to making MSBuild run commands via a custom shell but I do not believe this should depend on the SHELL environment variable.  Define some MSBuildShell variable instead, or a command-line option.",
        "createdAt": "2024-02-27T18:09:52Z",
        "updatedAt": "2024-02-27T18:09:52Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "That's fair, and after thinking about the problem a bit more it starts getting even worse - MSBuild has no real mechanism for running shell-specific scripts currently, and whatever happens in `Exec` needs to be able to be run portably as much as possible. Posix `sh` standards are about as good as we can get on non-Windows platforms in that regard, so that's what we should stay with.",
        "createdAt": "2024-02-27T20:59:58Z",
        "updatedAt": "2024-02-27T20:59:58Z",
        "author": {
          "login": "baronfel"
        }
      }
    ]
  }
}