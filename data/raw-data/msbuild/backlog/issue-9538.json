{
  "number": 9538,
  "title": "[Bug]: Cannot load projects in C# Dev Kit due to StableStringHash error",
  "body": "### Issue Description\r\n\r\nLoading a project in C# Dev Kit (VSCode) and Solution Explorer is failing to load:\r\n![image](https://github.com/dotnet/msbuild/assets/4821/a49246a3-57be-4e4e-beea-cb861cd57368)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nInstall VS 17.9 int.preview which is getting preview SDK for 8.0.200 builds\r\nOpen a folder in C# Dev Kit\r\n\r\n### Expected Behavior\r\n\r\nProject loads fine (this is a regression)\r\n\r\n### Actual Behavior\r\n\r\nNo solution explorer loads, no roslyn project context exists\r\n\r\n### Analysis\r\n\r\nNo idea.\r\n\r\nI've implmeneted this workaround in my csproj file:\r\n```\r\n  <PropertyGroup Condition=\"'$(BuildingInsideVisualStudio)' != 'true'\">\r\n    <CopyUpToDateMarker>$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', '$(IntermediateOutputPath)', '$(MSBuildProjectFile).CopyComplete'))</CopyUpToDateMarker>\r\n    <MSBuildCopyMarkerName>$(MSBuildProjectFile)</MSBuildCopyMarkerName>\r\n  </PropertyGroup>\r\n```\r\n\r\n### Versions & Configurations\r\n\r\ndotnet info:\r\n```\r\n.NET SDK:\r\n Version:           8.0.200-preview.23604.9\r\n Commit:            a75f89274d\r\n Workload version:  8.0.200-manifests.3b83835e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22635\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.200-preview.23604.9\\\r\n\r\n.NET workloads installed:\r\n Workload version: 8.0.200-manifests.3b83835e\r\n [maui-windows]\r\n   Installation Source: VS 17.9.34412.211\r\n   Manifest Version:    8.0.3/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.maui\\8.0.3\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\n [android]\r\n   Installation Source: VS 17.9.34412.211\r\n   Manifest Version:    34.0.52/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.android\\34.0.52\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\n [aspire]\r\n   Installation Source: VS 17.9.34412.211\r\n   Manifest Version:    8.0.0-preview.1.23557.2/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.0.0-preview.1.23557.2\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\n [maccatalyst]\r\n   Installation Source: VS 17.9.34412.211\r\n   Manifest Version:    17.0.8490/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.maccatalyst\\17.0.8490\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\n [ios]\r\n   Installation Source: VS 17.9.34412.211\r\n   Manifest Version:    17.0.8490/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.ios\\17.0.8490\\WorkloadManifest.json\r\n   Install Type:        FileBased\r\n\r\n\r\nHost:\r\n  Version:      8.0.0\r\n  Architecture: x64\r\n  Commit:       5535e31a71\r\n\r\n.NET SDKs installed:\r\n  8.0.200-preview.23604.9 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n```\r\n\r\nmsbuild -version:\r\n```\r\nMSBuild version 17.9.0-preview-23612-07+5af9301a6 for .NET Framework\r\n17.9.0.61207\r\n```",
  "state": "CLOSED",
  "createdAt": "2023-12-14T04:23:22Z",
  "updatedAt": "2023-12-22T12:39:51Z",
  "closedAt": "2023-12-22T12:39:51Z",
  "author": {
    "login": "timheuer"
  },
  "labels": [
    "bug",
    "Partner request",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@JanKrivanek I saw this PR (https://github.com/dotnet/msbuild/pull/9387) and I'm getting some broken behavior now on VSCode",
        "createdAt": "2023-12-14T04:27:04Z",
        "updatedAt": "2023-12-14T04:27:04Z",
        "author": {
          "login": "timheuer"
        }
      },
      {
        "body": "This issue also repro in the 9.0.100-alpha.1.23613.5 on Linux/Mac OS. \r\n",
        "createdAt": "2023-12-14T05:10:47Z",
        "updatedAt": "2023-12-14T05:10:47Z",
        "author": {
          "login": "v-Judy"
        }
      },
      {
        "body": "\r\n**tl;dr;:** can you please update your sdk? (fresh version - wasn't avaialble at the time you hit this).\r\n\r\nThis looks to be sdk version mismatch (or rather a stale insertions of msbuild main -> sdk main / sdk 8.0.2xx), that should be resolved as of now: \r\n * main: https://github.com/dotnet/sdk/pull/37479, build: https://dev.azure.com/dnceng/internal/_build/results?buildId=2335415&view=results, version:  **9.0.100-alpha.1.23613.12**\r\n * 8.0.2: insertion PR: https://github.com/dotnet/sdk/pull/37484, build: https://dev.azure.com/dnceng/internal/_build/results?buildId=2335334&view=results, version: **8.0.200-preview.23613.8**\r\n\r\n",
        "createdAt": "2023-12-14T10:37:39Z",
        "updatedAt": "2023-12-14T10:37:39Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "I confirm that I'm able to repro the issue via the latest VisualStudioClient devbox (it still has `8.0.200-preview.23604.9` sdk) and attempting to open pre-existing project (doesn't work on `dotnet new console` project).\r\n\r\n**The issue is resolved by installing [latest 8.0.2 sdk](https://github.com/dotnet/installer?tab=readme-ov-file#use-dotnet---help-to-see-available-commands-or-visit-httpsakamsdotnet-cli)**\r\n\r\nThe issue reappers after removing the latest sdk.\r\n\r\n-------\r\n\r\nBtw. regardless of this specific case - it still would be interesting to know why `StringTools` failed to load. I'll try to look into that",
        "createdAt": "2023-12-14T11:31:27Z",
        "updatedAt": "2023-12-14T12:25:40Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "So tracing down the issue I can see in assemblyloader etw that the called assembly was loaded from: `%USERPROFILE%\\.vscode\\extensions\\ms-dotnettools.csdevkit-1.1.16-win32-x64\\components\\vs-green-server\\platforms\\win32-x64\\node_modules\\@microsoft\\visualstudio-server-shared.win32-x64\\Microsoft.NET.StringTools.dll`\r\n\r\nSince it was called from local sdk with mismatched version, it's expected that the called function was not found (it existed in `Microsoft.NET.StringTools.dll` in the sdk). \r\n\r\n@tmeschter - is it expected that the project system calls into sdk, but resolves loads from `visualstudio-server-shared.win32-x64`? I suppose customers can freely upgrade/downgrade their sdks and the vscode modules cannot be guaranteed to be in sync. Or did I misunderstood  anything?\r\nI have etw trace with the assembly loads available if that can be of any help.",
        "createdAt": "2023-12-14T12:20:15Z",
        "updatedAt": "2023-12-14T12:26:02Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Was this only a temporary issue or is it something we have to watch out for going forward with VS insertions?  For 8.0.2xx (and 3xx/4xx), we typically just pick the latest builds to insert into VS. Would us updating the version in main be sufficient?\r\n\r\nWe have an open PR to update the version to the 23613.10 version of the SDK if that's sufficient. \r\n\r\n@richaverma1 since we may need to be careful in testing 2xx insertions for the next few weeks.",
        "createdAt": "2023-12-14T17:17:52Z",
        "updatedAt": "2023-12-14T17:17:52Z",
        "author": {
          "login": "marcpopMSFT"
        }
      },
      {
        "body": "> We have an open PR to update the version to the 23613.10 version of the SDK if that's sufficient.\r\n\r\nExperiments from me and @timheuer suggest this is good.\r\n\r\nWe should spend some time understanding why ALC isolation isn't letting the devkit components that ship with devkit be older/different than the StringTools the SDK MSBuild uses.",
        "createdAt": "2023-12-14T18:21:53Z",
        "updatedAt": "2023-12-14T18:21:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Marking as fixed as the immediate issue is resolved.\r\n\r\nThe rootcause investiagation and fixing will be tracked by: #9572",
        "createdAt": "2023-12-22T12:39:51Z",
        "updatedAt": "2023-12-22T12:39:51Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}