{
  "number": 2165,
  "title": "Some transformations on @(ReferencePath) result in mangled references",
  "body": "Some builds fail with an error like\r\n\r\n```\r\n(CoreCompile target) ->\r\n  CSC : error CS0006: Metadata file '%(FullPath)' could not be found\r\n```\r\n\r\nwhen building using VS 15.3 preview 2 builds (which are not yet public).\r\n\r\n[This ItemReferenceGroup](https://github.com/Microsoft/msbuild/commit/e3a3d6998162665ab760518d0d0f2e338394b041#diff-02872751bc64e0ff785c9b6c1cd919b5R2082) sets a default value for the `ReferenceAssembly` metadata of `ReferencePath` items to `%(FullPath)`. The engine evaluates that as a literal string, but it can be successfully read through by item transformations like [`FindReferenceAssembliesForReferences`'s](https://github.com/Microsoft/msbuild/commit/e3a3d6998162665ab760518d0d0f2e338394b041#diff-02872751bc64e0ff785c9b6c1cd919b5R2060) `@(ReferencePath->'%(ReferenceAssembly)')`, because the evaluator recurses--it sees that literal, interprets it as a metadata reference, and reads the `FullPath` metadata.\r\n\r\nHowever, not all transformations perform that recursion. An `ITask` implementation that uses `return new TaskItem(oldItem)`, for example, evidently escapes the metadatum string, and when it is expanded it turns into a literal `%(FullPath)` instead of the value of the `FullPath` metadatum.\r\n\r\n`FindReferenceAssembliesForReferences` then populates `ReferencePathWithRefAssemblies` with a list of items whose identity is `%(FullPath)`, which isn't valid and confuses the compiler, producing the error above.\r\n\r\nThis is a regression introduced by e3a3d69 when implementing #1986.",
  "state": "CLOSED",
  "createdAt": "2017-06-02T21:52:28Z",
  "updatedAt": "2024-02-21T17:18:45Z",
  "closedAt": "2017-06-07T19:39:51Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 15.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "You can work around the bug by setting the property\r\n\r\n```xml\r\n<CompileUsingReferenceAssemblies>false</CompileUsingReferenceAssemblies>\r\n```\r\n\r\nwhich avoids transforming `@(ReferencePath)` using the recursive metadata expansion.",
        "createdAt": "2017-06-02T22:04:42Z",
        "updatedAt": "2017-06-02T22:04:42Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for reporting this @KirillOsenkov and @ToddGrun.\r\n\r\nFYI @dsplaisted -- the task that hit this for them was StrongNamer. Filed https://github.com/dsplaisted/strongnamer/issues/14 in the hopes that anyone who sees it will find it there.",
        "createdAt": "2017-06-02T22:06:44Z",
        "updatedAt": "2017-06-02T22:07:03Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "fyi @jcouv -- I'll also want to fix this in 15.3 p3.",
        "createdAt": "2017-06-02T23:00:12Z",
        "updatedAt": "2017-06-02T23:00:12Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}