{
  "number": 1469,
  "title": "[BUG] MSBuildWorkspace.Create() - Exception on mac",
  "body": "## *Update*\r\nScroll down to see a workaround\r\nhttps://github.com/Microsoft/msbuild/issues/1469#issuecomment-287585930\r\n\r\nBut I still consider this a bug and it would be nice if it would work out of the box\r\n\r\n---\r\n\r\n\r\nSteps to recreate\r\n============\r\n\r\nMachine:\r\nMac, macOS Sierra, Xamarin 6.1.2\r\n\r\n- Create new project\r\n- Target Framework: .NET 4.6.1\r\n- Install packages:\r\n  - Microsoft.Net.Compilers\r\n  - Microsoft.CodeAnalysis\r\n  - Microsoft.Build 15.1.0-preview-000370-00 // required to make `MSBuildWorkspace.Create()` work on a mac\r\n  - Microsoft.Build.Tasks.Core.15.1.0-preview-000370-00\r\n- Change configuration to Release, otherwise: ```\r\nCSC: error CS0041: Unexpected error writing debug information -- 'Windows PDB writer is not available -- could not find Microsoft.DiaSymReader.Native.x86.dll'\r\n\tTask \"Csc\" execution -- FAILED\r\n\tDone building target \"CoreCompile\" in project \"/Users/sschmid/Desktop/MSBuildBug/MSBuildBug/MSBuildBug.csproj\".-- FAILED```\r\n- Open a project\r\n```\r\nvar project = workspace.OpenProjectAsync(path).Result;\r\n```\r\n\r\nExpected Behaviour\r\n===============\r\n\r\nOpen a project\r\n\r\n\r\nActual Behaviour\r\n===============\r\n\r\nException thrown:\r\n```\r\n[ERROR] FATAL UNHANDLED EXCEPTION: System.AggregateException: One or more errors occurred. ---> System.TypeLoadException: Could not load type 'Microsoft.Build.BackEnd.Logging.LoggingService' from assembly 'Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n  at Microsoft.Build.Evaluation.ProjectCollection..ctor (System.Collections.Generic.IDictionary`2[TKey,TValue] globalProperties, System.Collections.Generic.IEnumerable`1[T] loggers, System.Collections.Generic.IEnumerable`1[T] remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, System.Int32 maxNodeCount, System.Boolean onlyLogCriticalEvents) [0x00047] in <c29aeb497bfe46008f6d9d90f46bebf9>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /private/tmp/source-mono-4.6.0/bockbuild-mono-4.6.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:143 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00047] in /private/tmp/source-mono-4.6.0/bockbuild-mono-4.6.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x0002e] in /private/tmp/source-mono-4.6.0/bockbuild-mono-4.6.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x0000b] in /private/tmp/source-mono-4.6.0/bockbuild-mono-4.6.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <8f2c484307284b51944a1a13a14c0266>:0 \r\n  at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader+<LoadProjectFileAsync>d__3.MoveNext () [0x00089] in <2ba3a08d4fe0467c8c54c8bc37c61987>:0 \r\n```\r\n",
  "state": "CLOSED",
  "createdAt": "2016-12-12T10:11:44Z",
  "updatedAt": "2024-02-21T17:23:28Z",
  "closedAt": "2018-08-27T21:25:20Z",
  "author": {
    "login": "sschmid"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "The GitHub repo contains [Microsoft.Build.BackEnd](https://github.com/Microsoft/msbuild/blob/xplat/src/XMakeBuildEngine/BackEnd/Components/Logging/LoggingService.cs#L26), but the package doesn't\r\n\r\n![microsoft build backend missing](https://cloud.githubusercontent.com/assets/233700/21095720/0b88b326-c05d-11e6-9073-a179a5f6b4f7.png)\r\n",
        "createdAt": "2016-12-12T10:21:20Z",
        "updatedAt": "2016-12-12T10:21:20Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "I'm having the same problem under Visual Studio for Mac Preview.",
        "createdAt": "2017-01-29T17:31:05Z",
        "updatedAt": "2017-01-29T17:31:05Z",
        "author": {
          "login": "miloszpp"
        }
      },
      {
        "body": "Have you updated the package reference? The latest prerelease should have this.\r\n\r\ncc @radical @jeffkl ",
        "createdAt": "2017-01-30T15:43:59Z",
        "updatedAt": "2017-01-30T15:43:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald @radical @jeffkl \r\n\r\nCannot make it work.\r\n- Visual Studio Preview for Mac (7.0 build 1566)\r\n- new empty project .Net 4.6.1\r\n- installed `Microsoft.Net.Compilers (2.0.1)` and `Microsoft.CodeAnalysis (2.0.0)` as described here https://github.com/dotnet/roslyn\r\n\r\nDoing this\r\n```csharp\r\nusing Microsoft.CodeAnalysis.MSBuild;\r\n\r\nnamespace Entitas.CodeGenerator.Roslyn {\r\n\r\n    class MainClass {\r\n\r\n        public static void Main(string[] args) {\r\n            var workspace = MSBuildWorkspace.Create();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nresults in\r\n\r\n```\r\nUnhandled Exception:\r\nSystem.Reflection.ReflectionTypeLoadException: The classes in the module cannot be loaded.\r\n  at (wrapper managed-to-native) System.Reflection.Assembly:GetTypes (System.Reflection.Assembly,bool)\r\n  at System.Reflection.Assembly.GetTypes () [0x00000] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/corlib/System.Reflection/Assembly.cs:406 \r\n  at System.Reflection.Assembly+<>c__Iterator0.MoveNext () [0x00021] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/corlib/System.Reflection/Assembly.cs:985 \r\n  at System.Linq.Enumerable+WhereSelectEnumerableIterator`2[TSource,TResult].MoveNext () [0x00078] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/System.Core/System/Linq/Enumerable.cs:282 \r\n  at System.Linq.Enumerable+<SelectManyIterator>c__Iterator2`2[TSource,TResult].MoveNext () [0x0009a] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/System.Core/System/Linq/Enumerable.cs:424 \r\n  at System.Composition.TypedParts.TypedPartExportDescriptorProvider..ctor (System.Collections.Generic.IEnumerable`1[T] types, System.Composition.Convention.AttributedModelProvider attributeContext) [0x00049] in <c091afde214c4b8e8efbbeb9d44062d4>:0 \r\n  at System.Composition.Hosting.ContainerConfiguration.CreateContainer () [0x00042] in <c091afde214c4b8e8efbbeb9d44062d4>:0 \r\n  at Microsoft.CodeAnalysis.Host.Mef.MefHostServices.Create (System.Collections.Generic.IEnumerable`1[T] assemblies) [0x0001e] in <50145de2b49e4d6aab4b5ed733242e66>:0 \r\n  at Microsoft.CodeAnalysis.Host.Mef.DesktopMefHostServices.get_DefaultServices () [0x00011] in <af45985ff35a4188b06cc05cd665930a>:0 \r\n  at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (System.Collections.Generic.IDictionary`2[TKey,TValue] properties) [0x00000] in <af45985ff35a4188b06cc05cd665930a>:0 \r\n  at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create () [0x00000] in <af45985ff35a4188b06cc05cd665930a>:0 \r\n  at Entitas.CodeGenerator.Roslyn.MainClass.Main (System.String[] args) [0x00001] in <1e37bc9ac7c34b758c57287d69880426>:0 \r\n```\r\n\r\nHow can I use `MSBuildWorkspace.Create()` on a mac?",
        "createdAt": "2017-03-15T09:57:15Z",
        "updatedAt": "2017-03-15T09:57:15Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "I made it work on Mac and Linux with roslyn 1.3.2 and \"Mono Hosted MSBuild 0.03\" from releases. I do not have msbuild nuget references in my project, download zip, unpack it nearby and added the following to app.cpnfig:\r\n`<configuration>\r\n  <runtime>\r\n      <probing privatePath=\"msbuild\"/>\r\n  </runtime>\r\n</configuration>`\r\n\r\nBut it would be really nice it would work by just referencing nuget packages or have .net core sdk to support it.",
        "createdAt": "2017-03-15T20:24:10Z",
        "updatedAt": "2017-03-15T20:24:10Z",
        "author": {
          "login": "aka-STInG"
        }
      },
      {
        "body": "@aka-STInG Could you explain a little bit more? I can't get it to work.\r\n\r\nWhat I did\r\n- Create new project with TargetFramework to 4.6.1 in VS for Mac Preview\r\n- Install packages `Microsoft.Net.Compilers (2.0.1)` and `Microsoft.CodeAnalysis (2.0.0)`\r\n\r\n- Downloaded [msbuild v15.1.548.43366](https://github.com/Microsoft/msbuild/releases/tag/v15.1.548.43366) from releases\r\n- run `./cibuild.sh --host Mono`\r\n- this creates folder `bin/Bootstrap-NetCore/` with a lot of files including `MSBuild.dll`\r\n\r\nWhat do I have to do now?\r\n\r\n`var workspace = MSBuildWorkspace.Create();` still results in the exception above\r\n\r\nI hope you can give me a hint.\r\n",
        "createdAt": "2017-03-16T10:25:01Z",
        "updatedAt": "2017-03-16T10:25:01Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "What are the steps to successfully use\r\n\r\n```\r\nvar workspace = MSBuildWorkspace.Create(); \r\n```",
        "createdAt": "2017-03-16T10:26:11Z",
        "updatedAt": "2017-03-16T10:26:11Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "@rainersigwald @radical @jeffkl\r\n\r\nFyi\r\n```csharp\r\ntry {\r\n    MSBuildWorkspace.Create();\r\n} catch(ReflectionTypeLoadException ex) {\r\n    foreach(var e in ex.LoaderExceptions) {\r\n        Console.WriteLine(\"LoaderException: \" + e);\r\n    }\r\n}\r\n```\r\n\r\nprints\r\n\r\n```\r\nLoaderException: System.TypeLoadException: Could not resolve type with token 0100003c\r\n```",
        "createdAt": "2017-03-16T14:53:27Z",
        "updatedAt": "2017-03-16T14:53:27Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "Looking closer at the exception\r\n```\r\nSystem.Reflection.ReflectionTypeLoadException: The classes in the module cannot be loaded.\r\n  at (wrapper managed-to-native) System.Reflection.Assembly:GetTypes (System.Reflection.Assembly,bool)\r\n  at System.Reflection.Assembly.GetTypes () [0x00000] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/corlib/System.Reflection/Assembly.cs:406 \r\n...\r\n```\r\n\r\nit says `source-mono-4.8.0/bockbuild-mono-4.8.0-branch `. Might that be an issue since the target framework is 4.6.1?",
        "createdAt": "2017-03-16T15:32:58Z",
        "updatedAt": "2017-03-16T15:33:45Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "The Roslyn MSBuildWorkspace uses MEF for composition and I'm not sure this has ever been tested on non-Windows. This could be a bug in Roslyn.",
        "createdAt": "2017-03-16T16:18:57Z",
        "updatedAt": "2017-03-16T16:18:57Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@jmarolf suggested\r\n> in order to create an MSBuildWorkspace all of the MSBuild dlls need to be finable by mono [...]. The simplest solution is to copy the entirety of MSBuild into you output directory\r\n\r\nI compiled msbuild locally with `./cibuild.sh --host Mono` and copied all files from msbuild-15.1.548.43366/bin/Bootstrap-NetCore to my outbut folder bin/Release. Didn\u2019t fix it, same exception.\r\n\r\nHow can I get it to work?",
        "createdAt": "2017-03-17T09:24:03Z",
        "updatedAt": "2017-03-17T09:24:03Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "@sschmid, for me it worked with MSBuild 14, have not tried it with MSBuild 15\r\nMy steps are:\r\n- new project with 4.6.1 framework\r\n- add Microsoft.CodeAnalysis\r\ndownload  \"Mono Hosted MSBuild 0.03\" and unzip in output directory (I implemented this at runtime)\r\n- added specified above to app.cpnfig\r\n\r\n",
        "createdAt": "2017-03-18T23:00:40Z",
        "updatedAt": "2017-03-18T23:02:03Z",
        "author": {
          "login": "aka-STInG"
        }
      },
      {
        "body": "Ok, thanks, will try. What is `app.config`? I don't have this file anywhere in my project. Do I have to create it?",
        "createdAt": "2017-03-18T23:29:54Z",
        "updatedAt": "2017-03-18T23:30:05Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "I just tried again\r\n- new project 4.6.1\r\n- add package `Microsoft.CodeAnalysis`\r\n- downloaded and unzipped [Mono Hosted MSBuild 0.03](https://github.com/Microsoft/msbuild/releases/tag/mono-hosted-msbuild-v0.03) to my output folder\r\n- Manually removed references like `System.Console` and others because duplicate\r\n- added `MSBuildWorkspace.Create();`  in `Program.cs`\r\n\r\nI didn't do the `app.config`, because I don't have this file.\r\n\r\nThis exception:\r\n\r\n```\r\nCould not load signature of Microsoft.CodeAnalysis.SymbolSearch.SymbolSearchUpdateEngine+RemoteControlService:CreateClient due to: Could not load file or assembly 'Microsoft.VisualStudio.RemoteControl, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. assembly:Microsoft.VisualStudio.RemoteControl, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a type:<unknown type> member:<none>\r\nCould not load signature of Microsoft.CodeAnalysis.SymbolSearch.IRemoteControlService:CreateClient due to: Could not load file or assembly 'Microsoft.VisualStudio.RemoteControl, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. assembly:Microsoft.VisualStudio.RemoteControl, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a type:<unknown type> member:<none>\r\n\r\nUnhandled Exception:\r\nSystem.TypeLoadException: Error Loading class\r\n  at (wrapper managed-to-native) System.RuntimeType:GetPropertiesByName_native (System.RuntimeType,intptr,System.Reflection.BindingFlags,bool)\r\n  at System.RuntimeType.GetPropertiesByName (System.String name, System.Reflection.BindingFlags bindingAttr, System.Boolean icase, System.RuntimeType reflectedType) [0x00011] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/corlib/ReferenceSources/RuntimeType.cs:516 \r\n  at System.RuntimeType.GetPropertyCandidates (System.String name, System.Reflection.BindingFlags bindingAttr, System.Type[] types, System.Boolean allowPrefixLookup) [0x00010] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/mscorlib/system/rttype.cs:2881 \r\n  at System.RuntimeType.GetProperties (System.Reflection.BindingFlags bindingAttr) [0x00000] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/mscorlib/system/rttype.cs:3089 \r\n  at System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties (System.Type type) [0x00006] in /private/tmp/source-mono-4.8.0/bockbuild-mono-4.8.0-branch/profiles/mono-mac-xamarin/build-root/mono-x86/mcs/class/referencesource/mscorlib/system/reflection/RuntimeReflectionExtensions.cs:25 \r\n  at System.Composition.TypedParts.Discovery.TypeInspector+<DiscoverPropertyExports>d__17.MoveNext () [0x0002f] in <c091afde214c4b8e8efbbeb9d44062d4>:0 \r\n  at System.Composition.TypedParts.Discovery.TypeInspector+<DiscoverExports>d__0.MoveNext () [0x000eb] in <c091afde214c4b8e8efbbeb9d44062d4>:0 \r\n  at System.Composition.TypedParts.Discovery.TypeInspector.InspectTypeForPart (System.Reflection.TypeInfo type, System.Composition.TypedParts.Discovery.DiscoveredPart& part) [0x00061] in <c091afde214c4b8e8efbbeb9d44062d4>:0 \r\n  at System.Composition.TypedParts.TypedPartExportDescriptorProvider..ctor (System.Collections.Generic.IEnumerable`1[T] types, System.Composition.Convention.AttributedModelProvider attributeContext) [0x00039] in <c091afde214c4b8e8efbbeb9d44062d4>:0 \r\n  at System.Composition.Hosting.ContainerConfiguration.CreateContainer () [0x00042] in <c091afde214c4b8e8efbbeb9d44062d4>:0 \r\n  at Microsoft.CodeAnalysis.Host.Mef.MefHostServices.Create (System.Collections.Generic.IEnumerable`1[T] assemblies) [0x0001e] in <50145de2b49e4d6aab4b5ed733242e66>:0 \r\n  at Microsoft.CodeAnalysis.Host.Mef.DesktopMefHostServices.get_DefaultServices () [0x00011] in <af45985ff35a4188b06cc05cd665930a>:0 \r\n  at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create (System.Collections.Generic.IDictionary`2[TKey,TValue] properties) [0x00000] in <af45985ff35a4188b06cc05cd665930a>:0 \r\n  at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.Create () [0x00000] in <af45985ff35a4188b06cc05cd665930a>:0 \r\n```",
        "createdAt": "2017-03-18T23:44:03Z",
        "updatedAt": "2017-03-18T23:46:03Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "Microsoft.VisualStudio.RemoteControl.dll is missing? @heejaechang",
        "createdAt": "2017-03-18T23:59:28Z",
        "updatedAt": "2017-03-18T23:59:28Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@KirillOsenkov \r\nAdded `Microsoft.VisualStudio.RemoteControl`. `MSBuildWorkspace.Create()` works now! Yay :)",
        "createdAt": "2017-03-19T00:22:19Z",
        "updatedAt": "2017-03-19T00:22:19Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "@CyrusNajmabadi what is MS.VS.RemoteControl.dll? does it required for MSBuildWorkspace ?",
        "createdAt": "2017-03-19T00:37:42Z",
        "updatedAt": "2017-03-19T00:37:42Z",
        "author": {
          "login": "heejaechang"
        }
      },
      {
        "body": "@sschmid Glad to hear! \r\n\r\nPost mortem: do you think any of the road blocks you've experienced above is an actual MSBuild bug that can be fixed? If not we can close this, but if yes, maybe we should file other bugs that better pinpoint the exact problem.\r\n\r\nAre there any other things that you might call bugs, perhaps in Roslyn?",
        "createdAt": "2017-03-19T00:38:20Z",
        "updatedAt": "2017-03-19T00:38:20Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@heejaechang @CyrusNajmabadi apparently it's used by SymbolSearch and as such the Workspaces.Desktop.dll references the RemoteControl.dll. Not sure if this can be avoided. Should this be included as a dependency or added to the NuGet package? Such that the MSBuildWorkspace scenario above works fine. Also /cc @agocke to see if the NuGet package is underspecified.",
        "createdAt": "2017-03-19T00:40:55Z",
        "updatedAt": "2017-03-19T00:40:55Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@KirillOsenkov I'm happy too\r\n\r\nFrom a user perspective I'd say it's a bug. The documentation only mentions `Microsoft.Net.Compilers` and `Microsoft.CodeAnalysis`.\r\n\r\n2 missing steps:\r\n- copying [Mono Hosted MSBuild](https://github.com/Microsoft/msbuild/releases/tag/mono-hosted-msbuild-v0.03) to output folder\r\n- adding `Microsoft.VisualStudio.RemoteControl`",
        "createdAt": "2017-03-19T00:47:25Z",
        "updatedAt": "2017-03-19T00:47:25Z",
        "author": {
          "login": "sschmid"
        }
      },
      {
        "body": "> @CyrusNajmabadi what is MS.VS.RemoteControl.dll? \r\n\r\nIt's the dll that allows us to do NuGet-index-updates.  \r\n\r\n> does it required for MSBuildWorkspace ?\r\n\r\nWe could likely move this to a higher layer.  But it has no dependencies at the time, so there was no problem with having it run down here.",
        "createdAt": "2017-03-19T01:12:04Z",
        "updatedAt": "2017-03-19T01:12:04Z",
        "author": {
          "login": "CyrusNajmabadi"
        }
      },
      {
        "body": "That said, it seems like moving it higher would be nice.  Giving people a clean Workspaces.Desktop package with minimal dependencies seems valuable.",
        "createdAt": "2017-03-19T01:12:47Z",
        "updatedAt": "2017-03-19T01:12:47Z",
        "author": {
          "login": "CyrusNajmabadi"
        }
      },
      {
        "body": "@sschmid, glad to hear it worked for you. I wonder why you have no app.config. For me  VS creates it with a lot of proxy assemblies rerouting stuff right after adding nuget package. The step with app config was needed if you would like to unzip to separate folder inside your output directory. Otherwise it is not needed. But it also has Microsoft.CodeAnalysis.*.dll files so there may be conflicts.\r\nIf you would like to do it just add file named app.config to project (there even should be a template in new file menu) and add xml from above to it.",
        "createdAt": "2017-03-27T12:17:04Z",
        "updatedAt": "2017-03-27T12:17:04Z",
        "author": {
          "login": "aka-STInG"
        }
      },
      {
        "body": ">  Giving people a clean Workspaces.Desktop package with minimal dependencies seems valuable.\r\n\r\n@CyrusNajmabadi  - A slimmer application profile would be nice, but saving a few bytes at the cost of runtime assembly loading exceptions does not seem worth it. \r\n\r\nCurrently it does require the referencing project to also include all the same packages all the references use. I'm not sure what the specific problem is (msbuild or the specific assemblies), but when the [build excludes dll's](https://github.com/aspnet/Scaffolding/issues/484) for whatever reason, it makes for a ton of wasted head scratching time.",
        "createdAt": "2017-07-03T11:27:25Z",
        "updatedAt": "2017-07-03T11:27:25Z",
        "author": {
          "login": "StingyJack"
        }
      }
    ]
  }
}