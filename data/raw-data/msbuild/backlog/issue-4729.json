{
  "number": 4729,
  "title": "Consider supporting nullable task parameters",
  "body": "With a simple task:\r\n\r\n```C#\r\n    public class DoNothing : Microsoft.Build.Utilities.Task {\r\n        \r\n        public virtual bool? Parameter1 {\r\n            get ;\r\n            set ;\r\n        }\r\n        \r\n        public override bool Execute() {\r\n            Log.LogError(Parameter1.ToString());\r\n\r\n            return Success;\r\n        }\r\n    }\r\n```\r\n\r\nand a simple project:\r\n\r\n```xml\r\n<Project>\r\n<UsingTask AssemblyFile=\"C:\\Users\\raines\\AppData\\Local\\Temp\\tmpB75C.dll\" TaskName=\"DoNothing\" />\r\n  <Target Name=\"X\">\r\n    <DoNothing Parameter1=\"true\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nMSBuild errors, because it doesn't know how to handle `Nullable<T>`, even when `T` is a nice, known type:\r\n\r\n```\r\nC:\\Users\\raines\\foo.proj(22,16): error MSB4030: \"true\" is an invalid value for the \"Parameter1\" parameter of the \"DoNothing\" task. The \"Parameter1\" parameter is of type \"System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\".\r\n```",
  "state": "OPEN",
  "createdAt": "2019-09-13T15:53:28Z",
  "updatedAt": "2024-02-21T16:30:43Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "cc @jaredpar and @RikkiGibson, who explored this with me yesterday.",
        "createdAt": "2019-09-13T15:55:05Z",
        "updatedAt": "2019-09-13T15:55:05Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Or at least write a Roslyn Analyzer for those authoring MSBuild tasks to prevent footguns.",
        "createdAt": "2020-12-20T17:08:26Z",
        "updatedAt": "2020-12-20T17:08:26Z",
        "author": {
          "login": "jzabroski"
        }
      }
    ]
  }
}