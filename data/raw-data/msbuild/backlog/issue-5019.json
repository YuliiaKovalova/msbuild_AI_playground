{
  "number": 5019,
  "title": "Long if-else statements",
  "body": "https://github.com/microsoft/msbuild/blob/master/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs#L35-L86\r\nis not pretty and can probably be made a lot cleaner using a visitor. Alternatively, if the relevant information to be written to the log can be passed in a form other than the type\u2014a string for example\u2014that might be a cleaner and more efficient solution.\r\n\r\nThere are probably other similar examples.",
  "state": "CLOSED",
  "createdAt": "2020-01-01T00:05:41Z",
  "updatedAt": "2024-02-21T17:05:37Z",
  "closedAt": "2020-10-23T17:49:01Z",
  "author": {
    "login": "Forgind"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "also related to the `BuildEventArgsWriter` mentioned in the issue by @Forgind :\r\n\r\n`Microsoft.Build.Logging.EventArgsDispatcher.Dispatch` at https://github.com/dotnet/msbuild/blob/e70a3159d64f9ed6ec3b60253ef863fa883a99b1/src/Build/Logging/BinaryLogger/BuildEventArgsDispatcher.cs#L86-L142\r\n\r\nadditional very deeply nested if-else's:\r\n\r\n`Microsoft.Build.Shared.FileUtilities.ItemSpecModifiers.GetItemSpecModifier` at https://github.com/dotnet/msbuild/blob/bf8629b4cd92c1bd05de8b1e124b4700eb0b7834/src/Shared/Modifiers.cs#L390-L616\r\n\r\n`Microsoft.Build.Evaluation.Expander.Function.TryExecuteWellKnownFunction` at https://github.com/dotnet/msbuild/blob/df645299a158c787f9884fca2bcd8c295318193f/src/Build/Evaluation/Expander.cs#L3531-L4148\r\n\r\nalso, there are several cases where high complexity was introduced for performance optimization - one example: `Microsoft.Build.Shared.FileUtilities.ItemSpecModifiers.IsItemSpecModifier` at  https://github.com/dotnet/msbuild/blob/bf8629b4cd92c1bd05de8b1e124b4700eb0b7834/src/Shared/Modifiers.cs#L86-L253\r\nthis structure seems to be a frequently recurring pattern to reduce number of string comparisons, not sure if these are still worth with modern .Net versions of not\r\n\r\n_[list above is not exhaustive, don't have good tools to discover all occurrences efficiently]_",
        "createdAt": "2020-08-16T10:22:26Z",
        "updatedAt": "2020-08-16T10:22:26Z",
        "author": {
          "login": "szaliszali"
        }
      }
    ]
  }
}