{
  "number": 985,
  "title": "Error building when project has percent '%' char in the path",
  "body": "We work with mercurial and hgflow\nWhen a feature branch is created in hgflow, by default the branch will be named like 'feature/[FEATURENAME]'\nWhen Jenkins wants to build that branch, creates a folder with the branch name. But it escapes the slash, resulting in something like 'feature%2F[FEATURENAME]'\nThen when Jenkins launches MSBuild, the build will fail because it unescapes paths, and tries to find everything inside 'feature/[FEATURENAME]'. But that folder does not exist.\n\nWhy does MSBuild try to Unescape the path always?\n",
  "state": "CLOSED",
  "createdAt": "2016-08-31T11:02:38Z",
  "updatedAt": "2024-02-21T17:26:08Z",
  "closedAt": "2016-10-12T21:10:18Z",
  "author": {
    "login": "TioLuiso"
  },
  "labels": [
    "help wanted",
    "backlog",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@TioLuiso What is the exact error message that you see? I just talked to @cdmihai about this and we suspect that the fix might be to escape the values we feed into `$(MSBuildThisFileDirectory)` and friends, but it would depend on exactly what's failing.\n",
        "createdAt": "2016-08-31T23:35:24Z",
        "updatedAt": "2016-08-31T23:35:24Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald and I looked over it and the exception is thrown here: https://github.com/Microsoft/msbuild/blob/master/src/XMakeBuildEngine/Construction/ProjectRootElement.cs#L1946\n\nXmlTextReader seems to be lazy opening the file.\n\n```\nMSBuild.exe D:\\projects\\tests\\globbing\\b\\%62uild.proj\nMicrosoft (R) Build Engine version 14.1.0.0\nCopyright (C) Microsoft Corporation. All rights reserved.\n\nBuild started 8/31/2016 4:44:38 PM.\nProject \"D:\\projects\\tests\\globbing\\b\\%62uild.proj\" on node 1 (default targets).\nD:\\projects\\tests\\globbing\\b\\%62uild.proj : error MSB4025: The project file could not be loaded. Could not find file 'D:\\projects\\tests\\globbing\\b\\build.proj'.\nDone Building Project \"D:\\projects\\tests\\globbing\\b\\%62uild.proj\" (default targets) -- FAILED.\n\nBuild FAILED.\n\n\"D:\\projects\\tests\\globbing\\b\\%62uild.proj\" (default target) (1) ->\n  D:\\projects\\tests\\globbing\\b\\%62uild.proj : error MSB4025: The project file could not be loaded. Could not find file 'D:\\projects\\tests\\globbing\\b\\build.proj'.\n\n    0 Warning(s)\n    1 Error(s)\n\nTime Elapsed 00:00:00.15\n```\n\nI guess we'll have to read the file ourselves and pass it into `XmlTextReader` as a string\n",
        "createdAt": "2016-09-01T00:03:22Z",
        "updatedAt": "2016-09-01T00:05:30Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "We also peeked into the internals of `XmlTextReader` and it looks like this is because it treats any call to its string constructor as a \"UriString\". I guess it doesn't escape it properly there.\n\nI don't think we'll have to read + pass a string--we should be able to pass a `Stream`.\n",
        "createdAt": "2016-09-01T00:13:42Z",
        "updatedAt": "2016-09-01T00:13:42Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald hmmmm. The tricky thing is that path-wise could be very well that both unescaped and escaped paths correspond to two valid and different folders. In my example above:\nUnescaped : 'feature/[FEATURENAME]' is a valid folder name\nEscaped: 'feature%2F[FEATURENAME]' is a valid folder name different from the one above.\n\nSo I believe the trick is not to escape or unescape the Project folder, but keep it as it is.\n\nI ignore whether this is practic or even feasible. So I beg your pardon in case my suggestion is aberrant\n",
        "createdAt": "2016-09-01T06:16:34Z",
        "updatedAt": "2016-09-01T06:16:34Z",
        "author": {
          "login": "TioLuiso"
        }
      },
      {
        "body": "@cdmihai That's it\nAlso I have seen similar poblems with import:\n\"C:\\Users\\ldesantiago\\Downloads\\feature%2FTest\\atrintegra\\Ingestion\\ATRIntegra.Ingestion.sln\" (Clean;Rebuild destino) (1) ->\n\"C:\\Users\\xxxxx\\Repos\\feature%2FTest\\TestSolution\\TestProject\\TestProject.csproj\" (Clean destino) (12) ->\n  C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.CSharp.CurrentVersion.targets(321,5): error MSB4019: No se encuentra el proyecto imp ortado \"C:\\Users\\xxxxx\\Repos\\feature\\Test\\TestSolution\\packages\\Microsoft.Net.Compilers.1.3.2\\tools\\Microsoft.CSharp.C ore.targets\". Aseg\u00farese de que la ruta de acceso de la declaraci\u00f3n <Import> es correcta y de que el archivo se encuentra en el disco. [C :\\Users\\xxxxx\\Repos\\feature%2FTest\\TestSolution\\TestProject\\TestSolution\\TestProject\\TestProject.csproj]\n\nAlso happens with referenced dlls from packages\n\n\"C:\\Users\\xxxxx\\Repos\\feature%2FTest\\SolutionFolder\\Solution.sln\" (destino predeterminado) (1) ->\n\"C:\\Users\\xxxxx\\Repos\\feature%2FTest\\SolutionFolder\\ProjectFolder\\Project.csproj\" (destino predeterminado)  (54) ->\n(CoreCompile destino) ->\n  CSC : error CS0006: No se encontr\u00f3 el archivo de metadatos 'C:\\Users\\xxxxx\\Repos\\feature/Test\\SolutionFolder\\packages\\package.1.0.97.126\\lib\\net452\\package.dll' [C:\\Users\\xxxxx\\Repos\\feature%2FTest\\SolutionFolder\\ProjectFolder\\Project.csproj]\n\nHave changed the paths and solutions and projects and also it is in spanish. But fundamentally you see that when tring to look for imports or packages, looks for the unescaped path, with (in this particular case) is wrong\n",
        "createdAt": "2016-09-01T06:33:18Z",
        "updatedAt": "2016-09-01T06:46:57Z",
        "author": {
          "login": "TioLuiso"
        }
      },
      {
        "body": "Escaping the path wouldn't affect the `feature/[FEATURENAME]` versus `feature%2F[FEATURENAME]` case, because escaping the first string wouldn't change it--we'd only escape URL characters. But that might cause its own problems (for example with spaces, which are legal path characters but become `%20` in a URL).\n\nI think the best thing to do here is to work around the `XmlTextReader` issue and see if that fixes everything (we can only hope), or if there are lingering issues.\n",
        "createdAt": "2016-09-01T18:27:32Z",
        "updatedAt": "2016-09-01T18:27:32Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}