{
  "number": 1940,
  "title": "MsBuild with netstandard1.5 Task throws FileNotFoundException 'System.Runtime, Version=4.1.0.0'",
  "body": "A custom task (which just logs a string) targeting the netstandard1.4 is well executed by MsBuild, while the same targeting netstandard1.5 fails with this error message: \r\n\r\n> error MSB4018: System.IO.FileNotFoundException: Could not load file or\r\n> assembly 'System.Runtime, Version=4.1.0.0, Culture=neutral,\r\n> PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The\r\n> system cannot find the file specified.\r\n\r\nHere is the .targets file:\r\n\r\n\r\n```xml\r\n<UsingTask TaskName=\"ClassLibrary1.Class1\" AssemblyFile=\"$(MSBuildThisFileDirectory)ClassLibrary1.dll\" />\r\n<Target Name=\"Test\" AfterTargets=\"Build\">\r\n  <Class1 />\r\n</Target>\r\n```\r\n\r\n\r\nAnd the task class:\r\n\r\n```c#\r\n    using Microsoft.Build.Framework;\r\n    using Microsoft.Build.Utilities;\r\n    \r\n    namespace ClassLibrary1\r\n    {\r\n        public class Class1 : Task\r\n        {\r\n            public override bool Execute()\r\n            {\r\n                Log.LogMessage(MessageImportance.High, \"Bonjour !\");\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n\r\nI use Visual Studio 2017 and build a netcoreapp 1.1 project.",
  "state": "CLOSED",
  "createdAt": "2017-04-04T23:33:27Z",
  "updatedAt": "2024-02-21T17:20:12Z",
  "closedAt": "2022-06-30T23:42:56Z",
  "author": {
    "login": "lecaillon"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I'm not sure this is supposed to work.  If I'm remembering correctly, .NET Standard 1.5 is not supported by .NET 4.6.1.",
        "createdAt": "2017-04-07T03:34:43Z",
        "updatedAt": "2017-04-07T03:34:43Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "I believe it should support it, if I understand well this doc?\r\nhttps://github.com/dotnet/standard/blob/master/docs/versions.md",
        "createdAt": "2017-04-07T05:36:10Z",
        "updatedAt": "2017-04-07T06:52:04Z",
        "author": {
          "login": "lecaillon"
        }
      },
      {
        "body": "This is making it difficult for me as well. I want to target netstandard1.5 rather than an earlier version because 1.5 is necessary to reference `System.Runtime.Loader`.",
        "createdAt": "2017-04-09T01:30:01Z",
        "updatedAt": "2017-04-09T01:30:01Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "@AArnott I've got this problem for the exact same reason: I want to reference `System.Runtime.Loader`",
        "createdAt": "2017-04-09T01:45:05Z",
        "updatedAt": "2017-04-09T01:45:05Z",
        "author": {
          "login": "lecaillon"
        }
      },
      {
        "body": "System.Runtime.Loader won't work on .net framework. Its netstandard requirement is a bit of a mistake and it really only supports .net core.",
        "createdAt": "2017-04-12T07:20:45Z",
        "updatedAt": "2017-04-12T07:20:45Z",
        "author": {
          "login": "gulbanana"
        }
      },
      {
        "body": "Wow. That needs to be *clearly* called out in documentation and a new version of the package should target only netcoreapp in that case. ",
        "createdAt": "2017-04-12T14:44:18Z",
        "updatedAt": "2017-04-12T14:44:18Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "The `System.Runtime.Loader` package has a `_._` file in its `lib/net462` folder to indicate it doesn't support .net framework.. this caused a discussion in https://github.com/dotnet/cli/issues/6019",
        "createdAt": "2017-04-12T14:54:19Z",
        "updatedAt": "2017-04-12T14:54:19Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "In my case this means that a `Microsoft.Build.Framework.Task` that needs to load an assembly at runtime must be developed  in .NET (with AppDomain) when it is executed from MSBuild and .NET Core (with AssemblyLoadContext) when it is executed from dotnet build?\r\nIf true, will this evolve with the release of the .NET standard 2.0?",
        "createdAt": "2017-04-12T17:12:58Z",
        "updatedAt": "2017-04-12T17:12:58Z",
        "author": {
          "login": "lecaillon"
        }
      },
      {
        "body": "> In my case this means that a Microsoft.Build.Framework.Task that needs to load an assembly at runtime must be developed in .NET (with AppDomain) when it is executed from MSBuild and .NET Core (with AssemblyLoadContext) when it is executed from dotnet build?\r\n\r\nYa. It's a major pain. So much so that I created a nuget package specifically to help developing msbuild tasks that require assembly load isolation. [The project](https://github.com/AArnott/Nerdbank.MSBuildExtension) multi-targets for netcoreapp1.0 and net45, including a netstandard1.5 facade so you can just derive your Task from [`ContextIsolatedTask`](https://github.com/AArnott/Nerdbank.MSBuildExtension/blob/master/src/Nerdbank.MSBuildExtension/ContextIsolatedTask.cs) and it can then run on either platform and it will get the right style of isolation for the version of msbuild that runs your task.\r\n\r\nI have some tests for it that work already. But in my more complex use case for this where I'm hosting roslyn inside my Task, failures still occur that I still haven't figured out. ",
        "createdAt": "2017-04-13T00:37:58Z",
        "updatedAt": "2017-04-13T00:37:58Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "Thanks @AArnott, your MSBuild targets file [Nerdbank.GitVersioning.targets ](https://github.com/AArnott/Nerdbank.GitVersioning/blob/master/src/Nerdbank.GitVersioning.NuGet/build/Nerdbank.GitVersioning.targets) helped me a lot to select the correct Task depending of the build context:\r\n```xml\r\n<_NBGV_PlatformSuffix Condition=\" '$(_NBGV_PlatformSuffix)' == '' and '$(MSBuildRuntimeType)' == 'Core' \">MSBuildCore/</_NBGV_PlatformSuffix>\r\n<_NBGV_PlatformSuffix Condition=\" '$(_NBGV_PlatformSuffix)' == '' \">MSBuildFull/</_NBGV_PlatformSuffix>\r\n<NerdbankGitVersioningTasksPath Condition=\" '$(NerdbankGitVersioningTasksPath)' == '' \">$(MSBuildThisFileDirectory)$(_NBGV_PlatformSuffix)</NerdbankGitVersioningTasksPath>\r\n```",
        "createdAt": "2017-04-13T12:31:36Z",
        "updatedAt": "2017-04-13T12:31:36Z",
        "author": {
          "login": "lecaillon"
        }
      },
      {
        "body": "@lecaillon Is this issue still occurring with newer versions of .NET Standard (or .NET 6)? If not, might be worth closing this issue...",
        "createdAt": "2022-06-30T23:11:44Z",
        "updatedAt": "2022-06-30T23:11:44Z",
        "author": {
          "login": "Rabadash8820"
        }
      }
    ]
  }
}