{
  "number": 6462,
  "title": "Consider Server GC",
  "body": "Many processes have noticeable performance improvements from opting into Server GC. We should see if MSBuild is one of those. Note that VS has its own switch so this would apply only to command line builds/worker nodes.",
  "state": "CLOSED",
  "createdAt": "2021-05-18T16:32:03Z",
  "updatedAt": "2024-02-21T17:01:27Z",
  "closedAt": "2021-06-10T11:13:33Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "For static graph restore I had to implement an entire console app just to get server GC when running a task: https://github.com/NuGet/NuGet.Client/tree/dev/src/NuGet.Core/NuGet.Build.Tasks.Console\r\n\r\nIf MSBuild either used server GC or we added the ability for a task to run in an out of proc node that used server GC, then static graph restore could be simplified quite a bit.",
        "createdAt": "2021-05-18T16:34:28Z",
        "updatedAt": "2021-05-18T16:34:28Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "From [internal discussion](https://teams.microsoft.com/l/message/19:3212bf033f4c4b5198643a04fa1048fa@thread.skype/1621369012855?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47&groupId=4ba7372f-2799-4677-89f0-7a1aaea3706c&parentMessageId=1621350887907&teamName=.NET%20Developer%20Experience&channelName=MSBuild&createdTime=1621369012855), it sounds like this is likely a bad idea, right? Should we just close it out?",
        "createdAt": "2021-06-07T17:17:10Z",
        "updatedAt": "2021-06-07T17:17:10Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Let's close it then.",
        "createdAt": "2021-06-10T11:13:33Z",
        "updatedAt": "2021-06-10T11:13:33Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "Server GC makes a massive difference in design-time build in Rider for larger solutions, as the main bottleneck is the \"coordinator\" msbuild node that delegates lots of work to multiple subprocesses.\nRider changed the defaults in recent versions to use it.\n\nIs there any public info on why this was dismissed for commandline msbuild?\n\nCan it still be enabled by the enduser through dotnet environment variables? \n\nAre there any test results showing the impact?",
        "createdAt": "2023-01-09T23:45:25Z",
        "updatedAt": "2023-01-09T23:45:25Z",
        "author": {
          "login": "safesparrow"
        }
      }
    ]
  }
}