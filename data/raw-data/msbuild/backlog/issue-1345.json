{
  "number": 1345,
  "title": "ImplicitlyExpandDesignTimeFacades target should only add facades if a higher version isn't already referenced",
  "body": "The `ImplicitlyExpandDesignTimeFacades` target adds references (specifically `ReferencePath` items) to the System.Runtime surface facades under the Facades folder in the reference assembly folder.  However, we now also ship facades as part of NuGet packages.  The facades from a NuGet package may conflict with the facades that are implicitly added via this target.\r\n\r\nAn example of an issue due to this is in dotnet/sdk#367.  To repro this issue, create an ASP.NET Core web application targeting .NET Framework, update the `TargetFramework` property to `net461`, and run `dotnet publish`.  You'll get an error because a `Copy` task is trying to copy two different versions of `System.Runtime.Serialization.Primitives.dll` to the publish folder.\r\n\r\nI discussed this with @weshaggard and it is likely that in the future we will ship updated facades in the targeting packs that should be chosen over previous versions in NuGet packages.  So we likely need a task that examines the `ReferencePath` items that come from `ResolveAssemblyReferences` and if there are any references with the same filename as an item in the Facades folder, pick the one with the higher Assembly Version.",
  "state": "CLOSED",
  "createdAt": "2016-11-15T01:26:06Z",
  "updatedAt": "2024-02-21T17:24:18Z",
  "closedAt": "2017-01-10T07:19:17Z",
  "author": {
    "login": "dsplaisted"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "cdmihai"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 15.1 RC.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "What's the plan for getting this fixed. I'm seeing this failure persistently when migrating `dotnet new -t web` PJ's to CSProj.\n",
        "createdAt": "2016-11-16T03:41:31Z",
        "updatedAt": "2016-11-16T03:41:31Z",
        "author": {
          "login": "TheRealPiotrP"
        }
      },
      {
        "body": "Any ideas on when this would be fixed?\n",
        "createdAt": "2016-11-18T20:55:09Z",
        "updatedAt": "2016-11-18T20:55:09Z",
        "author": {
          "login": "mlorbetske"
        }
      },
      {
        "body": "does any workaround exist for this?",
        "createdAt": "2016-11-28T13:31:20Z",
        "updatedAt": "2016-11-28T13:31:20Z",
        "author": {
          "login": "oruchreis"
        }
      },
      {
        "body": "Is this a .net core only problem?\r\nWould setting `$(ImplicitlyExpandDesignTimeFacades)` to false fix this issue?\r\nIf not, could you instead use a `Remove` and `Include` combination when Nuget? adds those items to `ReferencePath`? So instead of some code saying `<ReferencePath Include=\"@(ThingsFromNuget)/>\"` you'd do `<ReferencePath Remove=\"@(ThingsFromNuget)/> <ReferencePath Include=\"@(ThingsFromNuget)/>\"`\r\nUltimately, would we really want an MSBuild post RAR target to fix all duplicate references by blindly choosing the latest version? What if Nuget actually resolved a version to an older one than what's on the machine?",
        "createdAt": "2016-12-14T02:55:27Z",
        "updatedAt": "2016-12-14T02:56:32Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@cdmihai I'm trying to work around this issue. I'm publishing for `net462` using the .NET Core CLI (so `dotnet publish`).\r\n\r\nSetting `$(ImplicitlyExpandDesignTimeFacades)` to `false` seems to cause a lot of side issues.\r\n\r\nHow would I go about and remove the duplicate assembly from `@(ReferencePath)`? I tried a naive `<ReferencePath Remove='{full path to facade dll in NuGet package}'/>` but that doesn't seem to work. Do I need to plug this in at a specific target?\r\n\r\nHere's how my publish task is failing:\r\n\r\n```\r\n                   Task \"Copy\" (TaskId:351)\r\n                     Task Parameter:\r\n                         SourceFiles=\r\n                             C:\\Users\\Frederik Carlier\\.nuget\\packages\\system.diagnostics.tracing\\4.3.0\\ref\\net462\\System.Diagnostics.Tracing.dll\r\n                                     CopyLocal=false\r\n                                     CopyToPublishDirectory=Always\r\n                                     FusionName=System.Diagnostics.Tracing, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n                                     ImageRuntime=v4.0.30319\r\n                                     NuGetIsFrameworkReference=false\r\n                                     NuGetSourceType=Package\r\n                                     OriginalItemSpec=C:\\Users\\Frederik Carlier\\.nuget\\packages\\system.diagnostics.tracing\\4.3.0\\ref\\net462\\System.Diagnostics.Tracing.dll\r\n                                     Private=false\r\n                                     ReferenceSourceTarget=ResolveAssemblyReference\r\n                                     RelativePath=refs\\System.Diagnostics.Tracing.dll\r\n                                     ResolvedFrom={RawFileName}\r\n                                     Version=4.1.1.0\r\n                             C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Diagnostics.Tracing.dll\r\n                                     CopyLocal=false\r\n                                     CopyToPublishDirectory=Always\r\n                                     RelativePath=refs\\System.Diagnostics.Tracing.dll\r\n                                     ResolvedFrom=ImplicitlyExpandDesignTimeFacades\r\n                                     WinMDFile=false (TaskId:351)\r\n                     Task Parameter:DestinationFiles=bin\\Release\\net462\\win7-x64\\publish\\refs\\System.Diagnostics.Tracing.dll (TaskId:351)\r\n                     Task Parameter:OverwriteReadOnlyFiles=False (TaskId:351)\r\n00:58:44.244     1>C:\\Program Files\\dotnet\\sdk\\1.0.0-preview5-004275\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Publish.targets(128,5): error MSB3094: \"DestinationFiles\" refers to 1 item(s), and \"SourceFiles\" refers to 2 item(s). They must have the same number of items. [C:\\Users\\Frederik Carlier\\Source\\Repos\\Quamotion\\src\\Quamotion.WebDriver\\Quamotion.WebDriver.Core.csproj]\r\n                     Output Item(s): FileWrites=bin\\Release\\net462\\win7-x64\\publish\\refs\\System.Diagnostics.Tracing.dll (TaskId:351)\r\n                   Done executing task \"Copy\" -- FAILED. (TaskId:351)\r\n```",
        "createdAt": "2017-01-04T23:59:28Z",
        "updatedAt": "2017-01-06T23:24:43Z",
        "author": {
          "login": "qmfrederik"
        }
      },
      {
        "body": "I was able to bypass the framework-specific dupe errors by including \r\n``` \r\n<Reference Include=\"[referenceHere]\" />\r\n``` \r\nin the csproj for each reference throwing the error, but am now having issues because two 3rd-party dependencies contain a copy of the identical .dll (same version and everything), and apparently MSBuild can't figure out which one to copy.",
        "createdAt": "2017-01-05T00:09:48Z",
        "updatedAt": "2017-01-05T00:11:01Z",
        "author": {
          "login": "nateb19866"
        }
      },
      {
        "body": "I have issue https://github.com/dotnet/sdk/issues/367 and it's a huge deal.  Please - please!  What are the possible workarounds, ETAs, things I can do to help diagnose, or fix, etc?  I'm at a complete dead end.\r\n\r\nI've been forced to use MSbuild because I've been forced onto dotnet-sdk preview4, because I've had a new build of a preview package of a dependency pushed on me overnight, because I've been forced onto preview builds because of many bugs in the released version of EF Core ([4 here](https://github.com/aspnet/EntityFramework/issues/created_by/kierenj)].  I can't seem to break that chain at any point.  If I want to run database queries, I need to use MSBuild and get this issue.\r\n\r\nI know I'm talking dotnet core now in the msbuild repo, but [that issue](https://github.com/dotnet/sdk/issues/367) was closed.\r\n\r\nI didn't have `PreserveCompilationContext` in my csproj, and even with it explicitly set to `false`, I get this same error.\r\n\r\nPlease - any help so very eagerly accepted and appreciated!",
        "createdAt": "2017-01-06T09:39:54Z",
        "updatedAt": "2017-01-06T09:41:43Z",
        "author": {
          "login": "kierenj"
        }
      },
      {
        "body": "dotnet/sdk#582 fixed it for me. I've left a comment there on how I installed the fix from source.\r\n\r\nI guess this fix will also make it into the daily cli builds soon",
        "createdAt": "2017-01-06T09:50:59Z",
        "updatedAt": "2017-01-06T09:50:59Z",
        "author": {
          "login": "qmfrederik"
        }
      },
      {
        "body": "That looks fantastic, I hadn't tracked to that PR thanks.  I hope that Azure App Service update their nightlies frequently too.. I'm stuck until it's there!",
        "createdAt": "2017-01-06T09:55:23Z",
        "updatedAt": "2017-01-06T09:55:23Z",
        "author": {
          "login": "kierenj"
        }
      },
      {
        "body": "@dsplaisted \r\n\r\nI am running into a similar duplicate issue for System.IO.Compression. This time the first entry is resolved from {TargetFrameworkDirectory} and not from ImplicitlyExpandDesignTimeFacades . Is this a separate issue?\r\n```\r\n    SourceFiles=\r\n        C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\System.IO.Compression.dll\r\n                CopyLocal=false\r\n                CopyToPublishDirectory=Always\r\n                FrameworkFile=true\r\n                FusionName=System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n                ImageRuntime=v4.0.30319\r\n                OriginalItemSpec=System.IO.Compression\r\n                Redist=Microsoft-Windows-CLRCoreComp.4.6.1\r\n                ReferenceSourceTarget=ResolveAssemblyReference\r\n                RelativePath=refs\\System.IO.Compression.dll\r\n                ResolvedFrom={TargetFrameworkDirectory}\r\n                Version=4.0.0.0\r\n        C:\\Users\\vramak\\.nuget\\packages\\system.io.compression\\4.1.0\\ref\\net46\\System.IO.Compression.dll\r\n                CopyLocal=false\r\n                CopyToPublishDirectory=Always\r\n                FusionName=System.IO.Compression, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n                ImageRuntime=v4.0.30319\r\n                NuGetIsFrameworkReference=false\r\n                NuGetSourceType=Package\r\n                OriginalItemSpec=C:\\Users\\vramak\\.nuget\\packages\\system.io.compression\\4.1.0\\ref\\net46\\System.IO.Compression.dll\r\n                Private=false\r\n                ReferenceSourceTarget=ResolveAssemblyReference\r\n                RelativePath=refs\\System.IO.Compression.dll\r\n                ResolvedFrom={RawFileName}\r\n                Version=4.1.0.0\r\n        Task Parameter:DestinationFiles=c:\\users\\vramak\\documents\\visual studio 2017\\Projects\\WebApplication86\\src\\WebApplication86\\obj\\Release\\net461\\win7-x86\\PublishTemp\\PublishOutput\\refs\\System.IO.Compression.dll\r\n        Task Parameter:OverwriteReadOnlyFiles=False\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Publish.targets(128,5): Error MSB3094: \"DestinationFiles\" refers to 1 item(s), and \"SourceFiles\" refers to 2 item(s). They must have the same number of items.\r\n        Output Item(s): FileWrites=c:\\users\\vramak\\documents\\visual studio 2017\\Projects\\WebApplication86\\src\\WebApplication86\\obj\\Release\\net461\\win7-x86\\PublishTemp\\PublishOutput\\refs\\System.IO.Compression.dll\r\n```",
        "createdAt": "2017-01-06T18:26:56Z",
        "updatedAt": "2017-01-06T18:26:56Z",
        "author": {
          "login": "vijayrkn"
        }
      }
    ]
  }
}