{
  "number": 10389,
  "title": "[Bug]: Building inline task invocation succeeded with an error",
  "body": "### Issue Description\n\nBuilding this project that invokes an inline task got strange behavior. The output log displayed the successful task execution as \r\nan error, while build succeeded with 1 error.\r\n```\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <!-- This simple inline task displays \"Hello, world!\" -->\r\n  <UsingTask\r\n    TaskName=\"HelloWorld\"\r\n    TaskFactory=\"CodeTaskFactory\"\r\n    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\r\n    <ParameterGroup />\r\n    <Task>\r\n      <Reference Include=\"System.Xml\"/>\r\n      <Using Namespace=\"System\"/>\r\n      <Using Namespace=\"System.IO\"/>\r\n      <Code Type=\"Fragment\" Language=\"cs\">\r\n<![CDATA[\r\n// Display \"Hello, world!\"\r\nLog.LogError(\"Hello, world!\");\r\n]]>\r\n      </Code>\r\n    </Task>\r\n  </UsingTask>\r\n\r\n   <Target Name=\"Hello\">\r\n    <HelloWorld />\r\n  </Target>\r\n</Project>\r\n```\r\nThe build log is:\r\n![image](https://github.com/user-attachments/assets/d990f1e8-c0e7-4ab5-aee6-3ea6f96367c2)\r\n\n\n### Steps to Reproduce\n\nOpen Developer Command Prompt and use msbuild.exe to build the project.\n\n### Expected Behavior\n\nIn the build log task execution is displayed as normal message. Build succeeded without errors. \n\n### Actual Behavior\n\nIn the build log task execution is displayed as error. Build succeeded with 1 error. \n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-07-17T07:54:10Z",
  "updatedAt": "2024-10-10T16:01:23Z",
  "closedAt": null,
  "author": {
    "login": "GangWang01"
  },
  "labels": [
    "bug",
    "backlog",
    "Priority:3",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "good bug!",
        "createdAt": "2024-07-17T14:10:59Z",
        "updatedAt": "2024-07-17T14:10:59Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "This is a consequence of the `ITask` interface. Tasks can return success or failure by the bool return value of `Execute()`, and **independently** they can log errors. Unfortunately, that means you can say\r\n\r\n```C#\r\nLog.LogError(\"Catastrophic failure\");\r\nreturn true; // \"Task succeeded\"\r\n```\r\n\r\nAnd unfortunately that's basically what we do for the fragment type of inline code (add `return true;` after the user-specified code).\r\n\r\nWe should consider adopting the preferred pattern (`return !Log.HasLoggedError;`) in our generation around here:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/85d1d666ecdf42d3e2f851f403057349f963ea0e/src/Tasks/CodeTaskFactory.cs#L390-L401\r\n\r\nand also in `RoslynCodeTaskFactory`\r\n\r\nhttps://github.com/dotnet/msbuild/blob/85d1d666ecdf42d3e2f851f403057349f963ea0e/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs#L226-L239",
        "createdAt": "2024-07-17T14:27:00Z",
        "updatedAt": "2024-07-17T18:29:00Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}