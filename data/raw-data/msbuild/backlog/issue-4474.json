{
  "number": 4474,
  "title": "Preserialized resources error fires when not required",
  "body": "See https://github.com/dotnet/corefx/pull/38964#discussion_r297945596\r\n\r\nTo reproduce, exclude System.Resources.Extensions.dll (either through DisableImplicitFrameworkReferences and manually adding references, or subtracting it with a target) from a netcoreapp3.0 project, add a resource with only string resources and build.\r\n\r\nExpect: No Error\r\n\r\nActual: Error about missing S.R.E",
  "state": "CLOSED",
  "createdAt": "2019-06-27T02:07:40Z",
  "updatedAt": "2024-02-21T17:07:57Z",
  "closedAt": "2019-06-28T23:43:14Z",
  "author": {
    "login": "ericstj"
  },
  "labels": [
    "regression",
    "Area: Tasks",
    "Breaking Change",
    "Area: Task: GenerateResource",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "nguerrera"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "/cc @rainersigwald @nguerrera ",
        "createdAt": "2019-06-27T13:04:08Z",
        "updatedAt": "2019-06-27T13:04:08Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "So it turns out this is causing an error in File -> New Project.  System.Resources.Extensions is not part of the base shared framework, it's only part of Windows Desktop.  This needs to be fixed ASAP.  /cc @livarcocc ",
        "createdAt": "2019-06-27T23:39:29Z",
        "updatedAt": "2019-06-27T23:39:29Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "@nguerrera is looking into this for 3.0 P7 and 16.3 P1.",
        "createdAt": "2019-06-27T23:51:42Z",
        "updatedAt": "2019-06-27T23:51:42Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "Should I ever see this error when building for net462? This started happening after installing the .net 3 SDK preview 8. The project actually has non-string resources; so I referenced the `System.Resources.Extensions` nuget package and set `GenerateResourceUsePreserializedResources` to `true` and it built again (after some back and forth). But I would question whether updating msbuild should require changes like this to framework projects.",
        "createdAt": "2019-08-15T10:29:30Z",
        "updatedAt": "2019-08-15T11:19:07Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "If you were building using dotnet build, any non-string resources were being corrupted and turned into strings with the value equal to how it was serialized in the resx. That was bogus and we had a lot of reports of it.\r\n\r\nIf you were building with msbuild.exe or VS, then it would have worked and should still work without the property or reference. If you see this error in VS or using msbuild.exe to build for net462 without any project changes, then there's a bug. \r\n\r\nThis is strictly a breaking change which should go in release notes. @kathleendollard",
        "createdAt": "2019-08-15T13:22:06Z",
        "updatedAt": "2019-08-15T13:23:38Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "Building with VS still works with no changes. Building with dotnet (we do that on the build server) worked (as in no compiler error - I don't know if the resources got corrupted). This now doesn't work anymore unless the dependency and the option are added.",
        "createdAt": "2019-08-15T13:32:55Z",
        "updatedAt": "2019-08-15T13:32:55Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "Thanks for confirming; that's the expected behavior, because the resources were in fact being corrupted and would fail at runtime.",
        "createdAt": "2019-08-15T13:37:43Z",
        "updatedAt": "2019-08-15T13:37:43Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}