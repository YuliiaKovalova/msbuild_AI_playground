{
  "number": 10208,
  "title": "[Bug]: Breaking change in serialized BuildResult can lead to errors in result caching with older data",
  "body": "### Issue Description\n\nI am seeing the following errors when using the result caching feature:\r\n\r\n```\r\nMSB4256: Reading input result cache files from path \"<stuff>\\Foo.MSBuildResultsCache\" encountered an error: Unable to read beyond the end of the stream.\r\nMSBUILD : error : MSB4258: Writing output result cache file in path \"<stuff>\\Bar.MSBuildResultsCache\" encountered an error: Object reference not set to an instance of an object.\r\n```\r\n\r\nSpecifically the result cache file was produced by MSBuild 17.10, but I'm currently using MSBuild 17.11.\r\n\r\nIt appears that a field was added to the `BuildResult` in #9987 which is likely causing this issue.\n\n### Steps to Reproduce\n\nSee detail above\n\n### Expected Behavior\n\nSee detail above\n\n### Actual Behavior\n\nSee detail above\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-06-06T17:11:04Z",
  "updatedAt": "2024-07-01T13:19:16Z",
  "closedAt": "2024-07-01T13:19:16Z",
  "author": {
    "login": "dfederm"
  },
  "labels": [
    "bug",
    "Priority:1"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "AR-May"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Discussed the issue internally. \r\n\r\nProblem: The build results cache was not initially intended to be used cross MSBuild versions (i.e. to be produced by one version and used by another). When a functionality to use the build caches created outside the local build was added, we became unable to modify `BuildResult` class (including adding fields) because it deserializes the build results from the cache file with a fixed structure. `BuildResult` and `ResultsCache` also has no notion of a version, thus flexible deserialization from the cache based on the version is not possible.\r\n\r\nResolution: We are going to introduce in a non-breaking way the notion of a cache/result version. The caches will not be forwards compatible (produced by newer version and used by older) but backwards compatible with the previous two released versions (produced by older version and used by newer one). We also will add an escape hatch which will allow to produce old-style result caches even on a newer version to make the transition to versioned caches smoother.",
        "createdAt": "2024-06-14T10:37:27Z",
        "updatedAt": "2024-06-14T10:38:36Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}