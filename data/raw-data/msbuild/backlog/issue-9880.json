{
  "number": 9880,
  "title": "[Built-in analyzer] TargetFramework and TargetFrameworks are both set",
  "body": "### Background\r\n\r\nThis issue tracks one of the BuildCheck analyzers we would like to ship in-box with MSBuild.\r\n\r\n### Goal\r\n\r\nImplement an analyzer with the following rule: The `TargetFramework` and `TargetFrameworks` properties should not be both set in outer builds.\r\n\r\n### Notes\r\n\r\nSetting both properties leads to unexpected SDK behavior. It is not uncommon for developers to define one of them in a project file and the other in an imported file such as `Directory.Build.props`.",
  "state": "CLOSED",
  "createdAt": "2024-03-18T10:58:45Z",
  "updatedAt": "2024-12-17T15:54:09Z",
  "closedAt": "2024-12-05T16:38:55Z",
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "labels": [
    "BuildCheck Suggestion",
    "triaged",
    "Area: BuildCheck"
  ],
  "comments": {
    "nodes": [
      {
        "body": "I suppose this analyzer should not complain when `TargetFrameworks` is defined in the project and `TargetFramework` is set as a global property (`msbuild --property:TargetFramework=net8.0` or `dotnet run --framework=net8.0`).",
        "createdAt": "2024-03-19T08:00:57Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Similar to https://github.com/dotnet/msbuild/issues/9216#issuecomment-1725591503, although that's for a single project.",
        "createdAt": "2024-03-30T13:42:42Z",
        "author": {
          "login": "glen-84"
        }
      }
    ]
  }
}