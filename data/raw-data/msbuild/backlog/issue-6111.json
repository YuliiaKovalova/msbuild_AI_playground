{
  "number": 6111,
  "title": "Circular dependency with DependsOnTargets/AfterTargets combination",
  "body": "MSBuild can't solve target dependencies order and show MSB4006 error in some specific case\r\n\r\n### Steps to Reproduce\r\n1. Use next msbuild file:\r\n```xml\r\n<Project>\r\n  <Target Name=\"Primary\" >\r\n    <Message Text=\"Primary\" Importance=\"high\"/>\r\n  </Target>\r\n  \r\n  <Target Name=\"Dependend\" DependsOnTargets=\"Primary\">\r\n    <Message Text=\"Dependend\" Importance=\"high\"/>\r\n  </Target>\r\n\r\n  <Target Name=\"AddOn\" DependsOnTargets=\"Dependend\" AfterTargets=\"Primary\">\r\n    <Message Text=\"AddOn\" Importance=\"high\"/>\r\n  </Target>\r\n</Project>\r\n```\r\n2. Run: `msbuild /t:Dependend`\r\n\r\n\r\n### Expected Behavior\r\nMSBuild will run all three targets in next order: Primary, Dependend, AddOn.\r\n\r\n### Actual Behavior\r\nMSbuild fails with:\r\n```\r\n\"C:\\appd\\agent-java-dotnet\\dotnet_agent\\AzureSiteExtensions\\test\\test.csproj\" (Dependend target) (1) ->\r\n  C:\\appd\\agent-java-dotnet\\dotnet_agent\\AzureSiteExtensions\\test\\test.csproj(10,24): error MSB4006: There is a circula\r\nr dependency in the target dependency graph involving target \"Dependend\".\r\n```\r\n\r\n### Analysis\r\nThe project has target `AddOn` that should be if `AddOn` target was executed, but after `Dependend` execution. If either AddOn or Primary will be initial target - build will complete successfully (with execution of all target in same order). The problem can be workaround, if `AddOn` AfterTarget will have both `Primary;Dependend`",
  "state": "CLOSED",
  "createdAt": "2021-02-03T05:45:45Z",
  "updatedAt": "2021-07-14T15:37:58Z",
  "closedAt": "2021-07-14T15:37:58Z",
  "author": {
    "login": "iskiselev"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: I think the confusion here might be with `AfterTargets`. `AfterTargets`specifies that `AddOn` must run before `Primary`. In this project you're saying `Addon` must run before depended, and after primary, which creates the circular dependency.\r\n\r\nThis is working as intended. Feel free to reopen for discussion.",
        "createdAt": "2021-02-03T16:42:47Z",
        "updatedAt": "2021-02-03T16:42:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I understand why current algorithm may treat it as circular dependency.\r\nBut at the same time, there is no real circular dependency - but planning algorithm may need to be more clever. \r\n\r\n1. We run `Dependend`\r\n2. As `Dependend` depends on `Primary`, it should be executed first.\r\n3. As there is `AddOn` task, that should be run after `Primary`, it also should be executed. It has dependency on `Dependend`, so it should be executed after `Dependend` is finished - there is nothing in task description that may prevent it scheduling after `Dependend`.\r\n\r\nSo correct task schedule in that case:\r\nPrimary -> **Dependend** -> AddOn",
        "createdAt": "2021-02-03T19:27:02Z",
        "updatedAt": "2021-02-03T19:36:32Z",
        "author": {
          "login": "iskiselev"
        }
      },
      {
        "body": "@BenVillalobos , `AfterTargets` specifies that `AddOn` must run **after** `Primary` , not before - so there is no real cycle,",
        "createdAt": "2021-02-03T19:34:29Z",
        "updatedAt": "2021-02-03T19:34:29Z",
        "author": {
          "login": "iskiselev"
        }
      },
      {
        "body": "Apologies for jumping the gun @iskiselev, it is largely my fault. I am reopening the ticket.",
        "createdAt": "2021-02-08T15:47:49Z",
        "updatedAt": "2021-02-08T15:47:49Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "@haiyuzhu, since you wrote this recently, do you want to take a stab at fixing it? If not, I can.",
        "createdAt": "2021-02-10T16:30:17Z",
        "updatedAt": "2021-02-10T16:30:17Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Team triage:\r\nIn MSBuild, Target dependencies do not form a graph. They are defined [here](https://docs.microsoft.com/visualstudio/msbuild/target-build-order#determine-the-target-build-order). If we were to change how this works, that would be a breaking change even if it would be easier to understand.",
        "createdAt": "2021-07-14T15:37:57Z",
        "updatedAt": "2021-07-14T15:37:57Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}