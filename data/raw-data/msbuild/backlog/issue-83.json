{
  "number": 83,
  "title": "Support package managers",
  "body": "NuGet [dropped MSBuild support due to a range of design flaws](https://github.com/fsprojects/Paket/issues/417#issuecomment-66517859). \n\nUnlike NuGet, though, other projects don't have the luxury of shipping with visual studio. Please solve this problem in a way that can help [projects like Paket work out of the box](https://github.com/fsprojects/Paket/issues/417). \n",
  "state": "CLOSED",
  "createdAt": "2015-04-27T18:09:56Z",
  "updatedAt": "2024-02-21T17:31:38Z",
  "closedAt": "2015-05-05T22:58:05Z",
  "author": {
    "login": "lilith"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Package support is on our long term roadmap. This is not something we want to address at this time.\n",
        "createdAt": "2015-05-05T22:58:05Z",
        "updatedAt": "2015-05-05T22:58:05Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Keep in mind, that with this you're killing F# (for which NuGet is unusable) and cross-platform C#+p/invoke (where NuGet is unusable). \n\nAfter so many promises to play fair, this is pretty much the ultimate F**\\* you to the OSS community.\n\nIs permitting re-load after pre-build so hard?\n",
        "createdAt": "2015-05-06T01:14:21Z",
        "updatedAt": "2015-09-14T15:54:40Z",
        "author": {
          "login": "lilith"
        }
      },
      {
        "body": "> Is permitting re-load after pre-build so hard?\n\n@nathanaeljones Basically, yes.  The newly imported targets could impact everything that's already been evaluated and executed, so MSBuild would have to throw out everything and start over.\n\nGenerally what we do for package restore for CI / command line builds is to have an outer project which runs package restore and then calls MSBuild on the project files that actually build the source code.  These projects aren't evaluated until after packages are restored, so it works correctly.  Here's [an example](https://github.com/dsplaisted/strongnamer/blob/82fc3c6f85409673edf6a2088c01d737d6f9913a/build/build.proj#L57) of this.\n\nThis doesn't help in Visual Studio because VS wouldn't build the outer project which does package restore.  However, what you can do is to have the project do the package restore and then call MSBuild on itself.  I've created a proof of concept of doing this in the paket.targets file [here](https://github.com/dsplaisted/paket-restore-sample/blob/master/.paket/paket.targets).\n",
        "createdAt": "2015-10-29T23:53:33Z",
        "updatedAt": "2015-10-29T23:53:33Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "Shouldn't this stay open?? although it isn't in the current plans it is still something to be addressed.  \n",
        "createdAt": "2015-10-30T04:37:15Z",
        "updatedAt": "2015-10-30T04:37:15Z",
        "author": {
          "login": "dhusemann"
        }
      }
    ]
  }
}