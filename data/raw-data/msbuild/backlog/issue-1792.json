{
  "number": 1792,
  "title": "MSBuild changes console colors when logging to a file",
  "body": "We started running into build failures on Travis CI using MSBuild. It appears the logger produces thousands of unnecessary ANSI color codes.\r\n\r\nExample:\r\nhttps://travis-ci.org/aspnet/DotNetTools/jobs/206846997\r\nThe log output appears normal:\r\n![image](https://cloud.githubusercontent.com/assets/2696087/23560811/84c65a72-fff0-11e6-91dc-be09bd25271a.png)\r\n\r\n\r\nBut if you look at the raw log file, you'll see that hundreds of color codes have been logged.\r\nhttps://s3.amazonaws.com/archive.travis-ci.org/jobs/206846997/log.txt\r\n\r\n![image](https://cloud.githubusercontent.com/assets/2696087/23560844/a76dc4f2-fff0-11e6-9d37-5be2ec017c39.png)\r\n\r\n\r\ncc @dougbu",
  "state": "CLOSED",
  "createdAt": "2017-03-03T17:06:31Z",
  "updatedAt": "2024-02-21T17:21:11Z",
  "closedAt": "2017-03-09T19:40:26Z",
  "author": {
    "login": "natemcmaster"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Severity: this is causing builds to fail because it overflows Travis's maximum logfile size.\r\nExample: in this [this build](https://travis-ci.org/aspnet/Mvc/jobs/207068891), MSBuild logged 306,775 ANSI color codes that were followed by another ANSI color code with no output between them.\r\n\r\n",
        "createdAt": "2017-03-03T17:17:20Z",
        "updatedAt": "2017-03-03T17:17:20Z",
        "author": {
          "login": "natemcmaster"
        }
      },
      {
        "body": "Possibly related to #505?\r\n\r\n@natemcmaster can you try setting `/consoleloggerparameters:DisableConsoleColor` in your build script to see if that is a viable workaround?",
        "createdAt": "2017-03-03T17:18:58Z",
        "updatedAt": "2017-03-03T17:18:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Yes, that is the workaround @dougbu is working on",
        "createdAt": "2017-03-03T17:20:25Z",
        "updatedAt": "2017-03-03T17:20:25Z",
        "author": {
          "login": "natemcmaster"
        }
      },
      {
        "body": "As long as https://github.com/aspnet/KoreBuild/archive/dev.zip wasn't lagging (definitely up-to-date now), this workaround isn't working.\r\n\r\nFor example https://api.travis-ci.org/jobs/207448561 was started about 5 minutes ago and I checked in the workaround almost half an hour ago. Despite local testing to confirm colours aren't used when `CI`, `TRAVIS`, and so on are defined, the raw log (https://api.travis-ci.org/jobs/207448561/log.txt) still contains loads of ANSI escapes. (Of course https://api.travis-ci.org/jobs/207448561/log.txt?deansi=true looks better \ud83d\ude08.)\r\n\r\nAny other suggestions? If the ANSI stuff isn't coming from MsBuild, gotta wonder why we're hitting the Travis 4MB log limit.",
        "createdAt": "2017-03-03T18:05:33Z",
        "updatedAt": "2017-03-03T18:05:33Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "FYI the workaround relies on the environment variables Travis always sets. See https://docs.travis-ci.com/user/environment-variables/#Default-Environment-Variables I'll run a test in a smaller repo to make sure that page is correct.",
        "createdAt": "2017-03-03T18:10:27Z",
        "updatedAt": "2017-03-03T18:10:27Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "My workaround is doing what it's designed to do. But, `/clp:DisableConsoleColor` isn't helping.\r\n\r\nSkip to the bottom of https://travis-ci.org/aspnet/Antiforgery/jobs/207457375 to see the response files we're using when invoking MsBuild. Nonetheless https://api.travis-ci.org/jobs/207457375/log.txt and https://api.travis-ci.org/jobs/207457376/log.txt are really big. A few commands have a few ANSI codes in their output. But, the loads of colour coding happen only with the `dotnet msbuild` output.",
        "createdAt": "2017-03-03T18:35:49Z",
        "updatedAt": "2017-03-03T18:35:49Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "We're using the `1.0.0-rc4-004913` SDK. @rainersigwald any other suggested workarounds with this tooling?\r\n\r\nI'm curious how #505 could be related? That PR was merged nearly a year ago.",
        "createdAt": "2017-03-03T18:44:14Z",
        "updatedAt": "2017-03-03T18:44:14Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "Found a workaround that actually works: Piping `dotnet msbuild` output to `tee /dev/null` cleans the raw Travis logs up completely. See https://s3.amazonaws.com/archive.travis-ci.org/jobs/207844302/log.txt for example.\r\n\r\nWhat is going on here? Are the excess characters coming from something in MsBuild that `/clp:DisableConsoleColor` doesn't control?",
        "createdAt": "2017-03-05T22:04:26Z",
        "updatedAt": "2017-03-05T22:04:26Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "This is very odd. There appear to be a combination of factors at play.\r\n\r\n* When a file logger is attached, MSBuild sets the color on stdout for every message written to the file logger, regardless of the state of `/clp:DisableConsoleColor`. This happens even on Windows and with Full Framework MSBuild--it just wasn't noticed until now.\r\n* MSBuild does (unnecessarily) set `Console.ForegroundColor` even when it doesn't need to. [`SetColor`](https://github.com/Microsoft/msbuild/blob/be1489dc9fb0103adff65e85209f83199b5aa10a/src/Build/Logging/BaseConsoleLogger.cs#L405-L416) could easily have an \"if not already that color\" check.\r\n* CoreFX attempts to detect whether an output stream is redirected and avoid emitting colors but the implementation has a comment that it's [\"approximate\"](https://github.com/dotnet/corefx/blob/97552c885fa462539848aa5c553cfbae522c64d0/src/System.Console/src/System/ConsolePal.Unix.cs#L439). I assume the reason it's not causing the setter to be a no-op is that it's incorrect in the Travis case for some reason. I think using `tee` lets `System.Console` understand that the output is redirected and avoid emitting the control codes.\r\n\r\nThe first one is the real problem here. Tracking the second one as #1825.",
        "createdAt": "2017-03-08T23:04:57Z",
        "updatedAt": "2017-03-08T23:04:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Naturally, the reason for this ridiculous behavior is ridiculous: `FileLogger` inherits from `ConsoleLogger`. And didn't overwrite the color-setters.",
        "createdAt": "2017-03-08T23:57:35Z",
        "updatedAt": "2017-03-08T23:57:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Naturally \ud83d\ude3a ",
        "createdAt": "2017-03-09T00:15:11Z",
        "updatedAt": "2017-03-09T00:15:11Z",
        "author": {
          "login": "dougbu"
        }
      }
    ]
  }
}