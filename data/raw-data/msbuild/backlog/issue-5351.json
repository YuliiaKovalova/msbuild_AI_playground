{
  "number": 5351,
  "title": "Proper Way For VSIX Developers To Extend MSBuild Tasks For 32/64Bit",
  "body": "**The Short**\r\nWhat is the proper way for VSIX Developers to Extend MSBuild's Tasks such that it works for both 32bit and 64bit MSBuild Instances?\r\n\r\n**The Long**\r\nWhen using the Microsoft RDLC Report Designer (https://marketplace.visualstudio.com/items?itemName=ProBITools.MicrosoftRdlcReportDesignerforVisualStudio-18001) When attempting to build an RDLC report using the 64bit version of MSBuild we fail to build with the following error:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\ReportingServices\\Microsoft.ReportingServices.targets(24,2):\r\nerror MSB4062: The \"Microsoft.Reporting.RdlCompile\" task could not be loaded from the assembly Microsoft.ReportViewer.WebForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91.\r\nCould not load file or assembly 'Microsoft.ReportViewer.WebForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies.\r\nThe system cannot find the file specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\r\n```\r\n\r\nLoading up fuslogvw shows the following bind log:\r\n\r\n```\r\n*** Assembly Binder Log Entry  (5/13/2020 @ 4:06:22 PM) ***\r\n\r\nThe operation failed.\r\nBind result: hr = 0x80070002. The system cannot find the file specified.\r\n\r\nAssembly manager loaded from:  C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\clr.dll\r\nRunning under executable  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe\r\n--- A detailed error log follows. \r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = Microsoft.ReportViewer.WebForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/amd64/\r\nLOG: Initial PrivatePath = NULL\r\nLOG: Dynamic Base = NULL\r\nLOG: Cache Base = NULL\r\nLOG: AppName = MSBuild.exe\r\nCalling assembly : Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.\r\n===\r\nLOG: This bind starts in default load context.\r\nLOG: Using application configuration file: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe.Config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: Microsoft.ReportViewer.WebForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91\r\nLOG: GAC Lookup was unsuccessful.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.ReportViewer.WebForms.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.ReportViewer.WebForms/Microsoft.ReportViewer.WebForms.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.ReportViewer.WebForms.EXE.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/amd64/Microsoft.ReportViewer.WebForms/Microsoft.ReportViewer.WebForms.EXE.\r\nLOG: All probing URLs attempted and failed.\r\n```\r\n\r\nReviewing the VSIX Install Log (dd_setup_20200513155525_001_617ad572-c5b7-415c-b166-b2969077f719) and filtering for the DLL\u2019s installed show this:\r\n\r\n```\r\nCompleted: Copying file /$MSBuild/15.0/bin/Microsoft.ReportViewer.Common.dll to C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\15.0\\bin\\Microsoft.ReportViewer.Common.dll\r\nCompleted: Copying file /$MSBuild/15.0/bin/Microsoft.ReportViewer.ProcessingObjectModel.dll to C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\15.0\\bin\\Microsoft.ReportViewer.ProcessingObjectModel.dll\r\nCompleted: Copying file /$MSBuild/15.0/bin/Microsoft.ReportViewer.WebForms.dll to C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\15.0\\bin\\Microsoft.ReportViewer.WebForms.dll\r\nCompleted: Copying file /$MSBuild/15.0/bin/Microsoft.SqlServer.Types.dll to C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\15.0\\bin\\Microsoft.SqlServer.Types.dll\r\nCompleted: Copying file /$MSBuild/Current/Bin/Microsoft.ReportViewer.Common.dll to C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.ReportViewer.Common.dll\r\nCompleted: Copying file /$MSBuild/Current/Bin/Microsoft.ReportViewer.ProcessingObjectModel.dll to C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.ReportViewer.ProcessingObjectModel.dll\r\nCompleted: Copying file /$MSBuild/Current/Bin/Microsoft.ReportViewer.WebForms.dll to C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.ReportViewer.WebForms.dll\r\nCompleted: Copying file /$MSBuild/Current/Bin/Microsoft.SqlServer.Types.dll to C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.SqlServer.Types.dll\r\n```\r\n\r\nThe root cause appears to be that the 64bit version of MSBuild\u2019s probing path expects the task to exist in the 64bit folder but that the VSIX installer does not place them there.\r\n\r\nTo resolve the issue manually copy the following files:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.ReportViewer.Common.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.ReportViewer.ProcessingObjectModel.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.ReportViewer.WebForms.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.SqlServer.Types.dll\r\n```\r\n\r\nInto the 64bit Version of MSBuild Bin at `C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\amd64`\r\n\r\nThis resolves the issue. It is unclear if this is MSBuild\u2019s responsibility to probe additional locations or if the VSIX should drop down the binaries at the 64bit location as well.\r\n\r\nThis issue was reported to the vendor at their email address (RvcFeedback@Microsoft.com)\r\n",
  "state": "CLOSED",
  "createdAt": "2020-05-14T14:08:31Z",
  "updatedAt": "2024-02-21T17:03:52Z",
  "closedAt": "2020-05-15T14:55:31Z",
  "author": {
    "login": "aolszowka"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Yikes. Their VSIX should not put their task assemblies there--if they were in their own folder, we'd load them fine.\r\n\r\n@aolszowka can you please add `raines@{microsoft.com}` to your mail to them so I can help them out? I couldn't find their repo internally after a quick look.\r\n\r\nAs to the \"right way\", there are a few guidelines:\r\n\r\n0. Consider using a NuGet package to deliver build logic rather than a VSIX.\r\n1. Create a new folder for your task assemblies.\r\n2. Reference your task via `UsingTask` specifying a path, rather than an assembly ID.\r\n3. Prefer any-bitness IL-only task assemblies and dependencies; if not possible:\r\n   a. Consider having conditional UsingTasks pointing to the correct architecture for the current runtime\r\n   b. Consider shipping a single bitness and using a TaskHost to execute it.",
        "createdAt": "2020-05-15T14:44:23Z",
        "updatedAt": "2020-05-15T14:44:23Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": ">can you please add raines@{microsoft.com} to your mail to them so I can help them out? I couldn't find their repo internally after a quick look.\r\n\r\nThis has been done. I think we can close the issue as your comment describes the guidelines for distribution.",
        "createdAt": "2020-05-15T14:55:31Z",
        "updatedAt": "2020-05-15T14:55:31Z",
        "author": {
          "login": "aolszowka"
        }
      },
      {
        "body": "This is still an issue. Can we keep it open until they solve it?",
        "createdAt": "2020-08-13T18:13:14Z",
        "updatedAt": "2020-08-13T18:13:14Z",
        "author": {
          "login": "ben-page"
        }
      },
      {
        "body": "@ben-page Unfortunately I think from MSBuild's perspective this issue is resolved.\r\n\r\nIt really is on the ProBITools Team (who can be contacted at RvcFeedback@Microsoft.com) to fix the issue. I never heard anything more from them nor @rainersigwald after the work around. We too still apply this fix on our build agents as we spin them up, at least we've got a work around... That is until someone else will depend on this binary and get us into 'DLL Heck'.",
        "createdAt": "2020-08-14T16:20:09Z",
        "updatedAt": "2020-08-14T16:20:09Z",
        "author": {
          "login": "aolszowka"
        }
      }
    ]
  }
}