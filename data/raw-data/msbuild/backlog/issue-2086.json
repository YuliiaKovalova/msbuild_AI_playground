{
  "number": 2086,
  "title": "Add /p:EnableCppCoreCheck support",
  "body": "TL;TR: Allow to specify [CppCoreCheck](https://github.com/Microsoft/GSL) analysis in `msbuild.exe` command line\r\n\r\nCurrently, in VS 2017 (including Preview) , `EnableCppCoreCheck` can only be set via the VS IDE user interface, in project _Properties > Code Analysis > Extensions > Enable C++ Core Check_\r\n\r\nThere is no way to set `EnableCppCoreCheck` via the command line with `/p` parameter.\r\n\r\n`RunCodeAnalysis` property is settable via command line `/p` parameter:\r\n```\r\nmsbuild /p:Configuration=Debug /p:RunCodeAnalysis=true test.vcxproj\r\n```\r\n\r\nIt seems desired to add `EnableCppCoreCheck` to the set of properties overridable via command line.",
  "state": "CLOSED",
  "createdAt": "2017-05-10T12:25:26Z",
  "updatedAt": "2024-02-21T17:19:09Z",
  "closedAt": "2017-05-16T17:15:14Z",
  "author": {
    "login": "mloskot"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I'm running MSBuild *15.3.118.39484* from the latest VS2017 Preview and it looks like passing `/p:EnableCppCoreCheck=true` is effective and `EspXEngine.dll` is added as `/analyze:plugin`\"\r\n\r\n```\r\nmsbuild LibStringTest.vcxproj /p:RunCodeAnalysis=true /p:EnableCppCoreCheck=true\r\nMicrosoft (R) Build Engine version 15.3.118.39484\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 2017-05-16 13:56:33.\r\nProject \"F:\\workshop\\LibStringTest\\LibStringTest.vcxproj\" on node 1 (default targets).\r\nInitializeBuildStatus:\r\n  Creating \"x64\\Debug\\LibStringTest.tlog\\unsuccessfulbuild\" because \"AlwaysCreate\" was specified.\r\nClCompile:\r\n  All outputs are up-to-date.\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Professional\\VC\\Tools\\MSVC\\14.11.25301\\bin\\HostX86\\x64\\CL.exe /c /ZI /nologo /W4 /WX- /diagnostics:classic /Od /D CODE_ANALYSIS /D _DEBUG /D _CONSOLE /D _UNICODE /D UNICODE /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo\"x64\\Debug\\\\\" /Fd\"x64\\Debug\\vc141.pdb\" /Gd /TP /analyze /analyze:plugin\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Professional\\VC\\Tools\\MSVC\\14.11.25301\\\\bin\\HostX86\\x86\\EspXEngine.dll\" /analyze:plugin\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Professional\\VC\\Tools\\MSVC\\14.11.25301\\\\bin\\HostX86\\x86\\localespc.dll\" /errorReport:queue   /analyze:quiet LibStringTest.cpp\r\n```\r\n\r\nCould anyone confirm this is indeed expected and `/p:EnableCppCoreCheck=true` is supported?\r\n\r\nAFAICT, I have none of these properties added to my `.vcxproj` \r\n\r\n```\r\n<RunCodeAnalysis>true</RunCodeAnalysis>\r\n<EnableCppCoreCheck>true</EnableCppCoreCheck>\r\n```\r\n",
        "createdAt": "2017-05-16T16:52:15Z",
        "updatedAt": "2017-05-16T16:52:30Z",
        "author": {
          "login": "mloskot"
        }
      },
      {
        "body": "I've confirmed `/p:EnableCppCoreCheck=true` works also with **15.1.1012.6693**. All good. Sorry for false alarm.",
        "createdAt": "2017-05-16T17:15:14Z",
        "updatedAt": "2017-05-16T17:15:14Z",
        "author": {
          "login": "mloskot"
        }
      },
      {
        "body": "Hahahah. You beat me to it @mloskot :-). Yes, EnableCppCoreCheck is supported and should work for you.",
        "createdAt": "2017-05-16T17:18:59Z",
        "updatedAt": "2017-05-16T17:18:59Z",
        "author": {
          "login": "neilmacintosh"
        }
      },
      {
        "body": "@neilmacintosh No idea why it did not work for me before. Must be CMake interference or something. Great it's working",
        "createdAt": "2017-05-16T18:41:06Z",
        "updatedAt": "2017-05-16T18:41:06Z",
        "author": {
          "login": "mloskot"
        }
      }
    ]
  }
}