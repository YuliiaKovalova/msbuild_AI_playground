{
  "number": 10710,
  "title": "[Bug]: Deterministic builds in .NET8",
  "body": "### Issue Description\n\nHello\r\nWe have an issue with the deterministic build in .NET8.\r\n\r\nWe have a large project with many referenced libraries.\r\n\r\nFor simplification, lets have lib2 which is referenced by lib1.\r\nFor deployment reasons, if lib2 changes, we need lib1 to remain unchanged.\r\n\r\nThe current behavior in .NET8 is that if lib2 changes, lib1 changes as well.\r\n\r\nFor deployment build we use msbuild.\r\n\r\nIs this a bug or an intended solution? Is there a solution to our requirements?\n\n### Steps to Reproduce\n\n[TestDeterministicBuildCoreConsole.zip](https://github.com/user-attachments/files/17159415/TestDeterministicBuildCoreConsole.zip)\r\n\n\n### Expected Behavior\n\nIf lib2 changes, we need lib1 to remain unchanged.\n\n### Actual Behavior\n\nIf lib2 changes, lib1 changes as well.\r\n\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-09-27T05:25:54Z",
  "updatedAt": "2024-12-15T15:49:18Z",
  "closedAt": "2024-12-15T15:43:15Z",
  "author": {
    "login": "AdamecDavid"
  },
  "labels": [
    "bug",
    "needs-more-info",
    "stale",
    "closed-by-bot",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "GangWang01"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I believe this can be done by using a reference assembly.  So that if the implementation of lib2 changes, the reference assembly of lib2 stays the same anyway, and the compilation of lib1 sees only the reference assembly and considers lib2 unchanged.\n\nI'm not sure if you can generate the reference assembly automatically as part of the lib2 build.  There is an MSBuild property for that but IIRC it copies all assembly attributes so if you're putting Git commit info in those attributes then the reference assembly will change.  Another option is to maintain the reference assembly as separate source code and use ApiCompat tools to verify that the implementation is compatible with that.",
        "createdAt": "2024-09-27T06:03:48Z",
        "updatedAt": "2024-09-27T06:07:36Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "If you mean this section in VS , than it is already turned on and still build generates different binaries. I expect msbuild takes this property from the project files.\r\n![obrazek](https://github.com/user-attachments/assets/5877e7b1-6a4f-43ad-83f5-d54c3487b065)\r\n",
        "createdAt": "2024-09-27T06:32:37Z",
        "updatedAt": "2024-09-27T06:32:37Z",
        "author": {
          "login": "AdamecDavid"
        }
      },
      {
        "body": "@dejvis if the change to referenced project lib2 is public API change such as public member added/removed or name change, it's expected referencing project lib1 will be built and changed. If referenced project lib2 is changed in a way that doesn't alter its public API, referencing project lib1 will not be built and not change either. https://github.com/dotnet/project-system/blob/main/docs/up-to-date-check.md#reference-assemblies-and-mixed-sdk-stylenon-sdk-style-projects explains this.\n\nIf it's not the case you encountered, can you provide detailed steps to reproduce(including how you changed lib2, actions performed, which version of .NET 8, etc.)?",
        "createdAt": "2024-10-30T10:04:18Z",
        "updatedAt": "2024-10-31T09:37:54Z",
        "author": {
          "login": "GangWang01"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "createdAt": "2024-11-30T19:53:34Z",
        "updatedAt": "2024-11-30T19:53:34Z",
        "author": {
          "login": "dotnet-policy-service[bot]"
        }
      }
    ]
  }
}