{
  "number": 361,
  "title": "Warning MSB3884 when building from command line",
  "body": "When building our solution on the build server (using Jenkins) with MSBuild 14 following warning occurs:\n\nC:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.VisualBasic.CurrentVersion.targets(133,9): warning MSB3884: ruleset file \"ManagedMinimumRules.ruleset\" could not be found.\n\nExecuting the same command line call on my dev machine this warning won't appear.\n\nI've installed the Build Tools 2015, .NET Targeting packs, .NET SDKs on the build server but nothing helped.\n\nOne of my project file looks like:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n  <PropertyGroup>\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\n    <ProjectGuid>{0DE22053-805A-49D9-802A-4CC4104719C8}</ProjectGuid>\n    <OutputType>Library</OutputType>\n    <RootNamespace>CHG.iCLASSFW.Base.Foundation</RootNamespace>\n    <AssemblyName>CHG.iCLASSFW.Base.Foundation</AssemblyName>\n    <FileAlignment>512</FileAlignment>\n    <MyType>Windows</MyType>\n    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>    \n  </PropertyGroup>\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\n    <DebugType>pdbonly</DebugType>\n    <DefineDebug>false</DefineDebug>\n    <DefineTrace>true</DefineTrace>\n    <Optimize>true</Optimize>\n    <OutputPath>..\\bin\\Client\\</OutputPath>\n    <DocumentationFile>CHG.iCLASSFW.Base.Foundation.xml</DocumentationFile>\n    <NoWarn>42353,42354,42355</NoWarn>\n    <WarningsAsErrors>41999,42016,42017,42018,42019,42020,42021,42022,42032,42036,42105,42106,42107</WarningsAsErrors>\n    <Prefer32Bit>false</Prefer32Bit>\n  </PropertyGroup>\n  <PropertyGroup>\n    <OptionExplicit>On</OptionExplicit>\n    <OptionCompare>Binary</OptionCompare>\n    <OptionStrict>On</OptionStrict>\n    <OptionInfer>On</OptionInfer>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)' == 'Debug|x86'\">\n    <DebugSymbols>true</DebugSymbols>\n    <DefineDebug>true</DefineDebug>\n    <DefineTrace>true</DefineTrace>\n    <OutputPath>..\\bin\\Client\\</OutputPath>\n    <DocumentationFile>CHG.iCLASSFW.Base.Foundation.xml</DocumentationFile>\n    <NoWarn>42353,42354,42355</NoWarn>\n    <DebugType>full</DebugType>\n    <PlatformTarget>x86</PlatformTarget>\n    <WarningsAsErrors>41999,42016,42017,42018,42019,42020,42021,42022,42032,42036,42105,42106,42107</WarningsAsErrors>\n    <Prefer32Bit>false</Prefer32Bit>\n    <DefineConstants>\n    </DefineConstants>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)' == 'Release|x86'\">\n    <OutputPath>..\\bin\\Client\\</OutputPath>\n    <Prefer32Bit>false</Prefer32Bit>\n    <DefineConstants>\n    </DefineConstants>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'\">\n    <Prefer32Bit>false</Prefer32Bit>\n    <OutputPath>..\\bin\\Client\\</OutputPath>\n    <DefineConstants>\n    </DefineConstants>\n  </PropertyGroup>\n  <ItemGroup>\n    <Reference Include=\"System\" />\n    <Reference Include=\"System.configuration\" />\n    <Reference Include=\"System.Data\" />\n    <Reference Include=\"System.DirectoryServices\" />\n    <Reference Include=\"System.DirectoryServices.AccountManagement\" />\n    <Reference Include=\"System.Drawing\" />\n    <Reference Include=\"System.Runtime.Serialization\" />\n    <Reference Include=\"System.ServiceModel\" />\n    <Reference Include=\"System.Xml\" />\n    <Reference Include=\"System.Core\">\n      <RequiredTargetFramework>3.5</RequiredTargetFramework>\n    </Reference>\n    <Reference Include=\"System.Xml.Linq\">\n      <RequiredTargetFramework>3.5</RequiredTargetFramework>\n    </Reference>\n  </ItemGroup>\n  <ItemGroup>\n    <Import Include=\"Microsoft.VisualBasic\" />\n    <Import Include=\"System\" />\n    <Import Include=\"System.Collections\" />\n    <Import Include=\"System.Collections.Generic\" />\n    <Import Include=\"System.Data\" />\n    <Import Include=\"System.Diagnostics\" />\n    <Import Include=\"System.Linq\" />\n    <Import Include=\"System.Xml.Linq\" />\n  </ItemGroup>\n  <ItemGroup>\n    <Compile Include=\"..\\CHG.iCLASSFW.AssemblyInfo.vb\">\n      <Link>CHG.iCLASSFW.AssemblyInfo.vb</Link>\n    </Compile>\n    <Compile Include=\"Attributes\\HexColorAttribute.vb\" />\n    <Compile Include=\"Attributes\\iCLASSFWPackageAttribute.vb\" />\n    <Compile Include=\"Attributes\\PerformanceCriticalAttribute.vb\" />\n    <Compile Include=\"Attributes\\SecurityRelevantAttribute.vb\" />\n    <Compile Include=\"classes\\ActiveDirectoryCrawler.vb\" />\n    <Compile Include=\"classes\\ApplicationInfo.vb\" />\n    <Compile Include=\"classes\\AssemblyInfo.vb\" />\n    <Compile Include=\"classes\\BaseMarshallingObject.vb\" />\n    <Compile Include=\"classes\\CertificateCallback.vb\" />\n    <Compile Include=\"classes\\CHGActionResult.vb\" />\n    <Compile Include=\"classes\\CHGExceptionMessage.vb\" />\n    <Compile Include=\"classes\\CHGMessage.vb\" />\n    <Compile Include=\"classes\\CHGMessageList.vb\" />\n    <Compile Include=\"classes\\CHGResult.vb\" />\n    <Compile Include=\"classes\\ClassMockBuilder.vb\" />\n    <Compile Include=\"classes\\DataColumnInfo.vb\" />\n    <Compile Include=\"classes\\DisplayMessage.vb\" />\n    <Compile Include=\"classes\\DynamicPropertyDescriptor.vb\" />\n    <Compile Include=\"classes\\EnforceUsingBlockAttribute.vb\" />\n    <Compile Include=\"classes\\EnumSortOrderAttribute.vb\" />\n    <Compile Include=\"classes\\EqualityComparer.vb\" />\n    <Compile Include=\"classes\\ConfigFileHelper.vb\" />\n    <Compile Include=\"classes\\configuration\\AppSettingsHelper.vb\" />\n    <Compile Include=\"classes\\configuration\\AssemblyBuildDateAttribute.vb\" />\n    <Compile Include=\"classes\\configuration\\CustomAttributeHelper.vb\" />\n    <Compile Include=\"classes\\configuration\\DefaultConfigSection.vb\" />\n    <Compile Include=\"classes\\configuration\\SerializingConfigSection.vb\" />\n    <Compile Include=\"classes\\configuration\\XMLConfigSection.vb\" />\n    <Compile Include=\"classes\\CoreAppEnv.vb\" />\n    <Compile Include=\"classes\\CustomParameter.vb\" />\n    <Compile Include=\"classes\\DisposableObject.vb\" />\n    <Compile Include=\"classes\\DynamicProxy.vb\" />\n    <Compile Include=\"classes\\EnumDescriptionKeyAttribute.vb\" />\n    <Compile Include=\"classes\\EnumStringAttribute.vb\" />\n    <Compile Include=\"classes\\EnumTextKeyAttribute.vb\" />\n    <Compile Include=\"classes\\ExternalMessage.vb\" />\n    <Compile Include=\"classes\\Health\\InternalCPUStatus.vb\" />\n    <Compile Include=\"classes\\Health\\InternalMemoryStatus.vb\" />\n    <Compile Include=\"classes\\Health\\NativeMethods.vb\" />\n    <Compile Include=\"classes\\iCLASSBackgroundWorker.vb\">\n      <SubType>Component</SubType>\n    </Compile>\n    <Compile Include=\"classes\\IgnoreOnSaveAttribute.vb\" />\n    <Compile Include=\"classes\\InstantDebugStopwatch.vb\" />\n    <Compile Include=\"classes\\ListHelper.vb\" />\n    <Compile Include=\"classes\\NotVisibleAttribute.vb\" />\n    <Compile Include=\"classes\\PrimaryKey.vb\" />\n    <Compile Include=\"classes\\PropertyComparer.vb\" />\n    <Compile Include=\"classes\\Range.vb\" />\n    <Compile Include=\"classes\\SettingsBase.vb\" />\n    <Compile Include=\"classes\\ThreadSafeDictionary.vb\" />\n    <Compile Include=\"classes\\ValuePair.vb\" />\n    <Compile Include=\"classes\\ValuePairList.vb\" />\n    <Compile Include=\"classes\\ValueTripple.vb\" />\n    <Compile Include=\"classes\\ValueTrippleList.vb\" />\n    <Compile Include=\"CLI\\InvalidValueException.vb\" />\n    <Compile Include=\"CLI\\OptionItem.vb\" />\n    <Compile Include=\"CLI\\OptionNameAttribute.vb\" />\n    <Compile Include=\"CLI\\Options.vb\" />\n    <Compile Include=\"CLI\\Parser.vb\" />\n    <Compile Include=\"CLI\\ShortOptionNameAttribute.vb\" />\n    <Compile Include=\"EnumImageKeyAttribute.vb\" />\n    <Compile Include=\"enums\\iCLASSFWModule.vb\" />\n    <Compile Include=\"enums\\iCLASSFWModuleGroup.vb\" />\n    <Compile Include=\"enums\\MessageType.vb\" />\n    <Compile Include=\"enums\\GeneralYesNo.vb\" />\n    <Compile Include=\"enums\\iCLASSDialogButtons.vb\" />\n    <Compile Include=\"enums\\iCLASSDialogResult.vb\" />\n    <Compile Include=\"enums\\SqlDateFormatStyle.vb\" />\n    <Compile Include=\"enums\\SqlServerTypeId.vb\" />\n    <Compile Include=\"interfaces\\IBackgroundWorker.vb\" />\n    <Compile Include=\"classes\\IconManager.vb\" />\n    <Compile Include=\"classes\\MailSettings.vb\" />\n    <Compile Include=\"classes\\Singleton.vb\" />\n    <Compile Include=\"enums\\SQLDataType.vb\" />\n    <Compile Include=\"enums\\TrimType.vb\" />\n    <Compile Include=\"interfaces\\ICHGResult.vb\" />\n    <Compile Include=\"interfaces\\IGenericResponse.vb\" />\n    <Compile Include=\"interfaces\\IMessageContainer.vb\" />\n    <Compile Include=\"interfaces\\IProvideObjectInstanceIdentifer.vb\" />\n    <Compile Include=\"interfaces\\ISupportAdditionalInformation.vb\" />\n    <Compile Include=\"interfaces\\ISupportUpdate.vb\" />\n    <Compile Include=\"interfaces\\ITextTranslator.vb\" />\n    <Compile Include=\"interfaces\\IValuePair.vb\" />\n    <Compile Include=\"modules\\CoreObjectTools.vb\" />\n    <Compile Include=\"modules\\CryptTools.vb\" />\n    <Compile Include=\"modules\\DataTableTools.vb\" />\n    <Compile Include=\"modules\\DateTools.vb\" />\n    <Compile Include=\"modules\\EnumTools.vb\" />\n    <Compile Include=\"modules\\ExceptionTools.vb\" />\n    <Compile Include=\"modules\\FileTools.vb\" />\n    <Compile Include=\"modules\\FormatTools.vb\" />\n    <Compile Include=\"modules\\IdeTools.vb\" />\n    <Compile Include=\"modules\\ListTools.vb\" />\n    <Compile Include=\"modules\\NetTools.vb\" />\n    <Compile Include=\"modules\\NumericTools.vb\" />\n    <Compile Include=\"modules\\ObjectTools.vb\" />\n    <Compile Include=\"modules\\StringTools.vb\" />\n    <Compile Include=\"modules\\ThreadTools.vb\" />\n    <Compile Include=\"modules\\TypeTools.vb\" />\n    <Compile Include=\"modules\\ValidationTools.vb\" />\n    <Compile Include=\"My Project\\AssemblyInfo.vb\" />\n    <Compile Include=\"My Project\\Application.Designer.vb\">\n      <AutoGen>True</AutoGen>\n      <DependentUpon>Application.myapp</DependentUpon>\n    </Compile>\n    <Compile Include=\"My Project\\Resources.Designer.vb\">\n      <AutoGen>True</AutoGen>\n      <DesignTime>True</DesignTime>\n      <DependentUpon>Resources.resx</DependentUpon>\n    </Compile>\n    <Compile Include=\"My Project\\Settings.Designer.vb\">\n      <AutoGen>True</AutoGen>\n      <DependentUpon>Settings.settings</DependentUpon>\n      <DesignTimeSharedInput>True</DesignTimeSharedInput>\n    </Compile>\n    <Compile Include=\"ObjectInstanceIdentifier.vb\" />\n  </ItemGroup>\n  <ItemGroup>\n    <EmbeddedResource Include=\"My Project\\Resources.resx\">\n      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>\n      <LastGenOutput>Resources.Designer.vb</LastGenOutput>\n      <CustomToolNamespace>My.Resources</CustomToolNamespace>\n      <SubType>Designer</SubType>\n    </EmbeddedResource>\n  </ItemGroup>\n  <ItemGroup>\n    <None Include=\"My Project\\Application.myapp\">\n      <Generator>MyApplicationCodeGenerator</Generator>\n      <LastGenOutput>Application.Designer.vb</LastGenOutput>\n    </None>\n    <None Include=\"My Project\\Settings.settings\">\n      <Generator>SettingsSingleFileGenerator</Generator>\n      <CustomToolNamespace>My</CustomToolNamespace>\n      <LastGenOutput>Settings.Designer.vb</LastGenOutput>\n    </None>\n  </ItemGroup>\n  <ItemGroup>\n    <Compile Include=\"classes\\ColorManager.vb\" />\n  </ItemGroup>\n  <ItemGroup />\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.VisualBasic.targets\" />\n  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. \n       Other similar extension points exist, see Microsoft.Common.targets.\n  <Target Name=\"BeforeBuild\">\n  </Target>\n  <Target Name=\"AfterBuild\">\n  </Target>\n  -->\n</Project>\n```\n\nThe cmd line call is:\n    \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\MSBuild.exe\" /consoleloggerparameters:NoSummary,NoItemAndPropertyList /verbosity:minimal /p:BuildType=Continuous /p:Configuration=Release \"/p:Platform=Any CPU\" BuildDependencies\\SmallBuildFile.build \"\n\nThe build file just executes the MSBuild target.\n\n```\n<!-- Start compiling -->\n    <Target Name=\"Compile\">\n        <Message Text=\"Restore NuGet packages\" />           \n        <Exec Command=\"..\\BuildDependencies\\Tools\\NuGet.exe restore ../CHG.iCLASSFW.sln -ConfigFile ..\\nuget.config -Verbosity detailed\" />\n\n        <Message Text=\"Compile Projects\" />\n        <!-- First call clean, and then all targets. This is necessary to \n            execute targets like afterbuild in those projects, that have them. --> \n        <MSBuild Projects=\"../CHG.iCLASSFW.sln\" Properties=\"Configuration=$(Configuration)\" />\n    </Target>   \n```\n\nHow can I get rid of this warning?\n",
  "state": "CLOSED",
  "createdAt": "2015-11-19T10:18:22Z",
  "updatedAt": "2024-02-21T17:29:49Z",
  "closedAt": "2016-02-17T09:10:37Z",
  "author": {
    "login": "twenzel"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I've added some debug messages to my .VBPROJ file, outputting some properties\n\n```\n<Message Text=\"CodeAnalysisRuleSet: $(CodeAnalysisRuleSet)\" Importance=\"High\"/>         \n<Message Text=\"CodeAnalysisRuleSetDirectories: $(CodeAnalysisRuleSetDirectories)\" Importance=\"High\"/>                       \n<Message Text=\"ResolvedCodeAnalysisRuleSet: $(ResolvedCodeAnalysisRuleSet)\" Importance=\"High\"/>         \n```\n\nResults from build server:\n\n```\nCodeAnalysisRuleSet: ManagedMinimumRules.ruleset\nCodeAnalysisRuleSetDirectories:\nResolvedCodeAnalysisRuleSet:\n```\n\nresults from dev machine:\n\n```\nCodeAnalysisRuleSet: MinimumRecommendedRules.ruleset\nCodeAnalysisRuleSetDirectories: ;C:\\Program Files (x86)\\Microsoft Visual Stud\nio 14.0\\Team Tools\\Static Analysis Tools\\\\Rule Sets\nResolvedCodeAnalysisRuleSet: C:\\Program Files (x86)\\Microsoft Visual Studio 1\n4.0\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.rules\net\n```\n",
        "createdAt": "2015-11-19T11:21:36Z",
        "updatedAt": "2015-11-19T11:21:36Z",
        "author": {
          "login": "twenzel"
        }
      },
      {
        "body": "It looks like the code analysis ruleset is installed by Visual Studio (or at least, one of its sub-packages other than the ones you've installed on the server so far).  I am surprised that the ruleset is separate from the `.targets` file that references it, though. It's set in `C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\CodeAnalysis\\Microsoft.CodeAnalysis.targets`, then referenced in `Microsoft.VisualBasic.CurrentVersion.targets` that actually throws the error.\n\nDoes `C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\Rule Sets\\MinimumRecommendedRules.ruleset` exist on the server?\n\nIt looks like the warning is thrown in a task defined as:\n\n``` xml\n  <Target Name=\"ResolveCodeAnalysisRuleSet\" Condition=\"'$(CodeAnalysisRuleSet)' != ''\">\n```\n\nso you could avoid the warning by ensuring that `CodeAnalysisRuleSet` gets overridden to an empty string after all imports (probably only in your CI configuration).  But that's working around the problem; it'd be nice to fix it for everyone.  If that file is really missing on your machine, I can try to figure out who to bug internally about reconciling the Code Analysis targets and ruleset installation.\n",
        "createdAt": "2015-11-19T15:20:47Z",
        "updatedAt": "2015-11-19T15:20:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The file `C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\Rule Sets\\MinimumRecommendedRules.ruleset` exists on the build server, but only because I already copied it. On a clean machine with only Build Tools 2015 and .NET Targeting pack 4.5.1 installed this file and folder does not exists.\n",
        "createdAt": "2015-11-20T07:18:35Z",
        "updatedAt": "2015-11-20T07:18:35Z",
        "author": {
          "login": "twenzel"
        }
      },
      {
        "body": "I can confirm that setting the `CodeAnalysisRuleSet` to empty solves my problem.\n\n```\n  <Target Name=\"BeforeBuild\">  \n  <PropertyGroup>\n    <CodeAnalysisRuleSet></CodeAnalysisRuleSet>\n</PropertyGroup>\n  </Target>\n```\n\nBut this is just a workaround. I definitely won't apply this approach to all my 100 projects of the solution. There have to be a better solution. \n",
        "createdAt": "2015-11-20T08:15:09Z",
        "updatedAt": "2015-11-25T06:45:43Z",
        "author": {
          "login": "twenzel"
        }
      },
      {
        "body": "Any updates on this issue?\n",
        "createdAt": "2015-11-30T09:27:46Z",
        "updatedAt": "2015-11-30T09:27:46Z",
        "author": {
          "login": "twenzel"
        }
      },
      {
        "body": "I'm trying to find someone on the FxCop side to help figure out where we should detect that it's not installed and avoid running it.\n\nTo set expectations, this seems likely to not be fixed in a shipping product until a future version of VS.  Depending on the exact nature of the changes, they seem likely to be a bit risky to implement in VS2015 Update 2.\n",
        "createdAt": "2015-11-30T17:54:15Z",
        "updatedAt": "2015-11-30T17:54:15Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Let me summarize what I understood from all the comments:\n1. Your build works fine without any warnings if you have VS installed.\n2. Your build works fine without any warnings if you have only Build tools installed, but no VS installed.\n3. Your build generates this warning if you have Build tools installed + you manually copy file `C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\Rule Sets\\MinimumRecommendedRules.ruleset` on the build machine.\n\nMay I know why you are manually copying that ruleset onto the machine? It is only supposed to be installed with Visual Studio and FXCop toolset, so you have an unsupported environment. If you really must copy this ruleset, please make sure to copy over all the rulesets in the below screenshot (which come with VS and are inter-dependent on each other)\n\n![rulesets](https://cloud.githubusercontent.com/assets/10605811/11570354/a70d5ad8-99ab-11e5-93ae-5325ac224ba9.png)\n",
        "createdAt": "2015-12-03T18:50:41Z",
        "updatedAt": "2015-12-03T18:50:41Z",
        "author": {
          "login": "mavasani"
        }
      },
      {
        "body": "1) correct\n2) wrong. Warnings appear on a clean machine with Build tools installed also.\n3) I only copied the whole Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\Rule Sets folder to try out if the warnings disappear. \n",
        "createdAt": "2015-12-03T19:04:12Z",
        "updatedAt": "2015-12-03T19:04:12Z",
        "author": {
          "login": "twenzel"
        }
      },
      {
        "body": "Thanks for the clarification - let me investigate 2 then.\n",
        "createdAt": "2015-12-03T19:26:47Z",
        "updatedAt": "2015-12-03T19:26:47Z",
        "author": {
          "login": "mavasani"
        }
      },
      {
        "body": "Toni, I have filed an internal bug to track this issue - we hope to fix this for the next VS update/release.\n\nMeanwhile, you can workaround this issue by either copying all of the above rulesets on your build server OR just edit the Microsoft.CodeAnalysis.Targets on the build server to set CodeAnalysisRuleset to empty. Hope that helps.\n",
        "createdAt": "2015-12-04T18:37:37Z",
        "updatedAt": "2015-12-04T18:37:37Z",
        "author": {
          "login": "mavasani"
        }
      },
      {
        "body": "I already tried out copying all mentioned rulesets to the build server. Does not help.\nSet the CodeAnalysisRuleset property to empty in the Microsoft.CodeAnalysis.Targets file. This is working.\n",
        "createdAt": "2015-12-07T08:14:43Z",
        "updatedAt": "2015-12-07T08:14:43Z",
        "author": {
          "login": "twenzel"
        }
      },
      {
        "body": "If you don't want to edit your Microsoft.CodeAnalysis.Targets file, please note that it is not enough to merely copy the folder `C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\Rule Sets\\` to the build server.\n\nYou _also_ need to create the registry key `HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\VisualStudio\\14.0\\Setup\\EDev` and add the string value `StanDir` = `C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\`\n\nOr simply import this reg file:\n\n```\nWindows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\VisualStudio\\14.0\\Setup\\EDev]\n\"StanDir\"=\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\Team Tools\\\\Static Analysis Tools\\\\\"\n```\n\nThis worked for us.\n",
        "createdAt": "2016-01-14T11:43:55Z",
        "updatedAt": "2016-01-14T11:43:55Z",
        "author": {
          "login": "kevinbosman"
        }
      },
      {
        "body": "Suddenly this error do not appear anymore. ;(\nSo I'll close this issue until it appears again.\n",
        "createdAt": "2016-02-17T09:10:37Z",
        "updatedAt": "2016-02-17T09:10:37Z",
        "author": {
          "login": "twenzel"
        }
      },
      {
        "body": "This is definitely still happening on a clean installation of MSBuild tools on a new build server (C# projects).\n\nI recently installed a fresh Jenkins instance, installed MSBuild Tools 2015, all .NET Targeting packs (versions 4.0, 4.0.3, 4.5, 4.5.1, 4.5.2, 4.6, 4.6.1) and Windows 10 SDK with .NET 4.6 SDK.\n\nGot warning MSB3884 for some projects, but not all.\n\nThe entire `C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0` folder was missing (including the `CodeAnalysis` folder), as well as the `C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools` folder (including the `Static Analysis Tools\\Rule Sets` folder)\n\nCopied the `CodeAnalysis` and `Rule Sets` folders from my dev machine, then got warning MSB3884 for every project.\n\nImported the reg file as per my previous post, and it all works perfectly.\n",
        "createdAt": "2016-03-08T10:38:53Z",
        "updatedAt": "2016-03-08T10:38:53Z",
        "author": {
          "login": "kevinbosman"
        }
      },
      {
        "body": "I just installed MSBuild Tools 2015, the 4.6.1 Developer pack (targeting pack and SDK), copied the rule sets folder and still get the MSB3884 warning. \n\nRan the registry file, and MSB3884 is no longer being thrown.\n",
        "createdAt": "2016-05-02T19:14:46Z",
        "updatedAt": "2016-05-02T19:14:46Z",
        "author": {
          "login": "nexaddo"
        }
      },
      {
        "body": "I haven't tried this one but seems legit.\nhttp://stackoverflow.com/a/35156527/1634225\n",
        "createdAt": "2016-05-03T06:08:40Z",
        "updatedAt": "2016-05-03T06:08:40Z",
        "author": {
          "login": "twenzel"
        }
      },
      {
        "body": "/cc @natidea - This is internal bug [170085](https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_workitems?_a=edit&id=170085&triage=true) that is assigned to Nat.\n",
        "createdAt": "2016-05-03T16:11:02Z",
        "updatedAt": "2016-05-03T16:11:02Z",
        "author": {
          "login": "mavasani"
        }
      },
      {
        "body": "Similar to @nexaddo - I installed MSBuild Tools 2015, 4.6.1 Developer pack, copied the rulesets folder AND ran the registry file..  but, unfortunately, my MSB3884 warnings _still_ show.  ;(\n\nFWIW - I'm on Jenkins 2.22\n\n**EDIT**\nAfter solving some other issues with my build - _which I thought were unrelated to this issue_ - these warnings are now indeed magically gone. Sorry for the confusion.\n",
        "createdAt": "2016-09-22T12:36:25Z",
        "updatedAt": "2016-09-22T13:04:54Z",
        "author": {
          "login": "bkwdesign"
        }
      },
      {
        "body": "@bkwdesign What other issues did you solve? I am also running into this issue and other build issues with a clean install of MSBuild.\n\nWhy is it so hard for Microsoft to create a single compiler and build tool and use that both from command line and in VS.\nCurrently different things happen in VS versus what MSBuild does. This is extremely annoying.\nI just want to build our project from the command line on the build server.\nIt would be way too much overkill to buy a new VS licence and install VS completely just for a build server.\n",
        "createdAt": "2016-10-19T12:50:46Z",
        "updatedAt": "2016-10-19T12:50:46Z",
        "author": {
          "login": "wburgers"
        }
      },
      {
        "body": "_Refer to this excerpt from [my answer on S.O.](http://stackoverflow.com/a/39625029) - HTH:_\nWhen I first received my clean \"Windows 2012 R2\" server, it simply had a lot of things missing.. and I'm wondering if I had installed Visual Studio first, if it would have rectified some of these things straight off?\n\nBelow is my synopsis of what I had to do - but it doesn't show the pain and suffering involved figuring it all out and the false starts. Maybe it'll help someone else, though.\n\n> First, **_uninstalled**_ 4.6.1 framework (because the next step, Win 7 SDK, needs a 'real' 4.0 framework)\n> -- (find Update for Microsoft Windows (KB3102467) and click Uninstall.)\n> -- also uninstalled anything from MS labeled with C++ redistributable (a later step will restore these)\n> \n> Then, install **Windows 7 SDK** (installs critical \"reference assemblies\" and a proper baseline 4.0 framework)\n> -- Then, install Multi-Targeting Pack for Framework 4.0.1 (netfx_401mtpack.exe)\n> -- Then, install Multi-Targeting Pack for Framework 4.0.3 (netfx_403mtpack.exe)\n> \n> Then, reinstalled 4.6.1 framework for 2012 R2 (KB3102467) \n> \n> Then, installed Microsoft .NET Framework 4.6.1 Developer Pack (DP461-DevPack-KB3105179-ENU.exe)\n> \n> Then, installed \"Visual Studio 2015 Build Tools\" (BuildTools_Full.exe)\n> \n> Downloaded a copy of nuget.exe and put it in the C:\\Windows directory\n",
        "createdAt": "2016-10-21T03:01:19Z",
        "updatedAt": "2016-10-21T03:01:19Z",
        "author": {
          "login": "bkwdesign"
        }
      },
      {
        "body": "This stackoverflow answer gives my best detailed account of what I had to\ndo to get our Jenkins CI server off the ground.\nhttp://stackoverflow.com/a/39625029/1520850\n\nOn Wed, Oct 19, 2016 at 8:51 AM Willem Burgers notifications@github.com\nwrote:\n\n> @bkwdesign https://github.com/bkwdesign What other issues did you\n> solve? I am also running into this issue and other build issues with a\n> clean install of MSBuild.\n> \n> Why is it so hard for Microsoft to create a single compiler and build tool\n> and use that both from command line and in VS.\n> Currently different things happen in VS versus what MSBuild does. This is\n> extremely annoying.\n> I just want to build our project from the command line on the build server.\n> It would be way too much overkill to buy a new VS licence and install VS\n> completely just for a build server.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/msbuild/issues/361#issuecomment-254802782,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ADB8KVHnMH0YK8V4d7wLydANYbqF92tBks5q1hI2gaJpZM4Gla_q\n> .\n",
        "createdAt": "2016-10-25T18:12:09Z",
        "updatedAt": "2016-10-25T18:12:09Z",
        "author": {
          "login": "bkwdesign"
        }
      },
      {
        "body": "@bkwdesign \nThank you very much for your answer.\nI cleaned many of the installations and started over installing all the .net frameworks and SDKs in the proper order.\nI am still having problems, but that has to do with the latest dotnet core tooling I think.\n",
        "createdAt": "2016-10-27T08:13:06Z",
        "updatedAt": "2016-10-27T08:13:06Z",
        "author": {
          "login": "wburgers"
        }
      },
      {
        "body": "I don't currently have solutions that use NET core, so, I didn't have to\naccount for that in my CI setup\n\nOn Thu, Oct 27, 2016 at 4:13 AM, Willem Burgers notifications@github.com\nwrote:\n\n> @bkwdesign https://github.com/bkwdesign\n> Thank you very much for your answer.\n> I cleaned many of the installations and started over installing all the\n> .net frameworks and SDKs in the proper order.\n> I am still having problems, but that has to do with the latest dotnet core\n> tooling I think.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/msbuild/issues/361#issuecomment-256576466,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ADB8KV5dg1_xL863s89LFK334ZVKNwDlks5q4F0hgaJpZM4Gla_q\n> .\n\n## \n\n_code.bkwdesign.com http://code.bkwdesign.com/_\n_Home: 440 427 8795_\n_Cell:    440 382 9869_\n",
        "createdAt": "2016-10-27T22:25:21Z",
        "updatedAt": "2016-10-27T22:25:21Z",
        "author": {
          "login": "bkwdesign"
        }
      },
      {
        "body": "I had the same problem. Only after manually creating the `C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\Rule Sets` folder and copying over all of my .ruleset files, and creating the registry key did it go away.",
        "createdAt": "2017-05-09T02:21:31Z",
        "updatedAt": "2017-05-09T02:21:31Z",
        "author": {
          "login": "rocklan"
        }
      },
      {
        "body": "Is there also a documented workaround for this issue for MSBuild 15 \"Build Tools for Visual Studio 2017\"? I tried the above, to no avail.",
        "createdAt": "2017-11-14T20:44:58Z",
        "updatedAt": "2017-11-14T20:44:58Z",
        "author": {
          "login": "Bouke"
        }
      },
      {
        "body": "The worst part of this is that when you add new solution/project build configurations, VS2017 shoves the `<CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>` into the new PropertyGroups, even if it wasn't present in any of the existing property groups.",
        "createdAt": "2017-11-22T13:49:49Z",
        "updatedAt": "2017-11-22T13:49:49Z",
        "author": {
          "login": "StingyJack"
        }
      },
      {
        "body": "@mavasani is there any progress in the internal bug report?\r\n\r\n@StingyJack that problem is tracked at https://github.com/dotnet/roslyn/issues/24266",
        "createdAt": "2018-04-25T09:37:49Z",
        "updatedAt": "2018-04-25T09:40:00Z",
        "author": {
          "login": "stijnherreman"
        }
      }
    ]
  }
}