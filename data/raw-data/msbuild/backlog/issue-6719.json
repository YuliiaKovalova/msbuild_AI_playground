{
  "number": 6719,
  "title": "Research built efficiency based on rate of MSBuild nodes vs CPU logical cores",
  "body": "Verify built efficiency on accessible common build machine for:\r\n- [x] OrchardCode\r\n- [x] MSBuild\r\n- [x] OrchardCore on non 'hyperthreading' machine\r\n\r\nIf efficiency of current defaults is far from optimal, create another issue to investigate further and implement better default.",
  "state": "CLOSED",
  "createdAt": "2021-07-29T18:10:33Z",
  "updatedAt": "2024-02-21T17:01:11Z",
  "closedAt": "2021-09-03T07:44:57Z",
  "author": {
    "login": "rokonec"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rokonec"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "## Conclusion\r\nDo not invest further into this opportunity:\r\n\r\n## Reasoning\r\nWe have hypothesis that when number of nodes equals to number of CPU logical processors system might be under-subscribed because there always be some level of blocking on IO. However that hypothesis has not been confirmed with following reasoning:\r\n- When measured on CPU with CPU Cores < logical processors (Hyper-threading, simultaneous multi-threading) the system is naturally over-subscribed and increasing number of nodes further does not bring consistent performance gain.\r\n- When measured on CPU with hyper-threading disabled (Orchard @4 in attached Excel) increasing nodes > CPU count only matters for rebuilds as incremental build is not as disk IO heavy => less DISK blocking.\r\n- Gain from better CPU utilization is partially consumed by process initialization and by lesser cache-hit ratio.\r\n- Data shows high noise. Most probably caused by 'randomness' of nodes scheduling and actual execution critical path.\r\n- Event if it is obvious that optimal number of nodes is highly depending on project/solution, in measured scenarios the default has not been far from optimal value.\r\n- No simple equation for optimal number of nodes have been devised yet. `nodes = logical processors * 1.5` looks like a good candidate but to verify this, extensive testing on various systems would have to be done, especially on \"big iron\" machines (> 64 core).\r\n- Once Disk IO becomes perf bottleneck, increasing parallelism further do not help. Unfortunately Disk IO bandwidth differs a lot based on given Disk type (network share, SAN, rotational disk, SSD, RAM disk, ...).\r\n\r\n\r\nI believe that given the complexity of MSBuild only way how to improve scheduling performance by optimal degree of parallelism is by introducing system metric feedback loop. Scheduler would receive main system metrics (memory usage, CPU usage, DISK usage) and dynamically control degree of parallelism to achieve optimal computer usage.\r\n\r\n### Rebuild OrchardCore\r\n![image](https://user-images.githubusercontent.com/25249058/130850300-8718c6f1-8494-4797-8379-2c0f9eb6594c.png)\r\n\r\n### Incremental build OrchardCore with hot MSBuild nodes\r\n![image](https://user-images.githubusercontent.com/25249058/130850419-4def75a5-32c2-4b11-8b49-29bea85d71a4.png)\r\n\r\nData points in above chart are AVG of 10 measurements. Measurements in D8asV4 cloud VMs are suspicious slow, not sure if this machine from DevDiv Azure Test Labs are proper representative of VM dev machines.\r\n\r\n\r\n\r\n",
        "createdAt": "2021-08-05T13:59:21Z",
        "updatedAt": "2021-08-25T19:11:14Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "@ladipro please review",
        "createdAt": "2021-08-05T14:07:31Z",
        "updatedAt": "2021-08-05T14:07:31Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "Looks good, thank you for the detailed analysis. Curious, are the data points presented in the charts an average of multiple builds? If so, how many?",
        "createdAt": "2021-08-05T14:12:59Z",
        "updatedAt": "2021-08-05T14:12:59Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "@Ladi I have remeasured to have 10 measurements per data point, updated charts and upload new XLS. \r\nConclusion has not been changed.",
        "createdAt": "2021-08-25T19:18:37Z",
        "updatedAt": "2021-08-25T19:18:37Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "[nodes-count-full.csv.xlsx](https://github.com/dotnet/msbuild/files/7049385/nodes-count-full.csv.xlsx)\r\n",
        "createdAt": "2021-08-25T19:18:57Z",
        "updatedAt": "2021-08-25T19:18:57Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "Thank you! Feel free to close the issue.",
        "createdAt": "2021-08-30T08:41:56Z",
        "updatedAt": "2021-08-30T08:41:56Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}