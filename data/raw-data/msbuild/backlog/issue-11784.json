{
  "number": 11784,
  "title": "Confusing and inconsistent behavior around `AfterTargets=\"Build\"` in referenced projects",
  "body": "\nWhen building multiple projects in parallel that reference the same dependency, AfterTargets targets in the dependency project may not be complete when `ResolveProjectReferences` in depending projects returns, unlike the single-proc behavior. This occurs when the dependency project is built on the scheduler node, but not when it is built on another node.\n\nThis is the root cause of https://github.com/dotnet/sdk/issues/48785.\n\n## Expected Behavior\nThe MSBuild task should wait for all AfterTargets targets to complete execution before returning, in ALL callers, not just the first one, and independent of what nodes the various projects are scheduled on. Projects that depend on `Dependency.proj` should not continue until all AfterTargets targets have fully completed.\n\n## Actual Behavior\nMSBuild can return from building a reference as soon as the main target (implicitly `Build`) completes, without waiting for `AfterTargets=\"Build\"` targets to finish. This means that two projects ProjectA and ProjectB that reference the same project may continue executing their build at different times--one after only the `Build` target completes, and the other after the `AfterTargets` targets complete.\n\n## Repro\n\n<details>\n<summary><strong>With these projects</strong> (click to expand)</summary>\n\n`Entry.proj`:\n```xml\n<Project>\n  <ItemGroup>\n    <!-- The first project in the MSBuild task takes over the current node, so we can force ProjectA and ProjectB\n         OFF of the current node by including something else first. -->\n    <ProjectsToBuild Include=\"initial.proj\" Condition=\"'$(AfterTargetsProjectIsOnNode1)' != 'true'\" />\n    <ProjectsToBuild Include=\"ProjectA.proj\" />\n    <ProjectsToBuild Include=\"ProjectB.proj\" />\n  </ItemGroup>\n  \n  <Target Name=\"BuildProjects\">\n    <!-- Reset state -->\n    <Delete Files=\"Dependency.out\" Condition=\"Exists('Dependency.out')\" />\n\n    <MSBuild Projects=\"@(ProjectsToBuild)\" BuildInParallel=\"true\" />\n  </Target>\n</Project>```\n\n`initial.proj`:\n```xml\n<Project>\n  <!-- Initial project that will be built first -->\n  <Target Name=\"Build\" />\n</Project>\n```\n\n`ProjectA.proj`:\n```xml\n<Project>\n  <!-- Empty stub for ProjectA -->  \n  <Target Name=\"Build\" DependsOnTargets=\"RPR\">\n    <Message Text=\"ProjectA Build\" Importance=\"High\" />\n  </Target>\n\n  <Target Name=\"RPR\">\n    <MSBuild Projects=\"Dependency.proj\" />\n\n    <Warning Text=\"Dependency AfterTarget INCOMPLETE\" Condition=\"!Exists('Dependency.out')\" />\n  </Target>\n</Project>\n```\n\n`ProjectB.proj`:\n```xml\n<Project>\n  <Target Name=\"Build\" DependsOnTargets=\"RPR\">\n    <Message Text=\"ProjectB Build\" Importance=\"High\" />\n  </Target>\n  <Target Name=\"RPR\">\n    <!-- Delay so that we can be guaranteed that ProjectA's reference triggers first. -->\n    <Exec Command=\"ping -n 2 127.0.0.1 > nul\" />\n\n    <MSBuild Projects=\"Dependency.proj\" />\n\n    <Warning Text=\"Dependency AfterTarget INCOMPLETE\" Condition=\"!Exists('Dependency.out')\" />\n  </Target>\n</Project>\n```\n\n`Dependency.proj`:\n```xml\n<Project>\n  <!-- Dependency project that will be built by ProjectA and ProjectB -->\n  <Target Name=\"Build\">\n    <Message Text=\"Dependency Build\" Importance=\"High\" />\n  </Target>\n\n  <Target Name=\"Sleep\" AfterTargets=\"Build\">\n    <Message Text=\"Dependency AfterTargets start\" Importance=\"High\" />\n    <Exec Command=\"ping -n 5 127.0.0.1 > nul\" />\n\n    <WriteLinesToFile\n      File=\"Dependency.out\"\n      Lines=\"Sleep operation completed.\"\n      Overwrite=\"true\" />\n\n    <Message Text=\"Dependency AfterTargets completed\" Importance=\"High\" />\n  </Target>\n</Project>\n```\n</details>\n\n[AfterTargets_Build_Return_Timing.zip](https://github.com/user-attachments/files/20016292/AfterTargets_Build_Return_Timing.zip)\n\n\nYou can see the behavior changes in different conditions:\n\n```sh-session\n\u276f dotnet msbuild .\\Entry.proj -tl:off -p:AfterTargetsProjectIsOnNode1=false\nMSBuild version 17.14.0-preview-25175-08+5880e1c75 for .NET\n  Dependency Build\n  Dependency AfterTargets start\n  Dependency AfterTargets completed\n  ProjectA Build\n  ProjectB Build\n\n\u276f dotnet msbuild .\\Entry.proj -tl:off -p:AfterTargetsProjectIsOnNode1=true\nMSBuild version 17.14.0-preview-25175-08+5880e1c75 for .NET\n  Dependency Build\n  Dependency AfterTargets start\nS:\\work\\AfterTargets_Build_Return_Timing\\ProjectB.proj(11,5): warning : Dependency AfterTarget INCOMPLETE\n  ProjectB Build\n  Dependency AfterTargets completed\n  ProjectA Build\n\n\u276f dotnet msbuild .\\Entry.proj -tl:off -p:AfterTargetsProjectIsOnNode1=true -m:1\nMSBuild version 17.14.0-preview-25175-08+5880e1c75 for .NET\n  Dependency Build\n  Dependency AfterTargets start\n  Dependency AfterTargets completed\n  ProjectA Build\n  ProjectB Build\n\n\u276f $env:MSBUILDNOINPROCNODE=1\n\u276f dotnet msbuild .\\Entry.proj -tl:off -p:AfterTargetsProjectIsOnNode1=true\nMSBuild version 17.14.0-preview-25175-08+5880e1c75 for .NET\n  Dependency Build\n  Dependency AfterTargets start\n  Dependency AfterTargets completed\n  ProjectA Build\n  ProjectB Build\n```\n",
  "state": "OPEN",
  "createdAt": "2025-05-02T17:27:59Z",
  "updatedAt": "2025-05-06T13:38:57Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "AR-May"
      }
    ]
  },
  "labels": [
    "Area: Engine",
    "triaged"
  ],
  "comments": {
    "nodes": []
  }
}