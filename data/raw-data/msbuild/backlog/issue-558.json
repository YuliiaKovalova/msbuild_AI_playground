{
  "number": 558,
  "title": "Move MSBuild out of the GAC / Registry",
  "body": "See [Visual Studio \u201c15\u201d: Installing Just What You Need](https://blogs.msdn.microsoft.com/visualstudio/2016/04/05/visual-studio-15-installing-just-what-you-need/) for context since this relates to the new install experience.\n\nWe're in the process of experimenting with shipping MSBuild 1) built directly from the GitHub sources (no internal mirror!) and 2) outside of the registry / GAC. This means we would ship under the Visual Studio installation folder and not install to `C:\\Program Files (x86)\\MSBuild`. This isn't set in stone at this point, but I wanted to create this Issue to track progress and get feedback.\n",
  "state": "CLOSED",
  "createdAt": "2016-04-08T00:31:22Z",
  "updatedAt": "2024-02-21T17:28:34Z",
  "closedAt": "2016-11-21T16:27:30Z",
  "author": {
    "login": "AndyGerlicher"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Should we close this?",
        "createdAt": "2016-11-21T07:43:16Z",
        "updatedAt": "2016-11-21T07:43:16Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Yup, this is done as of VS2017 Preview 5 (with the new VS installer).",
        "createdAt": "2016-11-21T16:27:30Z",
        "updatedAt": "2016-11-21T16:27:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The WiX toolset has a tool called `heat` that uses MSBuild API's to \"harvest\" the outputs of a project into the installer. It requires that MSBuild is installed on the target machine, and loads the appropriate version of `Microsoft.Build.dll` and friends from the GAC based on the `ToolsVersion`. How are standalone executables supposed to find MSBuild 15 now that it's not installed in the registry or the GAC? Keep in mind that WiX may be installed on a build machine with only the build tools and not VS 2017.  https://github.com/wixtoolset/issues/issues/5490",
        "createdAt": "2017-02-13T01:40:06Z",
        "updatedAt": "2017-02-13T01:40:06Z",
        "author": {
          "login": "rseanhall"
        }
      },
      {
        "body": "@rseanhall For VS2017 (including the Build Tools flavor), the right way to locate MSBuild is by using Visual Studio Setup Configuration. There are examples for [C++, C#, and VB](https://code.msdn.microsoft.com/Visual-Studio-Setup-0cedd331) and a newer [PowerShell wrapper](https://github.com/Microsoft/vssetup.powershell) that can help guide you. Note that a new wrinkle that you wouldn't have had to consider before is that there can be multiple Visual Studio and MSBuild installations side-by-side. Identifying the correct one can be difficult (maybe a user installed the C++ workload with their Professional edition install, but also has a Community install that doesn't have C++. It's hard to know from the outside that the project you're building needs the C++ install and query for it).",
        "createdAt": "2017-02-13T15:49:09Z",
        "updatedAt": "2017-02-13T15:49:09Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This may not be the appropriate place to ask this, but if MSBuild's assemblies are no longer GAC'd, how can we ensure that custom MSBuild task assemblies pull in the latest versions of these assemblies present on the system?",
        "createdAt": "2018-04-10T14:36:31Z",
        "updatedAt": "2018-04-10T14:36:31Z",
        "author": {
          "login": "SwooshyCueb"
        }
      },
      {
        "body": "@SwooshyCueb When loaded as part of a build, the task will use the MSBuild assemblies that match the build's entry point--the entry point's binding redirects should ensure that that is the loaded version. Is that what you're asking?",
        "createdAt": "2018-04-10T14:48:18Z",
        "updatedAt": "2018-04-10T14:48:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald I think so, thanks!",
        "createdAt": "2018-04-10T17:16:52Z",
        "updatedAt": "2018-04-10T17:16:52Z",
        "author": {
          "login": "SwooshyCueb"
        }
      }
    ]
  }
}