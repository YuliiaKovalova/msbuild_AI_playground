{
  "number": 3929,
  "title": "Unhandled ObjectDisposedException when terminating build",
  "body": "While building the MSBuild repo itself, I hit Ctrl-C and got an unhandled exception. Despite the claim `The \"Csc\" task failed unexpectedly. ` the callstack suggests it is MSBuild code that is failing - it looks like the MSBuild engine has signaled the CancelationToken on a Pipe and is not expecting that to throw ObjectDisposedException.\r\n\r\nIt seems to be building with `C:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\MSBuild.dll `\r\n\r\n```\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): warning MSB5021: Terminating the task executable \"dotnet\" and its child processes because the build was canceled. [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018: The \"Csc\" task failed unexpectedly. [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018: System.AggregateException: One or more errors occurred. (One or more errors occurred. (Safe handle has been closed)) ---> System.AggregateException: One or more errors occurred. (Safe handle has been closed) ---> System.ObjectDisposedException: Safe handle has been closed [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Runtime.InteropServices.SafeHandle.DangerousAddRef(Boolean& success) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.StubHelpers.StubHelpers.SafeHandleAddRef(SafeHandle pHandle, Boolean& success) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at Interop.Kernel32.CancelIoEx(SafeHandle handle, NativeOverlapped* lpOverlapped) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.IO.Pipes.PipeCompletionSource`1.Cancel() [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018: --- End of stack trace from previous location where exception was thrown --- [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    --- End of inner exception stack trace --- [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    --- End of inner exception stack trace --- [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Cancel() [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018: ---> (Inner Exception #0) System.AggregateException: One or more errors occurred. (Safe handle has been closed) ---> System.ObjectDisposedException: Safe handle has been closed [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Runtime.InteropServices.SafeHandle.DangerousAddRef(Boolean& success) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.StubHelpers.StubHelpers.SafeHandleAddRef(SafeHandle pHandle, Boolean& success) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at Interop.Kernel32.CancelIoEx(SafeHandle handle, NativeOverlapped* lpOverlapped) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.IO.Pipes.PipeCompletionSource`1.Cancel() [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018: --- End of stack trace from previous location where exception was thrown --- [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    --- End of inner exception stack trace --- [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018: ---> (Inner Exception #0) System.ObjectDisposedException: Safe handle has been closed [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Runtime.InteropServices.SafeHandle.DangerousAddRef(Boolean& success) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.StubHelpers.StubHelpers.SafeHandleAddRef(SafeHandle pHandle, Boolean& success) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at Interop.Kernel32.CancelIoEx(SafeHandle handle, NativeOverlapped* lpOverlapped) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.IO.Pipes.PipeCompletionSource`1.Cancel() [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018: --- End of stack trace from previous location where exception was thrown --- [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018:    at System.Threading.CancellationTokenSource.ExecuteCallbackHandlers(Boolean throwOnFirstException)<--- [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\nC:\\git\\msbuild\\artifacts\\.dotnet\\2.1.401\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(469,5): error MSB4018: <--- [C:\\git\\msbuild\\src\\Build\\Microsoft.Build.csproj]\r\n```",
  "state": "CLOSED",
  "createdAt": "2018-11-14T00:57:05Z",
  "updatedAt": "2024-02-21T17:10:31Z",
  "closedAt": "2018-12-20T00:34:14Z",
  "author": {
    "login": "danmoseley"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Ctrl-C is always a good stress test because there's so many possible paths. I also hit https://github.com/Microsoft/msbuild/issues/3891 \ud83d\ude3a ",
        "createdAt": "2018-11-14T00:59:34Z",
        "updatedAt": "2018-11-14T00:59:34Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@stephentoub is this invalid handle check in PipeCompletionSource.Cancel() inherently racy? if the cancelation token can be signaled from any thread, it seems it can race with disposing the PipeStream, which disposes the handle, causing the call to CancelIoEx to throw ODE.\r\nhttps://source.dot.net/#System.IO.Pipes/System/IO/Pipes/PipeStream.cs,380\r\n\r\n```c#\r\n        private void Cancel()\r\n        {\r\n            SafeHandle handle = _threadPoolBinding.Handle;\r\n            NativeOverlapped* overlapped = Overlapped;\r\n \r\n            // If the handle is still valid, attempt to cancel the IO\r\n            if (!handle.IsInvalid && !Interop.Kernel32.CancelIoEx(handle, overlapped))\r\n            {\r\n```\r\n\r\nhttps://source.dot.net/#System.IO.Pipes/System/IO/Pipes/PipeCompletionSource.cs,140\r\n\r\nif that's the case perhaps there needs to be a catch here for ODE.",
        "createdAt": "2018-11-24T17:57:57Z",
        "updatedAt": "2018-11-24T17:58:56Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "In general streams shouldn't be disposed of while any use of the stream is still active, and for this to happen, that suggests there's still an async operation in flight when the stream is disposed. If whatever is disposing the stream first canceled the token(s) for these operations, this failure shouldn't happen. I'd prefer to see that change first if possible. But in addition, sure, we could mitigate fallout by catching the ODE.",
        "createdAt": "2018-11-24T19:23:31Z",
        "updatedAt": "2018-11-24T19:23:31Z",
        "author": {
          "login": "stephentoub"
        }
      },
      {
        "body": "\\+ @jaredpar, because I think the pipe this exception is complaining about is the Csc task -> compiler server IPC pipe. But I don't know if it's a bug in the task, or something the MSBuild engine should do better in cancellation to help the task out.",
        "createdAt": "2018-12-05T15:13:53Z",
        "updatedAt": "2018-12-05T15:23:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "+ @agocke \r\n\r\nJust reviewed our implementation here and I believe we should be correct with the behavior that @stephentoub laid out. All IO with our pipe is done with a cancellation token and that token is properly cancelled when MSBuild cancels our build task. Possible I missed a call but this code is rather straight forward. The IO is really send message to server, read message from server. \r\n\r\nIs there any way to get more info on which pipe failed here? ",
        "createdAt": "2018-12-05T17:11:42Z",
        "updatedAt": "2018-12-05T17:11:42Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "@jaredpar seems the bug is that ManagedCompiler is signaling the base class (MSBuild's class) to terminate the exe it wraps, before it signals the token.\r\n\r\nRoslyn's ManagedCompiler.cs\r\nhttps://github.com/dotnet/roslyn/blob/e2c6c425a9cfece34614fb923ed1db78d2638c6b/src/Compilers/Core/MSBuildTask/ManagedCompiler.cs#L524-L532\r\n\r\nThe base class in this case is MSBuild's ToolTask which sets an event on itself\r\nhttps://github.com/Microsoft/msbuild/blob/324bf26e8c358ed5f8294e9e14dc6ff25e8bf29a/src/Utilities/ToolTask.cs#L773\r\nwhich itself acts on in its notification multiplexer\r\nhttps://github.com/Microsoft/msbuild/blob/324bf26e8c358ed5f8294e9e14dc6ff25e8bf29a/src/Utilities/ToolTask.cs#L810-L824\r\nand it terminates the wrapped tool (one of its handy services it provides), which causes the pipe to get dropped on the floor before the token got canceled.\r\nhttps://github.com/Microsoft/msbuild/blob/324bf26e8c358ed5f8294e9e14dc6ff25e8bf29a/src/Utilities/ToolTask.cs#L854-L858\r\n\r\nThe fix is to flip the order of lines in the Cancel() task.",
        "createdAt": "2018-12-20T00:32:37Z",
        "updatedAt": "2018-12-20T00:33:20Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I'll move this bug to Roslyn.",
        "createdAt": "2018-12-20T00:33:30Z",
        "updatedAt": "2018-12-20T00:33:30Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "This issue was moved to dotnet/roslyn#31950",
        "createdAt": "2018-12-20T00:34:13Z",
        "updatedAt": "2018-12-20T00:34:13Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  }
}