{
  "number": 6279,
  "title": "dotnet pack not working with the net5.0-windows10.0.19041.0 TFM",
  "body": "### Issue Description\r\n\r\nWhen I run `dotnet pack` against `net6.0-windows10.0.19041.0` or `net5.0-windows10.0.19041.0` I get the following exception\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\5.0.201\\Microsoft.Common.CurrentVersion.targets(2505,6): error MSB4062: The \"Microsoft.Build.Tasks.FindInvalidProjectReferences\" task could not be loaded from the assembly Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.  Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\Users\\shane\\Source\\Repos\\ANugetTest\\ClassLibrary1\\ClassLibrary1.csproj]\r\n```\r\n\r\n### Steps to Reproduce\r\n[ANugetTest.zip](https://github.com/dotnet/msbuild/files/6172057/ANugetTest.zip)\r\n\r\nI've included a sln here that has a net6 and a net5 target.\r\n\r\n```cmd\r\nC:\\ANugetTest\\Net6Target>dotnet pack\r\n```\r\n\r\n### Expected Behavior\r\nA nuget package is created\r\n\r\n### Actual Behavior\r\n\r\nThe following exception is thrown\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\5.0.201\\Microsoft.Common.CurrentVersion.targets(2505,6): error MSB4062: The \"Microsoft.Build.Tasks.FindInvalidProjectReferences\" task could not be loaded from the assembly Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.  Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\Users\\shane\\Source\\Repos\\ANugetTest\\ClassLibrary1\\ClassLibrary1.csproj]\r\n```\r\n\r\n### Analysis\r\nI tried setting\r\n`<FindInvalidProjectReferences>false</FindInvalidProjectReferences>`\r\n\r\nBut it didn't help\r\n\r\n`msbuild /t:pack` works\r\n\r\nSome additional context\r\nhttps://microsoft.visualstudio.com/OS/_workitems/edit/32211926\r\n\r\nIt looks like \r\n`dotnet build` doesn't work and fails with the same exception\r\n\r\n### Versions & Configurations\r\n`msbuild -version`\r\n16.10.0.11801\r\n\r\n`dotnet --version`\r\n6.0.100-preview.2.21155.3\r\n\r\n### Attach a binlog\r\n\r\n[msbuild (2).zip](https://github.com/dotnet/msbuild/files/6172101/msbuild.2.zip)\r\n",
  "state": "CLOSED",
  "createdAt": "2021-03-19T14:51:11Z",
  "updatedAt": "2021-04-22T21:33:37Z",
  "closedAt": "2021-04-22T21:33:37Z",
  "author": {
    "login": "PureWeen"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "First pass investigation notes:\r\n\r\nCan repro this bug. Doing a little bit of digging:\r\n\r\nThe FindInvalidProjectReferences task is imported like so in `Microsoft.Common.tasks`:\r\n```\r\n<UsingTask TaskName=\"Microsoft.Build.Tasks.FindInvalidProjectReferences\"          AssemblyName=\"Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" Condition=\"'$(MSBuildAssemblyVersion)' != ''\" />\r\n```\r\n\r\nIn the `Microsoft.Build.Tasks.Core` assembly under my installed `C:\\Program Files\\dotnet\\sdk\\6.0.100-preview.2.21155.3` folder, I don't see `FindInvalidProjectReferences`.\r\n\r\n![image](https://user-images.githubusercontent.com/4691428/112349866-538a2200-8c86-11eb-97a7-7a589a681065.png)\r\n\r\n\r\non `16.10.0.12417` msbuild and running `msbuild /t:pack` I get this error:\r\n```\r\n\"C:\\Users\\bevillal\\Downloads\\ANugetTest\\Net6Target\\Net6Target.csproj\" (pack target) (1) ->\r\n(_GetSdkToolsPathsFromSdk target) ->\r\n  C:\\Users\\bevillal\\.nuget\\packages\\microsoft.projectreunion.foundation\\0.5.0-prerelease\\build\\Microsoft.ApplicationMod\r\nel.Resources.PriGen.targets(833,5): error MSB4062: The \"Microsoft.Build.AppxPackage.GetSdkFileFullPath\" task could not\r\nbe loaded from the assembly C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Dogfood\\MSBuild\\Microsoft\\VisualStudio\\\r\nv16.0\\AppxPackage\\Microsoft.Build.AppxPackage.dll. Could not load file or assembly 'file:///C:\\Program Files (x86)\\Micr\r\nosoft Visual Studio\\2019\\Dogfood\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\AppxPackage\\Microsoft.Build.AppxPackage.dll' or o\r\nne of its dependencies. The system cannot find the file specified. Confirm that the <UsingTask> declaration is correct,\r\n that the assembly and all its dependencies are available, and that the task contains a public class that implements Mi\r\ncrosoft.Build.Framework.ITask. [C:\\Users\\bevillal\\Downloads\\ANugetTest\\Net6Target\\Net6Target.csproj]\r\n```",
        "createdAt": "2021-03-24T16:55:44Z",
        "updatedAt": "2021-03-24T16:55:44Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Team Triage: It looks like `FindInvalidProjectReferences` is explicitly excluded at the project level for netcore apps.",
        "createdAt": "2021-04-21T15:34:35Z",
        "updatedAt": "2021-04-21T15:34:35Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "In standard .NET SDK projects, nothing opts into `FindInvalidProjectReferences` and the missing task is irrelevant. `Microsoft.UI.Xaml.Markup.Compiler.interop.targets` explicitly opts into it in some cases:\r\n\r\n```xml\r\n    <!--\r\n      Enable warning when referenced projects have higher version than the current project\r\n      for Windows Store projects\r\n    -->\r\n    <PropertyGroup>\r\n        <FindInvalidProjectReferences Condition=\"'$(TargetPlatformIdentifier)' == 'Windows' and\r\n                                              '$(TargetPlatformVersion)' &gt;= '8.0'\">true</FindInvalidProjectReferences>\r\n    </PropertyGroup>\r\n```\r\n\r\nExplicitly forcing it to off gets past this error:\r\n\r\n```\r\ndotnet build -p:FindInvalidProjectReferences=false \r\n```\r\n\r\n@PureWeen, is that something you can change or get the Windows folks to change? We can also look at enabling this task.",
        "createdAt": "2021-04-21T16:15:44Z",
        "updatedAt": "2021-04-21T16:15:44Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}