{
  "number": 7298,
  "title": "Roslyn builds with -pack fail with a System.ArrayTypeMismatchException",
  "body": "### Issue Summary\r\nBuilding the Roslyn repo with `-pack` fails with a `System.ArrayTypeMismatchException`, while a plain build works fine.\r\n```\r\n[..]\\sdk\\6.0.101\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(110,5): error MSB4018: The \"GetPackOutputItemsTask\" task failed unexpectedly. [C:\\Users\\Brendan\\Documents\\GitHub\\roslyn\\src\\Compilers\\Core\\Portable\\Microsoft.CodeAnalysis.csproj]\r\n[..]\\sdk\\6.0.101\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(110,5): error MSB4018: System.ArrayTypeMismatchException: Attempted to access an element as a type incompatible with the array. [C:\\Users\\Brendan\\Documents\\GitHub\\roslyn\\src\\Compilers\\Core\\Portable\\Microsoft.CodeAnalysis.csproj]\r\n[..]\\sdk\\6.0.101\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(110,5): error MSB4018:    at System.Collections.Generic.List`1.Add(T item) [C:\\Users\\Brendan\\Documents\\GitHub\\roslyn\\src\\Compilers\\Core\\Portable\\Microsoft.CodeAnalysis.csproj]\r\n[..]\\sdk\\6.0.101\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(110,5): error MSB4018:    at NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.Execute() [C:\\Users\\Brendan\\Documents\\GitHub\\roslyn\\src\\Compilers\\Core\\Portable\\Microsoft.CodeAnalysis.csproj]\r\n[..]\\sdk\\6.0.101\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(110,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\Users\\Brendan\\Documents\\GitHub\\roslyn\\src\\Compilers\\Core\\Portable\\Microsoft.CodeAnalysis.csproj]\r\n[..]\\sdk\\6.0.101\\Sdks\\NuGet.Build.Tasks.Pack\\buildCrossTargeting\\NuGet.Build.Tasks.Pack.targets(110,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\\Users\\Brendan\\Documents\\GitHub\\roslyn\\src\\Compilers\\Core\\Portable\\Microsoft.CodeAnalysis.csproj]\r\n```\r\n\r\nAfter talking with @jaredpar, issue https://github.com/dotnet/msbuild/issues/7108 came up, which produced similar errors. The patch in https://github.com/dotnet/msbuild/pull/7129 isn't available yet in a major release, but *is* available in VS 2022 17.1.0 preview2. Using this preview version (and a VS command line) unfortunately yields the same results.\r\n\r\n@jmarolf has also confirmed that he was able to reproduce this on the latest VS preview (shown below).\r\n![image](https://user-images.githubusercontent.com/6320771/149597932-3c19a798-4a7a-4c67-a5ad-d45bb10ce173.png)\r\n\r\nAnecdotally, I've still been able to build some other packages with `msbuild -pack`, but @rainersigwald asked that I open an issue on this repo, saying \"I can't think of a reason any repo should be able to cause that particular problem,\" which seems sound to me.\r\n\r\n### Versions & Configurations\r\nTested against .NET 6.0.100 and .NET 6.0.101 (6.0.101 required the `\"rollForward\": \"latestPatch\"` trick). I do have several .NET SDKs installed in parallel--including a 32-bit build from the runtime repo. This issue occurs running Roslyn 4.2.0-dev, with the latest commit as of https://github.com/dotnet/roslyn/pull/58865.",
  "state": "CLOSED",
  "createdAt": "2022-01-14T23:30:26Z",
  "updatedAt": "2022-01-18T15:53:02Z",
  "closedAt": "2022-01-18T15:01:06Z",
  "author": {
    "login": "indiemini"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I am able to reproduce this issue on VS 2022 17.1 Preview 2 but _not_ on (currently unreleased) VS 2022 17.1 Preview 3.\r\n\r\nI've zipped up the binary logs for these builds and uploaded them to an internal share here:\r\n- `\\\\mlangfs1\\Public\\jmarolf\\Roslyn-Pack-Failure\\17.1.0-pre.2.0-Pack-Failed.zip`\r\n- `\\\\mlangfs1\\Public\\jmarolf\\Roslyn-Pack-Failure\\17.1.0-pre.3.0-Pack-Succeeds.zip`\r\n\r\nTo reproduce this:\r\n\r\n### Setup\r\n\r\n1. cloned the ` https://github.com/dotnet/roslyn.git` repository\r\n2. setup my remotes as follows:\r\n\r\n```sh\r\n> git remote -v\r\n  origin  https://github.com/jmarolf/roslyn.git (fetch)\r\n  origin  https://github.com/jmarolf/roslyn.git (push)\r\n  upstream        https://github.com/dotnet/roslyn.git (fetch)\r\n  upstream        https://github.com/dotnet/roslyn.git (push)\r\n```\r\n\r\n3. ensured I had the latest version from main\r\n\r\n- `git fetch --all --prune`\r\n- `git checkout main`\r\n- `git reset --hard upstream main`\r\n\r\n4. Updated [global.json](https://github.com/dotnet/roslyn/blob/95c7400c9e3f71930bf56c2bb9face3425f12fc1/global.json) to not download a runtime on restore. The version specified for `tools` now matched the SDK version I had installed.\r\n```diff\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"6.0.100\",\r\n    \"allowPrerelease\": true,\r\n    \"rollForward\": \"latestPatch\"\r\n  },\r\n  \"tools\": {\r\n-    \"dotnet\": \"6.0.100\",\r\n+    \"dotnet\": \"6.0.101\",\r\n    \"vs\": {\r\n      \"version\": \"16.10\"\r\n    },\r\n    \"xcopy-msbuild\": \"16.10.0-preview2\"\r\n  },\r\n  \"msbuild-sdks\": {\r\n    \"Microsoft.DotNet.Arcade.Sdk\": \"7.0.0-beta.22063.6\",\r\n    \"Microsoft.DotNet.Helix.Sdk\": \"7.0.0-beta.22063.6\"\r\n  }\r\n}\r\n\r\n```\r\n\r\n### Steps\r\n0. Open `Developer Command Prompt for VS 2022 Preview` and `cd` to the roslyn git repo, then type the following commands:\r\n1. `git clean -xdf`\r\n2. `Build.cmd -restore -pack -c Release -bl`\r\n\r\nThe binary logs are placed in `artifacts\\log\\Release`",
        "createdAt": "2022-01-14T23:37:06Z",
        "updatedAt": "2022-01-14T23:52:46Z",
        "author": {
          "login": "jmarolf"
        }
      },
      {
        "body": "> I am able to reproduce this issue on VS 2022 17.1 Preview 2 but _not_ on (currently unreleased) VS 2022 17.1 Preview 3.\r\n\r\nLooks like this is the root cause--we haven't actually shipped the fix in a public VS preview yet. Preview 2 was at 01e6196d5df534dec8c16a1417ff04638330c790, which did not contain 390420065c0c896619476b87007d7ec7bc8ebd29. When released, Preview 3 will have the fix.\r\n\r\nWorkarounds include using 32-bit MSBuild (hard in the Roslyn/Arcade environment), privately hacking the `CodeTaskFactory` definition per https://github.com/dotnet/msbuild/issues/7108#issuecomment-983821575, and building with .NET Core MSBuild:\r\n\r\n```\r\n> ./Build.cmd -restore -pack -c Release -bl -msbuildengine dotnet\r\n...\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:03:52.01\r\n```\r\n\r\nSorry for the inconvenience!",
        "createdAt": "2022-01-18T15:00:51Z",
        "updatedAt": "2022-01-18T15:00:51Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Duplicate of #7108.",
        "createdAt": "2022-01-18T15:01:06Z",
        "updatedAt": "2022-01-18T15:01:06Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "no problem, glad we could get to the bottom of it.",
        "createdAt": "2022-01-18T15:53:02Z",
        "updatedAt": "2022-01-18T15:53:02Z",
        "author": {
          "login": "jmarolf"
        }
      }
    ]
  }
}