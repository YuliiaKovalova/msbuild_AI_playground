{
  "number": 4943,
  "title": "ResolveAssemblyReference keeps only one reference with the same assembly identity even if they have different aliases",
  "body": "This was reported in a comment on a Visual Studio feedback item (I think the reporter was @rihadavid): https://developercommunity.visualstudio.com/content/problem/100351/c-extern-alias-reference-not-working-in-vs2017.html#comment-153540\r\n\r\nIn the repro project, there are two assemblies `Facebook.4.13.dll` and `Facebook4.27.dll`, both with assembly identity `Facebook, Version=4.10.0.0, Culture=neutral, PublicKeyToken=null`.\r\n\r\nRAR sees both\r\n\r\n```\r\nTask \"ResolveAssemblyReference\" (TaskId:10)\r\n  Task Parameter:\r\n      Assemblies=\r\n          Facebook.4.13\r\n                  Aliases=Facebook413\r\n                  HintPath=.\\Facebook.4.13.dll\r\n          Facebook.4.27, Version=4.10.0.0, Culture=neutral, processorArchitecture=MSIL\r\n                  Aliases=Facebook427\r\n                  HintPath=.\\Facebook.4.27.dll\r\n                  SpecificVersion=False\r\n```\r\n\r\nBut follows only one:\r\n\r\n```\r\n  Primary reference \"Facebook, Version=4.10.0.0, Culture=neutral, PublicKeyToken=null\". (TaskId:10)\r\n      Resolved file path is \"S:\\repro\\devdiv\\DevDiv\\484390\\ConsoleApp2\\Facebook.4.27.dll\". (TaskId:10)\r\n      Reference found at search path location \"{CandidateAssemblyFiles}\". (TaskId:10)\r\n          For SearchPath \"{CandidateAssemblyFiles}\". (TaskId:10)\r\n          Considered \"Facebook.4.13.dll\",\r\n  \t\t\tbut its name \"Facebook.4.13\"\r\n  \t\t\tdidn't match the expected name \"Facebook, Version=4.10.0.0, Culture=neutral, PublicKeyToken=null\". (TaskId:10)\r\n      The ImageRuntimeVersion for this reference is \"v4.0.30319\". (TaskId:10)\r\n...\r\n  Output Item(s): \r\n      ReferencePath=\r\n          S:\\repro\\devdiv\\DevDiv\\484390\\ConsoleApp2\\Facebook.4.27.dll\r\n                  Aliases=Facebook427\r\n                  CopyLocal=true\r\n                  FusionName=Facebook, Version=4.10.0.0, Culture=neutral, PublicKeyToken=null\r\n                  HintPath=.\\Facebook.4.27.dll\r\n                  ImageRuntime=v4.0.30319\r\n                  OriginalItemSpec=Facebook.4.27, Version=4.10.0.0, Culture=neutral, processorArchitecture=MSIL\r\n                  ReferenceSourceTarget=ResolveAssemblyReference\r\n                  ResolvedFrom={CandidateAssemblyFiles}\r\n                  SpecificVersion=False\r\n                  Version=4.10.0.0\r\n```\r\n\r\nWhich then results in a compiler error\r\n\r\n```\r\nProgram.cs(1,14): error CS0430: The extern alias 'Facebook413' was not specified in a /reference option [S:\\repro\\devdiv\\DevDiv\\484390\\ConsoleApp2\\ConsoleApp2.csproj]\r\n```\r\n\r\nbecause only one assembly+alias was passed to the compiler (`/reference:Facebook427=S:\\repro\\devdiv\\DevDiv\\484390\\ConsoleApp2\\Facebook.4.27.dll`).\r\n\r\nIf you manually bypass MSBuild and RAR, the compiler can handle the two assemblies.\r\n\r\nThis appears to be a very longstanding issue and not a regression; it repros in MSBuild `4.8.3921.0`, `14.0.23107.0`, and current (`16.5.0-preview-19570-01+9c33693c4`).",
  "state": "OPEN",
  "createdAt": "2019-11-25T19:44:15Z",
  "updatedAt": "2024-02-21T16:30:20Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Task: Resolve Assembly References (RAR)",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "I've been banging my head against a wall trying to figure out why this wasn't working, and now I've come across this.\r\n\r\nI have this in my `csproj`\r\n```\r\n<ItemGroup>\r\n  <Reference Include=\"ProtoPromise, Configuration=Release Without Progress\">\r\n    <HintPath>..\\BuiltDLLs\\ProtoPromise_NP.dll</HintPath>\r\n    <Aliases>ProtoPromise_Without_Progress</Aliases>\r\n  </Reference>\r\n  <Reference Include=\"ProtoPromise, Configuration=Release With Progress\">\r\n    <HintPath>..\\BuiltDLLs\\ProtoPromise_P.dll</HintPath>\r\n    <Aliases>ProtoPromise_With_Progress</Aliases>\r\n  </Reference>\r\n</ItemGroup>\r\n```\r\n\r\nI try to use this in code\r\n```\r\nextern alias ProtoPromise_Without_Progress;\r\nextern alias ProtoPromise_With_Progress;\r\n```\r\nAnd only one of them works (whichever is put last in the `csproj`). The other one has error `CS0430: The extern alias 'Alias_Name' was not specified in a /reference option`.",
        "createdAt": "2020-11-08T11:35:34Z",
        "updatedAt": "2020-11-08T11:35:34Z",
        "author": {
          "login": "timcassell"
        }
      },
      {
        "body": "This is still an issue. In this case, only the `extern alias` of the first occurrence of NuGet PackageReference is recognized v12. v11 results in compilation error `CS0430`\r\n\r\n`csproj`\r\n```\r\n<ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.3\" Aliases=\"v12\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.2\" Aliases=\"v11\" />\r\n</ItemGroup>\r\n```\r\n\r\n\r\n`Program.cs (C# 11 / NET 7)`\r\n```\r\nextern alias v12;\r\nextern alias v11;\r\n\r\nusing Json12 = v12::Newtonsoft.Json;\r\nusing Json11 = v11::Newtonsoft.Json;\r\n\r\nJson12.JsonConvert.SerializeObject(new { message = \"Hello, world!\" });\r\nJson11.JsonConvert.SerializeObject(new { message = \"Hello, world!\" });\r\n```\r\n\r\nI even stumped ChatGPT with this one, it seemed so sure that it should work.\r\n<img width=\"551\" alt=\"image\" src=\"https://user-images.githubusercontent.com/360359/215599662-8efc7987-e633-49c4-8020-ec9f9d965b9d.png\">\r\n",
        "createdAt": "2023-01-30T21:31:57Z",
        "updatedAt": "2023-01-30T21:31:57Z",
        "author": {
          "login": "tdhatcher"
        }
      },
      {
        "body": "I am also facing exactly similar issue. When will this be fixed?",
        "createdAt": "2023-04-11T03:59:27Z",
        "updatedAt": "2023-04-11T03:59:27Z",
        "author": {
          "login": "shethaadit"
        }
      }
    ]
  }
}