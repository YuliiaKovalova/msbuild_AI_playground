{
  "number": 3064,
  "title": "File.cs.cshtml cannot become EmbeddedResource",
  "body": "_From @davkean on March 5, 2018 22:43_\n\n_From @abpiskunov on March 2, 2018 6:17_\n\n1. Create a new core Web app\r\n2. in File Explorer find some cshtml page (Error.cshtml and rename it to Error.cs.cshtml.\r\n3. In VS change type of Error.cs.cshtml to EmbeddedResource (notice it will be removed from Content in csproj)\r\n4. Build\r\n5. Open assembly manifest and see - no embedded resources\r\n6. When rename file to Error.cshtml , build, assembly manifest does contain EmbeddedResource.\r\n\r\nSee this issue opened by customer originally : https://github.com/aspnet/Tooling/issues/1066#issuecomment-369131680 \r\n\r\n\r\n\n\n_Copied from original issue: dotnet/project-system#3336_\n\n_Copied from original issue: dotnet/sdk#2024_",
  "state": "CLOSED",
  "createdAt": "2018-03-07T23:23:05Z",
  "updatedAt": "2024-02-21T17:14:09Z",
  "closedAt": "2020-11-23T23:20:17Z",
  "author": {
    "login": "dsplaisted"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.9"
  },
  "comments": {
    "nodes": [
      {
        "body": "_From @davkean on March 5, 2018 22:43_\n\nThis would be a build issue, no?",
        "createdAt": "2018-03-07T23:23:06Z",
        "updatedAt": "2018-03-07T23:23:06Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "_From @davkean on March 5, 2018 22:43_\n\n_From @abpiskunov on March 2, 2018 16:51_\n\nSounds like that or even could be sdk related, Content item type might somehow interfere with EmbeddedResource. ",
        "createdAt": "2018-03-07T23:23:07Z",
        "updatedAt": "2018-03-07T23:23:07Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "_From @davkean on March 5, 2018 22:43_\n\n_From @Pilchie on March 2, 2018 19:43_\n\n@livarcocc @nguerrera @dsplaisted ?",
        "createdAt": "2018-03-07T23:23:07Z",
        "updatedAt": "2018-03-07T23:23:07Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "_From @davkean on March 5, 2018 22:43_\n\n_From @nguerrera on March 2, 2018 20:38_\n\nCould be sdk or msbuild. Feel free to move to sdk for next look.",
        "createdAt": "2018-03-07T23:23:08Z",
        "updatedAt": "2018-03-07T23:23:08Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "_From @davkean on March 5, 2018 22:43_\n\n_From @dsplaisted on March 2, 2018 20:40_\n\nI want to take a look at this, but I suspect it is CPS not understanding how to modify the project to change the item type given the default globs that the project has.",
        "createdAt": "2018-03-07T23:23:08Z",
        "updatedAt": "2018-03-07T23:23:08Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "_From @davkean on March 5, 2018 22:43_\n\n_From @abpiskunov on March 2, 2018 21:56_\n\nwe have a vs feedback bug associated with that 574198. Who should i assign to? Who is doing first investigation here?",
        "createdAt": "2018-03-07T23:23:09Z",
        "updatedAt": "2018-03-07T23:23:09Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "_From @davkean on March 5, 2018 22:43_\n\n_From @abpiskunov on March 5, 2018 20:7_\n\nOk i am assigning the bug to Daniel first. Please route it further if it is not yours.",
        "createdAt": "2018-03-07T23:23:10Z",
        "updatedAt": "2018-03-07T23:23:10Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "It turns out the issue here is that MSBuild (via the `AssignCulture` task) thinks that an `EmbeddedResource` with a name of `Error.cs.cshtml` is a Culture-specific resource for the `cs` culture.  So ends up going in the satellite assembly for `cs`.\r\n\r\nRelated suggestion from @nguerrera: https://github.com/Microsoft/msbuild/issues/1454#issuecomment-265621913\r\n\r\n> Another approach would be to respect explicit WithCulture metadata as implying that no check is required.\r\n\r\nThis would let you explicitly turn this off if you don't want it.",
        "createdAt": "2018-03-07T23:27:22Z",
        "updatedAt": "2018-03-07T23:27:22Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "I have the same issue on my side. It looks like the [one](https://github.com/aspnet/Tooling/issues/1066) @rjamesnw posted. Some files get put into a satellite assembly because a part of the file name looks like a culture name. \r\n\r\nI would like to the `AssignCulture` task to skip the file. The related issue #1454 is about *forcing* the task to assign a culture. I wish to do the *opposite*: preventing the task from executing.\r\n\r\nIs there a workaround available?",
        "createdAt": "2018-09-04T21:29:10Z",
        "updatedAt": "2018-09-04T21:29:10Z",
        "author": {
          "login": "sandrock"
        }
      },
      {
        "body": "I was optimistic about this but it didn't quite work\r\n\r\n## Incomplete workaround\r\n\r\n```xml\r\n  <Target Name=\"WorkaroundMSBuild3064\" BeforeTargets=\"SplitResourcesByCulture\">\r\n    <!-- Workaround for https://github.com/Microsoft/msbuild/issues/3064 -->\r\n    <ItemGroup>\r\n      <_ResourcesWithCultureFilename Include=\"@(EmbeddedResource)\" Condition=\"$([System.String]::Copy('%(Filename)').Contains('.cs'))\" />\r\n\r\n      <_MixedResourceWithNoCulture Include=\"@(_ResourcesWithCultureFilename)\">\r\n        <WithCulture>false</WithCulture>\r\n      </_MixedResourceWithNoCulture>\r\n\r\n      <EmbeddedResource Remove=\"@(_ResourcesWithCultureFilename)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n\r\nIt doesn't work because the `CreateManifestResourceNames` target calls `CreateCSharpManifestResourceName` which does its own independent rediscovery of culture, mangling it to, for example, `ManifestResourceName = cs\\3064.Views.Home.About.cshtml`.\r\n\r\n_That_ could be avoided by explicitly specifying a `ManifestResourceName`, but I can't think of a good way to do the transform automatically--that's why it's done in a task in the first place.\r\n\r\nA full solution would need to address the `CreateCSharpManifestResourceName` culture-discovery problem too.",
        "createdAt": "2018-09-04T22:41:31Z",
        "updatedAt": "2018-09-04T22:41:31Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Related feedback tickets (internal links):\r\n\r\n[Cannot embedded resource that contains \u201c.ca.\u201d (like something.ca.txt)](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1228576/)\r\n```\r\nI found that when I try to embedded resource with \u201c.ca.\u201d in its name, build fails to do it.\r\n\r\n\r\nRepro steps:\r\n\r\n\u2022 Create some folder in project.\r\n\r\n\u2022 Put there files ca.txt, .ca.txt, somethimg.ca.txt.\r\n\r\n\u2022 Build project and verify embedded resources.\r\n```\r\n[Embedded resource won't work for some filenames?](https://dev.azure.com/devdiv/DevDiv/_queries/edit/1115155/)\r\n```\r\nIf I have an embedded resource file called \u201clight.sms.txt\u201d, then it is not embedded, but if I change it to \u201clight.sms1.txt\u201d, then it is embeded \u2026 emm \u2026 why?\r\n\r\n\r\nHere\u2019s what I do\u2026\r\n\r\n\r\n\r\nCreate a new Vb.Net WinForm project\r\n\r\nAdd a text file called light.sms.txt and change build action to Embedded resource\r\n\r\nPaste this code in Form1 \u2026\r\n\r\n\r\nPrivate Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load\r\n\r\nStatic embededResources As String() = GetType(Form1). Assembly.GetManifestResourceNames()\r\n\r\nMsgBox(embededResources.Length.ToString)\r\n\r\nEnd Sub\r\n\r\n\r\nRun the app - the result is 3\r\n\r\nChange the embbeded filename to light.sms1.txt\r\n\r\nRun the app - the result is now 4\r\n\r\n\r\nWhy doesn\u2019t \u201clight.sms.txt\u201d get embedded?\r\n```",
        "createdAt": "2020-10-14T21:55:16Z",
        "updatedAt": "2020-10-14T22:00:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "same issue, for me, the bad file name is `Resources.en.xml` or `Resources.zh.xml`.",
        "createdAt": "2020-10-15T01:29:53Z",
        "updatedAt": "2020-10-15T01:29:53Z",
        "author": {
          "login": "ahdung"
        }
      }
    ]
  }
}