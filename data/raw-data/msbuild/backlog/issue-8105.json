{
  "number": 8105,
  "title": "Proposal : Extend DownloadFile to allow custom HTTP Headers ",
  "body": "Problem statement:\r\nThe current implementation of DownloadFile does not expose any mechanism to add headers to the outgoing request. This prevents things like authenticated downloads.\r\n\r\nThe mechanics require to accomplish:\r\n\r\nAdd a parameter named `Headers` to the existing `DownloadFile` that would allow for adding additional HTTP Headers to the request.\r\n```xml\r\n<DownloadFile\r\n  Url=\"...\"\r\n  Destination=\"...\" \r\n  Headers=\"Authorization: token $(AUTH_TOKEN)\"/>\r\n```\r\nUse a semi-colon separated list for multiple headers:\r\n\r\n```xml\r\n<DownloadFile\r\n  Url=\"...\"\r\n  Destination=\"...\" \r\n  Headers=\"Authorization: token $(AUTH_TOKEN);Pragma: no-cache\"/>\r\n```\r\n",
  "state": "OPEN",
  "createdAt": "2022-10-31T14:37:08Z",
  "updatedAt": "2024-01-31T08:15:54Z",
  "closedAt": null,
  "author": {
    "login": "mcumming"
  },
  "labels": [
    "backlog",
    "Feature Request",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I am very hesitant to do this, because I don't want build logs to have your tokens in them. The ideal approach would be for the task to internally get the token from a secret store, which is more detailed than we can build into the core of MSBuild itself.",
        "createdAt": "2022-11-03T17:03:25Z",
        "updatedAt": "2022-11-03T17:03:25Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "there should be no worry to log everything passed in Headers.  I'd suggest \"logging=enabled/disabled\" attribute for Headers (disabled by default). So, if someone is passing something insensitve, he may enable logging. Auth won't be logged by default (unless triggered manually)\r\n\r\n",
        "createdAt": "2023-05-17T09:58:04Z",
        "updatedAt": "2023-05-17T09:58:04Z",
        "author": {
          "login": "ilia-shipitsin"
        }
      }
    ]
  }
}