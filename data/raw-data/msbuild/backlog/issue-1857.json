{
  "number": 1857,
  "title": "Using tools (exe, ps1) from nuget package - package path property",
  "body": "Is it currently possible to get path to some package, since i want to use executable in my target?\r\n\r\nLets imagine situation where i have custom targets. I want to install package NuGet.CommandLine which contains nuget.exe and i want to use it from my custom target from `<exec>` element. How can i get path to this exe which is set as dependency for my project.\r\n\r\nThank you",
  "state": "CLOSED",
  "createdAt": "2017-03-13T13:14:47Z",
  "updatedAt": "2024-02-21T17:20:50Z",
  "closedAt": "2017-03-14T19:06:03Z",
  "author": {
    "login": "kukjevov"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "There is currently no built in way to do this.  NuGet does generate an `project.assets.json` file which provides a hint path of where packages are located.\r\n\r\n```json\r\n{\r\n  \"libraries\": {\r\n    \"NuGet.CommandLine/3.5.0\": {\r\n      \"sha512\": \"hXv/6hCKfdvzvuD+ww9uOhHBb2YerRvswtfPNBzY0MdxZLXB3M8z9LvlYhCVJYt+OBmtbwof+cg6TlZ8kmFXfg==\",\r\n      \"type\": \"package\",\r\n      \"path\": \"nuget.commandline/3.5.0\",\r\n      \"files\": [\r\n        \"nuget.commandline.3.5.0.nupkg.sha512\",\r\n        \"nuget.commandline.nuspec\",\r\n        \"tools/NuGet.exe\"\r\n      ]\r\n    }\r\n  },\r\n  \"packageFolders\": {\r\n    \"C:\\\\Users\\\\UserA\\\\.nuget\\\\packages\": {}\r\n  }\r\n}\r\n```\r\n\r\nWe could possibly add a method to [ToolLocationHelper](https://github.com/Microsoft/msbuild/blob/master/src/Utilities/ToolLocationHelper.cs) that would locate the package and return its path.  It would still be up to the target author to provide the rest of the path like `tools\\NuGet.exe`.  We don't currently have a way to parse JSON so we'd need to reference and ship something to do it.\r\n\r\nPerhaps the NuGet folks should provide a task:\r\n\r\n```xml\r\n<Target Name=\"RunMyTool\">\r\n  <GetNuGetToolPath PackageId=\"NuGet.CommandLine\">\r\n      <Output TaskParameter=\"ToolPath\" PropertyName=\"MyToolPath\" />\r\n  </GetNuGetToolPath>\r\n\r\n  <Exec Command=\"$(MyToolPath)\" />\r\n</Target>\r\n```\r\n\r\nThis would rely on NuGet shipping a `<GetNuGetToolPath />` task in their SDK.  @rrelyea does NuGet have any potential plans here?\r\n\r\nThe DotNet CLI was working on functionality like this, @NTaylorMullen  might know more, or at least who would.  I think it would only work if your build is running under `dotnet.exe`.",
        "createdAt": "2017-03-13T14:49:05Z",
        "updatedAt": "2017-03-13T14:49:05Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "The NuGet package path is available as `$(NuGetPackageFolders)` and could be used to determine the location of a tool - provided you know package name and version as well as the tool's file name (as long as NuGet's package cache folder structure doesn't change):\r\n```xml\r\n<Exec Command=\"$(NuGetPackageFolders)nuget.commandline\\3.5.0\\tools\\NuGet.exe\" />\r\n```\r\nNote that the package folder name is lowercase - which is another implementation detail of nuget you'd have to know about.",
        "createdAt": "2017-03-13T21:24:11Z",
        "updatedAt": "2017-03-13T21:24:24Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "For packages that are intended to be used like this, I would suggest that they include a `.props` file that sets a property with the appropriate path.  The package can use `$(MSBuildThisFileDirectory)` to set the property to the correct full path.\r\n\r\nOf course, this only helps if you can make the change to the package you are trying to consume.",
        "createdAt": "2017-03-13T21:55:58Z",
        "updatedAt": "2017-03-13T21:55:58Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "Thank you for all your answers. I discovered (using MSBuild Structured Log tool) that `$(NuGetPackageFolders)` you mentioned, and i had exactly same thought to use it.\r\n\r\nBut i can see there also `$(NuGetPackageRoot)` which points to same path. What is difference between these 2? I expect that these two properties are set only in MSBuild 15.0 and higher, is that correct?\r\n\r\nAnother question is about that `$(MSBuildThisFileDirectory)`, because in MSBuild Structured Log tool i can`t see that property set. Does it still exists and can be used in MSBuild 15.0?\r\n\r\nThank you",
        "createdAt": "2017-03-14T06:47:57Z",
        "updatedAt": "2017-03-14T06:47:57Z",
        "author": {
          "login": "kukjevov"
        }
      },
      {
        "body": "`$(MSBuildThisFileDirectory)` is a [reserved property](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-reserved-and-well-known-properties), so it may not get logged but is available for use.\r\n\r\nI don't know the distinction between `$(NuGetPackageFolders)` and `$(NuGetPackageRoot)`. I think the best place to ask for clarification there is in a new issue at https://github.com/nuget/home.\r\n\r\nClosing this since it's clarification around NuGet behaviors, not core MSBuild. If you still have questions, please open a NuGet issue.",
        "createdAt": "2017-03-14T19:06:03Z",
        "updatedAt": "2017-03-14T19:06:03Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Regarding NuGetPackageFolders vs NuGetPackageRoot, they are different values for me.\r\n\r\nNuGetPackageFolders:\r\n\r\n    C:\\Users\\FooUser\\.nuget\\packages\\;C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages\r\n\r\nNuGetPackageRoot:\r\n\r\n    C:\\Users\\FooUser\\.nuget\\packages\\",
        "createdAt": "2022-05-27T22:04:44Z",
        "updatedAt": "2022-05-27T22:04:44Z",
        "author": {
          "login": "JVimes"
        }
      },
      {
        "body": "There is now a nice solution to this issue: NuGet's [`GeneratePathProperty`](https://docs.microsoft.com/nuget/consume-packages/package-references-in-project-files#generatepathproperty) functionality.",
        "createdAt": "2022-05-31T15:04:11Z",
        "updatedAt": "2022-05-31T15:04:11Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}