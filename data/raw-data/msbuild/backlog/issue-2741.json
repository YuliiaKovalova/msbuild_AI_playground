{
  "number": 2741,
  "title": "StackOverFlow Exception on Mac - fine on Windows",
  "body": "_From @RickStrahl on November 22, 2017 3:53_\n\n## Steps to reproduce\r\nI just installed new 2.0.3 SDK on Mac and am trying to run a project that's working fine on Windows.\r\n\r\nWhen I run any` dotnet` command I get:\r\n![image](https://user-images.githubusercontent.com/1374013/33108732-ca17aed0-cee1-11e7-9340-e5b35fbc9215.png)\r\n\r\nI'm using code from this repo:\r\nhttps://github.com/RickStrahl/Westwind.Globalization\r\n\r\nThere are multiple .NET projects, the .NET Core one in question is the sample project in:\r\n./src/NetCore/Westwind.Globalization.Sample.AspNetCore\r\n\r\nand I'm running out of that folder.\r\n\r\nThis project has another project reference higher up the folder hierarchy so I'm wondering if that may be the problem. \r\n\r\nFWIW, I restore a couple other projects on the same machine and setup and using the same SDK and they work fine. Something is different but I can't figure out what \r\n\r\n## Expected  behavior\r\nNo stack overflow.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nProduct Information:\r\n Version:            2.0.3\r\n Commit SHA-1 hash:  eb1d5ee318\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.3/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n\r\n\n\n_Copied from original issue: dotnet/cli#8084_",
  "state": "OPEN",
  "createdAt": "2017-11-22T22:08:39Z",
  "updatedAt": "2024-02-21T16:35:26Z",
  "closedAt": null,
  "author": {
    "login": "livarcocc"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Can you show what's the PWD that you are running this command from? Like, the full path? Also, any chance you have cyclic symbolic links somewhere in the directories used by the build? We have seen this in the past where we just keep following a cyclic symbolic link until we run out of memory.\r\n\r\nI will try to repro this locally as well.",
        "createdAt": "2017-11-22T22:08:40Z",
        "updatedAt": "2017-11-22T22:08:40Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "_From @RickStrahl on November 22, 2017 9:50_\n\nThanks for taking a look at this.\r\n\r\nYour symbolic link suggestions pointed me into the right direction - there's an odd path that gets 'generated' when running on the Mac - as part of my application's code. This is a Windows app that's been moved to .NET Core and it appears there's something writing and errand file/path (backslash vs fwd slashes most likely).\r\n\r\nAnyway this is the culprit:\r\n\r\n![image](https://user-images.githubusercontent.com/1374013/33120576-93eaf72e-cf16-11e7-9dda-5248b290334f.png)\r\n\r\nNow I need to figure out what's creating the file there. Ugh.\r\n\r\n\r\n",
        "createdAt": "2017-11-22T22:08:40Z",
        "updatedAt": "2017-11-22T22:08:40Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "Makes sense.\r\n\r\nI am going to go ahead and close this issue for now. If it turns out there is something else going on here, feel free to comment and re-activate.\r\n\r\nThanks for getting back to us on this.",
        "createdAt": "2017-11-22T22:08:41Z",
        "updatedAt": "2017-11-22T22:08:41Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "_From @RickStrahl on November 22, 2017 21:48_\n\nYup, but there probably is a bug there anyway - no matter what we probably shouldn't see a StackOverflow exception.\r\n\r\nIn this case it's just a badly named folder (not a symlink). I think just having a sub-folder named `\\` is the issue here.",
        "createdAt": "2017-11-22T22:08:41Z",
        "updatedAt": "2017-11-22T22:08:41Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "You are right. We just checked and this happens inside the msbuild process.\r\n\r\nI am going to go ahead and move it to msbuild's repo.",
        "createdAt": "2017-11-22T22:08:42Z",
        "updatedAt": "2017-11-22T22:08:42Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "![image](https://user-images.githubusercontent.com/27845214/97386845-f53b5c00-18fe-11eb-86fe-039d3c4b8f38.png)\r\n\r\n\r\nGettiing Stackoverflow with error code 134 while inserting a new entity in mssql-server. Currently using dotnet core 3.1.4, ef core 3.1.4 and mssql-server (default port on docker)",
        "createdAt": "2020-10-28T03:22:54Z",
        "updatedAt": "2020-10-28T03:22:54Z",
        "author": {
          "login": "rafiulgits"
        }
      },
      {
        "body": "If there is a way to use .NET 5.0, you might see more of a call stack for the stack overflow. (https://github.com/dotnet/runtime/pull/35418)",
        "createdAt": "2020-11-13T23:17:29Z",
        "updatedAt": "2020-11-13T23:17:29Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  }
}