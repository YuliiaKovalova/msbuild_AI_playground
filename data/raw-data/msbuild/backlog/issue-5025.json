{
  "number": 5025,
  "title": "Use vs.relatedProcessFiles to prevent torn state on VS upgrade",
  "body": "It's possible for an application outside of VS to use and lock MSBuild assemblies. If Visual Studio Setup then tries to update MSBuild assemblies, the files in use will require a reboot, and possibly be mismatched across files (for instance, if `Microsoft.Build.Framework.dll` is in use but the engine isn't, there might be `Microsoft.Build.dll` might be updated to a newer version while Framework is stuck waiting for reboot.\r\n\r\nThe VS installer supports `vs.relatedProcessFile` and `vs.relatedProcessDirectory` to tell the Windows Restart Manager to check whether the file/files in the folder are in use and offer to kill the process at setup/upgrade time. We should add MSBuild assemblies (or maybe the whole folder?) to this in our `.swr`.\r\n\r\n[Internal-only doc link](https://microsoft.sharepoint.com/teams/DD_Willow/_layouts/15/Doc.aspx?sourcedoc={9f9aba5f-0856-4a8d-a1bc-efb69c4ffe54}&action=edit&wd=target%28Dev%20Docs.one%7C39a1cebd-3922-4c5a-b90c-e1c6bb99ee00%2FAuthoring%20related%20process%20directories%20%5C%2F%20files%20and%20services%7C7ca87616-4a45-461c-bda2-73f03af9acf1%2F%29)",
  "state": "CLOSED",
  "createdAt": "2020-01-02T15:51:16Z",
  "updatedAt": "2024-02-21T17:05:35Z",
  "closedAt": "2020-02-05T18:32:52Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.5 Preview 3 (Sprint 165)"
  },
  "comments": {
    "nodes": []
  }
}