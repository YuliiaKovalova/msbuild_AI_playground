{
  "number": 5904,
  "title": "Custom Tasks don't work with NET5.0",
  "body": "Hi, I'm completely unable to run custom MsBuild Tasks targetting `net5.0`.\r\nI created a small repository to show the issue: https://github.com/isc30/custom-msbuild-task\r\n\r\nThe only thing I'm doing is creating 1 project with the task (`CustomTask`) and running it when building the consumer (`TaskConsumer`).\r\n\r\nThis seems like a massive blocker when working with `net5.0`.\r\n\r\n\r\nDetailed error:\r\n```\r\nSeverity    Code    Description    Project    File    Line    Suppression State\r\nError    MSB4018    The \"TestTask\" task failed unexpectedly.\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at CustomTask.TestTask.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\nWRN: Assembly binding logging is turned OFF.\r\nTo enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\nNote: There is some performance penalty associated with assembly bind failure logging.\r\nTo turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n    TaskConsumer    E:\\projects\\custom-msbuild-task\\TaskConsumer\\TaskConsumer.csproj    13\r\n```\r\n\r\n`dotnet --list-sdks`: 5.0.100 [C:\\Program Files\\dotnet\\sdk]",
  "state": "CLOSED",
  "createdAt": "2020-11-21T14:33:08Z",
  "updatedAt": "2021-07-28T19:13:14Z",
  "closedAt": "2021-01-27T23:39:14Z",
  "author": {
    "login": "isc30"
  },
  "labels": [
    "bug",
    "under-investigation",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "We are experiencing a similar issue in our build environment.\r\nOur build uses a number of custom tasks and some of them began failing last week after updating MSBuild tools 2019 to latest.\r\n\r\n```\r\nT:\\w\\a2f8e43c0c6189c\\Build\\Build.proj(19, 5): error MSB4018: The \"MakeApplicationInstaller\" task failed unexpectedly.\r\n            System.IO.FileLoadException: Could not load file or assembly 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n            File name: 'System.Collections.Immutable, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' ---> System.IO.FileLoadException: Could not load file or assembly 'System.Collections.Immutable, Version=1.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n            File name: 'System.Collections.Immutable, Version=1.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n            \r\n            \r\n            WRN: Assembly binding logging is turned OFF.\r\n            To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\n            Note: There is some performance penalty associated with assembly bind failure logging.\r\n            To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n            \r\n            \r\n            Server stack trace: \r\n               at System.Signature.GetSignature(Void* pCorSig, Int32 cCorSig, RuntimeFieldHandleInternal fieldHandle, IRuntimeMethodInfo methodHandle, RuntimeType declaringType)\r\n               at System.Reflection.RuntimeMethodInfo.FetchNonReturnParameters()\r\n               at System.Reflection.RuntimeMethodInfo.GetParameters()\r\n               at System.Diagnostics.StackTrace.ToString(TraceFormat traceFormat)\r\n               at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n               at System.Exception.GetObjectData(SerializationInfo info, StreamingContext context)\r\n               at System.TypeInitializationException.GetObjectData(SerializationInfo info, StreamingContext context)\r\n               at System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo.InitSerialize(Object obj, ISurrogateSelector surrogateSelector, StreamingContext context, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, ObjectWriter objectWriter, SerializationBinder binder)\r\n               at System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo.Serialize(Object obj, ISurrogateSelector surrogateSelector, StreamingContext context, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, ObjectWriter objectWriter, SerializationBinder binder)\r\n               at System.Runtime.Serialization.Formatters.Binary.ObjectWriter.Serialize(Object graph, Header[] inHeaders, __BinaryWriter serWriter, Boolean fCheck)\r\n               at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream serializationStream, Object graph, Header[] headers, Boolean fCheck)\r\n               at System.Runtime.Remoting.Channels.CrossAppDomainSerializer.SerializeMessageParts(ArrayList argsToSerialize)\r\n               at System.Runtime.Remoting.Messaging.SmuggledMethodReturnMessage..ctor(IMethodReturnMessage mrm)\r\n               at System.Runtime.Remoting.Messaging.SmuggledMethodReturnMessage.SmuggleIfPossible(IMessage msg)\r\n               at System.Runtime.Remoting.Channels.CrossAppDomainSink.DoDispatch(Byte[] reqStmBuff, SmuggledMethodCallMessage smuggledMcm, SmuggledMethodReturnMessage& smuggledMrm)\r\n               at System.Runtime.Remoting.Channels.CrossAppDomainSink.DoTransitionDispatchCallback(Object[] args)\r\n            \r\n            Exception rethrown at [0]: \r\n               at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)\r\n               at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)\r\n               at Pleasant.Build.TaskFactories.IProjectTaskRunner.Execute(String projectFileContent, IEnumerable`1 properties, IEnumerable`1 itemGroups, ProjectTaskLogger logger)\r\n               at Pleasant.Build.TaskFactories.ProjectTask.Execute()\r\n               at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n               at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\nThis was working fine on just the previous version of MSBuild and the only other change seems to be the new reliance on .NET 5.\r\n\r\n_Note: these tasks were targetted at .NET 4.6 and depended on `Microsoft.Build.*` packages v15.7.179_",
        "createdAt": "2020-11-23T18:06:37Z",
        "updatedAt": "2020-11-23T18:06:37Z",
        "author": {
          "login": "PleasantD"
        }
      },
      {
        "body": "I did some checking with ILSpy.\r\n\r\n`MSBuild.exe` v16.8.2.56705 (distributed with VS 2019 v16.8.2) has a direct dependency on `System.Collections.Immutable` v5.0.0.0\r\n\r\n`MSBuild.exe` v16.7.0.37604 (for reference) had no direct dependency on `System.Collections.Immutable` at all.\r\nThere was an indirect reference via `Microsoft.Build`, but it was v1.2.3.0\r\n\r\nSo it looks like the newest MSBuild has taken some new dependencies and caused breaking dependency changes.",
        "createdAt": "2020-11-23T19:02:55Z",
        "updatedAt": "2020-11-23T19:06:40Z",
        "author": {
          "login": "PleasantD"
        }
      },
      {
        "body": "For what it's worth, I was able to bypass the problem by updating our custom build tasks project to depend explicitly on `System.Collections.Immutable` v5.0.0, which added a bunch of extra dependencies. And now I have to get multiple teams to make updates to their projects to fix their broken builds.\r\n\r\nNone of this should have been necessary :-(",
        "createdAt": "2020-11-23T22:42:47Z",
        "updatedAt": "2020-11-23T22:43:35Z",
        "author": {
          "login": "PleasantD"
        }
      },
      {
        "body": "Sadly your case doesn't seem to be the same as mine, @PleasantD \r\n\r\nWith assembly binding logs enabled, this is what im getting:\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4018\tThe \"TestTask\" task failed unexpectedly.\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at CustomTask.TestTask.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\n=== Pre-bind state information ===\r\nLOG: DisplayName = System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n (Fully-specified)\r\nLOG: Appbase = file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/\r\nLOG: Initial PrivatePath = NULL\r\nCalling assembly : CustomTask, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null.\r\n===\r\nLOG: This bind starts in LoadFrom load context.\r\nWRN: Native image will not be probed in LoadFrom context. Native image will only be probed in default load context, like with Assembly.Load().\r\nLOG: Using application configuration file: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\MSBuild.exe.Config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\nLOG: Post-policy reference: System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/System.Runtime.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/System.Runtime/System.Runtime.DLL.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/System.Runtime.EXE.\r\nLOG: Attempting download of new URL file:///C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/MSBuild/Current/Bin/System.Runtime/System.Runtime.EXE.\r\nLOG: Attempting download of new URL file:///E:/Projects/custom-msbuild-task/CustomTask/bin/Debug/net5.0/System.Runtime.DLL.\r\nLOG: Attempting download of new URL file:///E:/Projects/custom-msbuild-task/CustomTask/bin/Debug/net5.0/System.Runtime/System.Runtime.DLL.\r\nLOG: Attempting download of new URL file:///E:/Projects/custom-msbuild-task/CustomTask/bin/Debug/net5.0/System.Runtime.EXE.\r\nLOG: Attempting download of new URL file:///E:/Projects/custom-msbuild-task/CustomTask/bin/Debug/net5.0/System.Runtime/System.Runtime.EXE.\r\n\tTaskConsumer\tE:\\Projects\\custom-msbuild-task\\TaskConsumer\\TaskConsumer.csproj\t13\t\r\n```",
        "createdAt": "2020-11-23T23:00:02Z",
        "updatedAt": "2020-11-23T23:00:02Z",
        "author": {
          "login": "isc30"
        }
      },
      {
        "body": "@PleasantD Please file a new bug with a repro case for your Immutable issues. MSBuild 16.8.2 has a binding redirect that should push all references to the 5.0.0 version and updating tasks to the higher reference should not be necessary.\r\n\r\n",
        "createdAt": "2020-11-25T17:04:07Z",
        "updatedAt": "2020-11-25T17:04:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@isc30 I do not reproduce your problem:\r\n\r\n```sh-session\r\n\u276f dotnet build .\\TaskConsumer\\\r\nMicrosoft (R) Build Engine version 16.8.0+126527ff1 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  Restored S:\\repro\\dotnet\\msbuild\\issues\\5904\\TaskConsumer\\TaskConsumer.csproj (in 61 ms).\r\n  TaskConsumer -> S:\\repro\\dotnet\\msbuild\\issues\\5904\\TaskConsumer\\bin\\Debug\\net5.0\\TaskConsumer.dll\r\n  Hello from the Custom MsBuild Task!\r\n```\r\n\r\nAre you trying to use the .NET 5.0 task in Visual Studio or MSBuild.exe, rather than in `dotnet msbuild`? That is not expected to work.",
        "createdAt": "2020-11-25T17:05:44Z",
        "updatedAt": "2020-11-25T17:05:44Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Wow, just tried with `dotnet build` and it works.\r\nI guess it's an issue when building from Visual Studio then.\r\n\r\nIt fails on both the latest stable (2019) and preview.\r\n\r\n> Are you trying to use the .NET 5.0 task in Visual Studio or MSBuild.exe, rather than in dotnet msbuild? That is not expected to work.\r\n\r\nDoes this mean that even tho `.net5` is stable now, Visual Studio doesn't support it and it's never gonna support it?",
        "createdAt": "2020-11-25T17:12:46Z",
        "updatedAt": "2020-11-25T17:13:58Z",
        "author": {
          "login": "isc30"
        }
      },
      {
        "body": "There is no way to use a .NET 5.0 task from Visual Studio/MSBuild.exe, because those run on .NET Framework 4.7.2 or .NET Framework 4.8, which can't run .NET 5.0 assemblies.\r\n\r\n> Does this mean that even tho `.net5` is stable now, Visual Studio doesn't support it and it's never gonna support it?\r\n\r\nNot exactly. Visual Studio is a .NET Framework application and so is MSBuild.exe. Tasks are plugins to MSBuild and thus must be runnable in the environment of the main process. There are two different MSBuilds available: MSBuild.exe is distributed with Visual Studio and is compatible with old (.NET Framework) tasks, and `dotnet msbuild` comes with the .NET (Core) SDK and is compatible with new .NET (Core) tasks.\r\n\r\nWe can't make VS just use .NET 5.0 because it could break older tasks if they use .NET Framework functionality that doesn't work or has had a breaking change in .NET Core/5.0.\r\n\r\nIn the future we may teach MSBuild to support running a .NET 5.0+ task in another process, but haven't done so yet. That's tracked by #4834.",
        "createdAt": "2020-11-25T17:35:38Z",
        "updatedAt": "2020-11-25T17:35:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "It seems like even if I change the `CustomTask` project to output a `netstandard2.1` dll, it still blows up.\r\nThis case did work before updating to `.NET5` SDK.\r\n\r\nhttps://github.com/isc30/custom-msbuild-task/compare/netstandard2.1\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4062\tThe \"CustomTask.TestTask\" task could not be loaded from the assembly C:\\Dev\\custom-msbuild-task\\TaskConsumer\\..\\CustomTask\\bin\\Debug\\netstandard2.0\\CustomTask.dll. Could not load file or assembly 'file:///C:\\Dev\\custom-msbuild-task\\CustomTask\\bin\\Debug\\netstandard2.0\\CustomTask.dll' or one of its dependencies. The system cannot find the file specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\tTaskConsumer\tC:\\Dev\\custom-msbuild-task\\TaskConsumer\\TaskConsumer.csproj\t13\t\r\n```",
        "createdAt": "2020-11-25T18:17:22Z",
        "updatedAt": "2020-11-25T18:24:11Z",
        "author": {
          "login": "isc30"
        }
      },
      {
        "body": "@isc30 .NET Standard 2.1 is only supported by .NET Core 2.1 and higher, and not .NET Framework 4.7.2 or 4.8, so that's also expected. You'd need to use .NET Standard 2.0.",
        "createdAt": "2020-11-25T18:24:53Z",
        "updatedAt": "2020-11-25T18:24:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "sorry, I meant `netstandard2.0`, the error is about it\r\nhttps://github.com/isc30/custom-msbuild-task/compare/main...netstandard20\r\n\r\nedit: after using netstandard2.0 and getting the same error, restarting VS did solve the issue. thanks a lot!",
        "createdAt": "2020-11-25T18:26:44Z",
        "updatedAt": "2020-11-25T18:29:21Z",
        "author": {
          "login": "isc30"
        }
      },
      {
        "body": "This sounds resolved? Let me know if I'm wrong, and I can reopen it.",
        "createdAt": "2021-01-27T23:39:14Z",
        "updatedAt": "2021-01-27T23:39:14Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "I Have the same issue in .net 5 on visual studio 2019\r\n\r\n> 2>Loading C:\\Users\\Developer\\.nuget\\packages\\ts.codegenerator.msbuildtasks\\1.0.1\\build\\net5.0\\..\\..\\tasks\\net5.0\\TS.CodeGenerator.MSBuildTasks.dll\r\n> 1>bob -> C:\\Users\\Developer\\Desktop\\bob\\bin\\Debug\\net5.0\\bob.dll\r\n> 2>aaa -> C:\\Users\\Developer\\Desktop\\aaa\\bin\\Debug\\net5.0\\aaa.dll\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018: The \"GenerateTypescriptTask\" task failed unexpectedly.\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018: System.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018: File name: 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018:    at TS.CodeGenerator.MSBuildTasks.GenerateTypescriptTask.Execute()\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018: \r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018: WRN: Assembly binding logging is turned OFF.\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018: To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018: Note: There is some performance penalty associated with assembly bind failure logging.\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018: To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n> 2>C:\\Users\\Developer\\Desktop\\aaa\\aaa.csproj(7,5): error MSB4018:\r\n> \r\n\r\nBut it works in dotnet build:\r\n\r\n> \r\n> PS C:\\Users\\Developer\\Desktop\\bob> dotnet build .\\bob.sln\r\n> Microsoft (R) Build Engine version 16.10.1+2fd48ab73 for .NET\r\n> Copyright (C) Microsoft Corporation. All rights reserved.\r\n> \r\n>   Determining projects to restore...\r\n>   All projects are up-to-date for restore.\r\n>   Loading C:\\Users\\Developer\\.nuget\\packages\\ts.codegenerator.msbuildtasks\\1.0.1\\build\\net5.0\\..\\..\\tasks\\net5.0\\TS.CodeGenerator.MSBuildTasks.dll\r\n>   aaa -> C:\\Users\\Developer\\Desktop\\aaa\\bin\\Debug\\net5.0\\aaa.dll\r\n>   Aloha\r\n> \r\n>   /*TS.CodeGenerator.MSBuildTasks.ITest*/\r\n>   interface ITest{\r\n>     /*properties*/\r\n>         fnmae: string; /*System.String*/\r\n> \r\n>   }\r\n> \r\n>   bob -> C:\\Users\\Developer\\Desktop\\bob\\bin\\Debug\\net5.0\\bob.dll\r\n> \r\n> Build succeeded.\r\n>     0 Warning(s)\r\n>     0 Error(s)\r\n> \r\n> Time Elapsed 00:00:01.06\r\n> ",
        "createdAt": "2021-07-28T18:49:33Z",
        "updatedAt": "2021-07-28T18:49:33Z",
        "author": {
          "login": "maxfridbe"
        }
      },
      {
        "body": "I compile my tasks against a bunch of frameworks and then use this logic to pick the right one based on the version of MSBuild in use:\r\n\r\nhttps://github.com/microsoft/slngen/blob/04b9e981a2651f3b4aa7cbea9adeb855db927732/src/Microsoft.VisualStudio.SlnGen/Microsoft.VisualStudio.SlnGen.targets#L12\r\n\r\nhttps://github.com/microsoft/slngen/blob/main/src/Microsoft.VisualStudio.SlnGen/Microsoft.VisualStudio.SlnGen.csproj#L4",
        "createdAt": "2021-07-28T19:13:13Z",
        "updatedAt": "2021-07-28T19:13:13Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  }
}