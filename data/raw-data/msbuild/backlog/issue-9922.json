{
  "number": 9922,
  "title": "[BUG] Multiple instances of .NET host, hogging more than 95% memory and CPU",
  "body": "From vscode-dotnettools created by [dibarbet](https://github.com/dibarbet): microsoft/vscode-dotnettools#518  \n\n### Describe the Issue\n\nCopied from https://github.com/dotnet/vscode-csharp/issues/6344\r\n\r\n## Issue Description ##\r\nMultiple instances of .NET process. We have 42 csproj in our microservices-based solution. And every time I build the solution, the multiple .NET process gets spawned hogging up 95% of the CPU. And after building the instances do not get disposed of or close, they just sit there on RAM without any reason hogging up RAM as well. \r\nI would suggest please find a better way to reuse the instances of the .NET host to build the solution and to keep some data between the builds so that we can stop building unchanged projects just like Visual Studio. Because spinning up the process every time does not look viable solution in the long run. Below are the screenshots. If you see closes the CMD instances are still there, I guess we can shut them once the build is complete just like .NET process. \r\n\r\n<details>\r\n\r\nWhen building.\r\n![image](https://github.com/dotnet/vscode-csharp/assets/17148381/a5df1393-e294-422f-bc83-9f0d04ecc48e)\r\nAfter the build is done. \r\n![image](https://github.com/dotnet/vscode-csharp/assets/17148381/d6efb792-790e-406f-8014-898387bd1073)\r\n\r\n</details>\r\n\r\n\r\n\r\n## Steps to Reproduce ##\r\n\r\n## Expected Behavior ##\r\n.NET instances should be reused to build projects and should get closed once done. \r\n\r\n## Actual Behavior ##\r\nMultiple instances are spawned and does not get disposed. \r\n\r\n## Logs ##\r\n\r\n<!--\r\nIf you can, it would be the most helpful to zip up and attach the entire extensions log folder.  The folder can be opened by running the `workbench.action.openExtensionLogsFolder` command.\r\n\r\nAdditionally, if you can reproduce the issue reliably, set the value of the `dotnet.server.trace` option to `Trace` and re-run the scenario to get more detailed logs.\r\n-->\r\n        \r\n### C# log ###\r\n<details>Post the output from Output-->C# here</details>\r\n\r\n### C# LSP Trace Logs ###\r\n<details>Post the output from Output-->C# LSP Trace Logs here.  Requires `dotnet.server.trace` to be set to `Trace`</details>\r\n\r\n## Environment information ##\r\n\r\n**VSCode version**: 1.82.0\r\n**C# Extension**: 2.1.2\r\n**Using OmniSharp**: false\r\n\r\n\r\n<details><summary>Dotnet Information</summary>\r\nError running dotnet --info: Error: Command failed: C:\\Program Files\\dotnet\\dotnet.exe --info\r\n'C:\\Program' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n\r\n\r\n'C:\\Program' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n</details>\r\n<details><summary>Visual Studio Code Extensions</summary>\r\n\r\n|Extension|Author|Version|Folder Name|\r\n|---|---|---|---|\r\n|csdevkit|ms-dotnettools|0.4.10|ms-dotnettools.csdevkit-0.4.10-win32-x64|\r\n|csharp|ms-dotnettools|2.1.2|ms-dotnettools.csharp-2.1.2-win32-x64|\r\n|darker-dark|XavierNaves|1.0.0|xaviernaves.darker-dark-1.0.0|\r\n|EditorConfig|EditorConfig|0.16.4|editorconfig.editorconfig-0.16.4|\r\n|errorlens|usernamehw|3.13.0|usernamehw.errorlens-3.13.0|\r\n|gitlens|eamodio|14.3.0|eamodio.gitlens-14.3.0|\r\n|powershell|ms-vscode|2023.9.1|ms-vscode.powershell-2023.9.1|\r\n|sonarlint-vscode|SonarSource|3.21.0|sonarsource.sonarlint-vscode-3.21.0-win32-x64|\r\n|vim|vscodevim|1.26.0|vscodevim.vim-1.26.0|\r\n|vscode-autohotkey2-lsp|thqby|2.1.5|thqby.vscode-autohotkey2-lsp-2.1.5|\r\n|vscode-conventional-commits|vivaxy|1.25.0|vivaxy.vscode-conventional-commits-1.25.0|\r\n|vscode-dotnet-runtime|ms-dotnettools|1.7.2|ms-dotnettools.vscode-dotnet-runtime-1.7.2|\r\n|vscode-eslint|dbaeumer|2.4.2|dbaeumer.vscode-eslint-2.4.2|\r\n|vscode-jest|Orta|5.2.3|orta.vscode-jest-5.2.3|\r\n|vscodeintellicode-csharp|ms-dotnettools|0.1.26|ms-dotnettools.vscodeintellicode-csharp-0.1.26-win32-x64|;\r\n\r\n</details>\r\n\n\n### Steps To Reproduce\n\n_No response_\n\n### Expected Behavior\n\n_No response_\n\n### Environment Information\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-03-25T20:29:50Z",
  "updatedAt": "2025-03-21T08:52:01Z",
  "closedAt": "2024-08-06T13:50:11Z",
  "author": {
    "login": "arunchndr"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "comments": {
    "nodes": [
      {
        "body": "@ladipro this is in relation to email convo to tweak process lifetimes for the MSBuild worker processes.",
        "createdAt": "2024-03-25T20:30:50Z",
        "author": {
          "login": "arunchndr"
        }
      },
      {
        "body": "Do we have any solution for this issue, I'm still suffering while using c# dev kit for large solution include a lot of projects. Visual Studio are working fine by the way. Hope we will find solution soon. Thank you all.",
        "createdAt": "2024-05-22T03:51:30Z",
        "author": {
          "login": "dangducthinh"
        }
      },
      {
        "body": "look like this bug was fixed, tks team.\r\n![image](https://github.com/user-attachments/assets/9ed1b663-b506-4e09-ba48-291748bccfac)\r\n\r\nMy project has about 220 children project and resource using look good.\r\n\r\nVersion:\r\nC# Dev Kit v1.8.14\r\nC# v2.39.29",
        "createdAt": "2024-08-01T04:57:39Z",
        "author": {
          "login": "dangducthinh"
        }
      },
      {
        "body": "I can still see this issue happening. I use Viasul Studio 2022. In the screenshot, there is no visual studio  running, still I see so many \".Net Host\" tasks. @AR-May , @JanKrivanek , may be we should re-open this issue?\n\n![Image](https://github.com/user-attachments/assets/53ee79b3-f3aa-4fc0-abe3-1783024ec6d7)",
        "createdAt": "2025-03-19T04:58:59Z",
        "author": {
          "login": "alahane-techtel"
        }
      },
      {
        "body": "@alahane-techtel can confirm this.\n\n![Image](https://github.com/user-attachments/assets/1b4f1dec-5495-4247-bf8d-e970870279f4)\n\nEdit says: I haven't used VS Code, I only have used the `dotnet-cli`.",
        "createdAt": "2025-03-20T17:37:55Z",
        "author": {
          "login": "BoBoBaSs84"
        }
      },
      {
        "body": "This is consistently happening. CPU and memory full again today. Cant do a thing. Even to click restart, I will have to wait few minutes for the button to come up :(\n\nNoticed that this happened when I start debugging the .Net core WebAPI in C# .Net 8. I'm also using NSwag for openAPI generation and client code generation. Noticed that as soon as I added NSwag into the mix, this started happening.\n\n![Image](https://github.com/user-attachments/assets/ef072dc5-6b5e-4aef-939d-e1e1291289e2)",
        "createdAt": "2025-03-21T08:52:00Z",
        "author": {
          "login": "alahane-techtel"
        }
      }
    ]
  }
}