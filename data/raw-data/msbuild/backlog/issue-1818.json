{
  "number": 1818,
  "title": "Build & Run - only one TFM in multi-target project",
  "body": "When making changes to multi-targeted libraries, the project system/MSBuild has to rebuild all TFM's as part of the build graph. This is not necessary if I want to run an app on a particular TFM. The build system should only build the necessary closest TFM.\r\n\r\nConcrete example:\r\n- .NET 4.6 exe references multi-targeted library with net45 and netstandard1.4 outputs (there may be many more).\r\n- Change is made in the library\r\n- User hits F5 to debug/run the app. \r\n\r\n**Actual results**\r\nThe library is built twice, once per TFM\r\n\r\n**Expected results**\r\nLibrary is built once\r\n\r\nNote, if I just build the library or the sln, it should build all. This is an optimization for when I build a specific library/app/output that depends on another one and it knows which one it needs.\r\n",
  "state": "CLOSED",
  "createdAt": "2017-03-08T16:57:03Z",
  "updatedAt": "2024-02-21T17:21:00Z",
  "closedAt": "2017-03-08T17:29:58Z",
  "author": {
    "login": "clairernovotny"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Migrating this issue to https://github.com/dotnet/roslyn-project-system/issues/1699.\r\n\r\nMSBuild and the Sdk do the right thing here--a command line build of the app builds only the `net45` version of the lib in this example.\r\n\r\nVisual Studio, though, sees that the project is out of date and invokes \"Build\" on the \"outer\" instance of the project, which in turn builds all TFMs.",
        "createdAt": "2017-03-08T17:29:57Z",
        "updatedAt": "2017-03-08T17:29:57Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}