{
  "number": 10239,
  "title": "[Bug]: MSBuild automatically escapes all my strings for me with seemingly no way to have it not do that?",
  "body": "### Issue Description\r\n\r\nI need to add the following to an ItemGroup:\r\nFoo\\..%2a;Bar\\..%2a\r\n\r\nThis is because if I put Foo\\..*;Bar\\..*, I'm intending to split 2 regex expressions into a list. But MSBuild thinks it's a WildCard.\r\n\r\nHowever, if I try to replace * with %2A, MSBuild automatically converts my semi-colon to %3b.\r\n\r\nTherefore, when I add my property to an ItemGroup to split on semi-colon, it becomes one single entry with Foo.*;Bar.*\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nI have a propertygroup I'm building with wildcards:\r\n```xml\r\n<PropertyGroup>\r\n  <MyProperty>Foo*;Bar*</MyProperty>\r\n</PropertyGroup>\r\n```\r\n\r\nI want to use my property to filter PackageReferences, which are not inherently Files, so the WildCard syntax won't work if I try to Include them.\r\n\r\nSo I've decided to turn my WildCard into Regex\r\n```xml\r\n<PropertyGroup>\r\n  <MyProperty>Foo*;Bar*</MyProperty>\r\n  <MyProperty>$(MyProperty.Replace(\".\",\"\\.\").Replace(\"*\",\".*\").Replace(\"?\",\".\").Replace(\"*\", \"%2A\"))</MyProperty>\r\n</PropertyGroup>\r\n```\r\n\r\n\r\n### Expected Behavior\r\n\r\nWhat I expect to see is:\r\nMyProperty=\"Foo\\..%2A;Bar\\..%2A\"\r\n\r\n\r\n### Actual Behavior\r\n\r\nWhat I instead see is:\r\nMyProperty=\"Foo\\..%2a%3bBar\\..%2a\"\r\n\r\n\r\n### Analysis\r\n\r\n_No response_\r\n\r\n### Versions & Configurations\r\n\r\nMSBuild version 17.8.3+195e7f5a3 for .NET\r\n17.8.3.51904",
  "state": "OPEN",
  "createdAt": "2024-06-13T16:39:37Z",
  "updatedAt": "2025-05-12T14:58:28Z",
  "closedAt": null,
  "author": {
    "login": "EdLichtman"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "bug",
    "Area: Documentation",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "I seem to have found an awful, awful workaround:\r\n```xml\r\n    <PropertyGroup>\r\n      <Foo>$([MSBuild]::Unescape($(MyProperty.Replace(\".\",\"\\.\").Replace(\"*\",\".*\").Replace(\"?\",\".\").Replace(\"*\", \"%2A\").Replace(\"%2A\",\"%25252A\"))))</Foo>\r\n    </PropertyGroup>\r\n```\r\n\r\nThe thing is, if I do %252A, thinking that it'll unescape to %2A, it seems to double-expand so I have to %25252A to expand %2525 into %25 which will then expand into %.\r\n\r\nThere's gotta be another way, as this kind of double unescape behavior seems like the kind of thing that can and will break without warning in a future iteration.",
        "createdAt": "2024-06-13T16:55:55Z",
        "author": {
          "login": "EdLichtman"
        }
      },
      {
        "body": "We can see how this can be confusing, we will expand the documentation on how our escaping works so it is less confusing.\r\n\r\nAs for the break / change in future iterations, we consider  any change to the escape behaviour a breaking change. As such, if we decided in the future to make changes to the escaping (we have no plans for such thing now) it will be implemented with [Changewaves](https://github.com/dotnet/msbuild/blob/4a45d56330882a5e596e97d05ba568ec32e0603c/documentation/wiki/ChangeWaves.md).",
        "createdAt": "2024-06-18T15:47:26Z",
        "author": {
          "login": "maridematte"
        }
      }
    ]
  }
}