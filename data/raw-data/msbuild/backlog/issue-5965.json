{
  "number": 5965,
  "title": "OutputPath Error Check Fails in EndToEnd.csproj",
  "body": "### Issue Description\r\nWe recently [added BaseOutputPath to common targets](https://github.com/dotnet/msbuild/pull/5238) which added error checks in Microsoft.Common.CurrentVersion.targets like so:\r\n\r\n```xml\r\n<Error Condition=\"'$(OutputPath)' != '' and !HasTrailingSlash('$(OutputPath)')\" Text=\"The OutputPath must end with a trailing slash.\" /><Error Condition=\"'$(BaseOutputPath)' != '' and !HasTrailingSlash('$(BaseOutputPath)')\" Text=\"The BaseOutputPath must end with a trailing slash.\" />\r\n```\r\n\r\nThese errors were actually thrown in DDRITs test project `EndToEnd.csproj` here: https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/292082\r\n```\r\n[04:05:54.601] Failed build step \"msbuild ..\\EndToEnd.csproj\" with exit code 1\r\n--\r\n[04:05:54.601] Failed build step \"msbuild  ..\\EndToEnd.csproj\" with exit code 1\r\n[04:05:54.601]\r\n[04:05:54.601] Microsoft (R) Build Engine version 16.9.0-preview-20607-04+1ff34e830 for .NET Framework\r\n[04:05:54.601] Copyright (C) Microsoft Corporation. All rights reserved.\r\n[04:05:54.601] Build started 12/9/2020 4:05:54 AM.\r\n[04:05:54.601] Project \"C:\\Test\\Containers\\VC.Tests.IDE\\Tests\\Integration\\DDRITs\\EndToEnd.csproj\" on node 1 (default targets).\r\n[04:05:54.601] C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(824,5): error : The OutputPath must end with a trailing slash. [C:\\Test\\Containers\\VC.Tests.IDE\\Tests\\Integration\\DDRITs\\EndToEnd.csproj]\r\n[04:05:54.601] Done Building Project \"C:\\Test\\Containers\\VC.Tests.IDE\\Tests\\Integration\\DDRITs\\EndToEnd.csproj\" (default targets) -- FAILED.\r\n[04:05:54.601] Build FAILED.\r\n[04:05:54.601] \"C:\\Test\\Containers\\VC.Tests.IDE\\Tests\\Integration\\DDRITs\\EndToEnd.csproj\" (default target) (1) ->\r\n[04:05:54.601] (_CheckForInvalidConfigurationAndPlatform target) ->\r\n[04:05:54.601]   C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(824,5): error : The OutputPath must end with a trailing slash. [C:\\Test\\Containers\\VC.Tests.IDE\\Tests\\Integration\\DDRITs\\EndToEnd.csproj]\r\n[04:05:54.601]     0 Warning(s)\r\n[04:05:54.601]     1 Error(s)\r\n[04:05:54.601] Time Elapsed 00:00:00.18\r\n[04:05:54.601]\r\n```\r\n\r\nTo Do:\r\n- [ ] Download the `EndToEnd.csproj` project from the VS repo.\r\n- [ ] Repro the failure.\r\n- [ ] Figure out why `EndToEnd.csproj` has `OutputPath` set to some value that doesn't end in a slash when it hits that target.",
  "state": "OPEN",
  "createdAt": "2020-12-11T17:47:02Z",
  "updatedAt": "2024-02-21T16:28:46Z",
  "closedAt": null,
  "author": {
    "login": "benvillalobos"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "cc @Nirmal4G -- looks like some of the checks in #5238 may have been overzealous.",
        "createdAt": "2020-12-11T18:43:24Z",
        "updatedAt": "2020-12-11T18:43:24Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The use of both `BaseOutputPath` and `OutputPath` properties elsewhere suggested that we should've added this check a long time ago. Both of these properties needed to be checked in the same way as the `*IntermediateOutputPath` properties as it holds a similar function to those as well.\r\n\r\nI can see the removal is temporary but please do revert #5958 when you guys fix this in the VS Repo. It could've been inserting `OutputPath` from the command line that it skips the appending of the trailing slash.",
        "createdAt": "2020-12-12T17:16:50Z",
        "updatedAt": "2020-12-13T12:33:37Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "@Nirmal4G Sorry, but I disagree with you strongly here. The checks must remain off if they break user projects that were successfully building.\r\n\r\n> The use of both `BaseOutputPath` and `OutputPath` properties elsewhere suggested that we should've added this check a long time ago.\r\n\r\nI completely agree! But it wasn't there. So some projects may have been successfully building with slightly broken paths for a very long time. It's not a good user experience to break those projects to fix the paths (if the paths bothered the users sufficiently to consider them a break, they could have already fixed them).\r\n\r\n> I can see the removal is temporary\r\n\r\nIt might be. The idea behind this issue is to root-cause the discovered problems and figure out the right course of action.\r\n\r\n> when you guys fix this in the VS Repo\r\n\r\nEven if we could do this, I doubt it's the right thing to do. The test that is failing is just \"build a project\". That's exactly the kind of thing MSBuild users expect to keep working! So until we know otherwise I'm treating the failure as a signal that \"the pain of the well-intentioned, reasonable change we made is excessive\".",
        "createdAt": "2020-12-14T15:46:23Z",
        "updatedAt": "2020-12-14T15:46:23Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald I do get that. But I personally, always look into correctness of the code/logic rather than mass appeal.\n\n> Anyone can fix the mess coming from a patch that could introduce regressions or even new bugs.\n\nThen again, its your call, after all! \ud83d\ude09",
        "createdAt": "2020-12-14T15:58:30Z",
        "updatedAt": "2020-12-14T15:58:30Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "I'm just happy that the Common targets has `BaseOutputPath` support.",
        "createdAt": "2020-12-14T16:01:59Z",
        "updatedAt": "2020-12-14T16:01:59Z",
        "author": {
          "login": "Nirmal4G"
        }
      }
    ]
  }
}