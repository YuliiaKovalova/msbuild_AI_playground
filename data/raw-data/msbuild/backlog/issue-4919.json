{
  "number": 4919,
  "title": "UWP Create sideload page build - errors for unrelated projects",
  "body": "Hi,\r\n\r\nI am having a lot of trouble on this time consuming process where creating UWP (sideloaded/upload) packages, it fails a lot of times. I have tried to do the following steps to reduce the likelyhood of other factors playing a role in the problem:\r\n\r\n1. Close Visual Studio, delete obj and bin folders and retry.\r\n2. Create new Solution Configuration \"ReleaseUwp\" for both x64 and x86 that only builds and deploys the packages that are needed. (only solution configuration, not project configuration, this remains \"Release\"). \r\n3. Make sure Rebuild Solution works for both ReleaseUwp for both x86 and x64.\r\n4. Double check that the correct architecture is selected for all the projects that are referenced. \r\n\r\nI will not start complaining about the build times of the release building that takes more then 10 minutes, but just focus on the actual problem.\r\n\r\nThis is how the Solution Configuration is showing. The errors start to appear when I try to build a x64 release via the Publish => Create App Packages\r\n\r\n![image](https://user-images.githubusercontent.com/10037514/68843032-b6010480-06c7-11ea-8e60-be15a4a318d6.png)\r\n\r\n\r\nThe problem seems that it is trying to build projects that are not selected in the Solution Configuration. For example currently the project `Babywatcher.App.AndroidApp` is not building successfully in x64 architecture (or it uses AnyCpu, that is not clear). Although I didn't select that project in the Solution Configuration, it still throws errors.\r\n\r\nA complete log file (set to Normal) when I build the ReleaseUwp on x64 via Solution -> Rebuild Solution. See [logsnormalbuild.txt](https://github.com/microsoft/msbuild/files/3841524/logsnormalbuild.txt)\r\n\r\n\r\nA complete log file (set to Normal) when I build via Publish -> Create App Packages. See \r\n[logspublishbuild.txt](https://github.com/microsoft/msbuild/files/3845505/logspublishbuild.txt)\r\n\r\nI have used the following configuration on the publish page:\r\n![image](https://user-images.githubusercontent.com/10037514/68841407-d54a6280-06c4-11ea-8b27-439e4cb04a48.png)\r\n\r\n\r\nAnd here are the error messages I am getting:\r\n\r\nI got this error in one of the previous builds:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\tSuppression State\r\nError\t\tThe \"FilterAssemblies\" task failed unexpectedly.\r\nSystem.IO.FileNotFoundException: Could not find file 'C:\\Users\\Ruud\\source\\repos\\Babywatcher\\Babywatcher.App.Core\\bin\\x64\\Release\\netstandard2.0\\Babywatcher.App.Core.dll'.\r\nFile name: 'C:\\Users\\Ruud\\source\\repos\\Babywatcher\\Babywatcher.App.Core\\bin\\x64\\Release\\netstandard2.0\\Babywatcher.App.Core.dll'\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n   at Xamarin.Android.Tasks.FilterAssemblies.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tBabywatcher.App.WindowsApp.Package\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets\t521\t\t\r\n\r\n```\r\n\r\nI have got this error in the last build:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\tSuppression State\r\nError\t\tThe \"LinkAssemblies\" task failed unexpectedly.\r\nJava.Interop.Tools.Diagnostics.XamarinAndroidException: error XA2006: Could not resolve reference to 'Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate' (defined in assembly 'Microsoft.WindowsAzure.MediaServices.Client.Common.Authentication, Version=4.1.0.0, Culture=neutral, PublicKeyToken=null') with scope 'Microsoft.IdentityModel.Clients.ActiveDirectory, Version=3.17.2.31801, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. When the scope is different from the defining assembly, it usually means that the type is forwarded. ---> Mono.Cecil.ResolutionException: Failed to resolve Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate\r\n   at Mono.Linker.Steps.MarkStep.HandleUnresolvedType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.MarkType(TypeReference reference)\r\n   at MonoDroid.Tuner.MonoDroidMarkStep.MarkType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.MarkField(FieldReference reference)\r\n   at Mono.Linker.Steps.MarkStep.InitializeFields(TypeDefinition type)\r\n   at Mono.Linker.Steps.MarkStep.InitializeType(TypeDefinition type)\r\n   at Mono.Linker.Steps.MarkStep.InitializeAssembly(AssemblyDefinition assembly)\r\n   at Mono.Linker.Steps.MarkStep.Initialize()\r\n   at Mono.Linker.Steps.MarkStep.Process(LinkContext context)\r\n   at MonoDroid.Tuner.MonoDroidMarkStep.Process(LinkContext context)\r\n   at Mono.Linker.Pipeline.ProcessStep(LinkContext context, IStep step)\r\n   at Mono.Linker.Pipeline.Process(LinkContext context)\r\n   at MonoDroid.Tuner.Linker.Process(LinkerOptions options, ILogger logger, LinkContext& context)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n   --- End of inner exception stack trace ---\r\n   at Java.Interop.Tools.Diagnostics.Diagnostic.Error(Int32 code, Exception innerException, String message, Object[] args)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tBabywatcher.App.WindowsApp.Package\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets\t2106\t\t\r\n\r\n```\r\n\r\nIn red I have marked a few projects that are not selected in the Solution Configuration.\r\n\r\n![image](https://user-images.githubusercontent.com/10037514/68768484-e17de380-0622-11ea-9b09-e67de4d47df1.png)\r\n\r\nAs you can see I am getting `Xamarin\\Android` related errors, which are currently, certainly, not in the selected projects's dependencies. All the selected projects besides the `WindowsApp` `WindowsApp.Package` and `WindowsApp.Bridge` are all .net standard packages and don't have a reference to Xamarin.\r\n\r\nAnd to end up with a mind-blown statement: When I ONLY select x64 during publish, I was able to create a package successfully! So can it be an issue when building for both x86 and x64 after each other?\r\n\r\nProject file of the UWP Package app, the main executable.\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup Condition=\"'$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '15.0'\">\r\n    <VisualStudioVersion>15.0</VisualStudioVersion>\r\n  </PropertyGroup>\r\n  <ItemGroup Label=\"ProjectConfigurations\">\r\n    <ProjectConfiguration Include=\"Debug|x86\">\r\n      <Configuration>Debug</Configuration>\r\n      <Platform>x86</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Release|x86\">\r\n      <Configuration>Release</Configuration>\r\n      <Platform>x86</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Debug|x64\">\r\n      <Configuration>Debug</Configuration>\r\n      <Platform>x64</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Release|x64\">\r\n      <Configuration>Release</Configuration>\r\n      <Platform>x64</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Debug|ARM\">\r\n      <Configuration>Debug</Configuration>\r\n      <Platform>ARM</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Release|ARM\">\r\n      <Configuration>Release</Configuration>\r\n      <Platform>ARM</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Debug|ARM64\">\r\n      <Configuration>Debug</Configuration>\r\n      <Platform>ARM64</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Release|ARM64\">\r\n      <Configuration>Release</Configuration>\r\n      <Platform>ARM64</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Debug|AnyCPU\">\r\n      <Configuration>Debug</Configuration>\r\n      <Platform>AnyCPU</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Release|AnyCPU\">\r\n      <Configuration>Release</Configuration>\r\n      <Platform>AnyCPU</Platform>\r\n    </ProjectConfiguration>\r\n  </ItemGroup>\r\n  <PropertyGroup>\r\n    <WapProjPath Condition=\"'$(WapProjPath)'==''\">$(MSBuildExtensionsPath)\\Microsoft\\DesktopBridge\\</WapProjPath>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(WapProjPath)\\Microsoft.DesktopBridge.props\" />\r\n  <PropertyGroup>\r\n    <ProjectGuid>1237cc88-54c8-4a2d-9f89-80a51c10a0f6</ProjectGuid>\r\n    <TargetPlatformVersion>10.0.18362.0</TargetPlatformVersion>\r\n    <TargetPlatformMinVersion>10.0.18362.0</TargetPlatformMinVersion>\r\n    <DefaultLanguage>en-US</DefaultLanguage>\r\n    <AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>\r\n    <EntryPointProjectUniqueName>..\\Babywatcher.App.WindowsApp\\Babywatcher.App.WindowsApp.csproj</EntryPointProjectUniqueName>\r\n    <PackageCertificateThumbprint>6639BBE133D83874A563605D6088A272539C3D35</PackageCertificateThumbprint>\r\n    <GenerateAppInstallerFile>False</GenerateAppInstallerFile>\r\n    <AppxAutoIncrementPackageRevision>True</AppxAutoIncrementPackageRevision>\r\n    <AppxBundlePlatforms>x86|x64</AppxBundlePlatforms>\r\n    <AppInstallerUpdateFrequency>0</AppInstallerUpdateFrequency>\r\n    <AppInstallerCheckForUpdateFrequency>OnApplicationRun</AppInstallerCheckForUpdateFrequency>\r\n    <AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>\r\n    <AppxPackageSigningTimestampServerUrl>http://sha256timestamp.ws.symantec.com/sha256/timestamp</AppxPackageSigningTimestampServerUrl>\r\n    <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>\r\n    <GenerateTestArtifacts>True</GenerateTestArtifacts>\r\n    <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM64'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM64'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x86'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x86'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n    <AppxBundle>Always</AppxBundle>\r\n    <DefaultLanguage>en</DefaultLanguage>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <AppxManifest Include=\"Package.appxmanifest\">\r\n      <SubType>Designer</SubType>\r\n    </AppxManifest>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Include=\"Babywatcher.App.WindowsApp.Package_TemporaryKey.pfx\" />\r\n    <Content Include=\"StoreManifest.xml\" />\r\n    <None Include=\"Babywatcher.App.WindowsApp.Package_StoreKey.pfx\" />\r\n    <Content Include=\"Images\\LargeTile.scale-100.png\" />\r\n   <!-- a lot more images here-->\r\n    <None Include=\"Package.StoreAssociation.xml\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Babywatcher.App.WindowsApp.Bridge\\Babywatcher.App.WindowsApp.Bridge.csproj\" />\r\n    <ProjectReference Include=\"..\\Babywatcher.App.WindowsApp\\Babywatcher.App.WindowsApp.csproj\" />\r\n  </ItemGroup>\r\n  <Import Project=\"$(WapProjPath)\\Microsoft.DesktopBridge.targets\" />\r\n</Project>\r\n```\r\n\r\nDirectory contents:\r\n\r\n![image](https://user-images.githubusercontent.com/10037514/68841810-923cbf00-06c5-11ea-927b-907ff6e4a739.png)\r\n\r\n\r\nCommand line\r\n\r\nSee log file for this, I don't know which of the 1000 commands you are looking for\r\n\r\n### Expected  behavior\r\n\r\nI would expect that only the selected projects within the Solution Configuration are being build when creating an UWP package.\r\n\r\n### Actual behavior\r\n\r\nIt seems that other projects are also being build when creating UWP packages.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\nMicrosoft (R) Build Engine version 4.8.3752.0\r\n[Microsoft .NET Framework, version 4.0.30319.42000]\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n4.8.3752.0\r\n\r\nOS info:\r\nWindows 10 1903. OS build: 18362.418\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\nVisual Studio v16.3.8\r\ndotnet --info output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\nAll .net Standard projects are build against v2.0",
  "state": "OPEN",
  "createdAt": "2019-11-14T09:17:23Z",
  "updatedAt": "2024-02-21T16:30:24Z",
  "closedAt": null,
  "author": {
    "login": "Ruud-cb"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I have found out that the Package page does not honor the Solution Configuration. It turns out it is going back from ReleaseUwp to normal Release and therefor seems to build my unrelated android project. When I disable the build option for the default 'Release' Solution Configuration and try again, all works fine. I guess I should move this problem elsewhere?",
        "createdAt": "2019-11-14T11:35:47Z",
        "updatedAt": "2019-11-14T11:35:47Z",
        "author": {
          "login": "Ruud-cb"
        }
      }
    ]
  }
}