{
  "number": 7911,
  "title": "Dependent project does not generate nuget package when multiple TFMs",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\n\r\nConsider this scenario:\r\n\r\n* Lib1.csproj multi-targets `net48` and `net6.0` and has `GeneratePackageOnBuild` set to `true`\r\n* Lib2.csproj does the same\r\n* Lib1.csproj references Lib2.csproj (both are part of the same solution)\r\n\r\nNow, let's `dotnet build Lib1.csproj`:\r\n\r\n* It generates Lib2 assemblies (one for each target),\r\n* It genrates Lib1 assemblies (one for each target)\r\n* It generates Lib1 `nupkg`\r\n* **It does not generate Lib2 `nupkg` though**\r\n\r\n> NB: this does not happen when building the solution in VS\r\n\r\n### Steps to Reproduce\r\n* See attached solution: [MultipleTfmsNugetRepro.zip](https://github.com/dotnet/msbuild/files/9423338/MultipleTfmsNugetRepro.zip)\r\n* Then:\r\n\r\n```sh\r\ncd .....\\Lib1\r\ndotnet build\r\n```\r\n\r\n* `Lib1.nupkg` is created in `Lib1\\bin\\Debug`\r\n* `Lib2.nupkg` is not `Lib2\\bin\\Debug`\r\n\r\nI also attached the corresponding binlog (build in release configuration this time): [binlog.zip](https://github.com/dotnet/msbuild/files/9423334/binlog.zip)\r\n\r\n\r\n<!--\r\n* Include as much of the following as possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behavior.\r\n* Your command line invocation\r\n\r\nIf providing steps to reproduce the issue proves difficult, consider attaching a binlog:\r\n[Details on sharing binary logs](https://aka.ms/msbuild/binlog)\r\n[More information on binary logs](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md)\r\nNOTE: Binary logs capture environment information. Ensure it does not include any information you don't want to be public before you attach one.\r\nIf you want to share one just with Microsoft, you can [report a problem through Visual Studio](https://developercommunity.visualstudio.com/report) and share it privately with Microsoft.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n`Lib2.nupkg` should be generated\r\n\r\n### Actual Behavior\r\n\r\n`Lib2.nupkg` is not generated\r\n\r\n### Analysis\r\n\r\nI've skimmed through the binlog and I think it boils down to `IsInnerBuild = true`preventing Lib2's nuget package from being generated. Here is what I guess happens:\r\n\r\n* Because Lib1 is a multi-targeting project, it is split into 2 pseudo-projects: one for each TFM \r\n* Thanks to the project reference, each one of these pseudo-projects transitively builds Lib2 (only for the TFM it is compatible with) in `IsInnerBuild = true` mode.\r\n  * This gives us Lib2 assemblies both for `net48` and `net6.0` targets\r\n  * And obviously Lib1 assemblies as well for both targets\r\n* Back to Lib1, the root project goes on with building the nuget package and it is generated (and as expected references `Lib1.nupkg`)\r\n* However, because Lib2 is never built with `IsInnerBuild = false`, its package is never generated.\r\n\r\n### Versions & Configurations\r\n\r\n* Visual Studio v17.2.2\r\n* `dotnet --version`: 6.0.303\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2022-08-25T09:29:09Z",
  "updatedAt": "2024-02-21T14:07:51Z",
  "closedAt": "2022-08-25T16:51:12Z",
  "author": {
    "login": "odalet"
  },
  "labels": [
    "Partner:NuGet",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "MSBuild Team Triage: This is by design. The workarounds here are to build each project individually or to build the solution itself.",
        "createdAt": "2022-08-25T16:51:12Z",
        "updatedAt": "2022-08-25T16:51:12Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Including @aortiz-msft as FYI for the NuGet side.\r\n\r\n> * However, because Lib2 is never built with `IsInnerBuild = false`, its package is never generated.\r\n\r\nThis is exactly the cause. When referenced by another project, we don't build the \"outer build\" of that project, because we may not need _all_ of the TargetFrameworks inside it. Instead, we build only what we need for a specific reference.\r\n\r\nBuilding a solution/traversal project that invokes the \"outer build\" for both projects works because in multitargeted projects, pack happens in the outer build.",
        "createdAt": "2022-08-25T18:42:24Z",
        "updatedAt": "2022-08-25T18:42:24Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald : does your labeling mean I should open a bug in the nuget repository? I clearly feel there's a functional hole here (honestly, the scenario I describe here should just work: it does if I'm not multi-targeting in `Lib2`) but maybe the MSBuild repo is not the good place for it?",
        "createdAt": "2022-08-27T16:01:22Z",
        "updatedAt": "2022-08-27T16:04:22Z",
        "author": {
          "login": "odalet"
        }
      },
      {
        "body": "@odalet it's a problem with a multi-layered cause but since the overall scenario is owned by NuGet I think that's the best place to pursue it.",
        "createdAt": "2022-09-26T14:44:22Z",
        "updatedAt": "2022-09-26T14:44:22Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}