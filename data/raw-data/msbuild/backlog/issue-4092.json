{
  "number": 4092,
  "title": "Update .editorconfig",
  "body": "Update the [.editorconfig](https://github.com/Microsoft/msbuild/blob/master/.editorconfig) with additional rules.\r\n\r\n**Advantages** \r\n* keeps the code format as defined - regardless who is contributing\r\n* reduces PR review complexity (code formatting changes are gone)\r\n* works for common IDE's\r\n\r\n- [ ] Define a standard\r\n- [ ] Extend the existing file\r\n- [ ] Reformat solution\r\n",
  "state": "CLOSED",
  "createdAt": "2019-01-23T09:35:18Z",
  "updatedAt": "2024-02-21T17:09:34Z",
  "closedAt": "2021-08-10T14:30:55Z",
  "author": {
    "login": "CodeTherapist"
  },
  "labels": [
    "Area: Our Own Build",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "We have one (untouched in 4 years), but it'd be quite reasonable to bring it up to date using the steps here.",
        "createdAt": "2019-01-23T15:37:47Z",
        "updatedAt": "2019-01-23T15:37:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald We could create a [.editorconfig by IntelliCode that infers coding conventions from the solution](https://blogs.msdn.microsoft.com/visualstudio/2018/07/17/visual-studio-intellicode-inferring-coding-conventions-for-consistent-code/). Would that work?",
        "createdAt": "2019-01-31T16:26:01Z",
        "updatedAt": "2019-01-31T16:26:01Z",
        "author": {
          "login": "CodeTherapist"
        }
      },
      {
        "body": "Yeah, that sounds good to me. We may want to eventually standardize more with what corefx or roslyn are doing, but that can be an incremental move, if necessary.\r\n\r\nOne wrinkle I can think of: this repo has a few bits of code forked from other places. For ease of updating, those shouldn't be formatted to our conventions, but left as they were--otherwise the diffs resulting from taking a new upstream are confusing and awful. We should drop empty `.editorconfig` files in those directories.",
        "createdAt": "2019-02-14T15:41:04Z",
        "updatedAt": "2019-02-14T15:41:04Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> We should drop empty `.editorconfig` files in those directories.\r\n\r\nEditorconfig automatically chains, so instead, drop a `.editorconfig` with `root=true`.",
        "createdAt": "2019-02-14T16:19:58Z",
        "updatedAt": "2019-02-14T16:19:58Z",
        "author": {
          "login": "Pilchie"
        }
      },
      {
        "body": "@livarcocc Should we think about having a standard for all of our repos and applying that here? If we don't want to push for that, I think the generate-one-from-current-usage approach sounds nice.",
        "createdAt": "2019-02-19T16:02:59Z",
        "updatedAt": "2019-02-19T16:02:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Most of the `dotnet` repos are fairly consistent already.  @jaredpar, @stoub, etc did some work to come up with https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md",
        "createdAt": "2019-02-19T16:17:35Z",
        "updatedAt": "2019-02-19T16:17:35Z",
        "author": {
          "login": "Pilchie"
        }
      },
      {
        "body": "Yeah, and we shouldn't be too far off from that--at the dawn of time we used codeformatter on this repo. Just haven't been keeping up with it recently.",
        "createdAt": "2019-02-19T19:56:28Z",
        "updatedAt": "2019-02-19T19:56:28Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald I have been thinking about having one that's common for our whole team for a while. Feel free to drive that.",
        "createdAt": "2019-02-21T01:50:14Z",
        "updatedAt": "2019-02-21T01:50:14Z",
        "author": {
          "login": "livarcocc"
        }
      }
    ]
  }
}