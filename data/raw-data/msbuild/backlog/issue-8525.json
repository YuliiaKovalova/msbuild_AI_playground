{
  "number": 8525,
  "title": "[Bug]: Binlog does not account for changing msbuild files (props/targets)",
  "body": "### Issue Description\n\nIn particular, we're talking about nuget.g.props and nuget.g.targets files. \r\nThe generated NuGet files are automatically included in the binlog when they are a part of the evaluation.\r\nGiven that these are generated files, if one of the operations being run is restore, it is very likely that there are *different* nuget.g.props/targets files. \r\n1. Before restore\r\n2. After restore.\r\n\r\ncc @jaredpar @baronfel \r\ncc @jeffkl Some of your recent changes may not be as helpful due to this bug.\r\n\r\nfyi @aortiz-msft, @marcpopMSFT \r\n\n\n### Steps to Reproduce\n\n1. Take the following project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net7.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"NuGet.Versioning\" GeneratePathProperty=\"true\" Version=\"6.5.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThis ensures that the restore writes something to the nuget.g.props file.\r\n\r\n2. msbuild /t:restore. Object the nuget.g.props has a value similar to\r\n```xml\r\n  <PropertyGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <PkgNuGet_Versioning Condition=\" '$(PkgNuGet_Versioning)' == '' \">C:\\Users\\Nikolche\\.nuget\\packages\\nuget.versioning\\6.5.0</PkgNuGet_Versioning>\r\n  </PropertyGroup>\r\n  ```\r\n\r\n3. Change the version to 6.4.0.\r\n4. msbuild /restore /bl\r\n\r\n5. Observe the nuget.g.props\r\n\r\nIt has the 6.4.0 version\r\n\r\n```xml\r\n  <PropertyGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <PkgNuGet_Versioning Condition=\" '$(PkgNuGet_Versioning)' == '' \">C:\\Users\\Nikolche\\.nuget\\packages\\nuget.versioning\\6.4.0</PkgNuGet_Versioning>\r\n  </PropertyGroup>\r\n  ```\r\n\r\n6. Observe the binlog.\r\n\r\n- Multiple evaluations\r\n![image](https://user-images.githubusercontent.com/2878341/222615156-64987e93-467c-40a4-8352-0eecfd5ba470.png)\r\n- The last evaluation is the build one, which will contain a different nuget.g.props from what was originally on disk. \r\nGo to files and see that the nuget.g.props matches the last one. \n\n### Expected Behavior\n\nMultiple nuget.g.props are visible, at most 1 per evaluation, or at least it's know what version of each file was part of the evaluation\n\n### Actual Behavior\n\nSame file is shown, and the difference is not apparent.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\nAll versions",
  "state": "CLOSED",
  "createdAt": "2023-03-03T02:24:59Z",
  "updatedAt": "2024-02-21T14:05:54Z",
  "closedAt": "2023-03-07T15:36:39Z",
  "author": {
    "login": "nkolev92"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team triage: This is definitely a real problem with the log, but the combination of its value and implementation complexity means we don't expect to address it soon.\r\n\r\n@rokonec had an interesting idea that the restore tasks might be able to proactively tell MSBuild what files they modify, at which point we could both flush them from the XML cache and log them (related to #8540 and #2811).",
        "createdAt": "2023-03-07T15:36:39Z",
        "updatedAt": "2023-03-07T15:36:39Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}