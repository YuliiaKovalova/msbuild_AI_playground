{
  "number": 4526,
  "title": "Failure to publish for RID when classlib reference has RID(s)",
  "body": "### Steps to reproduce\r\n\r\n* File -> New Project -> .NET Core Console App\r\n* File -> New Project -> .NET Standard Class Library\r\n* Add project reference from console app to classlib\r\n* Edit classlib csproj and add `<RuntimeIndentifiers>win-x86</RuntimeIdentifiers>` in property group\r\n* Build -> Publish -> FolderProfile:\r\n  * Edit profile and set RID to win-x86\r\n  * Publish\r\n\r\n\r\n### Expected  behavior\r\n\r\nPublish succeeds\r\n\r\n\r\n### Actual behavior\r\n\r\nBuild fails during publish, get popup saying publish failed, output window has the real clue:\r\n\r\n1>Metadata file 'C:\\Users\\nicholg\\source\\repos\\ConsoleApp2\\ClassLibrary1\\bin\\Release\\netstandard2.0\\\\**win-x86**\\\\ClassLibrary1.dll' could not be found\r\n\r\nThere's a disagreement between how the P2P protocol negotiates a RID for the classlib and what VS actually schedules to build. So we have chosen the win-x86 RID version of classlib, but VS hasn't built it.\r\n\r\n### Environment data\r\nVS 16.1.6 RTM + .NET Core SDK 2.1.701\r\n",
  "state": "OPEN",
  "createdAt": "2019-07-19T03:33:48Z",
  "updatedAt": "2024-02-21T16:31:00Z",
  "closedAt": null,
  "author": {
    "login": "nguerrera"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": []
  }
}