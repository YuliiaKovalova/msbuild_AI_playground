{
  "number": 2226,
  "title": "Investigate and reenable MSBUILDLOGIMPORTS test failures on *nix",
  "body": "Failures introduced by https://github.com/Microsoft/msbuild/pull/2225:\r\n\r\n```\r\nMicrosoft.Build.UnitTests.OM.Definition.Project_Tests.ProjectImportedEventNoMatchingFiles\r\nMicrosoft.Build.UnitTests.OM.Definition.Project_Tests.ProjectImportEvent\r\nMicrosoft.Build.UnitTests.OM.Definition.Project_Tests.ProjectImportedEventFalseCondition\r\n```\r\n\r\nDisabling them since they pass in isolation, but something about the environment reset isn't working on *nix.",
  "state": "OPEN",
  "createdAt": "2017-06-16T16:15:16Z",
  "updatedAt": "2024-02-21T16:36:35Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "xplat",
    ".NET Core",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Consider for Next Major Version"
  },
  "comments": {
    "nodes": [
      {
        "body": "`Traits` class from `src/Shared/Traits.cs` gets compiled with `Microsoft.Build.dll` and the test assembly. When `Traits.Instance` is used from `Evaluator`, it gets a type tied to `Microsoft.Build` assembly, but when `src/Shared/UnitTests/TestEnvironment.cs` wants to use it from code in the test assembly, it gets a type tied to the test assembly. Thus, when `TransientTestEnvironmentVariable` tries to reset [`Traits.Instance  = new Traits();`](https://github.com/Microsoft/msbuild/blob/master/src/Shared/UnitTests/TestEnvironment.cs#L359), it is resetting an instance separate from the one used the `Evaluator`.\r\n\r\nI think we shouldn't compile `Traits` with the test assemblies. And should probably access the [`Traits.Instance`](https://github.com/microsoft/msbuild/blob/master/src/Shared/Traits.cs#L16) property via reflection to reset it in `TestEnvironment`.",
        "createdAt": "2017-06-22T06:58:16Z",
        "updatedAt": "2017-06-22T06:58:16Z",
        "author": {
          "login": "radical"
        }
      }
    ]
  }
}