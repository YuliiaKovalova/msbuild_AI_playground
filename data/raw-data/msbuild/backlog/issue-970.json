{
  "number": 970,
  "title": "Exclude patterns don't work when Include uses a recursive glob on OS X",
  "body": "``` XML\n  <ItemGroup>\n    <ProjectWithoutConfiguration Include=\"bin/**/*proj\" Exclude=\"bin\\Bootstrap\\testpackage.nuproj;src\\**\" />\n  </ItemGroup>\n\n  <Target Name=\"BuildAndTest\">\n    <Message Text=\"Items: @(Projectwithoutconfiguration) \" Importance=\"High\" />\n  </Target>\n```\n\nfrom the root of the MSBuild repo emits a list that contains `testpackage.nuproj`. If the `Include` pattern is `bin/Bootstrap/*proj` or `bin/Bootstrap/**/*proj`, the `Exclude` works as expected, so the critical piece seems to be that there is a recursive `**` glob _and_ that it gets expanded during the consideration of include.\n\nPossibly a regression from lazy evaluation?\n",
  "state": "CLOSED",
  "createdAt": "2016-08-26T22:02:01Z",
  "updatedAt": "2024-02-21T17:26:10Z",
  "closedAt": "2016-09-09T22:27:46Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "cdmihai"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "cc @brthor: the only workaround I can see right now is to not use a recursive glob.\n",
        "createdAt": "2016-08-26T22:02:32Z",
        "updatedAt": "2016-08-26T22:02:32Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald \n\nI appreciate the workaround, but it is simply not possible for migration unless we evaluate the glob at migration time, in which case we are not really doing a true migration of the project. \n\nFor the moment this will just remain a bug for migrated apps on OSX. We can direct users to clean before building to prevent inadvertent includes.\n",
        "createdAt": "2016-08-26T22:08:19Z",
        "updatedAt": "2016-08-26T22:08:19Z",
        "author": {
          "login": "brthor"
        }
      },
      {
        "body": "It is most likely the optimization of not exploding globs twice via the new feature in FileMatcher to accept globs to ignore.\n\nBefore this, it worked because both include and exclude would explode globs, and those exploded strings would match just because they were produced by the same code. \n\nNow, the FileMatcher does a few string comparisons to reason whether to visit certain files or directories. All those string equality checks need to be probably replaced with more intelligent comparers that reason about different directory separators, os based case sensitivity, trailing slashes, etc\n",
        "createdAt": "2016-08-26T22:47:51Z",
        "updatedAt": "2016-08-26T22:48:34Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "#978 appears to have fixed this issue. I tried reproing it on osx but the recursive excludes / includes worked fine (tests also confirm this). Only caveat for now is that excludes work with backslashes only.\n",
        "createdAt": "2016-09-09T22:27:46Z",
        "updatedAt": "2016-09-09T22:27:46Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  }
}