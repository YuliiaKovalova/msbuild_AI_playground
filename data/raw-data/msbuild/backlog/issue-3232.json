{
  "number": 3232,
  "title": "Setting IntermediateOutputPath in msbuild command causes javac error in Xamarin Forms droid project",
  "body": "### Steps to reproduce\r\n\r\n1. Create Xamarin Forms project.\r\n2. Build Android part of the solution using msbuild from command line.\r\n\r\nCommand line\r\n```\r\n  msbuild ./ProjectName.sln \\\r\n   /t:ProjectName_Droid:SignAndroidPackage \\\r\n   /p:Configuration=\"Release\" \\\r\n   /p:Platform=\"Any CPU\" \\\r\n   /p:OutputPath=\"/absolute/path/bin/\" \\\r\n   /p:IntermediateOutputPath=\"/absolute/path/obj/\" \r\n```\r\n### Expected  behavior\r\n\r\nBuilds fine without errors.\r\n\r\n### Actual behavior\r\n\r\nBuild files are created in specified Output and Intermediate locations but various errors occurs like: \r\n```\r\njavac error :  error: package com.sample.package.name does not exist\r\n```\r\n\r\n### Environment data\r\n\r\nVisual Studio Enterprise 2017 for Mac\r\nVersion 7.4.3 (build 10)\r\nInstallation UUID: fc295dbb-ea60-45ea-a7bd-051b091fe655\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 9.4 (14155)\r\nBuild 9Q1004a\r\n\r\nXamarin.Mac\r\nVersion: 4.2.1.29 (Visual Studio Enterprise)\r\n\r\nXamarin.iOS\r\nVersion: 11.9.1.24 (Visual Studio Enterprise)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\nXamarin.Android\r\nVersion: 8.2.0.16 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/mwesolowski/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_111\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_111-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 704030010\r\nGit revision: 5af3e98549653fcc5335896ccc296343d08f31bb\r\nBuild date: 2018-04-12 12:32:07-04\r\nXamarin addins: fadb82fb0fe2668cb7789f8b524aec6fb8568ee7\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\nOperating System\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed addins\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\nOS info:\r\n\r\nMac OS X 10.13.4",
  "state": "OPEN",
  "createdAt": "2018-04-25T17:53:20Z",
  "updatedAt": "2024-02-21T16:34:12Z",
  "closedAt": null,
  "author": {
    "login": "awattar"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "We saw something similar to this here:\r\n\r\nhttps://discord.com/channels/732297728826277939/732297837953679412/788597182039195648\r\n\r\nIn this example, `ResolveAssemblyReference` was not returning a reference, but the dependencies were:\r\n\r\n    LibVLCSharp.Forms.Sample.Android (Android project) ->  LibVLCSharp.Forms (MSBuild.Sdk.Extras) -> LibVLCSharp (MSBuild.Sdk.Extras) -> LibVLCSharp.AWindow (Android binding project)\r\n\r\n`LibVLCSharp.AWindow.dll` was missing (it contained a Java binding). This caused the javac error. The workaround was to reference the bindings project from the Android head project.\r\n\r\n@awattar can you share a [diagnostic MSBuild log](https://docs.microsoft.com/xamarin/android/troubleshooting/troubleshooting#diagnostic-msbuild-output)? I'm wondering if your case is different, or if you are using MSBuild.Sdk.Extras.",
        "createdAt": "2020-12-17T14:39:36Z",
        "updatedAt": "2020-12-17T14:39:36Z",
        "author": {
          "login": "jonathanpeppers"
        }
      },
      {
        "body": "Hi @jonathanpeppers it was over 2 years ago and we skipped this approach. I can try to reproduce this and check for the Extras. ",
        "createdAt": "2020-12-17T21:14:36Z",
        "updatedAt": "2020-12-17T21:14:36Z",
        "author": {
          "login": "awattar"
        }
      }
    ]
  }
}