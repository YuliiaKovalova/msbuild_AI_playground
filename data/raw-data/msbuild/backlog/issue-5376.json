{
  "number": 5376,
  "title": "Replacement for ToolsVersion ",
  "body": "In my build script, I call the msbuild task with the toolsversion parameter. This allows me to use MSBuild 2017 (v15.0) to run a build script that uses the CSC.exe from MSBuild 2013 (v12.0) \r\n```xml\r\n<MSBuild Projects=\"@(ProjectFiles)\"\r\n         ToolsVersion=\"12.0\">\r\n</MSBuild>\r\n```\r\n\r\nMSBuild has changed the tools version to \"Current\" (https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-toolset-toolsversion?view=vs-2019). There's also questions on the internet about this, answered as \"by-design\": https://developercommunity.visualstudio.com/content/problem/404485/vs2019-msbuildtoolsversion-is-not-a-version.html\r\n\r\nSo, no my question is: how can I select the CSC.exe binaries to use, starting with the next version of MSBuild, given there is just the new catch-all tools version \"current\"?\r\n\r\nThanks, Michael",
  "state": "CLOSED",
  "createdAt": "2020-05-26T07:40:03Z",
  "updatedAt": "2024-02-21T17:03:42Z",
  "closedAt": "2020-05-27T16:09:19Z",
  "author": {
    "login": "MichaelKetting"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "To use a specific toolset, use the MSBuild that shipped with that version of Visual Studio. The old approach with toolsets didn't really work as expected and was made much more complicated by Visual Studio's support (in VS 15.0) for side-by-side installations of the same version of Visual Studio (for instance: if you have 16.5.3 and 16.7-preview1 installed, which gets used for `ToolsVersion=\"16.0\"`?).",
        "createdAt": "2020-05-27T16:09:19Z",
        "updatedAt": "2020-05-27T16:09:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thank you for the explanation.",
        "createdAt": "2020-05-27T16:15:51Z",
        "updatedAt": "2020-05-27T16:15:51Z",
        "author": {
          "login": "MichaelKetting"
        }
      }
    ]
  }
}