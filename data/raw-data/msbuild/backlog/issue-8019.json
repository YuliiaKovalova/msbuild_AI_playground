{
  "number": 8019,
  "title": "The binlog for a static_assert excludes the most important piece of information",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\nWe use some header files that have static asserts in them (see [https://github.com/microsoft/wil](https://github.com/microsoft/wil)).  When those static asserts are violated there is a build break.  The error output has the file/line information for the static_assert in WIL.  However, the most important information is the file/line of the code in our project that _uses_ WIL.  This output is in the console but is missing from msbuild and the binlog file.\r\n<!--\r\n* Please include a clear and concise description of the problem.\r\n-->\r\n\r\n### Steps to Reproduce\r\n1. Using Visual Studio 2022 17.3 create an empty Windows Console application project.\r\n2. Fill in the files as described below.\r\n3. `msbuild MSBuildOutputReproProject.sln /bl`\r\n4. Open the msbuild.binlog file in the MSBuild Structured Log Viewer\r\n\r\n#### ConsoleApplication1.cpp\r\n```cpp\r\n#include <iostream>\r\n#include \"StaticAssertHeader.h\"\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello World!\\n\";\r\n    DoStuff(1);\r\n    DoStuff(1.0);\r\n}\r\n```\r\n\r\n#### StaticAssertHeader.h\r\n```cpp\r\n#pragma once\r\n\r\ntemplate <typename T>\r\nvoid DoStuff(T value)\r\n{\r\n    static_assert(std::is_same<T, int>());\r\n}\r\n```\r\n\r\n#### Console output\r\n```\r\n  ConsoleApplication1.cpp\r\nv:\\code\\MSBuildOutputReproProject\\ConsoleApplication1\\StaticAssertHeader.h(6,39): error C2338: static_assert failed: 's\r\ntd::is_same<T, int>()' [v:\\code\\MSBuildOutputReproProject\\ConsoleApplication1\\ConsoleApplication1.vcxproj]\r\nv:\\code\\MSBuildOutputReproProject\\ConsoleApplication1\\ConsoleApplication1.cpp(11): message : see reference to function\r\ntemplate instantiation 'void DoStuff<double>(T)' being compiled [v:\\code\\MSBuildOutputReproProject\\ConsoleApplication1\\\r\nConsoleApplication1.vcxproj]\r\n          with\r\n          [\r\n              T=double\r\n          ]\r\n```\r\n\r\n#### Binlog content\r\n```\r\nv:\\code\\MSBuildOutputReproProject\\ConsoleApplication1\\StaticAssertHeader.h(6,39): error C2338: static_assert failed: 'std::is_same<T, int>()' [v:\\code\\MSBuildOutputReproProject\\ConsoleApplication1\\ConsoleApplication1.vcxproj]\r\nsee reference to function template instantiation 'void DoStuff<double>(T)' being compiled\r\n        with\r\n        [\r\n            T=double\r\n        ]\r\nThe command exited with code 2.\r\n```\r\n\r\nNote that `ConsoleApplication1.cpp(11)` is missing from the binlog.  This is the most important piece of information in the output.\r\n\r\n<!--\r\n* Include as much of the following as possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behaviour.\r\n* Your command line invocation\r\n\r\nIf providing steps to reproduce the issue proves difficult, consider attaching a binlog:\r\n[Details on sharing binary logs](https://aka.ms/msbuild/binlog)\r\n[More information on binary logs](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md)\r\nNOTE: Binary logs capture environment information. Ensure it does not include any information you don't want to be public before you attach one.\r\nIf you want to share one just with Microsoft, you can [report a problem through Visual Studio](https://developercommunity.visualstudio.com/report) and share it privately with Microsoft.\r\n-->\r\n\r\n### Expected Behavior\r\n<!--\r\n* The expected output or behavior.\r\n-->\r\nThe binlog should contain the full set of compiler output.  It is missing the most important line with the file/line information.\r\n\r\n### Actual Behavior\r\n<!--\r\n* The actual output or behavior.\r\n-->\r\nThe file/line information for the calling code is missing.  Without this it is not possible to locate the error in a large code base.  I must pipe the output to a txt file and search it for the errors.  That is a much worse experience than using the binlog viewer.\r\n\r\n### Analysis\r\n<!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n-->\r\n\r\n### Versions & Configurations\r\n<!--\r\n* In a Visual Studio developer command prompt, run `msbuild -version` and paste the output here.\r\n* If applicable, include the version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\n* Post any other relevant configuration settings here.\r\n*   OS, architecture, etc.\r\n-->\r\nMSBuild version 17.3.1+2badb37d1 for .NET Framework\r\n17.3.1.41501\r\n\r\nThis device is running Windows 11 (2022 update).",
  "state": "CLOSED",
  "createdAt": "2022-09-30T17:11:03Z",
  "updatedAt": "2022-10-06T19:22:20Z",
  "closedAt": "2022-10-03T21:44:36Z",
  "author": {
    "login": "dmachaj"
  },
  "labels": [
    "bug",
    "Area: Logging",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "The good news is that the desired information is indeed captured in the binlog:\r\n>msbuild /bl repro.sln ...\r\n>msbuild.exe msbuild.binlog /noconlog /flp:v=diag;logfile=diag.log\r\n>type diag.log\r\n...\r\nD:\\Samples\\RawConsoleApp\\header.h(7,39): error C2338: static_assert failed: 'std::is_same<T, int>()' [D:\\Samples\\RawConsoleApp\\RawConsoleApp.vcxproj]\r\nD:\\Samples\\RawConsoleApp\\RawConsoleApp.cpp(10): message : see reference to function template instantiation 'void DoStuff<double>(T)' being compiled [D:\\Samples\\RawConsoleApp\\RawConsoleApp.vcxproj] (TaskId:29)\r\n          with (TaskId:29)\r\n          [ (TaskId:29)\r\n              T=double (TaskId:29)\r\n          ] (TaskId:29)\r\n",
        "createdAt": "2022-10-03T15:52:17Z",
        "updatedAt": "2022-10-03T15:52:17Z",
        "author": {
          "login": "Scottj1s"
        }
      },
      {
        "body": "In that case is it being captured at the wrong output level (e.g. diagnostic but should be minimal)?  Full diagnostic output is far too verbose in most cases.",
        "createdAt": "2022-10-03T21:16:54Z",
        "updatedAt": "2022-10-03T21:16:54Z",
        "author": {
          "login": "dmachaj"
        }
      },
      {
        "body": "No, it's there in minimal:\r\n\r\n```\r\n\u276f msbuild .\\msbuild.binlog -v:m\r\nMSBuild version 17.4.0-preview-22477-01+fcc478938 for .NET Framework\r\n  ConsoleApplication1.cpp\r\nS:\\repro\\dotnet\\msbuild\\issues\\8019\\ConsoleApplication1\\StaticAssertHeader.h(6,39): error C2338: static_assert failed:\r\n'std::is_same<T, int>()' [S:\\repro\\dotnet\\msbuild\\issues\\8019\\ConsoleApplication1\\ConsoleApplication1.vcxproj]\r\nS:\\repro\\dotnet\\msbuild\\issues\\8019\\ConsoleApplication1\\ConsoleApplication1.cpp(8,16): message : see reference to funct\r\nion template instantiation 'void DoStuff<double>(T)' being compiled [S:\\repro\\dotnet\\msbuild\\issues\\8019\\ConsoleApplica\r\ntion1\\ConsoleApplication1.vcxproj]\r\n          with\r\n          [\r\n              T=double\r\n          ]\r\n```\r\n\r\nThis looks like a rendering problem by the log viewer (my guess is it's not rendering file/line info for `Message` events, only warning/error). I'll move the bug.",
        "createdAt": "2022-10-03T21:42:51Z",
        "updatedAt": "2022-10-03T21:42:51Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This issue was moved to KirillOsenkov/MSBuildStructuredLog#622",
        "createdAt": "2022-10-03T21:44:35Z",
        "updatedAt": "2022-10-03T21:44:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thank you @rainersigwald ",
        "createdAt": "2022-10-03T21:48:17Z",
        "updatedAt": "2022-10-03T21:48:17Z",
        "author": {
          "login": "dmachaj"
        }
      },
      {
        "body": "Good bug. The binlog viewer didn't have special support for `CriticalBuildMessageEventArgs`. Turns out the CL task emits it and it's a pretty exotic message type that we apparently haven't encountered much before.\r\n\r\nFixed now:\r\n![image](https://user-images.githubusercontent.com/679326/194400489-f61fa5d9-d437-4cf7-815d-4557c966ac91.png)\r\n\r\nAnd now you can also navigate to the source location if the source file is on the same machine or embedded into the binlog.",
        "createdAt": "2022-10-06T19:21:07Z",
        "updatedAt": "2022-10-06T19:22:20Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}