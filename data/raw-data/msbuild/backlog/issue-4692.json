{
  "number": 4692,
  "title": "Cannot BeforeTargets a dynamic solution traversal target",
  "body": "(This was reported offline by @davkean. Thanks!)\r\n\r\nIt's possible to add targets to a solution build by using [`after.{solutionname}.sln.targets`](https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2019#customize-the-solution-build). It's also possible to specify a target that doesn't exist in the default solution metaproject, which calls that project on all of the projects in the solution (added with #1275).\r\n\r\nBut these features interact badly: you cannot `AfterTargets=\"DynamicallyAddedTraversalTarget\"` in the solution targets.\r\n\r\n[sln-targets-after.zip](https://github.com/microsoft/msbuild/files/3576513/sln-targets-after.zip)\r\n\r\nThe reason this happens is that the traversal targets are injected into the solution metaproject _instance_, after it has evaluated and loaded all of its imports\r\n\r\nhttps://github.com/microsoft/msbuild/blob/440c90a9e61cffb78082313d04dba64bdc8d04f4/src/Build/Construction/Solution/SolutionProjectGenerator.cs#L800-L804\r\n\r\nBut during evaluation, `BeforeTargets` and `AfterTargets` can only point to existent targets\r\n\r\nhttps://github.com/microsoft/msbuild/blob/440c90a9e61cffb78082313d04dba64bdc8d04f4/src/Build/Evaluation/Evaluator.cs#L1129-L1133\r\n\r\nIt looks like this doesn't apply to the known types because of\r\n\r\nhttps://github.com/microsoft/msbuild/blob/440c90a9e61cffb78082313d04dba64bdc8d04f4/src/Build/Construction/Solution/SolutionProjectGenerator.cs#L879-L885\r\n\r\nPerhaps that could just be extended?",
  "state": "CLOSED",
  "createdAt": "2019-09-04T21:28:22Z",
  "updatedAt": "2024-02-21T17:07:16Z",
  "closedAt": "2019-10-08T20:26:31Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Solution (.sln)",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.4"
  },
  "comments": {
    "nodes": []
  }
}