{
  "number": 2772,
  "title": "Can not evaluate project with preserveFormatting = true parameter",
  "body": "Take a commit 87982abc4cbcd298a44fe164f2519b9fbcc10fde from [https://github.com/dotnet/roslyn](roslyn) solution, run Restore.cmd script.\r\nLet's look at the project 'ROSLYN_DIR\\src\\Scripting\\CSharp\\CSharpScripting.csproj'.\r\n\r\nI'm evaluating the project using the next code:\r\n\r\n`var projectRootElement = ProjectRootElement.Open(projectFilePath, projectCollection, false)`\r\n`var project = new Project(projectRootElement, properties, null, projectCollection, ProjectLoadSettings.Default)`\r\n\r\nEverything works.\r\nBut now try to do the same with **preserveFormatting = true** option:\r\n\r\n`var projectRootElement = ProjectRootElement.Open(projectFilePath, projectCollection, true)`\r\n`var project = new Project(projectRootElement, properties, null, projectCollection, ProjectLoadSettings.Default)`\r\n\r\nMsBuild reports the next error: \r\n>The expression \"[System.IO.Path]::Combine(C:\\Temp\\, .NETPortable,Version=v5.0,Profile=\r\n\t\t\t\t.AssemblyAttributes.cs)\" cannot be evaluated. Illegal characters in path.  C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Community\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets at (3223:5)\r\n\r\nI guess the problem is in '\\n' character in the end of 'Profile=' line. For me it looks like unexpected behavior (at least), because I just want to open, edit (add an item for example), and save the project, preserving user spaces and formatting. \r\n\r\nMaybe this is wring API? And there is another one that I can use to edit project files without breaking formatting?\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\nMicrosoft (R) Build Engine version 15.5.160.37545 for .NET Framework\r\n\r\nOS info: Windows 10 Pro 1703, 15063.726",
  "state": "OPEN",
  "createdAt": "2017-12-04T11:45:54Z",
  "updatedAt": "2025-04-29T14:22:32Z",
  "closedAt": null,
  "author": {
    "login": "xtmq"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "bug",
    "help wanted",
    "backlog",
    "Area: Engine",
    "Area: API",
    "Priority:3",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald I saw your activities around - could advice who can be invited to this issue to take a closer look? Thanks a lot in advance! \ud83d\ude4f ",
        "createdAt": "2018-04-02T10:22:36Z",
        "author": {
          "login": "zvirja"
        }
      },
      {
        "body": "@AndyGerlicher @cdmihai @rainersigwald Have you any ideas about this issue?",
        "createdAt": "2018-07-15T11:27:59Z",
        "author": {
          "login": "mfilippov"
        }
      },
      {
        "body": "Not sure what the actual issue was, but it's fixed in 15.8. I was able to repro that exception in 15.7 on the Roslyn repo file, but 15.8 evaluated it just fine. Feel free to re-open if there's still an issue. Because this was a fun use of [MSBuildLocator ](https://www.nuget.org/packages/Microsoft.Build.Locator/)I'll include the source to my repro:\r\n\r\n```C#\r\npublic class Runner\r\n{\r\n    public void Run(string projectFilePath, bool preserveFormatting)\r\n    {\r\n        var projectCollection = new ProjectCollection();\r\n        var properties = new Dictionary<string, string>();\r\n\r\n        var projectRootElement = ProjectRootElement.Open(projectFilePath, projectCollection, preserveFormatting);\r\n        var project = new Project(projectRootElement, properties, null, projectCollection, ProjectLoadSettings.Default);\r\n        Console.WriteLine(\"Success\");\r\n    }\r\n}\r\n\r\npublic class Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        if (args.Length < 2) Environment.Exit(1);\r\n\r\n        var instances = MSBuildLocator.QueryVisualStudioInstances().ToList();\r\n        var msbuildDeploymentToUse = AskWhichMSBuildToUse(instances);\r\n            \r\n        if (msbuildDeploymentToUse.VSInstance != null)\r\n        {\r\n            Console.WriteLine(\r\n                $\"Using MSBuild from VS Instance: {msbuildDeploymentToUse.VSInstance.Name} - {msbuildDeploymentToUse.VSInstance.Version}\");\r\n            Console.WriteLine();\r\n\r\n            MSBuildLocator.RegisterInstance(msbuildDeploymentToUse.VSInstance);\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine($\"Using MSBuild from path: {msbuildDeploymentToUse.MSBuildPath}\");\r\n            Console.WriteLine();\r\n\r\n            MSBuildLocator.RegisterMSBuildPath(msbuildDeploymentToUse.MSBuildPath);\r\n        }\r\n\r\n        var projectFilePath = args[0];\r\n        var preserveFormatting = bool.Parse(args[1]);\r\n        new Runner().Run(projectFilePath, preserveFormatting);\r\n    }\r\n\r\n    // Copy/paste from https://github.com/Microsoft/MSBuildLocator/blob/master/samples/BuilderApp/Program.cs#L54-L108\r\n    private static (VisualStudioInstance VSInstance, string MSBuildPath) AskWhichMSBuildToUse(List<VisualStudioInstance> instances)\r\n    {\r\n        if (instances.Count == 0)\r\n        {\r\n            Console.WriteLine(\"No Visual Studio instances found!\");\r\n        }\r\n\r\n        Console.WriteLine($\"0) Custom path\");\r\n        for (var i = 1; i <= instances.Count; i++)\r\n        {\r\n            var instance = instances[i - 1];\r\n            var recommended = string.Empty;\r\n\r\n            // The dev console is probably always the right choice because the user explicitly opened\r\n            // one associated with a Visual Studio install. It will always be first in the list.\r\n            if (instance.DiscoveryType == DiscoveryType.DeveloperConsole)\r\n                recommended = \" (Recommended!)\";\r\n\r\n            Console.WriteLine($\"{i}) {instance.Name} - {instance.Version}{recommended}\");\r\n        }\r\n\r\n        Console.WriteLine();\r\n        Console.WriteLine(\"Select an instance of MSBuild: \");\r\n        var answer = Console.ReadLine();\r\n\r\n        if (int.TryParse(answer, out int instanceChoice) && instanceChoice >= 0 &&\r\n            instanceChoice <= instances.Count)\r\n        {\r\n            if (instanceChoice == 0)\r\n            {\r\n                Console.WriteLine(\"Input path to MSBuild deployment:\");\r\n                var msbuildPath = Console.ReadLine();\r\n\r\n                if (!Directory.Exists(msbuildPath))\r\n                {\r\n                    Console.WriteLine($\"Directory does not exist: {msbuildPath}\");\r\n                    Environment.Exit(-1);\r\n                }\r\n\r\n                return (null, msbuildPath);\r\n\r\n            }\r\n            else\r\n            {\r\n                var instanceUsed = instances[instanceChoice - 1];\r\n                return (instanceUsed, null);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine($\"{answer} is not a valid response.\");\r\n            Environment.Exit(-1);\r\n        }\r\n\r\n        throw new Exception(\"Invalid parsing\");\r\n    }\r\n}\r\n```\r\n\r\nOutput\r\n```\r\nC:\\>EvaluateProject.exe d:\\src\\roslyn\\src\\Scripting\\CSharp\\CSharpScripting.csproj true\r\n0) Custom path\r\n1) DEVCONSOLE - 15.8.0 (Recommended!)\r\n2) Visual Studio Enterprise 2017 - 15.8.27916.1\r\n3) Visual Studio Enterprise 2017 - 15.7.27703.2042\r\n\r\nSelect an instance of MSBuild:\r\n2\r\nUsing MSBuild from VS Instance: Visual Studio Enterprise 2017 - 15.8.27916.1\r\n\r\nSuccess\r\n\r\nC:\\>EvaluateProject.exe d:\\src\\roslyn\\src\\Scripting\\CSharp\\CSharpScripting.csproj false\r\n0) Custom path\r\n1) DEVCONSOLE - 15.8.0 (Recommended!)\r\n2) Visual Studio Enterprise 2017 - 15.8.27916.1\r\n3) Visual Studio Enterprise 2017 - 15.7.27703.2042\r\n\r\nSelect an instance of MSBuild:\r\n2\r\nUsing MSBuild from VS Instance: Visual Studio Enterprise 2017 - 15.8.27916.1\r\n\r\nSuccess\r\n```\r\n\r\nThe failure on 15.7:\r\n```\r\nC:\\>EvaluateProject.exe d:\\src\\roslyn\\src\\Scripting\\CSharp\\CSharpScripting.csproj true\r\n0) Custom path\r\n1) DEVCONSOLE - 15.8.0 (Recommended!)\r\n2) Visual Studio Enterprise 2017 - 15.8.27916.1\r\n3) Visual Studio Enterprise 2017 - 15.7.27703.2042\r\n\r\nSelect an instance of MSBuild:\r\n3\r\nUsing MSBuild from VS Instance: Visual Studio Enterprise 2017 - 15.7.27703.2042\r\n\r\nUnhandled Exception: Microsoft.Build.Exceptions.InvalidProjectFileException: The expression \"[System.IO.Path]::Combine(C:\\Users\\angerlic\\AppData\\Local\\Temp\\, .NETPortable,Version=v5.0,Profile=\r\n    .AssemblyAttributes.cs)\" cannot be evaluated. Illegal characters in path.  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject[T1,T2](IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1)\r\n   at Microsoft.Build.Evaluation.Expander`2.Function`1.Execute(Object objectInstance, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertyBody(String propertyBody, Object propertyValue, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertiesLeaveTypedAndEscaped(String expression, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertiesLeaveEscaped(String expression, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties)\r\n   at Microsoft.Build.Evaluation.Expander`2.ExpandIntoStringLeaveEscaped(String expression, ExpanderOptions options, IElementLocation elementLocation)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluatePropertyElement(ProjectPropertyElement propertyElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluatePropertyGroupElement(ProjectPropertyGroupElement propertyGroupElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext)\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(ProjectRootElement xml, IDictionary`2 globalProperties, String toolsVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\r\n   at EvaluateProject.Runner.Run(String projectFilePath, Boolean preserveFormatting) in C:\\Users\\angerlic\\source\\repos\\EvaluateProject\\EvaluateProject\\Program.cs:line 113\r\n   at EvaluateProject.Program.Main(String[] args) in C:\\Users\\angerlic\\source\\repos\\EvaluateProject\\EvaluateProject\\Program.cs:line 43\r\n\r\n```",
        "createdAt": "2018-07-17T19:31:16Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Thanks a lot!",
        "createdAt": "2018-07-17T19:42:47Z",
        "author": {
          "login": "xtmq"
        }
      },
      {
        "body": "Hi @AndyGerlicher, issue is still there =(\r\nWhen I set `preserveFormatting = true` MsBuild does not evaluate project, see the example below:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project DefaultTargets=\"Build\" ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <Suffix>\r\n    </Suffix>\r\n    <TargetName>MyFile$(Suffix).exe</TargetName>\r\n    <TargetPath>$([System.IO.Path]::Combine($(ProjectDir),$(TargetName)))</TargetPath>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nError message:\r\n```\r\nThe expression \"[System.IO.Path]::Combine('', MyFile\r\n    .exe)\" cannot be evaluated. Illegal characters in path.  C:\\Work\\TestProject.proj at (7:5)\r\n```\r\n\r\nWithout `preserveFormatting` everything works just fine. \r\n\r\nMsBuild version: 15.9.21+g9802d43bc3",
        "createdAt": "2019-01-15T11:01:05Z",
        "author": {
          "login": "xtmq"
        }
      },
      {
        "body": "@AndyGerlicher could you reopen the issue?",
        "createdAt": "2019-01-16T19:22:16Z",
        "author": {
          "login": "xtmq"
        }
      },
      {
        "body": "@rainersigwald @livarcocc ",
        "createdAt": "2019-01-16T20:30:46Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Any news about this issue?",
        "createdAt": "2019-08-15T12:39:41Z",
        "author": {
          "login": "mfilippov"
        }
      },
      {
        "body": "This is not something that has bubbled up to the top of our list yet. Sorry.",
        "createdAt": "2019-08-15T17:10:17Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "bubble up? :-) I have the same error...",
        "createdAt": "2020-02-20T13:56:56Z",
        "author": {
          "login": "mkress"
        }
      },
      {
        "body": "Is any news about this issue?  since the last comment is two years ago",
        "createdAt": "2022-04-03T08:21:07Z",
        "author": {
          "login": "momadacoding"
        }
      },
      {
        "body": "Team triage:\n\nOur `preserveFormatting` setting basically passes through to [`XmlDocument.PreserveWhitespace`](https://learn.microsoft.com/dotnet/api/system.xml.xmldocument.preservewhitespace). That controls whether `System.Xml` strips \"insignificant\" whitespace before returning objects to us.\n\nIt is reasonable to expect the MSBuild-level OM of the project NOT vary based on `preserveFormatting`.\n\nWe don't immediately see a `System.Xml` API to get \"the `InnerText` of this element _as though `PreserveWhitespace=false`\", but if there is one we should use it when setting properties (and item metadata) when `preserveFormatting=true`.",
        "createdAt": "2025-04-29T14:17:27Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Actually we could fix the specific situation in https://github.com/dotnet/msbuild/issues/2772#issuecomment-454352965 with an additional check here:\n\nhttps://github.com/dotnet/msbuild/blob/76b05f30ac47383541ce02e57dd60f8ad7c27b5a/src/Build/Utilities/Utilities.cs#L191-L196\n\nIf there is exactly one child node and it's `XmlNodeType.SignificantWhitespace`, ignore it.",
        "createdAt": "2025-04-29T14:22:31Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}