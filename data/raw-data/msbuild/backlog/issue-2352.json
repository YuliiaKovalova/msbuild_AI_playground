{
  "number": 2352,
  "title": "Project file is modified unexpectedly when using single file generator",
  "body": ":memo: I'm not sure where this bug lies, but @srivatsn suggested I start by posting it here.\r\n\r\n### Steps to reproduce\r\n\r\n1. Check out DotNetAnalyzers/AsyncUsageAnalyzers@aa124aa616bbe558e6ad3762b8a14159ac46ad3d\r\n1. Open **AsyncUsageAnalyzers.sln** in Visual Studio 2017 15.3 Update 4\r\n1. Right click the AsyncUsageAnalyzers project &rarr; Edit AsyncUsageAnalyzers.csproj\r\n1. Open **Directory.build.targets**\r\n1. Modify the existing code which updates designer files to also set the `DesignTime` and `AutoGen` metadata:\r\n\r\n    ```xml\r\n    <Compile Update=\"**\\*.Designer.cs\">\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n      <DependentUpon>$([System.IO.Path]::ChangeExtension($([System.IO.Path]::GetFileNameWithoutExtension(%(Identity))), '.resx'))</DependentUpon>\r\n    </Compile>\r\n    ```\r\n\r\n1. Add the following lines to **Directory.build.targets**:\r\n\r\n    ```xml\r\n    <ItemGroup>\r\n      <EmbeddedResource Update=\"**\\*.resx\">\r\n        <Generator>ResXFileCodeGenerator</Generator>\r\n        <LastGenOutput>%(Filename).Designer.cs</LastGenOutput>\r\n      </EmbeddedResource>\r\n    </ItemGroup>\r\n    ```\r\n\r\n1. Save the changes to **Directory.build.targets**\r\n\r\n### Expected results\r\n\r\nNo changes are made to **AsyncUsageAnalyzers.csproj**.\r\n\r\n### Actual results\r\n\r\nThe following block is added to **AsyncUsageAnalyzers.csproj**:\r\n\r\n```xml\r\n<ItemGroup>\r\n  <Compile Update=\"Helpers\\HelpersResources.Designer.cs\">\r\n    <DesignTime>True</DesignTime>\r\n    <AutoGen>True</AutoGen>\r\n    <DependentUpon>HelpersResources.resx</DependentUpon>\r\n  </Compile>\r\n  <Compile Update=\"Naming\\NamingResources.Designer.cs\">\r\n    <DesignTime>True</DesignTime>\r\n    <AutoGen>True</AutoGen>\r\n    <DependentUpon>NamingResources.resx</DependentUpon>\r\n  </Compile>\r\n  <Compile Update=\"Reliability\\ReliabilityResources.Designer.cs\">\r\n    <DesignTime>True</DesignTime>\r\n    <AutoGen>True</AutoGen>\r\n    <DependentUpon>ReliabilityResources.resx</DependentUpon>\r\n  </Compile>\r\n  <Compile Update=\"Resources.Designer.cs\">\r\n    <DesignTime>True</DesignTime>\r\n    <AutoGen>True</AutoGen>\r\n    <DependentUpon>Resources.resx</DependentUpon>\r\n  </Compile>\r\n  <Compile Update=\"Usage\\UsageResources.Designer.cs\">\r\n    <DesignTime>True</DesignTime>\r\n    <AutoGen>True</AutoGen>\r\n    <DependentUpon>UsageResources.resx</DependentUpon>\r\n  </Compile>\r\n</ItemGroup>\r\n\r\n<ItemGroup>\r\n  <EmbeddedResource Update=\"Helpers\\HelpersResources.resx\">\r\n    <Generator>ResXFileCodeGenerator</Generator>\r\n    <LastGenOutput>HelpersResources.Designer.cs</LastGenOutput>\r\n  </EmbeddedResource>\r\n  <EmbeddedResource Update=\"Naming\\NamingResources.resx\">\r\n    <Generator>ResXFileCodeGenerator</Generator>\r\n    <LastGenOutput>NamingResources.Designer.cs</LastGenOutput>\r\n  </EmbeddedResource>\r\n  <EmbeddedResource Update=\"Reliability\\ReliabilityResources.resx\">\r\n    <Generator>ResXFileCodeGenerator</Generator>\r\n    <LastGenOutput>ReliabilityResources.Designer.cs</LastGenOutput>\r\n  </EmbeddedResource>\r\n  <EmbeddedResource Update=\"Resources.resx\">\r\n    <Generator>ResXFileCodeGenerator</Generator>\r\n    <LastGenOutput>Resources.Designer.cs</LastGenOutput>\r\n  </EmbeddedResource>\r\n  <EmbeddedResource Update=\"Usage\\UsageResources.resx\">\r\n    <Generator>ResXFileCodeGenerator</Generator>\r\n    <LastGenOutput>UsageResources.Designer.cs</LastGenOutput>\r\n  </EmbeddedResource>\r\n</ItemGroup>\r\n```",
  "state": "CLOSED",
  "createdAt": "2017-07-25T23:08:20Z",
  "updatedAt": "2024-02-21T17:17:42Z",
  "closedAt": "2017-07-26T16:20:00Z",
  "author": {
    "login": "sharwell"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Just tried this, and it appears to only happen when the new project system's \"edit project file\" window is open. Since that window does some trickery with multiple files and evaluation states for the project, I bet what we're seeing is torn state between the project instances resulting in CPS wanting to fix up the project file to match the observed state.\r\n\r\nIt [looks like](https://github.com/dotnet/project-system/pull/2590) that functionality has recently moved into CPS, so I'm moving this to internal bug: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/470015.",
        "createdAt": "2017-07-26T16:20:00Z",
        "updatedAt": "2017-07-26T16:20:00Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This happens all the time for me in VS 15.9.5, even if the project file edit window is closed, as soon as a single-file generator of any kind is involved from what I can tell.\r\n\r\nAs I don't have access to that internal link, can you give a status update on this @rainersigwald? Thanks.\r\n",
        "createdAt": "2019-01-14T16:51:44Z",
        "updatedAt": "2019-01-14T16:51:44Z",
        "author": {
          "login": "ltrzesniewski"
        }
      }
    ]
  }
}