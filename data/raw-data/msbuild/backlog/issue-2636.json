{
  "number": 2636,
  "title": "Cannot query SdkResolvers for available SDKs",
  "body": "I have a VS for Mac extension that provides IntelliSense for MSBuild. I'm able to use SdkResolvers to resolve SDKs, but there's no way to query a resolver for the SDKs that it can resolve, which makes it ~impossible to implement good IntelliSense for Sdk attribute values.",
  "state": "OPEN",
  "createdAt": "2017-10-12T18:51:18Z",
  "updatedAt": "2024-02-21T16:35:35Z",
  "closedAt": null,
  "author": {
    "login": "mhutch"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I'm not sure this would be the right solution. The SdkResolver should be more of an internal construct not something we would expose. Somewhat similar to `MSBuildExtensionsPath`, but that aspect of it (not knowing the path) is one of our perceived benefits of the SdkResolver design. Ideally these are packages coming from NuGet, but that didn't make 15.5. Hopefully the next bigger release. At that point it would be any NuGet package of the SDK package type. I'm not really sure how that would work with a query for packages it can resolve. And to be clear the good intellisense is for the SDK name not code right?",
        "createdAt": "2017-10-12T22:14:18Z",
        "updatedAt": "2017-10-12T22:14:18Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "The IntelliSense in this case is for the SDK name (though my extension also resolves the SDK and scans it to infer available item and property names). Right now I have very simple Sdk name IntelliSense that just scans for folders in the main `Sdks` directory. The problem is that none of the .NET Core SDKs show up, nor does my MonoUE SDK, since they both are installed elsewhere on the local filesystem and resolved via resolvers.\r\n\r\nI'm fine with the NuGet SdkResolver not being able to provide a list of names that it can resolve, I can query the NuGet feeds and add those items into the list myself. But not all Sdks will necessarily be on NuGet, so I want resolvers that resolve locally to be able to tell me what SDKs exist in the locations from which they resolve.",
        "createdAt": "2017-10-13T15:10:55Z",
        "updatedAt": "2017-10-13T15:10:55Z",
        "author": {
          "login": "mhutch"
        }
      },
      {
        "body": "+1\r\nRider team also needs an API to enumerate all installed SDKs. Unlike Visual Studio, Rider can work with different MsBuilds installed on the machine. We detect them all and try to guess which one fits better for the particular solution. But without knowledge about local SDKs we can not implement this in a right way...",
        "createdAt": "2018-11-06T15:56:22Z",
        "updatedAt": "2018-11-06T15:56:22Z",
        "author": {
          "login": "xtmq"
        }
      }
    ]
  }
}