{
  "number": 3036,
  "title": "ToolLocationHelper.GetPathToReferenceAssemblies not thread safe",
  "body": "*Sadly no clear repro on this one but I think a fix can be found by just looking at the code (which I did briefly).*\r\n\r\nI'm evaluating in // many .csproj from a huge solution (hundreds of projects) to get their output path. Sometimes on some build machines I get:\r\n```\r\nThe expression \"[Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToStandardLibraries(.NETFramework, v4.6.1, '', AnyCPU)\" cannot be evaluated. \r\nCollection was modified; enumeration operation may not execute. \r\nC:\\Program Files (x86)\\MSBuild\\14.0\\bin\\amd64\\Microsoft.Common.CurrentVersion.targets\r\n```\r\n\r\nI'm using Microsoft.Build@15.5.180 and my .sln is a VS2015 one.\r\n\r\nWhen looking at the code:\r\nhttps://github.com/Microsoft/msbuild/blob/75e5117ab8be40faad4601904600aceae6bf9ee1/src/Utilities/ToolLocationHelper.cs#L1779\r\nThere is some lock around some static variables but I guess some might be missing when iterating on the returned list. Maybe use ConcurrentDictionnary ?\r\n",
  "state": "CLOSED",
  "createdAt": "2018-02-27T11:22:46Z",
  "updatedAt": "2024-02-21T17:14:16Z",
  "closedAt": "2018-07-25T22:05:39Z",
  "author": {
    "login": "jairbubbles"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I noticed that in this location after publishing dotNetFrameworkReferenceAssemblies into s_cachedReferenceAssemblyPaths for other threads to see, the function goes on to modify its content:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/75e5117ab8be40faad4601904600aceae6bf9ee1/src/Utilities/ToolLocationHelper.cs#L2226-L2242\r\n\r\nI don't think that would cause the symptom above, but it is odd to share something via a cache and then continue to modify individual elements.",
        "createdAt": "2018-03-02T17:07:17Z",
        "updatedAt": "2018-03-02T17:07:17Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I tried to reproduce my issue by writing simple code which evaluate in // many projects but nothing worked.\r\n\r\nMy last blind fix consisted to make all my .csproj in my solution to target .NET Framework 4.6.1 (3 of them were targetting older frameworks). But it didn't work and the crash reappeared on the build machines.",
        "createdAt": "2018-03-02T17:11:32Z",
        "updatedAt": "2018-03-02T17:11:32Z",
        "author": {
          "login": "jairbubbles"
        }
      },
      {
        "body": "@danmosemsft I think you correctly identified the race condition.  Modifying the `dotNetFrameworkReferenceAssemblies` collection after publishing it bumps its version and breaks the `foreach` loop in the `GetPathToStandardLibraries` method.  To fix the issue, we need to move publishing after the `for` loop that modifies the collection.",
        "createdAt": "2018-07-24T22:30:23Z",
        "updatedAt": "2018-07-24T22:30:23Z",
        "author": {
          "login": "AntonLapounov"
        }
      }
    ]
  }
}