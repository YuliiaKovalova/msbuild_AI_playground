{
  "number": 5742,
  "title": "NuGet Invalid Version String - on Linux when os-versions includes a space in the version",
  "body": "@shyzus commented on [Tue, 01 Sep 2020 01:47:50 GMT](https://github.com/NuGet/Home/issues/9972)\r\n# Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): dotnet\r\n\r\nNuGet version (x.x.x.xxx): 5.4.0.2\r\n\r\ndotnet.exe --version (if appropriate): 3.1.106\r\n\r\nVS version (if appropriate): N/A\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Fedora 32.20200831.0 (Silverblue)\r\n\r\nWorked before? If so, with which NuGet version: N/A\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create toolbox in silverblue with:\r\n`toolbox create --container dotnet-toolbox`\r\n\r\n2. Enter toolbox:\r\n`toolbox enter dotnet-toolbox`\r\n\r\n3. Install required packages: \r\n`sudo dnf install dotnet-sdk-3.1 dotnet-host dotnet dotnet-templates-3.1 dotnet-targeting-pack-3.1 dotnet-apphost-pack-3.1 dotnet-build-reference-packages mono-devel`\r\n\r\n4. Create a new Command Line Application\r\n`mkdir MyConsoleApp`\r\n`cd MyConsoleApp`\r\n`dotnet new console`\r\n\r\n5. Attempt to build\r\n`dotnet build`\r\n\r\n## Other suggested things\r\n\r\nThis can be solved with a hotfix for other Silverblue users by modifying their /etc/os-release file and removing any whitespaces and any parenthesis e.g \"()\".\r\n\r\nHowever I would suggest whatever code is determining whether a version is valid or invalid is updated to permit whitespaces and/or parenthesis. I am not aware of any issues this change would cause and would like to see this change implemented.\r\n\r\n### Logs\r\n\r\n> Microsoft (R) Build Engine version 16.4.0+e901037fe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n>\r\n>/usr/lib64/dotnet/sdk/3.1.106/NuGet.targets(123,5): error : '32 (Container Image)' is not a valid version string. (Parameter 'value') [/var/home/falcon/RiderProjects/consoleapp/consoleapp.csproj]\r\n>\r\n>Build FAILED.\r\n>\r\n>/usr/lib64/dotnet/sdk/3.1.106/NuGet.targets(123,5): error : '32 (Container Image)' is not a valid version string. (Parameter 'value') [/var/home/falcon/RiderProjects/consoleapp/consoleapp.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n>\r\n>Time Elapsed 00:00:00.46\r\n\r\n\r\n### Sample Project\r\nSee step 3.\r\n\r\n_Edited: Added missing step_",
  "state": "OPEN",
  "createdAt": "2020-09-17T17:26:07Z",
  "updatedAt": "2024-02-21T16:28:57Z",
  "closedAt": null,
  "author": {
    "login": "nkolev92"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@rrelyea commented on [Fri, 04 Sep 2020 23:10:02 GMT](https://github.com/NuGet/Home/issues/9972#issuecomment-687456096)\r\n@shyzus - since I don't have SilverBlue around...can you tell us one thing?\r\n\r\nA) what is the content in that older version of the SDK in NUGet.Targets around line 123 (which raised the error).\r\nB) does this also repro if you call \"dotnet restore\" ... or only if you call dotnet build?\r\nC) can you increase the verbosity to see more details of the error?\r\nD) this is likely a call from NuGet to NetCore runtime..unsure how we would use this.\r\n\r\nLooks like https://www.man7.org/linux/man-pages/man5/os-release.5.html specifies that a space and parens can be there such as: \"32 (Container Image)\" -- ",
        "createdAt": "2020-09-17T17:26:08Z",
        "updatedAt": "2020-09-17T17:26:08Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "@shyzus commented on [Thu, 10 Sep 2020 02:18:45 GMT](https://github.com/NuGet/Home/issues/9972#issuecomment-689932339)\r\n@rrelyea Thanks for responding and sorry for the late reply.\r\n\r\nA) It seems to be a call to restore, see the snippet below:\r\n\r\n```\r\n<RestoreTask\r\n      RestoreGraphItems=\"@(_RestoreGraphEntryFiltered)\"\r\n      RestoreDisableParallel=\"$(RestoreDisableParallel)\"\r\n      RestoreNoCache=\"$(RestoreNoCache)\"\r\n      RestoreIgnoreFailedSources=\"$(RestoreIgnoreFailedSources)\"\r\n      RestoreRecursive=\"$(RestoreRecursive)\"\r\n      RestoreForce=\"$(RestoreForce)\"\r\n      HideWarningsAndErrors=\"$(HideWarningsAndErrors)\"\r\n      Interactive=\"$(NuGetInteractive)\"\r\n      RestoreForceEvaluate=\"$(RestoreForceEvaluate)\"/>\r\n  </Target>\r\n```\r\n\r\nB) Yes when executing `dotnet restore` the same error description is given, see the snippet below:\r\n```\r\n/usr/lib64/dotnet/sdk/3.1.106/NuGet.targets(123,5): error : '32 (Container Image)' is not a valid version string. (Parameter 'value') [/var/home/falcon/RiderProjects/consoleapp/consoleapp.csproj]\r\n```\r\nC) Yes, I have run the command ```dotnet restore --verbosity diagnostic``` and placed the result into a log file:\r\n[error.log](https://github.com/NuGet/Home/files/5198796/error.log)\r\n\r\nD) If this isn't the appropriate project to submit this issue to, il gladly try and transfer it to the one you believe is appropriate.\r\n\r\n_Edit: Grammer and spelling_",
        "createdAt": "2020-09-17T17:26:09Z",
        "updatedAt": "2020-09-17T17:26:09Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "@zkat commented on [Thu, 10 Sep 2020 18:00:31 GMT](https://github.com/NuGet/Home/issues/9972#issuecomment-690584972)\r\nIt looks like this is happening due to the `$VERSION` env variable being set, which is used by msbuild, which initializes properties with env vars (see https://github.com/dotnet/msbuild/issues/2713).\r\n\r\nEven if we fix the NuGet side of this, it's likely you'll just run into a separate build error anyway. Is it possible to just remove/clear that environment variable? That might be enough to get this working for you.",
        "createdAt": "2020-09-17T17:26:10Z",
        "updatedAt": "2020-09-17T17:26:10Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "@shyzus commented on [Sat, 12 Sep 2020 16:52:06 GMT](https://github.com/NuGet/Home/issues/9972#issuecomment-691516070)\r\n@zkat Well I am not certain how I would go about preventing ```$VERSION``` from being set. But I have tried out modifying my ```/etc/os-release``` file as mentioned in my primary post. This allowed me to successfully use ```dotnet restore``` and successfully build and run the basic hello world CLI project generated by ``` dotnet new console```.\r\n\r\nIt would seem to be that there are some checks within the ```restore``` command that prevent it from running successfully if certain characters are present in the ```VERSION``` variable of my ```/etc/os-release``` file.",
        "createdAt": "2020-09-17T17:26:11Z",
        "updatedAt": "2020-09-17T17:26:11Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "@nkolev92 commented on [Thu, 17 Sep 2020 17:24:28 GMT](https://github.com/NuGet/Home/issues/9972#issuecomment-694381140)\r\nHey @shyzus, \r\n\r\nThe behavior here is driven by an MSBuild feature where environment variables are translates to properties. See: https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-use-environment-variables-in-a-build?view=vs-2019. \r\n\r\nGiven that the decision is coming from MSBuild moving to their repo and they'll be able to answer more questions.",
        "createdAt": "2020-09-17T17:26:12Z",
        "updatedAt": "2020-09-17T17:26:12Z",
        "author": {
          "login": "nkolev92"
        }
      }
    ]
  }
}