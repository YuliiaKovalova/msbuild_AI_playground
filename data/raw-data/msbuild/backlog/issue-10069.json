{
  "number": 10069,
  "title": "[Bug]: Container Build error on .NET 6.0.29 and .NET SDK 6.0.421",
  "body": "### Issue Description\r\n\r\nWe are attempting to build with a self hosted agent.  The Host OS for the Build Server is Windows Server 2022 Data Center - Azure Edition.  We are using Docker CE on the build server.  Our project does contain a resx file.  we get the following:\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018: The \"GenerateResource\" task failed unexpectedly. [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018: System.Runtime.InteropServices.COMException (0x80040154): Retrieving the COM class factory for component with CLSID {7B8A2D94-0AC9-11D1-896C-00C04FB6BFC4} failed due to the following error: 80040154 Class not registered (0x80040154 (REGDB_E_CLASSNOTREG)). [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at System.RuntimeTypeHandle.AllocateComObject(Void* pClassFactory) [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions) [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at Microsoft.Build.Tasks.GenerateResource.IsDangerous(String filename) [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at Microsoft.Build.Tasks.GenerateResource.Execute() [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\n\r\nI checked the file system and urlmon.dll does exist.  I checked the registry and it is registered.\r\n\r\nThe following is a simple test project that reproduces the issue. \r\n[NID.TestDeploy.zip](https://github.com/dotnet/msbuild/files/15097658/NID.TestDeploy.zip)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nSetup a Windows Server 2022 Datacenter Azure Edition as a self hosted agent for Azure DevOps.  Install and Configure Docker CE.\r\nInstall-Module -Name DockerMsftProvider -Repository PSGallery -Force     \r\n[Prepare Windows operating system containers | Microsoft Learn](https://learn.microsoft.com/en-us/virtualization/windowscontainers/quick-start/set-up-environment?tabs=dockerce#windows-server-1)\r\n[Configure Docker in Windows | Microsoft Learn](https://learn.microsoft.com/en-us/virtualization/windowscontainers/manage-docker/configure-docker-daemon)\r\nBe sure to add the user that the Azure Devops Agent service is running as to a local windows group and add the group to the 'group' section of the daemon.json at C:\\ProgramData\\docker\\config.   Install Visual Studio 2022 build tools.  Create a pipeline in Azure Devops.  Run the pipeline.\r\n\r\n### Expected Behavior\r\n\r\nExpect for the container to be built.\r\n\r\n### Actual Behavior\r\n\r\nBuild fails with the following:\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018: The \"GenerateResource\" task failed unexpectedly. [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018: System.Runtime.InteropServices.COMException (0x80040154): Retrieving the COM class factory for component with CLSID {7B8A2D94-0AC9-11D1-896C-00C04FB6BFC4} failed due to the following error: 80040154 Class not registered (0x80040154 (REGDB_E_CLASSNOTREG)). [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at System.RuntimeTypeHandle.AllocateComObject(Void* pClassFactory) [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions) [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at Microsoft.Build.Tasks.GenerateResource.IsDangerous(String filename) [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at Microsoft.Build.Tasks.GenerateResource.Execute() [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.421\\Microsoft.Common.CurrentVersion.targets(3262,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\src\\NID.TestDeploy\\NID.TestDeploy.csproj]\r\n\r\n\r\n### Analysis\r\n\r\n_No response_\r\n\r\n### Versions & Configurations\r\n\r\nMSBuild version 17.9.8+b34f75857 for .NET Framework\r\n17.9.8.16306",
  "state": "CLOSED",
  "createdAt": "2024-04-24T16:49:54Z",
  "updatedAt": "2024-06-26T15:40:37Z",
  "closedAt": "2024-06-26T15:40:37Z",
  "author": {
    "login": "christian-eaton"
  },
  "labels": [
    "bug",
    "needs-investigation"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "GangWang01"
      },
      {
        "login": "AR-May"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "team triage: @GangWang01 can you try to repro this?\r\n",
        "createdAt": "2024-04-30T13:34:12Z",
        "updatedAt": "2024-04-30T13:34:12Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "I have same problem. I am using Docker Desktop in Windows mode. At do \"dotnet publish\" (defined in dockerfile of service) using docker compose, the error happen. At do \"dotnet build\", where it succed a step back, not happen.\r\n\r\nI am looking this file:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/main/src/Tasks/GenerateResource.cs\r\n\r\nMaybe the question is how we can skip the calling to \"IsDangerous\" method.",
        "createdAt": "2024-05-01T03:09:43Z",
        "updatedAt": "2024-05-01T03:21:06Z",
        "author": {
          "login": "esfernandez"
        }
      },
      {
        "body": "I could repro this issue using Docker Desktop with Windows container on Windows. Note that this issue could not be reproduced with Linux container.\r\nIt may be duplicated with https://github.com/dotnet/msbuild/issues/7946 which was fixed in vs17.5. Referring to https://github.com/dotnet/msbuild/issues/7946#issuecomment-1238304681, we can work around by using Windows Server Core for the SDK tag as build `FROM mcr.microsoft.com/dotnet/sdk:6.0.420-windowsservercore-ltsc2022 AS build`. I verified the workaround and it worked.\r\n\r\nSince SDK 6.0.421 has `MSBuild version 17.3.2+561848881 for .NET` which doesn't have the fix, the issue appears.\r\n",
        "createdAt": "2024-06-18T09:29:37Z",
        "updatedAt": "2024-06-18T09:29:37Z",
        "author": {
          "login": "GangWang01"
        }
      },
      {
        "body": "`mcr.microsoft.com/dotnet/sdk:7.0` or later has the fix and works well as build.",
        "createdAt": "2024-06-21T05:55:22Z",
        "updatedAt": "2024-06-21T05:55:22Z",
        "author": {
          "login": "GangWang01"
        }
      },
      {
        "body": "@baronfel This issue was fixed in vs17.5 branch, which corresponds to sdk 7.0. Should we consider backporting it to sdk 6.0 as well?",
        "createdAt": "2024-06-26T13:17:49Z",
        "updatedAt": "2024-06-26T13:17:49Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "No, we are in the last 6 months of 6.0 support, which means we only do security fixes at this point.",
        "createdAt": "2024-06-26T13:26:49Z",
        "updatedAt": "2024-06-26T13:26:49Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "Closing this issue then. Please feel free to re-open it if @GangWang01 suggestions does not resolve your issue.",
        "createdAt": "2024-06-26T15:40:37Z",
        "updatedAt": "2024-06-26T15:40:37Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}