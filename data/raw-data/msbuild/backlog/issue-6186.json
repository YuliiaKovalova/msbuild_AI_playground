{
  "number": 6186,
  "title": "Regression when loading NuGet in MSBuild tasks",
  "body": "### Issue Description\r\nhttps://github.com/dotnet/msbuild/pull/6126 pins NuGet loads from tasks to use the one in the SDK directly regardless of the version referenced by tasks.  This will unnaturally pin NuGet to the SDK version which will cause issues when tasks need to move ahead either for testing or for general functionality.  In the past we've been very careful about pinning NuGet.\r\n\r\nAdditionally, the closure of NuGet's assemblies is not loaded from ALC.  This leads to type unification problems, since the first load from MSBuild will cause NuGet to bind to these assemblies in MSBuild, then a task which runs later will bind to it's local copy (even if it is the exact same version).  https://github.com/dotnet/runtime/pull/48462#issuecomment-782854316\r\n```\r\n.packages/microsoft.dotnet.build.tasks.packaging/6.0.0-beta.21120.1/build/Packaging.targets(747,5): error MSB4018: (NETCORE_ENGINEERING_TELEMETRY=Build) The \"GenerateRuntimeDependencies\" task failed unexpectedly.\r\nSystem.MissingMethodException: Method not found: 'Void NuGet.RuntimeModel.JsonObjectWriter..ctor(Newtonsoft.Json.JsonWriter)'.\r\n   at Microsoft.DotNet.Build.Tasks.Packaging.NuGetUtility.WriteRuntimeGraph(String filePath, RuntimeGraph runtimeGraph)\r\n   at Microsoft.DotNet.Build.Tasks.Packaging.GenerateRuntimeDependencies.Execute() in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/GenerateRuntimeDependencies.cs:line 144\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask)\r\n```\r\n\r\ncc @ViktorHofer \r\n\r\n### Steps to Reproduce\r\n1. Run a task which uses both NuGet and Newtonsoft.JSON and calls NuGet APIs which use Newtonsoft.JSON types.  EG: https://github.com/dotnet/arcade/blob/ca7fab569267ed3bc73360882d652d119aae5653/src/Microsoft.DotNet.Build.Tasks.Packaging/src/GenerateRuntimeDependencies.cs\r\n\r\n\r\n### Expected Behavior\r\nTask runs to completion.\r\n\r\n### Actual Behavior\r\nTask fails with MissingMethodException since the calling task assembly and NuGet don't agree on the assembly that Newtonsoft.Json.JsonWriter lives in.\r\n\r\n### Analysis\r\nI think we need to rethink the solution for https://github.com/dotnet/msbuild/pull/6126.  I don't think the host should be pinning assemblies which don't need to unify.\r\n\r\nIt should be *possible* for tasks to defer to MSBuild's copy of assemblies if that works well for them.  In those cases the task should omit the entire assembly closure graph for those assemblies from their task layout, and they should ensure that they reference a version that is <= the one in MSBuild.  As part of the performance investigation/work we should go and talk to the folks that are bundling NuGet and ask them if they are OK with making this change to improve performance.\r\n\r\n### Versions & Configurations\r\ndotnet sdk 6.0.100-preview.2.21118.7\r\n\r\nBinlog from when building the coreclr packages in dotnet/runtime which shows the `MissingMethodException`: \r\n[msbuild.zip](https://github.com/dotnet/msbuild/files/6031275/msbuild.zip)",
  "state": "CLOSED",
  "createdAt": "2021-02-23T18:46:26Z",
  "updatedAt": "2024-02-21T14:14:46Z",
  "closedAt": "2021-03-03T20:34:17Z",
  "author": {
    "login": "ericstj"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "brianrob"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "cc @marcpopMSFT @ladipro @brianrob @stephentoub @ViktorHofer \r\nFYI: This might be preview2 blocking",
        "createdAt": "2021-02-23T18:47:46Z",
        "updatedAt": "2021-02-23T18:47:46Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "@ericstj do you mean net6 preview 2 or 16.10 preview2 as the former has two days and the latter has a month?  If the former, I'd recommend that Brian just back out the previous change and we get approval to merge the dependency flow once this gets into the SDK repo.  Note that 16.10-preview1 has this in it I believe and it's too late for that.",
        "createdAt": "2021-02-24T17:25:27Z",
        "updatedAt": "2021-02-24T17:25:27Z",
        "author": {
          "login": "marcpopMSFT"
        }
      },
      {
        "body": "I was just thinking the latter.",
        "createdAt": "2021-02-24T19:29:40Z",
        "updatedAt": "2021-02-24T19:29:40Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "Thanks @ericstj.  In that case, I'll abandon the straight revert (#6195), and go with the revert and fix (#6189)..",
        "createdAt": "2021-02-24T19:42:46Z",
        "updatedAt": "2021-02-24T19:42:46Z",
        "author": {
          "login": "brianrob"
        }
      },
      {
        "body": "Actually I might have confused this as Marc was asking me something different in chat. If possible let's add revert to net6.0 preview2.  @marcpopMSFT  was asking me about a VS release which I didn't think needed to be reset.",
        "createdAt": "2021-02-24T19:48:14Z",
        "updatedAt": "2021-02-24T19:49:26Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "To clarify @brianrob, I had an offline conversation with Eric because of the short timeframe. He wants this fixed in preview 2 for which we have only a couple more days so I suggest still proceeding with the straight revert for net6 preview 2 and get the full fix in for preview3/16.10 preview 3.",
        "createdAt": "2021-02-24T19:51:12Z",
        "updatedAt": "2021-02-24T19:51:12Z",
        "author": {
          "login": "marcpopMSFT"
        }
      },
      {
        "body": "Yup, @ericstj and I are having the same conversation right now.  The straight revert looks ready.  I just don't have merge permissions for it.",
        "createdAt": "2021-02-24T19:57:55Z",
        "updatedAt": "2021-02-24T19:57:55Z",
        "author": {
          "login": "brianrob"
        }
      }
    ]
  }
}