{
  "number": 10219,
  "title": "[Bug]: MSBuild reads projects multiple times, resulting in different project contents at different points in the build",
  "body": "### Issue Description\r\n\r\nWhen a Project is built on a new Node for the first time its contents are read by that node. This can lead to inconsistent views of the contents of that project between Nodes, because each Node keeps a Node-local cache of project files contents.  This can lead users to incorrectly believe that in scenarios where the same project file is read multiple times (like a multi-targeted .NET SDK-style project) the outer build can change project file contents and the inner build will always reflect those changes.\r\n\r\n### Steps to Reproduce\r\n\r\n* Create a multi-targeted .NET SDK style project\r\n* Make a Target in that project that writes content to the project, and condition the target on an outer-build-only Target.\r\n* Build the project using `/m`\r\n* Investigate the binlog and see the changes between the outer and inner builds\r\n\r\n### Expected Behavior\r\n\r\nThe project files content should be read once over the course of the build and that initial content should be used as the basis for all evaluation and execution.\r\n\r\n### Actual Behavior\r\n\r\nEach time a Node loads a project for the first time, the file content is read leading to inconsistent views of the project across evaluations and executions on different Nodes.\r\n\r\n### Analysis\r\n\r\nFixes here are varied - some kind of central reading/coordination layer would need to be in place, and all XML file reads would need to happen over IPC to that coordination layer.\r\n\r\n### Versions & Configurations\r\n\r\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-06-10T17:30:21Z",
  "updatedAt": "2025-04-06T05:33:33Z",
  "closedAt": null,
  "author": {
    "login": "baronfel"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "bug",
    "backlog",
    "needs-design",
    "Priority:3",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "How do you propose handling optional imports? Should it be read despite the condition? Some might not even exist when conditions are not met: e.g., SDK/Package imports.",
        "createdAt": "2025-04-06T05:31:42Z",
        "author": {
          "login": "Nirmal4G"
        }
      }
    ]
  }
}