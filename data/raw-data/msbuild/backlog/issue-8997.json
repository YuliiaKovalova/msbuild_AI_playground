{
  "number": 8997,
  "title": "[Broken Build]: My CsProj file has errors when building in one Sln file, but not in another Sln file",
  "body": "### Issue Description\n\nWhen I build in a master solution that contains every project in our platform, all of the CSProj files compile with some warnings.\r\n\r\nWhen I build in an alternate, minimal Nant solution, I see tons of errors, suggesting that I haven't imported library references, that I clearly have. For instance, we have a logging library with ILogWriter, and it tells me that I haven't pulled in any library that contains ILogWriter.\r\n\r\nKeep in mind, once again, when I build it in the Master Solution, it runs. So it's not that the Logging Library hasn't been built for the proper TargetFramework.\n\n### Steps to Reproduce\n\nI cannot publicly produce a minimal step, but if you look at my notes below, It explains my starting point question, and from there I can try to provide what I can.\n\n### Expected Behavior\n\nI expect my csproj file to build regardless of what Sln file I'm building.\n\n### Actual Behavior\n\nI cannot compile my environment because our nant solution specifically will not compile, due to a project that the nant solution is dependent upon that doesn't build only in the nant solution.\n\n### Ask us questions\n\nI've tracked it down though to the following:\r\nIn Master Solution, the MsBuildRuntimeType is \"Full\". In the Nant solution, the MsBuildRuntimeType is \"Core\".\r\n\r\nthe \"Full\" type uses:\r\nMSBuildExtensionsPath = C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\MSBuild\r\n\r\nThe \"Core\" type uses: \r\nMSBuildExtensionsPath = C:\\Program Files\\dotnet\\sdk\\7.0.203\r\n\r\nIn many projects we use the following Attribute:\r\n<Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\r\n\r\nHowever, in BOTH versions, it looks like MsBuildToolsVersion is no longer set. It seems to me that this attribute is obsolete, and \"$(MsBuildToolsVersion)\" can be replaced with \"Current\", however doing so does not fix it.\r\n\r\nHow does the Build system know whether to use Core or Full? Why is it using Full for a project in one solution, and Core for that same project in another solution? How do I begin fixing this?",
  "state": "CLOSED",
  "createdAt": "2023-07-05T15:43:55Z",
  "updatedAt": "2023-07-11T02:59:59Z",
  "closedAt": "2023-07-11T02:59:58Z",
  "author": {
    "login": "EdLichtman"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Is the \"master solution\" a [Solution (.sln) file](https://learn.microsoft.com/en-us/visualstudio/extensibility/internals/solution-dot-sln-file?view=vs-2022)?\r\n\r\nIs the \"alternate, minimal Nant solution\" also a [Solution (.sln) file](https://learn.microsoft.com/en-us/visualstudio/extensibility/internals/solution-dot-sln-file?view=vs-2022)? Or it is a [NAnt ](https://github.com/nant/nant)file?\r\n\r\nIn the project files (.csproj), what is `TargetFrameworkVersion` set to?\r\n\r\nI'm guessing that the \"Nant solution\" is a NAnt XML file and that NAnt is finding and loading the wrong MSBuild.\r\n\r\nNote that NAnt only supports .Net Framework up to v4.0 and the 'current' release of NAnt is from 2012.",
        "createdAt": "2023-07-08T23:32:36Z",
        "updatedAt": "2023-07-08T23:32:36Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "The nant solution is OurCompany.NantExtensions.csproj, so we build our own tasks for extending Nant. However, there was a problem loading it that seems to be a Nant issue, and I think I correlated it with a rider issue in which Rider was automatically choosing the dotnet sdk MSBuild instead of the Visual Studio MsBuild. I can close this since it was actually an issue in Rider.",
        "createdAt": "2023-07-11T02:59:58Z",
        "updatedAt": "2023-07-11T02:59:58Z",
        "author": {
          "login": "EdLichtman"
        }
      }
    ]
  }
}