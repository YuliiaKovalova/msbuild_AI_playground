{
  "number": 1939,
  "title": "Code to find MSBuild 15 toolset is not resilient to installations with errors",
  "body": "On one machine my VS 2017 installation had errors (which is apparently not uncommon). On that machine hosting MSBuild 15 resulted in a lot of hard-to-diagnose problems. After some investigation I've narrowed it down to the codepath enumerating VS 2017 installations not returning any instances.\r\n\r\nIt turns out the code here is not tolerant against this case:\r\nhttp://source.dot.net/#Microsoft.Build/SharedUtilities/VisualStudioLocationHelper.cs,59\r\n\r\nIt checks for InstanceState.Complete, which is sometimes too restrictive. Here's the InstanceState enum:\r\n```\r\nnamespace Microsoft.VisualStudio.Setup.Configuration\r\n{\r\n    [Flags]\r\n    public enum InstanceState : uint\r\n    {\r\n        None = 0,\r\n        Local = 1,\r\n        Registered = 2,\r\n        NoRebootRequired = 4,\r\n        NoErrors = 8,\r\n        Complete = uint.MaxValue\r\n    }\r\n}\r\n```\r\n\r\nThe code in MSBuild only adds an instance if the state is Complete. However on the machine in question the state was Local | Registered | NoRebootRequired. Due to errors during setup the NoErrors flags was not set.\r\n\r\nMy understanding is that this check should include the instance if the state is anything but None or maybe ignore the State flag entirely.",
  "state": "OPEN",
  "createdAt": "2017-04-04T22:30:29Z",
  "updatedAt": "2024-02-21T16:37:04Z",
  "closedAt": null,
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Consider for Next Major Version"
  },
  "comments": {
    "nodes": [
      {
        "body": "Also raised here: https://github.com/Microsoft/msbuild/commit/68b96728bc2b7c554a37d12723e68e5d37768743#commitcomment-20959231",
        "createdAt": "2017-04-04T22:34:51Z",
        "updatedAt": "2017-04-04T22:34:51Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Here's a simple tool I wrote to debug this: \r\nhttps://github.com/KirillOsenkov/VSInstanceFinder\r\n\r\nAnd here's the official vswhere repo:\r\nhttps://github.com/Microsoft/VSWhere",
        "createdAt": "2017-04-04T23:04:21Z",
        "updatedAt": "2017-04-04T23:04:21Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I've been hit by the same issue.\r\n\r\n@KirillOsenkov Did you find a way to fix the install on the computer? ",
        "createdAt": "2018-08-23T14:50:36Z",
        "updatedAt": "2018-08-23T14:50:36Z",
        "author": {
          "login": "jairbubbles"
        }
      },
      {
        "body": "Yes, I've launched the Visual Studio Installer and uninstalled or updated to make sure that all installed VS instances are healthy.",
        "createdAt": "2018-08-23T16:19:22Z",
        "updatedAt": "2018-08-23T16:19:22Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Ok thx!\r\n\r\nI guess having a detailed log would allow understanding what's going on. I've spent a lot of time figuring out what's happening as it was on someone else's computer \ud83d\ude2d\r\n\r\nThe code the code is not trivial at all, there's a lot of differnt code paths for MsBuildPath detection (`BuildEnvironmentHelper`) but also for toolsets detection (`ToolsetReader`).",
        "createdAt": "2018-08-24T08:26:53Z",
        "updatedAt": "2018-08-24T08:26:53Z",
        "author": {
          "login": "jairbubbles"
        }
      }
    ]
  }
}