{
  "number": 8040,
  "title": "UWP project reference fail when setting TargetPlatformMinVersion.",
  "body": "### Issue Description\r\n\r\nUWP project reference fail when setting `TargetPlatformMinVersion`: `The target \"GetTargetPath\" does not exist in the project.`\r\n\r\n\r\n### Steps to Reproduce\r\nCreate a multi-targeted project like this:\r\n```xml\r\n<Project Sdk=\"MSBuild.Sdk.Extras/3.0.44\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard2.0;uap10.0.19041</TargetFrameworks>\r\n    <TargetPlatformMinVersion Condition=\"'$(TargetFramework)'=='uap10.0.10941'\">10.0.17763.0</TargetPlatformMinVersion>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\nNext create a second project that references this:\r\n```xml\r\n<Project Sdk=\"MSBuild.Sdk.Extras/3.0.44\">\r\n  <PropertyGroup>\r\n    <TargetFramework>uap10.0.19041</TargetFramework>  <!-- Make plural and problem is gone -->\r\n    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion> <!-- Or remove and problem is also gone -->\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Common\\Common.csproj\"  />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nThis causes the build error\r\n> 2>E:\\sources.tmp\\BuildRepro\\Common\\Common.csproj : error MSB4057: The target \"GetTargetPath\" does not exist in the project.\r\n> 2>Done building project \"Common.csproj\" -- FAILED.\r\n\r\nIf you remove TargetPlatformMinVersion or set it to 19041 on the second project, the problem goes away.\r\nIf you replace the second project with a classic UWP class library project, there is no issue.\r\nIf you change `TargetFramework` to `TargetFrameworks` (plural) problem goes away, but it seems inconsistent that a single-targeted project must be using the plural version.\r\n\r\n\r\n### Expected Behavior\r\nProject builds, regardless of minversion or whether `TargetTramework` setting is plural or not..\r\n\r\n### Actual Behavior\r\nerror MSB4057: The target \"GetTargetPath\" does not exist in the project.\r\n\r\n### Analysis\r\n\r\nI didn't find any indication this is an issue with `MSBuild.Sdks.Extras`\r\n\r\n### Versions & Configurations\r\nvs17.3, Windows 10 and 11",
  "state": "OPEN",
  "createdAt": "2022-10-10T17:32:29Z",
  "updatedAt": "2024-01-31T08:16:05Z",
  "closedAt": null,
  "author": {
    "login": "dotMorten"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "> I didn't find any indication this is an issue with `MSBuild.Sdks.Extras`\r\n\r\nCan you reproduce the problem without it? Microsoft doesn't support that SDK, so having the only repro use it is going to push investigating this way down our to-do list.",
        "createdAt": "2022-10-13T16:50:04Z",
        "updatedAt": "2022-10-13T16:50:04Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I haven't explicitly tried no, but I could spend the time setting the same properties that extras are setting. When looking at binlogs and targets files, I didn't find any clear indication that this was caused by extras.\r\n\r\nWhen we're building multi-targeted projects and want to include UWP, extras is today the only viable way to go, unless I also want to get back to hand-building nuspecs and nuget packages again (yuck).",
        "createdAt": "2022-10-13T16:52:51Z",
        "updatedAt": "2022-10-13T16:52:51Z",
        "author": {
          "login": "dotMorten"
        }
      }
    ]
  }
}