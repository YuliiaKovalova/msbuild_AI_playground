{
  "number": 3662,
  "title": "MSBuild does not generate assembly redirects -> results in a runtime MissingMethodException",
  "body": "MSBuild generates assembly redirects nowadays - am I correct? I'm a bit confused why the attached sample project succeeds ([WORKS.zip](https://github.com/Microsoft/msbuild/files/2326898/WORKS.zip)), but as soon as I add the NuGet package reference \"Microsoft.Extensions.DependencyInjection\" v1.1.1 it fails ([FAILS.zip](https://github.com/Microsoft/msbuild/files/2326899/FAILS.zip)).\r\n\r\nShouldn't MSBuild generate an assembly redirect for System.IO.Compression so that only one version is loaded? (and so I don't run into a MissingMethodException in the FAILS.zip example)\r\n\r\nI want to understand why no assembly redirect is generated in this scenario and whether this is by-design or whether it is a bug.\r\n\r\n### Expected  behavior\r\nAssembly redirect for System.IO.Compression\r\n\r\n### Actual behavior\r\nNo assembly redirect, System.IO.Compression is loaded twice into memory, in two different versions, which results in a MissingMethodException in my repro example.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\nMicrosoft (R) Build Engine version 15.8.166+gd4e8d81a88 for .NET Framework\r\n\r\nOS info:\r\nWindows 10\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\nVisual Studio 15.8\r\n",
  "state": "OPEN",
  "createdAt": "2018-08-28T07:08:22Z",
  "updatedAt": "2024-02-21T16:33:13Z",
  "closedAt": null,
  "author": {
    "login": "drauch"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}