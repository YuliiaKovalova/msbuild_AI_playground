{
  "number": 104,
  "title": "Exec task: unicode support",
  "body": "Unicode characters cause Exec task to fail. Example error output:\n\n```\n------ Build started: Project: TSLProject1, Configuration: Debug x64 ------\n    \"C:\\Users\\\u4e2d\u6587\u7528\u6237\\AppData\\Local\\Microsoft\\VisualStudio\\11.0\\Extensions\\qnci5dgg.btj\\Binaries\\Trinity.TSL.Compiler.exe\" --BuildDataModelingProject --ProjectRoot \"c:\\users\\\u4e2d\u6587\u7528\u6237\\documents\\visual studio 2012\\Projects\\TSLProject1\\TSLProject1\" --ScriptList \"MyTSL.tsl\" --OutputPath \"bin\\Debug\\ \" --AssemblyName Trinity.Extension.0.dll --RootNamespace Trinity.Extension --Clean --BuildDataModelingProjectWithDebugFeatures \n    The system cannot find the path specified.\n```\n\nSee also:\n\nhttp://stackoverflow.com/questions/14224496/\n",
  "state": "CLOSED",
  "createdAt": "2015-05-21T11:13:07Z",
  "updatedAt": "2024-02-21T17:31:32Z",
  "closedAt": "2016-05-17T15:50:09Z",
  "author": {
    "login": "v-yadli"
  },
  "labels": [
    "help wanted",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "See [XMakeTasks/Exec.cs#L280-L285](https://github.com/Microsoft/msbuild/blob/a9a35a87866417e383626519e96ffcde26d554ad/src/XMakeTasks/Exec.cs#L280-L285) for some background info.\n",
        "createdAt": "2015-05-21T11:26:43Z",
        "updatedAt": "2015-05-21T11:26:43Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "@akoeplinger I've already read that. For my current task I'm attempting to derive from the Exec task. Will get back to report if it works.\n",
        "createdAt": "2015-05-22T06:20:47Z",
        "updatedAt": "2015-05-22T06:20:47Z",
        "author": {
          "login": "v-yadli"
        }
      },
      {
        "body": "There are other issues with `Exec.cs` as well: https://github.com/dotnet/roslyn/pull/575#discussion_r30915354. The xplat branch is also having `cmd.exe`.\n\n> For my current task I'm attempting to derive from the Exec task. Will get back to report if it works.\n\n@jaredpar, @mmitche, I think probably the efforts can be converged here, either to make `class Exec` aware of environment and culture specifics or sub-class `Exec`/`ToolTaskExtension` to form `NetExec`? \n",
        "createdAt": "2015-05-22T17:57:11Z",
        "updatedAt": "2015-05-22T17:57:11Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "@jasonwilliams200OK That is just the toolname, the actual executable is retrieved as \"sh\" here: [Exec.cs#L582](https://github.com/Microsoft/msbuild/blob/b9d70b679e7b62d6007f85f4e2c82c2f1f45e3c0/src/XMakeTasks/Exec.cs#L582)\n",
        "createdAt": "2015-05-22T18:18:23Z",
        "updatedAt": "2015-05-22T18:18:23Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "It's ugly...\n\n``` C#\n        protected override int ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands)\n        {\n            /* In ExecuteTool Exec will attempt to delete the 'script file'.\n             * That would cause an exception for sure. However,\n             * we could not derive from its base, nor can we invoke\n             * base.base.ExecuteTool. So we make a dummy file for it\n             * to delete. To do this, we invoke base's AddCommandLineCommands\n             * so that it calls CreateTemporaryBatchFile. Since the base's base\n             * already captured our correct parameters, it is safe to hack it.\n             */\n            this.Command = \"TSLCompileTask\"; // This will trick VS to display \"The command 'TSLCompileTask' failed with code...\" on error.\n            Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine = new CommandLineBuilderExtension();\n            base.AddCommandLineCommands(commandLine);\n\n            return base.ExecuteTool(pathToTool, responseFileCommands, commandLineCommands);\n        }\n```\n\nBut at least it works -____-\"\n",
        "createdAt": "2015-05-23T06:04:48Z",
        "updatedAt": "2015-05-23T06:04:48Z",
        "author": {
          "login": "v-yadli"
        }
      },
      {
        "body": "Marking as up-for-grabs as this is something we would like to have working correctly.\n",
        "createdAt": "2015-05-26T22:25:29Z",
        "updatedAt": "2015-05-26T22:25:29Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "@v-yadli Some work was done in https://github.com/Microsoft/msbuild/pull/143 to address this, can you check if that fixes your problem as well?\n",
        "createdAt": "2015-08-13T19:56:12Z",
        "updatedAt": "2015-08-13T19:56:12Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "I'm going to mark this as closed since the fix went in last year.\n",
        "createdAt": "2016-05-17T15:50:09Z",
        "updatedAt": "2016-05-17T15:50:09Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}