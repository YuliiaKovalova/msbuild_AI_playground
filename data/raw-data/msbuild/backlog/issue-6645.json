{
  "number": 6645,
  "title": "[Repo] Remove BOM and xml meta-tag from all files",
  "body": "While #4779 tracks trailing white-space clean-up. This issue tracks removing BOM and xml meta-tag from all the file in the Repo.\r\n\r\n#### Update EditorConfig\r\n\r\nFirst, we should update EditorConfig to add `charset` and set it to `utf-8` to prevent future files marked with BOM (_**B**yte **O**rder **M**ark_).\r\nWe should also segregate files by category to enable charset or spacing changes one set at a time thereby reducing risk.\r\n\r\n- [ ] Add `charset` to EditorConfig\r\n- [ ] Segregate files by category\r\n\r\n---\r\n\r\n#### Remove BOM from all files in the Repo\r\n\r\nAs removing BOM from all the files at once is such a troublesome task; It could fix many lingering issues related to BOM files in MSBuild; It could also introduce regressions. Since, MSBuild have fixed several issues related to BOM; It may be not complete, with precaution, we'll remove BOM case by case basis knowing each category of BOM removed files won't cause trouble down the line!\r\n\r\n- [ ] Remove BOM from sources (_cs_) files\r\n- [ ] Remove BOM from scripts (_cmd/bat/ps1_) files\r\n- [ ] Remove BOM from project (_\\*proj/Directory.Build.\\*_) files\r\n- [ ] Remove BOM from shipping (_props/targets/tasks/xml/xslt_) files\r\n\r\n---\r\n\r\n#### Remove xmlns and meta-tags from all XML files in the Repo\r\n\r\nAs of MSBuild v15, xml/xaml build files doesn't need to specify the default xmlns though there were issues with temporary project generation (_in WPF/Workflow_) requiring xmlns. Since, those issues have been fixed, it's safe to remove them.\r\n\r\nFor xml meta-tag, the default has been utf-8 and v1 for so... long, I don't remember when. Thus, we don't need those meta-tag cluttering the top of the files.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n```\r\n\r\n- [ ] Remove xml meta-tag from all xml (and _xaml_) files\r\n- [ ] Remove xmlns from all xml (and _xaml_) files when possible.\r\n\r\n---\r\n\r\n#### Notes\r\n\r\nIf there's anything I missed please let me know.",
  "state": "CLOSED",
  "createdAt": "2021-06-30T17:19:13Z",
  "updatedAt": "2021-07-13T08:30:16Z",
  "closedAt": "2021-06-30T20:49:54Z",
  "author": {
    "login": "Nirmal4G"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I am **strongly** opposed to this change. I have observed numerous cases in the past where failure to include a BOM in UTF-8 content produced encoding errors in repository files, while never observing problems with the byte order mark included. I've also had to be the person trying to figure out what the original accented character was in the names of people participating briefly in a project, or specially-crafted string literals it tests that were lost because of a random failure to interpret content correctly.\r\n\r\nAs a minimum requirement for moving this forward even in part, I would expect a detailed description of one or more scenarios where the BOM is actively impairing participation without an available workaround. Considering inclusion of a BOM has been the default state for many of these flies for multiple decades, it seems unlikely that such a situation would exist.",
        "createdAt": "2021-06-30T17:22:50Z",
        "updatedAt": "2021-06-30T17:24:33Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "You could find all sorts of issues (_by doing a simple web search_) regarding BOM (_with/without_). Even EditorConfig team and many others prefer BOM to be removed atleast with UTF-8. MSBuild and VS-IDE in recent years have improved a lot. By doing this change and self-hosting we could iron those remaining blockages.",
        "createdAt": "2021-06-30T17:30:06Z",
        "updatedAt": "2021-06-30T17:30:06Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> You could find all sorts of issues (by doing a simple web search) regarding BOM (with/without). Even EditorConfig team and many others prefer BOM to be removed atleast with UTF-8.\r\n\r\nI've been an active participant in this subject for many, many years. It's been my observation that the desire to remove BOM from source code scenarios generally stems from an idealized view of development tools (e.g. it would have been great if all historical encodings were compatible with Unicode encodings, but they were not), and not driven by an active need. Historically, one side of this option has led to occasional problems (utf-8) while the other side reliably has not (utf-8-bom). Considering the BOM is a reliable protection against future encoding errors, the historical default encoding for these files, _and_ a proper supported Unicode encoding with no evidence of impending future problems, there is simply no motivating scenario being presented for a change at this time.\r\n\r\n> By doing this change and self-hosting we could iron those remaining blockages.\r\n\r\nSelf-hosting should focus on the default and recommended configurations, which for these projects continues to be utf-8-bom. Other strategies should be used for validating non-standard configurations.",
        "createdAt": "2021-06-30T17:36:12Z",
        "updatedAt": "2021-06-30T17:38:14Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "> Considering the BOM is a reliable protection against future encoding errors\r\n\r\nTrue but having a byte mark is also the source of much frustrations. We had problems with BOM through the text processing tools we use, though it's the tool author's responsibility to properly follow the Unicode spec but most don't. After careful testing, we removed BOM from all our codebases and we're happy. However, the issues you mentioned still remains but those are now corner cases that affect one/two files in every codebase; especially in localization testing.\r\n\r\nBesides even Windows is letting users change its underlying system codepage to UTF-8. So, detecting UTF-8 without BOM has become much more important. So, adjusting our sources to work with that premise is not a bad thing.",
        "createdAt": "2021-06-30T17:51:49Z",
        "updatedAt": "2021-06-30T17:51:49Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "Team triage: thanks for bringing this up, but it doesn't seem to be worth the churn, given the concerns raised.",
        "createdAt": "2021-06-30T20:49:54Z",
        "updatedAt": "2021-06-30T20:49:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald\n\n> given the concerns raised.\n\nThose concerns may be valid with MSBuild v14 and less but not now.\n\n@sharwell\n\n> in the past where failure to include a BOM...\n\nMay be then, but not now.\n\n\n\n\nThere are files (_yes, in each category I mentioned_) in the repo which doesn't have BOM. We haven't had much issues with them. Also, removing BOM doesn't cause any churn.\n\nThis issue also tracks removals of un-necessary metadata in the files not just BOM. If we choose not to remove something, I'll just update the issue. So, please keep it open.",
        "createdAt": "2021-07-01T02:54:28Z",
        "updatedAt": "2021-07-01T02:54:28Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "Hi @Nirmal4G,\r\n\r\nI'm going to stay subscribed to this issue in case new information comes to light. However, keep in mind that my bar for making a change in this space is the same one I mentioned above:\r\n\r\n> ... I would expect a detailed description of one or more scenarios where the BOM is actively impairing participation [in dotnet/msbuild] without an available workaround ...\r\n\r\nAbsent that, the issue is a request to change a subjective code style preference for which a preferred style has already been established. Like all other similar cases, we typically try to avoid unnecessary code churn by only considering the change if it originates with a project maintainer.\r\n\r\nThanks,\r\nSam",
        "createdAt": "2021-07-01T15:35:17Z",
        "updatedAt": "2021-07-01T15:35:17Z",
        "author": {
          "login": "sharwell"
        }
      }
    ]
  }
}