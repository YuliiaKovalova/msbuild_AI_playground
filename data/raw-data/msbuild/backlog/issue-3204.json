{
  "number": 3204,
  "title": "Log event for slow glob evaluation so VS can alert users",
  "body": "We've seen several reports from customers where glob evaluation has severely affected VS performance:\r\n\r\n1. One customer with ~600 projects and ~200,000 files had a glob in a targets file imported by all projects that looked for files from the root, accounting for 6s out of a total of 8s of evaluation time while loading the solution.\r\n2. It's not uncommon for internal customers to have globs that are rooted by an env var - then when they open in VS without that env var set, the evaluation end up being rooted at `\\` and takes forever.\r\n\r\nWe discussed mitigations for this, and it would be nice if MSBuild could log an event once evaluation has takes more than a certain threshold (ideally including which glob it was and where it was rooted).  Then VS could hook that up to a perf tip.",
  "state": "OPEN",
  "createdAt": "2018-04-17T16:58:54Z",
  "updatedAt": "2025-06-02T08:26:51Z",
  "closedAt": null,
  "author": {
    "login": "Pilchie"
  },
  "milestone": {
    "title": "Backlog"
  },
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Debuggability",
    "Area: Performance",
    "Area: Engine",
    "Priority:1"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Options considered:\r\n\r\na. Specific logging of globs and if it goes over a certain threshold (or always? too much overhead)\r\nb. Can we remember that evaluation was slow and turn on the evaluation profiler the second time?\r\nc. Turn on profiling by defualt in a low-overhead mode which times every operation, but only records the info if it's over a certain amount of time.  Can we do this in a low-enough overhead fashion?\r\n\r\nWe picked a, because we suspect that globs will be by far the most likely offender.",
        "createdAt": "2018-04-17T16:59:54Z",
        "author": {
          "login": "Pilchie"
        }
      },
      {
        "body": "BTW @rainersigwald is there an issue to have MSBuild take advantage of the faster file enumeration .API's shipping in .NET Core 2.1 ? ",
        "createdAt": "2018-04-20T16:37:47Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@cdmihai ^ do we have a bug for that? I know you worked on the design . . .",
        "createdAt": "2018-04-20T16:41:56Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@JanKrivanek please consider for analyzers.",
        "createdAt": "2024-01-09T12:36:49Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "What makes this P1?",
        "createdAt": "2025-02-23T01:44:01Z",
        "author": {
          "login": "BenjaminBrienen"
        }
      }
    ]
  }
}