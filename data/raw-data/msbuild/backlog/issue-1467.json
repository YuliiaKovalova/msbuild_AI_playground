{
  "number": 1467,
  "title": "Null reference exception when shutting down worker nodes",
  "body": "The exception is caught, but it seems like it is some kind of bug.\r\n1. From VS 2017 create a new ASP.NET Core web application (empty is fine)\r\n2. Attach a debugger and enable it to break on NullReferenceExceptions\r\n3. Close VS\r\n\r\nNull reference exception with this stack:\r\n\r\n>\tMicrosoft.Build.dll!Microsoft.Build.BackEnd.NodeProviderOutOfProc.ShutdownAllNodes() Line 180\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.BackEnd.NodeManager.ShutdownAllNodes() Line 185\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Execution.BuildManager.ShutdownAllNodes() Line 718\tC#\r\n \tMicrosoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.BuildManager.BuildManagerAccessor.Shutdown()\tUnknown\r\n \tMicrosoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.BuildManager.BuildManagerPackage.ShutdownEventHandlers()\tUnknown\r\n \tMicrosoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.BuildManager.BuildManagerPackage.Dispose(bool disposing)\tUnknown\r\n \tMicrosoft.VisualStudio.Shell.15.0.dll!Microsoft.VisualStudio.Shell.Package.Microsoft.VisualStudio.Shell.Interop.IVsPackage.Close()\tUnknown\r\n",
  "state": "CLOSED",
  "createdAt": "2016-12-10T00:12:07Z",
  "updatedAt": "2024-02-21T17:23:30Z",
  "closedAt": "2018-04-05T16:37:24Z",
  "author": {
    "login": "BillHiebert"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Consider for Next Major Version"
  },
  "comments": {
    "nodes": [
      {
        "body": "This is because we create a new `NodeManager` (with no `BuildParameters`) on shutdown:\r\n\r\n```\r\n 1      Microsoft.Build.dll!Microsoft.Build.BackEnd.NodeProviderOutOfProc.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost host = {Microsoft.Build.Execution.BuildManager})\r\n 2      Microsoft.Build.dll!Microsoft.Build.BackEnd.BuildComponentFactoryCollection.BuildComponentEntry.GetInstance(Microsoft.Build.BackEnd.IBuildComponentHost host)\r\n 3      Microsoft.Build.dll!Microsoft.Build.BackEnd.BuildComponentFactoryCollection.GetComponent(Microsoft.Build.BackEnd.BuildComponentType type)\r\n 4      Microsoft.Build.dll!Microsoft.Build.Execution.BuildManager.Microsoft.Build.BackEnd.IBuildComponentHost.GetComponent(Microsoft.Build.BackEnd.BuildComponentType type)\r\n 5      Microsoft.Build.dll!Microsoft.Build.BackEnd.NodeManager.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost host)\r\n 6      Microsoft.Build.dll!Microsoft.Build.BackEnd.BuildComponentFactoryCollection.BuildComponentEntry.GetInstance(Microsoft.Build.BackEnd.IBuildComponentHost host)\r\n 7      Microsoft.Build.dll!Microsoft.Build.BackEnd.BuildComponentFactoryCollection.GetComponent(Microsoft.Build.BackEnd.BuildComponentType type)\r\n*8      Microsoft.Build.dll!Microsoft.Build.Execution.BuildManager.Microsoft.Build.BackEnd.IBuildComponentHost.GetComponent(Microsoft.Build.BackEnd.BuildComponentType type)\r\n 9      Microsoft.Build.dll!Microsoft.Build.Execution.BuildManager.ShutdownAllNodes()\r\n 10     Microsoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.BuildManager.BuildManagerAccessor.Shutdown()\r\n 11     Microsoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.BuildManager.BuildManagerPackage.ShutdownEventHandlers()\r\n 12     Microsoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.BuildManager.BuildManagerPackage.Dispose(bool disposing = true)\r\n 13     Microsoft.VisualStudio.Shell.15.0.dll!Microsoft.VisualStudio.Shell.Package.Microsoft.VisualStudio.Shell.Interop.IVsPackage.Close()\r\n```",
        "createdAt": "2016-12-13T17:02:22Z",
        "updatedAt": "2016-12-13T17:02:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Doesn't meet the bar for RTW, pushing out.",
        "createdAt": "2017-01-27T01:45:04Z",
        "updatedAt": "2017-01-27T01:45:04Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I think I'm hitting the same issue now. This is because in BuildComponentEntry the _factory is null:\r\nhttp://source.dot.net/#Microsoft.Build/BackEnd/Components/BuildComponentFactoryCollection.cs,9fc7f1b67fba4f9e,references\r\n\r\nI think we should be checking _factory for null before trying to access it.",
        "createdAt": "2018-01-17T22:03:58Z",
        "updatedAt": "2018-01-17T22:03:58Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "My stack is:\r\n```\r\n>\tMicrosoft.Build.BackEnd.BuildComponentFactoryCollection.BuildComponentEntry.GetInstance Line 220\tC#\tSymbols loaded.\r\n \tMicrosoft.Build.BackEnd.BuildComponentFactoryCollection.GetComponent Line 156\tC#\tSymbols loaded.\r\n \tMicrosoft.Build.Execution.BuildManager.Microsoft.Build.BackEnd.IBuildComponentHost.LoggingService.get Line 319\tC#\tSymbols loaded.\r\n \tMicrosoft.Build.Execution.BuildSubmission.CompleteLogging Line 229\tC#\tSymbols loaded.\r\n \tMicrosoft.Build.Execution.BuildManager.ExecuteSubmission.AnonymousMethod__0 Line 877\tC#\tSymbols loaded.\r\n \tMicrosoft.Build.Execution.BuildManager.ProcessWorkQueue Line 993\tC#\tSymbols loaded.\r\n \tMicrosoft.Build.Execution.BuildManager.BeginBuild.AnonymousMethod__48_0 Line 450\tC#\tSymbols loaded.\r\n```",
        "createdAt": "2018-01-17T22:04:20Z",
        "updatedAt": "2018-01-17T22:04:20Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Nope, I think my issue is different. Filed https://github.com/Microsoft/msbuild/issues/2871.",
        "createdAt": "2018-01-17T22:20:42Z",
        "updatedAt": "2018-01-17T22:20:42Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}