{
  "number": 11702,
  "title": "Invoking task loaded by `UsingTask` fails when path to assembly contains an `@`",
  "body": "### Issue Description\n\nWhen the path to the assembly used in `UsingTask` contains an `@`, trying to use the loaded task fails with `MSB4062` (Task could not be loaded; could not find part of the path.).\n\nEncountered this in a random build failure in Jenkins; it generates workspace names based on the job name, but crucially, it will add `@` + a number in some cases (such as when the folder with the plain name is in use).\n\nThe text after the `@` does not matter; initially saw it with `@2` (`%402`), but `@foo` also fails (`%40foo`), as does having the `@` as first or last character in a folder name.\n\n### Steps to Reproduce\n\nI'll try to create a minimal example, but the general gist is:\n\n1. Have a project that uses `UsingTask` to load an MSBuild task from an assembly.\n3. Have a target that executes that task.\n4. Build that target to verify that it works.\n5. Rename one of the folders along the path containing the build task assembly to include an `@`.\n6. Try building the target again.\n\n### Expected Behavior\n\nExecuting the task works regardless of the path to the assembly containing it.\n\n### Actual Behavior\n\n```\nerror MSB4062: The \"HelloWorld\" task could not be loaded from the assembly X:\\path\\to\\hello%40world\\bin\\Release\\netstandard2.0\\Hello.World.dll. Could not find a part of the path 'X:\\path\\to\\hello%40world\\bin\\Release\\netstandard2.0'. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\n```\n\n\n### Analysis\n\nThe path shown in that message contains `%40` where the `@` should be, so it may be some excessive URL encoding (or missing URL decoding) somewhere.\n\n### Versions & Configurations\n\nBuild server has `MSBuild version = \"17.8.3+195e7f5a3\"` in the binlog.\nReproduced locally with 17.12.24.6604 (17.12.24+90b52dda6).\nBoth are on win64.",
  "state": "OPEN",
  "createdAt": "2025-04-08T09:24:44Z",
  "updatedAt": "2025-05-23T09:36:24Z",
  "closedAt": null,
  "author": {
    "login": "Zastai"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "labels": [
    "author-responded",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "@Zastai I tested with versions 17.13.6 , 17.12.7 and our internal version 17.14.0 Preview 3.0 [36007.44.main]\n. The UsingTask works well when the AssemblyFile contains an '@' symbol. Can't repro your issue.  Could you provide the binlog?",
        "createdAt": "2025-04-14T02:21:34Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "I don't think I'm allowed; I will try to reduce things to a minimal testcase.",
        "createdAt": "2025-04-14T09:50:44Z",
        "author": {
          "login": "Zastai"
        }
      },
      {
        "body": "Interesting. In a minimal test case, the issue does not reproduce. Looks like I'll have to try to hunt down what exactly triggers the problem.",
        "createdAt": "2025-04-14T11:00:46Z",
        "author": {
          "login": "Zastai"
        }
      },
      {
        "body": "I have been unable to investigate further due to time constraints, but still plan to pick this up.",
        "createdAt": "2025-05-14T21:21:32Z",
        "author": {
          "login": "Zastai"
        }
      },
      {
        "body": "Had some time to look at it further. The issue seems to be that we set up different values for `OutputPath` and friends, to have artifacts in a single place under the solution folder, instead of spread out across the projects.\n\nThat all works fine, and showing the contents of those variables using `<Message>` or `<Warning>` all shows the correct path name, with an `@`. But `<UsingTask>` then gives the error with the `%40`.\n\nI tried setting up an extra property using MSBuild::NormalizeDirectory (again), for use in the `AssemblyFile` attribute on `<UsingTask>`, but that made no difference.\n\nI am attaching a minimal test case: [msbuild-11702.zip](https://github.com/user-attachments/files/20328115/msbuild-11702.zip)\n\nAs is, it will build, but renaming the subfolder from \"folder\" to \"folder@2\" breaks the build as described, outputting:\n\n```txt\nC:\\Path\\To\\msbuild-11702\\folder@2\\build-task\\build-task.targets(19,5): warning : Path for HelloWorld build task assembly (direct)      : C:\\Path\\To\\msbuild-11702\\folder@2\\output\\bin\\build-task\\Release\\netstandard2.0\\build-task.dll\nC:\\Path\\To\\msbuild-11702\\folder@2\\build-task\\build-task.targets(20,5): warning : Path for HelloWorld build task assembly (via property): C:\\Path\\To\\msbuild-11702\\folder@2\\output\\bin\\build-task\\Release\\netstandard2.0\\build-task.dll\nC:\\Path\\To\\msbuild-11702\\folder@2\\build-task\\build-task.targets(21,5): error MSB4062: The \"HelloWorld\" task could not be loaded from the assembly C:\\Path\\To\\msbuild-11702\\folder%402\\output\\bin\\build-task\\Release\\netstandard2.0\\build-task.dll. Could not find a part of the path 'C:\\Path\\To\\msbuild-11702\\folder%402\\output\\bin\\build-task\\Release\\netstandard2.0'. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\n```\n\n`folder/build-task/build-task.targets` has two versions of the `<UsingTask>`; both have the issue (somewhat to be expected given the `AssemblyFile` values are identical, based on the warnings shown above).\n\nThe setup of the paths is in `folder/support/Standards.props`.\n",
        "createdAt": "2025-05-20T08:03:16Z",
        "author": {
          "login": "Zastai"
        }
      },
      {
        "body": "Note: looking at the binlog for a failed build:\n- `OutputPath` and friends seem to get assigned fine, with `@` in their value\n- both `SolutionDir` and `SolutionPath` (neither of which I touch) have the `%40` in their value\n- `SolutionConfiguration` uses the `%40` in the value of `AbsolutePath` in the `<ProjectConfiguration>` elements it contains\n",
        "createdAt": "2025-05-20T08:19:54Z",
        "author": {
          "login": "Zastai"
        }
      },
      {
        "body": "This is caused by AssemblyFile encoded https://github.com/dotnet/msbuild/blob/f88eb76608c0e4417aa066c20e698a9174855df0/src/Build/Instance/TaskRegistry.cs#L336",
        "createdAt": "2025-05-23T09:36:22Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  }
}