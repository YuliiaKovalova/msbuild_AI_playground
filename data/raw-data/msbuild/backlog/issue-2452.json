{
  "number": 2452,
  "title": "wildcard src\\**\\*.*proj not being expanded",
  "body": "When an invalid symlink folder exist under a path to be expanded line 194 in FileMatcher.cs throws which is then caught and wildcard expansion is not done due to it.\r\n\r\nCertain build engines will create TestSandbox folders on failed unit test and if the user goes and deletes the location to where the sandbox points to any future builds of their enlistment will fail.\r\n\r\n```\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileSystemEnumerableIterator`1.CommonInit()\r\n   at System.IO.FileSystemEnumerableIterator`1..ctor(String path, String originalUserPath, String searchPattern, SearchOption searchOption, SearchResultHandler`1 resultHandler, Boolean checkHost)\r\n   at System.IO.Directory.GetFiles(String path, String searchPattern)\r\n   at Microsoft.Build.Shared.FileMatcher.GetAccessibleFiles(String path, String filespec, String projectDirectory, Boolean stripProjectDirectory) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 194\r\n   at Microsoft.Build.Shared.FileMatcher.GetAccessibleFileSystemEntries(FileSystemEntity entityType, String path, String pattern, String projectDirectory, Boolean stripProjectDirectory) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 121\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursiveStep(RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 846\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(IList`1 listOfFiles, RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries, IList`1 searchesToExclude, Dictionary`2 searchesToExcludeInSubdirs) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 710\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(IList`1 listOfFiles, RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries, IList`1 searchesToExclude, Dictionary`2 searchesToExcludeInSubdirs) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 805\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(IList`1 listOfFiles, RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries, IList`1 searchesToExclude, Dictionary`2 searchesToExcludeInSubdirs) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 805\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(IList`1 listOfFiles, RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries, IList`1 searchesToExclude, Dictionary`2 searchesToExcludeInSubdirs) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 805\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(IList`1 listOfFiles, RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries, IList`1 searchesToExclude, Dictionary`2 searchesToExcludeInSubdirs) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 805\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(IList`1 listOfFiles, RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries, IList`1 searchesToExclude, Dictionary`2 searchesToExcludeInSubdirs) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 805\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(IList`1 listOfFiles, RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries, IList`1 searchesToExclude, Dictionary`2 searchesToExcludeInSubdirs) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 805\r\n   at Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(IList`1 listOfFiles, RecursionState recursionState, String projectDirectory, Boolean stripProjectDirectory, GetFileSystemEntries getFileSystemEntries, IList`1 searchesToExclude, Dictionary`2 searchesToExcludeInSubdirs) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 805\r\n   at Microsoft.Build.Shared.FileMatcher.GetFiles(String projectDirectoryUnescaped, String filespecUnescaped, IEnumerable`1 excludeSpecsUnescaped, GetFileSystemEntries getFileSystemEntries, DirectoryExists directoryExists) in d:\\git\\MSBuild\\src\\Shared\\FileMatcher.cs:line 1813\r\n```",
  "state": "OPEN",
  "createdAt": "2017-08-17T21:13:42Z",
  "updatedAt": "2024-02-26T13:12:51Z",
  "closedAt": null,
  "author": {
    "login": "kingerja"
  },
  "labels": [
    "Feature - Globbing",
    "triaged",
    "symlink"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "I have this issue but without the exception. \r\n\r\nUnder MSBuild 14.0 if I have a globbing pattern that encounters a directory that contains a broken symlink the wild card simply doesn't get expanded which then crashes the build in other ways as the ItemGroup that contains the expression contains \"**\" which is not a valid win32 path.\r\n\r\nCreate a broken link like this\r\n\r\n`cmd /c mklink /D foo ..\\..\\tmp`\r\n\r\n```\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" ToolsVersion=\"14.0\">\r\n\r\n  <PropertyGroup>\r\n    <SolutionRoot>C:\\Temp\\</SolutionRoot>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"GrovelForExtensibilityFiles\">\r\n\r\n    <ItemGroup>\r\n      <ExtensibilityFiles Include=\"$(SolutionRoot)**\\dir.props\"\r\n                          Exclude=\"$(SolutionRoot)packages;\r\n                                   $(SolutionRoot)Dependencies\" />\r\n    </ItemGroup>\r\n    \r\n    <Message Text=\"%(ExtensibilityFiles.FullPath)\" />\r\n\r\n  </Target>  \r\n</Project>\r\n```\r\n\r\n\r\nThis ouputs\r\n\r\n> GrovelForExtensibilityFiles:\r\n>   C:\\Temp\\\\**\\dir.props",
        "createdAt": "2018-11-21T21:35:20Z",
        "updatedAt": "2018-11-22T04:34:38Z",
        "author": {
          "login": "michael-baker"
        }
      },
      {
        "body": "See also #3642 and #406.",
        "createdAt": "2018-11-21T21:49:02Z",
        "updatedAt": "2018-11-21T21:49:02Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}