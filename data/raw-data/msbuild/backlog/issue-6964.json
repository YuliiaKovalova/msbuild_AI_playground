{
  "number": 6964,
  "title": "WorkloadManifestCompositionException stack dumped from SdkResolverService",
  "body": "From a customer using Version 17.0.0 Preview 5.0 [31807.328.d17.0], their machine got into some bad state, and they get this output.\r\n\r\nAssuming this is not indicating a bug in MSBuild, but rather a bad machine state, the exception should be caught so that only the error message is shown.\r\n```\r\nC:\\temp\\ConsoleApp1\\ConsoleApp1>dotnet run\r\nC:\\temp\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : error MSB4242: SDK Resolver Failure: \"The SDK resolver \"Microsoft.DotNet.MSBuildWorkloadSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestCompositionException: Workload manifest dependency 'Microsoft.NET.Workload.Emscripten' version '6.0.0-rc.2.21474.1' is lower than version '6.0.0-rc.1.21430.3' required by manifest 'microsoft.net.workload.mono.toolchain' [C:\\Program Files\\dotnet\\sdk-manifests\\6.0.100\\microsoft.net.workload.mono.toolchain\\WorkloadManifest.json]\r\nC:\\temp\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.ComposeWorkloadManifests()\r\nC:\\temp\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadResolver.Create(IWorkloadManifestProvider manifestProvider, String dotnetRootPath, String sdkVersion, String userProfileDir)\r\nC:\\temp\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.CachingWorkloadResolver.Resolve(String sdkReferenceName, String dotnetRootPath, String sdkVersion, String userProfileDir)\r\nC:\\temp\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : error MSB4242:    at Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.WorkloadSdkResolver.Resolve(SdkReference sdkReference, SdkResolverContext resolverContext, SdkResultFactory factory)\r\nC:\\temp\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : error MSB4242:    at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive, Boolean isRunningInVisualStudio)\"\"\r\n```",
  "state": "OPEN",
  "createdAt": "2021-10-15T15:54:06Z",
  "updatedAt": "2024-01-31T08:20:12Z",
  "closedAt": null,
  "author": {
    "login": "danmoseley"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "[This](https://github.com/dotnet/msbuild/blob/bd00d6cba24d41efd6f54699c3fdbefb9f5034a1/src/Build/Evaluation/Evaluator.cs#L1811) is where that error is thrown. As you can see, we're already throwing just the message, but \"e.Message already contains the stack trace\" as indicated in the comment. I don't think it's worth it to parse the message to extract just the actual message part; ultimately, this gives the user access to all the information they need, just with some extra.\r\n\r\nReasonable to close?",
        "createdAt": "2021-10-27T22:54:08Z",
        "updatedAt": "2021-10-27T22:54:08Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The bug then is that the exception message contains the stack. I agree it's low priority.",
        "createdAt": "2022-04-04T03:56:13Z",
        "updatedAt": "2022-04-04T03:56:13Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  }
}