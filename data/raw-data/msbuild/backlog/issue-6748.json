{
  "number": 6748,
  "title": "msbuild process does not terminate after Xamarin.iOS build (version 16.11.0.36601)",
  "body": "### Issue Description\r\nWhen using Jenkins and PowerShell scripts to automatically build a Xamarin.iOS app, the msbuild process does not terminate automatically after the build is complete. This prevents us the Jenkins job from checking the exit code and moving on to the next step.\r\n\r\nWe have an exit code check like below, which had to be commented out and msbuild must be terminated via Task Manager every time the build is complete. This is affecting the automated nature of the whole build process.\r\n`if ($LastExitCode -ne 0) { Exit $LastExitCode }`\r\n\r\n### Steps to Reproduce\r\nThe msbuild command is executed as follows:\r\n`msbuild $solutionFile /t:Rebuild \"/p:Configuration=Ad-Hoc\" \"/p:Platform=iPhone\" /p:ServerAddress=$macIp p:ServerUser=$macUsername /p:ServerPassword=$macPassword /nr:false /v:m /p:RestorePackages=false /p:IpaPackageDir=$deliverablesDir`\r\n\r\nNote that we are using `/nr:false` also.\r\n\r\nTo recreate,\r\n- Build a Xamarin.iOS project with the above command, replacing values as necessary\r\n- Configuration \"Ad-Hoc\" is a custom config we have added. \"Release\" can be used instead.\r\n- Replace $solutionFile with path to solution\r\n- Replace $macIp, $macUsername and $macPassword with the values relevant to the Mac build host\r\n- $deliverablesDir might not be necessary, but it's the IPA output path\r\n\r\n### Expected Behavior\r\nmsbuild must exit automatically after the build has completed and return an appropriate exit code (must return 0 for success).\r\n\r\n### Actual Behavior\r\nmsbuild does not terminate automatically. We must terminate it manually and does not return an exit code.\r\n\r\n### Analysis\r\nError could be in the Xamarin.iOS targets files.\r\n\r\n### Versions & Configurations\r\nmsbuild version 16.11.0.36601\r\nVisual Studio 16.11",
  "state": "CLOSED",
  "createdAt": "2021-08-11T08:08:33Z",
  "updatedAt": "2024-02-21T14:12:06Z",
  "closedAt": "2022-01-20T17:44:24Z",
  "author": {
    "login": "binesh1991"
  },
  "labels": [
    "bug",
    "author-responded",
    "needs-attention",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: Could you provide us with a memory dump of the msbuild process when this happens? You can safely upload it as a feedback ticket. You can file feedback at [Developer Community](https://developercommunity.visualstudio.com/spaces/8/index.html) and include confidential-to-Microsoft attachments. Please link the issue here so I can expedite routing it to our team.",
        "createdAt": "2021-08-12T16:50:11Z",
        "updatedAt": "2021-08-12T16:50:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Hi, I have created a [ticket](https://developercommunity.visualstudio.com/t/msbuild-process-does-not-terminate-after/1503232) on the Developer Community (1503232).\r\nThank you.",
        "createdAt": "2021-08-13T14:16:57Z",
        "updatedAt": "2021-08-13T14:17:47Z",
        "author": {
          "login": "binesh1991"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.",
        "createdAt": "2021-09-13T00:01:04Z",
        "updatedAt": "2021-09-13T00:01:04Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "Setting the environment variable in PowerShell like `$env:MSBUILDDISABLENODEREUSE = 1;` seems to have worked, but I will need to run a few more builds to see whether it was a random incident or not. Our builds take over an hour usually so I will respond back if the solution looks consistent.",
        "createdAt": "2021-09-13T06:40:29Z",
        "updatedAt": "2021-09-13T06:40:29Z",
        "author": {
          "login": "binesh1991"
        }
      },
      {
        "body": "With the environment variable set, and running msbuild with the /m flag can be used as a workaround for this problem in our case. Verified by running 3 consecutive builds.",
        "createdAt": "2021-09-13T09:33:03Z",
        "updatedAt": "2021-09-13T09:33:03Z",
        "author": {
          "login": "binesh1991"
        }
      },
      {
        "body": "Closing in favor of the workaround.",
        "createdAt": "2022-01-20T17:44:24Z",
        "updatedAt": "2022-01-20T17:44:24Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}