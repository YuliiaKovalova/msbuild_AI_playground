{
  "number": 1988,
  "title": "EmbeddedResource that ends with a country iso code before the extension can't be included in .NET Core (1.1.0)",
  "body": "Any file with that has a string in the format of \".{isocode}\" before the extension, can't be included as an embedded file.\r\n> foo.en.json\r\n> foo.fr.json\r\n\r\nWon't be included.\r\n\r\n> foo.en.bar.json\r\n> foo.fr.bar.json\r\n\r\nWill be included.\r\n\r\nI ran a small test to verify this, I added the following files at the root of a small test project created in VS2017:\r\n> foo.json\r\n> foo.en.json\r\n> foo.bar.json\r\n> foo.txt\r\n> foo.fr.txt\r\n> foo.bar.txt\r\n\r\nI added this to my .csproj:\r\n```xml\r\n  <ItemGroup>\r\n    <EmbeddedResource Include=\"**\\*.json;**\\*.txt\" Exclude=\"obj\\**\\*;bin\\**\\*\" />\r\n  </ItemGroup>\r\n```\r\n_Note: Referencing the files explicitly by name produces the same result._\r\n\r\nI then wrote a small piece of code loading the produced assembly and listing the manifest files.\r\n```csharp\r\nAssembly assembly = Assembly.LoadFile(\"EmbeddedResources.exe\");\r\nforeach (string manifestResourceName in assembly.GetManifestResourceNames())\r\n{\r\n    Console.WriteLine(manifestResourceName);\r\n}\r\n```\r\n\r\nHere is the produced output:\r\n> EmbeddedResources.foo.bar.json\r\n> EmbeddedResources.foo.json\r\n> EmbeddedResources.foo.bar.txt\r\n> EmbeddedResources.foo.txt\r\n\r\nI worked around it by renaming my files with a dash instead of a comma before the iso code, but this is time wasting pain. If it can't be supported, at least give me a clear warning or error message.",
  "state": "OPEN",
  "createdAt": "2017-04-17T23:12:58Z",
  "updatedAt": "2024-02-21T16:36:57Z",
  "closedAt": null,
  "author": {
    "login": "adescre"
  },
  "labels": [
    "under-investigation",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}