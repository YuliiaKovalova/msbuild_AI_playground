{
  "number": 9302,
  "title": "[Performance]: 2.7% of evaluation is spent initializing SDK resolvers",
  "body": "### Issue Description\n\nUnless a shared evaluation context is used, each project evaluation creates a fresh new `SdkResolverLoader`, walks the disk to discover resolver manifests, calls `Assembly.LoadFrom` on resolver assemblies and so on. The cost of this is non-trivial (close to 3% of total evaluation time for solution like OrchardCore) while arguably there is no way how any of this can change while an MSBuild process is running.\r\n\r\nWe should cache SDK resolver information (not to be confused with the resolved SDK data, which can change) for the lifetime of the process.\n\n### Steps to Reproduce\n\nLoad the OrchardCore solution in VS, then switch configuration from Debug to Release.\n\n### Data\n\nResolver discovery takes ~200 ms of CPU out of ~1255 ms of overall SDK resolution and ~7.5 s of evaluation total. This trace was recorded with https://github.com/dotnet/sdk/pull/35807 and https://github.com/dotnet/sdk/pull/35805.\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/12206368/4ef2b06e-337c-4a04-9dd3-760fd89a1448)\r\n\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_\n\n### Regression\n\n- [ ] yes\n- [ ] no\n\n### Regression Details\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2023-10-03T12:50:15Z",
  "updatedAt": "2024-02-21T14:03:23Z",
  "closedAt": "2023-11-01T15:59:43Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "ladipro"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}