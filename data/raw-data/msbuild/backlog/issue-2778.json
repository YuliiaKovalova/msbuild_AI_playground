{
  "number": 2778,
  "title": "Global property \"ContinueOnError\" with value \"true\" or \"ErrorAndContinue\" is not respected causing broken intellisense in DTBB",
  "body": "Global property \"ContinueOnError\" with value \"true\" or \"ErrorAndContinue\" is not respected, causing broken Intellisense in solution loaded with DTBB (design-time build batching) on which is default - all projects are loaded in \"Misc Files\".\r\n\r\nWe run these targets for DTBB:\r\n \"Compile\", \"CoreCompile\", \"ResolveReferences\", \"ResolveProjectReferences\", \"ResolveAssemblyReferences\", \"ResolveComReferences\", \"ResolveNativeReferences\", \"ResolveSdkReferences\", \"CollectReferencedNuGetPackages\"\r\nAnd pass \"ErrorAndContinue\" for global property \"ContinueOnError\".\r\n\r\n**Expected:**\r\nIt should continue if error occurs.\r\n\r\n**Actual:**\r\nMSBuild immediately fails the submission.\r\n\r\nSo far we've run into two kinds of scenarios that can cause this (see below).\r\nIf we fix this issue, we can avoid all other potential user scenarios.\r\n\r\n1. Target missing\r\n    Repro: see the repro in this issue https://github.com/Microsoft/msbuild/pull/2764\r\n\r\n2. Target fails\r\n    Repro: user opens a solution the first time when $(IntermediateOutputPath) does not exist:\r\n\r\nTarget Name=Compile Project=Microsoft.VisualStudio.Workspace.VSIntegration.csproj\r\n    Target Name=GenerateAssemblyInfoFile Project=Microsoft.VisualStudio.Workspace.VSIntegration.csproj\r\n        WriteCodeFragment\r\n            Parameters\r\n                AssemblyAttributes\r\n                    System.Reflection.AssemblyCopyright\r\n                        _Parameter1 = \u00a9 Microsoft Corporation. All rights reserved.\r\n                    System.Reflection.AssemblyProduct\r\n                        _Parameter1 = Microsoft\u00ae Visual Studio\u00ae\r\n                Language = C#\r\n                OutputDirectory = c:\\Repos\\AnyCode\\\\obj\\Debug\\Microsoft.VisualStudio.Workspace.VSIntegration\\\r\n                OutputFile = AssemblyInfo.MicroBuild.generated.cs\r\n            Errors\r\n                C:\\Users\\hlong\\.nuget\\packages\\microbuild\\2.0.2-beta\\build\\MicroBuild.targets(94,5): error MSB3713: The file \"c:\\Repos\\AnyCode\\\\obj\\Debug\\Microsoft.VisualStudio.Workspace.VSIntegration\\AssemblyInfo.MicroBuild.generated.cs\" could not be created. Could not find a part of the path 'c:\\Repos\\AnyCode\\obj\\Debug\\Microsoft.VisualStudio.Workspace.VSIntegration\\AssemblyInfo.MicroBuild.generated.cs'. [c:\\Repos\\AnyCode\\src\\Microsoft.VisualStudio.Workspace.VSIntegration\\Microsoft.VisualStudio.Workspace.VSIntegration.csproj]\r\n\r\n",
  "state": "OPEN",
  "createdAt": "2017-12-05T21:40:07Z",
  "updatedAt": "2024-02-21T16:35:17Z",
  "closedAt": null,
  "author": {
    "login": "huizhonglong"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@huizhonglong There's no built in support for targets to respect `ContinueOnError`; it's just a pattern across MSBuild where tasks invocations are supposed to respect the `$(ContinueOnError)` property if its specified, for example: https://github.com/Microsoft/msbuild/blob/adb180d394176f36aca1cc2eac4455fef564739f/src/Tasks/Microsoft.Common.CurrentVersion.targets#L2145. Any tasks that don't respect it - will break the build if they error. \r\n\r\n",
        "createdAt": "2019-04-03T06:08:41Z",
        "updatedAt": "2019-04-03T06:08:41Z",
        "author": {
          "login": "davkean"
        }
      }
    ]
  }
}