{
  "number": 3002,
  "title": "Csc task cannot be found when using custom toolset",
  "body": "### Steps to reproduce\r\n\r\nMinimal repro located here: https://github.com/dfederm/msbuild/tree/csc-not-found-custom-toolset/src/Samples/CscNotFoundWithCustomToolset\r\n\r\nAfter building, run something like:\r\n```\r\n\"D:\\msbuild\\artifacts\\Debug\\bin\\Samples\\CscNotFoundWithCustomToolset\\net46\\CscNotFoundWithCustomToolset.exe\" \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\\"\r\n```\r\n\r\n### Expected  behavior\r\nThe Compile target succeeds\r\n\r\n### Actual behavior\r\nOutput:\r\n```\r\n__________________________________________________\r\nProject \"D:\\msbuild\\src\\Samples\\CscNotFoundWithCustomToolset\\Test.csproj\" (Compile target(s)):\r\n\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): error MSB4062: The \"Microsoft.CodeAnalysis.BuildTasks.Csc\" task could not be loaded from the assembly \\Microsoft.Build.Tasks.CodeAnalysis.dll. Could not load file or assembly 'file:///D:\\Microsoft.Build.Tasks.CodeAnalysis.dll' or one of its dependencies. The system cannot find the file specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\r\nDone building project \"Test.csproj\" -- FAILED.\r\nCompile failed\r\n```\r\n\r\n### Environment data\r\nUsing the latest version of Microsoft.Build.Runtime (15.5.180.1)\r\n\r\n\r\n### Other\r\nTalked with @cdmihai and one guess to a solution would be to change Microsoft.Common.tasks from:\r\n```\r\n<UsingTask TaskName=\"Microsoft.CodeAnalysis.BuildTasks.Csc\" AssemblyFile=\"Microsoft.Build.Tasks.CodeAnalysis.dll\" />\r\n```\r\n\r\nto \r\n```\r\n<UsingTask TaskName=\"Microsoft.CodeAnalysis.BuildTasks.Csc\" AssemblyFile=\"$(RoslynTargetsPath)\\Microsoft.Build.Tasks.CodeAnalysis.dll\" />\r\n```\r\n\r\nThat way it always looks next to Roslyn adjacent to the same place it imported the targets from.\r\n\r\nOr actually I wonder why the Roslyn tasks aren't defined as a `<UsingTask>` in the Roslyn targets in the first place like any other task. IMHO the Csc task doesn't need to be \"special\".",
  "state": "OPEN",
  "createdAt": "2018-02-16T20:42:41Z",
  "updatedAt": "2024-02-21T16:34:50Z",
  "closedAt": null,
  "author": {
    "login": "dfederm"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Hello I am having the same issue.\r\nMSB4062\tThe \"Microsoft.CodeAnalysis.BuildTasks.Csc\" task could not be loaded from the assembly C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Roslyn\\Microsoft.Build.Tasks.CodeAnalysis.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\tMSBuild\tC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets\t52\tfalse\tError\r\n\r\n\r\n\r\nCan Anyone tell me solution if found?\r\nI am using 2017    15.8.2 Version.\r\n\r\nPlease help.\r\nThanks",
        "createdAt": "2018-09-05T09:09:13Z",
        "updatedAt": "2018-09-05T09:09:13Z",
        "author": {
          "login": "manish10sharma"
        }
      },
      {
        "body": "@manish10sharma I think that is a distinct problem. Are you also using a custom MSBuild host executable? If so, I suspect you need to add binding redirects for MSBuild assemblies to the 15.0 versions. Using the [Microsoft.Build.Locator package](https://docs.microsoft.com/en-us/visualstudio/msbuild/updating-an-existing-application?view=vs-2017) can help with that.",
        "createdAt": "2018-09-05T15:50:30Z",
        "updatedAt": "2018-09-05T15:50:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I have tried that even, But it throwing same error.\r\nI am attaching my packages file.\r\nMay be something conflicting.\r\n\r\n[packagesForTest.txt](https://github.com/Microsoft/msbuild/files/2356846/packagesForTest.txt)\r\n",
        "createdAt": "2018-09-06T06:46:47Z",
        "updatedAt": "2018-09-06T11:45:18Z",
        "author": {
          "login": "manish10sharma"
        }
      },
      {
        "body": "@manish10sharma I think the Locator package only adds the binding redirects for you if you use `PackageReference` style NuGet references. Did you try manually adding binding redirects like the ones we use in MSBuild.exe?\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/6244c69aa4732353bbc0a2c9adfd2e5f79de5516/src/MSBuild/app.config#L13-L33",
        "createdAt": "2018-09-06T14:31:07Z",
        "updatedAt": "2018-09-06T14:31:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Yes,  I already tried that all.\r\nSee the errors, I am facing When I hit Build Command\r\n\r\n![exceptionafterbuild](https://user-images.githubusercontent.com/42997496/45220595-3e1d9a00-b2cc-11e8-9ade-15e7609f897f.PNG)\r\n![exceptionafterbuild2](https://user-images.githubusercontent.com/42997496/45220596-3eb63080-b2cc-11e8-8ff4-cd9a53335c0a.PNG)\r\n",
        "createdAt": "2018-09-07T13:01:54Z",
        "updatedAt": "2018-09-07T13:01:54Z",
        "author": {
          "login": "manish10sharma"
        }
      }
    ]
  }
}