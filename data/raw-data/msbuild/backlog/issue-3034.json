{
  "number": 3034,
  "title": "NuGetSdkResolver deadlock when invoked on the UI thread",
  "body": "The following code fails to use JoinableTaskFactory, and causes a deadlock when invoked on the UI thread:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/a6932230ec64fe853dddb42b2e5c385fad4e3785/src/NuGetSdkResolver/NuGetSdkResolver.cs#L118-L126\r\n\r\n```\r\n>\tmscorlib.dll!System.Threading.Monitor.Wait(object obj, int millisecondsTimeout, bool exitContext) Line 203\tC#\r\n \tmscorlib.dll!System.Threading.Monitor.Wait(object obj, int millisecondsTimeout) Line 213\tC#\r\n \tmscorlib.dll!System.Threading.ManualResetEventSlim.Wait(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken) Line 688\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.SpinThenBlockingWait(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken) Line 3320\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.InternalWait(int millisecondsTimeout, System.Threading.CancellationToken cancellationToken) Line 3259\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task) Line 148\tC#\r\n \tNuGet.MSBuildSdkResolver.dll!NuGet.MSBuildSdkResolver.NuGetSdkResolver.NuGetAbstraction.GetSdkResult(Microsoft.Build.Framework.SdkReference sdk, object nuGetVersion, Microsoft.Build.Framework.SdkResolverContext context, Microsoft.Build.Framework.SdkResultFactory factory)\tUnknown\r\n \tNuGet.MSBuildSdkResolver.dll!NuGet.MSBuildSdkResolver.NuGetSdkResolver.ResolveSdk(Microsoft.Build.Framework.SdkReference sdk, Microsoft.Build.Framework.SdkResolverContext context, Microsoft.Build.Framework.SdkResultFactory factory)\tUnknown\r\n \tNuGet.MSBuildSdkResolver.dll!NuGet.MSBuildSdkResolver.NuGetSdkResolverBase.Resolve(Microsoft.Build.Framework.SdkReference sdk, Microsoft.Build.Framework.SdkResolverContext context, Microsoft.Build.Framework.SdkResultFactory factory)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.GetSdkResult(int submissionId, Microsoft.Build.Framework.SdkReference sdk, Microsoft.Build.BackEnd.Logging.LoggingContext loggingContext, Microsoft.Build.Construction.ElementLocation sdkReferenceLocation, string solutionPath, string projectPath)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(int submissionId, Microsoft.Build.Framework.SdkReference sdk, Microsoft.Build.BackEnd.Logging.LoggingContext loggingContext, Microsoft.Build.Construction.ElementLocation sdkReferenceLocation, string solutionPath, string projectPath)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Evaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(string directoryOfImportingFile, Microsoft.Build.Construction.ProjectImportElement importElement, out System.Collections.Generic.List<Microsoft.Build.Construction.ProjectRootElement> projects, bool throwOnFileNotExistsError)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Evaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.ExpandAndLoadImports(string directoryOfImportingFile, Microsoft.Build.Construction.ProjectImportElement importElement)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Evaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.EvaluateImportElement(string directoryOfImportingFile, Microsoft.Build.Construction.ProjectImportElement importElement)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Evaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.PerformDepthFirstPass(Microsoft.Build.Construction.ProjectRootElement currentProjectOrImport)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Evaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.Evaluate(Microsoft.Build.BackEnd.Logging.ILoggingService loggingService, Microsoft.Build.Framework.BuildEventContext buildEventContext)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Evaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.Evaluate(Microsoft.Build.Evaluation.IEvaluatorData<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition> data, Microsoft.Build.Construction.ProjectRootElement root, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings, int maxNodeCount, Microsoft.Build.Collections.PropertyDictionary<Microsoft.Build.Execution.ProjectPropertyInstance> environmentProperties, Microsoft.Build.BackEnd.Logging.ILoggingService loggingService, Microsoft.Build.Evaluation.IItemFactory<Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectItem> itemFactory, Microsoft.Build.Evaluation.IToolsetProvider toolsetProvider, Microsoft.Build.Evaluation.ProjectRootElementCache projectRootElementCache, Microsoft.Build.Framework.BuildEventContext buildEventContext, Microsoft.Build.Execution.ProjectInstance projectInstanceIfAnyForDebuggerOnly, Microsoft.Build.BackEnd.SdkResolution.ISdkResolverService sdkResolverService, int submissionId)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Project.Reevaluate(Microsoft.Build.BackEnd.Logging.ILoggingService loggingServiceForEvaluation, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(Microsoft.Build.BackEnd.Logging.ILoggingService loggingServiceForEvaluation, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Project.Initialize(System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings)\tUnknown\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.Project.Project(Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings)\tUnknown\r\n \tMicrosoft.VisualStudio.Workspace.Extensions.Implementation.dll!Microsoft.VisualStudio.Workspace.Extensions.MSBuild.MSBuildProjectHelper.GetProjectConfigurations(Microsoft.Build.Construction.ProjectRootElement projectXml, Microsoft.Build.Evaluation.ProjectCollection projectCollection, System.Collections.Generic.IDictionary<string, string> globalProperties)\tUnknown\r\n \tMicrosoft.VisualStudio.Workspace.Extensions.Implementation.dll!Microsoft.VisualStudio.Workspace.Extensions.MSBuild.MSBuildProjectHelper.CreateFileContextForProjectAsync(Microsoft.VisualStudio.Workspace.IWorkspace workspace, string projectFilePathRelative, System.Collections.Generic.IReadOnlyDictionary<string, Microsoft.VisualStudio.Workspace.Extensions.ManagedCommandLineInfo> intellisenseDataInfo, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.VisualStudio.Workspace.Extensions.Implementation.dll!Microsoft.VisualStudio.Workspace.Extensions.MSBuild.MSBuildManagedProjectFileContextProvider.FileContextProvider.GetContextsForFileAsync(string filePath, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(object stateMachine) Line 1090\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 954\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 902\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run() Line 1070\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.InvokeAction(object state) Line 730\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.RunCallback(System.Threading.ContextCallback callback, object state, ref System.Threading.Tasks.Task currentTask) Line 759\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation.Run(System.Threading.Tasks.Task task, bool canInlineContinuationTask) Line 433\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishContinuations() Line 3642\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishStageThree() Line 2363\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task<System.__Canon>.TrySetResult(System.__Canon result) Line 490\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<System.Collections.Generic.IReadOnlyDictionary<string, Microsoft.VisualStudio.Workspace.Extensions.MSBuild.ManagedIntellisenseData>>.SetResult(System.Collections.Generic.IReadOnlyDictionary<string, Microsoft.VisualStudio.Workspace.Extensions.MSBuild.ManagedIntellisenseData> result) Line 603\tC#\r\n \tMicrosoft.VisualStudio.Workspace.dll!Microsoft.VisualStudio.Workspace.Indexing.IIndexWorkspaceServiceHelper.GetValuesByContextAsync<Microsoft.VisualStudio.Workspace.Extensions.MSBuild.ManagedIntellisenseData>(Microsoft.VisualStudio.Workspace.Indexing.IIndexWorkspaceService indexWorkspaceService, string filePath, System.Guid type, bool refreshOption, System.Threading.CancellationToken cancellationToken, string target)\tUnknown\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(object stateMachine) Line 1090\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 954\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 902\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run() Line 1070\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.InvokeAction(object state) Line 730\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.RunCallback(System.Threading.ContextCallback callback, object state, ref System.Threading.Tasks.Task currentTask) Line 759\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation.Run(System.Threading.Tasks.Task task, bool canInlineContinuationTask) Line 433\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishContinuations() Line 3642\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishStageThree() Line 2363\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task<System.__Canon>.TrySetResult(System.__Canon result) Line 490\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Workspace.Indexing.FileDataResult<Microsoft.VisualStudio.Workspace.Extensions.MSBuild.ManagedIntellisenseData>>>.SetResult(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Workspace.Indexing.FileDataResult<Microsoft.VisualStudio.Workspace.Extensions.MSBuild.ManagedIntellisenseData>> result) Line 603\tC#\r\n \tMicrosoft.VisualStudio.Workspace.Implementation.dll!Microsoft.VisualStudio.Workspace.Indexing.IndexWorkspaceService.GetFileDataValuesAsync<Microsoft.VisualStudio.Workspace.Extensions.MSBuild.ManagedIntellisenseData>(string filePath, System.Guid type, bool refreshOption, System.Threading.CancellationToken cancellationToken, string target, string context)\tUnknown\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(object stateMachine) Line 1090\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 954\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 902\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run() Line 1070\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation..cctor.AnonymousMethod__8_0(object state) Line 388\tC#\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.SingleExecuteProtector.TryExecute()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.SingleExecuteProtector..cctor.AnonymousMethod__20_0(object state)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeImpl()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(object state)\tUnknown\r\n \tWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(object obj)\tUnknown\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 954\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 902\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) Line 891\tC#\r\n \tWindowsBase.dll!MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.DispatcherOperation.Invoke()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.ProcessQueue()\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.WndProcHook(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndWrapper.WndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam, ref bool handled)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.DispatcherCallbackOperation(object o)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate callback, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.ExceptionWrapper.TryCatchWhen(object source, System.Delegate callback, object args, int numArgs, System.Delegate catchHandler)\tUnknown\r\n \tWindowsBase.dll!System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority priority, System.TimeSpan timeout, System.Delegate method, object args, int numArgs)\tUnknown\r\n \tWindowsBase.dll!MS.Win32.HwndSubclass.SubclassWndProc(System.IntPtr hwnd, int msg, System.IntPtr wParam, System.IntPtr lParam)\tUnknown\r\n```",
  "state": "CLOSED",
  "createdAt": "2018-02-26T23:45:14Z",
  "updatedAt": "2024-02-21T17:14:17Z",
  "closedAt": "2020-04-16T19:34:25Z",
  "author": {
    "login": "sharwell"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I don't think we can reference `Microsoft.VisualStudio.Threading` in the resolver itself.  Can we mitigate this another way?  Are you able to easily repro this?",
        "createdAt": "2018-02-27T03:59:07Z",
        "updatedAt": "2018-02-27T03:59:07Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Can we close this as dup of https://github.com/NuGet/Home/issues/9447? \r\n\r\nI don't have the rights....@jeffkl @rainersigwald ",
        "createdAt": "2020-04-16T17:16:47Z",
        "updatedAt": "2020-04-16T17:16:47Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "Duplicate of https://github.com/NuGet/Home/issues/9447",
        "createdAt": "2020-04-16T19:34:25Z",
        "updatedAt": "2020-04-16T19:34:25Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}