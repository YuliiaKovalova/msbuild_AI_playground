{
  "number": 8598,
  "title": "[Bug]: AssemblyTitle property is only used when AssemblyName is different from the project name for WinExe",
  "body": "### Issue Description\n\nWhen producing a `WinExe` the `AssemblyTitle` attribute seems to be ignored if the `AssemblyName` attribute is not given, or the same as the project name. In that case the project name is used as `AssemblyTitle`.\r\n\r\nI ran into this trying to give my WinExe a display name in task manager with spaces, without my .csproj and assembly names needing to have spaces as well. But setting `AssemblyTitle` alone did nothing. Only when i set the `AssemblyName` to something other than my project name the `AssemblyTitle` took effect.\r\n\r\n### AssemblyTitle only\r\n![image](https://user-images.githubusercontent.com/5564813/227807234-a65836b6-309a-418a-81ee-2786842978b6.png)\r\n\r\n### With AssemblyName same as project name\r\n![image](https://user-images.githubusercontent.com/5564813/227807464-1a105aad-471a-442b-b1ab-e5895b155f75.png)\r\n\r\n### With AssemblyName other than project name\r\n![image](https://user-images.githubusercontent.com/5564813/227807570-efd47363-bc11-4295-b1b3-fece8034db9c.png)\n\n### Steps to Reproduce\n\n[demo.zip](https://github.com/dotnet/msbuild/files/11073193/demo.zip)\r\n\r\nCreate a new WPF project, and add the `AssemblyTitle` attribute to the .csproj file. Then run the project an see that the title is not displayed in task manager.\n\n### Expected Behavior\n\n`AssemblyTitle` to be used without `AssemblyName` being set or being different from the project name.\n\n### Actual Behavior\n\n`AssemblyTitle` is ignored when `AssemblyName` is not different from the project name.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\nWindows 11\r\nVisual Studio 2022\r\ndotnet 6 and 7.",
  "state": "CLOSED",
  "createdAt": "2023-03-26T22:18:39Z",
  "updatedAt": "2023-03-28T14:27:10Z",
  "closedAt": "2023-03-28T14:27:10Z",
  "author": {
    "login": "AronHetLam"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@AronHetLam I couldn't reproduce this issue with the files in demo.zip. I tried the various permutations, The `AssemblyTitle` property was never ignored and was used in the task manager and in the file properties.\r\n\r\nWith no `AssemblyName` property in the project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net7.0-windows</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <UseWPF>true</UseWPF>\r\n    <!--Uncommenting the following doesn't change name in taskmanager-->\r\n    <!-- <AssemblyName>demo</AssemblyName> -->\r\n\r\n    <!--Uncommenting the following makes AssemblyTitle take effect-->\r\n    <!-- <AssemblyName>NotDemo</AssemblyName> -->\r\n\r\n    <AssemblyTitle>Display name with spaces</AssemblyTitle>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nthe `AssemblyTitle` value was used:\r\n\r\n![image](https://user-images.githubusercontent.com/1728516/227829382-8c899954-d5f4-4f0b-acdb-8b2b1b8044ab.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1728516/227829102-8e7ae059-5e94-4b73-9b4a-553b61297822.png)\r\n\r\nI tested on Windows 11 with Visual Studio 2022 and .Net 7.",
        "createdAt": "2023-03-27T02:56:39Z",
        "updatedAt": "2023-03-27T02:57:47Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "IIRC, the task bar of Windows caches some text that it reads from the version resource, and does not always refresh the cache if you rebuild the application with different text. Changing the assembly name and thus the executable file name would cause the task bar not to use the stale information from the cache. I don't know whether the task manager uses the same cache, though.\n\nTo rule out any such cache effect, I suggest copying the executable to a different directory or even a different computer, and running from there. You may also be able to use Process Monitor to locate the cache (I think it was somewhere in the Registry) and clear it, although this may also require restarting Explorer as well. There may be an API for purging the cache as well, but I don't know which function that would be.",
        "createdAt": "2023-03-27T10:30:01Z",
        "updatedAt": "2023-03-27T10:37:35Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "I was just about to write that i couldn't reproduce anymore, but caching seems to be a good explanation. I tried changing the `AssemblyTitle` and got this:\r\n\r\n![image](https://user-images.githubusercontent.com/5564813/227919772-aa0d4a7f-c66b-4f32-8374-02cde73aed52.png)\r\n\r\nNot sure you can do much about that, but it would be nice to somehow have known about it before spending a lot of time trying to figure out what's wrong. Could a note be added to the documentation?",
        "createdAt": "2023-03-27T10:46:08Z",
        "updatedAt": "2023-03-27T10:56:24Z",
        "author": {
          "login": "AronHetLam"
        }
      },
      {
        "body": "triage decided documenting this specific aspect doesn't meet a bar - hence closing.\r\n\r\n@AronHetLam if you have specific note in mind that you feel would be appropriate here - please feel free to submit PR (it would proably be best suitable here: https://github.com/dotnet/dotnet-api-docs/blob/main/xml/System.Reflection/AssemblyTitleAttribute.xml).",
        "createdAt": "2023-03-28T14:27:10Z",
        "updatedAt": "2023-03-28T14:27:10Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}