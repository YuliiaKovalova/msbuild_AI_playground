{
  "number": 5689,
  "title": "MSBuild occasionally succeeds despite /WarnAsError:MSB3270",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\n<!--\r\n* Please include a clear and concise description of the problem.\r\n-->\r\n\r\nWhen running MSBuild with /WarnAsError:MSB3270, MSBuild will occasionally succeed, despite warnings being promoted into an errors.\r\n\r\nI do not observe this behavior with /graph:true\r\n\r\n### Steps to Reproduce\r\n<!--\r\n* Include as much of the following as possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behaviour.\r\n* Your command line invocation\r\n-->\r\n\r\nI notice there are many other issues similar to this one, so I took it upon myself to construct a reliable reproduction of the issue.\r\n\r\n[WarnAsErrorTest.zip](https://github.com/dotnet/msbuild/files/5139247/WarnAsErrorTest.zip)\r\n\r\nThe code attached contains a really simple C# solution (.NET Framework 4.7.2 console application) which deliberately has misaligned platforms.\r\n\r\nI have included a powershell script, test.ps1, which can be run with /graph:false\r\n\r\n```\r\nPS WarnAsErrorTest> .\\test.ps1\r\n```\r\n\r\nor with /graph:true\r\n\r\n```\r\nPS WarnAsErrorTest> .\\test.ps1 -GraphBuild $true\r\n```\r\n\r\n### Expected Behavior\r\n<!--\r\n* The expected output or behavior.\r\n-->\r\n\r\nRegardless of whether or not I am using /graph:true, MSBuild should fail in a deterministic manner\r\n\r\n### Actual Behavior\r\n<!--\r\n* The actual output or behavior.\r\n-->\r\n\r\nMSBuild fails most of the time, but occasionally succeeds.\r\n\r\n### Versions & Configurations\r\n<!--\r\n* In a Visual Studio developer command prompt, run `msbuild -version` and paste the output here.\r\n* If applicable, include the version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\n* Post any other relevant configuration settings here.\r\n*   OS, architecture, etc.\r\n-->\r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.6.0+5ff7b0c9e for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.6.0.22303\r\n```\r\n\r\npwsh v7.0.3\r\n\r\n\r\nI recommend /graph:true to anyone experiencing this problem.\r\nI understand the historic justification for having /graph:false be default, but /graph:true seems much more sane now.",
  "state": "CLOSED",
  "createdAt": "2020-08-28T00:05:01Z",
  "updatedAt": "2024-03-05T21:48:34Z",
  "closedAt": "2023-06-26T09:47:48Z",
  "author": {
    "login": "atniomn"
  },
  "labels": [
    "bug",
    "Area: Static Graph",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Note to self: Might need to lean on Mihai for this one.",
        "createdAt": "2020-10-26T17:40:07Z",
        "updatedAt": "2020-10-26T17:40:07Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Related: https://github.com/dotnet/msbuild/issues/9825",
        "createdAt": "2021-01-05T18:15:32Z",
        "updatedAt": "2021-01-05T18:15:32Z",
        "author": {
          "login": "pakrym"
        }
      },
      {
        "body": "Related: https://github.com/dotnet/msbuild/issues/3295",
        "createdAt": "2021-01-05T18:16:05Z",
        "updatedAt": "2021-01-05T18:16:05Z",
        "author": {
          "login": "pakrym"
        }
      },
      {
        "body": "Related: https://github.com/dotnet/msbuild/issues/4842",
        "createdAt": "2021-02-10T19:59:30Z",
        "updatedAt": "2021-02-10T19:59:30Z",
        "author": {
          "login": "atniomn"
        }
      },
      {
        "body": "This was likely resolved by https://github.com/dotnet/msbuild/pull/6174 and I can't repro this on 16.10 msbuild. Are you still seeing this on an updated MSBuild?\r\n\r\nTo be specific, this should be available in vs16.10 preview 1",
        "createdAt": "2021-05-12T00:27:54Z",
        "updatedAt": "2021-05-12T21:29:49Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Closing this as resolved.",
        "createdAt": "2021-06-28T19:14:16Z",
        "updatedAt": "2021-06-28T19:14:16Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I'm seeing this still in 17.0 with the repro I provided [here](https://github.com/dotnet/msbuild/pull/7089#discussion_r758470716) in at least some cases.",
        "createdAt": "2021-12-06T18:20:44Z",
        "updatedAt": "2021-12-06T18:20:44Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The reason this was reopened: There seems to be a difference between `dotnet build` and `msbuild` when building a project like the one at https://github.com/dotnet/msbuild/issues/7094. `dotnet build` sees a successful build (despite errors) while `msbuild` sees the proper build failure. \r\n\r\nVersions:\r\n6.0.100/ msbuild 17.0 c9eb9dd64(sees repro)\r\nfull framework 17.0+ doesn't see the issue.",
        "createdAt": "2021-12-06T19:48:37Z",
        "updatedAt": "2021-12-06T19:48:37Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Can confirm this still happens.\r\n\r\n```\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj>dotnet build /t:AlwaysRun /WarnAsError:NAT011\r\nMSBuild version 17.4.0-preview-22470-08+6521b1591 for .NET\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj\\TestProj.csproj(12,9): error NAT011: You fail\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj\\TestProj.csproj(13,9): warning NAT012: Other Fail\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj\\TestProj.csproj(13,9): warning NAT012: Other Fail\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj\\TestProj.csproj(12,9): error NAT011: You fail\r\n    1 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.17\r\n\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj>\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj>dotnet build /t:AlwaysRun /WarnAsError:NAT011\r\nMSBuild version 17.4.0-preview-22470-08+6521b1591 for .NET\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj\\TestProj.csproj(12,9): error NAT011: You fail\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj\\TestProj.csproj(13,9): warning NAT012: Other Fail\r\n\r\nBuild succeeded.\r\n\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj\\TestProj.csproj(13,9): warning NAT012: Other Fail\r\nC:\\Users\\bevillal\\Downloads\\Compressed\\WarnAsErrorTest\\WarnAsErrorTest\\TestProj\\TestProj.csproj(12,9): error NAT011: You fail\r\n    1 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.15\r\n```\r\n\r\n`dotnet --version`\r\n```\r\n7.0.100-rc.2.22477.23\r\n```\r\n### Investigation Notes\r\n\r\n\r\nAfter quite a bit of digging I don't see anything wrong with the way that the SDK logs the error. It correctly gets all the way to logging an error into the logging service here, which goes into `ProcessLoggingEvent` where it goes into the queue and I can't track it down anymore.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/d14b74d6f08ab7f2e17706359a38f8c22b569cb5/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs#L451\r\n\r\nIt's worth noting that the first warning getting logged (the one that should error) hits line 1191, whereas the second (the one that doesn't fail) hits line 1198. It's worth noting because `RouteBuildEvent` has logic to properly account for errors.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/d14b74d6f08ab7f2e17706359a38f8c22b569cb5/src/Build/BackEnd/Components/Logging/LoggingService.cs#L1178-L1201",
        "createdAt": "2022-11-15T20:13:03Z",
        "updatedAt": "2022-11-15T20:13:03Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "This issue resurfaced again: dotnet/installer#8735\r\nWe will close this one as a duplicate in favor to the issue above. \r\nThe PR with fix is already attached to the issue above.",
        "createdAt": "2023-06-26T09:47:48Z",
        "updatedAt": "2023-06-26T09:47:48Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}