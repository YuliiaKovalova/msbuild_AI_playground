{
  "number": 2554,
  "title": "System.PlatformNotSupportedException when parsing solution in mono",
  "body": "It's failing the test case in mono environment, by tracing the code I couldn't find where it could throw such exception in BuildEnvironmentHelper. Any help is appreciated\r\nChanges related: https://github.com/Ullink/gradle-msbuild-plugin/pull/77\r\n\r\nhttps://travis-ci.org/Ullink/gradle-msbuild-plugin/builds/279544693?utm_source=github_status&utm_medium=notification\r\n\r\nException detail: \r\n```\r\nSystem.PlatformNotSupportedException : Operation is not supported on this platform.\r\n  at Microsoft.Build.Shared.BuildEnvironmentHelper.get_Instance () [0x00017] in <5452a999769d4e6a81de7a3aa0b8f9f1>:0 \r\n  at Microsoft.Build.Shared.NativeMethodsShared.get_IsMono () [0x00033] in <5452a999769d4e6a81de7a3aa0b8f9f1>:0 \r\n  at Microsoft.Build.BackEnd.Logging.LoggingService..ctor (Microsoft.Build.BackEnd.Logging.LoggerMode loggerMode, System.Int32 nodeId) [0x00039] in <5452a999769d4e6a81de7a3aa0b8f9f1>:0 \r\n  at Microsoft.Build.BackEnd.Logging.LoggingService.CreateLoggingService (Microsoft.Build.BackEnd.Logging.LoggerMode mode, System.Int32 node) [0x00000] in <5452a999769d4e6a81de7a3aa0b8f9f1>:0 \r\n  at Microsoft.Build.Evaluation.ProjectCollection.CreateLoggingService (System.Int32 maxCPUCount, System.Boolean onlyLogCriticalEvents) [0x00000] in <5452a999769d4e6a81de7a3aa0b8f9f1>:0 \r\n  at Microsoft.Build.Evaluation.ProjectCollection..ctor (System.Collections.Generic.IDictionary`2[TKey,TValue] globalProperties, System.Collections.Generic.IEnumerable`1[T] loggers, System.Collections.Generic.IEnumerable`1[T] remoteLoggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations, System.Int32 maxNodeCount, System.Boolean onlyLogCriticalEvents) [0x0011d] in <5452a999769d4e6a81de7a3aa0b8f9f1>:0 \r\n  at Microsoft.Build.Evaluation.ProjectCollection..ctor (System.Collections.Generic.IDictionary`2[TKey,TValue] globalProperties, System.Collections.Generic.IEnumerable`1[T] loggers, Microsoft.Build.Evaluation.ToolsetDefinitionLocations toolsetDefinitionLocations) [0x00000] in <5452a999769d4e6a81de7a3aa0b8f9f1>:0 \r\n  at Microsoft.Build.Evaluation.ProjectCollection..ctor (System.Collections.Generic.IDictionary`2[TKey,TValue] globalProperties) [0x00000] in <5452a999769d4e6a81de7a3aa0b8f9f1>:0 ```",
  "state": "OPEN",
  "createdAt": "2017-09-26T13:00:00Z",
  "updatedAt": "2024-02-21T16:35:42Z",
  "closedAt": null,
  "author": {
    "login": "ngyukman"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I think  https://github.com/Microsoft/msbuild/commit/9654902b70e22eccc8105efdac5060c7d7adaa1a#diff-7dd0925e4fa31af6856e773c2c80a62c broke the IsMono on Linux.\r\n\r\nAs a part of caching it's running now BuildEnvironmentHelper.Initialize() which in turn does a PInvoke in VisualStudioLocationHelper which throws on Linux.\r\n\r\nI think this is currently a blocking issue for omnisharp on linux: https://github.com/OmniSharp/omnisharp-roslyn/issues/1008",
        "createdAt": "2017-11-09T11:44:00Z",
        "updatedAt": "2017-11-09T11:44:20Z",
        "author": {
          "login": "mrgleba"
        }
      },
      {
        "body": "Hmm, we're not hitting this issue with the msbuild we bundle in Mono, though I'm not sure why as it looks like we should \ud83d\ude04 \r\n\r\n@radical ?",
        "createdAt": "2017-11-10T02:14:11Z",
        "updatedAt": "2017-11-10T02:14:11Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "I experience same issue while execute method OpenSolutionAsync from MSBuildWorkspace class under MacOS... ",
        "createdAt": "2018-11-19T15:06:48Z",
        "updatedAt": "2018-11-19T15:06:48Z",
        "author": {
          "login": "VitaliLiashchuk"
        }
      },
      {
        "body": "I am hitting this while running the Microsoft.Build NuGet package (versions 15.6.85 and 15.9.20) with Mono 5.18.0 on OSX. As @akoeplinger said, I do not get the same error with the Microsoft.Build bundled with Mono.\r\n\r\nAny update, or possible fix coming?",
        "createdAt": "2019-03-10T06:18:32Z",
        "updatedAt": "2019-03-10T06:18:32Z",
        "author": {
          "login": "eatdrinksleepcode"
        }
      },
      {
        "body": "I'm also experiencing this on OSX using the Microsoft.Build.NuGet packages (version 15.9.20) with mono 5.18.0.268.",
        "createdAt": "2019-03-29T16:22:03Z",
        "updatedAt": "2019-03-29T16:22:03Z",
        "author": {
          "login": "mauricereeves"
        }
      },
      {
        "body": "@radical do you know if there's a simple fix from our fork we could upstream for this?",
        "createdAt": "2019-04-19T17:36:39Z",
        "updatedAt": "2019-04-19T17:36:39Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "I remember the problem was TryFromVisualStudioProcess in https://github.com/Microsoft/msbuild/blob/master/src/Shared/BuildEnvironmentHelper.cs\r\n\r\nbut I don't remember exactly how it would throw it\r\nIn the end I did a hack by skipping the check in `BuildEnvironmentHelper.Instance.RunningInVisualStudio`\r\nhttps://github.com/Ullink/gradle-msbuild-plugin/blob/master/src/main/dotnet/ProjectFileParser/MonoHack.cs\r\n\r\nso removing the call of `RunningInVisualStudio` should fix the issue",
        "createdAt": "2019-04-19T23:48:02Z",
        "updatedAt": "2019-04-19T23:49:24Z",
        "author": {
          "login": "ngyukman"
        }
      },
      {
        "body": "Are there any plans for making some progress on this? I have looked at the code, but there are clearly intended impacts on a number of different scenarios, and without knowing what all of those are and the ability to test them, it's not something I can fix myself.\r\n\r\nMigrating my open source project to .NET Core has been blocked on this for 3 months...",
        "createdAt": "2019-06-10T17:16:18Z",
        "updatedAt": "2019-06-10T17:16:18Z",
        "author": {
          "login": "eatdrinksleepcode"
        }
      },
      {
        "body": "Hi, is there a workaround for this? This causes a crash while instantiating an `MSBuildWorkspace` on Mac, so it seems like it ought to be considered a high-severity bug.\r\n\r\n@DustinCampbell, could you please weigh in on this one? It has been open for 3 years. I ran into it while using Visual Studio for Mac to build CodeConverter (see the link just above this comment box).",
        "createdAt": "2020-09-05T13:04:41Z",
        "updatedAt": "2020-09-05T13:21:09Z",
        "author": {
          "login": "coolbluewater"
        }
      }
    ]
  }
}