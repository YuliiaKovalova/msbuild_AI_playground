{
  "number": 6144,
  "title": "Linux compilation works from Visual Studio 2019, but does not from command line on the linux machine",
  "body": "### Issue Description\r\nThe sample project is possible to build from Visual Studio 2019 targeting WSL2, but once moved compilation to the WSL2  from command line, there is a linkage error. The project uses linked external library delivered by vcpckg. \r\n\r\n### Steps to Reproduce\r\nSample code as  \r\n\r\n```\r\n#include <iostream>\r\n#include \"arrow/array/array_primitive.h\"\r\n#include \"arrow/array/array_base.h\"\r\n#include \"arrow/io/file.h\"\r\n#include \"arrow/type_fwd.h\"\r\n\r\nint main() {\r\n\tauto* ptr = arrow::default_memory_pool();\r\n\tstd::cout << \"Hello \\n\";\r\n}\r\n```\r\nProvided vcpkg exists on the target linux machine, in this case it is WSL2 , Ubuntu 20.04.1 LTS, what I do is \r\n\r\n1) Copy vcxproj file into the source folder of the Linux machine  \r\n2) sudo apt-get install -y dos2unix\r\n3) sudo dotnet new -i GCC.Build.Template\r\n4) sudo dotnet new gccbuild --allow-scripts=yes\r\n5) set VCTargetsPath env variable to \"./\"\r\n\r\ndotnet build -p:Configuration=Release -p:Platform=x64 \r\n\r\n\r\n\r\n### Expected Behavior\r\nCompilation has to be successful as it happens when it's launched from the VS 2019\r\n\r\n### Actual Behavior\r\nCompilation on linkage to the external library (apache arrow in this case) , fails when invoked form cmdline.\r\nThe error I get is: \"undefined reference to arrow::default_memory_pool()\" on linkage. There is no such error when it's compiled from VS 2019, on the same WSL2, which means same, \"machine\" and same code layout, in my understanding.\r\n### Ask us questions\r\n\r\nShould something else to be done, before invoking cmdline MsBuild compilation, in order to make it work ?  ",
  "state": "CLOSED",
  "createdAt": "2021-02-10T15:09:04Z",
  "updatedAt": "2021-02-11T13:26:05Z",
  "closedAt": "2021-02-11T13:25:23Z",
  "author": {
    "login": "tigranmt"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: What is the exact issue you're seeing? Does running `sudo msbuild -p:Configuration=release -p:Platform=x64` have the same result?",
        "createdAt": "2021-02-10T16:18:12Z",
        "updatedAt": "2021-02-10T16:18:21Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "This turned to be a path issue, once adjusted properly, on this sample, it compiles as it was expected. ",
        "createdAt": "2021-02-11T13:26:05Z",
        "updatedAt": "2021-02-11T13:26:05Z",
        "author": {
          "login": "tigranmt"
        }
      }
    ]
  }
}