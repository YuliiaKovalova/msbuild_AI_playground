{
  "number": 7035,
  "title": "InvalidProjectFileException when opening a Project using XmlReader",
  "body": "### Issue Description\r\nI use the Microsoft.Build and Microsoft.Build.Utilities.Core Nuget packages to open and inspect csproj files. Using v16.11.0 of these 2 packages, I can open csproj files successfully but v17.0.0 throws InvalidProjectFileException.\r\n\r\n### Steps to Reproduce\r\nConsole application project that opens an in-memory csproj.\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build\" Version=\"16.11.0\" />\r\n    <PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"16.11.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nConsole application's Program.cs\r\n```\r\nusing System;\r\nusing System.IO;\r\nusing System.Xml;\r\nusing Microsoft.Build.Definition;\r\nusing Microsoft.Build.Evaluation;\r\n\r\nnamespace MsBuildTesting\r\n{\r\n    static class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            // set environment variables based on\r\n            // https://github.com/microsoft/MSBuildLocator/blob/88225e6e92744b40f7cf42637ccce090f63ea9db/src/MSBuildLocator/MSBuildLocator.cs#L310\r\n\r\n            string sdkVersion = \"6.0.100\";\r\n            Environment.SetEnvironmentVariable(\"MSBUILD_EXE_PATH\", @$\"C:\\Program Files\\dotnet\\sdk\\{sdkVersion}\\MSBuild.dll\");\r\n            Environment.SetEnvironmentVariable(\"MSBuildSDKsPath\", @$\"C:\\Program Files\\dotnet\\sdk\\{sdkVersion}\\Sdks\");\r\n            Environment.SetEnvironmentVariable(\"MSBuildExtensionsPath\", @$\"C:\\Program Files\\dotnet\\sdk\\{sdkVersion}\\\");\r\n\r\n            try\r\n            {\r\n                OpenProject();\r\n                Console.WriteLine(\"Project opened successfully\");\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex.ToString());\r\n            }\r\n        }\r\n\r\n        private static void OpenProject()\r\n        {\r\n            string csproj = @\"\r\n<Project Sdk=\"\"Microsoft.NET.Sdk\"\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n\";\r\n\r\n            Project proj;\r\n            using (MemoryStream ms = new MemoryStream())\r\n            {\r\n                // create csproj\r\n                using (StreamWriter sw = new StreamWriter(ms, leaveOpen: true))\r\n                {\r\n                    sw.Write(csproj);\r\n                }\r\n                ms.Position = 0;\r\n\r\n                // open csproj\r\n                using (XmlReader xr = XmlReader.Create(ms))\r\n                {\r\n                    ProjectOptions options = new ProjectOptions();\r\n\r\n                    // throws Microsoft.Build.Exceptions.InvalidProjectFileException when using Microsoft.Build 17.0.0 but not when using Microsoft.Build 16.11.0\r\n                    proj = Project.FromXmlReader(xr, options);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Expected Behavior\r\nThe console application should print \r\n\r\n> Project opened successfully\r\n\r\n### Actual Behavior\r\nIf the console application references Microsoft.Build 16.11.0 and Microsoft.Build.Utilities.Core 16.11.0 then the console output correctly shows \"Project opened successfully\".\r\n\r\nIf the console application references Microsoft.Build 17.0.0 and Microsoft.Build.Utilities.Core 17.0.0 then an InvalidProjectFileException is thrown when calling _Project.FromXmlReader(xr, options)_.\r\n\r\n### Analysis\r\nIf environment variable _MSBUILD_EXE_PATH_ is not set the both 16.11.0 and 17.0.0 throw\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n```\r\n\r\nIf _MSBUILD_EXE_PATH_ is set then 16.11.0 opens successfully, 17.0.0 throws\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: SDK Resolver Failure: \"The SDK resolver \"NuGetSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.ArgumentNullException: Value cannot be null. (Parameter 'path')\r\n```\r\n\r\nUsing 17.0.0, if only _MSBuildExtensionsPath_ is set then\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.NET.Sdk' specified could not be found.\r\n```\r\n\r\nMy console application project is _D:\\dev\\MsBuildTesting\\MsBuildTesting.csproj_. Using 17.0.0, if only _MSBuildSDKsPath_ is set then\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The imported project \"D:\\dev\\MsBuildTesting\\MsBuildTesting\\bin\\Debug\\net6.0\\Current\\Microsoft.Common.props\" was not found. Confirm that the expression in the Import declaration \"D:\\dev\\MsBuildTesting\\MsBuildTesting\\bin\\Debug\\net6.0\\Current\\Microsoft.Common.props\" is correct, and that the file exists on disk.  C:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.props\r\n```\r\n\r\nUsing 17.0.0, if both _MSBuildSDKsPath_ and _MSBuildExtensionsPath_ are set then\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator' specified could not be found.  C:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.props\r\n```\r\n\r\n### Versions & Configurations\r\n\r\nI have both Visual Studio 2019 16.11.6 and Visual Studio 2022 17.0.0 installed.\r\n\r\nI am running on Windows 10 Enterprise. Output from _ver_\r\n```\r\nMicrosoft Windows [Version 10.0.19042.1348]\r\n```\r\n\r\nOutput from _dotnet --list-sdks_\r\n```\r\n3.1.415 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.203 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.209 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.303 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.403 [C:\\Program Files\\dotnet\\sdk]\r\n6.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\nOutput from _msbuild -version_\r\n```\r\nMicrosoft (R) Build Engine version 17.0.0+c9eb9dd64 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n17.0.0.52104\r\n```\r\n",
  "state": "CLOSED",
  "createdAt": "2021-11-11T11:36:13Z",
  "updatedAt": "2024-02-21T14:11:01Z",
  "closedAt": "2021-11-18T17:07:48Z",
  "author": {
    "login": "El-Gor-do"
  },
  "labels": [
    "bug",
    "needs-more-info",
    "author-responded",
    "needs-attention",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: Does this still reproduce if you use [msbuildlocator](https://github.com/microsoft/MSBuildLocator)?",
        "createdAt": "2021-11-11T17:15:42Z",
        "updatedAt": "2021-11-11T17:15:42Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Using Microsoft.Build.Locator 1.4.1, the console app csproj has changed to\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build\" Version=\"16.11.0\" ExcludeAssets=\"runtime\" />\r\n    <PackageReference Include=\"Microsoft.Build.Locator\" Version=\"1.4.1\" />\r\n    <PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"16.11.0\" ExcludeAssets=\"runtime\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nProgram.cs\r\n```\r\nusing System;\r\nusing System.IO;\r\nusing System.Xml;\r\nusing Microsoft.Build.Definition;\r\nusing Microsoft.Build.Evaluation;\r\nusing Microsoft.Build.Locator;\r\n\r\nnamespace MsBuildTesting\r\n{\r\n    static class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            MSBuildLocator.RegisterDefaults();\r\n            try\r\n            {\r\n                OpenProject();\r\n                Console.WriteLine(\"Project opened successfully\");\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex.ToString());\r\n            }\r\n        }\r\n\r\n        private static void OpenProject()\r\n        {\r\n            string csproj = @\"\r\n<Project Sdk=\"\"Microsoft.NET.Sdk\"\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n\";\r\n\r\n            Project proj;\r\n            using (MemoryStream ms = new MemoryStream())\r\n            {\r\n                // create csproj\r\n                using (StreamWriter sw = new StreamWriter(ms, leaveOpen: true))\r\n                {\r\n                    sw.Write(csproj);\r\n                }\r\n                ms.Position = 0;\r\n\r\n                // open csproj\r\n                using (XmlReader xr = XmlReader.Create(ms))\r\n                {\r\n                    ProjectOptions options = new ProjectOptions();\r\n\r\n                    // throws Microsoft.Build.Exceptions.InvalidProjectFileException when using Microsoft.Build 16.11.0 and 17.0.0\r\n                    proj = Project.FromXmlReader(xr, options);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nNow whether the console app's Microsoft.Build package references are v16.11.0 or 17.0.0, _Project.FromXmlReader(xr, options)_ throws\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: SDK Resolver Failure: \"The SDK resolver \"NuGetSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.ArgumentNullException: Value cannot be null. (Parameter 'path')\r\n```",
        "createdAt": "2021-11-11T17:38:54Z",
        "updatedAt": "2021-11-11T17:38:54Z",
        "author": {
          "login": "El-Gor-do"
        }
      },
      {
        "body": "Thanks for reporting this.  I've identified the issue.  The NuGet SDK resolver throws an exception when an in-memory project is evaluated.  This used to be logged as a warning and evaluation would continue.  But now this exception fails evaluation because this change: https://github.com/dotnet/msbuild/pull/6763\r\n\r\nThe only workaround at the moment is to save the project to disk somewhere so the `ArgumentNullException` is not thrown and evaluation can succeed.  In the meantime, we're looking into a fix.",
        "createdAt": "2021-11-11T23:24:01Z",
        "updatedAt": "2021-11-11T23:24:01Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "_Project.FromXmlReader(...)_ is still borked when the csproj file is on either a mock disk or real disk.\r\n\r\nconsole app csproj\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build\" Version=\"17.0.0\" ExcludeAssets=\"runtime\" />\r\n    <PackageReference Include=\"Microsoft.Build.Locator\" Version=\"1.4.1\" />\r\n    <PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"17.0.0\" ExcludeAssets=\"runtime\" />\r\n    <PackageReference Include=\"System.IO.Abstractions.TestingHelpers\" Version=\"13.2.47\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nProgram.cs\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.IO.Abstractions;\r\nusing System.IO.Abstractions.TestingHelpers;\r\nusing System.Linq;\r\nusing System.Xml;\r\nusing Microsoft.Build.Definition;\r\nusing Microsoft.Build.Evaluation;\r\nusing Microsoft.Build.Locator;\r\n\r\nnamespace MsBuildTesting\r\n{\r\n    static class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            MSBuildLocator.RegisterDefaults();\r\n            try\r\n            {\r\n                OpenProject();\r\n                Console.WriteLine(\"Project opened successfully\");\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex.ToString());\r\n            }\r\n        }\r\n\r\n        private static void OpenProject()\r\n        {\r\n            string csproj = @\"\r\n<Project Sdk=\"\"Microsoft.NET.Sdk\"\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n\";\r\n\r\n            IFileSystem fs = new MockFileSystem();  // use either MockFileSystem() or FileSystem()\r\n            IFileInfo fi = fs.FileInfo.FromFileName(fs.Path.GetTempFileName());\r\n            using (Stream s = fi.Open(FileMode.Create, FileAccess.ReadWrite))\r\n            {\r\n                // create csproj\r\n                using (StreamWriter sw = new StreamWriter(s, leaveOpen: true))\r\n                {\r\n                    sw.Write(csproj);\r\n                }\r\n                s.Position = 0;\r\n\r\n                // open csproj\r\n                using (XmlReader xr = XmlReader.Create(s))\r\n                {\r\n                    ProjectOptions options = new ProjectOptions();\r\n\r\n                    // throws Microsoft.Build.Exceptions.InvalidProjectFileException when using Microsoft.Build 16.11.0 and 17.0.0\r\n                    Project proj = Project.FromXmlReader(xr, options);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis throws the same exception as before, even if I replace the _MockFileSystem_ with _FileSystem_\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: SDK Resolver Failure: \"The SDK resolver \"NuGetSdkResolver\" failed while attempting to resolve the SDK \"Microsoft.NET.Sdk\". Exception: \"System.ArgumentNullException: Value cannot be null. (Parameter 'path')\r\n```",
        "createdAt": "2021-11-12T10:21:35Z",
        "updatedAt": "2021-11-12T10:21:35Z",
        "author": {
          "login": "El-Gor-do"
        }
      },
      {
        "body": "Closing in favor of https://github.com/NuGet/Home/issues/11376",
        "createdAt": "2021-11-18T17:07:48Z",
        "updatedAt": "2021-11-18T17:07:48Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos I think we should still have an open issue to get a unit test created that would have caught this break.  It would have been nice to know it was breaking before 17.0 shipped so that NuGet wasn't caught off guard.",
        "createdAt": "2021-11-18T20:10:40Z",
        "updatedAt": "2021-11-18T20:10:40Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl Good idea. I created https://github.com/dotnet/msbuild/issues/7049",
        "createdAt": "2021-11-18T20:28:52Z",
        "updatedAt": "2021-11-18T20:28:52Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}