{
  "number": 834,
  "title": "UnGACed MSBuild can fail type checks when a task loads MSBuild assemblies from the amd64 folder",
  "body": "The same type, when loaded in a new appdomain in an amd64 MSBuild process, will be loaded from the copy of the DLL in the amd64 subfolder, not the one from bin. This means that checks for type equality will fail, because the types being compared may be from different physical assemblies on disk (even if they're bitwise identical).\r\n\r\nThis is new to the Willow experience, because MSBuild was always in the GAC before--so any attempt to load an MSBuild assembly would load it from the GAC, rather than the path that was requested. That ensured that there was no mismatch.\r\n\r\nOne possible symptom of this:\r\n\r\n```\r\nThe \"GenerateResource\" task failed unexpectedly.\r\nMicrosoft.Build.Shared.InternalErrorException: MSB0001: Internal MSBuild Error: Somehow got a wrong and possibly incompatible type for ProcessResourceFiles.\r\n   at Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(String message, Exception innerException, Object[] args)\r\n   at Microsoft.Build.Tasks.GenerateResource.Execute()\r\n   at Microsoft.Build.CommandLine.OutOfProcTaskAppDomainWrapperBase.InstantiateAndExecuteTask(IBuildEngine oopTaskHostNode, LoadedType taskType, String taskName, String taskLocation, String taskFile, Int32 taskLine, Int32 taskColumn, AppDomainSetup appDomainSetup, IDictionary`2 taskParams)\r\n```\r\n",
  "state": "CLOSED",
  "createdAt": "2016-07-28T15:26:29Z",
  "updatedAt": "2024-02-21T17:26:55Z",
  "closedAt": "2017-02-22T20:29:16Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Long fixed.",
        "createdAt": "2017-02-22T20:29:16Z",
        "updatedAt": "2017-02-22T20:29:16Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}