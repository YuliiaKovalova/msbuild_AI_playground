{
  "number": 10961,
  "title": "[Performance]: Microsoft.Build.Evaluation.Expander can be more efficient by using Spans",
  "body": "### Issue Description\n\nNoticed this while looking into a profile of VS solution load, particularly into string.Substring usage. [ExpandPropertiesLeaveTypedAndEscaped](https://github.com/dotnet/msbuild/blob/e4f527b8f8807345382bab5b5f1fe70ba6190cd0/src/Build/Evaluation/Expander.cs#L1184) showed up in this context, as about 0.3% of all allocations in VS during the solution load.\n\nThis led me to ping Rainer with the following questions, and he asked me to file this issue to track.\n\n```\n1) The substring call looks like it's done potentially twice, could the second call just use the existing value if it's not null?\n2) The first calls ExpandRegistryValue with the substring value. It looks like that method could just take in a ReadOnlySpan<char> and use that.\n3) The second calls ExpandPropertyBody with the substring value. This one has a lot of uses of that value, but again, it appears it might be ReadOnlySpan'able.\n \nAlso, there is the SplitFileSpec call which is a separate question. I assume that changing that to ReadOnlySpans isn't feasible?\n```\n\n![Image](https://github.com/user-attachments/assets/7021f52b-a6c9-4e6e-9d14-07def120b2c7)\n\n### Steps to Reproduce\n\nOpen Roslyn.sln in VS\n\n### Data\n\nThe etl failed uploading several times. I've copied to an internal share: \\\\vwdbuild01\\dev\\toddgrun\\msbuild\\PerfViewData.etl.zip\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\nVS 17.13\n\n### Regression\n\n- [ ] yes\n- [x] no\n\n### Regression Details\n\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-11-09T13:56:29Z",
  "updatedAt": "2025-03-19T16:26:16Z",
  "closedAt": null,
  "author": {
    "login": "ToddGrun"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "I walked down this path awhile ago, and hit a problem where MSBuild had to support an older .net that didn't have Span.  Times have changed so maybe it is possible now.",
        "createdAt": "2024-12-12T00:58:35Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "We had some minor improvement with @stephentoub's [recent PR](https://github.com/dotnet/msbuild/pull/11448) , however overall we're still hitting the compatibility issues due to TaskHost which doesn't support spans.\nWhile I still want to pick this eventually I don't have the bandwidth at the moment.",
        "createdAt": "2025-03-19T16:26:15Z",
        "author": {
          "login": "SimaTian"
        }
      }
    ]
  }
}