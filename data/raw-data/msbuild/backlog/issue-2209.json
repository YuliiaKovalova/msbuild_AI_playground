{
  "number": 2209,
  "title": "Is it possible to nuget MSBuild so all build dependencies downloaded without VS/Tools install?",
  "body": "We can paket/nuget FSharp.Complier.Tools and FSharp.Core etc but we still need to install either VS or VS Build Tools for MSBuild.exe.\r\n\r\nI see there is Microsoft.Build & Microsoft.Build.Runtime in nuget also and was thinking that these could be used to be able to make all dependencies bootstrapped from a build.cmd.\r\n\r\nI've tried but MSBuild.exe is in a different package to Microsoft.Build.Framework.dll and fails. I can't see to get it to work.\r\n\r\nIs what I'm trying to do possible or advisable? Seems so close. Would mean builds could be done on servers without installs.\r\n\r\nThanks",
  "state": "CLOSED",
  "createdAt": "2017-06-12T13:51:05Z",
  "updatedAt": "2024-02-21T17:18:30Z",
  "closedAt": "2017-06-12T16:21:25Z",
  "author": {
    "login": "AnthonyLloyd"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "It is close, but not yet. This is the idea behind the [Sdks feature](https://github.com/Microsoft/msbuild/milestone/12) that we've started rolling out with MSBuild 15, but it won't be fully possible until there's a NuGet SDK resolver (NuGet/Home#5220) and a distribution of MSBuild (NuGet package or even plain zip file) that uses it.\r\n\r\nI'm closing this because I believe it's tracked elsewhere (for example in https://github.com/Microsoft/msbuild/issues/1493) but please give feedback if you think we've missed any of the major scenarios. The core team is definitely aware that ideally we'd have \"download MSBuild thing, do no installs, invoke build, build succeeds\".",
        "createdAt": "2017-06-12T16:21:25Z",
        "updatedAt": "2017-06-12T16:21:25Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Great. I look forward to it. Thanks.",
        "createdAt": "2017-06-12T18:07:19Z",
        "updatedAt": "2017-06-12T18:07:19Z",
        "author": {
          "login": "AnthonyLloyd"
        }
      }
    ]
  }
}