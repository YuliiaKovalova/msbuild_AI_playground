{
  "number": 5502,
  "title": "Number unexpectedly not recognized when in Swedish locale",
  "body": "### Steps to reproduce\r\n\r\nBuild this with English (US) Windows settings. It will succeed. \r\nNow go to Control Panel>Region>Change Date/Time/number formats>Formats tab, change to Swedish, OK. No need to reboot or reopen the command prompt.\r\nNow build it again.\r\n```xml\r\n<Project>\r\n\r\n  <PropertyGroup>\r\n    <p>abc</p>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"t\" Condition=\" $(p.IndexOf('x')) >= 0 \" />\r\n  \r\n</Project>\r\n\r\n```\r\n### Expected behavior\r\n\r\nSuccess-  no output - the condition is valid and evaluates to `-1 >= 0` \r\n\r\n### Actual behavior\r\n\r\n```\r\nC:\\proj\\x.proj(7,34): error MSB4086: A numeric comparison was attempted on \"$(p.IndexOf('x'))\" that evaluates to \"-1\" instead of a number, in condition \" $(p.IndexOf('x')) >= 0 \".\r\n```\r\n\r\n### Environment data\r\n\r\n`msbuild /version` output:\r\n```\r\nC:\\proj>dotnet msbuild /version\r\nMicrosoft (R) Build Engine version 16.7.0-preview-20310-07+ee1c9fd0c for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.7.0.31007\r\n```\r\nOS info:\r\n\r\nWindows 10, 2004\r\n\r\n### Comments\r\n\r\nWe should parse all numbers out of strings in Invariant mode:\r\n\r\nhttps://github.com/microsoft/msbuild/blob/e70a3159d64f9ed6ec3b60253ef863fa883a99b1/src/Build/Evaluation/Conditionals/NumericComparisonExpressionNode.cs#L44\r\nhttps://github.com/microsoft/msbuild/blob/e70a3159d64f9ed6ec3b60253ef863fa883a99b1/src/Shared/ConversionUtilities.cs#L99\r\n\r\nI'm not sure what's going on. Note also, that the negative sign in Sweden is apparently the regular `-`.\r\n\r\ncc @maloo",
  "state": "CLOSED",
  "createdAt": "2020-07-10T01:18:18Z",
  "updatedAt": "2024-05-23T08:58:42Z",
  "closedAt": "2022-09-27T13:42:04Z",
  "author": {
    "login": "danmoseley"
  },
  "labels": [
    "bug",
    "Area: Localization",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Thanks for filing the issue. I want to note that decimal point and list separator is different in Swedish regional settings. So if you somehow use double/floats here instead of integers that could be an issue.",
        "createdAt": "2020-07-10T08:35:54Z",
        "updatedAt": "2020-07-10T08:35:54Z",
        "author": {
          "login": "maloo"
        }
      },
      {
        "body": "Having trouble reproing on another machine. Repro machine is Windows version 2004  19587.100 and msbuild16.7.0.31007, non repro is 19041.329 and 16.7.0.33088. That may not be relevant.\r\n\r\nThe key setting seems to be \"Regional Format\" (in the new style control panel) which corresponds to \"Format\" in the \"Region\" dialog -- the two toggle the same setting, but only lazily update to match each other.\r\n\r\n@maloo what versions do you have of these? Does building the above project repro for you with Swedish settings?",
        "createdAt": "2020-07-11T01:04:47Z",
        "updatedAt": "2020-07-11T01:04:47Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@danmosemsft yes, I can repro:\r\nWindows 1909 18363.900\r\nMSBuild 16.7.0.31007\r\n\r\nAnd running $env:DOTNET_SYSTEM_GLOBALIZATION_INVARIANT = 1 before makes the error go away.",
        "createdAt": "2020-07-11T01:43:16Z",
        "updatedAt": "2020-07-11T01:43:16Z",
        "author": {
          "login": "maloo"
        }
      },
      {
        "body": "I also tried MSBuild 16.6.0.22303 in dev cmd 2019, and could not repro. So looks like a regression of msbuild (or dotnet).",
        "createdAt": "2020-07-11T01:49:34Z",
        "updatedAt": "2020-07-11T01:49:34Z",
        "author": {
          "login": "maloo"
        }
      },
      {
        "body": "I cloned and built msbuild and version 16.8.0.36101 seems to work. Maybe just have forward this issue to dotnet/runtime and ask them to update to 16.8?",
        "createdAt": "2020-07-11T03:08:45Z",
        "updatedAt": "2020-07-11T03:08:45Z",
        "author": {
          "login": "maloo"
        }
      },
      {
        "body": "vs16.7 - 16.7.0.36101 also works, no repro. Is there any difference between \"standalone msbuild\" and msbuild bundled with dotnet?",
        "createdAt": "2020-07-11T03:23:43Z",
        "updatedAt": "2020-07-11T03:23:43Z",
        "author": {
          "login": "maloo"
        }
      },
      {
        "body": "I built the net472 base version, so maybe it is dotnet core related?",
        "createdAt": "2020-07-11T03:24:59Z",
        "updatedAt": "2020-07-11T03:24:59Z",
        "author": {
          "login": "maloo"
        }
      },
      {
        "body": "Unfortunately building my own copy to the same SHA doesn't give me a repro, and debugging the release version is not helpful so far.",
        "createdAt": "2020-07-11T04:21:50Z",
        "updatedAt": "2020-07-11T04:21:50Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "It's not https://github.com/microsoft/msbuild/issues/5360 because that requires the 2-parameter overload.",
        "createdAt": "2020-07-11T04:56:27Z",
        "updatedAt": "2020-07-11T04:56:27Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I don't plan to look more, since it's apparently fixed, although it bothers me I don't see how. I will leave this issue open in case there is a test missing that builds (and evaluates conditional expressions and property functions) in a culture with different number formats.",
        "createdAt": "2020-07-11T04:58:12Z",
        "updatedAt": "2020-07-11T04:58:12Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "FYI we have since discovered that when using ICU (which may be the case on some recent Windows ) the Swedish minus sign is not the typical hyphen. So the result in the bug (which may or may not be fixed now) was surely due to parsing without specifying invariant mode.\n\nEg https://github.com/dotnet/runtime/issues/47524",
        "createdAt": "2021-02-08T04:01:53Z",
        "updatedAt": "2021-02-08T04:01:53Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@rainersigwald I suggest to close this",
        "createdAt": "2022-09-27T03:08:42Z",
        "updatedAt": "2022-09-27T03:08:42Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "This is still an issue on\r\nMacOs\r\nNorwegian locale\r\nRider\r\nDotnet 7, MsBuild 17.x to build Refit 6.x.\r\n\r\nThe Condition they use in refit: `'$([System.Version]::Parse($(_RefitMSBuildMinVersion)).CompareTo($([System.Version]::Parse($(MSBuildVersion)))))' &gt; '0'` will evaluate to 0 and everything will break. The same repository works on Visual Studio for Mac though...\r\n\r\nSee https://github.com/reactiveui/refit/issues/1387 for other similar reporting",
        "createdAt": "2023-08-03T08:34:06Z",
        "updatedAt": "2023-08-03T08:36:19Z",
        "author": {
          "login": "MariusGjerd"
        }
      },
      {
        "body": "@rainersigwald - we are also running into this issue. Setting `InvariantGlobalization` fixed it, but still seem to be a general issue with `IndexOf`",
        "createdAt": "2024-05-23T08:44:13Z",
        "updatedAt": "2024-05-23T08:44:13Z",
        "author": {
          "login": "hknielsen"
        }
      },
      {
        "body": "Ah seem to be fixed in https://github.com/dotnet/msbuild/pull/9874",
        "createdAt": "2024-05-23T08:58:40Z",
        "updatedAt": "2024-05-23T08:58:40Z",
        "author": {
          "login": "hknielsen"
        }
      }
    ]
  }
}