{
  "number": 4177,
  "title": "How to use tracker with exec task",
  "body": "Hello,\r\n\r\nI want to use filetracker with exe task.\r\n\r\nI have managed to generate tlog files, how do i feed the, back so dependencies can be tracker?\r\nHere is the command.\r\nSeems the only way is for me to write a custom task.\r\nHowever writing custom task was a problem when visual studio upgrades. I always have issues with msbuild reference from the previous version after that.\r\n\r\nAlso i want to be able to split TaskParameter Outputs from the exec file.\r\nI have an executable that generates cpp header and cpp source file based on custom grammer.\r\nThis is very common scenario for a domain specific language.\r\n\r\nPlease advise. \r\n\r\n        <Exec Command=\"&quot;$(MSBuildBinPath)\\amd64\\Tracker.exe&quot; /d &quot;$(MSBuildBinPath)\\FileTracker64.dll&quot; /i $(TLogLocation) /r %(GraphicsPipelineStateObjectBuilds.FullPath) /c $(UCToolsGraphicsPipelineTool1) --main %(GraphicsPipelineStateObjectBuilds.EntryPointName) --file %(GraphicsPipelineStateObjectBuilds.FullPath) --cpp %(GraphicsPipelineStateObjectBuilds.CPPOutput) --header %(GraphicsPipelineStateObjectBuilds.CPPHeaderOutput)\" Outputs=\"%(GraphicsPipelineStateObjectBuilds.CPPOutput)\" >\r\n            <Output TaskParameter=\"Outputs\" ItemName=\"ClCompile\" />\r\n        </Exec>     \r\n",
  "state": "OPEN",
  "createdAt": "2019-02-14T19:41:03Z",
  "updatedAt": "2024-02-21T16:31:56Z",
  "closedAt": null,
  "author": {
    "login": "kingofthebongo2008"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "Since you want to control both tool execution (with incrementality through filetracker) and outputs (your header/source split), I would definitely recommend writing a custom task.\r\n\r\nCan you elaborate on the problems you encountered there? Tasks should be very highly forward-compatible (tasks that target MSBuild version X should keep working for X+1).",
        "createdAt": "2019-02-15T16:25:52Z",
        "updatedAt": "2019-02-15T16:25:52Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I have a custom tool that i feed a parsed language for directx12 pipeline\nstage objects.\nSince defining these objects in cpp is very tedious. I have written domain\nspecific language parser that spits out header and a cpp with generated\nboiler plate code.\ncppwinrt for example does similar thing.\nMy custom language has modules and i want to detect changes in these\nmodules.\nYou can imagine the same as the Visual Studio Tracked Tool task, which\ntracks #include directives in the headers.\n\nThis is a very general pipeline actually and is needed a lot as a general\npurpose.\nAnother example.\n\nIn game development people use fbx format for 3d asset exports from 3DS Max\nand May. They write tools that parse fbx files which reference external\ntextures or other data. So a custom tools for this is very useful.\n\nSo an msbuild task that works with a user supplied executable and tracks\nresources opened from it will be great.\nOtherwise everybody must do  a custom task for all executables.\n\nHope this helps. I have such a task, but it inherits code from visual\nstudio CPP tasks. There is no source for this by the way and this is very\nannoying. In general msbuild system could be much more useful for domain\nspecific languages if one is able to use custom parsers and generate C# or\nCPP or other general languages as backends.\n\n\nOn Fri, 15 Feb 2019 at 18:26, Rainer Sigwald <notifications@github.com>\nwrote:\n\n> Since you want to control both tool execution (with incrementality through\n> filetracker) and outputs (your header/source split), I would definitely\n> recommend writing a custom task.\n>\n> Can you elaborate on the problems you encountered there? Tasks should be\n> very highly forward-compatible (tasks that target MSBuild version X should\n> keep working for X+1).\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Microsoft/msbuild/issues/4177#issuecomment-464111068>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABF5cdagKSUDXY1-H4dyar_Zh2PJ2f09ks5vNt-jgaJpZM4a8Tca>\n> .\n>\n",
        "createdAt": "2019-02-15T17:00:10Z",
        "updatedAt": "2019-02-15T17:00:10Z",
        "author": {
          "login": "kingofthebongo2008"
        }
      },
      {
        "body": "So you intended this but as a feature request for a general-purpose `TrackedToolTask`?",
        "createdAt": "2019-02-15T17:16:33Z",
        "updatedAt": "2019-02-15T17:16:33Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Whatever you is the most appropriate actually.\n\n\nOn Fri, 15 Feb 2019 at 19:16, Rainer Sigwald <notifications@github.com>\nwrote:\n\n> So you intended this but as a feature request for a general-purpose\n> TrackedToolTask?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Microsoft/msbuild/issues/4177#issuecomment-464128346>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABF5cQIVCW-Izdlntfpps1LS3bpfyfRCks5vNut7gaJpZM4a8Tca>\n> .\n>\n",
        "createdAt": "2019-02-15T18:30:15Z",
        "updatedAt": "2019-02-15T18:30:15Z",
        "author": {
          "login": "kingofthebongo2008"
        }
      },
      {
        "body": "This functionality actually was in XNA build from 2006. It was quite useful\nat that time.\nAll the best\n\nOn Fri, 15 Feb 2019 at 20:29, Stefan Dyulgerov <stefan.dyulgerov@gmail.com>\nwrote:\n\n> Whatever you is the most appropriate actually.\n>\n>\n> On Fri, 15 Feb 2019 at 19:16, Rainer Sigwald <notifications@github.com>\n> wrote:\n>\n>> So you intended this but as a feature request for a general-purpose\n>> TrackedToolTask?\n>>\n>> \u2014\n>> You are receiving this because you authored the thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/Microsoft/msbuild/issues/4177#issuecomment-464128346>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/ABF5cQIVCW-Izdlntfpps1LS3bpfyfRCks5vNut7gaJpZM4a8Tca>\n>> .\n>>\n>\n",
        "createdAt": "2019-02-15T21:23:28Z",
        "updatedAt": "2019-02-15T21:23:28Z",
        "author": {
          "login": "kingofthebongo2008"
        }
      },
      {
        "body": "@rainersigwald Having a general-purpose `TrackedToolTask` would be awesome.\r\nI'm currently trying to write some tasks based on `TrackedVCToolTask`, but that requires referencing `Microsoft.Build.CPPTasks.Common` which require VisualStudio to be installed.\r\nI'd rather not have to reinvent how exactly to start Tracker.exe and how to determine up-to-date-ness based on the tlog files.",
        "createdAt": "2019-08-23T06:51:09Z",
        "updatedAt": "2019-08-23T06:58:08Z",
        "author": {
          "login": "rhpijnacker"
        }
      },
      {
        "body": "Btw. a bit more documentation on how to use `TrackedVCToolTask` would be useful too.",
        "createdAt": "2019-08-23T09:37:15Z",
        "updatedAt": "2019-08-23T09:37:15Z",
        "author": {
          "login": "rhpijnacker"
        }
      },
      {
        "body": "I have here written custom tasks.\n\nIdeally i would like visual studio dependencies to be removed.\n\nusing Microsoft.Build.CPPTasks;\n\nhttps://github.com/kingofthebongo2008/uc-tools-msbuild-tasks\n\n\n\nOn Fri, 23 Aug 2019 at 12:37, rhpijnacker <notifications@github.com> wrote:\n\n> Btw. a bit more documentation on how to use TrackedVCToolTask would be\n> useful too.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/microsoft/msbuild/issues/4177?email_source=notifications&email_token=AAIXS4LUCUBQLCNEJRGXU4LQF6VWLA5CNFSM4GXRG4NKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD47WEMY#issuecomment-524247603>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAIXS4IT2IV76WU42ZVY4TLQF6VWLANCNFSM4GXRG4NA>\n> .\n>\n",
        "createdAt": "2019-08-23T09:40:20Z",
        "updatedAt": "2019-08-23T09:40:20Z",
        "author": {
          "login": "kingofthebongo2008"
        }
      },
      {
        "body": "@kingofthebongo2008 Thanks!\r\nI had already spotted your projects. They were very helpful getting something working.\r\nSome of the things are not clear to me, however.\r\nE.g. what is the purpose of overriding methods like `GenerateCommandLineCommandsExceptSwitches` and why does it work to just return an empty string?",
        "createdAt": "2019-08-23T11:24:34Z",
        "updatedAt": "2019-08-23T11:24:34Z",
        "author": {
          "login": "rhpijnacker"
        }
      },
      {
        "body": "I was getting command lines twice.\n\nSay\nbinarize.exe mymesh --options --options\n\nIt was somewhere lower in msbuild, which duplicated.\n\nOn Fri, 23 Aug 2019 at 14:24, rhpijnacker <notifications@github.com> wrote:\n\n> @kingofthebongo2008 <https://github.com/kingofthebongo2008> Thanks!\n> I had already spotted your projects. They were very helpful getting\n> something working.\n> Some of the things are not clear to me, however.\n> E.g. what is the purpose of overriding methods like\n> GenerateCommandLineCommandsExceptSwitches and why does it work to just\n> return an empty string?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/microsoft/msbuild/issues/4177?email_source=notifications&email_token=AAIXS4PRGL4XMNEAOXBKWNLQF7CIRA5CNFSM4GXRG4NKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4755EA#issuecomment-524279440>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAIXS4ONADYFEMWRSK65623QF7CIRANCNFSM4GXRG4NA>\n> .\n>\n",
        "createdAt": "2019-08-23T11:55:34Z",
        "updatedAt": "2019-08-23T11:55:34Z",
        "author": {
          "login": "kingofthebongo2008"
        }
      }
    ]
  }
}