{
  "number": 7145,
  "title": "Cancelation gave `MSB4166: Child node \"2\" exited prematurely. `",
  "body": "After hitting Ctrl-C to cancel a build, MSBuild announced that a child terminated unexpectedly. This is always a bug - cancelation should not produce a message.\r\n\r\nI went to investigate but MSBuild had not written such a file. There was a zero byte file named MSB2509 but by the timestamp I suspect it was unrelated.\r\n\r\n```\r\n^CAttempting to cancel the build...\r\nMSBUILD : error MSB4166: Child node \"2\" exited prematurely. Shutting down. Diagnostic information may be found in files in \"/tmp/\" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.\r\n^C^C^C/mnt/c/git/installer/.dotnet/sdk/6.0.100-preview.5.21228.9/NuGet.targets(131,5): error MSB4220: Waiting for the currently executing task \"RestoreTask\" to cancel.\r\n^Z\r\n[1]+  Stopped                 ./build.sh /p:ArcadeBuildTarball=true /p:TarballDir=~/allsrc\r\ndan@danmoseL:/mnt/c/git/installer$ pushd /tmp\r\n/tmp /mnt/c/git/installer\r\ndan@danmoseL:/tmp$ find . -name \"MSB*\"\r\nfind: \u2018./tmp4zi7cux5\u2019: Permission denied\r\nfind: \u2018./tmprq93fg3o\u2019: Permission denied\r\n./MSBuild2509\r\ndan@danmoseL:/tmp$ ll MSBuild2509\r\nsrwxr-xr-x 1 dan dan 0 Dec 12 15:42 MSBuild2509=\r\ndan@danmoseL:/tmp$ echo $MSBUILDDEBUGPATH\r\n\r\ndan@danmoseL:\r\n\r\ndan@danmoseL:/tmp$ date\r\nSun Dec 12 15:54:43 MST 2021\r\n```\r\n\r\ninfo\r\n```\r\ndan@danmoseL:/tmp$ dotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.202\r\n Commit:    db7cc87d51\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  20.04\r\n OS Platform: Linux\r\n RID:         ubuntu.20.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/5.0.202/\r\n\r\nHost (useful for support):\r\n  Version: 5.0.5\r\n  Commit:  2f740adc14\r\n\r\n.NET SDKs installed:\r\n  5.0.202 [/usr/share/dotnet/sdk]\r\n```\r\n\r\nAs it is this but isn't actionable, but just an FYI that it's producing this message when it shouldn't and also not writing a file. ",
  "state": "CLOSED",
  "createdAt": "2021-12-12T22:56:18Z",
  "updatedAt": "2024-02-21T14:10:41Z",
  "closedAt": "2023-06-26T01:35:53Z",
  "author": {
    "login": "danmoseley"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "I don't know why it didn't write a file, but it could simply have been a SEGFAULT. Before emitting this message, the code attempts to look for an exception file. If it fails, it should not tell the user there may be an exceptoin file. Probably it should have a special message for when there is no such file:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/96a618ca59610908eddc92bfd0198746c34f0ed5/src/Build/BackEnd/BuildManager/BuildManager.cs#L2483-L2492\r\n\r\nOf course that wouldn't have helped me diagnose this.",
        "createdAt": "2021-12-12T23:02:15Z",
        "updatedAt": "2021-12-12T23:02:15Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I currently think this is a Nuget problem. The RestoreTask tries to account for a cancellation token, but in its catch for it, it checks for a TaskCanceledException instead of an OperationCanceledException.\r\n\r\nSee [catch](https://github.com/NuGet/NuGet.Client/blob/f24bad0668193ce21a1db8cabd1ce95ba509c7f0/src/NuGet.Core/NuGet.Build.Tasks/RestoreTask.cs#L102) for [wrong exception](https://github.com/NuGet/NuGet.Client/blob/6488c1a7913eb978fd7f667bbde4fa7e25821064/src/NuGet.Core/NuGet.Build.Tasks/BuildTasksUtility.cs#L266).",
        "createdAt": "2021-12-15T00:33:12Z",
        "updatedAt": "2021-12-15T00:35:48Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind impressive -- how did you figure that out without any callstack?",
        "createdAt": "2021-12-16T03:15:56Z",
        "updatedAt": "2021-12-16T03:15:56Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Oh, I see it at least says what task was running. Still - nice.",
        "createdAt": "2021-12-16T03:16:23Z",
        "updatedAt": "2021-12-16T03:16:23Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "https://github.com/NuGet/NuGet.Client/blob/f24bad0668193ce21a1db8cabd1ce95ba509c7f0/src/NuGet.Core/NuGet.Build.Tasks/RestoreTask.cs#L102\r\nshould catch OperationCanceledException, not TaskCanceledException, as cancelationToken.ThrowIfCancelRequested() throws the former, not the latter.\r\n\r\nMoving to nuget for this one liner fix.",
        "createdAt": "2023-06-26T01:33:39Z",
        "updatedAt": "2023-06-26T01:33:39Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  }
}