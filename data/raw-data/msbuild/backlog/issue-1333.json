{
  "number": 1333,
  "title": "Cannot find reference assemblies for .NET 3.5 or lower using core msbuild",
  "body": "dotnet/sdk supports targeting .NET 3.5 just fine if you use desktop msbuild, but it fails to find the reference assemblies using core msbuild. Both desktop and core work fine for NET4.0+.\r\n\r\n## Steps to reproduce\r\nCreate a new project with `dotnet new`\r\nChange the `TargetFramework` to `net35` or lower\r\nAdd `<RuntimeIdentifier>win10-x64</RuntimeIdentifier>` to the .csproj\r\n`dotnet restore`\r\n`dotnet build`\r\n\r\nI've been seeing this issue since the move to msbuild. Targeting .NET 3.5 and lower works in the Preview 2 release SDK. All the relevant targeting packs are installed.\r\n\r\n## Expected  behavior\r\nA successful build\r\n\r\n## Actual behavior\r\nFails with the error:\r\n`... error MSB3644: The reference assemblies for framework \".NETFramework,Version=v3.5\" were not found. To resolve this, install the SDK or Targeting Pack for this framework version or retarget your application to a version of the framework for which you have the SDK or Targeting Pack installed. ...`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (1.0.0-preview3-004056)\r\n\r\nProduct Information:\r\n Version:            1.0.0-preview3-004056\r\n Commit SHA-1 hash:  ccc4968bc3\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n\r\n\r\nMoved from https://github.com/dotnet/cli/issues/4626 for @Thealexbarney.\r\n\r\nMoved from https://github.com/dotnet/sdk/issues/369 for @piotrpMSFT \r\n\r\n@rainersigwald ",
  "state": "CLOSED",
  "createdAt": "2016-11-10T19:05:26Z",
  "updatedAt": "2024-02-21T17:24:22Z",
  "closedAt": "2019-10-29T15:32:43Z",
  "author": {
    "login": "nguerrera"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I think the problem is that there aren't any reference assemblies for .NET Framework 3.5.  The only thing in my `.NETFramework\\3.5` reference assemblies folder is `Profile\\Client`.  When I target .NET 3.5 from a Class Library, the references are coming from `C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\`.\n",
        "createdAt": "2016-11-11T23:51:21Z",
        "updatedAt": "2016-11-11T23:51:27Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "This comes down to code in `FrameworkLocationHelper.GetPathToDotNetFramework` that is disabled on .NET Core: https://github.com/Microsoft/msbuild/blob/63cf735deb821969cb096056c0c429c78cc76fbb/src/Shared/FrameworkLocationHelper.cs#L1308-L1310\n\nThere are some (probably avoidable) registry calls there, but the biggest obstacle seems to be that finding the v3.5 (or whatever) runtime depends on locating the current runtime (`Path.GetDirectoryName(typeof(object).Module.FullyQualifiedName)`) and [looking around it](https://github.com/Microsoft/msbuild/blob/63cf735deb821969cb096056c0c429c78cc76fbb/src/Shared/FrameworkLocationHelper.cs#L722) to find the desired version of the framework. That won't work on Core where `object` comes from somewhere else entirely.\n\nThere may be another way to locate a framework (looks like `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v3.5` has an `InstallPath` value that looks promising) but we'd have to figure out the right mechanism (and test the heck out of it).\n",
        "createdAt": "2016-11-16T03:55:32Z",
        "updatedAt": "2016-11-16T03:55:32Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "What's the work-around for people who need to build such projects on VS 2017?  I just ran into this today, and the only thing I could figure out was to compile on a separate machine with only VS 2015 installed.",
        "createdAt": "2017-02-15T05:16:28Z",
        "updatedAt": "2017-02-15T05:16:28Z",
        "author": {
          "login": "KevinH-MS"
        }
      },
      {
        "body": "@KevinH-MS It sounds like you're seeing something different from this issue--as originally reported, projects build fine using `MSBuild.exe`. Can you describe your problem in more detail?",
        "createdAt": "2017-02-15T05:19:56Z",
        "updatedAt": "2017-02-15T05:19:56Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I see.  I think that's the answer to my question... \ud83d\ude04\r\n\r\n(don't use ```dotnet build -f net35```, use ```msbuild /p:TargetFramework=net35```) \r\n",
        "createdAt": "2017-02-15T05:42:45Z",
        "updatedAt": "2017-02-15T05:42:45Z",
        "author": {
          "login": "KevinH-MS"
        }
      },
      {
        "body": "Issues a pain when you're trying to generate a multi-target nuget package; \r\nprior to the great cheese moving of 2016 I had no issues building a package that targeted 2/3.5/4/4.5/etc \r\nIs this likely to be sorted in the next few days when VS17s released? Seems ambitious...\r\n\r\nAdmittedly I'm `presuming` this is msbuild related as it came with RC4 / VS2017 changes and the issue in the error being thrown is the same as the op (albeit for every version specified). \r\n\r\n```\r\n<PropertyGroup>\r\n      ...  <TargetFrameworks>net20;net35;net40;net45;net451;net452;net462;netstandard1.3;netstandard1.6;netstandard1.6.1;netcoreapp1.1</TargetFrameworks>\r\n    ...\r\n````\r\netc https://github.com/BcryptNet/bcrypt.net/blob/master/src/BCrypt.Net/BCrypt.Net.csproj \r\n\r\nHell, it might be that after all these changes and dotnet versions I need to set fire to my PC and start afresh to get things to build \ud83d\udd25 ",
        "createdAt": "2017-03-01T11:40:55Z",
        "updatedAt": "2017-03-01T15:19:15Z",
        "author": {
          "login": "ChrisMcKee"
        }
      },
      {
        "body": "Right now the only options I see are:\r\n1. Stay on the old project.json system. (Can't use VS2017 as an IDE)\r\n2. Migrate to msbuild and be dependent on the full msbuild. (Can't build with dotnet SDK)\r\n3. Drop <= net35 support.\r\n\r\nI guess legacy support is a lower priority than other things for now.\r\n\r\nIdeally (IMO) there would be targeting packs on NuGet for each framework version, making it easier to target .NET Framework from the dotnet SDK.",
        "createdAt": "2017-03-01T19:49:38Z",
        "updatedAt": "2017-03-01T19:49:38Z",
        "author": {
          "login": "Thealexbarney"
        }
      },
      {
        "body": "Our use case at work: targeting net20 is important for us as we have to make some of our libraries work on old Windows Server 2003 systems. We can't upgrade them right now. And we don't want to install anything (say, newer .NET framework versions) to avoid risks of breaking the systems.\r\n\r\nWe love dotnet tooling, but while this issue is not fixed, we'll have to stay on the full msbuild for this use case.",
        "createdAt": "2017-03-02T16:30:15Z",
        "updatedAt": "2017-03-02T16:30:15Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "Any updates on this issue?",
        "createdAt": "2017-03-15T22:42:07Z",
        "updatedAt": "2017-03-15T22:42:07Z",
        "author": {
          "login": "schotime"
        }
      },
      {
        "body": "@schotime I've been using RTW since it came out last week and this seems to be resolved.",
        "createdAt": "2017-03-15T22:59:37Z",
        "updatedAt": "2017-03-15T22:59:48Z",
        "author": {
          "login": "ChrisMcKee"
        }
      },
      {
        "body": "@ChrisMcKee In core MSBuild or full MSBuild?",
        "createdAt": "2017-03-15T23:01:07Z",
        "updatedAt": "2017-03-15T23:01:07Z",
        "author": {
          "login": "Thealexbarney"
        }
      },
      {
        "body": "It works in vs for me, but not calling dotnet build manually.",
        "createdAt": "2017-03-15T23:06:18Z",
        "updatedAt": "2017-03-15T23:06:18Z",
        "author": {
          "login": "schotime"
        }
      },
      {
        "body": "@Thealexbarney Windows, so full. I'm not sure you could target .net 2 on non-win platforms as it would lack the required build targets. 2/3.5/4/4.5/4.6 predating it all. You're back in mono-land there.",
        "createdAt": "2017-03-15T23:15:42Z",
        "updatedAt": "2017-03-15T23:16:49Z",
        "author": {
          "login": "ChrisMcKee"
        }
      },
      {
        "body": "Also seeing this. Can build in VS2017, but `dotnet build` gives:\r\n\r\n> MSB3644: The reference assemblies for framework \".NETFramework,Version=v3.5\" were not found.",
        "createdAt": "2017-03-16T09:43:26Z",
        "updatedAt": "2017-03-16T09:43:26Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "@drewnoakes use msbuild",
        "createdAt": "2017-03-16T09:46:30Z",
        "updatedAt": "2017-03-16T09:46:30Z",
        "author": {
          "login": "ChrisMcKee"
        }
      },
      {
        "body": "I'm getting the error with .NET 2.0. I'm trying to do `dotnet pack`. Is there a workaround for packaging NuGet packages that will work?",
        "createdAt": "2017-03-24T15:13:39Z",
        "updatedAt": "2017-03-24T15:13:39Z",
        "author": {
          "login": "JoshClose"
        }
      },
      {
        "body": "@JoshClose you can directly call\r\n```\r\nmsbuild /t:Pack /p:Configuration=Release\r\n```\r\nFor version suffixes, add `/p:VersionSuffix=beta-123` (however, note https://github.com/NuGet/Home/issues/4337)",
        "createdAt": "2017-03-24T15:15:48Z",
        "updatedAt": "2017-03-24T15:16:14Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "How can I change the package output location? Sorry, I'm no too familiar with msbuild.",
        "createdAt": "2017-03-24T15:53:17Z",
        "updatedAt": "2017-03-24T15:53:17Z",
        "author": {
          "login": "JoshClose"
        }
      },
      {
        "body": "`/p:PackageOutputPath=path\\to\\dir\\`",
        "createdAt": "2017-03-24T16:22:33Z",
        "updatedAt": "2017-03-24T16:22:33Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "I got this working by adding the following to the `.csproj` file:\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <FrameworkPathOverride Condition=\"'$(TargetFramework)' == 'net35'\">$(MSBuildProgramFiles32)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v3.5\\Profile\\Client</FrameworkPathOverride>\r\n</PropertyGroup>\r\n```\r\n\r\nUnfortunately, the \"normal\" path `C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v3.5` doesn't work in this case because it doesn't have a copy of `mscorlib.dll`.\r\n\r\n## Update\r\n\r\nThis can now be addressed using the [Microsoft.NETFramework.ReferenceAssemblies](https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies/) NuGet package. Click through to the \"Project Website\" for documentation.",
        "createdAt": "2017-04-22T04:22:24Z",
        "updatedAt": "2022-01-03T01:07:51Z",
        "author": {
          "login": "NightOwl888"
        }
      },
      {
        "body": "Thanks for the workaround @NightOwl888! This fixed the issue for me locally **and** on AppVeyor CI builds.",
        "createdAt": "2017-04-26T14:03:24Z",
        "updatedAt": "2017-04-26T14:03:24Z",
        "author": {
          "login": "nbarbettini"
        }
      },
      {
        "body": "Yeah, that doesn't work for me, as there is no 3.5 version of `System.Web` available anywhere in that folder structure. \ud83d\ude1e ",
        "createdAt": "2017-05-16T04:58:18Z",
        "updatedAt": "2017-05-16T04:58:18Z",
        "author": {
          "login": "bradwilson"
        }
      },
      {
        "body": "The @NightOwl888 solution stopped working again.\r\n\r\n```powershell\r\nC:\\Program Files\\dotnet\\sdk\\2.0.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(165,5): error : Assets file '...\\obj\\project.assets.json' doesn't have a target for '.NETFramework,Version=v3.5,Profile=Client'. Ensure that restore has run and that you have included 'net35-client' in the TargetFrameworks for your project.\r\n```",
        "createdAt": "2017-10-28T01:30:10Z",
        "updatedAt": "2017-11-02T15:27:03Z",
        "author": {
          "login": "skarllot"
        }
      },
      {
        "body": "@Thealexbarney There were some packages like `Microsoft.TargetingPack.NETFramework.*` for `v4.5+` and `Microsoft.TargetingPack.Portable.*` from dotnet.myget.org months ago, but the team didn't announce anything.\r\n\r\nI worked with it for a while, there were some issues, but it was better!\r\n\r\n**I (and many) would really like if those packs along with support for older versions were made public!**",
        "createdAt": "2018-03-08T12:09:02Z",
        "updatedAt": "2018-03-08T19:42:08Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "Those packages are not officially supported and are on the myget feed for use in corefx builds. Cc @terrajobst\n\nGet Outlook for iOS<https://aka.ms/o0ukef>\n________________________________\nFrom: Nirmal Guru <notifications@github.com>\nSent: Thursday, March 8, 2018 4:09:16 AM\nTo: Microsoft/msbuild\nCc: Nick Guerrera; Author\nSubject: Re: [Microsoft/msbuild] Cannot find reference assemblies for .NET 3.5 or lower using core msbuild (#1333)\n\n\n@Thealexbarney<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fthealexbarney&data=04%7C01%7CNick.Guerrera%40microsoft.com%7Cde538bae7703409ed0da08d584ed6ac3%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636561077591129119%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwifQ%3D%3D%7C-2&sdata=pu29IjpCDc5as2VaYG25OrucDw0F9Z40oIogYZXa8Us%3D&reserved=0> There was some packages like Microsoft.TargetingPack.NETFramework.* for v4.5-v471 from dotnet.myget.org months ago, but the team didn't announce anything.\n\nI worked with it for a while, there were some issues, but it was better!\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FMicrosoft%2Fmsbuild%2Fissues%2F1333%23issuecomment-371469251&data=04%7C01%7CNick.Guerrera%40microsoft.com%7Cde538bae7703409ed0da08d584ed6ac3%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636561077591129119%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwifQ%3D%3D%7C-2&sdata=oI%2FPnZtXDW3CRVaVs2FWiV9ZGD8R31D5L3TOGHwAvGE%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAAEmzixhipTgMkCtWsSi979HzQ3UswFWks5tcR9rgaJpZM4KvBO-&data=04%7C01%7CNick.Guerrera%40microsoft.com%7Cde538bae7703409ed0da08d584ed6ac3%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636561077591129119%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwifQ%3D%3D%7C-2&sdata=guy3p%2BYOctJZQe58MPR5S%2FJRV2F0KFzq%2F2lL7WU0scg%3D&reserved=0>.\n",
        "createdAt": "2018-03-08T17:03:26Z",
        "updatedAt": "2018-03-08T17:03:26Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "@NightOwl888's solution *almost* worked, except I have a strongly-typed resource file, and:\r\n\r\n> error : ResGen.exe not supported on .NET Core MSBuild\r\n\r\nLooks like it's caused by #2272.\r\n\r\nAs others have said, using MSBuild is *not* an option; I need to build a multi-target NuGet package.\r\n\r\nLooks like I'm going to have to drop the resource file and hard-code the strings. :(",
        "createdAt": "2018-04-04T19:14:47Z",
        "updatedAt": "2018-04-04T19:14:47Z",
        "author": {
          "login": "RichardD2"
        }
      },
      {
        "body": "Should we we expect support from the CLI to .NET 3.5 eventually or is this just not planned?",
        "createdAt": "2018-04-18T09:54:03Z",
        "updatedAt": "2018-04-18T09:54:03Z",
        "author": {
          "login": "bruno-garcia"
        }
      },
      {
        "body": "I've been told it's not happening.",
        "createdAt": "2018-04-18T14:55:34Z",
        "updatedAt": "2018-04-18T14:55:34Z",
        "author": {
          "login": "bradwilson"
        }
      },
      {
        "body": "Immo edited #WontFix into my comment here, so... https://github.com/dotnet/designs/pull/33#discussion_r174651338",
        "createdAt": "2018-04-18T18:19:55Z",
        "updatedAt": "2018-04-18T18:19:55Z",
        "author": {
          "login": "jnm2"
        }
      },
      {
        "body": "How do I get an SDK based project (multi)targeting net35 to build?\r\n\r\n`msbuild  proj.csproj /p:TargetFrameworkVersion=v3.5` fails with:\r\n\r\n`C:\\proj.csproj(1,1 ): error MSB4041: The default XML namespace of the project must be the MSBuild XML namespace. If the project is authored in the MSBuild 2003 format, please add xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" to the <Project> element. If the project has been authored in the old 1.0 or 1.2 format, please convert it to MSBuild 2003 format.`\r\n",
        "createdAt": "2018-05-10T09:10:31Z",
        "updatedAt": "2018-05-10T09:10:31Z",
        "author": {
          "login": "bruno-garcia"
        }
      },
      {
        "body": "> Yeah, that doesn't work for me, as there is no 3.5 version of `System.Web` available anywhere in that folder structure. \ud83d\ude1e\r\n\r\n@bradwilson Did you ever find a resolution for this? I'm in the same boat.",
        "createdAt": "2018-09-20T00:53:45Z",
        "updatedAt": "2018-09-20T00:53:45Z",
        "author": {
          "login": "JohnHBrock"
        }
      },
      {
        "body": "@JohnHBrock No. There is no solution.",
        "createdAt": "2018-09-20T05:17:03Z",
        "updatedAt": "2018-09-20T05:17:03Z",
        "author": {
          "login": "bradwilson"
        }
      },
      {
        "body": "@bradwilson This seems to work OK, but I haven't had time to thoroughly test it:\r\n```xml\r\n  <ItemGroup>\r\n    <Reference Condition=\" '$(TargetFramework)' == 'net35' \" Include=\"System.Web\" HintPath=\"$(WINDIR)\\Microsoft.NET\\Framework64\\v2.0.50727\\System.Web.dll\"  />\r\n  </ItemGroup>\r\n```\r\n\r\nThis includes System.Web.dll as a dependency in the overall project by pulling it from the .NET 2.0 directory, and, combined with the @NightOwl888 workaround, seems to make `dotnet build -f net35` succeed.\r\n\r\nEDIT: A possible problem I've found with this approach: There are two versions of System.Web.dll under `$(WINDIR)\\Microsoft.NET\\`, one under `Framework64\\v2.0.50727\\` (built for x64) and another under `Framework\\v2.0.50727\\` (built for x86). In other words, System.Web.dll isn't built for Any CPU (aka MSIL). So if your project needs to target Any CPU, the lack of an Any CPU System.Web.dll poses a problem.",
        "createdAt": "2018-09-20T05:48:53Z",
        "updatedAt": "2018-09-21T01:54:03Z",
        "author": {
          "login": "JohnHBrock"
        }
      },
      {
        "body": "@JohHBrock have you tried to copy files and directories from 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\v3.5\\*' to 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v3.5'?",
        "createdAt": "2018-09-22T13:26:50Z",
        "updatedAt": "2018-09-22T13:26:50Z",
        "author": {
          "login": "skarllot"
        }
      },
      {
        "body": "The plan to address this is to use an updated `Microsoft.NETFramework.ReferenceAssemblies` package that delivers .NET 3.5 once that exists (dotnet/core-sdk#2022). That already works for .NET 2.0.\r\n\r\nSince this can be done without MSBuild changes, I'm going to close this.",
        "createdAt": "2019-10-29T15:32:43Z",
        "updatedAt": "2019-10-29T15:32:43Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}