{
  "number": 2501,
  "title": "\"Assembly with same name is already loaded\" error when using two different versions of same task factory in MSBuild 15.3 for .NET Core",
  "body": "Hi,\r\n\r\nI've noticed an inconsistent behaviour in MSBuild 15.3 when there are two projects built which use different versions of the same task factory. In .NET Desktop, the build completes successfully, while in .NET Core, the build is terminated in error: `error MSB4175: The task factory \"UtilPack.NuGet.MSBuild.NuGetTaskRunnerFactory\" could not be loaded from the assembly \"~\\.nuget\\packages\\utilpack.nuget.msbuild\\1.1.0\\build\\\\netcoreapp1.1\\UtilPack.NuGet.MSBuild.dll\". Assembly with same name is already loaded\"`.\r\n\r\nI've attached the minimal set of files required to reproduce this. For .NET Desktop, run command `\"c:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\MSBuild.exe\" /t:TestTarget main.build`. For .NET Core, run command `dotnet msbuild /t:TestTarget main.build`. It seems that using `UnloadProjectsOnCompletion` property on `MSBuild` task in `main.build` has no effect.\r\n\r\nHere is the attached zip file, containing all required files to reproduce the issue: [task_factory_issue_reproduce.zip](https://github.com/Microsoft/msbuild/files/1285597/task_factory_issue_reproduce.zip). Zip file contains `main.build` file, which will be used as entrypoint, and it will restore & execute the `.build` files in subdirectories. Those `.build` files will use different versions of the same task factory (which is visible by including `PackageReference` to `UtilPack.NuGet.MSBuild` NuGet package).\r\n\r\nI guess this is a bug on .NET Core version of MSBuild?\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2017-09-07T17:42:53Z",
  "updatedAt": "2024-02-21T17:16:51Z",
  "closedAt": "2021-05-18T15:09:35Z",
  "author": {
    "login": "stazz"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "As an example of a use-case that is impacted by this, this prevents you from using two different versions of things like [NerdBank.GitVersioning](https://github.com/dotnet/Nerdbank.GitVersioning) in a solution, meaning you need to upgrade everything simultaneously in lockstep, which is hard to achieve in large monorepos. It'd be great to get this fixed. \ud83d\udc4d",
        "createdAt": "2020-10-16T12:25:33Z",
        "updatedAt": "2020-10-16T12:25:33Z",
        "author": {
          "login": "herebebeasties"
        }
      },
      {
        "body": "This should be resolved by #4916. Please let us know if you see otherwise on MSBuild 16.5 or higher.",
        "createdAt": "2021-05-18T15:09:35Z",
        "updatedAt": "2021-05-18T15:09:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I can confirm that this is fixed now, thanks!",
        "createdAt": "2021-09-15T12:04:59Z",
        "updatedAt": "2021-09-15T12:04:59Z",
        "author": {
          "login": "marcin-krystianc"
        }
      }
    ]
  }
}