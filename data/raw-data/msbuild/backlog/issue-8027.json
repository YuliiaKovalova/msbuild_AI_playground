{
  "number": 8027,
  "title": "SDK tools path not set correctly for .NET Fx 4.8.1",
  "body": "On a machine that has VS Build Tools 17.3 and the .NET Fx 4.8.1 SDK installed, when attempting to build a .NET Fx 4.8.1 project that contains resx files, it fails with the error:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\MSBuild\\Current\\Bin\\amd64\\Microsoft.Common.CurrentVersion.targets(3873,5): error MSB3086: Task could not find \"al.exe\" using the SdkToolsPath \"\" or the registry key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\NETFXSDK\\4.8\\WinSDK-NetFx40Tools-x86\". Make sure the SdkToolsPath is set and the tool exists in the correct processor specific location under the SdkToolsPath and that the Microsoft Windows SDK is installed [C:\\app\\ClassLibrary1.csproj]\r\n```\r\n\r\nThis can be worked around by manually setting the `TargetFrameworkSDKToolsDirectory` MSBuild property to `C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8.1 Tools`.\r\n\r\nThis is the same issue that occurred for .NET Fx 4.8:\r\n* https://github.com/microsoft/dotnet-framework-docker/issues/313\r\n* https://github.com/dotnet/msbuild/pull/4487\r\n* https://github.com/dotnet/msbuild/pull/4895\r\n\r\nHere's a repro project: [ClassLibrary1.zip](https://github.com/dotnet/msbuild/files/9725059/ClassLibrary1.zip). You just need to build the Dockerfile in order to reproduce the error.",
  "state": "CLOSED",
  "createdAt": "2022-10-06T13:09:29Z",
  "updatedAt": "2024-02-21T14:07:28Z",
  "closedAt": "2022-12-05T20:54:08Z",
  "author": {
    "login": "mthalman"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "VS 17.5"
  },
  "comments": {
    "nodes": [
      {
        "body": "@mthalman which install places the registry key for the arm64 framework install location? I have 481 and latest VS installed on an arm64 machine but don't see it.",
        "createdAt": "2022-11-10T18:41:47Z",
        "updatedAt": "2022-11-10T18:41:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> @mthalman which install places the registry key for the arm64 framework install location? I have 481 and latest VS installed on an arm64 machine but don't see it.\r\n\r\nI don't know anything about the Arm64 aspect of VS. This issue isn't specific to Arm64. I discovered this was broken as a result of running the tests we have for the .NET Framework Docker images. You can see how we install VS Build Tools here: https://github.com/microsoft/dotnet-framework-docker/blob/8c71a8820c73eb96bb58a3140c49c92108c4f8b8/src/sdk/4.8.1/windowsservercore-ltsc2022/Dockerfile#L30-L43",
        "createdAt": "2022-11-10T19:04:42Z",
        "updatedAt": "2022-11-10T19:04:42Z",
        "author": {
          "login": "mthalman"
        }
      },
      {
        "body": "I managed to find the right registry key (in the 32-bit reg, not the 64-bit reg), arm64 was misleading and related to another issue similar to this one. \r\n\r\nI'm trying to reproduce this issue but I'm running into `failed to register layer: Error processing tar file(exit status 1): link /Files/Program Files/Common Files/System/ado/en-US/msader15.dll.mui /Files/Program Files (x86)/Common Files/System/ado/en-US/msader15.dll.mui: no such file or directory`, which is confusing because the file does exist on disk. Does this look familiar to you?",
        "createdAt": "2022-11-11T22:52:14Z",
        "updatedAt": "2022-11-11T22:52:33Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Thanks @rainersigwald for helping me figure out what the issue was above, I needed to switch over to windows container mode.\r\n\r\nJust verified this is resolved by https://github.com/dotnet/msbuild/pull/7689\r\n\r\nHere's the Dockerfile showing that MSBuild.exe.config was overwritten with my custom config from [this commit](d2f8b521bab).\r\n\r\n```dockerfile\r\nFROM mcr.microsoft.com/dotnet/framework/sdk:4.8.1-windowsservercore-ltsc2022 AS build\r\n\r\nARG src=\"MSBuild.exe.config\"\r\nARG target=\"C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/MSBuild/Current/Bin/amd64/MSBuild.exe.config\"\r\n\r\nWORKDIR /app\r\nCOPY . .\r\n\r\nCOPY ${src} ${target}\r\n\r\nRUN msbuild.exe /restore ClassLibrary1.csproj\r\n```\r\n\r\nAnd here's the log:\r\n```\r\nC:\\src\\repros\\docker-481\\ClassLibrary1>docker build .\r\nSending build context to Docker daemon  1.561MB\r\nStep 1/7 : FROM mcr.microsoft.com/dotnet/framework/sdk:4.8.1-windowsservercore-ltsc2022 AS build\r\n ---> 553e10a1010b\r\nStep 2/7 : ARG src=\"MSBuild.exe.config\"\r\n ---> Running in 8f0b72fc62c8\r\nRemoving intermediate container 8f0b72fc62c8\r\n ---> 44cbedcaf6de\r\nStep 3/7 : ARG target=\"C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/MSBuild/Current/Bin/amd64/MSBuild.exe.config\"   \r\n ---> Running in f06414160fb8\r\nRemoving intermediate container f06414160fb8\r\n ---> c0c8ec310d26\r\nStep 4/7 : WORKDIR /app\r\n ---> Running in 08a568d13bae\r\nRemoving intermediate container 08a568d13bae\r\n ---> b8a609ef744f\r\nStep 5/7 : COPY . .\r\n ---> 7908d0ca5ce2\r\nStep 6/7 : COPY ${src} ${target}\r\n ---> 6826d7291940\r\nStep 7/7 : RUN msbuild.exe /restore ClassLibrary1.csproj\r\n ---> Running in 55356e6491c2\r\nMSBuild version 17.4.0+18d5aef85 for .NET Framework\r\nBuild started 11/11/2022 3:52:01 PM.\r\nProject \"C:\\app\\ClassLibrary1.csproj\" on node 1 (Restore target(s)).\r\n_GetAllRestoreProjectPathItems:\r\n  Determining projects to restore...\r\nRestore:\r\n  X.509 certificate chain validation will use the default trust store selected by .NET.\r\n  Restoring packages for C:\\app\\ClassLibrary1.csproj...\r\n  Generating MSBuild file C:\\app\\obj\\ClassLibrary1.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\app\\obj\\ClassLibrary1.csproj.nuget.g.targets.\r\n  Writing assets file to disk. Path: C:\\app\\obj\\project.assets.json\r\n  Restored C:\\app\\ClassLibrary1.csproj (in 242 ms).\r\n\r\n  NuGet Config files used:\r\n      C:\\Users\\ContainerAdministrator\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n\r\n  Feeds used:\r\n      https://api.nuget.org/v3/index.json\r\nDone Building Project \"C:\\app\\ClassLibrary1.csproj\" (Restore target(s)).\r\nProject \"C:\\app\\ClassLibrary1.csproj\" on node 1 (default targets).\r\nCoreResGen:\r\n  Processing resource file \"Resource1.resx\" into \"obj\\Debug\\net481\\ClassLibrary1.Resource1.resources\".\r\n  Processing resource file \"Resource1.en-GB.resx\" into \"obj\\Debug\\net481\\ClassLibrary1.Resource1.en-GB.resources\".\r\nCoreGenerateAssemblyInfo:\r\nSkipping target \"CoreGenerateAssemblyInfo\" because all output files are up-to-date with respect to the input files.\r\nCoreCompile:\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\MSBuild\\Current\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,IL2121,1701,1702 /fullpaths /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;DEBUG;NETFRAMEWORK;NET481;NET20_OR_GREATER;NET30_OR_GREATER;NET35_OR_GREATER;NET40_OR_GREATER;NET45_OR_GREATER;NET451_OR_GREATER;NET452_OR_GREATER;NET46_OR_GREATER;NET461_OR_GREATER;NET462_OR_GREATER;NET47_OR_GREATER;NET471_OR_GREATER;NET472_OR_GREATER;NET48_OR_GREATER;NET481_OR_GREATER /highentropyva+ /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8.1\\mscorlib.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8.1\\System.Core.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8.1\\System.Data.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.8.1\\System.dll\" /reference:\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\  Creating directory \"obj\\Debug\\net481\\en-GB\".  C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8.1 Tools\\x64\\al.exe /culture:en-GB /out:obj\\Debug\\net481\\en-GB\\ClassLibrary1.resources.dll /template:obj\\Debug\\net481\\ClassLibrary1.dll /embed:obj\\Debug\\net481\\ClassLibrary1.Resource1.en-GB.resourcesCopyFilesToOutputDirectory:  Copying file from \"C:\\app\\obj\\Debug\\net481\\ClassLibrary1.dll\" to \"C:\\app\\bin\\Debug\\net481\\ClassLibrary1.dll\".  ClassLibrary1 -> C:\\app\\bin\\Debug\\net481\\ClassLibrary1.dll\r\n  Copying file from \"C:\\app\\obj\\Debug\\net481\\ClassLibrary1.pdb\" to \"C:\\app\\bin\\Debug\\net481\\ClassLibrary1.pdb\".\r\n  Creating directory \"bin\\Debug\\net481\\en-GB\".\r\n  Copying file from \"C:\\app\\obj\\Debug\\net481\\en-GB\\ClassLibrary1.resources.dll\" to \"C:\\app\\bin\\Debug\\net481\\en-GB\\ClassLibrary1.resources.dll\".\r\nDone Building Project \"C:\\app\\ClassLibrary1.csproj\" (default targets).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:02.22\r\nRemoving intermediate container 55356e6491c2\r\n ---> a9f57b8f52a8\r\nSuccessfully built a9f57b8f52a8\r\n```",
        "createdAt": "2022-11-11T23:58:31Z",
        "updatedAt": "2022-11-11T23:58:31Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}