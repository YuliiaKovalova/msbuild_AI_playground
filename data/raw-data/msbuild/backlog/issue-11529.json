{
  "number": 11529,
  "title": "ImportBefore/After fails on macOS",
  "body": "### Issue Description\n\nMSBuild imports all files from ImportBefore and ImportAfter directories without any filters:\n\nhttps://github.com/dotnet/msbuild/blob/0f466124dc843c0db2c84eedc1b8bebd6f6daff3/src/Tasks/Microsoft.CSharp.CurrentVersion.targets#L27\n\nhttps://github.com/dotnet/msbuild/blob/0f466124dc843c0db2c84eedc1b8bebd6f6daff3/src/Tasks/Microsoft.CSharp.CurrentVersion.targets#L391\n\nTherefore, it's impossible to customize local builds on macOS, because Finder creates a .DS_Store file in the directory as it navigates, and MSBuild tries to import it when building a project.\n\n### Steps to Reproduce\n\n1. Create the following directory in Finder: `/Users/USER/Library/ApplicationSupport/Microsoft/MSBuild/Current/Microsoft.Common.targets/ImportBefore`\n2. Try to build anything with `dotnet build`\n\n### Expected Behavior\n\nBuilds succesfully\n\n### Actual Behavior\n\n```\n    /usr/local/share/dotnet/sdk/9.0.200/Microsoft.Common.CurrentVersion.targets(6998,3): error MSB4024: The imported project file \"/Users/USER/Library/Application Support/Microsoft/MSBuild/Current/Microsoft.Common.targets/ImportBefore/.DS_Store\" could not be loaded. Root element is missing.\n```\n\n### Analysis\n\nMSBuild should never try to import from built-in targets without any filters\n\nIt's also possible to implement default filters in `<Import/>`. I think it would be reasonable to ignore hidden files (`File.GetAttributes(path).HasFlag(FileAttributes.Hidden)`)\n\n### Versions & Configurations\n\n`dotnet --version`: 9.0.200\n`dotnet msbuild -version`: 17.13.8.7017\nmacOS: 15.3 (24D60)",
  "state": "OPEN",
  "createdAt": "2025-02-28T22:17:05Z",
  "updatedAt": "2025-05-05T20:12:46Z",
  "closedAt": null,
  "author": {
    "login": "Dubzer"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "OS: macOS",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "The [documentation](https://learn.microsoft.com/en-us/visualstudio/msbuild/customize-your-local-build?view=vs-2022#use-msbuildextensionspath-and-msbuilduserextensionspath) indicates that `*.targets` files will be imported.\n\nIs the bug that the implementation doesn't follow the documentation?\n\n> I think it would be reasonable to ignore hidden files (File.GetAttributes(path).HasFlag(FileAttributes.Hidden))\n\nFiltering on the extended file attribute `hidden` will not exclude a `.DS_Store` file. They are not hidden files by file attribute. `.DS_Store` files are \"hidden\" because the name begins with a `.`.\n\nIf changing from `*` to `*.targets` has too much risk, would it be reasonable to exclude `.*` files from the set of files to import?",
        "createdAt": "2025-05-04T23:35:50Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "> Filtering on the extended file attribute hidden will not exclude a .DS_Store file\n\nIn macOS, there are two ways to hide a file: with an extended attribute, and the usual way for Unix systems, by prefixing a file with a \".\" Both ways reflect the visibility in the Finder and the output of `File.GetAttributes`.\n\nI suggested checking the flag instead of filtering by dot because there are hidden files in the Finder which use an extended attribute way. Such as `Icon\\r` which is created when setting an icon on a directory. And as far as I know, there are also such files on Windows.\n\n`File.GetAttributes` handles all these cases:\n\n<img width=\"631\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/703925d9-6670-4935-8edf-cec975b87b8b\" />",
        "createdAt": "2025-05-05T11:16:37Z",
        "author": {
          "login": "Dubzer"
        }
      },
      {
        "body": "Ah -- `File.GetAttributes` has a [special case](https://learn.microsoft.com/en-us/dotnet/api/system.io.fileattributes?view=net-9.0#:~:text=On%20Unix%20systems%2C%20the%20value%20returned%20by%20File.GetAttributes%20includes%20Hidden%20for%20a%20file%20whose%20name%20begins%20with%20a%20period%20(%22.%22).). I didn't expect `GetAttributes` to do that.",
        "createdAt": "2025-05-05T20:12:45Z",
        "author": {
          "login": "jrdodds"
        }
      }
    ]
  }
}