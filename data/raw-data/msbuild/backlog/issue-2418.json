{
  "number": 2418,
  "title": "DocumentationProjectOutputGroupDependencies is taking ~33% seconds of a design time build",
  "body": "1. Enlist in Roslyn (Pick E:\\Roslyn or change the paths below)\r\n2. Run\r\n\r\n```\r\nmsbuild /nologo /m:1 /v:m /clp:Summary;PerformanceSummary /flp:v:d /t:CollectResolvedSDKReferencesDesignTime;DebugSymbolsProjectOutputGroup;ResolveComReferencesDesignTime;ContentFilesProjectOutputGroup;DocumentationProjectOutputGroupDependencies;SGenFilesOutputGroup;ResolveProjectReferencesDesignTime;SourceFilesProjectOutputGroup;DebugSymbolsProjectOutputGroupDependencies;SatelliteDllsProjectOutputGroup;BuiltProjectOutputGroup;SGenFilesOutputGroupDependencies;ResolveAssemblyReferencesDesignTime;CollectSDKReferencesDesignTime;DocumentationProjectOutputGroup;PriFilesOutputGroup;BuiltProjectOutputGroupDependencies;SatelliteDllsProjectOutputGroupDependencies /p:\"SolutionFileName=Roslyn.sln;LangName=en-US;Configuration=Debug;LangID=1033;DesignTimeBuild=true;SolutionDir=E:\\\\roslyn\\\\;SolutionExt=.sln;BuildingInsideVisualStudio=true;DefineExplicitDefaults=true;Platform=AnyCPU;SolutionPath=E:\\\\roslyn\\\\Roslyn.sln;SolutionName=Roslyn;DevEnvDir=C:\\Program Files (x86)\\Microsoft Visual Studio\\Enterprise\\Common7\\IDE;BuildingProject=false\" Roslyn.sln\r\n```\r\n\r\n```\r\n      105 ms  AssignTargetPaths                        150 calls\r\n      112 ms  WorkaroundIncorrectSatelliteDeployment   150 calls\r\n      129 ms  PriFilesOutputGroup                       33 calls\r\n      129 ms  _SplitProjectReferencesByFileExistence   150 calls\r\n      132 ms  DebugSymbolsProjectOutputGroup           151 calls\r\n      133 ms  ResolveComReferencesDesignTime           151 calls\r\n      134 ms  SGenFilesOutputGroup                     151 calls\r\n      134 ms  DocumentationProjectOutputGroup          151 calls\r\n      155 ms  DebugSymbolsProjectOutputGroupDependencies 151 calls\r\n      164 ms  SGenFilesOutputGroupDependencies         151 calls\r\n      174 ms  CollectSDKReferencesDesignTime           151 calls\r\n      178 ms  BuiltProjectOutputGroup                  151 calls\r\n      208 ms  AssignProjectConfiguration               150 calls\r\n      234 ms  HandlePackageFileConflicts                 1 calls\r\n      261 ms  SatelliteDllsProjectOutputGroupDependencies 151 calls\r\n      267 ms  _GetProjectReferenceTargetFrameworkProperties 1389 calls\r\n      280 ms  ResolveProjectReferencesDesignTime       151 calls\r\n      316 ms  SatelliteDllsProjectOutputGroup          151 calls\r\n      389 ms  ResolveAssemblyReferencesDesignTime      151 calls\r\n      552 ms  LinkVSSDKEmbeddableAssemblies            150 calls\r\n      606 ms  ResolveLockFileReferences                150 calls\r\n      700 ms  ImplicitlyExpandDesignTimeFacades         95 calls\r\n      754 ms  RunProduceContentAssets                   98 calls\r\n      844 ms  SourceFilesProjectOutputGroup            151 calls\r\n      883 ms  BuiltProjectOutputGroupDependencies      151 calls\r\n     1193 ms  ReportAssetsLogMessages                  150 calls\r\n     1398 ms  ResolveProjectReferences                 150 calls\r\n     1615 ms  _HandlePackageFileConflicts               98 calls\r\n     1761 ms  _ComputeLockFileReferences               150 calls\r\n     2000 ms  ContentFilesProjectOutputGroup           151 calls\r\n     2307 ms  _ComputeLockFileCopyLocal                 98 calls\r\n     3668 ms  RunResolvePackageDependencies            150 calls\r\n     5793 ms  CollectResolvedSDKReferencesDesignTime   151 calls\r\n    15844 ms  ResolveAssemblyReferences                150 calls\r\n    30757 ms  DocumentationProjectOutputGroupDependencies 151 calls <!---- Really, really expensive\r\n\r\nTask Performance Summary:\r\n        3 ms  CreateVisualBasicManifestResourceName     20 calls\r\n        3 ms  AssignLinkMetadata                        13 calls\r\n        5 ms  CreateItem                               190 calls\r\n        6 ms  GetReferenceAssemblyPaths                 95 calls\r\n        8 ms  FindAppConfigFile                        150 calls\r\n       15 ms  ResolvePublishAssemblies                   1 calls\r\n       18 ms  AssignCulture                            176 calls\r\n       22 ms  CreateCSharpManifestResourceName          40 calls\r\n       24 ms  MakeDir                                  150 calls\r\n       25 ms  CollectSDKReferencesDesignTime           300 calls\r\n       25 ms  ProduceContentAssets                      98 calls\r\n       26 ms  CheckForImplicitPackageReferenceOverrides 150 calls\r\n       32 ms  GenerateBindingRedirects                  28 calls\r\n       32 ms  Message                                   93 calls\r\n       39 ms  ResolveNonMSBuildProjectOutput           132 calls\r\n      152 ms  AssignProjectConfiguration               150 calls\r\n      198 ms  AssignTargetPath                         750 calls\r\n      201 ms  HandlePackageFileConflicts                 1 calls\r\n     1181 ms  ReportAssetsLogMessages                  150 calls\r\n     1523 ms  ResolvePackageFileConflicts               98 calls\r\n     3536 ms  ResolvePackageDependencies               150 calls\r\n    15785 ms  ResolveAssemblyReference                 150 calls\r\n    43319 ms  MSBuild                                  310 calls\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:42.22\r\n```\r\n\r\nRemoving it, reduces the build time just down to 30 seconds.",
  "state": "CLOSED",
  "createdAt": "2017-08-11T02:48:18Z",
  "updatedAt": "2024-02-21T17:17:22Z",
  "closedAt": "2017-08-15T03:54:28Z",
  "author": {
    "login": "davkean"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "What commit of Roslyn are you building?\r\n\r\nOn my machine, at https://github.com/dotnet/roslyn/commit/caa783000516207aaa12caf255a672ce0a03bc1d, and with VS 15.0.26730.0 (d15rel)/MSBuild 15.3.409.57025, I see several errors that targets do not exist -- looks like from all of the multitargeted projects. I disabled building them in the default Debug configuration and see numbers similar to yours.\r\n\r\nObservations:\r\n* Building the design-time targets through the solution is probably not a good simulation of the VS scenario. The solution metaproject passes the targets down individually to the children, and you get a bunch of gunk like this:\r\n\r\n```\r\nProject \"s:\\roslyn\\Roslyn.sln\" (1) is building \"s:\\roslyn\\src\\Tools\\RoslynPublish\\RoslynPublish.csproj\" (142:16) on node 1 (SatelliteDllsProjectOutputGroupDependencies target(s)).\r\nBuilding with tools version \"15.0\".\r\nProject file contains ToolsVersion=\"14.0\". This toolset may be unknown or missing, in which case you may be able to resolve this by installing the appropriate version of MSBuild, or the build may have been forced to a particular ToolsVersion for policy reasons. Treating the project as if it had ToolsVersion=\"15.0\". For more information, please see http://go.microsoft.com/fwlink/?LinkId=293424.\r\nTarget \"ValidateMSBuildToolsVersion\" skipped. Previously built successfully.\r\nTarget \"BuildOnlySettings\" skipped. Previously built successfully.\r\nTarget \"PrepareForBuild\" skipped. Previously built successfully.\r\nTarget \"AssignTargetPaths\" skipped. Previously built successfully.\r\nTarget \"ResolveReferences\" skipped. Previously built successfully.\r\nTarget \"SatelliteDllsProjectOutputGroupDependencies\" in file \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\EntInt\\MSBuild\\15.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"s:\\roslyn\\src\\Tools\\RoslynPublish\\RoslynPublish.csproj\" (entry point):\r\nDone building target \"SatelliteDllsProjectOutputGroupDependencies\" in project \"RoslynPublish.csproj\".\r\nDone Building Project \"s:\\roslyn\\src\\Tools\\RoslynPublish\\RoslynPublish.csproj\" (SatelliteDllsProjectOutputGroupDependencies target(s)).\r\n```\r\n\r\nAnother problem with this approach: it creates targets in the solution metaproj that have the same name as the leaf-project targets you want to build. Times are then aggregated in the Target Performance Summary. That's why `DocumentationProjectOutputGroupDependencies` looks expensive here: it's a combination of _the execution time for all of that target's prerequisites in all projects_ (from the solution target instance) and _the actual execution time for that target_ (in the leaves).\r\n\r\n* Be careful about timing based on command-line builds with high log verbosities. The text logger is sadly not cheap.\r\n\r\n\r\n* The actual `DocumentationProjectOutputGroupDependencies` target is cheap:\r\nhttps://github.com/Microsoft/msbuild/blob/2d8a4341875e532bdf25a14f208f62a7bb547774/src/Tasks/Microsoft.Common.CurrentVersion.targets#L5736-L5747\r\n\r\nThose dependencies match other `*OutputGroupDependencies` targets, so it'd be surprising if they were that expensive.\r\n\r\nAnd indeed, it doesn't look like this target is the problem.\r\n\r\nWith your command line:\r\n```\r\n    18434 ms  _GetProjectReferenceTargetFrameworkProperties 1301 calls\r\n    19407 ms  ResolveAssemblyReferences                141 calls\r\n    65495 ms  DocumentationProjectOutputGroupDependencies 142 calls\r\n\r\n    19320 ms  ResolveAssemblyReference                 141 calls\r\n    109774 ms  MSBuild                                  1798 calls\r\n\r\nTime Elapsed 00:01:29.91\r\n```\r\n\r\nWithout that target listed:\r\n```\r\n    12032 ms  CollectResolvedSDKReferencesDesignTime   142 calls\r\n    18669 ms  _GetProjectReferenceTargetFrameworkProperties 1301 calls\r\n    50172 ms  ResolveProjectReferencesDesignTime       142 calls\r\n\r\n     6552 ms  ResolvePackageDependencies               141 calls\r\n    97900 ms  MSBuild                                  1557 calls\r\n\r\nTime Elapsed 00:01:17.74\r\n```\r\n\r\nWith it, but listed last:\r\n```\r\n      397 ms  DocumentationProjectOutputGroupDependencies 142 calls\r\n...\r\n    11971 ms  CollectResolvedSDKReferencesDesignTime   142 calls\r\n    18353 ms  _GetProjectReferenceTargetFrameworkProperties 1301 calls\r\n    49984 ms  ResolveProjectReferencesDesignTime       142 calls\r\n\r\n     4610 ms  ResolvePackageFileConflicts               98 calls\r\n     6609 ms  ResolvePackageDependencies               141 calls\r\n    97815 ms  MSBuild                                  1558 calls\r\n\r\nTime Elapsed 00:01:17.83\r\n```",
        "createdAt": "2017-08-11T21:42:13Z",
        "updatedAt": "2017-08-11T21:42:13Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "To get a better-fidelity simulation of running these for all projects, I created this `after.Roslyn.sln.targets`\r\n\r\n```xml\r\n<Project>\r\n  <Target Name=\"Foreach_Project\">\r\n    <MSBuild Projects=\"@(ProjectReference)\"\r\n             Targets=\"$(DesignTimeTargets)\"\r\n             BuildInParallel=\"True\"/>\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nAnd called it with\r\n\r\n```\r\nmsbuild /nologo /m:1 /v:m /clp:Summary;PerformanceSummary /flp:v:d /t:Foreach_Project /p:\"DesignTimeTargets=CollectResolvedSDKReferencesDesignTime;ResolveComReferencesDesignTime;ContentFilesProjectOutputGroup;SGenFilesOutputGroup;ResolveProjectReferencesDesignTime;SourceFilesProjectOutputGroup;DebugSymbolsProjectOutputGroupDependencies;SatelliteDllsProjectOutputGroup;BuiltProjectOutputGroup;SGenFilesOutputGroupDependencies;ResolveAssemblyReferencesDesignTime;CollectSDKReferencesDesignTime;DocumentationProjectOutputGroup;PriFilesOutputGroup;BuiltProjectOutputGroupDependencies;SatelliteDllsProjectOutputGroupDependencies;DocumentationProjectOutputGroupDependencies\" \"/p:SolutionFileName=Roslyn.sln;LangName=en-US;Configuration=Debug;LangID=1033;DesignTimeBuild=true;SolutionDir=s:\\\\roslyn\\\\;SolutionExt=.sln;BuildingInsideVisualStudio=true;DefineExplicitDefaults=true;Platform=Any CPU;SolutionPath=s:\\\\roslyn\\\\Roslyn.sln;SolutionName=Roslyn;DevEnvDir=C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\EntInt\\Common7\\IDE;BuildingProject=false\" Roslyn.sln\r\n```\r\n\r\nTiming highlights:\r\n```\r\n        4 ms  DocumentationProjectOutputGroupDependencies 141 calls\r\n     5599 ms  RunResolvePackageDependencies            141 calls\r\n    10160 ms  ResolveProjectReferences                 141 calls\r\n    16870 ms  _GetProjectReferenceTargetFrameworkProperties 1301 calls\r\n    69131 ms  Foreach_Project                            1 calls\r\n\r\n      393 ms  HandlePackageFileConflicts                 1 calls\r\n     1485 ms  ReportAssetsLogMessages                  141 calls\r\n     3263 ms  ResolveAssemblyReference                 141 calls\r\n     3791 ms  ResolvePackageFileConflicts               98 calls\r\n     5441 ms  ResolvePackageDependencies               141 calls\r\n    94863 ms  MSBuild                                  1592 calls\r\n\r\nTime Elapsed 00:01:09.32\r\n```",
        "createdAt": "2017-08-11T21:55:07Z",
        "updatedAt": "2017-08-11T21:55:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks dude, let me play around with this.",
        "createdAt": "2017-08-15T03:54:28Z",
        "updatedAt": "2017-08-15T03:54:28Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "For another project I tried, it's trying to find a metaproj while running that, what is that?\r\n\r\nC:\\Performance\\FooBar\\after.FooBar.sln.targets(3,5): error MSB3202: The project\r\n file \"C:\\ReducedSolution\\FooBar\\..\\A.B.C\\A.B.C\r\n.csproj.metaproj\" was not found. [C:\\Performance\\FooBar\\FooBar.sln]\r\n",
        "createdAt": "2017-08-15T04:51:34Z",
        "updatedAt": "2017-08-15T04:51:34Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "`.csproj.metaproj` is usually created to account for solution build order dependencies that aren't expressed in the projects. I would expect that to work here, though.\r\n\r\nWorkaround: you should be able to do this once\r\n\r\n```\r\nset MSBUILDEMITSOLUTION=1\r\nmsbuild FooBar.sln /t:DoesNotNeedToExist\r\nset MSBUILDEMITSOLUTION=\r\n```\r\n\r\nThat will make *.metaproj exist on disk. It's intended for debugging, but will probably trick the engine in your case.",
        "createdAt": "2017-08-15T16:39:41Z",
        "updatedAt": "2017-08-15T16:39:41Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}