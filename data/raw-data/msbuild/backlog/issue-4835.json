{
  "number": 4835,
  "title": "MSB5009 May Not Fire In All Conditions",
  "body": "### Steps to reproduce\r\nConsider the attached solution/project.\r\n\r\n[MS5009BadNestedSolutionEntries.zip](https://github.com/microsoft/msbuild/files/3753057/MS5009BadNestedSolutionEntries.zip)\r\n\r\nPay special attention to the **MS5009BadNestedSolutionEntries.sln**, specifically the NestedProjects section:\r\n\r\n```\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{1484A47E-F4C5-4700-B13F-A2BDB6ADD35E} = {5EE89BD0-04E3-4600-9CF2-D083A77A9449}\r\n\t\t{1484A47E-F4C5-4700-B13F-A2BDB6ADD35E} = {5EE89BD0-04E3-4600-9CF2-D083A77A9448}\r\n\tEndGlobalSection\r\n```\r\n\r\nIn this example a developer has inadvertently merged in a bad NestedProject line (probably due to a merge conflict). The project `{5EE89BD0-04E3-4600-9CF2-D083A77A9449}` is invalid as per the Solution file.\r\n\r\nMSBuild reports no issue with the file and Visual Studio will happily load it with the correct nesting:\r\n\r\n![image](https://user-images.githubusercontent.com/2592881/67247011-5c395180-f41d-11e9-842f-0da3066c7ed2.png)\r\n\r\n\r\nNow consider a normalization tool (such as this one here: https://github.com/aolszowka/VisualStudioSolutionSorter) which sorts this such that the section now looks like this:\r\n\r\n```\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{1484A47E-F4C5-4700-B13F-A2BDB6ADD35E} = {5EE89BD0-04E3-4600-9CF2-D083A77A9448}\r\n\t\t{1484A47E-F4C5-4700-B13F-A2BDB6ADD35E} = {5EE89BD0-04E3-4600-9CF2-D083A77A9449}\r\n\tEndGlobalSection\r\n```\r\n\r\nAttempting to build this via MSBuild now invokes the following:\r\n\r\n```\r\nMS5009BadNestedSolutionEntries.sln : Solution file error MSB5009: Error parsing the nested project section in solution file.\r\n```\r\n\r\nThe `MSB5009` error is correct in this case.\r\n\r\nThe one who will end up throwing the error is https://github.com/microsoft/msbuild/blob/e0116872ef1bf48f1f527d69de64ad58cb7453e0/src/Build/Construction/Solution/ProjectInSolution.cs#L371-L372\r\n\r\nOpening the solution file in Visual Studio still loads, but the folder nesting is broken as expected:\r\n\r\n![image](https://user-images.githubusercontent.com/2592881/67246976-3dd35600-f41d-11e9-9900-85bbbfccca81.png)\r\n\r\n\r\n### Expected  behavior\r\nWe would expect `MSB5009` to trigger in all cases where invalid entries have been added into the `NestedProject` section.\r\n\r\n### Actual behavior\r\n`MSB5009` is only triggered when it is the LAST Nested Project Reference for this project.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n```\r\nMicrosoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.9.21.664\r\n```\r\n\r\nOS info:\r\nWindows 10 Enterprise 1903 (OS Build 18362.357)\r\n",
  "state": "OPEN",
  "createdAt": "2019-10-21T22:14:22Z",
  "updatedAt": "2024-02-21T16:30:30Z",
  "closedAt": null,
  "author": {
    "login": "aolszowka"
  },
  "labels": [
    "help wanted",
    "Area: Debuggability",
    "Area: Solution (.sln)",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Does this repro from the command line?",
        "createdAt": "2019-10-21T23:13:56Z",
        "updatedAt": "2019-10-21T23:13:56Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "@livarcocc I am not sure I understand your question?\r\n\r\n> Attempting to build this via MSBuild now invokes the following:\r\n> MS5009BadNestedSolutionEntries.sln : Solution file error MSB5009: Error parsing the nested project section in solution file.\r\n\r\nAre you asking how to run it?\r\n\r\n```\r\nmsbuild MS5009BadNestedSolutionEntries.sln\r\n```\r\n\r\nNote that as per the above the given example works, it is not until you reorder the `NestedProjects` section that you fail. In order to make this easier I have uploaded this modified version as part of this comment which should help you reproduce it.\r\n\r\n[MS5009BadNestedSolutionEntries_FailureState.zip](https://github.com/microsoft/msbuild/files/3755773/MS5009BadNestedSolutionEntries_FailureState.zip)\r\n\r\nNote that reordering the `NestedProjects` section will resolve the issue.\r\n\r\nWe have created the following toy program to scan any existing solution files to identify those with bad entries as of today (we've got like ~50,000 of them to search though). Note that if the solution is already in a bad state you will fail at the `SolutionFile.Parse(string)` line with the same exception:\r\n\r\n```csharp\r\nnamespace FindBadNestedSolutionEntries\r\n{\r\n    using Microsoft.Build.Construction;\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.IO;\r\n    using System.Linq;\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            string targetSolution = @\"MS5009BadNestedSolutionEntries.sln\";\r\n            SolutionFile solution = SolutionFile.Parse(targetSolution);\r\n\r\n            IEnumerable<string> nestedProjectEntries = NestedProjectsEntries(targetSolution);\r\n\r\n            HashSet<string> validatedProjects = new HashSet<string>();\r\n\r\n            foreach (string nestedProjectEntry in nestedProjectEntries)\r\n            {\r\n                // We need to crack the reference\r\n                IEnumerable<string> projectGuids = nestedProjectEntry.Split('=').Select(projectGuid => projectGuid.Trim());\r\n\r\n                foreach (string projectGuid in projectGuids)\r\n                {\r\n                    if (!validatedProjects.Contains(projectGuid))\r\n                    {\r\n                        if (!solution.ProjectsByGuid.ContainsKey(projectGuid))\r\n                        {\r\n                            Console.WriteLine($\"Project Guid `{projectGuid}` is bad\");\r\n                        }\r\n\r\n                        validatedProjects.Add(projectGuid);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        static IEnumerable<string> NestedProjectsEntries(string solutionFile)\r\n        {\r\n            IEnumerable<string> solutionLines = File.ReadLines(solutionFile);\r\n\r\n            IEnumerator<string> solutionLineEnumerator = solutionLines.GetEnumerator();\r\n\r\n            while (solutionLineEnumerator.MoveNext())\r\n            {\r\n                if (solutionLineEnumerator.Current.Trim().StartsWith(\"GlobalSection(NestedProjects) = preSolution\"))\r\n                {\r\n                    // Throw away the global section line\r\n                    solutionLineEnumerator.MoveNext();\r\n\r\n                    do\r\n                    {\r\n                        yield return solutionLineEnumerator.Current;\r\n                        solutionLineEnumerator.MoveNext();\r\n                    } while (!solutionLineEnumerator.Current.Trim().StartsWith(\"EndGlobalSection\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n",
        "createdAt": "2019-10-22T13:15:57Z",
        "updatedAt": "2019-10-22T13:15:57Z",
        "author": {
          "login": "aolszowka"
        }
      }
    ]
  }
}