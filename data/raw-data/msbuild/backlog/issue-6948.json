{
  "number": 6948,
  "title": "RAR is slow with lots of search paths",
  "body": "### Issue Description\r\nOur caches for RAR store information about assemblies so that we don't have to open them to get the key information, but they don't store where those assemblies are. We still have to walk through the search paths to find them. In most cases, this isn't such a big deal, but some customers (as in #6911) have thousands of search paths, and searching all of them takes an inordinate amount of time. I don't know how common that case is, but it would be good to reduce that.\r\n\r\n### Steps to Reproduce\r\nCreate a project with a huge number of search paths but only one assembly and measure how long RAR takes to execute.\r\n\r\n### Data\r\nSee #6911.\r\n\r\n### Analysis\r\nI don't think there's a way to skip to where the assembly is without introducing some kind of breaking change\u2014just because there is not an assembly at a particular path in one RAR execution does not mean that assembly will not appear there before the next. This proposal is for an opt-in (possibly opt-out, though I think opt-in is better at this point) feature to skip to the appropriate search path.\r\n\r\nSpecifically, we would create a new cache and serialize/deserialize it as we do for instanceLocalFileStateCache now. If we're looking for Foo, and it's at C:\\myPath\\Foo.dll, the cache would store that Foo is at C:\\myPath\\Foo.dll. We would _not_ follow the proper order of search paths, only falling back to that if Foo is not in the cache or we can't find it at C:\\myPath\\Foo.dll. The latter would also be the only case in which we would evict Foo from the cache.\r\n\r\n### Regression?\r\nNo",
  "state": "OPEN",
  "createdAt": "2021-10-13T17:00:03Z",
  "updatedAt": "2024-01-31T08:20:13Z",
  "closedAt": null,
  "author": {
    "login": "Forgind"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Triage: Having many search paths doesn't look like a common scenario. @rainersigwald how do you feel about this one, worth investigating?",
        "createdAt": "2021-10-25T12:16:02Z",
        "updatedAt": "2021-10-25T12:16:02Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "IMO that circumstance isn't worth spending much time optimizing for, no.",
        "createdAt": "2021-10-25T14:12:50Z",
        "updatedAt": "2021-10-25T14:12:50Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}