{
  "number": 1581,
  "title": "Print time taken in executing individual task",
  "body": "Hello,\r\n\r\nIs it possible to print the time taken in executing individual task in msbuild? I know there is /displaysummary option in msbuild but it prints the aggregate time of all invocation of tasks. What I am looking at is the time taken for executing 1 invocation of task. Below given are the kind of logs that where I want time taken to be printed.\r\n\r\nDone executing task \"CL\". [I need something like **Done executing task \"CL\" in 15 seconds**.]\r\nDone executing task \"MSBuild\".\r\nDone executing task \"AddToManifest\".\r\n\r\nThis will be very helpful to us to investigate slow build issues.\r\n\r\nRavinder",
  "state": "CLOSED",
  "createdAt": "2017-01-18T04:40:51Z",
  "updatedAt": "2024-02-21T17:22:43Z",
  "closedAt": "2021-04-12T13:55:15Z",
  "author": {
    "login": "rathakur-msft"
  },
  "labels": [
    "Area: Debuggability",
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.5"
  },
  "comments": {
    "nodes": [
      {
        "body": "Not built in, but you can create a [custom logger](https://msdn.microsoft.com/en-us/library/ms171471.aspx) to collect that information. You'd have to preserve the timestamps from the `TaskStartedEventArgs` and `TaskFinishedEventArgs` events and subtract them.",
        "createdAt": "2017-01-18T13:16:05Z",
        "updatedAt": "2017-01-18T13:16:05Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rathakur-msft: You can get a list of total time taken by a task for the build with the logger parameter `PerformanceSummary`.  It also displays project and target performance.\r\n\r\n```\r\nMSBuild.exe ConsoleApplication1.csproj /ConsoleLoggerParameters:PerformanceSummary\r\n\r\n...\r\n\r\nTask Performance Summary:\r\n        0 ms  Message                                    3 calls\r\n        0 ms  CallTarget                                 1 calls\r\n        0 ms  FindAppConfigFile                          1 calls\r\n        0 ms  AssignCulture                              1 calls\r\n        0 ms  ConvertToAbsolutePath                      1 calls\r\n        0 ms  Delete                                     2 calls\r\n        0 ms  ResolveCodeAnalysisRuleSet                 1 calls\r\n        0 ms  GetReferenceAssemblyPaths                  1 calls\r\n        0 ms  Copy                                       3 calls\r\n        0 ms  FindUnderPath                              5 calls\r\n        0 ms  ReadLinesFromFile                          1 calls\r\n        0 ms  WriteLinesToFile                           1 calls\r\n        0 ms  AssignTargetPath                           6 calls\r\n        0 ms  GetFrameworkPath                           1 calls\r\n        0 ms  RemoveDuplicates                           2 calls\r\n        0 ms  MakeDir                                    1 calls\r\n       16 ms  ResolveAssemblyReference                   1 calls\r\n      250 ms  Csc                                        1 calls\r\n```\r\n\r\nIf I build an individual project, I can narrow down which task is taking the longest.  Is that what you're looking for?\r\n",
        "createdAt": "2017-01-18T16:13:35Z",
        "updatedAt": "2017-01-18T16:13:35Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl I know about the PerformanceSummary option. However we are trying to optimize our full build and in that case a task like CSC is executed around 200+ time. Since the time above is aggregate, I am unable to find out that out of 100 calls of csc, which one took most time. If I want to find out project on my own, I have to manually compile all 100 projects individually and that is time consuming.\r\n\r\nSince we have multiple tasks that need optimization, compiling individual projects become very time consuming.\r\n\r\nIn any case, I think it will add value to print the time when task completes since many people will be interested in fining out which invocation of task took most time.",
        "createdAt": "2017-01-18T16:31:29Z",
        "updatedAt": "2017-01-18T16:31:29Z",
        "author": {
          "login": "rathakur-msft"
        }
      },
      {
        "body": "Perf triage: Closing an old issue.\r\n@rathakur-msft, MSBuild now emits ETW events to help profile builds. See the attached [PR](https://github.com/dotnet/msbuild/pull/5004).",
        "createdAt": "2021-04-12T13:55:15Z",
        "updatedAt": "2021-04-12T13:55:15Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Also this information is available from a binlog, see https://msbuildlog.com",
        "createdAt": "2021-04-12T14:59:17Z",
        "updatedAt": "2021-04-12T14:59:17Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}