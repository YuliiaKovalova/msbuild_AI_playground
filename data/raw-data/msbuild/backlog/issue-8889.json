{
  "number": 8889,
  "title": "[Bug]: Condition attribute is ignored in legacy csproj files when referenced from an SDK csproj file ",
  "body": "### Issue Description\n\nWhen an SDK style csproj file references an legacy csproj file, that references other projects conditionally based on the build target, the condition in the legacy project file is ignored.\r\n\r\nWhen the SDK style project file is backported to an legacy csproj file format, the build works fine.\n\n### Steps to Reproduce\n\n**Sdk.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n<!-- ... -->\r\n<ItemGroup>\r\n    <ProjectReference Include=\"..\\Legacy\\Legacy.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Legacy.csproj**\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"4.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n<!-- ... -->\r\n<ItemGroup Condition=\" '$(Configuration)|$(Platform)' == 'False|False' \">\r\n    <ProjectReference Include=\"..\\Legacy2\\Legacy2.csproj\"  Condition=\" '$(Configuration)|$(Platform)' == 'False|False' \" />\r\n  </ItemGroup>\r\n</Project>\r\n```\n\n### Expected Behavior\n\nThe `Condition` attribute should be honored.\n\n### Actual Behavior\n\nThe condition is ignored and the build breaks because it can't build the `Legacy2` project.\n\n### Analysis\n\nOur current workaround is to use legacy .csproj file format only.\n\n### Versions & Configurations\n\nMSBuild version 17.6.3+07e294721 for .NET Framework\r\n17.6.3.22601\r\n\r\nVisual Studio Version 17.6.3",
  "state": "CLOSED",
  "createdAt": "2023-06-15T14:41:01Z",
  "updatedAt": "2024-02-21T14:04:40Z",
  "closedAt": "2023-07-06T02:24:49Z",
  "author": {
    "login": "MovGP0"
  },
  "labels": [
    "Partner:NuGet",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: @JaynieBai, could you please reproduce it and collect binlog (a binlog with expected behavior would be helpful as well)?",
        "createdAt": "2023-06-20T14:01:03Z",
        "updatedAt": "2023-06-20T14:03:16Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "[ConsoleApp5.zip](https://github.com/dotnet/msbuild/files/11947215/ConsoleApp5.zip)\r\n```mermaid\r\nflowchart LR\r\n    ClassLibrary1[ ClassLibrary1] --> ClassLibraryLegacy2\r\n    ClassLibraryLegacy2[ClassLibraryLegacy2] --> ClassLibraryLegacy3[ClassLibraryLegacy3]\r\n```\r\nHere the ClassLibraryLegacy3 projectreference condition in project ClassLibraryLegacy2 is false all the time. So, when using ClassLibraryLegacy3 in ClassLibrary1 should report error. But when build with visual studio, it references the ClassLibraryLegacy3 successfully.\r\n\r\n**Repro steps:** \r\n1.  Download the solution.\r\n2.  Open the solution with Visual studio.\r\n3.  Right click the solution and restore NuGet packages.\r\n4.   Find the project.assets.json file in the ClassLibrary1 including the ClassLibraryLegacy3.dll, this is not expected.\r\n5.   Delete the project.assets.json file in the ClassLibrary1 and run dotnet restore or NuGet restore with command.\r\n6.    Find the project.assets.json file in the ClassLibrary1 not including the ClassLibraryLegacy3.dll, this is expected.\r\n\r\n I think this should be a NuGet issue. @nkolev92 Could you have a look if this is a NuGet issue in Visual studio?",
        "createdAt": "2023-07-04T09:17:21Z",
        "updatedAt": "2023-07-05T02:02:52Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "@JaynieBai \r\n\r\nVisual Studio in general has a limitation that item conditions are not respected. \r\n\r\nSee details: https://developercommunity.visualstudio.com/t/visual-studio-manage-nuget-packages-ui-does-not-re/721485",
        "createdAt": "2023-07-05T18:09:51Z",
        "updatedAt": "2023-07-05T18:10:00Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "Close this since this is an intentional design in NuGet restore in Visual Studio.",
        "createdAt": "2023-07-06T02:24:49Z",
        "updatedAt": "2023-07-06T02:24:49Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "The NuGet restore is working fine. It's the build that makes problems.",
        "createdAt": "2023-07-10T06:09:20Z",
        "updatedAt": "2023-07-10T06:09:20Z",
        "author": {
          "login": "MovGP0"
        }
      },
      {
        "body": "> It's the build that makes problems.\r\n\r\nThe build has problems since condition is not  respected in VS when NuGet Restore https://github.com/NuGet/Home/issues/12729#issue-1790050248\r\n",
        "createdAt": "2023-07-12T06:45:41Z",
        "updatedAt": "2023-07-12T06:45:54Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  }
}