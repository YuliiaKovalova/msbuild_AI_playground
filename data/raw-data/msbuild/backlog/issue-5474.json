{
  "number": 5474,
  "title": "[Windows ARM64] BinaryFormatter decode warnings when building dotnet projects",
  "body": "I'm seeing this issue pretty consistently using the arm64 build of dotnet sdk, across a variety of projects. It tends to correlate with other problems like builds hanging randomly. \r\n\r\n### Steps to reproduce\r\n\r\nUsing the latest .NET 5.0 preview SDK:\r\n\r\n```powershell\r\n> .\\dotnet-install.ps1 -Architecture arm64 -Version 5.0.100-preview.6.20318.15\r\n> dotnet new xunit\r\n> dotnet build # no warnings\r\n> dotnet build # produces a warning\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould build without warnings..\r\n\r\n### Actual behavior\r\n\r\nProduces the warning:\r\n```\r\nC:\\Users\\eitsarpa\\AppData\\Local\\Microsoft\\dotnet\\sdk\\5.0.100-preview.6.20318.15\\Microsoft.Common.CurrentVersion.targets(2084,5): warning MSB3088: Could not read state file \"obj\\Debug\\net5.0\\msbuild-repro.csprojAssemblyReference.cache\". Invalid BinaryFormatter stream. [C:\\Users\\eitsarpa\\devel\\tests\\msbuild-repro\\msbuild-repro.csproj]\r\n```\r\n\r\n### Environment data\r\n\r\n`dotnet msbuild /version` output: 16.7.0.31007\r\nOS info: Windows 10 build 18363 on Surface Pro X\r\n",
  "state": "CLOSED",
  "createdAt": "2020-07-01T08:06:20Z",
  "updatedAt": "2024-02-21T17:03:13Z",
  "closedAt": "2020-07-21T14:02:29Z",
  "author": {
    "login": "eiriktsarpalis"
  },
  "labels": [
    "Area: Task: Resolve Assembly References (RAR)",
    "Architecture: ARM64",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "ladipro"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Possibly related: we may change the format of this file on disk away from BinaryFormatter for #5247. But if there are bigger problems with `BinaryFormatter` on ARM64, that could impact our IPC as well as this particular warning.",
        "createdAt": "2020-07-01T15:56:22Z",
        "updatedAt": "2020-07-01T15:56:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Closing in favor of the runtime bug causing this: https://github.com/dotnet/runtime/issues/39701\r\n\r\nWe are failing to read the RAR on-disk data because it contains a `Hashtable` which internally uses `ConditionalWeakTable<>` during its deserialization and `ConditionalWeakTable<>` in turn uses dependent handles which have an implementation issue on this platform.",
        "createdAt": "2020-07-21T14:02:29Z",
        "updatedAt": "2020-07-21T14:02:29Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}