{
  "number": 2183,
  "title": "Projects that override GetTargetPath have outputs ignored in referencing projects",
  "body": "MSBuild version 15.3.255.36604 (Bundled with the VS 2017 15.3.0 Preview 2.0 [26605.1.d15rel]).\r\nFails to build the following project: https://github.com/NuGet/NuGet.Jobs\r\nThe same project builds fine with the MSBuild 15.1.1012.6693 (bundled with VS2017 15.2 (26430.12)).\r\n\r\nSteps:\r\n1. `mkdir NuGet.Jobs`\r\n2. `cd NuGet.Jobs`\r\n3. `git clone https://github.com/NuGet/NuGet.Jobs.git .`\r\n4. `git checkout dev`\r\n5. Restore nuget packages (pick one of two):\r\n    * `build.cmd` (tries to restore nuget packages, then build)\r\n    * `nuget restore NuGet.Jobs.sln` (needs `nuget.exe` present)\r\n6. `\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\bin\\msbuild.exe\" .\\NuGet.Jobs.sln` (msbuild paths may vary)\r\n\r\nThe first error produced:\r\n```\r\nTests.Logger.Job.cs(9,7): error CS0246: The type or namespace name 'NuGet' could not be found (are you missing a using directive or an assembly reference?) [E:\\dev\\Nuget.Jobs\\src\\Tests.Logger\\Tests.AzureJobTraceListener.csproj]\r\n```\r\n\r\n`src\\Tests.Logger\\Tests.AzureJobTraceListener.csproj` references the `src\\NuGet.Jobs.Common\\NuGet.Jobs.Common.csproj` which declares the `NuGet` namespace the compiler complains about, so there shouldn't be any error.\r\n\r\nFurther examination of the command line it uses to compile the `Tests.AzureJobTraceListener.csproj` indicates that `NuGet.Jobs.Common.dll` is not passed as a `/reference` to the `csc.exe`. I'm not sure how to dig deeper from this point.\r\n\r\n[msbuild.log.zip](https://github.com/Microsoft/msbuild/files/1056556/msbuild.log.zip) from the build produced with the `/flp:v=diag` command line argument.\r\n",
  "state": "CLOSED",
  "createdAt": "2017-06-06T23:44:00Z",
  "updatedAt": "2024-02-21T17:18:41Z",
  "closedAt": "2017-06-09T20:46:34Z",
  "author": {
    "login": "agr"
  },
  "labels": [
    "bug",
    "regression",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 15.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "Thanks for the report!\r\n\r\nThis appears to be happening because `Microsoft.Bcl.Build.targets` overrides the `GetTargetPath` target, which computes the `TargetPathWithTargetPlatformMoniker` item. #2039 changed the `Build` target to return that item, rather than the metadata-free `$(TargetPath)`. This causes projects that use the targets from `Microsoft.Bcl.Build` to have no value returned from the `Build` target, so projects that reference them don't actually reference the produced assembly.\r\n\r\n## Workaround\r\n\r\nAdd this to the _bottom_ of any project that refers to `Microsoft.Bcl.Build`, just before `</Project>`:\r\n```csproj\r\n   <!-- Work around https://github.com/Microsoft/msbuild/issues/2183 remove after VS 15.3 is released -->\r\n   <Target\r\n        Name=\"Build\"\r\n        Condition=\" '$(_InvalidConfigurationWarning)' != 'true' \"\r\n        DependsOnTargets=\"$(BuildDependsOn)\"\r\n        Returns=\"$(TargetPath)\" />\r\n```",
        "createdAt": "2017-06-07T14:50:05Z",
        "updatedAt": "2017-06-07T14:50:05Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "FYI @jcouv -- another regression from ref assemblies \ud83d\ude1e\r\n\r\nFYI @terrajobst -- 15.3 preview 2 will break consumers of https://www.nuget.org/packages/Microsoft.Bcl.Build but a workaround is available.",
        "createdAt": "2017-06-07T14:51:38Z",
        "updatedAt": "2017-06-07T14:51:38Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}