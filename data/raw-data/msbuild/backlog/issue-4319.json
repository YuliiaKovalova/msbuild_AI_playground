{
  "number": 4319,
  "title": "ToolsVersion should be ignored by MSBuild task",
  "body": "MSBuild ignores ToolsVersion in most places but the MSBuild task is still trying to honor it\r\n\r\n### Steps to reproduce\r\n\r\nIf you specify an invalid ToolsVersion to an MSBuild task invocation, the build will fail:\r\n\r\nProject file\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <MyProjects Include=\"$(MSBuildProjectFullPath)\"\r\n                ToolsVersion=\"BadToolsVersion\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"Build\">\r\n    <MSBuild Projects=\"@(MyProjects)\" />\r\n  </Target>\r\n</Project>\r\n```\r\nCommand line\r\n```\r\nmsbuild /bl\r\n```\r\n### Expected  behavior\r\nToolsVersion to not be respected and ignored like ToolsVersion is ignored everywhere else.\r\n\r\n### Actual behavior\r\nBuild error:\r\n```\r\nerror MSB4132: The tools version \"BadToolsVersion\" is unrecognized. Available tools versions are \"Current\", \"2.0\", \"3.5\", \"4.0\".\r\n```\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n```\r\nMicrosoft (R) Build Engine version 16.1.59-preview+gd8f1537cf1 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.1.59.61912\r\n```",
  "state": "OPEN",
  "createdAt": "2019-04-17T20:47:53Z",
  "updatedAt": "2024-02-21T16:31:28Z",
  "closedAt": null,
  "author": {
    "login": "jeffkl"
  },
  "labels": [
    "Breaking Change",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Consider for Next Major Version"
  },
  "comments": {
    "nodes": [
      {
        "body": "So... Looking for workarounds, resolutions. Besides potentially need to install and/or re-install SDKs, runtimes, etc. Haven't gotten quite that far in my troubleshooting. Short of that, crude answer is for us to visit each of our `.csproj` project files and add the `ToolsVersion` attribute in the appropriate version? I assume that's `15.0` for VS2017? Is there a more elegant way to do that in swath? i.e. through Directory.Build.props, for instance, by convention, as contrasted with by specification?",
        "createdAt": "2019-10-12T22:20:04Z",
        "updatedAt": "2019-10-12T22:20:04Z",
        "author": {
          "login": "mwpowellhtx"
        }
      },
      {
        "body": "@mwpowellhtx what are the errors you are getting? This shouldn't really matter to runtimes and things like that.",
        "createdAt": "2019-10-16T23:06:03Z",
        "updatedAt": "2019-10-16T23:06:03Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "@livarcocc We are currently blocked trying to load projects in our test environment for Roslyn build. [Started here](https://github.com/dotnet/roslyn/issues/39471), but not positive this is a [build issue](https://github.com/microsoft/msbuild/issues/4848) as much as anything. So far in our investigation we have identified a ton of folks with similar issues, but no clear cut solution.",
        "createdAt": "2019-10-25T01:20:03Z",
        "updatedAt": "2019-10-25T01:20:03Z",
        "author": {
          "login": "mwpowellhtx"
        }
      }
    ]
  }
}