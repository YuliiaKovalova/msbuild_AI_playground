{
  "number": 7368,
  "title": "MSB3030 when setting GenerateResource to false for all resx files",
  "body": "### Issue Description\r\n```\r\n   <ItemGroup>\r\n     <EmbeddedResource Update=\"@(EmbeddedResource)\">\r\n        <GenerateResource>false</GenerateResource>   \r\n       </EmbeddedResource>\r\n   </ItemGroup>\r\n```\r\nfor a project that includes Culture specific resx files fails to build with a MSB3030.\r\n\r\n### Steps to Reproduce\r\nSee above\r\n\r\n### Expected Behavior\r\nBuilds with no satellite dlls and no errors\r\n\r\n### Actual Behavior\r\nAttempts to copy non-existent satellite dlls and errors\r\n\r\n### Analysis\r\n\r\n\r\nKnown workaround:\r\n```\r\n   <Target Name=\"PreventMSB3030\" DependsOnTargets=\"ComputeIntermediateSatelliteAssemblies\" BeforeTargets=\"GenerateSatelliteAssemblies\" >\r\n      <ItemGroup>\r\n         <IntermediateSatelliteAssembliesWithTargetPath Remove=\"@(IntermediateSatelliteAssembliesWithTargetPath)\"></IntermediateSatelliteAssembliesWithTargetPath>\r\n      </ItemGroup>   \r\n   </Target>\r\n```\r\n",
  "state": "OPEN",
  "createdAt": "2022-02-05T06:15:06Z",
  "updatedAt": "2024-01-31T08:18:39Z",
  "closedAt": null,
  "author": {
    "login": "davhdavh"
  },
  "labels": [
    "needs-design",
    "Area: Task: GenerateResource",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "It is reasonable to expect our infrastructure to avoid the resource flow if `GenerateResource` is false.\r\n\r\nIt looks like we can condition this include based on `GenerateResource` being true. \r\n```\r\n  <Target\r\n      Name=\"ComputeIntermediateSatelliteAssemblies\"\r\n      Condition=\"@(EmbeddedResource->'%(WithCulture)') != ''\"\r\n      DependsOnTargets=\"$(ComputeIntermediateSatelliteAssembliesDependsOn)\">\r\n\r\n    <ItemGroup>\r\n      <IntermediateSatelliteAssembliesWithTargetPath Include=\"$(IntermediateOutputPath)%(EmbeddedResource.Culture)\\$(TargetName).resources.dll\"\r\n                                                     Condition=\"'%(EmbeddedResource.Culture)' != ''\">\r\n        <Culture>%(EmbeddedResource.Culture)</Culture>\r\n        <TargetPath>%(EmbeddedResource.Culture)\\$(TargetName).resources.dll</TargetPath>\r\n      </IntermediateSatelliteAssembliesWithTargetPath>\r\n    </ItemGroup>\r\n\r\n  </Target>\r\n```\r\n\r\nI'm not sure what else is honoring this metadata such that you're seeing MSB3030 now.\r\n\r\nCan you provide the logs from your repro?",
        "createdAt": "2022-02-10T17:48:40Z",
        "updatedAt": "2022-02-10T17:48:40Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Hi Ben\r\n\r\nNot quite sure how to interpret what you write...\r\n\r\nTried adding that Target to my csproj, it made no difference, build still fails.\r\n```\r\n1>Target \"CreateManifestResourceNames\" skipped. Previously built successfully.\r\n1>Target \"ComputeIntermediateSatelliteAssemblies\" in file \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\amd64\\Microsoft.Common.CurrentVersion.targets\":\r\n1>  Added Item(s): \r\n1>      IntermediateSatelliteAssembliesWithTargetPath=\r\n1>          obj\\Debug\\net6.0\\da\\ErrorWhenNotBuildingResxFiles.resources.dll\r\n1>                  Culture=da\r\n1>                  TargetPath=da\\ErrorWhenNotBuildingResxFiles.resources.dll\r\n1>  Added Item(s): \r\n1>      IntermediateSatelliteAssembliesWithTargetPath=\r\n1>          obj\\Debug\\net6.0\\vi\\ErrorWhenNotBuildingResxFiles.resources.dll\r\n1>                  Culture=vi\r\n1>                  TargetPath=vi\\ErrorWhenNotBuildingResxFiles.resources.dll\r\n1>Done building target \"ComputeIntermediateSatelliteAssemblies\" in project \"ErrorWhenNotBuildingResxFiles.csproj\".\r\n```\r\n[buildlog.txt](https://github.com/dotnet/msbuild/files/8045878/buildlog.txt)\r\n\r\nIt is trivial to trigger, newly created project added 3 resx files, set GenerateResource to false for all in csproj.\r\n[ErrorWhenNotBuildingResxFiles.zip](https://github.com/dotnet/msbuild/files/8045868/ErrorWhenNotBuildingResxFiles.zip)\r\n",
        "createdAt": "2022-02-11T04:01:21Z",
        "updatedAt": "2022-02-11T04:01:21Z",
        "author": {
          "login": "davhdavh"
        }
      },
      {
        "body": "It builds successfully, if an explicit check for GenerateResource is added:\r\n```\r\n\r\n   <Import Project=\"Sdk.targets\" Sdk=\"Microsoft.NET.Sdk\" />\r\n  <Target\r\n      Name=\"ComputeIntermediateSatelliteAssemblies\"\r\n      Condition=\"@(EmbeddedResource->'%(WithCulture)') != ''\"\r\n      DependsOnTargets=\"$(ComputeIntermediateSatelliteAssembliesDependsOn)\">\r\n\r\n\r\n    <ItemGroup>\r\n      <IntermediateSatelliteAssembliesWithTargetPath Include=\"$(IntermediateOutputPath)%(EmbeddedResource.Culture)\\$(TargetName).resources.dll\"\r\n                                                     Condition=\"'%(EmbeddedResource.Culture)' != '' AND '%(EmbeddedResource.GenerateResource)' != 'false'\">\r\n        <Culture>%(EmbeddedResource.Culture)</Culture>\r\n        <TargetPath>%(EmbeddedResource.Culture)\\$(TargetName).resources.dll</TargetPath>\r\n      </IntermediateSatelliteAssembliesWithTargetPath>\r\n    </ItemGroup>\r\n\r\n  </Target>\r\n```",
        "createdAt": "2022-02-11T04:17:30Z",
        "updatedAt": "2022-02-11T04:17:30Z",
        "author": {
          "login": "davhdavh"
        }
      },
      {
        "body": "Apologies, most of the post was leaving context for other devs who happen to look at this. \r\n\r\n`AND '%(EmbeddedResource.GenerateResource)' != 'false'` This was what I figured would work. Unfortunately, we'll have to investigate what other impacts this change could have.\r\n\r\nDid you mean to make this PR (https://github.com/davhdavh/msbuild/pull/1) into our repo? You might have to try that again as the PR is pointing at your fork of msbuild. We'll be happy to review once it's there.\r\n\r\nAnother question though, what's your scenario here? You have many resources but don't want them generated? Is this to enable a faster build?",
        "createdAt": "2022-02-11T17:50:11Z",
        "updatedAt": "2022-02-11T17:50:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I am using source generator to put the strings directly in code. https://github.com/VocaDB/ResXFileCodeGenerator",
        "createdAt": "2022-02-11T19:06:47Z",
        "updatedAt": "2022-02-11T19:06:47Z",
        "author": {
          "login": "davhdavh"
        }
      },
      {
        "body": "After thinking on this a bit: This is essentially a request to allow the metadata `GenerateResource` on a `EmbeddedResource` item to prevent/allow the item to flow down the chain (given a targetpath/culture and populated into the right item; `IntermediateSatelliteAssembliesWithTargetPath`.\r\n\r\nThe fix looks straightforward, but the implications of what this can do on a build need to be thought through, so marking as needs-design.\r\n\r\nThe current workaround is to manually remove the items during the build process, which isn't ideal but works for now.\r\n\r\nIf we consider working on this, I think the fix is what I suggested here: https://github.com/dotnet/msbuild/issues/7368#issuecomment-1035230190\r\n",
        "createdAt": "2022-03-10T18:12:22Z",
        "updatedAt": "2022-03-10T18:12:22Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}