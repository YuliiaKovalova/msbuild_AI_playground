{
  "number": 4504,
  "title": "Custom task that invokes nodejs does not work with FileTracker",
  "body": "### Steps to reproduce\r\n\r\nI created a custom task that runs nodejs to perform some actions. This task works as it should.\r\nI want to use file tracker to track file access on this task, but when I enable that using `FileTracker.StartTrackingContext`, suddenly nodejs cannot be started anymore.\r\nI get an error that states:\r\n\r\n```\r\nHelloWorld.proj(9,5): error MSB6003: The specified task executable \"node.exe\" could not be run. The operation identifier is not valid\r\n```\r\n[HelloWorld.zip](https://github.com/microsoft/msbuild/files/3385335/HelloWorld.zip)\r\n\r\n\r\nCommand line\r\n```\r\nmsbuild HelloWorld.proj\r\n```\r\n### Expected  behavior\r\nIt runs the nodejs process\r\n\r\n### Actual behavior\r\nIt gives an error\r\n\r\n### Environment data\r\n`msbuild /version` output: 15.9.20.62856\r\nOS info: Windows 10 1607\r\n",
  "state": "CLOSED",
  "createdAt": "2019-07-12T07:02:23Z",
  "updatedAt": "2024-02-21T17:07:53Z",
  "closedAt": "2019-08-23T11:36:34Z",
  "author": {
    "login": "rhpijnacker"
  },
  "labels": [
    "Area: FileTracker",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "After some more digging around, it looks like the problem is caused by Tracker.exe (32 bit) starting nodejs (64 bit).\r\nAdding `/d FileTracker64.dll` does not seem to help in any way.\r\n\r\nRunning the same command in a 64bit VisualStudio cmd prompt makes it work (as a workaround).",
        "createdAt": "2019-08-22T14:47:01Z",
        "updatedAt": "2019-08-22T14:47:01Z",
        "author": {
          "login": "rhpijnacker"
        }
      },
      {
        "body": "Your project references `Microsoft.Build.Utilities.v4.0`, which predates support for launching processes across architectures (which was introduced with microsoft/msbuild#650 in MSBuild 14.3).\r\n\r\nI was able to make your project work with this change, updating to use the copy of MSBuild installed with my VS:\r\n\r\n```diff\r\ndiff --git a/CustomTasks/CustomTasks.csproj b/CustomTasks/CustomTasks.csproj\r\nindex 5fcd810..40a27fc 100644\r\n--- a/CustomTasks/CustomTasks.csproj\r\n+++ b/CustomTasks/CustomTasks.csproj\r\n@@ -9,7 +9,7 @@\r\n     <AppDesignerFolder>Properties</AppDesignerFolder>\r\n     <RootNamespace>CustomTasks</RootNamespace>\r\n     <AssemblyName>CustomTasks</AssemblyName>\r\n-    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>\r\n+    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\r\n     <FileAlignment>512</FileAlignment>\r\n     <Deterministic>true</Deterministic>\r\n   </PropertyGroup>\r\n@@ -32,7 +32,7 @@\r\n   </PropertyGroup>\r\n   <ItemGroup>\r\n     <Reference Include=\"Microsoft.Build.Framework\" />\r\n-    <Reference Include=\"Microsoft.Build.Utilities.v4.0\" />\r\n+    <Reference Include=\"Microsoft.Build.Utilities.Core\" />\r\n     <Reference Include=\"System\" />\r\n     <Reference Include=\"System.Core\" />\r\n     <Reference Include=\"System.Xml.Linq\" />\r\n```\r\n\r\nFor production use, I'd recommend referencing MSBuild with [our NuGet packages](https://www.nuget.org/packages/Microsoft.Build.Utilities.Core/16.0.461) instead.",
        "createdAt": "2019-08-22T15:29:03Z",
        "updatedAt": "2019-08-22T15:29:03Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "It turns out I was using an older version of Tracker.exe. Using the one shipped with VS2017 made it work.",
        "createdAt": "2019-08-23T11:36:34Z",
        "updatedAt": "2019-08-23T11:36:34Z",
        "author": {
          "login": "rhpijnacker"
        }
      }
    ]
  }
}