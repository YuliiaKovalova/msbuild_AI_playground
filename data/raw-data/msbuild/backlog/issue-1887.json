{
  "number": 1887,
  "title": "MSBuild Core support for Tasks with native dependencies",
  "body": "I'm trying to fix https://github.com/AArnott/Nerdbank.GitVersioning/issues/112 where my MSBuild Core Task needs to load the libgit2 native library and realizing that while .NET Core exposes an event handler to allow aided assembly resolution, it has no equivalent for native modules. And in particular MSBuild does not offer any support for this to Tasks either, so I'm sunk -- unless I perhaps create my own AssemblyLoadContext and use that, but that requires that my MSBuild Task invoke yet another dedicated assembly.",
  "state": "CLOSED",
  "createdAt": "2017-03-19T01:30:41Z",
  "updatedAt": "2024-02-21T17:20:32Z",
  "closedAt": "2022-04-19T22:27:21Z",
  "author": {
    "login": "AArnott"
  },
  "labels": [
    ".NET Core",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": ".NET 7.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "@AArnott can you add some more detail to your ask? Not sure how `AssemblyLoadContext` would help with native assemblies? And is this something you're looking at getting from MSBuild or CoreCLR?",
        "createdAt": "2017-03-21T22:21:15Z",
        "updatedAt": "2017-03-21T22:21:15Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "`AssemblyLoadContext` lets me assist the CoreCLR with loading native modules as well. I worked around MSBuild Core's lack of offering this to MSBuild Tasks by [hosting my own](https://github.com/AArnott/Nerdbank.GitVersioning/pull/117/files?diff=unified#diff-c518cf4d2fd4bc942aa8b03d9b8c52ff). And I'm thinking of wrapping this up in a reusable NuGet package as a crutch till #1756 is delivered. \r\n\r\nNo, I'd really rather CoreCLR never had offered an event on AssemblyLoadContext for loading assemblies so I wouldn't ask that they add another event for native module loading. But MSBuild should have a way to allow tasks to do this. And if this issue is resolved by #1754 such that all Tasks have their own load context and have access to influence that context, then we're good. :)",
        "createdAt": "2017-03-21T22:32:27Z",
        "updatedAt": "2017-03-21T22:32:27Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "The .NET Core design for this is `AssemblyDependencyResolver`, which we plan to adopt for tasks in the .NET 5 timeframe (as part of #5037).",
        "createdAt": "2020-02-24T21:56:33Z",
        "updatedAt": "2020-02-24T21:56:33Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}