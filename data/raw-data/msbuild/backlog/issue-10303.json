{
  "number": 10303,
  "title": "[Feature Request]: Improvements to the Copy task warnings in Terminal Logger",
  "body": "### Summary\n\nAfter https://github.com/dotnet/msbuild/pull/10296 we can now see the warnings from the Copy Task during the build of a project, not just after all of the retries have failed. However, the current display is visually noisy. This issue gathers a few mockups that @surayya-MS and I discussed and some of the pros and cons of each.\n\n### Background and Motivation\n\nUsers like the visual layout of the 'grouped' diagnostics of a project during a build - it reduces noise and makes the important data more easily understood - code, severity, and message. The current layout emits the Copy warnings as 'immediate messages' in Terminal Logger lingo - fully-qualified message strings that are emitted to the 'static' area of the TL display.\r\n\r\n![TerminalLoggerCopyRetry_NewBehavior](https://github.com/dotnet/msbuild/assets/114938397/e8154377-d692-428c-979b-ee8e776b8ff7)\r\n\r\n\n\n### Proposed Feature\n\nHere are a few mockups of potential treatments of the Copy task warnings. Note that none of these assume the availability of the progress-reporting mechanism we have been designing.\r\n\r\n## Grouped Immediate Messages\r\n\r\nThe first proposal is for a concept of a 'grouped immediate message'. The idea is that when logging some immediate messages, we may expect more messages for the same project. In such a case we could emit the immediate message as _two_ immediate messages initially - one with the path to the project, the next with the project-less trimmed diagnostic - and then subsequent immediate messages _in the same project scope_ could trim the project from the diagnostic and emit the 'slim' form of the diagnostic.\r\n\r\nFor `Copy`, that might look something like this:\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/573979/39640950-c8f6-4b6a-9de0-b09627e6dd00)\r\n\r\nHowever, when another project completes during the Copy retry loop, or another Immediate message is written, we would need to 're-group' the immediate messages from the copy retries after those other groups were written:\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/573979/3dd6939b-ce8e-4a66-b5eb-ea0c27c7c85e)\r\n\r\n\n\n### Alternative Designs\n\nOther designs follow a similar nesting structure:\r\n\r\n## Grouped Immediate messages with counter\r\n\r\nIn this example the Copy message itself is mutated into just the 'core' message and a counter, incrementing each iteration. This would possibly require some structured data coming out of the copy warning to allow for reformatting in this way\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/573979/78f844de-bf0b-4e21-977c-458cce269ff9)\r\n\r\n## Grouped Immediate message with overwriting\r\n\r\nThis example is similar to the last with one key difference - only a single Copy warning line would be written and the counter value would be incremented each time. This would require potentially a new 'zone' of the display to write these kinds of messages to. This is the closest to the progress/status reporting we've been talking about previously.\r\n\r\n",
  "state": "OPEN",
  "createdAt": "2024-06-27T15:13:26Z",
  "updatedAt": "2024-11-06T15:43:45Z",
  "closedAt": null,
  "author": {
    "login": "baronfel"
  },
  "labels": [
    "Feature Request",
    "triaged",
    "Area: Terminal Logger"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "There's another easy option: change `RenderImmediateMessage` to always have the nicer formatting. So something like\r\n\r\n```\r\nC:\\Users\\blah\\blah\\blah\\CopyTaskFail.csproj(14,3):\r\n  Warning MSB3026: Could not copy attempt 1 retrying.\r\nC:\\Users\\blah\\blah\\blah\\CopyTaskFail.csproj(14,3):\r\n  Warning MSB3026: Could not copy attempt 2 retrying.\r\n```\r\n\r\nThis is more repetitive than ideal of course.",
        "createdAt": "2024-06-27T15:58:21Z",
        "updatedAt": "2024-06-27T15:58:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@baronfel we are not considering this issue for .net 9. Is it fine for you?",
        "createdAt": "2024-07-02T14:23:29Z",
        "updatedAt": "2024-07-02T14:23:29Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "Yeah, happy to push to a subsequent release.",
        "createdAt": "2024-07-02T14:28:42Z",
        "updatedAt": "2024-07-02T14:28:42Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "The PR that stop gapped the CopyTask output in TerminalLogger: https://github.com/dotnet/msbuild/pull/10296\nThis item is proposing improved UX for that",
        "createdAt": "2024-11-06T15:43:44Z",
        "updatedAt": "2024-11-06T15:43:44Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}