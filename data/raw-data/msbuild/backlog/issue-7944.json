{
  "number": 7944,
  "title": "MSBuild task for creating Tar files",
  "body": "With .Net 7 support for [tar apis](https://devblogs.microsoft.com/dotnet/announcing-dotnet-7-preview-4/#added-new-tar-apis), is it feasible to create an equivalent of ([Un](https://docs.microsoft.com/en-us/visualstudio/msbuild/unzip-task?view=vs-2022))[ZipDirectory](https://docs.microsoft.com/en-us/visualstudio/msbuild/zipdirectory-task?view=vs-2022) tasks for handling `.tar` files in the upcoming MSBuild release?",
  "state": "OPEN",
  "createdAt": "2022-09-05T17:41:13Z",
  "updatedAt": "2025-01-25T20:16:10Z",
  "closedAt": null,
  "author": {
    "login": "stan-sz"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Tasks",
    "Partner request",
    "triaged",
    "gathering-feedback"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Cc @carlossanlop fyi",
        "createdAt": "2022-09-05T17:53:33Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Would such a task be able to work when MSBuild is run on .NET Framework?  System.Formats.Tar doesn't appear to target anything compatible with that.\n\n<https://github.com/dotnet/runtime/blob/eecb02807867cad56cd05badddef65e432248b75/src/libraries/System.Formats.Tar/src/System.Formats.Tar.csproj#L3>",
        "createdAt": "2022-09-05T21:29:29Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "No it would only work on .NET 7 and later. I believe that would mean .NET SDK 7.0.something and later, targeting any version.",
        "createdAt": "2022-09-05T21:47:17Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "We don't yet have any inbox tasks that are .NET (core) only, which might be enough to delay this. But I think it sounds like a reasonable idea.",
        "createdAt": "2022-09-06T14:16:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "If a task that requires .NET is added and a user tries to run it on .NET Framework, I hope it will log an error saying that the task doesn't support .NET Framework, rather than MSB4036.\r\n\r\n<https://github.com/dotnet/msbuild/blob/9c46407735ef0afede0c481069acc2ea8704c510/src/Build/Resources/xlf/Strings.xlf#L573-L576>",
        "createdAt": "2022-09-06T14:35:12Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo Yes, if the `UsingTask` is authored correctly (that is, specifies that the task is .NET-only).",
        "createdAt": "2022-09-06T14:57:17Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I see, you added support for `Runtime=\"NET\"` in <https://github.com/dotnet/msbuild/pull/6994>. It doesn't seem to be documented yet, so I filed <https://github.com/MicrosoftDocs/visualstudio-docs/issues/8436>.",
        "createdAt": "2022-09-06T15:13:17Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "This is a great idea, and we should do it.\r\n\r\n_However_, this task would require a .NET 7 Runtime, which brings up an interesting conundrum. That would require MSBuild to update its Target Framework to net7.0, but for support reasons we _really really_ try to keep components that ship in the .NET SDK to Long-Term-Support Target Frameworks. We're having a discussion about the mechanics of this later this week, but in general because of SDK and Visual Studio support cycles and overlaps (or lack thereof) between the two, we try to limit the amount of STS (short-term support)-only features we use in the product to enable us to fallback to run on supported runtimes when the STS stables go out of support.\r\n\r\nThat would mean that this Task would either need to be conditioned somehow, or wait until we start targeting net8.0 for MSBuild (which would be something like the 17.8 MSBuild/VS version numbers if memory serves).",
        "createdAt": "2022-09-07T20:36:33Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "In that case, blocked on https://github.com/dotnet/msbuild/pull/7790 and should be conditioned. We can add this to the next spring planning and discuss it then. Conditioning out the task should be easy enough.",
        "createdAt": "2022-09-15T17:39:05Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos can this work be scheduled for a minor release still in 7.0 timeframe (before .NET 8.0)?",
        "createdAt": "2022-11-18T11:17:18Z",
        "author": {
          "login": "stan-sz"
        }
      },
      {
        "body": "@stan-sz MSBuild releases on the .NET SDK and Visual Studio cadence, so can add features ~quarterly.",
        "createdAt": "2022-11-18T15:46:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "A kind reminder about this feature request, @benvillalobos and @rainersigwald. Thanks!",
        "createdAt": "2023-11-21T14:20:02Z",
        "author": {
          "login": "stan-sz"
        }
      },
      {
        "body": "@stan-sz Are you ok with this only working in `dotnet build`, and not working in Visual Studio/MSBuild.exe?",
        "createdAt": "2023-11-27T17:06:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I would also love to see this. I'm currently doing [this](https://github.com/vezel-dev/zig-toolsets/blob/7d1f1be94a3d34102d92d600138795f6ec7ff9c9/src/Directory.Build.targets#L38-L44), which is... not great, for multiple reasons. (It only working in `dotnet build` would be fine in my case, since these projects are never evaluated/built from anything else, for whatever that's worth.)",
        "createdAt": "2023-12-12T02:38:36Z",
        "author": {
          "login": "alexrp"
        }
      },
      {
        "body": "> @stan-sz Are you ok with this only working in `dotnet build`, and not working in Visual Studio/MSBuild.exe?\r\n\r\nYes",
        "createdAt": "2023-12-18T08:52:58Z",
        "author": {
          "login": "stan-sz"
        }
      },
      {
        "body": "@rainersigwald - a kind reminder so this task makes it to the release. Thanks!",
        "createdAt": "2024-01-23T07:16:28Z",
        "author": {
          "login": "stan-sz"
        }
      },
      {
        "body": "This feature would be very helpful for automating use of the [WASI SDK](https://github.com/WebAssembly/wasi-sdk), releases of which are archived using the Tarball format.\n",
        "createdAt": "2025-01-25T12:02:03Z",
        "author": {
          "login": "just-ero"
        }
      },
      {
        "body": ".NET TaskHost <https://github.com/dotnet/msbuild/issues/4834> sprouted a number of sub-issues yesterday.  If those were implemented, I imagine `tar` files could be created even if the build was started from MSBuild.exe or Visual Studio.\n",
        "createdAt": "2025-01-25T20:16:09Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}