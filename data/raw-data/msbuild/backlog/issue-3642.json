{
  "number": 3642,
  "title": "Log globbing anomalies: max path, drive enumeration",
  "body": "- Drive enumeration. The more general problem is when the glob pattern contains properties which evaluate to empty. (`$(src)/**/*.cs` evaluates to `/**/*.cs`).\r\n- Original wildcard pattern is retuned ([as it sometimes happens](https://github.com/Microsoft/msbuild/blob/master/documentation/WhenGlobbingReturnsOriginalFilespec.md)). Maybe also include the reason.",
  "state": "OPEN",
  "createdAt": "2018-08-21T18:15:03Z",
  "updatedAt": "2025-06-02T08:30:07Z",
  "closedAt": null,
  "author": {
    "login": "cdmihai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "backlog",
    "Area: Debuggability",
    "Feature - Globbing",
    "Area: Performance",
    "Priority:1",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Let's spike on this in the next sprint: if it's easy to do (because we have a logging context where we'd like to collect the timing/bad patterns and log them) we'll do it, and if not then we'll describe what does exist here.",
        "createdAt": "2020-01-15T21:26:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I have two partial solutions (one per commit) [here](https://github.com/Forgind/msbuild/tree/exp-globbing-empty-property). Do you think it's better to try to sense a globbing anomaly while expanding a property or wait until we're globbing and assume no one wants to enumerate their whole drive? I could also try to pass information about empty properties from one to the other, but that would be complicated and a lot of extra information, so I don't think it's worth it.",
        "createdAt": "2020-02-13T00:07:35Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Keep in mind these things (property evaluation, glob parsing/expanding) are on the hot path, so newly added logic (like additional regex matching) has a good chance of being picked up by RPS. For globbing anomalies I would just change the globbing code to record diagnostics and bubble them upwards to the evaluator / expander which can log appropriate message. For drive enumeration I would avoid duplicating the knowledge of glob syntax between the glob parsing code and the expander (glob parsing code should be the only one that knows the syntax). The glob parsing code should just record a \"drive enumeration\" diagnostic when it detects that the fixed directory part is a drive, which then is bubbled up to a layer appropriate for logging.",
        "createdAt": "2020-02-13T18:11:53Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@ladipro has any of your recent changes in globs addressed that?",
        "createdAt": "2021-04-16T12:26:11Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "@rokonec no, the recent globbing changes did not improve logging. The unintended drive enumeration problem was somewhat alleviated in #5669 but I agree that this issue should be in backlog.",
        "createdAt": "2021-04-16T12:33:34Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "@ladipro are there any updates on logging/surfacing an exception for max path during wildcard expansion?",
        "createdAt": "2021-11-11T18:49:03Z",
        "author": {
          "login": "mruxmohan4"
        }
      },
      {
        "body": "@mruxmohan-msft there have been some internal discussions but no conclusion yet. The issue still exists. I'll leave a comment in #7029.",
        "createdAt": "2021-11-15T14:42:06Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "@JanKrivanek This might be good candidate for analyzers V1, especially max path, it is so serious that it maybe shall be warning but warnings could break some builds",
        "createdAt": "2024-01-09T12:36:04Z",
        "author": {
          "login": "rokonec"
        }
      }
    ]
  }
}