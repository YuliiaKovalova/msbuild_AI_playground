{
  "number": 1821,
  "title": "Regression: Include with wildcards no longer applies Exclude in a case-insensitive way to folder names",
  "body": "Let's say you have an item like so:\r\n\r\n`<Result Include=\"test0\\**\\*.txt\" Exclude=\"@(KnownFiles)\" />`\r\n\r\nIn VS2015, the names of any folder names in the Exclude value would be case-insensitive when the exclude was applied. As of VS2017, this seems to no longer be the case.\r\n\r\nSo, let's say `KnownFiles=\"test0\\myFolder\\123.txt\"`, but the include wildcard returns `test0\\MyFolder\\123.txt` (note \"myFolder\" vs \"MyFolder\"). In VS2015 (msbuild 14.0), `Result` would be empty, where as in msbuild 15.0, the result contains \"test0\\MyFolder\\123.txt\".\r\n\r\nSample project attached.\r\n[msbuildtest.zip](https://github.com/Microsoft/msbuild/files/828649/msbuildtest.zip)\r\n",
  "state": "OPEN",
  "createdAt": "2017-03-08T18:50:31Z",
  "updatedAt": "2024-02-21T16:37:15Z",
  "closedAt": null,
  "author": {
    "login": "RobSiklos"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Note: a workaround is to modify the msbuild script to first assign the wildcard to a separate item, and then apply the exclude.\r\n\r\nFor example:\r\n```\r\n<IntermediateResult Include=\"test0\\**\\*.txt\"/>\r\n<Result Include=\"@(IntermediateResult)\" Exclude=\"@(KnownFiles)\" />\r\n```",
        "createdAt": "2017-03-08T18:56:26Z",
        "updatedAt": "2017-03-08T18:56:26Z",
        "author": {
          "login": "RobSiklos"
        }
      }
    ]
  }
}