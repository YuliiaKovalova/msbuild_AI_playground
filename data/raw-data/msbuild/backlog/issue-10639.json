{
  "number": 10639,
  "title": "Reconsider scope of MSBuildDebugEngine",
  "body": "Right now `MSBuildDebugEngine` turns on three things:\r\n\r\n1. Injected binlogs for all evaluations and builds.\r\n2. MSBUILDDEBUGCOMM traces for node-connectivity debugging\r\n3. MSBUILDDEBUGSCHEDULER traces for scheduler debugging.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/371d00f5c10a15b0858c411aafa11aac74596b06/src/Framework/Traits.cs#L33-L34\r\n\r\nBinlogs are super useful, and the reason we ask for this in like 99% of cases.\r\n\r\nComm traces can be helpful if we're having trouble with process launching or named pipes.\r\n\r\nScheduler traces . . . I can't remember ever getting useful info out of.\r\n\r\nShould we drop scheduler traces from this list?",
  "state": "CLOSED",
  "createdAt": "2024-09-10T14:23:00Z",
  "updatedAt": "2025-05-28T15:38:36Z",
  "closedAt": "2025-05-28T15:38:13Z",
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "maridematte"
      }
    ]
  },
  "labels": [
    "Area: Debuggability",
    "Area: Engine",
    "Priority:2",
    "triaged",
    "internal-team-onboarding"
  ],
  "comments": {
    "nodes": [
      {
        "body": "There seems to be other stuff - e.g.:\n\nhttps://github.com/dotnet/msbuild/blob/66061962dffd4250199894b385d0ad441a9b32d6/src/Build/BackEnd/BuildManager/BuildManager.cs#L491-L495\n\nWhile the `DetailedSummary` seems to lead to issues under some esoteric scenarios - so maybe we want to separate this scneario as well? (it has dedicated `MSBUILDDETAILEDSUMMARY`)\n\n\n```\nException type:   Microsoft.Build.Framework.InternalErrorException\nMessage:          MSB0001: Internal MSBuild Error: Can't get the accumulated time while the timer is still running.\nInnerException:   <none>\nStackTrace (generated):\n\n    SP               IP               Function\n    000000E4B547E700 00007FFBD0677B87 Microsoft_Build_ni!Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(System.String, System.Exception, System.Object[])+0x47\n    000000E4B547E750 00007FFBD0DE39F9 Microsoft_Build_ni!Microsoft.Build.BackEnd.ScheduleTimeRecord.get_AccumulatedTime()+0x707a79\n    000000E4B547E790 00007FFBD06DEAD5 Microsoft_Build_ni!Microsoft.Build.BackEnd.Scheduler.WriteRecursiveSummary(Microsoft.Build.BackEnd.Logging.ILoggingService, Microsoft.Build.Framework.BuildEventContext, Int32, Microsoft.Build.BackEnd.SchedulableRequest, Int32, Boolean, Boolean)+0x2a5\n    000000E4B547E900 00007FFBD06DCA23 Microsoft_Build_ni!Microsoft.Build.BackEnd.Scheduler.WriteDetailedSummary(Int32)+0x173\n    000000E4B547E990 00007FFBD042D5AF Microsoft_Build_ni!Microsoft.Build.Execution.BuildManager.PerformSchedulingActions(System.Collections.Generic.IEnumerable`1<Microsoft.Build.BackEnd.ScheduleResponse>)+0x50f\n    000000E4B547EA30 00007FFBD042CB69 Microsoft_Build_ni!Microsoft.Build.Execution.BuildManager.HandleResult(Int32, Microsoft.Build.Execution.BuildResult)+0x109\n    000000E4B547EAC0 00007FFBD042C100 Microsoft_Build_ni!Microsoft.Build.Execution.BuildManager.ProcessPacket(Int32, Microsoft.Build.BackEnd.INodePacket)+0xf0\n    000000E4B547EB30 00007FFBD04294CE Microsoft_Build_ni!Microsoft.Build.Execution.BuildManager.ProcessWorkQueue(System.Action)+0x9e\n```",
        "createdAt": "2025-02-04T19:34:31Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "After talking with @rainersigwald , we have decided that we want to keep the `DetailedSummary` and we think that separating to another variable is more work that will not have a lot of impact.",
        "createdAt": "2025-05-28T15:38:13Z",
        "author": {
          "login": "maridematte"
        }
      }
    ]
  }
}