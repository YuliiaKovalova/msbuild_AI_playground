{
  "number": 5943,
  "title": "GenerateBindingRedirects target isn't skipped due to SuggestedBindingRedirects items not being files",
  "body": "### Issue Description\r\nWhen doing an incremental build (or when one project triggers this target from its dependency), the `GenerateBindingRedirects` target is not skipped as expected in some cases. Specifically this is because `@(SuggestedBindingRedirects)` is listed as an input but does not contain file paths.\r\n\r\n### Steps to Reproduce\r\nAdd this item (which RAR could plausibly add):\r\n```xml\r\n<SuggestedBindingRedirects Include=\"Newtonsoft.Json, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\">\r\n  <MaxVersion>12.0.0.0</MaxVersion>\r\n</SuggestedBindingRedirects>\r\n```\r\n\r\nBuild and build again. The 2nd build won't skip this target when in theory it should. You should see the following in the logs before the target executes.\r\n\r\n```\r\nInput file \"Newtonsoft.Json, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\" does not exist.\r\n```\r\n\r\nAttaching image to show the behavior when a project triggers RAR on its dependencies (the error in my case is because our environment doesn't allow projects to write over their dependencies' outputs):\r\n![image](https://user-images.githubusercontent.com/6445614/101391826-bf808000-3879-11eb-8614-8ba7748a3382.png)\r\n\r\n### Expected Behavior\r\nThe `GenerateBindingRedirects` is skipped\r\n\r\n### Actual Behavior\r\nThe `GenerateBindingRedirects` executes.\r\n\r\n### Analysis\r\nThe target is defined as:\r\n```xml\r\n  <Target Name=\"GenerateBindingRedirects\"\r\n    Inputs=\"$(MSBuildAllProjects);@(AppConfigFile);$(ResolveAssemblyReferencesStateFile);$(IntermediateOutputPath);@(SuggestedBindingRedirects)\"\r\n    Outputs=\"$(_GenerateBindingRedirectsIntermediateAppConfig)\"\r\n    Condition=\"'$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true'\">\r\n```\r\n\r\nPotentially `@(SuggestedBindingRedirects)` can smply be removed from the input list. For generated `SuggestedBindingRedirects` items (from RAR), I would think that the RAR state file would have changed (although I'm not 100% confident about that). If a manually added item changes, `MSBuildAllProjects` would certainly change as well.\r\n",
  "state": "CLOSED",
  "createdAt": "2020-12-07T18:52:08Z",
  "updatedAt": "2024-02-21T14:16:03Z",
  "closedAt": "2021-08-16T23:17:46Z",
  "author": {
    "login": "dfederm"
  },
  "labels": [
    "bug",
    "Partner request",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "Introduced in http://vstfdevdiv:8080/DevDiv2/DevDiv/_versionControl/changeset/921202, the original GenerateBindingRedirects commit. I think it's just a bug and not a broken remnant of something intentional.",
        "createdAt": "2020-12-07T18:56:35Z",
        "updatedAt": "2020-12-07T18:56:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "+1",
        "createdAt": "2021-07-24T00:25:49Z",
        "updatedAt": "2021-07-24T00:25:49Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "> Potentially @(SuggestedBindingRedirects) can smply be removed from the input list. For generated SuggestedBindingRedirects items (from RAR), I would think that the RAR state file would have changed (although I'm not 100% confident about that).\n\nI don't think this is guaranteed to be true. If you run RAR 100 times in a single process within a short time, and all relevant file state information is in the process-level cache, RAR also completely emptied the on-disk cache. (I'm not convinced it _should_ do that, but it does.) At that point, it doesn't matter if you build a completely unrelated project that happens to have an empty RAR state file; the state file won't change\u2014but the suggested redirects can. It may seem a little far-fetched, but it definitely isn't if we bring in RARaaS.\n\nOne alternative to just removing it that I considered for this issue is if we had RAR write suggested redirects to a file. Then we could pass the file, making the target UTD check happy, and read it in GenerateBindingRedirects. What do you think?",
        "createdAt": "2021-07-26T04:25:06Z",
        "updatedAt": "2021-07-26T04:25:06Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Does `@(SuggestedBindingRedirects)` _ever_ contain a file that exists on disk? ",
        "createdAt": "2021-07-29T20:03:32Z",
        "updatedAt": "2021-07-29T20:03:32Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Not as far as I know. Otherwise, this wouldn't be an issue.",
        "createdAt": "2021-07-29T20:35:31Z",
        "updatedAt": "2021-07-29T20:35:31Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}