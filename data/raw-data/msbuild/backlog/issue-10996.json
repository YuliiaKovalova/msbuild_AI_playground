{
  "number": 10996,
  "title": "Handle the EmbeddedResource documentation + behavior",
  "body": "### Context\n\nEmbeddedResource documentation is lacking crucial information that we'd like to guide with dedicated Check.\n\n### To be done\n\n * [x] Documentation\n     - [x] Document `RespectAlreadyAssignedItemCulture` in [`AssignCulture` doc](https://learn.microsoft.com/en-us/visualstudio/msbuild/assignculture-task ): https://github.com/MicrosoftDocs/visualstudio-docs-pr/pull/13363\n     - [x] Add better description of the Culture infering and configuring process in [`EmbeddedResource` doc](https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items#embeddedresource): https://github.com/MicrosoftDocs/visualstudio-docs-pr/pull/13364\n          * doc `Culture` and `WithCulture` metadata there as well. No other metadata\n          * `Culture` / `WithCulture` should be here as well https://learn.microsoft.com/en-us/visualstudio/msbuild/generateresource-task#example\n - [ ] Investigation\n   - [ ] https://github.com/dotnet/msbuild/issues/10536 - I believe any Culture descriptor should be honored when set explicitly. PR: https://github.com/dotnet/msbuild/pull/11000\n   - [ ] Get more details from Sam Harwell on intended behavior for 'NetrualLanguage' https://github.com/dotnet/msbuild/issues/9882#issuecomment-2010752581\n - [ ] Implementation\n   ~~- [ ] Whatever is decided for the 'NetrualLanguage'  handling~~\n   - [ ] Add BuildCheck (suggestion only for now) that is strict on setting Culture or WithCulture: https://github.com/dotnet/msbuild/issues/9882 (https://github.com/dotnet/msbuild/issues/9154)\n   - [ ] Flip the culture respecting opt-in via `RespectAlreadyAssignedItemCulture` introduced in https://github.com/dotnet/msbuild/pull/10026 to opt-out - as we now want to suggest explicit using of `Culture`. Hide behind changewave. Detect the clash of explicit and implicitly detected culture (as that's the case where there would be a change in behavior) - and emit warning for that. - Seems to be already handled by https://github.com/dotnet/sdk/pull/41042\n\n### Notes\n\nMore info: [[Internal discussion link](https://teams.microsoft.com/l/message/19:a15e1e2b222b47388462f825932efb82@thread.tacv2/1730965817659?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47&groupId=f136bf3b-1656-40aa-b7b3-50ea73de9268&parentMessageId=1730965817659&teamName=Prague%20.NET%20DEV%20UX%20%26%20Tools%20Team&channelName=MSBUILD%20Team&createdTime=1730965817659)]",
  "state": "CLOSED",
  "createdAt": "2024-11-19T10:46:57Z",
  "updatedAt": "2024-12-04T14:49:56Z",
  "closedAt": "2024-12-04T14:49:56Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "NeutralLanguage topic:\n\n* `NeutralResourcesLanguageAttribute` on Assembly denotes which culture is considered for the culture-neutral (`WithCulture=false` or culture specific extension is not present) resources\n* The attribute is already strongly suggested by [CA1824](https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1824)\n* When `NeutralLanguage` property is set then [`GetAssemblyAttributes` task](https://github.com/dotnet/sdk/blob/1b4266fca551b0f5c4cd5f14b67fc6e58f24fe79/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.GenerateAssemblyInfo.targets#L113-L115)\n* So when the attribute is specified and file doesn't have 'double extension' - than we can already know the Culture/WithCulture is not needed - so we should not ask it by the Check\n* However we cannot harvest the assembly attributes in the Check (it's not part of build, but rather compilation) - so we'd be only able to use the `NeutralLanguage` property\n* The alternative is to not enforce the Check on 'double extension-less files' - as with presence of the `NeutralResourcesLanguageAttribute` there is no ambiguity. Without the `NeutralResourcesLanguageAttribute` already the compiler analyzer would fire.",
        "createdAt": "2024-11-19T11:56:07Z",
        "updatedAt": "2024-11-19T11:56:07Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}