{
  "number": 4547,
  "title": "Referencing C++/WinRT static library results in MSB3272",
  "body": "Originally filed as https://developercommunity.visualstudio.com/content/problem/629524/static-library-reference-causes-there-was-a-proble.html\r\n\r\nRepro via @DHowett-MSFT: [DoStaticCppWinrtLibrariesWorkOrNot.zip](https://github.com/microsoft/msbuild/files/3432120/DoStaticCppWinrtLibrariesWorkOrNot.zip) who also developed a workaround: https://github.com/microsoft/terminal/pull/2007/commits/40beb06dde29a39549af7af0dd19ab3dc697a7e1.\r\n\r\n```\r\nerror MSB3272: There was a problem reading the implementation file \"S:\\repro\\devdiv\\DevDiv\\948240\\ARM\\Debug\\ComponentLib\\ComponentLib.lib\". \"Unable to read beyond the end of the stream.\" [S:\\repro\\devdiv\\DevDiv\\948240\\ComponentDll\\ComponentDll.vcxproj]\r\n```\r\n\r\nThe full exception stack is:\r\n\r\n```\r\n   at System.IO.BinaryReader.FillBuffer(Int32 numBytes) in f:\\dd\\ndp\\clr\\src\\BCL\\system\\io\\binaryreader.cs:line 580\r\n   at System.IO.BinaryReader.ReadUInt32() in f:\\dd\\ndp\\clr\\src\\BCL\\system\\io\\binaryreader.cs:line 191\r\n   at Microsoft.Build.Tasks.ReferenceTable.ReadMachineTypeFromPEHeader(String dllPath) in /_/src/Tasks/AssemblyDependency/ReferenceTable.cs:line 2905\r\n   at Microsoft.Build.Tasks.ReferenceTable.VerifyArchitectureOfImplementationDll(String dllPath, String winmdFile) in /_/src/Tasks/AssemblyDependency/ReferenceTable.cs:line 2796\r\n```\r\n\r\nThis is a regression resulting from #4418.",
  "state": "CLOSED",
  "createdAt": "2019-07-25T15:02:05Z",
  "updatedAt": "2024-02-21T17:07:46Z",
  "closedAt": "2019-07-25T21:15:40Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Tasks",
    "Area: Task: Resolve Assembly References (RAR)",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "If anyone is in need of a self-contained general workaround:\r\n\r\n```xml\r\n  <!--\r\n    work around https://github.com/microsoft/msbuild/issues/4547\r\n    Remove after updating to Visual Studio 16.3 preview 2 or higher.\r\n  -->\r\n  <Target Name=\"WorkAroundMSBuild4547_Remove\" BeforeTargets=\"ResolveAssemblyReferences\">\r\n    <ItemGroup>\r\n      <_StaticLibraryProjectReference Include=\"@(_ResolvedProjectReferencePaths)\" Condition=\"'$([System.IO.Path]::GetExtension(`%(Implementation)`))' == '.lib'\" />\r\n      <_ResolvedProjectReferencePaths Remove=\"@(_StaticLibraryProjectReference)\" />\r\n      <_ResolvedProjectReferencePaths Include=\"@(_StaticLibraryProjectReference)\">\r\n        <Implementation />\r\n      </_ResolvedProjectReferencePaths>\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n  <Target Name=\"WorkAroundMSBuild4547_Restore\" AfterTargets=\"ResolveAssemblyReferences\">\r\n    <ItemGroup>\r\n      <_ResolvedProjectReferencePaths Remove=\"@(_StaticLibraryProjectReference)\" />\r\n      <_ResolvedProjectReferencePaths Include=\"@(_StaticLibraryProjectReference)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n  <!-- End https://github.com/microsoft/msbuild/issues/4547 workaround -->\r\n```\r\n\r\nIf you have more than one affected project, the easiest way to import it into all of them is to put that in a [`Directory.Build.targets` file](https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2019#directorybuildprops-and-directorybuildtargets) (surrounded by `<Project></Project>`, if you don't have one already).",
        "createdAt": "2019-08-07T20:07:29Z",
        "updatedAt": "2019-08-07T20:07:29Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}