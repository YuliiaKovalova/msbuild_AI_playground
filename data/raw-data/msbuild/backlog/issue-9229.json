{
  "number": 9229,
  "title": "[Feature Request]: Make it easier for overriding ToolTask temp rsp location",
  "body": "### Summary\r\n\r\nA recent issue for us that we stumbled on was a Task, inheriting from ToolTask that didnt handle Unicode chars.\r\nThe User Name contained Unitycode chars, and ToolTask puts command line args into a temp response file\r\nhttps://github.com/dotnet/msbuild/blob/main/src/Utilities/ToolTask.cs#L564C61-L564C61\r\n\r\nThe issue was reported to the owners of the Task, but trying to find a way to unblock is quite hard.\r\nThe rsp path are set as: `Path.Combine(Path.GetTempPath(), $\"MSBuildTemp{Environment.UserName}\");`\r\n`GetTempPath` can be overriden by changing the TMP/TEMP User env vars.\r\nBut `UserName` are no way to override AFAICT today.\r\n\r\n\r\n### Background and Motivation\r\n\r\nAs a consumer of a NuGet package, containing Task with such a problem, I would like to be able to not be stuck with this issue again, without being able to fix it myself. \r\n\r\n### Proposed Feature\r\n\r\nPossible solutions on the top of my head:\r\n- Property on the base class to set the tmp location, so we could override the Target and send in the extra tmp location Task parameter.\r\n- Env var for `$\"MSBuildTemp{Environment.UserName}\")`\r\n\r\nEdit:\r\n- Remove appended username on Windows\r\n- Change to use SecurityIdentifier\r\n\r\n### Alternative Designs\r\n\r\n_No response_",
  "state": "CLOSED",
  "createdAt": "2023-09-19T07:16:16Z",
  "updatedAt": "2024-02-21T14:03:39Z",
  "closedAt": "2023-10-05T12:47:54Z",
  "author": {
    "login": "hknielsen"
  },
  "labels": [
    "bug",
    "backlog",
    "Feature Request",
    "Area: Localization",
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I guess this problem only occurs on Windows, as POSIX doesn't have separate ANSI and Unicode functions for opening files.\n\nOn Windows though, the temp directory is per user.  So MSBuild could be changed to omit the user name from the path entirely, when running on Windows.  This wouldn't need any new environment variables.",
        "createdAt": "2023-09-19T08:24:51Z",
        "updatedAt": "2023-09-19T08:24:51Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo I like that. Took a look why the username was appended, it dosnt seem theres a clear reason:\r\nhttps://github.com/dotnet/msbuild/commit/7f3a30cd04aa884699b7980a9209aade28f1eca2#diff-3ecd811e3c6e9fd00cc8dd066953e6b280bedb594223203d0bb7786a46ca18d5L27\r\n\r\nAnd before it was not, just dumping the file in the tmp location.\r\nSo changing this does not seem too harmful.",
        "createdAt": "2023-09-19T09:14:04Z",
        "updatedAt": "2023-09-19T09:14:04Z",
        "author": {
          "login": "hknielsen"
        }
      },
      {
        "body": "If there is some security objection to omitting the user name on Windows, then an alternative would be to use the [SecurityIdentifier](https://learn.microsoft.com/dotnet/api/system.security.principal.securityidentifier?view=net-6.0) instead; it is as unique as the user name, and its ToString() contains ASCII characters only.  That might require referencing additional libraries, though.",
        "createdAt": "2023-09-19T09:20:40Z",
        "updatedAt": "2023-09-19T09:20:40Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "The only reason I could see there being a security objection, would be if multiple users used the same tmp location.\r\nUsing the `SecurityIdentifier` would fix that. Lets use that one",
        "createdAt": "2023-09-19T09:24:38Z",
        "updatedAt": "2023-09-19T09:24:38Z",
        "author": {
          "login": "hknielsen"
        }
      },
      {
        "body": "@Forgind Since you did the change, what do you think?\r\nTwo options:\r\n- Remove the appended UserName to `MSBuildTemp`\r\n- Use `SecurityIdentifier` instead of UserName",
        "createdAt": "2023-09-19T09:58:55Z",
        "updatedAt": "2023-09-19T09:58:55Z",
        "author": {
          "login": "hknielsen"
        }
      },
      {
        "body": "I agree, I don't think this is necessary on Windows\r\n\r\nhttps://github.com/dotnet/msbuild/blob/60ae06f6d20616f524a751373aea071df8c2ae48/src/Shared/TempFileUtilities.cs#L39\r\n\r\nGenerally the user name is already in the Windows temp path, and if it isn't -- you're hopefully sending it some other secure place. Should that line be moved down in the non Windows path only?",
        "createdAt": "2023-09-19T21:35:47Z",
        "updatedAt": "2023-09-19T21:35:47Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I think removing the UserName on Windows is probably ok. The reason I initially kept it for Windows even though it was unnecessary for the security change was so that if users are looking for their MSBuild-specific temp directory, we can give them clear guidance instead of having guidance that depends on your OS.\r\n\r\nI can ask someone internally what he thinks\u2014I don't officially work on MSBuild anymore.",
        "createdAt": "2023-09-19T23:41:29Z",
        "updatedAt": "2023-09-19T23:41:29Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Thanks for clarifying that @Forgind - that was also my thoughts, so im happy that got validated.\r\nI remove the UserName appended to the folder here\r\nhttps://github.com/dotnet/msbuild/pull/9232",
        "createdAt": "2023-09-20T06:58:57Z",
        "updatedAt": "2023-09-20T06:58:57Z",
        "author": {
          "login": "hknielsen"
        }
      }
    ]
  }
}