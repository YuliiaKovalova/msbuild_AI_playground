{
  "number": 4960,
  "title": "Use Hash Combiner for Node Handshake Logic",
  "body": "Our current hash combining functionality for node handshakes results in communication issues.\r\n\r\nA node communicating from `c:\\Users\\bevillal\\Documents\\GitHub\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\` was able to talk to a node created from `c:\\Users\\bevillal\\Documents\\GitHub\\msbuild\\artifacts\\bin\\Microsoft.Build.Engine.UnitTests\\Debug\\net472\\amd64\\` because they computed the same hash when using their folder paths as part of the handshake.",
  "state": "OPEN",
  "createdAt": "2019-12-05T21:54:28Z",
  "updatedAt": "2024-02-21T16:30:17Z",
  "closedAt": null,
  "author": {
    "login": "benvillalobos"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "We use bad hash combiners in several places. .NET Core introduced https://github.com/dotnet/runtime/blob/master/src/libraries/System.Private.CoreLib/src/System/HashCode.cs; we should use that when available and consider copying the code (as long as it works on .NET 3.5 for `MSBuildTaskHost.exe`).",
        "createdAt": "2019-12-05T21:56:16Z",
        "updatedAt": "2019-12-05T21:56:16Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I like using ValueTuples for hash combining: (a, b, c).GetHashCode()",
        "createdAt": "2020-05-26T06:51:39Z",
        "updatedAt": "2020-05-26T06:51:39Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}