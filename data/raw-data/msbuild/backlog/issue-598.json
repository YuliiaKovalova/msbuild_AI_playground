{
  "number": 598,
  "title": "TargetFrameworkRootPath not respected",
  "body": "The variable `TargetFrameworkRootPath` appears to let developers customize the location of items like Portable Reference Assemblies.  In theory I should be able to copy the portable ref assemblies to a custom place on my hard drive, point `TargetFrameworkRootPath` to that location and MSBuild will run it's normal algorithm on that location.  \n\nWhile this variable is respected for most reference assembly lookup, it is not respected for mscorlib.  The mscorlib reference is calculated from `_ExplicitReference` which derives it's value from `FrameworkPathOverride`.  That property is set via the following\n\n``` xml\n<FrameworkPathOverride Condition=\"'$(FrameworkPathOverride)' == ''\">$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToStandardLibraries($(TargetFrameworkIdentifier), $(TargetFrameworkVersion), $(TargetFrameworkProfile), $(PlatformTarget)))</FrameworkPathOverride>\n```\n\nThis boils down to the [following code](https://github.com/Microsoft/msbuild/blob/131d5eeeafe66b5db52e2c8908c424c4471b2919/src/Utilities/ToolLocationHelper.cs#L1555) in MSBuild:\n\n``` cs\npublic static string GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile)\n```\n\nThis method does not take a path specifying the target framework root and hence goes to the standard `Program Files (x86)`.  This method should respect `TargetFrameworkRootPath` to allow for customized locations of the reference assemblies. \n",
  "state": "CLOSED",
  "createdAt": "2016-05-02T16:19:38Z",
  "updatedAt": "2024-02-21T17:28:25Z",
  "closedAt": "2017-03-27T17:07:23Z",
  "author": {
    "login": "jaredpar"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "cdmihai"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This seems reasonable, do you need this for Update 3? Or Dev15?\n",
        "createdAt": "2016-05-03T23:00:15Z",
        "updatedAt": "2016-05-03T23:00:15Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "An implementation for this can be seen at https://github.com/Microsoft/msbuild/pull/529/commits/af480115aa70de8d5123e67b827a101d29e0d0aa  and https://github.com/Microsoft/msbuild/pull/529/commits/53d0f5bad22e207b5b489462fcaa00a68bc88a43 in PR #529 .\n",
        "createdAt": "2016-05-03T23:03:11Z",
        "updatedAt": "2016-05-03T23:03:11Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "Preferably update 3.  This is part of a bigger set of changes I'm trying to do to our build system.  May drop you a line about the overall plan. \n",
        "createdAt": "2016-05-04T16:02:59Z",
        "updatedAt": "2016-05-04T16:02:59Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "I have split the commits from the previous PR #529 into a new PR #627, with just the commits relevant for this issue.\n",
        "createdAt": "2016-05-17T18:30:09Z",
        "updatedAt": "2016-05-17T18:30:09Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "I believe this issue can be closed now.  I can verify it works on MSBuild 15.0 as we rely on it for our build. ",
        "createdAt": "2017-03-27T16:01:32Z",
        "updatedAt": "2017-03-27T16:01:32Z",
        "author": {
          "login": "jaredpar"
        }
      }
    ]
  }
}