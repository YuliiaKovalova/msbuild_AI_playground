{
  "number": 8168,
  "title": "Conditional imports including VSToolsPath will throw an exception even if the condition is false",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\nSee title. This has hit multiple internal customers.\r\n\r\n### Steps to Reproduce\r\n```\r\n<Project>\r\n  <Import Project=\"$(VSToolsPath)\\Foo.targets\" Condition=\"Exists('$(VSToolsPath)\\Foo.targets')\" />\r\n  <Target Name=\"Build\" />\r\n</Project>\r\n```\r\n\r\n### Expected Behavior\r\nNo error\r\n\r\n### Actual Behavior\r\n`MSB4226 The imported project \"$(VSToolsPath)\\Foo.targets\" was not found. Also, tried to find \"$(VSToolsPath)\\Foo.targets\" in the fallback search path(s) for $(VSToolsPath) - \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v17.0\" . Confirm that the path in the <Import> declaration is correct, and that the file exists on disk in one of the search paths.`\r\n\r\n### Analysis\r\nThis error was added in #8095, but it should respect conditions.\r\n",
  "state": "CLOSED",
  "createdAt": "2022-11-15T19:49:15Z",
  "updatedAt": "2024-02-21T14:07:06Z",
  "closedAt": "2022-12-08T03:30:45Z",
  "author": {
    "login": "Forgind"
  },
  "labels": [
    "bug",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.5"
  },
  "comments": {
    "nodes": [
      {
        "body": "Workaround\r\n==========\r\n\r\nIn `C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\MSBuild.exe.config` or your equivalent, comment out the line \r\n\r\n```xml\r\n<property name=\"VSToolsPath\" value=\"$(MSBuildProgramFiles32)\\MSBuild\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\" />\r\n```",
        "createdAt": "2022-11-15T19:50:03Z",
        "updatedAt": "2022-11-15T19:50:03Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Alternate workaround:\r\nDisable the 17.6 changewave",
        "createdAt": "2022-11-15T19:58:43Z",
        "updatedAt": "2022-11-15T19:58:43Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "This breaks graph-based restore and build too.",
        "createdAt": "2022-11-23T18:46:34Z",
        "updatedAt": "2022-11-23T18:46:34Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "@rainersigwald your workaround did not solve the problem in VS, where the build still fails.",
        "createdAt": "2022-11-23T18:47:46Z",
        "updatedAt": "2022-11-23T18:47:46Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "Did the changewave-based workaround work?\r\n\r\nThe revert should be in VS already, so you can also upgrade to the latest internal preview.",
        "createdAt": "2022-11-23T19:29:09Z",
        "updatedAt": "2022-11-23T19:29:09Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> Disable the 17.6 changewave\r\n> Did the changewave-based workaround work?\r\n\r\nI've never heard of a changewave, nor do I know how to disable it.\r\n",
        "createdAt": "2022-11-23T20:13:52Z",
        "updatedAt": "2022-11-23T20:13:52Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "https://github.com/dotnet/msbuild/blob/main/documentation/wiki/ChangeWaves.md should help.\r\n\r\nYou can disable change waves for individual projects, but if you want to disable it for an entire solution, so set MSBUILDDISABLEFEATURESFROMVERSION to 17.6 in a command prompt then launch devenv.",
        "createdAt": "2022-11-23T21:47:02Z",
        "updatedAt": "2022-11-23T21:47:02Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Thanks.",
        "createdAt": "2022-11-23T22:14:46Z",
        "updatedAt": "2022-11-23T22:14:46Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "We first saw this issue in a preview of 17.5 (I'm working on Visual Studio Tools for Unity). And we are still reproducing it with 17.5 GA, 17.6p1 and 17.6 int p2. Disabling the 17.6 changewave works -thank you for the workaround-, but from what I'm reading above my understanding is that the fix should be already in the latest internal preview. Am I missing something ?",
        "createdAt": "2023-02-22T14:51:14Z",
        "updatedAt": "2023-02-22T14:51:14Z",
        "author": {
          "login": "sailro"
        }
      },
      {
        "body": "Hi @sailro,\r\n\r\nCan you first verify that you do have a false condition? Of note, the previous version of this didn't just not throw an error when the condition was false; it just didn't throw errors. That means that you can have an invalid Import with a true condition (or no condition) and have it not error until recently if it uses VSToolsPath.\r\n\r\nIf your condition is false, are you able to share a [binlog](http://aka.ms/msbuild/binlog)? If you can share one but don't want it publicly visible, you can create a VS feedback ticket and attach it. Then comment here with a link, and I can take a look.\r\n\r\nThanks!",
        "createdAt": "2023-02-22T20:10:58Z",
        "updatedAt": "2023-02-22T20:10:58Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The merge in #8171 is tagged as being in VS 17.5 and above, but I'm still seeing this same error in VS17.5. and VS17.6.\r\n\r\nThe import that I have is:\r\n\r\n```xml\r\n<Import Project=\"$(VSToolsPath)\\WebApplications\\Microsoft.WebApplication.targets\" Condition=\"'$(VSToolsPath)' != ''\" />\r\n```\r\n\r\nHowever, with some debugging on the project, its quite clear that `VSToolsPath` is empty and therefore the condition is false.\r\n\r\nIs there something special about a string equality condition on an import? I note that this isn't covered by the unit tests in #8171, only false-literal and `Exists(...)` checks.",
        "createdAt": "2023-07-05T04:57:28Z",
        "updatedAt": "2023-07-05T05:37:15Z",
        "author": {
          "login": "yaakov-h"
        }
      },
      {
        "body": "The special thing in this case is VSToolsPath, not the string equality check. VSToolsPath is one of the few MSBuild properties that probes, that is, MSBuild will try out multiple places and take whichever happens to have WebApplications\\Microsoft.WebApplication.targets in this case. For that reason, our standard != '' empty logic does not apply here, and Exists is the recommended way to check whether the .targets file you want is present.\r\n\r\n@rainersigwald, I didn't think of this while working on the PR, but is there any reason we can't special-case != '' to make it work?",
        "createdAt": "2023-07-05T14:45:01Z",
        "updatedAt": "2023-07-05T14:45:01Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "I'm hitting the same issue as described in @yaakov-h's [comment](https://github.com/dotnet/msbuild/issues/8168#issuecomment-1621026072). I can work-around the issue by changing the value of `VSToolsPath` in `C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe.config` from\r\n\r\n```xml\r\n<property name=\"VSToolsPath\" value=\"$(MSBuildProgramFiles32)\\MSBuild\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\" />\r\n``` \r\n\r\nto:\r\n\r\n```xml\r\n<property name=\"VSToolsPath\" value=\"$(MSBuildExtensionsPath)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\" />\r\n```\r\n\r\nThis allows the import to actually succeed. \r\n\r\nWould it make sense to update this value as the current value doesn't seem right?",
        "createdAt": "2023-07-07T12:08:38Z",
        "updatedAt": "2023-07-07T12:08:38Z",
        "author": {
          "login": "jhennessey"
        }
      },
      {
        "body": "@jhennessey - I got the same issue, thanks for your workaround!\r\n\r\n> Would it make sense to update this value as the current value doesn't seem right?\r\n\r\nI have created a ticket and hope they will fix the wrong path situation: https://developercommunity.visualstudio.com/t/Wrong-path-configuration-for-VSToolPat/10448097",
        "createdAt": "2023-08-23T11:21:23Z",
        "updatedAt": "2023-08-23T11:21:23Z",
        "author": {
          "login": "thornch"
        }
      }
    ]
  }
}