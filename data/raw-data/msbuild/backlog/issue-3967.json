{
  "number": 3967,
  "title": "InvalidOperationException in ProfilerLogger",
  "body": "Hey, I'm using the following code to compile a same project in a loop from a console and generate binary+profile logs:\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.IO;\r\nusing System.Reflection;\r\nusing Microsoft.Build.Evaluation;\r\nusing Microsoft.Build.Execution;\r\nusing Microsoft.Build.Framework;\r\nusing Microsoft.Build.Logging;\r\nusing Microsoft.Build.Utilities;\r\n\r\nnamespace BuildServer\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            if (args.Length != 1)\r\n            {\r\n                Console.WriteLine(\"Error: expecting a csproj\");\r\n                Console.WriteLine($\"Usage: {Path.GetFileName(Assembly.GetExecutingAssembly().Location)}  a_msbuild.csproj\");\r\n                Environment.Exit(1);\r\n            }\r\n\r\n            var projectFile = args[0];\r\n            var sdkPath = @\"C:\\Program Files\\dotnet\\sdk\\2.1.402\";\r\n\r\n            Environment.SetEnvironmentVariable(\"MSBuildExtensionsPath\", sdkPath);\r\n            Environment.SetEnvironmentVariable(\"MSBuildSDKsPath\", $@\"{sdkPath}\\Sdks\\\");\r\n\r\n            var clock = Stopwatch.StartNew();\r\n            while (true)\r\n            {\r\n                clock.Restart();\r\n\r\n                var globalProperties = new Dictionary<string, string>\r\n                {\r\n                    [\"MSBuildExtensionsPath\"] = sdkPath,\r\n                    [\"MSBuildSDKsPath\"] = $@\"{sdkPath}\\Sdks\",\r\n                    [\"RoslynTargetsPath\"] = $@\"{sdkPath}\\Roslyn\",\r\n                    [\"DisableHandlePackageFileConflicts\"] = \"true\",\r\n                    [\"IgnoreDefaultInstalledAssemblyTables\"] = \"true\",\r\n                    [\"IgnoreInstalledAssemblySubsetTables\"] = \"true\"\r\n                };\r\n\r\n                using (ProjectCollection projectCollection = new ProjectCollection(globalProperties, new List<ILogger>(), ToolsetDefinitionLocations.Default))\r\n                {\r\n                    projectCollection.AddToolset(new Toolset(ToolLocationHelper.CurrentToolsVersion, sdkPath, projectCollection, string.Empty));\r\n                    projectCollection.LoadProject(projectFile);\r\n\r\n                    var defaultBuildManager = BuildManager.DefaultBuildManager;\r\n                    var buildRequestData = new BuildRequestData(projectFile, globalProperties, projectCollection.DefaultToolsVersion, new[] { \"Build\" }, null);\r\n\r\n                    var loggers = new List<ILogger>\r\n                    {\r\n                        new ConsoleLogger(LoggerVerbosity.Quiet),\r\n                        new BinaryLogger {Parameters = \"msbuild.binlog\"},\r\n                        new ProfilerLogger(\"profile.log\")\r\n                    };\r\n                    var buildParameters = new BuildParameters(projectCollection) {DetailedSummary = true, Loggers = loggers};\r\n\r\n\r\n                    defaultBuildManager.BeginBuild(buildParameters);\r\n                    try\r\n                    {\r\n                        var build = defaultBuildManager.PendBuildRequest(buildRequestData);\r\n                        build.Execute();\r\n                    }\r\n                    finally\r\n                    {\r\n                        defaultBuildManager.EndBuild();\r\n                    }\r\n                }\r\n\r\n                Console.WriteLine($\"Running in: {clock.Elapsed.TotalMilliseconds}ms\");\r\n                Console.WriteLine(\"Press [enter] to launch it again\");\r\n                Console.ReadLine();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\nBut when using a ProfilerLogger, on the second loop (while nothing changed), I'm getting the following exception:\r\n\r\n```\r\nWriting profiler report to 'profile.log'...\r\n\r\nUnhandled Exception: Microsoft.Build.Exceptions.InternalLoggerException: The build stopped unexpectedly because the \"ProfilerLogger\" logger failed unexpectedly during shutdown. ---> System.InvalidOperationException: Nullable object must have a value.\r\n   at Microsoft.Build.Logging.ProfilerLogger.FindBigEnoughParentId(IDictionary`2 idTable, Nullable`1 parentId) in /_/src/Build/Logging/ProfilerLogger.cs:line 240\r\n   at Microsoft.Build.Logging.ProfilerLogger.PruneSmallItems(IDictionary`2 aggregatedLocations) in /_/src/Build/Logging/ProfilerLogger.cs:line 227\r\n   at Microsoft.Build.Logging.ProfilerLogger.GetAggregatedResult(Boolean pruneSmallItems) in /_/src/Build/Logging/ProfilerLogger.cs:line 153\r\n   at Microsoft.Build.Logging.ProfilerLogger.GenerateProfilerReport() in /_/src/Build/Logging/ProfilerLogger.cs:line 289\r\n   at Microsoft.Build.BackEnd.Logging.LoggingService.ShutdownLogger(ILogger logger) in /_/src/Build/BackEnd/Components/Logging/LoggingService.cs:line 1203\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.Build.Exceptions.InternalLoggerException.Throw(Exception innerException, BuildEventArgs e, String messageResourceName, Boolean initializationException, String[] messageArgs) in /_/src/Build/Errors/InternalLoggerException.cs:line 234\r\n   at Microsoft.Build.BackEnd.Logging.LoggingService.ShutdownLogger(ILogger logger) in /_/src/Build/BackEnd/Components/Logging/LoggingService.cs:line 1212\r\n   at Microsoft.Build.BackEnd.Logging.LoggingService.ShutdownComponent() in /_/src/Build/BackEnd/Components/Logging/LoggingService.cs:line 739\r\n   at Microsoft.Build.BackEnd.BuildComponentFactoryCollection.BuildComponentEntry.ShutdownSingletonInstance() in /_/src/Build/BackEnd/Components/BuildComponentFactoryCollection.cs:line 229\r\n   at Microsoft.Build.Execution.BuildManager.ShutdownLoggingService(ILoggingService loggingService) in /_/src/Build/BackEnd/BuildManager/BuildManager.cs:line 1871\r\n   at Microsoft.Build.Execution.BuildManager.EndBuild() in /_/src/Build/BackEnd/BuildManager/BuildManager.cs:line 635\r\n   at BuildServer.Program.Main(String[] args) in C:\\Work\\tmp\\BuildServer\\BuildServer\\Program.cs:line 66\r\n```\r\n\r\nAny ideas from what could that come?\r\n",
  "state": "CLOSED",
  "createdAt": "2018-11-29T09:36:37Z",
  "updatedAt": "2024-02-21T17:10:15Z",
  "closedAt": "2018-12-05T20:29:39Z",
  "author": {
    "login": "xoofx"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I build a debug version and I'm getting this error on the following case:\r\n\r\n![image](https://user-images.githubusercontent.com/715038/49218957-212bcb00-f3d2-11e8-944a-7ad78c2ac5af.png)\r\n\r\nIt's seems that it's the \"total evaluation\", which is going through this loop because it is `IsTooSmall(pair.Value)` while `pair.Key.IsEvaluationPass=true` \r\n\r\nI don't know why on a first pass we don't get this total evaluation while on a second we do.\r\n\r\nDo you have any idea why it's happening?",
        "createdAt": "2018-11-29T11:30:12Z",
        "updatedAt": "2018-11-29T11:30:12Z",
        "author": {
          "login": "xoofx"
        }
      },
      {
        "body": "Ok, so it happens because on the first run, the total evaluation is enough big, but on a second pass, things are running more quickly, so the loop is crashing while trying to access the parentId of this total evaluation.\r\n\r\nI have replaced the code with the following which imo is more adequate (checking at least for the existence of the ParentId before trying to loop)\r\n\r\n```c#\r\n            // We go up the parent relationship until we find an item that is either an evaluation pass or a big enough regular item\r\n            while (pair.Key.ParentId.HasValue && (!pair.Key.IsEvaluationPass || IsTooSmall(pair.Value)))\r\n            {\r\n                pair = idTable[pair.Key.ParentId.Value];\r\n            }\r\n```\r\n\r\nDo you think that's fine? If yes, I will make a PR",
        "createdAt": "2018-11-29T11:47:26Z",
        "updatedAt": "2018-11-29T11:48:06Z",
        "author": {
          "login": "xoofx"
        }
      },
      {
        "body": "@smera \u261d?",
        "createdAt": "2018-11-29T15:51:41Z",
        "updatedAt": "2018-11-29T15:51:41Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Let me take a more careful look. The proposed change will for sure prevent the crash, but it might be hiding the real problem. The invariant should be that all evaluation locations that don't represent a pass should have a parent. Ignoring the lack of parent may result in a whole branch of profiled locations to be skipped completely when the report is generated.",
        "createdAt": "2018-11-29T17:34:10Z",
        "updatedAt": "2018-11-29T17:34:10Z",
        "author": {
          "login": "smera"
        }
      },
      {
        "body": "Ok, I think I know what's going on. The location in question *is* an evaluation pass (looking at the screenshot @xoofx sent, the location is the total evaluation pass). So it does not have a parent by definition. The problem is that the evaluation pass is also small enough. I think in those cases the only option is to include it as is. So I think the change should be to do:\r\n\r\n`while (!pair.Key.IsEvaluationPass && IsTooSmall(pair.Value))`",
        "createdAt": "2018-11-29T17:56:04Z",
        "updatedAt": "2018-11-29T17:56:04Z",
        "author": {
          "login": "smera"
        }
      },
      {
        "body": "Great @smera I will open a PR with that fix! \ud83d\udc4d ",
        "createdAt": "2018-11-29T18:19:41Z",
        "updatedAt": "2018-11-29T18:19:41Z",
        "author": {
          "login": "xoofx"
        }
      }
    ]
  }
}