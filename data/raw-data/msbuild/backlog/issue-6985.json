{
  "number": 6985,
  "title": "MatchOnMetadata not recognized on evaluation item removes (outside of target elements)",
  "body": "### Steps to Reproduce\r\n```xml\r\n<Project>\r\n\r\n  <ItemGroup>\r\n    <I1 Include='a1' M1='1'/>\r\n    \r\n    <I2 Include='b1' M1='1'/>\r\n    <I2 Include='b2' M1='2'/>\r\n\r\n    <I2 Remove='@(I1)' MatchOnMetadata='M1'/>\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"Build\">\r\n    <Message Text=\"I2: %(I2.Identity) M1=%(I2.M1)\" />\r\n  </Target>\r\n\r\n</Project>\r\n```\r\nBuild the project with `msbuild foo.proj`\r\n\r\n### Expected Behavior\r\nBuild works and outputs:\r\n```\r\nMicrosoft (R) Build Engine version 17.0.0-preview-21515-03+d66a44095 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 10/22/2021 12:24:54 PM.\r\nProject \"E:\\delete\\play\\foo.proj\" on node 1 (default targets).\r\nBuild:\r\n  I2: b2 M1=2\r\nDone Building Project \"E:\\delete\\play\\foo.proj\" (default targets).\r\n\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n```\r\n\r\n### Actual Behavior\r\nBuild fails with output:\r\n```\r\nMicrosoft (R) Build Engine version 17.0.0-preview-21515-03+d66a44095 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 10/22/2021 12:27:25 PM.\r\nProject \"E:\\delete\\play\\foo.proj\" on node 1 (default targets).\r\nMSBUILD : error : Only item types may be referenced when removing with MatchOnMetadata. [E:\\delete\\play\\foo.proj]\r\nDone Building Project \"E:\\delete\\play\\foo.proj\" (default targets) -- FAILED.\r\n\r\n\r\nBuild FAILED.\r\n\r\n\"E:\\delete\\play\\foo.proj\" (default target) (1) ->\r\n  MSBUILD : error : Only item types may be referenced when removing with MatchOnMetadata. [E:\\delete\\play\\foo.proj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.08\r\n```\r\n\r\n### Analysis\r\nIt works inside targets.\r\nWhat's weird is that there's plenty of tests on remove with MatchOnMetadata outside of targets: https://github.com/dotnet/msbuild/blob/main/src/Build.OM.UnitTests/Definition/ProjectItem_Tests.cs#L2431\r\n\r\n### Versions & Configurations\r\nlatest",
  "state": "CLOSED",
  "createdAt": "2021-10-22T19:31:01Z",
  "updatedAt": "2024-02-21T14:11:17Z",
  "closedAt": "2021-11-01T15:16:13Z",
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "It looks like [the check](https://github.com/dotnet/msbuild/blob/bd00d6cba24d41efd6f54699c3fdbefb9f5034a1/src/Build/Evaluation/LazyItemEvaluator.RemoveOperation.cs#L26) specifies ProjectProperty and ProjectItem, whereas what actually gets passed in is a ProjectPropertyInstance and a ProjectItemInstance. *Instance don't extend *. I believe the tests actually use ProjectProperty and ProjectItem (haven't yet looked into why the difference) which is why they pass.\r\n\r\nI think https://github.com/dotnet/msbuild/pull/6995 is the right fix. Alternatively, we could make ProjectPropertyInstance and ProjectItemInstance extend ProjectProperty and ProjectItem respectively, but this seems simpler and just as valid.",
        "createdAt": "2021-10-27T22:17:30Z",
        "updatedAt": "2021-10-27T22:17:30Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}