{
  "number": 4361,
  "title": "Cross-targeting projects emit difficult to diagnose errors",
  "body": "### Steps to reproduce\r\n\r\nCreate a cross-targeting project that will emit an error on build.  See\r\n[xTargetError.zip](https://github.com/microsoft/msbuild/files/3163772/xTargetError.zip)\r\n\r\nBuild the project with various logger settings.\r\n\r\n### Expected  behavior\r\nSome log setting that provides enough context to identify which configuration of the project is actually emitting the error\r\n\r\n### Actual behavior\r\nNo logger setting provides sufficient data.  You need to look at a binlog, or more closely inspect a detailed or normal level log to correlate error to other log statements which might include the TargetFramework value.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\nMicrosoft (R) Build Engine version 16.1.67-preview+g13843078ee for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.1.67.33811\r\n\r\nOS info:\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\ndotnet\r\n\r\n### Suggested solution\r\n\r\nA potential solution for this would be to include global properties in the error spew where the project file is currently emitted.\r\n\r\nFor example, instead of \r\n```\r\nClass1.cs(6,8): error CS1029: #error: 'this is an error, but from which configuration?' [D:\\scratch\\xTargetError\\xTargetError.csproj]\r\n```\r\nEmit\r\n```\r\nClass1.cs(6,8): error CS1029: #error: 'this is an error, but from which configuration?' [D:\\scratch\\xTargetError\\xTargetError.csproj : TargetFramework=net46]\r\n```\r\n\r\nYou could make this opt-in with a Console Logger Parameter.\r\n\r\n/cc @stephentoub @nguerrera ",
  "state": "OPEN",
  "createdAt": "2019-05-09T20:10:49Z",
  "updatedAt": "2024-02-21T16:31:21Z",
  "closedAt": null,
  "author": {
    "login": "ericstj"
  },
  "labels": [
    "Area: Debuggability",
    "needs-design",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Yeah, I've been afraid to do change the text log output to put a TF in there, because I know people parse the logs (if you're reading this: that is **not** permission for **you** to parse the logs. Use the structured binary log if you want to do that!).\r\n\r\nOpt-in with a /clp: is probably better than nothing, but it's really not optimal. Maybe we could always opt into it from `dotnet build`, though, at least for the console logger?",
        "createdAt": "2019-05-09T20:29:59Z",
        "updatedAt": "2019-05-09T20:29:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Maybe we could always opt into it from dotnet build, though, at least for the console logger?\r\n\r\nI'm fine with this.",
        "createdAt": "2019-05-09T23:01:20Z",
        "updatedAt": "2019-05-09T23:01:20Z",
        "author": {
          "login": "nguerrera"
        }
      }
    ]
  }
}