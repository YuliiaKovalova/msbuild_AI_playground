{
  "number": 662,
  "title": "Copy task support for symlinks",
  "body": "This is a feature request from an internal Microsoft team. `Copy` currently supports hardlinks via `UseHardlinksIfPossible`. It could also support symlinks.\n\nOn Windows, this should probably have a nice error message when the build is run unelevated and the user doesn't have `SECreateSymbolicLinkPrivilege`.\n",
  "state": "CLOSED",
  "createdAt": "2016-05-26T23:10:28Z",
  "updatedAt": "2024-02-21T17:28:00Z",
  "closedAt": "2016-08-22T18:51:31Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Hello @rainersigwald. Is it ok if i take this issue?\n",
        "createdAt": "2016-06-20T18:43:29Z",
        "updatedAt": "2016-06-20T18:43:29Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Hi @maddin2016,\n\nThanks for your interest! Before beginning work, can you outline your design and testing strategy?\n\nThanks,\nMSBuild Team\n",
        "createdAt": "2016-06-21T22:22:44Z",
        "updatedAt": "2016-06-21T22:22:44Z",
        "author": {
          "login": "Sarabeth-Jaffe-Microsoft"
        }
      },
      {
        "body": "Also we thought it was worth noting on this issue (and others like it) we need to be compatible cross-platform. At minimum it would have to not break anything in xplat, but we'd be much happier if the solution had parity on mac/linux. If you do go forward with this, you might want to develop it in the xplat branch to begin with.\n\nThanks again for the interest!\n",
        "createdAt": "2016-06-22T04:58:58Z",
        "updatedAt": "2016-06-22T04:58:58Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Hi @Sarabeth-Jaffe-Microsoft, i think the important part here is to decide to create a hardlink or a symlink. Or neither one. Or if both values are true throw an error that user have to decide between.\nThen i would create unit and integration tests to test these beahvoirs.\nAnd of course create native Method for `CreateSymlink`\nhttps://msdn.microsoft.com/de-de/library/windows/desktop/aa363866%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396\n",
        "createdAt": "2016-06-22T14:02:09Z",
        "updatedAt": "2016-06-22T14:08:26Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "@maddin2016 Sounds good. What changes to the task parameters are you envisioning? Just adding a `bool CreateSymlink`, or something else?\n\nAnd yes, it'd be great if you could start this work in xplat and add the POSIX syscall to create a symlink as well as the Windows one.\n",
        "createdAt": "2016-06-22T14:20:23Z",
        "updatedAt": "2016-06-22T14:20:23Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Ok. Then I will start on xplat. Yes a bool. Or maybe an enum to bind `UseHardlinkOrSymlink`. I will see.\n",
        "createdAt": "2016-06-22T15:22:14Z",
        "updatedAt": "2016-06-22T16:58:50Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "@rainersigwald. How do you code in xpath. With VSCode? If open with code i got errors like `Unable to resole project reference C.\\...\\Microsoft.Build.csproj`. Or do you simply edit files with an editor.\n",
        "createdAt": "2016-06-23T08:39:59Z",
        "updatedAt": "2016-06-23T08:39:59Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "@maddin2016 If you've already run one command-line build, xplat should open and build just fine in Visual Studio 2015. If you're not seeing that something's wrong--can you be more precise about the errors.\n",
        "createdAt": "2016-06-23T13:02:16Z",
        "updatedAt": "2016-06-23T13:02:16Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "build tells me\n\n```\nc:\\Users\\martin\\Documents\\GitHub\\msbuild\\src\\dir.targets(53,3): error MSB4019: Das importierte Projekt \"c:\\Users\\martin\\Documents\\GitHub\\msbuild\\packages\\Nerdbank.GitVersioning\\1.4.19\\build\\dotnet\\Nerdbank.GitVersioning.target\ns\" wurde nicht gefunden. Vergewissern Sie sich, dass der Pfad in der <Import>-Deklaration korrekt und die Datei auf dem\n Datentr\u00e4ger vorhanden ist. [c:\\Users\\martin\\Documents\\GitHub\\msbuild\\src\\dirs.proj]\n```\n\nfor all the projects.\n",
        "createdAt": "2016-06-23T13:08:33Z",
        "updatedAt": "2016-06-23T13:15:37Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "In `msbuild\\packages` i found version `Nerdbank.GitVersioning.1.4.30`\n",
        "createdAt": "2016-06-23T13:16:38Z",
        "updatedAt": "2016-06-23T13:16:38Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Ahh. And how are you invoking build? It should work if you run `RebuildWithLocalMSBuild.cmd` (current name is confusing and will be fixed soonish). I thought that problem only affected some rarer scenarios. It's #694 and will be fixed by #693.\n",
        "createdAt": "2016-06-23T13:17:08Z",
        "updatedAt": "2016-06-23T13:17:08Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "`RebuildWithLocalMSBuild` fails with\n\n```\nC:\\Users\\scholzmartin\\Documents\\GitHub\\ms\nbuild\\dir.targets(87,5): error MS\nB3073: The command \"C:\\Users\\scholzmartin\\Documents\\GitHub\\msbuild\\bin\\Debug-NetCore\\Windows_NT\n_Deployment_Test\\co\nrerun C:\\Users\\scholzmartin\\Documents\\GitHub\\msbuild\\bin\\Debug-NetCore\\Windows_NT_Deployment_Test\\xunit.console.netcore.exe C:\\Users\\scholzmartin\\Documents\\GitHub\\m\nsbuild\\bin\\Debug-NetCo\nre\\Windows_NT_Deploym\nent_Test\\\\Microsoft.Build.Engine.UnitTests.dll \n -notrait category=nonwindowstests -noshadow -parallel none -notrait \"CrashesOnNetCore=true\" -xml C:\\Users\\scholzm\nartin\\Documents\\GitHub\\msbuild\\bin\\Debug-NetCore\\Windows_NT_De\nployment_Test\\Microsoft.Build.Engine.UnitTests.dll_core_TestResults.xml  -notrait category=nonwindow\nstests > C:\\Users\\scholzmar\ntin\\Documents\\GitHub\\msbuild\\bin\\Debug-NetCore\\Windows_NT_Deployment_Test\\Microsoft.Build.Engine.UnitTests.dll_core_stdout.txt\" exited with code 1. [C:\\Users\\scholzmart\nin\\Documents\\GitHub\\msb\nuild\\src\\XMakeBuildEngine\\UnitTests\\Microsoft.Build.Engine.UnitTests.csproj]\n\n** Build completed. Exit code: 1\n\nLocal build failed with error level 1\n```\n\nI'm on a Win10 Machine with .Net Core 1.0.0 RC2 installed\n",
        "createdAt": "2016-06-23T13:32:19Z",
        "updatedAt": "2016-06-23T13:32:19Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "So here step by step what i've done\n1. clone project\n2. checkout to xplat branch\n3. run `RebuildWithLocalMSBuild.cmd`\n\nIs this correct?\n",
        "createdAt": "2016-06-23T13:40:49Z",
        "updatedAt": "2016-06-23T13:40:49Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Yes, that's correct! Does the solution now open in VS? Getting a unit test failure isn't good but at least the build worked . . .\n",
        "createdAt": "2016-06-23T13:42:58Z",
        "updatedAt": "2016-06-23T13:42:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Unfortunately not :confused: \n",
        "createdAt": "2016-06-23T13:48:51Z",
        "updatedAt": "2016-06-23T13:48:51Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "I will Test it on another machine\n",
        "createdAt": "2016-06-23T13:49:32Z",
        "updatedAt": "2016-06-23T13:49:32Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Same on my second machine :confused: \n![msbuild](https://cloud.githubusercontent.com/assets/19551763/16311490/25472c5c-3971-11e6-9113-e45726566a7d.PNG)\n",
        "createdAt": "2016-06-23T16:34:53Z",
        "updatedAt": "2016-06-23T16:34:53Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "@maddin2016 Ok, no need to waste more time on this. You can work on the master branch, but please  keep cross-platform compatibility and multiple runtimes in mind--add comments and so on to ease the future xplat development.\n\nWe'll try to track down what's broken in xplat currently.\n",
        "createdAt": "2016-06-23T17:07:47Z",
        "updatedAt": "2016-06-23T17:07:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hi @rainersigwald. I have created an early preview where i use an `enum` to decide between `SymLink` and `HardLink`.\nCan you tell me if this goes in the right direction. Or maybe a second bool makes more sense. Because with enum type i have no idea how to map that attribute.`<xs:attribute name=\"UseHardOrSymlinksIfPossible\" type=\"msb:LinkType\" />` It convert this into an string, an not `LinkType`.\nHere is the commit\nhttps://github.com/maddin2016/msbuild/commit/a6adb621150e1f5de390ca8a53c3fcadf4869188\n",
        "createdAt": "2016-06-24T13:23:45Z",
        "updatedAt": "2016-06-24T13:23:45Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Thanks for checking in! Looking at the changes required, I think I'd prefer a second bool, for a few reasons:\n- Backward compatibility: existing projects use `UseHardlinksIfPossible`, so we shouldn't remove it (even if an enum is the better choice now).\n- Enum problems (as you've described)\n",
        "createdAt": "2016-06-24T14:57:40Z",
        "updatedAt": "2016-06-24T14:57:40Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Ok. Then I continue with second boolean. \n",
        "createdAt": "2016-06-24T15:03:18Z",
        "updatedAt": "2016-06-24T15:03:18Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "I'm ready with version with a second bool. One thing i would discuss is where i can place an error if `UseHardlinksIfPossible` and `UseSymbolicLinksIfPossible` are booh selected. For now i have placed it here https://github.com/maddin2016/msbuild/blob/copy-task-support-for-symlinks/src/XMakeTasks/Copy.cs#L313. But with that we get an error for every file. Is there any higher level where we can check if both values are selected. And second question is what kind of exception we should raise https://github.com/maddin2016/msbuild/blob/copy-task-support-for-symlinks/src/XMakeTasks/Copy.cs#L315\n",
        "createdAt": "2016-06-27T14:08:30Z",
        "updatedAt": "2016-06-27T14:08:30Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Can you put the error in [`ValidateInputs`](https://github.com/maddin2016/msbuild/blob/f9460037969c95b2af1fc9bc103d84c011ea50c4/src/XMakeTasks/Copy.cs#L513)? That also suggests that you should use `Log.LogErrorWithCodeFromResources` with a new resource named something like `Copy.OnlyOneLinkType`.\n",
        "createdAt": "2016-06-27T15:26:58Z",
        "updatedAt": "2016-06-27T15:28:09Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": ":see_no_evil: only a few scrolls down :sweat_smile: \n",
        "createdAt": "2016-06-28T06:24:04Z",
        "updatedAt": "2016-06-28T06:24:04Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "I've created a new [resource](https://github.com/maddin2016/msbuild/blob/copy-task-support-for-symlinks/src/XMakeTasks/Strings.resx#L288). But the message bucket is overflowed for Copy. Is the text ok?\n",
        "createdAt": "2016-06-28T07:41:11Z",
        "updatedAt": "2016-06-28T07:41:52Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "I don't actually know what to do in the case of bucket overflow! We'll have to figure that out. Let's just allocate a new block (looks like `MSB3891 - MSB3900` is the next free block) as `Task: Copy Overflow` and use MSB3891. We'll think about this harder in the pull request review, but I can't think of a better option at the moment.\n\nFor text, `Copy.ExactlyOneTypeOfDestination` is pretty similar to this situation (a spec error because two independent arguments are specified incompatibly). Let's riff off of that. Maybe something like\n\n```\nBoth \"{0}\" and \"{1}\" were specified in the project file. Please choose one or the other.\n```\n\n?\n\nMight also be good to rename the new resource to be consistent with that one: `Copy.ExactlyOneTypeOfLink`.\n",
        "createdAt": "2016-06-28T13:19:54Z",
        "updatedAt": "2016-06-28T13:19:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Ok. That sounds good\n",
        "createdAt": "2016-06-28T13:55:47Z",
        "updatedAt": "2016-06-28T13:55:47Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "I think i'm ready to pull. @rainersigwald  do you want to look over before pull request? https://github.com/maddin2016/msbuild/tree/copy-task-support-for-symlinks\n",
        "createdAt": "2016-06-28T17:37:40Z",
        "updatedAt": "2016-06-28T17:37:40Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Go ahead and submit the PR! That's usually a cleaner way to have discussion about details.\n",
        "createdAt": "2016-06-28T17:56:10Z",
        "updatedAt": "2016-06-28T17:56:10Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hi. Has  UseSymboliclinksIfPossible been implemented? Which version of msbuild has the feature?\n",
        "createdAt": "2016-10-06T08:55:07Z",
        "updatedAt": "2016-10-06T08:55:07Z",
        "author": {
          "login": "hickford"
        }
      },
      {
        "body": "@hickford: Yes, thanks to @maddin2016! It's available in VS \"15\" Preview 5's copy of MSBuild, which I just created a [release](https://github.com/Microsoft/msbuild/releases/tag/v15.1.237-preview5%2B944145c64c) for (so now you can see that from the commit view). This is of course prerelease. It should be in the final version of VS \"15\" . . . when that is released.\n",
        "createdAt": "2016-10-06T16:27:37Z",
        "updatedAt": "2016-10-06T16:27:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "FYI: junction points (for directories on local volumes only, though) would probably be less of an issue, because they don't require `SECreateSymbolicLinkPrivilege`. They've been around since Windows 2000 and are transparent to most applications. Hardlinks have been around even earlier, of course.\r\n\r\nOnly symbolic links were introduced much later (in Vista, I think) and require the privilege. They are reparse points (just like junctions) but can also point to remote shares for example. The only advantage of symbolic links over the other two is that they can post both as files or directories, whereas a hardlink only works for files on the same volume and junctions only work for directories on a local volume (but not necessarily the same volume).\r\n\r\nPS: I am commenting, because I was just looking at how I could possibly create a junction point using MSBuild on Windows without much trouble.",
        "createdAt": "2023-03-17T13:14:09Z",
        "updatedAt": "2023-03-17T13:14:48Z",
        "author": {
          "login": "exoosh"
        }
      }
    ]
  }
}