{
  "number": 11772,
  "title": "Expose API for determining the solution/project to build from a given directory",
  "body": "See https://github.com/dotnet/sdk/pull/48748#pullrequestreview-2799441448\n",
  "state": "OPEN",
  "createdAt": "2025-04-28T14:09:22Z",
  "updatedAt": "2025-04-29T13:51:18Z",
  "closedAt": null,
  "author": {
    "login": "Youssef1313"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: API",
    "Priority:2",
    "Area: NetSDK",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Question @Youssef1313: would this be superseded if we had a \"given a command line, return some object that represents the API calls that MSBuild.exe would make, which a caller can modify and then execute\" API? Or would you want to know the project/solution explicitly anyway?",
        "createdAt": "2025-04-28T14:17:12Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald One of our end goals is to be able to evaluate the project (or projects in case of solution) to retrieve properties like IsTestProject, IsTestingPlatformApplication etc.\n\nI'm not sure how the object that represents the API call will look like, and whether or not it fits the need above.\n\nWhat we do today in more details is:\n\n- If `--no-build` isn't specified, we run MSBuild passing `-target:_MTPBuild` (and propagating `--no-restore`, if specified).\n- Once the build is done, we create `ProjectCollection` with any global properties passed to `dotnet test`\n- For every project in the solution (or just a single project if that's what we are dealing with), we load it into the ProjectCollection, evaluate TargetFrameworks, and if non-empty, we get the individual TFMs and re-evaluate, then read properties such as IsTestProject, IsTestingPlatformApplication, and run ComputeRunArguments target, and then read RunCommand, RunArguments, and RunWorkingDirectory. From there we have the test executables and we run them.",
        "createdAt": "2025-04-28T14:29:28Z",
        "author": {
          "login": "Youssef1313"
        }
      }
    ]
  }
}