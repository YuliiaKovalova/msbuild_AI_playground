{
  "number": 2714,
  "title": "Some errors do not fail the build",
  "body": "There are errors reported by some tasks in my build but the overall build result reported by MSBuild is \"Build succeeded\".\r\n\r\nThe tasks that fail seem to vary. I can't isolate it to a simple repro project.\r\n\r\nCan you give me a hint on what might be causing this?\r\n\r\nIn the binary log I see a Copy task failing due to trying to copy an non-existing file, but later the build succeeds. The tasks run in the outer build but I think I've observed it with tasks in the inner or restore builds. The parameter ContinueOnError is not set for that task, the HideWarningsAndErrors property is false. \r\n\r\nWhat else could affect MSBuild to continue on error other than the parameter ContinueOnError?\r\nIs there some global setting that I need to check?\r\nCould running in parallel affect this (e.g. some race condition)?\r\n",
  "state": "CLOSED",
  "createdAt": "2017-11-10T17:08:34Z",
  "updatedAt": "2024-02-21T17:15:44Z",
  "closedAt": "2020-06-03T16:30:11Z",
  "author": {
    "login": "atanasa"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "See also https://github.com/Microsoft/msbuild/issues/2036",
        "createdAt": "2017-11-25T01:50:16Z",
        "updatedAt": "2017-11-25T01:50:16Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "It's a weakness of the MSBuild task model that tasks can _independently_ return true/false to indicate success (relevant to the rest of the build) and log errors (relevant to human understanding). This behavior can happen if the task returns `true` but logs an error anyway.\r\n\r\nIf you see this from tasks that are built into MSBuild, please file a new issue--we should never do that.",
        "createdAt": "2020-06-03T16:30:11Z",
        "updatedAt": "2020-06-03T16:30:11Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}