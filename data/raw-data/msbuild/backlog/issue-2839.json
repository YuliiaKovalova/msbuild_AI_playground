{
  "number": 2839,
  "title": "How do I use `Microsoft.Build` within my app to load a project?",
  "body": "I want to use the `Microsoft.Build` nuget package in a .NET Core app to load a project file. I do not have Visual Studio installed. I am only using the dotnet cli.\r\n\r\n### Steps to reproduce\r\n\r\nProject file\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build\" Version=\"15.5.180\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nDirectory contents:\r\n```\r\n/\r\n- my-app.csproj\r\n- Program.cs\r\n```\r\n\r\nProgram.cs:\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing Microsoft.Build.Evaluation;\r\nusing Microsoft.Build.Construction;\r\n \r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        if (args.Length != 1)\r\n        {\r\n            Console.WriteLine(\"Usage: dotnet behave <project>\");\r\n            return;\r\n        }\r\n \r\n        var proj = new Project(Path.GetFullPath(args[0]));\r\n        \r\n        Console.WriteLine(proj);\r\n    }\r\n}\r\n```\r\n\r\nCommand line\r\n```\r\ndotnet run ../other/other.csproj\r\n```\r\n\r\n### Expected  behavior\r\nI can load the CS project file\r\n\r\n### Actual behavior\r\n\r\nInitially:\r\n```\r\nUnhandled Exception: Microsoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.NET.Sdk' specified could not be found.  /path/to/other/other.csproj\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args) in E:\\A\\_work\\17\\s\\src\\Shared\\ProjectErrorUtilities.cs:line 440\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, Boolean throwOnFileNotExistsError) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2412\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2215\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2070\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 1006\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 794\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 2641\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 2634\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 2711\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 512\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 410\r\n   at Program.Main(String[] args) in /path/to/my-app/Program.cs:line 16\r\n```\r\n\r\nAfter setting `MSBuildSDKsPath=/usr/local/share/dotnet/sdk/2.1.3/Sdks` and `MSBuildExtensionsPath=/usr/local/share/dotnet/sdk/2.1.3`:\r\n```\r\nUnhandled Exception: Microsoft.Build.Exceptions.InvalidProjectFileException: The imported project \"/path/to/my-app/bin/Debug/netcoreapp2.0/Microsoft.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.  /usr/local/share/dotnet/sdk/2.0.0/Sdks/Microsoft.NET.Sdk/Sdk/Sdk.targets\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args) in E:\\A\\_work\\17\\s\\src\\Shared\\ProjectErrorUtilities.cs:line 440\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpression(String directoryOfImportingFile, ProjectImportElement importElement, StringunescapedExpression, Boolean throwOnFileNotExistsError, List`1& imports) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2641\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, Boolean throwOnFileNotExistsError) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2422\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2215\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2070\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 1109\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 2070\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 1175\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext) in E:\\A\\_work\\17\\s\\src\\Build\\Evaluation\\Evaluator.cs:line 794\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 2641\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 2634\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 2711\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\Project.cs:line 512\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion) in E:\\A\\_work\\17\\s\\src\\Build\\Definition\\ProjectCollection.cs:line 1122\r\n   at MSBuildDumper.Main(String[] args) in /path/to/my-app/Program.cs:line 18\r\n```\r\n\r\n### Environment data\r\n`dotnet --version`: 2.1.3\r\n\r\nOS info: Mac\r\n",
  "state": "OPEN",
  "createdAt": "2018-01-04T07:20:57Z",
  "updatedAt": "2024-02-21T16:35:08Z",
  "closedAt": null,
  "author": {
    "login": "firelizzard18"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@firelizzard18 You should set own SDK resolver or use ```https://github.com/Microsoft/msbuild/blob/497d797007410f43e1d7501b7d8254313b07b2a7/src/Build/BackEnd/Components/SdkResolution/DefaultSdkResolver.cs``` and put Sdk into correctly place. Also you can use SDK resolver from .NET CLI.",
        "createdAt": "2018-01-08T20:50:48Z",
        "updatedAt": "2018-01-08T20:50:48Z",
        "author": {
          "login": "mfilippov"
        }
      },
      {
        "body": "How would I set my own resolver? Looking through the source of `Microsoft.Build.Evaluation.Project`, I can find no way to alter how it resolves SDKs.",
        "createdAt": "2018-01-10T19:29:52Z",
        "updatedAt": "2018-01-10T19:29:52Z",
        "author": {
          "login": "firelizzard18"
        }
      },
      {
        "body": "I am having a similar problem, I am using `15.6.82` and attempting to load a project file that leverages an  SDK.\r\n\r\nMy project file looks like this:\r\n\r\n```\r\n<Project Sdk=\"Foo.Sdk/0.0.1-alpha0001\">\r\n</Project>\r\n```\r\n\r\nNote: As per https://github.com/Microsoft/msbuild/issues/2803 I have specified the package version hoping this will light up the nuget sdk resolver.\r\n\r\nIn the parent directory of this project file, I have a `Nuget.config` file that looks like this:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<configuration>\r\n  <packageSources> \r\n    <add key=\"local-packages\" value=\"local-packages\" />   \r\n    <add key=\"msbuild\" value=\"https://dotnet.myget.org/F/msbuild/api/v3/index.json\" />      \r\n  </packageSources>\r\n</configuration>\r\n```\r\n\r\nIn the \"local-packages\" folder I have the nuget package containing the SDK that I am wanting to be resolved.\r\n\r\nThe message I get when I try to load this project\r\n>  Message: Microsoft.Build.Exceptions.InvalidProjectFileException : The SDK 'Foo.Sdk' specified could not be found.  E:\\Repos\\Foo\\src\\Foo\\TestFoo\\AddsTargetAssembly.xml\r\n\r\nThe stack trace:\r\n> Result StackTrace:\t\r\nat Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject[T1](IElementLocation elementLocation, String resourceName, T1 arg0)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly, ISdkResolverService sdkResolverService, Int32 submissionId)\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName)\r\n\r\nI set the following environment variables at runtime before attempting to load the project using msbuild:\r\n\r\n- VSINSTALLDIR = \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\";\r\n- VisualStudioVersion = \"15.0\";\r\n- MSBuildSDKsPath = @\"C:\\Program Files\\dotnet\\sdk\\2.1.100\\Sdks\\\";\r\n\r\nWhat gives?",
        "createdAt": "2018-03-20T00:24:20Z",
        "updatedAt": "2018-03-20T00:52:25Z",
        "author": {
          "login": "dazinator"
        }
      },
      {
        "body": "I am not sure what has changed, but this has started working for me today. The nuget based sdk resolver suddenly finds and restored my sdk package. The only thing I can think of is either that a recent VS upgrade fixed it, or perhaps it was related to nuget cache.\r\n",
        "createdAt": "2018-03-25T15:33:41Z",
        "updatedAt": "2018-03-25T15:33:41Z",
        "author": {
          "login": "dazinator"
        }
      }
    ]
  }
}