{
  "number": 203,
  "title": "Could not load System.Diagnostics.Tracing, Version=4.0.0.0 on Linux",
  "body": "Hi, I'm trying to use the `Microsoft.Build.Mono.Debug` package hosted on https://www.myget.org/F/dotnet-buildtools/ to build my project on Linux. It dumps the following stack trace:\n\n```\nMicrosoft (R) Build Engine version 14.1.0.0\nCopyright (C) Microsoft Corporation. All rights reserved.\n\nBuild started 09/13/2015 12:09:02.\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.Diagnostics.Tracing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\nFile name: 'System.Diagnostics.Tracing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\n  at System.Threading.Tasks.Dataflow.ActionBlock`1[System.Action]..ctor (System.Action`1 action) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.Execution.BuildManager.BeginBuild (Microsoft.Build.Execution.BuildParameters parameters) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.CommandLine.MSBuildApp.BuildProject (System.String projectFile, System.String[] targets, System.String toolsVersion, System.Collections.Generic.Dictionary`2 globalProperties, Microsoft.Build.Framework.ILogger[] loggers, LoggerVerbosity verbosity, Microsoft.Build.CommandLine.DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, System.String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, System.IO.TextWriter preprocessWriter, Boolean debugger, Boolean detailedSummary) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.CommandLine.MSBuildApp.Execute (System.String commandLine) [0x00000] in <filename unknown>:0 \nThis is an unhandled exception in MSBuild Engine -- PLEASE OPEN A BUG AGAINST THE MSBUILD TEAM.\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.Diagnostics.Tracing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\nFile name: 'System.Diagnostics.Tracing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\n  at System.Threading.Tasks.Dataflow.ActionBlock`1[System.Action]..ctor (System.Action`1 action) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.Execution.BuildManager.BeginBuild (Microsoft.Build.Execution.BuildParameters parameters) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.CommandLine.MSBuildApp.BuildProject (System.String projectFile, System.String[] targets, System.String toolsVersion, System.Collections.Generic.Dictionary`2 globalProperties, Microsoft.Build.Framework.ILogger[] loggers, LoggerVerbosity verbosity, Microsoft.Build.CommandLine.DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, System.String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, System.IO.TextWriter preprocessWriter, Boolean debugger, Boolean detailedSummary) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.CommandLine.MSBuildApp.Execute (System.String commandLine) [0x00000] in <filename unknown>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.FileNotFoundException: Could not load file or assembly 'System.Diagnostics.Tracing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\nFile name: 'System.Diagnostics.Tracing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\n  at System.Threading.Tasks.Dataflow.ActionBlock`1[System.Action]..ctor (System.Action`1 action) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.Execution.BuildManager.BeginBuild (Microsoft.Build.Execution.BuildParameters parameters) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.CommandLine.MSBuildApp.BuildProject (System.String projectFile, System.String[] targets, System.String toolsVersion, System.Collections.Generic.Dictionary`2 globalProperties, Microsoft.Build.Framework.ILogger[] loggers, LoggerVerbosity verbosity, Microsoft.Build.CommandLine.DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, System.String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, System.IO.TextWriter preprocessWriter, Boolean debugger, Boolean detailedSummary) [0x00000] in <filename unknown>:0 \n  at Microsoft.Build.CommandLine.MSBuildApp.Execute (System.String commandLine) [0x00000] in <filename unknown>:0 \n```\n\n---\n\nSteps to repro:\n\n**0.** Install NuGet executable via `curl -sSL -o nuget.exe https://api.nuget.org/downloads/nuget.exe`\n**1.** Run `mono nuget.exe install Microsoft.Build.Mono.Debug -Version 14.1.0.0-prerelease -Source \"https://www.myget.org/F/dotnet-buildtools/\"` to install the package\n**2.** `mono Microsoft.Build.Mono.Debug.14.1.0.0-prerelease/lib/MSBuild.exe Foo.sln` gives the above stack trace.\n\nI have an ARM laptop, if that's relevant.\n\n**EDIT:** Just googled about my problem, I think it may have something to do with the [Microsoft.Tpl.Dataflow](https://forums.xamarin.com/discussion/11522/added-nuget-packages-now-android-app-wont-run-due-to-missing-system-diagnostics-tracing) dependency.\n",
  "state": "CLOSED",
  "createdAt": "2015-09-13T16:37:30Z",
  "updatedAt": "2024-02-21T17:30:45Z",
  "closedAt": "2015-09-13T17:17:16Z",
  "author": {
    "login": "jamesqo"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Which Mono version are you using? It works fine with Mono 4.0.4 here.\n",
        "createdAt": "2015-09-13T16:49:11Z",
        "updatedAt": "2015-09-13T16:49:11Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "Hmm, I think that may be the problem. I'm using 3.2.8.\n",
        "createdAt": "2015-09-13T16:56:25Z",
        "updatedAt": "2015-09-13T16:56:38Z",
        "author": {
          "login": "jamesqo"
        }
      },
      {
        "body": "Yeah, that's too old. Install the latest version from http://www.mono-project.com/download/\n",
        "createdAt": "2015-09-13T16:57:59Z",
        "updatedAt": "2015-09-13T16:57:59Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "Fixed it. Thanks for your help @akoeplinger!\n\n(For fellow ARMers: Most of the ARM builds on http://www.mono-project.com/ are still outdated, so I ended up following the instructions [here](https://github.com/dotnet/corefx/blob/master/Documentation/building/unix-instructions.md).)\n",
        "createdAt": "2015-09-13T17:17:16Z",
        "updatedAt": "2015-09-13T17:17:16Z",
        "author": {
          "login": "jamesqo"
        }
      },
      {
        "body": "> Most of the ARM builds on http://www.mono-project.com/ are still outdated\n\nHow did you come to this conclusion? I just checked and they should have the latest version.\n",
        "createdAt": "2015-09-13T17:21:43Z",
        "updatedAt": "2015-09-13T17:21:43Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "@akoeplinger I did an `apt-get update` and `apt-get upgrade`, my version is still 3.2.8. http://packages.ubuntu.com/search?keywords=mono-complete also says that the latest stable is 3.2.8; perhaps we're using different distributions?\n\nI've also tried the Xamarin packages (supposedly independent of distro), but they seem to have the same effect as the regular package.\n",
        "createdAt": "2015-09-13T18:01:43Z",
        "updatedAt": "2015-09-13T18:02:14Z",
        "author": {
          "login": "jamesqo"
        }
      },
      {
        "body": "@jamesqo Yes, the Ubuntu repositories only contain an older version of Mono, that's why I linked to the Mono download site above :) The steps in the [Linux install guide](http://www.mono-project.com/docs/getting-started/install/linux/) should give you the latest Mono release from the Xamarin repository. If you didn't get newer packages after adding them then something went wrong. Can you show me the commands you used to add the repo?\n",
        "createdAt": "2015-09-13T18:12:49Z",
        "updatedAt": "2015-09-13T18:13:01Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "@akoeplinger I solved this. Not quite sure why, but after running `apt-get upgrade` I noticed that 199 packages from Mono were being \"held back.\" After doing an `apt-get install mono-complete`, `mono --version` now reports 4.0.4.\n\nThanks, finally able to build my project now!\n",
        "createdAt": "2015-09-13T18:32:20Z",
        "updatedAt": "2015-09-13T18:37:13Z",
        "author": {
          "login": "jamesqo"
        }
      },
      {
        "body": "@jamesqo Ah, yeah, the reason is probably because some packages were added/removed in Mono 4.x which is why apt doesn't just upgrade without explicit action.\n",
        "createdAt": "2015-09-13T18:39:44Z",
        "updatedAt": "2015-09-13T18:39:44Z",
        "author": {
          "login": "akoeplinger"
        }
      }
    ]
  }
}