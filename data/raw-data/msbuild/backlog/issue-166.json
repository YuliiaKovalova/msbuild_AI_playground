{
  "number": 166,
  "title": "Multi-core Node Process Priority",
  "body": "From a customer bug:\nWhen running msbuild with parameter /m for multicore usage with low priority, (e.g. `start \"\" /LOW /B /WAIT msbuild /m [target]`) only the first msbuild.exe node is running with low priority. The spawned nodes run with normal priority.\n\nExpected behavior: All spawned msbuild nodes run with main msbuild priority, in this example LOW\n\nUltimately we would like to do this, or even add a /priority:low switch to MSBuild itself for scenarios when CPU usage is very high on long builds and people are still wanting to use their machine.\n\nOne \"gotcha\" is node reuse. If the node is already around and \"Normal\", this will likely complicate things (or make the scenario not work).\n",
  "state": "CLOSED",
  "createdAt": "2015-08-26T18:48:04Z",
  "updatedAt": "2024-02-21T17:30:57Z",
  "closedAt": "2018-03-14T17:07:46Z",
  "author": {
    "login": "AndyGerlicher"
  },
  "labels": [
    "help wanted",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "As alternative (also to fix the node reuse gotcha), a registry or environment variable could control default msbuild process priority. \nBut the registry setting CpuPriorityClass=5 in\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\msbuild.exe\\PerfOptions\ndoes not work for spawned msbuild nodes.\n",
        "createdAt": "2015-08-26T20:01:27Z",
        "updatedAt": "2015-08-26T20:01:57Z",
        "author": {
          "login": "informatorius"
        }
      },
      {
        "body": "From https://github.com/Microsoft/msbuild/issues/1055#issuecomment-248671465:\n\n> Looks like the bug is on line 368 of src/XMakeBuildEngine/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs. Instead of setting the value to NORMAL_PRIORITY_CLASS, just set it to zero.\n\nThanks for finding that @phkelly.\n",
        "createdAt": "2016-09-30T18:25:37Z",
        "updatedAt": "2016-09-30T18:25:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This issue has been causing us problems for a while when running tests on our local machines. Since it's such a simple fix I've created a custom \"FrankenMSBuild\" to get around it. To make it work I had to copy files such as the Tracker.exe, the numbered folders and the MSBuild.exe.config file (where I then remove the 'Microsoft.Build' entry) from the official MSBuild folder, a bit sketchy to say the least. Having an official fix would thus be ideal. What's preventing this from happening? Would it help if I offered to contribute this one line change? Seems a bit silly but if that helps to move forward on this issue I can certainly do that.",
        "createdAt": "2018-02-28T12:49:32Z",
        "updatedAt": "2018-02-28T12:49:32Z",
        "author": {
          "login": "Fragmachine"
        }
      },
      {
        "body": "@Fragmachine Feel free to open up a PR, especially if you've tested it locally for a while.\r\n\r\nI don't think I'm worried enough about the `/nodereuse:true` case to block the straightforward fix. If we get complaints, we can consider later adding process priority to the node handshake.",
        "createdAt": "2018-02-28T16:23:52Z",
        "updatedAt": "2018-02-28T16:23:52Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Great! However, I will have to wait for legal authorization from EA before I can do the PR. That might take a while ...\r\n\r\nAs an aside, what's the reason for reusing nodes? From my experience that's a source of unnecessary headaches (mainly due to persistent file handle locks but also VS upgrades etc. complaining about running MSBuild instances). Running with '/nr:false' doesn't seem to have any downsides, in fact it works much better.",
        "createdAt": "2018-03-01T10:55:45Z",
        "updatedAt": "2018-03-01T10:55:45Z",
        "author": {
          "login": "Fragmachine"
        }
      },
      {
        "body": "Running without node reuse can slow the incremental-build case in common circumstances, because of the overhead of starting a process and JITing code for each worker. For fast builds, that can dominate over doing-useful-work time.",
        "createdAt": "2018-03-01T17:56:57Z",
        "updatedAt": "2018-03-01T17:56:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Allright, I have the go-ahead to push this change so feel free to assign the bug to me :-)",
        "createdAt": "2018-03-06T08:27:04Z",
        "updatedAt": "2018-03-06T08:27:04Z",
        "author": {
          "login": "Fragmachine"
        }
      },
      {
        "body": "Not sure where this belong so I'll put it here. \r\nWhen building the repository out-of-the-box according to the readme file I run into this error,\r\n\r\n`XUnit : warning : D:\\github\\msbuild\\artifacts\\2\\Debug\\TestResults\\Microsoft.Build.Engine.UnitTests_netcoreapp2.1_x64.log [netcoreapp2.\r\n1|x64] [D:\\github\\msbuild\\src\\Build.UnitTests\\Microsoft.Build.Engine.UnitTests.csproj]\r\nXUnit : error : Tests failed on platforms: net46|x86, netcoreapp2.1|x64 [D:\\github\\msbuild\\src\\Build.UnitTests\\Microsoft.Build.Engine.\r\nUnitTests.csproj]`\r\n\r\nI've attached the log if that helps. This is not a new issue, I got the same thing during my previous build a couple of weeks ago. For now I'm going to ignore it since it's not related to any changes I've made. \r\n\r\n[Microsoft.Build.Engine.UnitTests_netcoreapp2.1_x64.log](https://github.com/Microsoft/msbuild/files/1784559/Microsoft.Build.Engine.UnitTests_netcoreapp2.1_x64.log)\r\n",
        "createdAt": "2018-03-06T10:33:26Z",
        "updatedAt": "2018-03-06T10:41:08Z",
        "author": {
          "login": "Fragmachine"
        }
      },
      {
        "body": "PR requested. What happens now? How long until we might see this in a VS Preview build?",
        "createdAt": "2018-03-06T13:21:55Z",
        "updatedAt": "2018-03-06T13:21:55Z",
        "author": {
          "login": "Fragmachine"
        }
      },
      {
        "body": "We'll get two core-team reviews of your PR and merge it to master, which will ship with 15.7--I'm not sure if it's too late for Preview 1 or it'll be a later preview.",
        "createdAt": "2018-03-06T19:48:41Z",
        "updatedAt": "2018-03-06T19:48:41Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Sounds great, can't wait!",
        "createdAt": "2018-03-07T12:10:08Z",
        "updatedAt": "2018-03-07T12:10:08Z",
        "author": {
          "login": "Fragmachine"
        }
      }
    ]
  }
}