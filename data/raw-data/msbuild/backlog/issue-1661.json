{
  "number": 1661,
  "title": "Almost empty Strings.resx fails GenerateResources in .NET Core MSBuild",
  "body": "Copy from https://github.com/dotnet/buildtools/issues/1315\r\n\r\nI'm writing [this PR](https://github.com/dotnet/corefx/pull/15646), and if you look at the OSX and Linux CI builds they fail with the following error, but the Windows build doesn't:\r\n\r\n```\r\n..../tools/Microsoft.Common.CurrentVersion.targets(2718,5): error MSB3554: Cannot write to the output file \"..../bin/obj/Unix.AnyCPU.Debug/System.Data.Odbc/netcoreapp/Resources.Strings.resources\". Positive number required. [..../src/System.Data.Odbc/src/System.Data.Odbc.csproj]\r\n..../tools/Microsoft.Common.CurrentVersion.targets(2718,5): error MSB3554: Parameter name: bufferSize [.../src/System.Data.Odbc/src/System.Data.Odbc.csproj]\r\n```\r\n\r\nFor it to work, I just have to add at the very end of the Strings.resx file one `<data>` element as:\r\n\r\n```xml\r\n  <data name=\"something\" xml:space=\"preserve\"><value>something.</value></data>\r\n```\r\n\r\nHaving different behavior makes writing cross-platform code more difficult.\r\n\r\nThanks!",
  "state": "CLOSED",
  "createdAt": "2017-02-02T19:30:26Z",
  "updatedAt": "2024-02-21T17:22:12Z",
  "closedAt": "2017-06-23T21:49:36Z",
  "author": {
    "login": "colltoaction"
  },
  "labels": [
    ".NET Core",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "This happens to me on Windows as well when doing things from the command-line. So the MSBuild that is part of the CLI has this bug, regardless of OS.",
        "createdAt": "2017-02-02T22:57:14Z",
        "updatedAt": "2017-02-02T22:57:14Z",
        "author": {
          "login": "Petermarcu"
        }
      },
      {
        "body": "This will be an issue for anyone trying to do CI for their projects using the CLI.",
        "createdAt": "2017-02-02T23:02:02Z",
        "updatedAt": "2017-02-02T23:02:02Z",
        "author": {
          "login": "Petermarcu"
        }
      },
      {
        "body": "Per .NET Core Tooling standup (JoC and @MattGertz), since there's a workaround this doesn't meet the RTW bar.",
        "createdAt": "2017-02-03T00:46:02Z",
        "updatedAt": "2017-02-03T00:46:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I updated the title to make sure people know this is on all OS's from the command line.",
        "createdAt": "2017-02-03T02:09:13Z",
        "updatedAt": "2017-02-03T02:09:13Z",
        "author": {
          "login": "Petermarcu"
        }
      },
      {
        "body": "NP. I got confused because of our own CI setup.",
        "createdAt": "2017-02-03T02:11:34Z",
        "updatedAt": "2017-02-03T02:11:34Z",
        "author": {
          "login": "colltoaction"
        }
      },
      {
        "body": "Also being hit in Roslyn. For example, https://github.com/dotnet/roslyn/pull/18285 failed with it on this job: https://ci.dot.net/job/dotnet_roslyn/job/master/job/ubuntu_16_debug_prtest/1057/",
        "createdAt": "2017-03-30T18:20:55Z",
        "updatedAt": "2017-03-30T18:21:05Z",
        "author": {
          "login": "tannergooding"
        }
      },
      {
        "body": "Using [AlmostEmptyResx.zip](https://github.com/Microsoft/msbuild/files/1099121/AlmostEmptyResx.zip), I can reproduce this on my machine with .NET Core SDK 1.0.4 (MSBuild 15.1.1012.6693), but not with .NET Core SDK 2.0.0-preview2-006479 (MSBuild 15.3.388.41745).\r\n\r\nMSBuild didn't change, so I bet this is because the new SDK ships with the fix for https://github.com/dotnet/corefx/pull/19190.\r\n\r\nPlease comment here if you see this on a 2.0 `dotnet` and we can reopen and investigate.",
        "createdAt": "2017-06-23T21:49:36Z",
        "updatedAt": "2017-06-23T21:49:36Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}