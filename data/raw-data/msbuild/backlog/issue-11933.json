{
  "number": 11933,
  "title": "`add package` command doesn't properly retain XML comments",
  "body": "@brettfo commented on [Wed, 21 May 2025 17:25:02 GMT](https://github.com/NuGet/Home/issues/14329)\r\n### NuGet Product Used\n\ndotnet.exe\n\n### Product Version\n\n.NET SDK 9.0.204\n\n### Worked before?\n\nNo\n\n### Impact\n\nIt bothers me. A fix would be nice\n\n### Repro Steps & Context\n\nCreate a `.csproj` with the following contents:\n\n``` xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <TargetFramework>net9.0</TargetFramework>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.1\" /><!-- some comment -->\n  </ItemGroup>\n</Project>\n```\n\nRun the following command:\n\n``` bash\ndotnet add package Serilog --version 4.3.0\n```\n\nResult:\n\nThe trailing comment on the `Newtonsoft.Json` line is moved to the newly added package.\n\n``` xml\n<ItemGroup>\n  <PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.1\" />\n  <PackageReference Include=\"Serilog\" Version=\"4.3.0\" /><!-- some comment -->\n</ItemGroup>\n```\n\nExpected:\n\nThe trailing comment on the `Newtonsoft.Json` line should have stayed put.\n\n``` xml\n<ItemGroup>\n  <PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.1\" /><!-- some comment -->\n  <PackageReference Include=\"Serilog\" Version=\"4.3.0\" />\n</ItemGroup>\n```\n\n### Verbose Logs\n\n```shell\n\n```",
  "state": "OPEN",
  "createdAt": "2025-05-30T21:15:04Z",
  "updatedAt": "2025-05-31T07:05:48Z",
  "closedAt": null,
  "author": {
    "login": "nkolev92"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "comments": {
    "nodes": [
      {
        "body": "@zivkan commented on [Thu, 22 May 2025 06:58:37 GMT](https://github.com/NuGet/Home/issues/14329#issuecomment-2900131214)\r\nI've been working on relevant code recently, so I'm fairly confident that NuGet's code that adds the package reference is here: https://github.com/NuGet/NuGet.Client/blob/a046e80d8df305f2b5ade060032fe0f5a1042256/src/NuGet.Core/NuGet.CommandLine.XPlat/Utility/MSBuildAPIUtility.cs#L426-L434\n\nHowever, NuGet is just calling MSBuild APIs, in particular `ProjectItemGroupElement.AddItem`. So, unless NuGet stops and does our own XML parsing & writing just for this issue, I don't think it can be fixed without dotnet/msbuild making the change.",
        "createdAt": "2025-05-30T21:15:05Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "@jebriede commented on [Fri, 23 May 2025 22:06:50 GMT](https://github.com/NuGet/Home/issues/14329#issuecomment-2905919245)\r\nI was able to repro the issue as described. The comment gets moved to the newly added package if the newly added package is inserted after the package reference with the inline comment.",
        "createdAt": "2025-05-30T21:15:05Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "@nkolev92 commented on [Thu, 29 May 2025 21:22:58 GMT](https://github.com/NuGet/Home/issues/14329#issuecomment-2920620430)\r\nTeam Triage: As @zivkan suggested, this is an MSBuild API that we're calling. \n\nWe'll move the issue there.",
        "createdAt": "2025-05-30T21:15:06Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "I think it could be fixed in [ProjectElementContainer.AddToXml(ProjectElement)](https://github.com/dotnet/msbuild/blob/585b8739176cab9b428d90ecb50d5361763ed68e/src/Build/Construction/ProjectElementContainer.cs#L492).  Add a heuristic such that, if the reference element is immediately followed by a series of XML nodes, each of which\n\n- does not contain any line breaks\n- is whitespace, a comment, or a processing instruction\n\nthen insert the new element after those nodes.  Thus, if the reference element is followed by a comment in the same line, then AddToXml would assume that the comment describes the reference element, and it would insert the new element after the comment; but if the comment follows in a separate line, then AddToXml would assume that the comment describes whatever comes after the comment, and it would insert the new element between the reference element and the comment.\n\nThis change might however require some adjustment in how AddToXml indents the new element.",
        "createdAt": "2025-05-31T07:05:47Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}