{
  "number": 4302,
  "title": "Indicate source of explicit/autogenerated binding redirect conflict in error",
  "body": "In cases where there are assembly binding redirect conflicts, the diagnostic messages you get from msbuild can be pretty bad and sometimes provide inaccurate/incorrect advice. For example, I'm troubleshooting a scenario right now where each binding redirect error gives me advice that just leads to the other error:\r\n\r\n```MSB3276: Found conflicts between different versions of the same dependent assembly. Please set the \"AutoGenerateBindingRedirects\" property to true in the project file```\r\n\r\nThen if as advised, I set the property:\r\n\r\n```The explicit binding redirect on \"Microsoft.Build.Framework, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" conflicts with an autogenerated binding redirect. Consider removing it from the application configuration file or disabling autogenerated binding redirects.```\r\n\r\nI don't necessarily view either of these errors as msbuild defects - I think they're probably both correct representations of whatever is going on when I'm trying to compile msbuild locally. I wanted to file this issue though because I think these are bad diagnostic messages and they make it hard to debug the problem.\r\n\r\nAs far as I can tell there's no guidance given here on where the redirects that conflict are defined, or where the conflicting versions are referenced. When I look around for info on these errors I can't find any information on how you would figure that out, either, just lots of people talking about turning the auto generate mode on or off.\r\n\r\nSo as a starting point, I think that \"please set\" message might be inappropriate since that implies it will fix it, when it may just create a different issue - we're encouraging people to just set that property on when that may be masking some other root cause they could address.\r\n\r\nMore importantly though there needs to be some way to get insight into where the binding redirects are coming from, preferably described in the error message so people can actually find it. The diagnostic info is definitely not something you will find by searching for MSB3276 on google (or in a brief search through the msbuild docs).\r\n\r\nCould we expand msbuild to, for example:\r\n* For the first one, list out all the conflicting versions and where those references are from\r\n* For the second one, list out the source of the explicit binding redirects along with the autogenerated redirect",
  "state": "OPEN",
  "createdAt": "2019-04-11T15:57:19Z",
  "updatedAt": "2024-02-21T16:31:33Z",
  "closedAt": null,
  "author": {
    "login": "kg"
  },
  "labels": [
    "help wanted",
    "Area: Debuggability",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "> * For the first one, list out all the conflicting versions and where those references are from\r\n\r\nTracked by #608.\r\n\r\n> * For the second one, list out the source of the explicit binding redirects along with the autogenerated redirect\r\n\r\nYes, definitely. Possibly just linking the path of and line number in `app.config` would communicate this nicely (but I don't know if we currently track that). Let's use this item for that.",
        "createdAt": "2019-04-11T16:02:50Z",
        "updatedAt": "2019-04-11T16:02:50Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Has this (nearly 4-year old) issue been resolved? I am currently running into the same problem and have ping-ponged back and forth as @kg has described. How do I even determine which package is is responsible for the explicit binding redirect? I have looked through the dependencies of all of my NuGet packages, and I don't see a dependency on the later version of System.Net.Http.",
        "createdAt": "2023-03-08T03:11:53Z",
        "updatedAt": "2023-03-08T03:11:53Z",
        "author": {
          "login": "m-siscogit"
        }
      }
    ]
  }
}