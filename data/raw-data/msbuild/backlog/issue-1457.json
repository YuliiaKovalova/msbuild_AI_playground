{
  "number": 1457,
  "title": "Preprocessed output of a new project that imports a file with an xmlns is littered with xmlns",
  "body": "When the entry-point project doesn't specify an `xmlns` (as new \"clean\" templates don't), but it imports a file that uses the `xmlns` (like, say, `Microsoft.Common.targets`), the resultant preprocessed output puts an `xmlns=` attribute on _every_ known-to-MSBuild element in the output.\r\n\r\nI noticed this on a new-web-template project where it's amazingly verbose, but here's a minimal repro:\r\n\r\n```\r\nS:\\work\\xmlns>type *proj\r\n\r\nimported.proj\r\n\r\n\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup />\r\n</Project>\r\n\r\nproject.proj\r\n\r\n\r\n<Project>\r\n  <Import Project=\"imported.proj\" />\r\n</Project>\r\n\r\nS:\\work\\xmlns>S:\\msbuild\\bin\\Bootstrap\\15.0\\Bin\\MSBuild.exe /pp project.proj\r\n<?xml version=\"1.0\" encoding=\"IBM437\"?>\r\n<!--\r\n============================================================================================================================================\r\nS:\\work\\xmlns\\project.proj\r\n============================================================================================================================================\r\n-->\r\n<Project>\r\n  <!--\r\n============================================================================================================================================\r\n  <Import Project=\"imported.proj\">\r\n\r\nS:\\work\\xmlns\\imported.proj\r\n============================================================================================================================================\r\n-->\r\n  <PropertyGroup xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" />\r\n  <!--\r\n============================================================================================================================================\r\n  </Import>\r\n\r\nS:\\work\\xmlns\\project.proj\r\n============================================================================================================================================\r\n-->\r\n</Project>\r\n```",
  "state": "OPEN",
  "createdAt": "2016-12-08T16:32:01Z",
  "updatedAt": "2024-02-21T16:37:50Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Debuggability",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Consider for Next Major Version"
  },
  "comments": {
    "nodes": [
      {
        "body": "This seems to break using the preprocessed file to build.  I get this error:\r\n\r\n> C:\\Users\\daplaist\\Documents\\Visual Studio 2017\\Projects\\ConsoleApp30\\ConsoleApp30\\msbuild.xml(26,18): error MSB4066: The attribute \"xmlns\" in element <PropertyGroup> is unrecognized",
        "createdAt": "2017-02-28T02:53:56Z",
        "updatedAt": "2017-02-28T02:53:56Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "That's unfortunate, but IMO doesn't raise the priority on this much. Building using the preprocessed file rarely works for other reasons.",
        "createdAt": "2017-02-28T15:27:01Z",
        "updatedAt": "2017-02-28T15:27:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Building using the preprocessed file rarely works for other reasons.\r\n\r\nSo I discovered after fixing the `xmlns` :-)",
        "createdAt": "2017-02-28T19:18:51Z",
        "updatedAt": "2017-02-28T19:18:51Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "Took a quick look at this this morning. Sadly, the easy fixes I tried didn't work.\r\n\r\nI tried updating `Preprocess()` to always add the namespace to the `<Project>` element, both by just adding an attribute to it, and by using\r\n\r\n```c#\r\n            XmlSchema schema = new XmlSchema();\r\n            schema.Namespaces.Add(\"xmlns\", XMakeAttributes.defaultXmlNamespace);\r\n            outerDocument.Schemas.Add(schema);\r\n```\r\n\r\nNeither corrected the problem.\r\n",
        "createdAt": "2017-04-17T17:40:19Z",
        "updatedAt": "2017-04-17T17:40:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This isn't going to make it for 15.3.",
        "createdAt": "2017-06-07T15:43:13Z",
        "updatedAt": "2017-06-07T15:43:13Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}