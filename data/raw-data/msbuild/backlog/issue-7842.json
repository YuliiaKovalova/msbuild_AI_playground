{
  "number": 7842,
  "title": "Bad error when CodeTaskFactory has a mismatch between TaskName and class name",
  "body": "### Issue Description\r\n\r\nThis was an experiment to use the inline task and in-project C# files (net6.0) to process and provide property information during the build process.\r\n\r\nWith an inline task, and using the RoslynCodeTaskFactory, the task's file-based source code (a class) appears to cause an error on build using Visual Studio 2022 (Debug--AnyCPU).\r\n\r\nError:\r\nhttps://docs.microsoft.com/en-us/visualstudio/msbuild/errors/msb4175\r\n\r\n```\r\nThe task factory \"RoslynCodeTaskFactory\" could not be loaded from the assembly \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\amd64\\Microsoft.Build.Tasks.Core.dll\". The task factory must return a value for the \"TaskType\" property.\r\n```\r\nNo other error messages are provided in VS or build output.\r\n\r\nThere are other ways to process and provide property information (like version details), however, this was only intended as a experiment to verify the capabilities and features discussed in the msbuild docs.\r\n\r\n### Steps to Reproduce\r\n\r\nUsing the generated console project (net6.0) with two files--the Program.cs and BuildInformation.cs.\r\n\r\nAlso added project references Microsoft.Build.Framework  and Microsoft.Build.Utilities.Core from NuGet.\r\n\r\nThere is only the one console project in the test solution.\r\n\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n</PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build.Framework\" Version=\"17.2.0\" CopyLocal=\"false\" Publish=\"false\" ExcludeAssets=\"runtime\" />\r\n    <PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"17.2.0\" CopyLocal=\"false\" Publish=\"false\" ExcludeAssets=\"runtime\" />\r\n  </ItemGroup>\r\n\r\n  <!-- inline task. -->\r\n  <UsingTask\r\n    TaskName=\"GetCalculatedVersion\"\r\n    TaskFactory=\"RoslynCodeTaskFactory\"\r\n    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\">\r\n    <ParameterGroup>\r\n      <BuildVersion ParameterType=\"System.String\" Output=\"true\" />\r\n    </ParameterGroup>\r\n    <Task>\r\n      <Using Namespace=\"MyInlineCode\" />\r\n      <Code Type=\"Class\" Source=\"BuildInformation.cs\" Language=\"cs\"></Code>\r\n    </Task>\r\n  </UsingTask>\r\n\r\n  <Target Name=\"GetBuildVersion\" BeforeTargets=\"BeforeBuild\">\r\n    <Message Importance=\"high\" Text=\"Running Target GetBuildVersion...\" />\r\n    <GetCalculatedVersion>\r\n      <Output TaskParameter=\"BuildVersion\" PropertyName=\"MyNewVersion\" />\r\n    </GetCalculatedVersion>\r\n    <Message Importance=\"high\" Text=\"... Finished Target GetBuildVersion -- '$(MyNewVersion)'.\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\n```C#\r\n// BuildInformation.cs\r\nnamespace MyInlineCode\r\n{\r\n    using Microsoft.Build.Framework;\r\n    using Microsoft.Build.Utilities;\r\n    using System;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.IO;\r\n    using System.Linq;\r\n    using System.Text;\r\n\r\n    /// <summary>\r\n    /// Represents the project's build information.\r\n    /// </summary>\r\n    public class BuildInformation : Microsoft.Build.Utilities.Task\r\n    {\r\n        #region static properties\r\n        public static readonly Int32 Major = 0;\r\n\r\n        public static readonly Int32 Minor = 1;\r\n\r\n        public static readonly Int32 Build = (DateTime.Now - new DateTime(2000, 01, 01)).Days;\r\n\r\n        public static readonly Int32 Revision = (Int32)((DateTime.Now.TimeOfDay.TotalSeconds) / 2);\r\n\r\n        public static readonly Version Version = new(Major, Minor, Build, Revision);\r\n        #endregion static properties\r\n\r\n        public override bool Execute()\r\n        {\r\n            // task output\r\n            String BuildVersion = Version.ToString();\r\n\r\n            Log.LogMessage(MessageImportance.High, $\"Build version set to {BuildVersion}\");\r\n\r\n            return !Log.HasLoggedErrors;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```C#\r\n// Program.cs\r\nnamespace BuildExperiment\r\n{\r\n   public class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"This is a build experiment.\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Assessment\r\n\r\nThis appears to be unrelated to issue #7730, as this source file provides a class and is not a code fragment.\r\n\r\n### Expected Behavior\r\n\r\nThe expected behavior is a successful build with the text provided by the inline task and the target displayed via output messages to verify a working experiment.\r\n\r\n### Versions & Configurations\r\n\r\nOS is Windows 10 Pro 21H2 19044.1766; Windows Feature Experience Pack 120.2212.4180.0\r\n\r\nand using ...\r\n\r\nMicrosoft.NET SDK Version: 6.0.302\r\n\r\nMicrosoft (R) Build Engine version 17.2.1+52cd2da31 for .NET Framework\r\n17.2.1.25201\r\n\r\nMicrosoft Visual Studio Community 2022 (64-bit) - Current - Version 17.2.6\r\n\r\nVanilla community installation with no special configuration, etc.\r\n",
  "state": "CLOSED",
  "createdAt": "2022-07-21T16:58:54Z",
  "updatedAt": "2024-02-21T14:08:04Z",
  "closedAt": "2023-08-04T07:50:55Z",
  "author": {
    "login": "Mal-Ayers"
  },
  "labels": [
    "bug",
    "Area: Debuggability",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "jrdodds"
      }
    ]
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "@Mal-Ayers I investigated this issue. My findings follow:\r\n\r\n- The error message ('The task factory \"RoslynCodeTaskFactory\" could not be loaded...') is incorrect and misleading and the real error is not reported.\r\n- The class name and the task name must match. The `UsingTask` uses the task name of `GetCalculatedVersion` to look up the task and fails because the task is named `BuildInformation`. (That the class and task names must match is noted in the documentation for the [Code element](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-inline-tasks?view=vs-2022#code-element).)\r\n- The `UsingTask` defines an output parameter and the matching property is not provided on the class.\r\n\r\nI modified your code to test.\r\n\r\nIn the project file, change the task name:\r\n```\r\n  <UsingTask\r\n    TaskName=\"BuildInformation\"\r\n```\r\n```\r\n    <BuildInformation>\r\n      <Output TaskParameter=\"BuildVersion\" PropertyName=\"MyNewVersion\" />\r\n    </BuildInformation>\r\n```\r\nIn BuildInformation.cs, add the output property:\r\n```\r\n        public string BuildVersion { get; set; }\r\n\r\n        public override bool Execute()\r\n        {\r\n            // task output\r\n            BuildVersion = Version.ToString();\r\n\r\n```\r\n\r\nThere should be a separate issue specifically for the error handling and messaging. (Edit: An issues exists. See #6419.)",
        "createdAt": "2022-07-28T14:11:38Z",
        "updatedAt": "2022-08-04T17:27:12Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "> * The error message ('The task factory \"RoslynCodeTaskFactory\" could not be loaded...') is incorrect and misleading and the real error is not reported.\r\n\r\nI just expanded #6419 to cover this case (I agree it's the same root cause with a different task factory).\r\n\r\nI'm also changing this bug to be about the suberror `The task factory must return a value for the \"TaskType\" property.`, which wouldn't be clear even if we correctly said \"The CodeTaskFactory failed with error X\".",
        "createdAt": "2022-08-04T16:15:48Z",
        "updatedAt": "2022-08-04T16:15:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Please assign this issue to me.",
        "createdAt": "2022-08-04T20:04:50Z",
        "updatedAt": "2022-08-04T20:04:50Z",
        "author": {
          "login": "jrdodds"
        }
      }
    ]
  }
}