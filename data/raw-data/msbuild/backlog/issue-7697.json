{
  "number": 7697,
  "title": "-targets command-line option doesn't work with solution file",
  "body": "\r\n### Issue Description\r\n\r\n-targets command-line option doesn't work when building a solution\r\n\r\n### Steps to Reproduce\r\n\r\nMSBuild.exe -targets SomeSolution.sln\r\n\r\n### Expected Behavior\r\nList the available targets in each project\r\n\r\n### Actual Behavior\r\n\r\nBuilds the solution\r\n\r\n\r\n### Versions & Configurations\r\n\r\nWindows 10\r\nMSBuild version 17.3.0-preview-22307-01+bfd80ab16 for .NET Framework",
  "state": "OPEN",
  "createdAt": "2022-06-10T17:43:43Z",
  "updatedAt": "2024-10-10T13:46:13Z",
  "closedAt": null,
  "author": {
    "login": "ghogen"
  },
  "labels": [
    "bug",
    "help wanted",
    "Area: Solution (.sln)",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "In addition to \"working on solutions at all\", this should have a blurb about the dynamically-generated solution targets that delegate to all projects.",
        "createdAt": "2022-06-15T14:42:49Z",
        "updatedAt": "2022-06-15T14:42:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> In addition to \"working on solutions at all\", this should have a blurb about the dynamically-generated solution targets that delegate to all projects.\r\n\r\nAgreed, I had to dig into a metaproj with vs code to understand it more, and even then it wasn't easy to parse.",
        "createdAt": "2022-06-15T18:24:26Z",
        "updatedAt": "2022-06-15T18:24:26Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "The `-targets` and `-preprocess` switches are both documented as not executing a build process. However, both will exclude a solution file from their respective operations and then incorrectly build the solution file.\r\n\r\nIt seems like the first pass of a fix would be to not build when either of these two switches are present. If the file is a solution, then the operation isn't performed because it isn't supported but also no build is performed. I have a sense already of how to make this fix.\r\n\r\nShould `-targets` support solutions? I'm not sure that I fully understand the comments from @rainersigwald and @BenVillalobos but it seems the answer is 'Yes'.\r\n\r\nShould `-preprocess` support solutions? Is `-preprocess` on a solution essentially the same output as setting MSBUILDEMITSOLUTION? Should a separate issue be created for the `-preprocess` switch with a solution?",
        "createdAt": "2022-07-30T04:43:34Z",
        "updatedAt": "2022-07-30T04:43:34Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "> Should `-targets` support solutions?\r\n\r\nYes. In addition to \"listing all the targets\", I'd like to see a special case for solutions that also says \"We'll make up a target for any target name you specify and pass it to all of the projects in the solution, so this isn't an exhaustive list\".\r\n\r\n\r\n\r\n> Should `-preprocess` support solutions? Is `-preprocess` on a solution essentially the same output as setting MSBUILDEMITSOLUTION? Should a separate issue be created for the `-preprocess` switch with a solution?\r\n\r\nIMO yes, yes, and yes. But this isn't super high pri IMO; I'd be quite happy with \"it just errors out and doesn't accidentally build\"",
        "createdAt": "2022-08-01T15:34:32Z",
        "updatedAt": "2022-08-01T15:34:32Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Thanks for the response. Please assign this issue to me.\r\n\r\nI wasn't aware that it is now possible to pass a target to the solution that doesn't exist on the solution and that the solution will pass the target to all projects. I have had to work around this in the past. Now I understand the comment about the \"dynamically-generated solution targets\".\r\n\r\nThanks",
        "createdAt": "2022-08-01T16:34:06Z",
        "updatedAt": "2022-08-01T16:34:06Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "It was implemented in https://github.com/dotnet/msbuild/pull/1497, I believe.",
        "createdAt": "2022-08-01T16:37:54Z",
        "updatedAt": "2022-08-01T16:37:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Some observations:\r\nGiven a sol.sln that contains projects a.proj and b.proj;\r\n\r\nThe ability to pass project name and target to the solution (e.g the following code) is [documented](https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-build-specific-targets-in-solutions-by-using-msbuild-exe?view=vs-2022).\r\n```\r\nmsbuild sol -target:b:fred\r\n```\r\n\r\nThe ability to pass any target to the solution and the solution will invoke the target on each project (e.g the following code) does not appear to be in the documentation.\r\n```\r\nmsbuild sol -target:fred\r\n```\r\n\r\nThere is an issue. The build will have an error if any of the projects in the solution don't provide the target. i.e. if 'fred' is a target in b.proj but not in a.proj, then a MSB4057 error will be reported on a.proj. The solution has project specific targets but doesn't know to skip non-existent targets.\r\n",
        "createdAt": "2022-08-02T22:50:06Z",
        "updatedAt": "2022-08-02T22:50:06Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "@rainersigwald It may be helpful to split a new issue out from this issue:\r\n- [x] Don't build a solution when -preprocess or -targets is passed on the command line (addressed by #8588)\r\n\r\nImplementing `-targets` for solution files would remain with this issue.",
        "createdAt": "2022-08-06T20:52:30Z",
        "updatedAt": "2023-03-22T15:48:48Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "Would this command also work with slnf ( solution filter files )?\r\n\r\nSorry for creating a duplicate issue, searching for \"target\" had way too many hits and I couldn't figure out how to search for what I wanted.",
        "createdAt": "2022-09-21T15:14:15Z",
        "updatedAt": "2022-09-21T15:14:15Z",
        "author": {
          "login": "DerekSMorin"
        }
      },
      {
        "body": "We should make sure it works for `.slnf` too, yes. I suspect that might happen \"for free\" when fixing `.sln` but there might be some more work required.",
        "createdAt": "2022-09-21T15:25:07Z",
        "updatedAt": "2022-09-21T15:25:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "PR #8588 stops the incorrect behavior of building a solution when either -preprocess or -targets is provided.\r\n\r\nImplementing -preprocess and -targets for solutions will be a separate PR on this issue.",
        "createdAt": "2023-03-22T15:53:48Z",
        "updatedAt": "2023-03-22T15:53:48Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "Was this closed too soon? The description of <https://github.com/dotnet/msbuild/pull/8588> says it fixes this \"Partially\".",
        "createdAt": "2023-04-08T05:16:57Z",
        "updatedAt": "2023-04-08T05:16:57Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Yes, this issue should be reopened.\n\nThe current PR 'fixes' the incorrect behavior of building the solution when a -preprocess or -targets switch is passed, but doesn't implement the switches for solutions.",
        "createdAt": "2023-04-08T10:56:11Z",
        "updatedAt": "2023-04-08T11:01:07Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "Whoops, didn't notice the keywords in the PR.",
        "createdAt": "2023-04-10T14:01:30Z",
        "updatedAt": "2023-04-10T14:01:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "(Noting that #8908 is related to this issue.)",
        "createdAt": "2023-06-26T00:45:49Z",
        "updatedAt": "2023-06-26T00:45:49Z",
        "author": {
          "login": "jrdodds"
        }
      }
    ]
  }
}