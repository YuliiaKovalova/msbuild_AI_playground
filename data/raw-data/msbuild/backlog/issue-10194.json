{
  "number": 10194,
  "title": "[Bug]: Incorrect framework library is used sometimes during build",
  "body": "### Issue Description\n\nWe have a multi-target NuGet package with `net462` and `netstandard2.0` libs. During our CI, we do a test-compilation with the package: we generate & build a `net462` project (among other platform targets) and we do some tests. In 50% of the times our test fails and it turned out that the reason is that the `netstandard2.0` version of the library was used, instead of the `net462` version.\r\n\r\nWe analyzed the detailed builds and compared the successful and unsuccessful cases and the only difference we found was that in the *failing* case, there are two extra lines:\r\n\r\n```\r\n2024-05-30T21:12:42.2844869Z         [_SourceItemsToCopyToOutputDirectory: Input=C:\\Users\\runneradmin\\.nuget\\packages\\reqnroll.xunit\\2.0.2-ci20240530-361\\lib\\netstandard2.0\\Reqnroll.xUnit.ReqnrollPlugin.dll, Output=bin\\Debug\\net462\\Reqnroll.xUnit.ReqnrollPlugin.dll] Input file is newer than output file.\r\n\r\n2024-05-30T21:12:42.2856777Z           Copying file from \"C:\\Users\\runneradmin\\.nuget\\packages\\reqnroll.xunit\\2.0.2-ci20240530-361\\lib\\netstandard2.0\\Reqnroll.xUnit.ReqnrollPlugin.dll\" to \"C:\\Users\\runneradmin\\AppData\\Local\\Temp\\RR\\R87f145e2\\Sb64b4218\\DefaultTestProject\\bin\\Debug\\net462\\Reqnroll.xUnit.ReqnrollPlugin.dll\".\r\n```\r\n\r\nBased on that my guess is that it first picked the right dll (from `net462`), but somehow it recognized that it found a \"newer\" version in the `netstandard2.0`. My guess is that it is flaky because it depends on how much the timestamp of the two files are different.\r\n\r\nCan anyone explain this? Could we somehow force the build to stick to the `net462` version?\r\n\r\n(On local machine the issue is not reproducible.)\n\n### Steps to Reproduce\n\nI don't exactly know how it is reproducible, but it is currently a problem on the Reqnroll open-source project: https://github.com/reqnroll/Reqnroll.\r\n\r\nWe have made a PR to diagnose the issue: https://github.com/reqnroll/Reqnroll/pull/154\n\n### Expected Behavior\n\nA `net462` always uses the `net462` lib.\n\n### Actual Behavior\n\nSometimes it uses the `netstandard2.0`\n\n### Analysis\n\nBased on the log my guess is that it first picked the right dll (from `net462`), but somehow it recognized that it found a \"newer\" version in the `netstandard2.0`. My guess is that it is flaky because it depends on how much the timestamp of the two files are different.\r\n\n\n### Versions & Configurations\n\nThe build itself is run with .NET 8.0 SDK (8.0.205)",
  "state": "CLOSED",
  "createdAt": "2024-05-31T08:40:26Z",
  "updatedAt": "2024-05-31T13:36:05Z",
  "closedAt": "2024-05-31T13:36:05Z",
  "author": {
    "login": "gasparnagy"
  },
  "labels": [
    "bug"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Please ignore this. It turned out that this was caused by a package configuration error that added the `netstandard2.0` as content with \"copy to output if newer\" and this caused the problem.",
        "createdAt": "2024-05-31T13:36:05Z",
        "updatedAt": "2024-05-31T13:36:05Z",
        "author": {
          "login": "gasparnagy"
        }
      }
    ]
  }
}