{
  "number": 4221,
  "title": "CopyToOutputDirectory from referenced Web project is not copied when the referencing project is not up-to-date, but the referenced project is",
  "body": "Repro: [CopyFromRefProj.zip](https://github.com/Microsoft/msbuild/files/2946683/CopyFromRefProj.zip)\r\n\r\nThe *ConsoleApp* project is a .NET Core 2.1 console EXE that contains a file, *content.xt*, which is copied to the output directory. The *ReferencesConsoleApp* project references *ConsoleApp*. When I build *ReferencesConsoleApp* the *content.txt* file from *ConsoleApp* gets copied to the output directory of *ReferencesConsoleApp*, as expected.\r\n\r\nHowever, in the same setup with a web project - *ReferencesWebApp* references *WebApp*, which contains *content.txt* - the file is only copied to the output directory if *WebApp* is not up-to-date. If a file in *ReferencesWebApp* is modified and the project is built, but *WebApp* is up-to-date then *content.txt* is not copied to the output directory of *ReferencesWebApp* and is deleted from there if it already exists.\r\n\r\nI've only been able to reproduce this when building in VS 2017 (15.9.7), not with msbuild directly nor with `dotnet build`.\r\n\r\n### Steps to reproduce\r\n\r\n1. Build the solution in VS 2017.\r\n2. Observe that ReferencesWebApp\\bin\\Debug\\netcoreapp2.1\\content.txt exists.\r\n3. Modify ReferencesWebApp\\Program.cs.\r\n4. Build (not rebuild) the solution again.\r\n5. Observe that ReferencesWebApp\\bin\\Debug\\netcoreapp2.1\\content.txt has been deleted.\r\n\r\n### Expected  behavior\r\n\r\nReferencesWebApp\\bin\\Debug\\netcoreapp2.1\\content.txt exists\r\n\r\n### Actual behavior\r\n\r\nReferencesWebApp\\bin\\Debug\\netcoreapp2.1\\content.txt is deleted\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n```\r\nMicrosoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.9.21.664\r\n```\r\n\r\nOS info: Windows 7 SP1 x64\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc): VS 2017 v15.9.7.\r\n",
  "state": "OPEN",
  "createdAt": "2019-03-08T16:55:25Z",
  "updatedAt": "2024-02-21T16:31:47Z",
  "closedAt": null,
  "author": {
    "login": "loop-evgeny"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}