{
  "number": 10468,
  "title": "[Bug]: `dotnet workload restore` uniquely emits warning MSB3982: EnableDynamicPlatformResolution ... Platforms not set",
  "body": "### Issue Description\n\nPlatform negotiation seems to fail with MSB3982, but only for `dotnet workload restore` commands. Ordinary `dotnet restore` and `dotnet build` produce no such warnings.\n\n### Steps to Reproduce\n\n```\r\ngit clone https://github.com/AArnott/Library.Template\r\ncd Library.Template\r\ngit checkout bug/traversalPlatforms\r\ncd azure-pipelines\r\ndotnet build # no warnings\r\ndotnet workload restore # senseless warnings\r\n```\n\n### Expected Behavior\n\nNo warnings or errors.\n\n### Actual Behavior\n\nWarnings are emitted about needing `Platforms` or `Platform` defined, though they don't make sense, and don't appear for ordinary builds.\r\n\r\n> C:\\Program Files\\dotnet\\sdk\\8.0.303\\Microsoft.Common.CurrentVersion.targets(1716,5): warning MSB3982: EnableDynamicPlatformResolution is true but referenced project 'C:\\Users\\andarno\\source\\repos\\Library.Template\\src\\dirs.proj' has no 'Platforms' or 'Platform' metadata set. It will be built without a specified platform.\r\n> C:\\Program Files\\dotnet\\sdk\\8.0.303\\Microsoft.Common.CurrentVersion.targets(1716,5): warning MSB3982: EnableDynamicPlatformResolution is true but referenced project 'Library\\Library.csproj' has no 'Platforms' or 'Platform' metadata set. It will be built without a specified platform.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n<details>\r\n<summary>dotnet --info</summary>\r\n.NET SDK:\r\n Version:           8.0.303\r\n Commit:            29ab8e3268\r\n Workload version:  8.0.300-manifests.d7126b9e\r\n MSBuild version:   17.10.4+10fbfbf2e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22631\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.303\\\r\n\r\n.NET workloads installed:\r\n [aspire]\r\n   Installation Source: SDK 8.0.300, VS 17.12.35126.67, VS 17.12.35125.258\r\n   Manifest Version:    8.1.0/8.0.100\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.1.0\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\n\r\nHost:\r\n  Version:      8.0.7\r\n  Architecture: x64\r\n  Commit:       2aade6beb0\r\n\r\n.NET SDKs installed:\r\n  6.0.132 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.424 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.120 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.203 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.317 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.107 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.206 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.303 [C:\\Program Files\\dotnet\\sdk]\r\n  8.0.400-preview.0.24324.5 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 6.0.30 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.32 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  C:\\Users\\andarno\\source\\repos\\Library.Template\\global.json\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n</details>",
  "state": "OPEN",
  "createdAt": "2024-07-31T20:38:15Z",
  "updatedAt": "2024-11-13T09:03:01Z",
  "closedAt": null,
  "author": {
    "login": "AArnott"
  },
  "labels": [
    "bug",
    "needs-investigation",
    "Priority:3",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I also note that `/p:NoWarn=MSB3982` added to `dotnet workload restore` is ignored. The warnings are still emitted.",
        "createdAt": "2024-07-31T21:18:39Z",
        "updatedAt": "2024-07-31T21:18:39Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "Team triage: @GangWang01 could you please try to repro, collect a binary log and take a look at this warnings? ",
        "createdAt": "2024-08-06T13:45:10Z",
        "updatedAt": "2024-08-06T13:45:10Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "Repro and get the binlog \r\n[CentralNode_dotnet_PID=14580_x64_BuildManager_Default.binlog.txt](https://github.com/user-attachments/files/16518834/CentralNode_dotnet_PID.14580_x64_BuildManager_Default.binlog.txt)\r\n",
        "createdAt": "2024-08-07T05:59:09Z",
        "updatedAt": "2024-08-07T05:59:09Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "From workload log\r\n[CentralNode_dotnet_PID.14580_x64_BuildManager_Default.binlog.txt](https://github.com/user-attachments/files/16558710/CentralNode_dotnet_PID.14580_x64_BuildManager_Default.binlog.txt)\r\n, I see AnnotatedProjects Library.csproj and dir.proj  have SkipGetTargetFrameworkProperties = true.   So, it won't execute GetReferenceNearestTargetFrameworkTask to get the platform and platforms metadata.  So, the warning MSB3982 from the task GetCompatiblePlatform  is emitted when EnableDynamicPlatformResolution is true in the https://github.com/AArnott/Library.Template/blob/611f5abfb16c27ed2e2f1d72b4bbaf9a9dd81a7c/Directory.Build.props#L17 \r\n![Screenshot 2024-08-09 171043](https://github.com/user-attachments/assets/356af6ef-2b9e-498c-8757-9109ffc4ecbe)\r\n\r\n\r\ndotnet build binlog \r\n[msbuild.build.binlog.txt](https://github.com/user-attachments/files/16558703/msbuild.build.binlog.txt). The Library.csproj  project doesn't execute task GetCompatiblePlatform\r\n\r\n\r\n",
        "createdAt": "2024-08-09T09:13:33Z",
        "updatedAt": "2024-08-09T09:44:23Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "dotnet build /t:rebuild also emits the warning \r\n\r\nWhen dotnet build /t:rebuild and dotnet workload, both of the processes execute the target _GetProjectReferencePlatformProperties that has the task GetCompatiblePlatform before rebuild and workload initial target. ",
        "createdAt": "2024-08-09T10:19:39Z",
        "updatedAt": "2024-08-09T11:44:40Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "> I also note that `/p:NoWarn=MSB3982` added to `dotnet workload restore` is ignored. The warnings are still emitted.\r\n\r\nWhen do the workload. the initial target is _GetRequiredWorkloads.   It doesn't do the command switch analysis as msbuild.  If want to suppress this warning. We can define the property NoWarn or MSBuildWarningsAsMessages in the project. \r\n\r\n@JanKrivanek  Could you help me have a look if there is something wrong with my understanding?",
        "createdAt": "2024-08-09T11:39:14Z",
        "updatedAt": "2024-08-09T11:39:14Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "@JaynieBai - do you mean that `dotnet workload restore` does not pass through the `/p` commandline argument to the msbuild execution?\r\n\r\n@joeloff - is the `workload` command expected to pass-through the args to the msbuild? If not - should it somehow indicate that unknown argument was used on commandline?",
        "createdAt": "2024-08-09T15:06:13Z",
        "updatedAt": "2024-08-09T15:06:13Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Many CLI commands are implemented (or use data from) MSBuild evaluations and target executions. This specific command doesn't accept `/p` values and could possibly have its grammar locked down more. In general the SDK doesn't do a _great_ job of 'insulating' the user from MSBuild when MSBuild is used as an implementation detail, and this is one more example of that IMO.",
        "createdAt": "2024-08-09T15:09:42Z",
        "updatedAt": "2024-08-09T15:09:42Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "> @JaynieBai - do you mean that `dotnet workload restore` does not pass through the `/p` commandline argument to the msbuild execution?\r\n\r\nYes, from the log, I didn't find workload restore pass the /p argument to msbuild execution.",
        "createdAt": "2024-08-12T02:52:27Z",
        "updatedAt": "2024-08-12T02:52:27Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "Applogies - I accidentaly didn't respond.\r\n\r\n@AArnott - this is 'by design' for msbuild in a sense that the property parameter is not being passed to msbuild execution from sdk (the workaround would be to specify the property in the msbuild xml - but that might not be desirable).\r\n\r\nsdk could improve by either erroring out on unrecognized parameter or by passing it thorugh to msbuild. The issue mover doesn't sem to work - so let me create a new issue in sdk repo and reference here",
        "createdAt": "2024-09-11T15:54:14Z",
        "updatedAt": "2024-09-11T15:54:14Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "https://github.com/dotnet/sdk/issues/43355",
        "createdAt": "2024-09-11T15:57:32Z",
        "updatedAt": "2024-09-11T15:57:32Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Why did you close this issue? The bug you filed against the SDK is unrelated to the original issue reported.",
        "createdAt": "2024-09-12T02:01:15Z",
        "updatedAt": "2024-09-12T02:01:15Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "@AArnott - appologies - oversight on my side (I didn't notice orriginal issue was separate from the endo of discussion)\r\n\r\n@JaynieBai - can you please look once again and elaborate more on the findings https://github.com/dotnet/msbuild/issues/10468#issuecomment-2277512458? I can see `GetCompatiblePlatform` being executed in the `dotnet build` binlog as well. What is the difference here? Thank you",
        "createdAt": "2024-09-12T05:55:53Z",
        "updatedAt": "2024-09-12T05:55:53Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> @AArnott - appologies - oversight on my side (I didn't notice orriginal issue was separate from the endo of discussion)\r\n> \r\n> @JaynieBai - can you please look once again and elaborate more on the findings [#10468 (comment)](https://github.com/dotnet/msbuild/issues/10468#issuecomment-2277512458)? I can see `GetCompatiblePlatform` being executed in the `dotnet build` binlog as well. What is the difference here? Thank you\r\n\r\n@JanKrivanek  dotnet workload has the GetCompatiblePlatform task and property SkipGetTargetFrameworkProperties = true in the dir.proj project.   But dotnet build doesn't have the GetCompatiblePlatform being executed in the dir.proj project.\r\n\r\nThe warnings are from the GetCompatiblePlatform task  in dir.proj.",
        "createdAt": "2024-09-12T09:45:22Z",
        "updatedAt": "2024-09-12T09:45:50Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "Team triage: @YuliiaKovalova will investigate this further.",
        "createdAt": "2024-09-24T13:53:28Z",
        "updatedAt": "2024-09-24T13:53:28Z",
        "author": {
          "login": "maridematte"
        }
      }
    ]
  }
}