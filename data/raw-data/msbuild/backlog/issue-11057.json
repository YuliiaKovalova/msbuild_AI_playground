{
  "number": 11057,
  "title": "There is no path separator between the output folder and the xml file when compiling for Android.",
  "body": "### Issue Description\n\nWhile creating a batch file for automated compilation of my project for all platforms, I encountered a problem during compilation for Android.\nTo compile for each platform, I used this function:\n```batch\n:build\nrem %1 = project\nrem %2 = platform\nrem %3 = arch\nif exist \"publish\\%2-%3.zip\" (\n    echo \"%2-%3 already exists.\"\n    pause >nul\n    exit /b 1\n    rem skip\n)\necho Starting building %1 for %2-%3...\necho MSBuild:\necho dotnet build %1 -c Release --os %2 -a %3 -v m -o publish\\%2-%3\necho.\ndotnet build %1 -c Release --os %2 -a %3 -v m -o publish\\%2-%3\n```\n[Full source code](https://github.com/NonExistPlayer/EclairPlayer/blob/main/build.bat)\nI called the functions like this:\n```batch\ncall :build Eclair.Desktop win x64\n\ncall :build Eclair.Android android arm64\n```\nUsually, when compiling on Android, a file `<project-name>.xml` is created in the output folder\nIn my case it was `Eclair.Android`.\nWhen compiling via Visual Studio 2022, everything is fine. But when compiling via a bat file, the following happened:\n\nLet's imagine that we are compiling for Android and the x64 architecture.\nIn the `publish` folder, a file is created with the name: `android-x64Eclair.Android.xml`.\nThis looks very strange, but most likely it happens because of the missing \\ between the paths.\nMoreover, other files are created normally, in the `android-x64` folder.\n\n>[!IMPORTANT]\n>I would also like to point out that this bug can be easily fixed by adding \\ to the end.\n>It's not difficult, but in theory the path separator should not be at the end.\n\n### Steps to Reproduce\n\nThe source code of my project where you can repeat this bug is [here](https://github.com/NonExistPlayer/EclairPlayer).\n>[!WARNING]\n>The batch file is already fixed. So you will have to manually change the line number: [35](https://github.com/NonExistPlayer/EclairPlayer/blob/main/build.bat#L35)\n\n### Expected Behavior\n\nA file should be created in the output folder.\nExample:\nIf we compile the `SampleAndroidProject` project for the x64 architecture:\nThen a file should be created at the path `android-x64/SampleAndroidProject.xml`.\n\n### Actual Behavior\n\nIf we compile the `SampleAndroidProject` project for the x64 architecture:\nThen a file with a strange name will be created: `android-x64SampleAndroidProject.xml`.\nBecause there is no separating path symbol between 4 and S.\n\n### Analysis\n\nMost likely, MSBuild does not automatically add a path separator character between the platform and architecture of the project and the project name:\n`platform-arch/projectname.xml`\n\n### Versions & Configurations\n\n|Key|Value|\n|:--|:--|\n|MSBuild Version|17.12.7.52203|\n|.NET CLI Version|9.0.100|\n|System|Windows 11 10.0.22621|\n|Architecture|x64|",
  "state": "OPEN",
  "createdAt": "2024-12-01T11:58:59Z",
  "updatedAt": "2025-04-10T14:10:38Z",
  "closedAt": null,
  "author": {
    "login": "NonExistPlayer"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "labels": [
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "@NonExistPlayer  Could you add switch -bl after the command \"dotnet build %1 -c Release --os %2 -a %3 -v m -o publish\\%2-%3\"?  That will generate binlog file that can help us diagnose the issue. Thanks.",
        "createdAt": "2024-12-16T03:25:41Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "[Here](https://github.com/user-attachments/files/18153145/msbuild-bin.log) is the binary log of msbuild.\nThis file has a different extension (.log) because I couldn't upload this file with the original extension (.binlog) to GitHub because it wasn't supported.",
        "createdAt": "2024-12-16T16:01:06Z",
        "author": {
          "login": "NonExistPlayer"
        }
      },
      {
        "body": "@NonExistPlayer Thank you for your log. However, I did not find the android-x64Eclair.Android.xml file missing the backslash (\\) in the logs. Could you verify if this step repro this issue?\n![Image](https://github.com/user-attachments/assets/7972cad9-a32d-481c-ade9-24f6368cfb4a)\n",
        "createdAt": "2024-12-17T09:29:28Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "Sorry, I accidentally mixed up the projects and showed the binary log of the compilation under Windows. \n[Here](https://github.com/user-attachments/files/18165165/msbuild.log) is the new binary log.",
        "createdAt": "2024-12-17T12:11:24Z",
        "author": {
          "login": "NonExistPlayer"
        }
      },
      {
        "body": "This issue repos in the [Full source code](https://github.com/NonExistPlayer/EclairPlayer/blob/main/build.bat) when `msbuild Eclair.Android.csproj /p:OutputPath=publish\\anroid-x64 /bl`.  The wrong document file is generated when evaluation.\n![Image](https://github.com/user-attachments/assets/f16046f0-2f6d-488c-845f-1172c33fa526)\n",
        "createdAt": "2024-12-31T09:24:41Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "This android DocumentationFile is from Xamarin.Android.Bindings.Core.targets file. I think it misses a slash.\n![Image](https://github.com/user-attachments/assets/8b5ba40c-6d27-4f22-b8bd-29488e22a95a)\n",
        "createdAt": "2025-01-02T09:58:35Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "This attempts to ensure that OutputPath ends with a backslash: <https://github.com/dotnet/msbuild/blob/cc9d53871c9f765d491fb6083627049042f72945/src/Tasks/Microsoft.Common.CurrentVersion.targets#L156>\n\nBut I suppose it does not work when the OutputPath property is overridden on the command line.\nPerhaps then, the `-o` option of .NET SDK should add the backslash before it passes the value to MSBuild.  <https://github.com/dotnet/sdk/blob/6870be0ce459352d962a7fd3f4cb6759a4466c3e/src/Cli/dotnet/OptionForwardingExtensions.cs#L17-L41>\n",
        "createdAt": "2025-01-02T11:13:39Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "\nIt feels it should be handled in both - sdk and android sdk:\n * https://github.com/dotnet/sdk/issues/45682\n * https://github.com/dotnet/android/issues/9645\n\nKeeping this open now to keep track of the work in the relevant repos",
        "createdAt": "2025-01-02T13:15:23Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "<https://source.dot.net/#MSBuildProperty=OutputPath> shows a few places where a subdirectory name is appended to $(OutputPath) without a backslash in between.  Like how PublishDir is set in these:\n\n* <https://github.com/dotnet/sdk/blob/9b0a28ecbfddd14124402c805dccf100ca1ff78b/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.BeforeCommon.targets#L129-L133>\n* <https://github.com/dotnet/msbuild/blob/6c6231d8a06b91acc4463f4257f6ec6adc1ce0cf/src/Tasks/Microsoft.Common.CurrentVersion.targets#L500>\n\nIf $(OutputPath) cannot be trusted to end with a slash, then these should be changed.\n\nThe following assignment to OutputPath itself is OK though: if OutputPath is not a global property, then Microsoft.Common.CurrentVersion.targets ensures a trailing (back)slash; and if OutputPath is a global property but doesn't end with a slash, then the following assignment doesn't take effect, so the missing slash between `$(OutputPath)` and `$(RuntimeIdentifier)` doesn't matter.\n\n* <https://github.com/dotnet/sdk/blob/9b0a28ecbfddd14124402c805dccf100ca1ff78b/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L345>\n\n",
        "createdAt": "2025-01-03T08:17:54Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}