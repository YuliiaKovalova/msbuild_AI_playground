{
  "number": 7749,
  "title": "Release 17.3",
  "body": "- [x] When VS main snaps to `17.4`, create `vs17.3` branch\r\n- [x] Create darc channel for `VS 17.4` if it doesn't already exist \\\r\n`darc add-channel --name \"VS 17.4\"`\r\n- [x] Ping internal \"First Responders\" Teams channel to get the new channel made available as a promotion target\r\n- [x] Associate the next release branch with the next release channel \\\r\n`darc add-default-channel  --channel \"VS 17.4\" --branch vs17.4 --repo https://github.com/dotnet/msbuild`\r\n- [x] Remove the `main` to old release channel default channel \\\r\n`darc delete-default-channel --repo https://github.com/dotnet/msbuild --branch main --channel \"VS 17.3\"`\r\n- [x] Associate the `main` branch with the next release channel \\\r\n`darc add-default-channel  --channel \"VS 17.4\" --branch main --repo https://github.com/dotnet/msbuild`\r\n- [x] Check subscriptions for the current channel `VS 17.3` and update as necessary (for instance, SDK's `main` branch should usually be updated \\\r\n`darc get-subscriptions --exact --source-repo https://github.com/dotnet/msbuild --channel \"VS 17.3\"`\\\r\nUpdate channel `VS 17.3` to `VS 17.4` for the sdk main subscription\\\r\n`darc update-subscription --id 5480c5ca-4fa6-4d8a-1987-08d9d606f30d`\r\n- [x] Ensure that the current release channel `VS 17.3` is associated with the correct release branch\\\r\n`darc get-default-channels --source-repo https://github.com/dotnet/msbuild --branch vs17.3`\r\n- [x] Fast-forward merge the correct commit (the one that is currently inserted to VS main) to the `vs17.3` branch \\\r\n`git push upstream 797fd829a374a880f63fd4eea4ea6990404c48f4:refs/heads/vs17.3`\r\n- [x] Fix OptProf data flow for the new vs17.3 branch\r\n- [x] Update the [release-branch insertion release definition](https://dev.azure.com/devdiv/DevDiv/_releaseDefinition?definitionId=2153&_a=definition-variables) to have `InsertTargetBranch` `rel/d17.3`.\r\n- [x] Prepare final branding PR for `vs17.3` but \u26a0\ufe0f DO NOT MERGE IT YET \u26a0\ufe0f #\r\n- [x] Promote `unshipped` public API to `shipped` in `main` #7510 \r\n      1. `Get-ChildItem -r src/PublicAPI.*.txt | Clear-Content`\r\n      2. Open MSBuild.sln in Visual Studio, let it settle\r\n      3. Find a green squiggle for the analyzer and fix all in solution\r\n      4. `Get-ChildItem -r PublicAPI.Unshipped.txt | % { Move-Item -Force -Path $_ (Join-Path $_.Directory.FullName \"PublicAPI.Shipped.txt\") && New-Item $_ }`\r\n- [x] Create 17.4 branding PR, including public API change #7501, #7510\r\n- [x] Merge 17.4 branding PR\r\n- [x] Prepare QB-mode bug for final branding insertion in internal VS repo\r\n- [x] Update [internal \"create VS PR for insertion\"](https://dev.azure.com/devdiv/DevDiv/_releaseDefinition?definitionId=2153&_a=definition-variables) release to point to the new VS release branch by default\r\n- [x] Merge final branding to `vs17.3` branch\r\n- [x] Get QB approval\r\n- [x] Merge to VS\r\n- [x] ASAP after release, push packages to nuget.org (not currently automated, contact dnceng)\r\n- [x] Update `main` subscriptions to the new channel (this can be done after release) \\\r\n`darc get-subscriptions --exact --target-repo https://github.com/dotnet/msbuild --target-branch main`\r\n- [x] Create the 17.3 release (https://github.com/dotnet/msbuild/releases/tag/v17.3.1)",
  "state": "CLOSED",
  "createdAt": "2022-06-27T15:45:24Z",
  "updatedAt": "2024-02-21T14:08:19Z",
  "closedAt": "2022-10-04T16:39:21Z",
  "author": {
    "login": "Forgind"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "VS 17.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "Is there a timeline on the Nuget updates? If I am following correctly VS updated to 17.3 and netcore SDK 6.0.400 uses 17.3, however the packages are not yet on Nuget. I see release tag https://github.com/dotnet/msbuild/releases/tag/v17.3.0 but no https://www.nuget.org/packages/Microsoft.Build#versions-body-tab (and related packages)\r\n\r\nEDIT: There are other co-related issues that confound the problems of not having this Nuget updated. See https://github.com/microsoft/MSBuildLocator/issues/159 which also gets more fun with https://github.com/microsoft/MSBuildLocator/issues/176 causing confusion on why loading a project was failing. If the nuget was updated we could have directly hard-depended on 17.3(+) versions and bypassed the two Microsoft.Build.Locator issues.",
        "createdAt": "2022-08-16T19:38:04Z",
        "updatedAt": "2022-08-16T23:05:49Z",
        "author": {
          "login": "admalledd"
        }
      },
      {
        "body": "I think we can release 17.3 now? It's historically been a very manual process. I've been trying to automate it so we just hit one button, and it publishes to NuGet, but that isn't working yet. Sorry for the delay!",
        "createdAt": "2022-08-17T21:44:04Z",
        "updatedAt": "2022-08-17T21:44:04Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}