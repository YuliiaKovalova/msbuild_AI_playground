{
  "number": 5202,
  "title": "AssemblyLoadContext-related task errors in 16.5",
  "body": "## Background\r\n\r\nBefore 3.1.200, MSBuild tasks and their dependencies were loaded into the default ALC. Since an ALC can have only one assembly loaded for the same name (not including version), this forced all tasks to use the same version of dependencies, and that version had to match the one delivered in the .NET Core SDK (if the assembly was there). This was very annoying and broke people.\r\n\r\nIn MSBuild 16.5/SDK 3.1.200, we isolated plugins in their own ALC (microsoft/msbuild#4916). We planned to extend this in the .NET 5 timeframe to use an AssemblyDependencyResolver, to further improve the situation for native dependencies (microsoft/msbuild#5037).\r\n\r\nThere is an environment-variable-based workaround `MSBUILDSINGLELOADCONTEXT=1` available to revert to the previous behavior.\r\n\r\n## Problems\r\n\r\nThis change broke some tasks that use reflection or fancy assembly loading inside the task implementation. All users of affected tasks are broken, not just the maintainers of the tasks.\r\n\r\nKnown failures are:\r\n\r\n\u2022\tGitVersionTask (457 NuGet downloads/day)\r\n\u2022\tFody <6.0.4 (2730 downloads/day, but I don\u2019t know the version breakdown)\r\n\u2022\tSpecFlow (3215 downloads/day)\r\n\u2022\tMSBump (92 downloads/day, repo archived)\r\n\r\n\r\n## Related issues\r\n\r\n- [x] https://github.com/dotnet/sdk/issues/10878\r\n- [x] https://github.com/SpecFlowOSS/SpecFlow/issues/1912\r\n- [x] GitTools/GitVersion#2063 (fixed in upcoming 5.3.0)\r\n- [x] Fody https://github.com/dotnet/sdk/issues/10878#issuecomment-609395898 (fixed in 6.0.4+)\r\n- [ ] MSBump https://github.com/dotnet/core/issues/4404#issuecomment-605962124\r\n- [x] coverlet.msbuild 2.6.3, resolved in at least 2.8.1 (reported https://github.com/dotnet/sdk/issues/11274) possibly fixed by https://github.com/tonerdo/coverlet/pull/625\r\n- [x] microsoft.web.librarymanager.build 1.0.163 ([AB#1093418](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1093418)). No repro in latest 2.1.76.",
  "state": "CLOSED",
  "createdAt": "2020-03-26T12:02:17Z",
  "updatedAt": "2024-02-21T17:04:31Z",
  "closedAt": "2020-05-26T16:14:04Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "regression",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.7 Preview 2"
  },
  "comments": {
    "nodes": [
      {
        "body": "Figured out the SpecFlow case: https://github.com/SpecFlowOSS/SpecFlow/issues/1912#issuecomment-604462903.\r\n\r\nIn short, this is an _expected_ behavior of `Assembly.LoadFile` that was sort of worked around before because MSBuild could find dependencies in `AssemblyLoadContext.Default`.",
        "createdAt": "2020-03-26T14:30:30Z",
        "updatedAt": "2020-03-26T14:30:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald It turns out it _isn't_ solved by coverlet.msbuild 2.8.1. This PR is blocked in updating to .NET SDK 3.1.201 because of this same break, and updating coverlet didn't fix it. So I'm still blocked.\r\n\r\nhttps://github.com/AArnott/Nerdbank.Streams/pull/180",
        "createdAt": "2020-04-16T19:38:46Z",
        "updatedAt": "2020-04-16T19:39:01Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "@AArnott sorry it took me a while to get to this, but I don't see anything that looks like an MSBuild task failure in that PR. Can you point me to what you think is failing?",
        "createdAt": "2020-04-24T14:29:27Z",
        "updatedAt": "2020-04-24T14:29:27Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Quite right. I forgot in that PR that updating to coverlet.msbuild 2.8.1 also changes the filenames of the coverage files generated, so there's more to adapting to the task loader change than just updating the package reference.",
        "createdAt": "2020-04-24T15:14:14Z",
        "updatedAt": "2020-04-24T15:14:14Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "Closing: all of the known active-development tasks that had problems have been fixed in new releases.",
        "createdAt": "2020-05-26T16:14:04Z",
        "updatedAt": "2020-05-26T16:14:04Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "For gitversion, recent exceptions customers have been facing have been the below: Adding a comment to help with customer searches.\r\nError Exception in initialization: System.IO.FileNotFoundException: Could not load file or assembly \u2018System.ValueTuple, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u2019 or one of its dependencies. The system cannot find the file specified.",
        "createdAt": "2020-08-14T20:55:36Z",
        "updatedAt": "2020-08-14T20:55:36Z",
        "author": {
          "login": "marcpopMSFT"
        }
      }
    ]
  }
}