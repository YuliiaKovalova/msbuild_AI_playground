{
  "number": 10684,
  "title": "Buildcheck - .editorconfig seems to be ignored",
  "body": "### Context\r\n\r\nI came accross a case where `.editorconfig` settings for chaning checks diagnostics levels are not respected and `.editorconfig` file is not captured in the binlog - meaning it's probably not recognized at all.\r\n\r\n### Details\r\n\r\nNotice the `BC0201` being set to error, but output as warning. Similarly BC0203 is set to error, but not lifted from default message.\r\n\r\n```\r\nPS C:\\tmp> dotnet --version\r\n9.0.100-rc.2.24468.2\r\nPS C:\\tmp> type .\\.editorconfig\r\nroot = true\r\n\r\n# Buildcheck rules\r\n[*.csproj]\r\nbuild_check.BC0103.severity=error\r\nbuild_check.BC0203.severity=error\r\nbuild_check.BC0203.scope=work_tree_imports\r\nbuild_check.BC0201.severity=error\r\nPS C:\\tmp> dotnet build /check /bl\r\nObnoven\u00ed dokon\u010deno (1,4s)\r\nPou\u017e\u00edv\u00e1te verzi Preview rozhran\u00ed .NET. Viz: https://aka.ms/dotnet-support-policy\r\n  DotUtils.Calculator akce prob\u011bhla \u00fasp\u011b\u0161n\u011b s 1 upozorn\u011bn\u00edm(i). (1,4s) \u2192 bin\\Debug\\net8.0\\DotUtils.Calculator.dll\r\n    C:\\tmp\\DotUtils.Calculator.csproj(8,4): warning BC0201: https://aka.ms/buildcheck/codes#BC0201 - Property: 'xyz' was accessed, but it was never initialized.\r\n\r\nSestaven\u00ed akce prob\u011bhla \u00fasp\u011b\u0161n\u011b s 1 upozorn\u011bn\u00edm(i). za 5,1s\r\nPS C:\\tmp>\r\n```\r\n\r\nI suspect non-US locale might have an impact here?\r\nRelevant info from `systeminfo`:\r\n\r\n```\r\nOS Name:                   Microsoft Windows 10 Home\r\nOS Version:                10.0.19045 N/A Build 19045\r\nSystem Locale:             cs;\u010ce\u0161tina\r\nInput Locale:              cs;\u010ce\u0161tina\r\n```\r\n\r\nBinlog and repro:  \r\n[ReproAndBinlog.zip](https://github.com/user-attachments/files/17090940/ReproAndBinlog.zip)\r\n",
  "state": "CLOSED",
  "createdAt": "2024-09-22T19:26:28Z",
  "updatedAt": "2024-10-04T06:40:07Z",
  "closedAt": "2024-10-04T06:40:06Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "Priority:1",
    "triaged",
    "Area: BuildCheck"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanProvaznik"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "It is related to the selected end of line selected for the file. \r\nhttps://github.com/dotnet/msbuild/blob/642eed516bbdc3888430a102aa0f6321b10becab/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigFile.cs#L84\r\nWe parse the string based on the current newLine of the OS. \r\nSince the EOF was not the one that is used on current OS if failed to parse the file. ",
        "createdAt": "2024-09-23T09:00:36Z",
        "updatedAt": "2024-09-23T09:00:36Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "I see two possible ways: \r\n\r\n1. Identitfy the new line sequene of the file or \r\n2. Try to use the  ReadLine  from the StreamReader (if it supports this case)",
        "createdAt": "2024-09-23T09:02:48Z",
        "updatedAt": "2024-09-23T10:03:17Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "Thanks @f-alizada for the quick look!\r\n\r\nWhat is the behavior of Roslyn (or possibly VS IDE settings)? We'd idealy be inline with that",
        "createdAt": "2024-09-23T12:24:52Z",
        "updatedAt": "2024-09-23T12:24:52Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Roslyn covers the scenarios of different EOL by the `SourceText` , which was dropped during the implementation in MSBuild not to take the dependency. \r\nThe ReadLine handles the scenario of different EOL test on LF and CLRF which could be used. ",
        "createdAt": "2024-09-23T12:54:54Z",
        "updatedAt": "2024-09-23T12:54:54Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "Let's do that.\r\n\r\nThe scenario of checking out the repo with specific EOL convention on a system with different convention is far too common",
        "createdAt": "2024-09-23T13:03:34Z",
        "updatedAt": "2024-09-23T13:03:34Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "fixed by #10740 and merged to main from vs17.12 branch in #10749 ",
        "createdAt": "2024-10-04T06:40:06Z",
        "updatedAt": "2024-10-04T06:40:06Z",
        "author": {
          "login": "JanProvaznik"
        }
      }
    ]
  }
}