{
  "number": 10801,
  "title": "MSBuildTreatWarningsAsErrors does not integrate with WarningsNotAsErrors well - project vs solution",
  "body": "### Issue Description\n\nTake the following project: \n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <TargetFrameworks>net472</TargetFrameworks>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <WarningsNotAsErrors>$(WarningsNotAsErrors);NU1603</WarningsNotAsErrors>\n    <MSBuildTreatWarningsAsErrors>true</MSBuildTreatWarningsAsErrors>\n    <!-- <MSBuildWarningsNotAsErrors>NU1603</MSBuildWarningsNotAsErrors> -->\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"NuGet.Common\" Version=\"6.10.10\" /> \n  </ItemGroup>\n\n</Project>\n```\n\nThe expectation would be that when restore is run on this project, NU1603 is raised, and because of TreatWarningsAsErrors and WarningsNotAsErrors, it'd remain a warning. \n\nNow if you specify the project file, it errors, if you don't specify the project file, it warns. \nAfter some investigation, it seems like it's a solution vs project thing.\n\nI have validated that NuGet does the same thing in both cases. After all, NuGet does not depend on  MSBuildTreatWarningsAsErrors. \n\n### Steps to Reproduce\n\n\nI have a repro attached that demonstrates the behavior. \nExtract the project and run the `run.ps1` script. \n\n[Warnings-Update.zip](https://github.com/user-attachments/files/17347324/Warnings-Update.zip)\n\n### Expected Behavior\n\n```console\nRunning outside of the project folder\nRunning -t:restore src/Warnings.csproj\nMSBuild version 17.13.0-preview-24504-04+c4d51a11b for .NET Framework\nC:\\Code\\Warnings\\src\\Warnings.csproj : warning NU1603: Warnings depends on NuGet.Common (>= 6.10.10) but NuGet.Common 6.10.10 was not found. NuGet.Common 6.11.0 was resolved instead.\nRunning -t:restore src/\nMSBuild version 17.13.0-preview-24504-04+c4d51a11b for .NET Framework\nC:\\Code\\Warnings\\src\\Warnings.csproj : warning NU1603: Warnings depends on NuGet.Common (>= 6.10.10) but NuGet.Common 6.10.10 was not found. NuGet.Common 6.11.0 was resolved instead. [C:\\Code\\Warnings\\src\\War\nnings.sln]\nRunning in the project folder\nRunning -t:restore Warnings.csproj\nMSBuild version 17.13.0-preview-24504-04+c4d51a11b for .NET Framework\nC:\\Code\\Warnings\\src\\Warnings.csproj : warning NU1603: Warnings depends on NuGet.Common (>= 6.10.10) but NuGet.Common 6.10.10 was not found. NuGet.Common 6.11.0 was resolved instead.\nRunning -t:restore\nMSBuild version 17.13.0-preview-24504-04+c4d51a11b for .NET Framework\nC:\\Code\\Warnings\\src\\Warnings.csproj : warning NU1603: Warnings depends on NuGet.Common (>= 6.10.10) but NuGet.Common 6.10.10 was not found. NuGet.Common 6.11.0 was resolved instead. [C:\\Code\\Warnings\\src\\War\nnings.sln]\n```\n\n### Actual Behavior\n\n```console\nRunning outside of the project folder\nRunning -t:restore src/Warnings.csproj\nMSBuild version 17.13.0-preview-24504-04+c4d51a11b for .NET Framework\nC:\\Code\\Warnings\\src\\Warnings.csproj : error NU1603: Warnings depends on NuGet.Common (>= 6.10.10) but NuGet.Common 6.10.10 was not found. NuGet.Common 6.11.0 was resolved instead.\nRunning -t:restore src/\nMSBuild version 17.13.0-preview-24504-04+c4d51a11b for .NET Framework\nC:\\Code\\Warnings\\src\\Warnings.csproj : warning NU1603: Warnings depends on NuGet.Common (>= 6.10.10) but NuGet.Common 6.10.10 was not found. NuGet.Common 6.11.0 was resolved instead. [C:\\Code\\Warnings\\src\\War\nnings.sln]\nRunning in the project folder\nRunning -t:restore Warnings.csproj\nMSBuild version 17.13.0-preview-24504-04+c4d51a11b for .NET Framework\nC:\\Code\\Warnings\\src\\Warnings.csproj : error NU1603: Warnings depends on NuGet.Common (>= 6.10.10) but NuGet.Common 6.10.10 was not found. NuGet.Common 6.11.0 was resolved instead.\nRunning -t:restore\nMSBuild version 17.13.0-preview-24504-04+c4d51a11b for .NET Framework\nC:\\Code\\Warnings\\src\\Warnings.csproj : warning NU1603: Warnings depends on NuGet.Common (>= 6.10.10) but NuGet.Common 6.10.10 was not found. NuGet.Common 6.11.0 was resolved instead. [C:\\Code\\Warnings\\src\\War\nnings.sln]\n```\n\n### Analysis\n\n\ud83e\udd37 \n\n### Versions & Configurations\n\n17.12, 17.8 seem to have the same way as 17.13. \n\nWe do expect an influx of WarningsNotAsErrors though, since that's part of the recommendation for audit warnings (the original way we noticed this issue). ",
  "state": "OPEN",
  "createdAt": "2024-10-11T20:42:21Z",
  "updatedAt": "2024-10-25T16:17:10Z",
  "closedAt": null,
  "author": {
    "login": "nkolev92"
  },
  "labels": [
    "bug",
    "triaged",
    "gathering-feedback"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "In Visual Studio, it's remains a warning.",
        "createdAt": "2024-10-11T20:45:33Z",
        "updatedAt": "2024-10-11T20:45:33Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "\n[Internal communication related to this](https://teams.microsoft.com/l/message/19:3212bf033f4c4b5198643a04fa1048fa@thread.skype/1728680077070?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47&groupId=4ba7372f-2799-4677-89f0-7a1aaea3706c&parentMessageId=1728680077070&teamName=.NET%20Developer%20Experience&channelName=MSBuild&createdTime=1728680077070)",
        "createdAt": "2024-10-14T10:18:56Z",
        "updatedAt": "2024-10-14T10:18:56Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "What I know so far:\n\nI can repro on Windows with https://github.com/dotnet/templating/commit/33a8ecba4a717c81b261ab0aeb1a34164c730d4a. The errors come when building with `build.cmd` and require multiproc MSBuild. In the worker node, a warning is logged and correctly not elevated to a warning. It is then sent to the scheduler node, which elevates it when trying to log it. The `LoggingService` in the main node knows that \"all warnings should be errors\" and doesn't have the but-not-these list.\n\nI canNOT repro with\n\n```xml\n<Project>\n  <PropertyGroup>\n    <MSBuildTreatWarningsAsErrors>true</MSBuildTreatWarningsAsErrors>\n    <MSBuildWarningsNotAsErrors>ABC123</MSBuildWarningsNotAsErrors>\n  </PropertyGroup>\n\n  <Target Name=\"Dispatch\">\n    <ItemGroup>\n        <P Include=\"$(MSBuildThisFileFullPath)\" AdditionalProperties=\"Num=1\" />\n        <P Include=\"$(MSBuildThisFileFullPath)\" AdditionalProperties=\"Num=2\" />\n        <P Include=\"$(MSBuildThisFileFullPath)\" AdditionalProperties=\"Num=3\" />\n        <P Include=\"$(MSBuildThisFileFullPath)\" AdditionalProperties=\"Num=4\" />\n    </ItemGroup>\n    <MSBuild Projects=\"@(P)\" BuildInParallel=\"true\" Targets=\"Warn\" />\n\n  </Target>\n\n  <Target Name=\"Warn\">\n    <Warning Code=\"ABC123\" Text=\"Hello from instance $(Num) in pid $([System.Diagnostics.Process]::GetCurrentProcess().Id)\" />\n    <Exec Command=\"sleep 1\" /><!-- To give worker nodes some time to spin up -->\n  </Target>\n</Project>\n```\n\nWhich seems like exactly the same thing. I want to debug into that now to see how it's different.",
        "createdAt": "2024-10-22T19:28:23Z",
        "updatedAt": "2024-10-22T19:28:23Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "In the success case in,\n\nhttps://github.com/dotnet/msbuild/blob/69b3e7a43fb2fb26812b20807333cf6ca62167f2/src/Build/BackEnd/Components/Logging/LoggingService.cs#L1994-L2003\n\n`_warningsAsErrorsByProject` is populated and applies. In the failure case it exists but is empty.",
        "createdAt": "2024-10-22T19:46:18Z",
        "updatedAt": "2024-10-22T19:46:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Aha! The templating `build.cmd` adds `/warnaserror` to the MSBuild command line. With that the simple repro project above does repro:\n\n```sh-session\n\u276f dotnet msbuild -m .\\foo.csproj /warnaserror\n\u2028  foo succeeded with 1 warning(s) (0.0s)\n\u2028    C:\\Users\\raines\\Downloads\\foo.csproj(19,5): warning ABC123: Hello from instance 1 in pid 39896\n\u2028  foo succeeded (0.0s)\n\u2028    C:\\Users\\raines\\Downloads\\foo.csproj(19,5): error ABC123: Hello from instance 4 in pid 3804\n\u2028  foo succeeded (0.0s)\n\u2028    C:\\Users\\raines\\Downloads\\foo.csproj(19,5): error ABC123: Hello from instance 3 in pid 5872\n\u2028  foo succeeded (0.0s)\n\u2028    C:\\Users\\raines\\Downloads\\foo.csproj(19,5): error ABC123: Hello from instance 2 in pid 8016\n\u2028\u2028Build failed with 3 error(s) and 1 warning(s) in 0.2s\n```",
        "createdAt": "2024-10-22T20:02:15Z",
        "updatedAt": "2024-10-22T20:02:15Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Looks like c1d088e5802c13dfed6438bfe5b333a616859c8a alllllmost fixed this but scoped it to when buildchecks are enabled. Removing that part of the condition, it works.",
        "createdAt": "2024-10-22T20:26:52Z",
        "updatedAt": "2024-10-22T20:26:52Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "For the single-proc case from the OP where projects (or `Directory.Build.props`) **are multitargeted** and say\n\n```xml\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <WarningsNotAsErrors>$(WarningsNotAsErrors);NU1603</WarningsNotAsErrors>\n```\n\n| CLI args | Solution restore | Project restore |\n|--------|--------|--------|\n| no `-warnaserror` | warning \u2705 | warning \u2705 |\n| `-warnaserror` | error \u274c [a] | error \u274c [a] |\n\nIn this case, MSBuild elevates the errors because it only pays attention to `$(MSBuildWarningsNotAsErrors)` when `$(MSBuildTreatWarningsAsErrors)` is set, and Common.targets doesn't promote TreatWarningsAsErrors to MSBuildTreatWarningsAsErrors (https://github.com/dotnet/msbuild/issues/10871). (It also hits cause [b] below but that's not the big problem in this scenario.)\n\nIf we add that:\n\n```xml\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <WarningsNotAsErrors>$(WarningsNotAsErrors);NU1603</WarningsNotAsErrors>\n    <MSBuildTreatWarningsAsErrors>true</MSBuildTreatWarningsAsErrors>\n```\n\n| CLI args | Solution restore | Project restore |\n|--------|--------|--------|\n| no `-warnaserror` | warning \u2705 | error \u274c [b] |\n| `-warnaserror` | error \u274c [c] | error \u274c [b] |\n\n[b] is caused by the multitargeting project not importing common.targets, and thus not importing the adopt-unprefixed-warning-tweaks-to-MSBuild-prefixed ones (https://github.com/dotnet/msbuild/issues/10873).\n\nWorking around that with\n\n```xml\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <WarningsNotAsErrors>$(WarningsNotAsErrors);NU1603</WarningsNotAsErrors>\n    <MSBuildTreatWarningsAsErrors>true</MSBuildTreatWarningsAsErrors>\n    <MSBuildWarningsNotAsErrors>$(WarningsNotAsErrors)</MSBuildWarningsNotAsErrors>\n```\n\n| CLI args | Solution restore | Project restore |\n|--------|--------|--------|\n| no `-warnaserror` | warning \u2705 | warning \u2705 |\n| `-warnaserror` | error \u274c [c] | warning \u2705 |\n\n[c] is because MSBuild is configured overall to promote warnings, and does so for the warning raised by NuGet in the solution metaproject. That project doesn't import `Directory.Build.props` nor know the properties set in individual projects, so the MSBuild engine doesn't know to not promote the warning to error, and does so.\n\nDropping a `Directory.Solution.props` with\n\n```xml\n<Project>\n  <PropertyGroup>\n    <MSBuildTreatWarningsAsErrors>true</MSBuildTreatWarningsAsErrors>\n    <MSBuildWarningsNotAsErrors>NU1603</MSBuildWarningsNotAsErrors>\n  </PropertyGroup>\n</Project>\n```\n\n| CLI args | Solution restore | Project restore |\n|--------|--------|--------|\n| no `-warnaserror` | warning \u2705 | warning \u2705 |\n| `-warnaserror` | warning \u2705 | warning \u2705 |\n\nHooray! But wait, what if things happen out of proc? Let's force that with `MSBUILDNOINPROCNODE=1`\n\n| CLI args | Solution restore | Project restore |\n|--------|--------|--------|\n| no `-warnaserror` | warning \u2705 | warning \u2705 |\n| `-warnaserror` | error \u274c [d] | error \u274c [d] |\n\nThat fails [d] because of https://github.com/dotnet/msbuild/issues/10874 that I identified above.",
        "createdAt": "2024-10-23T16:24:04Z",
        "updatedAt": "2024-10-23T16:24:04Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}