{
  "number": 1962,
  "title": "ProjectReference dependency analysis should respect ReferenceOutputAssembly",
  "body": "If I have a solution that contains a console application with a .csproj file like the this:\r\n\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nAnd I also have a library project that uses the console application to generate a heap of C# code that gets compiled into the library like this.\r\n\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\" InitialTargets=\"RunGenerator\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard1.4</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"../generator/generator.csproj\">\r\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\r\n    </ProjectReference>\r\n  </ItemGroup>\r\n  <Target Name=\"RunGenerator\">\r\n    <Exec Command=\"dotnet run -p &quot;../generator/generator.csproj&quot; input output\" /> \r\n  </Target>\r\n</Project>\r\n```\r\n\r\nThe build fails because the dependency analysis says that a netstandard1.4 assembly cannot reference a netcoreapp1.1 assembly. \r\n\r\nIt would be good if the ReferenceOutputAssembly value was considered and this build succeeded so the projects could be built in the expected order without resorting to workarounds.\r\n\r\nThe following workaround almost works except when building using a solution file because generator.csproj gets built more than once and these builds usually happen concurrently which fails due to files being locked etc.\r\n\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\" InitialTargets=\"RunGenerator\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard1.4</TargetFramework>\r\n  </PropertyGroup>\r\n  <Target Name=\"RunGenerator\">\r\n    <Exec Command=\"dotnet build &quot;../generator/generator.csproj&quot;\" />\r\n    <Exec Command=\"dotnet run -p &quot;../generator/generator.csproj&quot; input output\" /> \r\n  </Target>\r\n</Project>\r\n```\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2017-04-11T00:50:43Z",
  "updatedAt": "2024-02-21T17:20:01Z",
  "closedAt": "2017-04-11T16:25:49Z",
  "author": {
    "login": "GaryHughes"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Related: https://github.com/dotnet/sdk/issues/939",
        "createdAt": "2017-04-11T13:39:04Z",
        "updatedAt": "2017-04-11T13:39:04Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Closing this as a duplicate of dotnet/sdk#939. The long-term fix may require changes in this repo, but let's track it in one place for now.",
        "createdAt": "2017-04-11T16:25:49Z",
        "updatedAt": "2017-04-11T16:25:49Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}