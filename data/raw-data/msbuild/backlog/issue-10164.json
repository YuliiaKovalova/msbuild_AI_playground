{
  "number": 10164,
  "title": "[Feature Request]: Cache RoslynCodeTaskFactory compilations for the lifetime of the Server",
  "body": "### Summary\n\nInline tasks compiled with `RoslynCodeTaskFactory` are kept for the lifetime of the worker node process (or lifetime of a build?), but must be recompiled periodically. The Server implementation could keep these compilations around for a longer time, reducing the execution time of subsequent builds.\n\n### Background and Motivation\n\nOne of the goals of the Server node is to act as a host for all kinds of caches or lookups that need to be re-calculated often (within reason, and of course taking invalidation and correctness into account).\n\n### Proposed Feature\n\nThe Server node should compile and cache inline tasks and store them keyed by a hash of the code itself, as well as any additional references or command line arguments that went into the compilation. When the UsingTask is evaluated if no changes have been made, the node should be able to load the Task from the cached DLL.\n\n### Alternative Designs\n\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-05-21T17:06:10Z",
  "updatedAt": "2025-06-02T13:33:36Z",
  "closedAt": null,
  "author": {
    "login": "baronfel"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "backlog",
    "Feature Request",
    "Priority:2",
    "Area: Server",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "registering that this also crossed my mind and I almost wrote a duplicate when working on https://github.com/dotnet/msbuild/issues/11914 \ncurrently the compiled dll is immediately deleted but for #11914 it'll need to live until the end of build so worker taskhosts can load it instead of the main node, it living until the lifetime of server would be even better",
        "createdAt": "2025-06-02T13:33:34Z",
        "author": {
          "login": "JanProvaznik"
        }
      }
    ]
  }
}