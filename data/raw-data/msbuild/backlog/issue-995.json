{
  "number": 995,
  "title": "Failing tests on Anniversary + Preview 4 machine",
  "body": "Unfortunately, I've changed two things semi-recently on my laptop, so I'm not quite sure what's to blame. I see failures in these tests:\n- [ ] Microsoft.Build.UnitTests.ToolLocationHelper_Tests.GetPathToDotNetFrameworkSdk\n- [ ] Microsoft.Build.UnitTests.ToolLocationHelper_Tests.VerifyToolsetAndToolLocationHelperAgree\n- [ ] Microsoft.Build.UnitTests.BackEnd.TaskBuilder_Tests.NullMetadataOnLegacyOutputItems\n- [ ] Microsoft.Build.UnitTests.BackEnd.TaskBuilder_Tests.ValidateDefiningProjectMetadataOnTaskOutputs_LegacyItems\n- [ ] Microsoft.Build.UnitTests.Evaluation.Expander_Tests.Medley\n\nI'm investigating.\n",
  "state": "CLOSED",
  "createdAt": "2016-09-07T14:02:59Z",
  "updatedAt": "2024-02-21T17:26:05Z",
  "closedAt": "2017-05-02T22:32:53Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "Ok, for `GetPathToDotNetFrameworkSdk`, the issue seems to come down to this:\n\n``` C#\nstring pathToSdk35InstallRoot = Path.Combine(FrameworkLocationHelper.programFiles32, @\"Microsoft SDKs\\Windows\\v7.0A\\\");\nstring pathToSdkV4InstallRootOnVS10 = Path.Combine(FrameworkLocationHelper.programFiles32, @\"Microsoft SDKs\\Windows\\v7.0A\\\");\nstring pathToSdkV4InstallRootOnVS11 = Path.Combine(FrameworkLocationHelper.programFiles32, @\"Microsoft SDKs\\Windows\\v8.0A\\\");\n```\n\nOn this machine (and another one where tests fail), I don't have that directory--because I don't have stale Windows SDKs.\n\nNot sure what the right thing is--the test seems wrong, but I'm not sure what the \"right\" test would be.\n",
        "createdAt": "2016-09-07T15:49:10Z",
        "updatedAt": "2016-09-07T15:49:10Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "`MedleyTests`: Failure is of this case:\n\n``` C#\n\"$([Microsoft.VisualBasic.FileIO.FileSystem]::CurrentDirectory)\", // not allowed\n```\n\nWhen it passes, the exception message is\n\n```\nInvalid static method invocation syntax: \"[Microsoft.VisualBasic.FileIO.FileSystem]::CurrentDirectory\". The type \"Microsoft.VisualBasic.FileIO.FileSystem\" is either not available for execution in an MSBuild property function or could not be found.  c:\\src\\msbuild\\bin\\x86\\Windows_NT\\Debug\\mock.targets\n```\n\nSo maybe one of the other tests is loading an assembly that provides that type?\n",
        "createdAt": "2016-09-07T16:17:20Z",
        "updatedAt": "2016-09-07T16:17:20Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "For `VerifyToolsetAndToolLocationHelperAgree`:\n\n```\nUsing \"VerifySdkPaths\" task from the task factory \"Code Task Factory\".\nTask \"VerifySdkPaths\"\nSDK35ToolsPath           = )\nSDK40ToolsPath           = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\\npathTo35Sdk              = \npathTo40Sdk              = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.2 Tools\\\ncurrentInstall35Location = C:\\Users\\raines\\AppData\\Local\\Temp\\bin\\\ncurrentInstall40Location = C:\\Users\\raines\\AppData\\Local\\Temp\\bin\\NetFX 4.0 Tools\\\n(88,29):  error : Sdk35ToolsPath is incorrect! Registry: C:\\Users\\raines\\AppData\\Local\\Temp\\)  ToolLocationHelper:   CurrentInstallFolder: C:\\Users\\raines\\AppData\\Local\\Temp\\bin\\\n(88,29):  error : Sdk40ToolsPath is incorrect! Registry: C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\  ToolLocationHelper: C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.2 Tools\\  CurrentInstallFolder: C:\\Users\\raines\\AppData\\Local\\Temp\\bin\\NetFX 4.0 Tools\\\n```\n\nThe latter seems to be because I now have .NET 4.6.2 installed. `pathTo40Sdk` is [computed ](https://github.com/Microsoft/msbuild/blob/master/src/Utilities/UnitTests/ToolLocationHelper_Tests.cs#L984) using `VersionLatest`, so that resolving to 4.6.2 makes sense. I think we'd just never run on a machine that had 4.6.2, so it had always previously fallen back to 4.6.1. That matches the toolset's [definition](https://github.com/Microsoft/msbuild/blob/master/src/XMakeCommandLine/app.config#L58):\n\n``` XML\n<property name=\"SDK40ToolsPath\" value=\"$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\NETFXSDK\\4.6.1\\WinSDK-NetFx40Tools-x86@InstallationFolder)\" />\n```\n\n@AndyGerlicher do you have an opinion about the right thing to do here? Should we change `app.config` to point to 4.6.2? I think that would break the test (and MSBuild) for anyone who didn't have 4.6.1 installed. But if that's not done, how will people get the 4.6.2 SDK if it is installed?\n",
        "createdAt": "2016-09-12T15:24:56Z",
        "updatedAt": "2016-09-12T15:24:56Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}