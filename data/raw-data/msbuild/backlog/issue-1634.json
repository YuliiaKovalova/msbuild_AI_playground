{
  "number": 1634,
  "title": "New String.TrimEnd overload breaks MSBuild `CoerceArguments` on netcoreapp2.0",
  "body": "CoreFX has added a new String.TrimEnd overload with https://github.com/dotnet/corefx/pull/15334.\r\n\r\nThis is breaking MSBuild running on netcoreapp2.0 when building a project that contains logic like the following [taken from dotnet/sdk](https://github.com/dotnet/sdk/blob/9dc299b606ba76d1860700ed27016920afdd25e2/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.TargetFrameworkInference.targets#L51):\r\n\r\n```\r\n<_ShortFrameworkIdentifier>$(TargetFramework.TrimEnd('.0123456789'))</_ShortFrameworkIdentifier>\r\n```\r\n\r\nI get the following error:\r\n\r\n```\r\nMicrosoft.NET.TargetFrameworkInference.targets(51,4): error MSB4184: The expression \"\"netcoreapp2.0\".TrimEnd(.0123456789)\" cannot be evaluated. String must be exactly one character long. \r\n```\r\n\r\nI've debugged the error down to [this logic in MSBuild](https://github.com/Microsoft/msbuild/blob/7a49764a4cf5a5aef2e16f5900edf61bd295dcc1/src/XMakeBuildEngine/Evaluation/Expander.cs#L3607-L3611):\r\n\r\n```\r\n                        else\r\n                        {\r\n                            // change the type of the final unescaped string into the destination\r\n                            coercedArguments[n] = Convert.ChangeType(args[n], parameters[n].ParameterType, CultureInfo.InvariantCulture);\r\n                        }\r\n                    }\r\n                }\r\n                catch (InvalidCastException)\r\n                {\r\n                    // The coercion failed therefore we return null\r\n                    return null;\r\n```\r\n\r\nThe issue is `Convert.ChangeType` is throwing a `FormatException`, [just like it is documented to do](https://msdn.microsoft.com/en-us/library/ms130977(v=vs.110).aspx).  But this code only catches `InvalidCastException`.  Instead, since trying to convert a string to a single char fails, this method overload should be skipped and keep searching until it finds the overload that accepts `char[]`.\r\n\r\nThis is blocking the CLI \"2.0\" work from taking new builds of the .NET Core runtime.",
  "state": "CLOSED",
  "createdAt": "2017-01-31T21:23:02Z",
  "updatedAt": "2024-02-21T17:22:26Z",
  "closedAt": "2017-02-01T20:58:46Z",
  "author": {
    "login": "eerhardt"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}