{
  "number": 10344,
  "title": "AspireHost doesn't seem to respect some MSBuild properties?",
  "body": "Recently I've been migrating my personal projects to use artifacts output with my custom provided path:\r\n\r\nHere is what I've added to my `Directory.Build.props`:\r\n```msbuild\r\n<PropertyGroup>\r\n        <UseArtifactsOutput>true</UseArtifactsOutput>\r\n        <ARTIFACTS_PATH_DOTNET Condition=\" '$(ARTIFACTS_PATH_DOTNET)' == '' \">$(MSBuildThisFileDirectory)artifacts</ARTIFACTS_PATH_DOTNET>\r\n        <ARTIFACTS_PATH_DOTNET Condition=\" '$(ARTIFACTS_PATH_DOTNET)' != '' \">$(ARTIFACTS_PATH_DOTNET)\\$(SolutionName)</ARTIFACTS_PATH_DOTNET>\r\n        <ArtifactsPath>$(ARTIFACTS_PATH_DOTNET)</ArtifactsPath>\r\n    </PropertyGroup>\r\n```\r\n\r\nWhen build is done artifacts are published to folder I've chosen in `ARTIFACTS_PATH_DOTNET` env variable for example:\r\n`ARTIFACTS_PATH_DOTNET\\MySolution\\bin\\MyApp\\debug` - this is expected\r\n\r\nBut when I start app host it seems to miss `SolutionName` and start process like this and fails:\r\n`'ARTIFACTS_PATH_DOTNET\\bin\\MyApp\\debug\\MyApp.exe'`\r\n\r\nWhat can I do to fix this? I can obviosuly replace `$(SolutionName)` with a concrete one but it is not ideal I guess.",
  "state": "CLOSED",
  "createdAt": "2024-06-25T13:22:07Z",
  "updatedAt": "2024-07-09T14:05:43Z",
  "closedAt": "2024-07-09T14:05:43Z",
  "author": {
    "login": "En3Tho"
  },
  "labels": [],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I've fixed this by adding to the `Directory.Build.props` but as I said it is not ideal. Is there a way for AppHost to get this value automatically?\r\n```\r\n<SolutionName Condition=\" '$(SolutionName)' == ''\">MyApp</SolutionName>\r\n```",
        "createdAt": "2024-06-25T13:50:56Z",
        "updatedAt": "2024-06-25T13:52:01Z",
        "author": {
          "login": "En3Tho"
        }
      },
      {
        "body": "@joperezr @eerhardt can one of you take a look?",
        "createdAt": "2024-06-27T02:39:52Z",
        "updatedAt": "2024-06-27T02:39:52Z",
        "author": {
          "login": "davidfowl"
        }
      },
      {
        "body": "@En3Tho, the easiest way for us to investigate is if you can provide a repro project that reproduces the behavior. This can either be a .zip file or a link to a github repo. Is that possible?",
        "createdAt": "2024-06-27T14:11:45Z",
        "updatedAt": "2024-06-27T14:11:45Z",
        "author": {
          "login": "eerhardt"
        }
      },
      {
        "body": "@eerhardt The issue turned out to be slightly trickier (the build/run part)\r\n\r\n1. Create new aspire-starter application\r\n```\r\ndotnet new aspire-starter -o \"AspireApp\"\r\ncd .\\AspireApp\\\r\n```\r\n\r\n2. Create Directory.Build.props file\r\n```\r\ndotnet new buildprops\r\nCopy the following into Directory.Build.props:\r\n<Project>\r\n  <PropertyGroup>\r\n        <UseArtifactsOutput>true</UseArtifactsOutput>\r\n        <ArtifactsPath>$(MSBuildThisFileDirectory)artifacts\\$(SolutionName)</ArtifactsPath>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n3. Run restore/build\r\n```\r\ndotnet restore\r\ndotnet build\r\n```\r\n\r\nNow here is tricky part: \r\n1. `artifacts\\AspireApp\\bin|obj` folder should appear when `dotnet restore/build` is executed from folder with a solution file. This is a correct location for generated artifacts.\r\n2. If same commands are executed from project folder then there is no `SolutionName` and `bin|obj` are created in `\\artifacts`. This is not a correct location.\r\n3. This behavior results in `dotnet run` / `dotnet run --project` creating files in incorrect location but app actually runs.\r\n4. But if I run from the ide it seems to be doing a solution-like build and then run generated .exe from correct location. This fails.",
        "createdAt": "2024-06-27T15:19:42Z",
        "updatedAt": "2024-06-27T15:20:00Z",
        "author": {
          "login": "En3Tho"
        }
      },
      {
        "body": "> If same commands are executed from project folder then there is no SolutionName and bin|obj are created in \\artifacts. This is not a correct location.\r\n\r\nThis appears to be MSBuild behavior. .NET Aspire isn't doing anything special here to respect or unrespect `$(SolutionName)`. Moving to the dotnet/msbuild repo. You can reproduce this same behavior without .NET Aspire and just having a solution with 2 executable projects.",
        "createdAt": "2024-07-08T23:45:45Z",
        "updatedAt": "2024-07-08T23:45:45Z",
        "author": {
          "login": "eerhardt"
        }
      },
      {
        "body": "SolutionName will only exist if the solution is being built - we do not recommend that any project specific logic try to take it into account as a result. I expect that since Aspire's default mode of operation is watch/run on the AppHost it will never work as expected. ",
        "createdAt": "2024-07-08T23:59:46Z",
        "updatedAt": "2024-07-08T23:59:46Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "The issue here is that running apphost using ide works as expected out of the box but apphost itself can't find related projects because it doesn't seem to be getting the right variable due to how it works/builds.\n\nWorkaround for this is simple but it just wasn't an expected behavior.\n\nIf this can't really be fixed then I guess this can be closed.",
        "createdAt": "2024-07-09T06:49:43Z",
        "updatedAt": "2024-07-09T06:49:43Z",
        "author": {
          "login": "En3Tho"
        }
      },
      {
        "body": "As @baronfel pointed out, this behavior is by design. I am closing this issue, however, please do not hesitate to reopen if further discussion is needed.",
        "createdAt": "2024-07-09T14:05:43Z",
        "updatedAt": "2024-07-09T14:05:43Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}