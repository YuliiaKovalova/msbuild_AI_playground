{
  "number": 6247,
  "title": "CopyTask: Fallback to SymbolicLinks if HardLinks fail",
  "body": "The `UseHardlinksIfPossible` is great to prevent unnecessary copying, but doesn't work when the source and target are on different drives.\r\n\r\nIn our case we have NuGet packages with contentFiles set to copyToOutput=true.\r\nThe NuGet cache is on C: and the source code for some developers is on D:\r\n\r\nWe could switch to `UseSymboliclinksIfPossible` if it wasn't that most developers don't have permission to create them.\r\nAlso hard links are more resilient to someone cleaning the local NuGet cache.\r\n\r\nIt would be good if the Copy could fallback if both flags are set. At the moment it throws an error when both are set.\r\nSo try HardLink, if it not works, try SymbolicLink.\r\n",
  "state": "CLOSED",
  "createdAt": "2021-03-12T09:55:47Z",
  "updatedAt": "2024-02-21T14:14:26Z",
  "closedAt": "2022-12-12T02:08:21Z",
  "author": {
    "login": "manfred-brands"
  },
  "labels": [
    "help wanted",
    "Area: Tasks",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "I managed to set this in the .csproj using conditions\r\n```\r\n    <OutDrive>$([System.IO.Path]::GetPathRoot($(OutDir)))</OutDrive>\r\n    <NuGetDrive>$([System.IO.Path]::GetPathRoot($(NuGetPackageRoot)))</NuGetDrive>\r\n    <CreateHardLinksForAdditionalFilesIfPossible Condition=\"'$(OutDrive)'=='$(NuGetDrive)'\">true</CreateHardLinksForAdditionalFilesIfPossible>\r\n    <CreateSymbolicLinksForAdditionalFilesIfPossible Condition=\"'$(OutDrive)'!='$(NuGetDrive)'\">true</CreateSymbolicLinksForAdditionalFilesIfPossible>\r\n```\r\n\r\nBut it would still be nice if Copy had such a fallback option built-in.\r\n",
        "createdAt": "2021-03-15T05:41:36Z",
        "updatedAt": "2021-03-15T05:41:36Z",
        "author": {
          "login": "manfred-brands"
        }
      },
      {
        "body": "That's a nice workaround, but I think the feature request is reasonable. Marking up-for-grabs since I don't think it'll make it to the top of the core team's to-do list for quite a while.",
        "createdAt": "2021-05-27T15:45:43Z",
        "updatedAt": "2021-05-27T15:45:43Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I'd like to do this. Please assign it to me if the issue is still reasonable.",
        "createdAt": "2022-11-30T08:55:54Z",
        "updatedAt": "2022-11-30T08:55:54Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "@JaynieBai go for it!\r\n\r\n> We could switch to `UseSymboliclinksIfPossible` if it wasn't that most developers don't have permission to create them.\r\n\r\nThis shouldn't be the case anymore on modern Windows with #8157--it should be pretty common to be able to create symlinks on Windows now.",
        "createdAt": "2022-11-30T14:34:15Z",
        "updatedAt": "2022-11-30T14:34:15Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}