{
  "number": 2640,
  "title": "Provide submission API that can return back named task items and properties",
  "body": "Today, MSbuild submission API accepts a list of targets. Please enhance it to also accept list of properties and items to build and return them back via BuildResults. This will make it easier to move MSBuild out-of-process.\r\n",
  "state": "OPEN",
  "createdAt": "2017-10-12T23:40:30Z",
  "updatedAt": "2024-02-21T16:35:34Z",
  "closedAt": null,
  "author": {
    "login": "viktorveis"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 15.6"
  },
  "comments": {
    "nodes": [
      {
        "body": "Additional context for this request: it's primarily about improving performance of out-of-proc design-time builds.\r\n\r\nCurrently, a caller has the option of setting `BuildRequestDataFlags.ProvideProjectStateAfterBuild`, which will populate `BuildResult.ProjectStateAfterBuild` with a full copy of the `ProjectInstance` after the request completes, including _all_ properties and items. Unfortunately, the copy + IPC cost of getting all that data back to the calling process from the out-of-process node is high (possibly 2\u00d7), so the IDE would like to avoid doing that.\r\n\r\nThat can be accomplished today by adding a new target that explicitly returns a known item, and then calling it (that was the motivation for https://github.com/Microsoft/msbuild/pull/2623 which was implemented for 15.5 in another way), but that can be a pain if you know that some other target will populate the items/properties that you want.\r\n\r\nSo the request here is to add something like `BuildRequestDataFlags.ReturnSubsetOfStateAfterBuild`, with a list of items passed in the `BuildRequestData` that opts in to specific item returns.\r\n\r\nAn additional consideration is that the wire cost of shipping back item metadata that won't be used might also be nontrivial. Some consumers already filter away metadata that isn't on an \"allow list\" after getting a `BuildResult`. It would be more efficient to do that filtering on the producing end to save the wire cost.",
        "createdAt": "2017-12-18T18:31:29Z",
        "updatedAt": "2017-12-18T18:31:29Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}