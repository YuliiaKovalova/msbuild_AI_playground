{
  "number": 11842,
  "title": "Investigate places where we can use noncryptographic hash functions",
  "body": "We can now depend on System.IO.Hashing which provides noncryptographic hash functions\n1. investigate where we're using cryptographic hashing inappropriately or custom hashing implementations\n2. investigate performance benefit",
  "state": "OPEN",
  "createdAt": "2025-05-13T10:01:19Z",
  "updatedAt": "2025-05-15T12:27:25Z",
  "closedAt": null,
  "author": {
    "login": "JanProvaznik"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance"
  ],
  "comments": {
    "nodes": [
      {
        "body": "One place to take a look at is the BuildEventArgsWriter.cs -> HashString.\nIt is being used by the Binary Logger to uniquely hash strings, acting as a compression.\nWhen binary logging is enabled, this one takes ~10% of all compute, since every string that get's logged needs to be hashed first(acting as a weird sort of compression).\nThere is already quite fast hash function in place, however since we only care about collisions(ideally none should occur within a build), any hash-like function that will map string->long in a unique manner is fine.",
        "createdAt": "2025-05-14T12:25:46Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "interesting, BuildEventArgsWriter.cs uses https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV-1a_hash, XxHash from SIH is supposed to be ~10-30x faster https://github.com/Cyan4973/xxHash\n\nI'll test that out",
        "createdAt": "2025-05-14T15:15:35Z",
        "author": {
          "login": "JanProvaznik"
        }
      },
      {
        "body": "> interesting, BuildEventArgsWriter.cs uses https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV-1a_hash, XxHash from SIH is supposed to be ~10-30x faster https://github.com/Cyan4973/xxHash\n> \n> I'll test that out\n\nif we change this hash the binlog viewer would also need to change, right? we'd also need to keep the older hash around for _reading_ older binlogs?",
        "createdAt": "2025-05-14T15:26:08Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "No, BuildEventArgsWriter assigns consecutive integers as \"index\" identifiers to strings and writes those to the binlog, rather than hash codes.  So the reader does not care which hash algorithm was used.",
        "createdAt": "2025-05-14T15:58:27Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "context: there is prior art for analysis here and the improvement was not visible: https://github.com/KirillOsenkov/MSBuildStructuredLog/wiki/String-Hashing",
        "createdAt": "2025-05-15T08:59:04Z",
        "author": {
          "login": "JanProvaznik"
        }
      }
    ]
  }
}