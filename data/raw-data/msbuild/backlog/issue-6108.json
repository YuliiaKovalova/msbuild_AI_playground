{
  "number": 6108,
  "title": "PackageReference support for msbuild variables",
  "body": "https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/consume-packages/Package-References-in-Project-Files.md#adding-a-packagereference-condition\r\n\r\nThis doc mentions that one can use Conditions in PackageReferences, but then later it says this only works for `targetFramework`.\r\n\r\nIn my scenario I need the ability to bring in one of two possible nuget packages into my csproj, depending on an msbuild variable (different versions of a package). However when I try to use the variable in the condition, VS seems to always include both packages, which obviously isn't what I need.\r\n\r\nIs there a way to achieve this? If not, can this issue be turned into a feature request :)\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2021-02-02T15:07:10Z",
  "updatedAt": "2021-05-18T15:00:05Z",
  "closedAt": "2021-05-18T15:00:04Z",
  "author": {
    "login": "asklar"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: You can create a property within your project, something like `$(NewtonsoftJsonVersion)` and set that based off of a condition. Then in your packagereference, use that as your version. \r\n\r\nIs this what you needed?",
        "createdAt": "2021-02-03T16:48:34Z",
        "updatedAt": "2021-02-03T16:48:34Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "This is a feature request, but for NuGet. I'll duplicate it to their bug.",
        "createdAt": "2021-05-18T14:59:59Z",
        "updatedAt": "2021-05-18T14:59:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Duplicate of https://github.com/NuGet/Home/issues/5895",
        "createdAt": "2021-05-18T15:00:04Z",
        "updatedAt": "2021-05-18T15:00:04Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}