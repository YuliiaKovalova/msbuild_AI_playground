{
  "number": 9350,
  "title": "[Feature Request]: Add `CopyExact` to compliment `PreserveNewest` and `CopyAlways`",
  "body": "### Summary\n\n`PreserveNewest` makes a lot of sense for projects being compiled, however, it causes problems when changing package versions to a package which is older than the one previously used. Currently, it's necessary to clean the output directory to make this scenario work.\n\n### Background and Motivation\n\nRoot cause of this issue: https://github.com/NuGet/Home/issues/12955\r\n\r\nThe customer is running `dotnet publish` on their sln file, with the `-o` parameter, so all projects in the solution are being published to the same directory. MSBuild is doing the right thing and publishing projects in order of the project graph. The first project references a package with an older package version, but was compiled & published more recently than the newer package version. Therefore, *whatever.dll* from the lower package version has a newer timestamp than the same dll from the higher package version.\r\n\r\nI don't know if it's the .NET SDK or msbuild, but in any case `PreserveNewest` is being used, and as a result, the lower assembly version is being retained in the publish directory, leading to a runtime failure.\n\n### Proposed Feature\n\nMSBuild should introduce a new \"copy to\" semantic for \"copy if the timestamps are not an exact match\".  Afterwards, I imagine that the .NET SDK and NuGet.BuildTools need to be modified to use the new enum value for assemblies (and other assets?) coming from packages, to ensure that when older packages are used, the files from the currently referenced package is used.\r\n\r\nAn alternative is that assets from packages should use `CopyAlways`, but that might harm build performance when the copy is unnecessary.\n\n### Alternative Designs\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2023-10-20T09:30:27Z",
  "updatedAt": "2025-01-29T15:04:21Z",
  "closedAt": "2025-01-29T15:04:20Z",
  "author": {
    "login": "zivkan"
  },
  "milestone": {
    "title": ".NET 9.0"
  },
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "labels": [
    "needs-design",
    "Feature Request",
    "needs-more-info",
    "Priority:2",
    "stale",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "MSBuild triage: Note for the design: be aware about app config file. Do not opt in the suggested behavior for it.",
        "createdAt": "2023-10-24T14:14:58Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "This is the same as <https://github.com/dotnet/msbuild/issues/8743>.",
        "createdAt": "2024-04-26T03:37:46Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Hi @zivkan - `IfDifferent` was added in https://github.com/dotnet/msbuild/pull/11052. Same PR as well adds a property `$(SkipUnchangedFilesOnCopyAlways)` - if it's set to true, then `Always` behaves as if it was `IfDifferent`.\nThis is going to be available with VS 17.13 / SDK 9.0.2xx",
        "createdAt": "2024-12-23T09:29:53Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "createdAt": "2025-01-22T19:12:06Z",
        "author": {
          "login": "dotnet-policy-service"
        }
      }
    ]
  }
}