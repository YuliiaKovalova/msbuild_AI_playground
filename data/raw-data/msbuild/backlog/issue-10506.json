{
  "number": 10506,
  "title": "BuildCheck scope classifier: improve initialization",
  "body": "\r\n### Context\r\n\r\n`CheckScopeClassifier` uses `FileScopeClassifier` that is initialized from build request data. This is fine for worker nodes (and by extension for Scheduler node with in-proc worker node), but in case the in-proce worker node is disabled - we currently rely on data from end of evaluation:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b7e76d1d171ef74adec2f3b5e79a5b586a7e7020/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs#L335-L346\r\n\r\nThis has couple implications:\r\n * The scoping might not work properly for evaluation time data\r\n * The Check code might not be able to tell when the scoping is safe to use\r\n\r\n### Goals\r\n\r\nIn ideal case we'd be able to initialize `FileScopeClassifier` early during the request, before any BuildCheck data is created. This might very likely be possible - as the properties required are already part of the request (not derived during the evaluation).\r\n\r\nIn case we are not able to guarantee that - we should expose some eventing that can help Checks to buffer data and wait with scoping till the scoping is fully functional\r\n\r\n### Additional goals\r\n\r\nWe need to ensure that scoping in the build-in checks (PropertiesCheck, NoEnvVarCheck) is working properly",
  "state": "OPEN",
  "createdAt": "2024-08-11T10:41:54Z",
  "updatedAt": "2025-06-02T08:30:27Z",
  "closedAt": null,
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Priority:1",
    "triaged",
    "Area: BuildCheck",
    "10.0"
  ],
  "comments": {
    "nodes": []
  }
}