{
  "number": 1686,
  "title": "Publish Sdk package for Common props/targets",
  "body": "In the v14 extensibility model, MSBuild distributed many props and targets as part of its own installer, SDK authors installed files into known locations, and project files imported props and targets using paths relative to the MSBuild install root.\r\n\r\nWith the advent of Sdks, projects no longer need to specifically specify a path but can address an Sdk by name and version. However, Sdks that wish to opt into common functionality (i.e. all Sdks) still import the core MSBuild targets by the old mechanism that assumes they are next to MSBuild, [for example](https://github.com/dotnet/sdk/blob/5d50497b550dbcbe972434c10fc2de4de71a8b94/src/Tasks/Microsoft.NET.Build.Tasks/sdk/Sdk.props#L19):\r\n\r\n```xml\r\n<Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n```\r\n\r\nInstead, MSBuild could publish a \"Core Sdk\" containing a copy of these files, and Sdks could explicitly depend on a versioned copy.\r\n\r\nThat has two effects, after Sdk version identification is complete:\r\n\r\n\u2795 An Sdk version reference is stable and should work identically on different MSBuild engines (barring changes in behavior).\r\n\u2796 Merely updating to a new CLI/MSBuild doesn't get you the latest bugfixes/extensibility points from new common targets.",
  "state": "OPEN",
  "createdAt": "2017-02-09T22:01:19Z",
  "updatedAt": "2024-07-18T10:45:34Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Feature: Sdks"
  },
  "comments": {
    "nodes": [
      {
        "body": "I was talking to someone about this offline, but I've forgotten who. @piotrpMSFT, maybe?",
        "createdAt": "2017-02-09T22:01:36Z",
        "updatedAt": "2017-02-09T22:01:36Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I had done similar in my project! Here's the link if you're interested: **`MSBuild.Common.Sdk`** folder in [**MSBuild-Sdks**](/nirin/msbuild-sdks/) repo.\r\n\r\nI wanted a single build tools kit for all my projects and I was inspired by .NET SDK and `MSBuild.Sdk.Extras`!\r\n\r\n**Note:**\r\n- All I did was refractor the old stuff and add some new stuff that was due for MSBuild, required to make it work for me! I'm still learning MSBuild, so, it may not be what you expect.\r\n- The **`MSBuild.NET.Legacy.Sdk`** project was just an experiment to redirect the legacy props/targets to the Sdk package. The other packages are also an experiment to learn the old-stuff and try-out new stuff!",
        "createdAt": "2018-02-26T15:55:51Z",
        "updatedAt": "2024-07-18T10:45:34Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "Thank you @Nirmal4G for sharing your sdks!\r\n@jeffkl created the following repository for msbuild sdks: https://github.com/Microsoft/MSBuildSdks. Feel free to contribute.",
        "createdAt": "2018-04-19T17:48:14Z",
        "updatedAt": "2018-04-19T17:48:40Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  }
}