{
  "number": 8478,
  "title": "`RepositoryTask`'s usage of `IBuildEngine4.GetRegisteredTaskObject` breaks under multiple `AssemblyLoadContext`s.",
  "body": "I enabled Central Package Management in my repository and put `Microsoft.DotNet.ReproducibleBuilds` in a `GlobalPackageReference`, which means that all my projects have Sourcelink enabled. Now when I build one of these projects, I get this error [right here](https://github.com/dotnet/sourcelink/blob/c9199d81c03166e2fb0b4e4758c1ceb41b3c1e1f/src/Microsoft.Build.Tasks.Git/RepositoryTask.cs#L137) (also opened dotnet/runtime#80526 to track its unhelpfulness):\r\n\r\n```\r\nSystem.InvalidCastException:\r\n\r\n[A]System.Runtime.CompilerServices.StrongBox`1[Microsoft.Build.Tasks.Git.GitRepository] cannot be cast to [B]System.Runtime.CompilerServices.StrongBox`1[Microsoft.Build.Tasks.Git.GitRepository].\r\n\r\nType A originates from 'System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e' in the context 'Default' at location 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\7.0.2\\System.Private.CoreLib.dll'.\r\nType B originates from 'System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e' in the context 'Default' at location 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\7.0.2\\System.Private.CoreLib.dll'.\r\n```\r\n\r\nThis error message tells us that the two `GitRepository`ies are different. My guess is that MSBuild loads the task assembly once for each project, and they get the `GitRepository` from a previous invocation, which resides in a different ALC and fails to cast.\r\n\r\nThe approach of caching the repository information has to be revisited. For now I will limit SourceLink to just my library projects.",
  "state": "CLOSED",
  "createdAt": "2023-01-12T16:44:31Z",
  "updatedAt": "2023-05-23T22:43:55Z",
  "closedAt": "2023-05-23T22:40:59Z",
  "author": {
    "login": "teo-tsirpanis"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "ladipro"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I haven't seen that error before in a `RegisterTaskObject` scenario. Do you by chance have a repro of this you could share?\r\n\r\nMSBuild should cache ALCs by path to plugin assembly, so it shouldn't be the case that there are two `GitRepository` types. But that is definitely what the error is about, so something appears to have broken the \"should\".",
        "createdAt": "2023-01-13T23:02:29Z",
        "updatedAt": "2023-01-13T23:02:29Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I created a repro in the https://github.com/teo-tsirpanis/Farkle/tree/msbuild-repro branch.\r\n\r\nTo run it you have to first run `build.ps1 -t PrepareMSBuildTests`, and then `cd tests/Farkle.Tools.MSBuild.Tests` and `dotnet build`.\r\n\r\nSomething I thought it might be the problem is that I'm using a `globalPackagesFolder` in `nuget.config` only for this test project and not its dependencies, but all `Microsoft.Build.Tasks.Git.dll` used in the tasks are the same. I also ran `dotnet build-server shutdown` before.\r\n\r\n![image](https://user-images.githubusercontent.com/12659251/212437943-7f2ab310-7c19-423d-99b2-70e91040ae4c.png)\r\n",
        "createdAt": "2023-01-13T23:41:47Z",
        "updatedAt": "2023-01-13T23:41:47Z",
        "author": {
          "login": "teo-tsirpanis"
        }
      },
      {
        "body": "Thanks for the repro. MSBuild Team: let's prioritize investigating this, since it appears to be a failure in a using-all-the-new-cool-stuff scenario.",
        "createdAt": "2023-02-21T19:22:54Z",
        "updatedAt": "2023-02-21T19:22:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Something I thought it might be the problem is that I'm using a globalPackagesFolder in nuget.config only for this test project and not its dependencies, but all Microsoft.Build.Tasks.Git.dll used in the tasks are the same. \r\n\r\n@teo-tsirpanis So, yes, your build is misconfigured. You're loading two copies of Source Link - one from package cache in `C:\\Users\\teo\\.nuget\\packages` and the other from `C:\\Users\\teo\\code\\Farkle\\tests\\packages`. Don't do that :)",
        "createdAt": "2023-05-23T21:08:06Z",
        "updatedAt": "2023-05-23T21:08:26Z",
        "author": {
          "login": "tmat"
        }
      },
      {
        "body": "Fixed by https://github.com/dotnet/sourcelink/pull/1034",
        "createdAt": "2023-05-23T22:40:59Z",
        "updatedAt": "2023-05-23T22:40:59Z",
        "author": {
          "login": "tmat"
        }
      },
      {
        "body": "Thanks!",
        "createdAt": "2023-05-23T22:43:55Z",
        "updatedAt": "2023-05-23T22:43:55Z",
        "author": {
          "login": "teo-tsirpanis"
        }
      }
    ]
  }
}