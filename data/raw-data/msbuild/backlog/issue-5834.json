{
  "number": 5834,
  "title": "Way to access MSBuild's internal properties dictionary",
  "body": "In other build systems, we can access the list of tracked variable in a given context and use it for simple debugging. e.g. CMake provides `get_cmake_property(allVars VARIABLES)`, that sets CMake's internal dictionary tracking properties in user variable `allVars`, which can then be iterated for printing key/values etc.\r\n\r\nWith MSBuild, we can either use VS for high quality script debugging (of XML files), or we can use plain dumps `/v:d[iag]`, binary log etc. However, I am looking for a more granular control over internal dictionary, which MSBuild uses to track properties' names and current values in the context. Something like:\r\n\r\n```xml\r\n<Target Name=\"MyTarget\">\r\n  <!-- while running MyTarget in a very large/complex project,\r\n    print/dump list/snapshot of *all* properties known to MSBuild at this point\r\n    (all props include: built-ins, environment vars, custom properties) -->\r\n  <Error\r\n    Message=\"dumping all props in simple (later-diffable) output:\r\n%(MSBuildPropertiesDictionary.Identity): %(MSBuildPropertiesDictionary.Value)\" />\r\n```\r\n\r\nsimilar discussions:\r\n* https://stackoverflow.com/questions/4548618/list-all-defined-msbuild-variables-equivalent-to-set\r\n* https://stackoverflow.com/questions/867691/how-to-programmatically-list-all-properties-defined-while-executing-msbuild",
  "state": "OPEN",
  "createdAt": "2020-10-25T20:42:39Z",
  "updatedAt": "2024-02-21T16:28:54Z",
  "closedAt": null,
  "author": {
    "login": "am11"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}