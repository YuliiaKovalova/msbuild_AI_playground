{
  "number": 2667,
  "title": "Build failure with use of MSBuildWarningsAsMessages",
  "body": "tm1.proj:\r\n```\r\n<Project>\r\n        <Target Name=\"Main\">\r\n                <MSBuild Projects=\"tm2.proj\" Targets=\"Main\" />\r\n        </Target>\r\n</Project>\r\n```\r\n\r\ntm2.proj:\r\n```\r\n<Project>\r\n        <PropertyGroup>\r\n                <MSBuildWarningsAsMessages>MSB9004</MSBuildWarningsAsMessages>\r\n        </PropertyGroup>\r\n\r\n        <Target Name=\"Main\">\r\n                <MSBuild Projects=\"$(MSBuildThisFileFullPath)\" Targets=\"Foo\" />\r\n        </Target>\r\n\r\n        <Target Name=\"Foo\">\r\n                <Message Text=\"Hello from Foo\" />\r\n        </Target>\r\n</Project>\r\n```\r\n\r\nBuild with msbuild:\r\n\r\nAt second invocation of `MSBuild` task to call `Foo` target (from the *diag* log):\r\n\r\n```\r\n<snip>\r\nBuilding with tools version \"15.0\".\r\nDone Building Project \"/Users/ankit/test/msbuild/tm2.proj\" (Foo target(s)) -- FAILED.\r\nDone executing task \"MSBuild\" -- FAILED. (TaskId:3)\r\nDone building target \"Main\" in project \"tm2.proj\" -- FAILED.: (TargetId:3)\r\nDone Building Project \"/Users/ankit/test/msbuild/tm2.proj\" (Main target(s)) -- FAILED.\r\nDone executing task \"MSBuild\" -- FAILED. (TaskId:2)\r\nDone building target \"Main\" in project \"tm1.proj\" -- FAILED.: (TargetId:2)\r\nDone Building Project \"/Users/ankit/test/msbuild/tm1.proj\" (default targets) -- FAILED.\r\n```\r\n\r\nAdding a few CWLs to msbuild and we get:\r\n\r\n```\r\nSystem.ArgumentException: The key already existed in the dictionary.\r\n  at System.Collections.Concurrent.ConcurrentDictionary`2[TKey,TValue].System.Collections.Generic.IDictionary<TKey,TValue>.Add (TKey key, TValue value) [0x00015] in /Users/builder/data/lanes/4992/mono-mac-sdk/external/bockbuild/builds/mono-x64/external/\r\ncorefx/src/System.Collections.Concurrent/src/System/Collections/Concurrent/ConcurrentDictionary.cs:1303\r\n  at Microsoft.Build.BackEnd.Logging.LoggingService.AddWarningsAsMessages (System.Int32 projectInstanceId, System.Collections.Generic.ISet`1[T] codes) [0x00188] in /Users/ankit/dev/msbuild/src/Build/BackEnd/Components/Logging/LoggingService.cs:539\r\n  at Microsoft.Build.BackEnd.RequestBuilder.ConfigureWarningsAsErrorsAndMessages () [0x000ed] in /Users/ankit/dev/msbuild/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs:1311\r\n  at Microsoft.Build.BackEnd.RequestBuilder+<BuildProject>d__57.MoveNext () [0x0010d] in /Users/ankit/dev/msbuild/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs:1094\r\n```\r\n\r\n(The line number is a little off because of extra debug statements in my copy).\r\nhttps://github.com/microsoft/msbuild/blob/master/src/Build/BackEnd/Components/Logging/LoggingService.cs#L517\r\n\r\n`_filterEventSource.WarningsAsMessagesByProject.Add(projectInstanceId, new HashSet<string>(codes, StringComparer.OrdinalIgnoreCase));`\r\n\r\n1. So, `MSBuild` task from tm1 invokes tm2's `Main` target and this gets a unique `projectInstanceId`, which is used to populate the above `_filterEventSource.WarningsAsMessagesByProject`. \r\n2. And then tm2, uses `MSBuild` task to invoke `Foo` target on the same project file, and even this has the same `projectInstanceId` and so the above line of code fails as the entry already exists in `_filterEventSource.WarningsAsMessagesByProject`.\r\n\r\nThe Id is generated in relation to the contextId (AFAICS), and you would get a different Id if the build different like if any extra properties were passed to the `MSBuild` task.\r\n\r\nWhat is the fix here? Should this be using `projectContextId` instead? or should new `projectInstanceId` be generated every time? I might be talking nonsense about Ids too, I am still trying to read the code and make sense of it!",
  "state": "CLOSED",
  "createdAt": "2017-10-25T20:17:07Z",
  "updatedAt": "2024-02-21T17:16:05Z",
  "closedAt": "2017-11-06T19:24:38Z",
  "author": {
    "login": "radical"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This breaks nuget restore for some projects. I extracted this from debugging https://bugzilla.xamarin.com/show_bug.cgi?id=60182 .",
        "createdAt": "2017-10-25T20:18:49Z",
        "updatedAt": "2017-10-25T20:18:49Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "The list of warningsAsMessages codes for the project build should be the same between the two project instances. If it were different, then the property set would be different and we would have a different `projectInstanceId` anyway. And this isn't an actual event, it's just the list of the codes.. so, maybe then it is a valid case to have an existing entry for a given `projectInstanceId`? If so, then the fix would be to simply check before calling `.Add`. Just thinking aloud :|",
        "createdAt": "2017-10-25T20:40:09Z",
        "updatedAt": "2017-10-25T20:40:09Z",
        "author": {
          "login": "radical"
        }
      }
    ]
  }
}