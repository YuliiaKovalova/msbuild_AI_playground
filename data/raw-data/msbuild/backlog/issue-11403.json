{
  "number": 11403,
  "title": "msbuild does not build precompiled header before building source file if UseMultiToolTask=true and path to the pch.h is relative",
  "body": "### Issue Description\n\nI have the following project: \n```\npch.h\npch.cpp\ntest/in-sub-folder.cpp \nDirectory.Build.props\n```\nThe content of the `Directory.Build.props` is \n```xml\n<Project>\n  <PropertyGroup>\n    <UseMultiToolTask>true</UseMultiToolTask>            \n  </PropertyGroup>\n</Project>\n```\nand the `test/in-sub-folder.cpp` file has a `#include \"../pch.h\"`\n\nIf I try to compile the project I get \n```\n03:08:37:193\tRebuild started at 03:08...\n03:08:37:252\t1>------ Rebuild All started: Project: TestCcache2, Configuration: Debug x64 ------\n03:08:37:383\t1>in-sub-folder.cpp\n03:08:37:433\t1>pch.cpp\n03:08:37:433\t1>F:\\git_projects\\TestCcache2\\test\\in-sub-folder.cpp(1,10): error C1083: Cannot open precompiled header file: 'TestCcache2\\x64\\Debug\\TestCcache2.pch': No such file or directory\n03:08:38:000\t1>Done building project \"TestCcache2.vcxproj\" -- FAILED.\n03:08:38:007\t========== Rebuild All: 0 succeeded, 1 failed, 0 skipped ==========\n03:08:38:007\t========== Rebuild completed at 03:08 and took 00,849 seconds ==========\n```\n\n\n### Steps to Reproduce\n\nYou can find an example project here: https://github.com/autoantwort/msbuild-bug-repro \n\n### Expected Behavior\n\nThe file in the subfolder should be compiled after the precompiled header is compiled \n\n### Actual Behavior\n\nThe file in the subfolder is compiled before the precompiled header is compiled\n\n### Analysis\n\nIt seems that msbuild misses the dependency on the precompiled header file. \n\n### Versions & Configurations\n\n```\n** Visual Studio 2022 Developer Command Prompt v17.12.4\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Professional>msbuild -version\nMSBuild-Version 17.12.12+1cce77968 f\u00fcr .NET Framework\n17.12.12.57101\n```",
  "state": "OPEN",
  "createdAt": "2025-02-10T02:13:24Z",
  "updatedAt": "2025-02-12T22:40:00Z",
  "closedAt": null,
  "author": {
    "login": "autoantwort"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "BTW the bug does not occur when I do a `#include \"pch.h\"` in `test/in-sub-folder.cpp` which should be an error because there is no such file in the include search paths (IntelliSence also complains). ",
        "createdAt": "2025-02-10T02:16:38Z",
        "author": {
          "login": "autoantwort"
        }
      },
      {
        "body": "Hi @yuehuang010,\n\nCould you please check if it belongs to custom C++ targets/tasks that might cause this issue?\nThanks!",
        "createdAt": "2025-02-11T15:41:21Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "It is designed to use `#include \"pch.h\"` in `test/in-sub-folder.cpp`.  The compiler takes the name from the `/Yu\"pch.h\"` switch to look for the #include line.",
        "createdAt": "2025-02-11T17:30:08Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "But you can also use `#include \"../pch.h\"` in `test/in-sub-folder.cpp` which is theoretically more correct and specify `/Yu\"../pch.h\"`. When I don't use `UseMultiToolTask` this also works fine, otherwise I get the described bug. ",
        "createdAt": "2025-02-11T18:57:06Z",
        "author": {
          "login": "autoantwort"
        }
      },
      {
        "body": "MTT detect the pch dependency using the /Yu name to associate to the creating `<ClCompile>` item.  I would expect an error like below because the pch.cpp is still being created in parallel with infolder.cpp.  \n\n```\nAdding source \"ConsoleApplication1.cpp\" with dependency on \"pch.cpp\".\nAdding source \"Folder\\infolder.cpp\".\nAdding source \"pch.cpp\".\n\nerror C1083: Cannot open precompiled header file: 'ConsoleApplication1.pch': No such file or directory\n```\n\n\n\n\n",
        "createdAt": "2025-02-11T19:36:56Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "What is the use case?  Is it to address the Intellisense squiggle?\n\nA simple workaround is to add the pch path to the list of Include path.  That will satisfy the compiler and intellisense.",
        "createdAt": "2025-02-11T19:37:32Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "> I would expect an error like below because the pch.cpp is still being created in parallel with infolder.cpp.\n\nNo it works fine (`UseMultiToolTask=false`): \n```\n1>------ Rebuild All started: Project: TestCcache2, Configuration: Debug x64 ------\n1>pch.cpp\n1>TestCcache2.cpp\n1>in-sub-folder.cpp\n1>TestCcache2.vcxproj -> F:\\git_projects\\TestCcache2\\x64\\Debug\\TestCcache2.exe\n========== Rebuild All: 1 succeeded, 0 failed, 0 skipped ==========\n========== Rebuild completed at 21:07 and took 01,240 seconds ==========\n```",
        "createdAt": "2025-02-11T20:08:27Z",
        "author": {
          "login": "autoantwort"
        }
      },
      {
        "body": "> What is the use case? Is it to address the Intellisense squiggle? \n\nYes, otherwise everything gets red and code completion does not work. ",
        "createdAt": "2025-02-11T20:11:25Z",
        "author": {
          "login": "autoantwort"
        }
      },
      {
        "body": "> > I would expect an error like below because the pch.cpp is still being created in parallel with infolder.cpp.\n> \n> No it works fine (`UseMultiToolTask=false`):\n> \n> ```\n> 1>------ Rebuild All started: Project: TestCcache2, Configuration: Debug x64 ------\n> 1>pch.cpp\n> 1>TestCcache2.cpp\n> 1>in-sub-folder.cpp\n> 1>TestCcache2.vcxproj -> F:\\git_projects\\TestCcache2\\x64\\Debug\\TestCcache2.exe\n> ========== Rebuild All: 1 succeeded, 0 failed, 0 skipped ==========\n> ========== Rebuild completed at 21:07 and took 01,240 seconds ==========\n> ```\n\nMTT will parallelize all work, but it needs information to create a DAG.  Help set the edges directly.\n\n```xml\n<ClCompile>\n  <MultiToolTaskDependency>pch.h</MultiToolTaskDependency>\n</ClCompile>\n```",
        "createdAt": "2025-02-11T20:37:48Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "So normally when `UseMultiToolTask=false` the tasks don't get parallelized? \n\nDo I have to set `MultiToolTaskDependency` for every of my ~6600 files? \n",
        "createdAt": "2025-02-11T22:20:14Z",
        "author": {
          "login": "autoantwort"
        }
      },
      {
        "body": "> So normally when `UseMultiToolTask=false` the tasks don't get parallelized?\n\nBy default compile parallelism is off.  Your options are 1) to enable the MSVC compiler parallelism via the switch /MP.  or 2) Use task level MTT.\n\n> Do I have to set `MultiToolTaskDependency` for every of my ~6600 files?\n\nYou can use `<ItemDefinitionGroup/>` to set the value for all `<ClCompile/>`.  The metadata on an individual `<ItemGroup/>` will overwrite the `<ItemDefinitionGroup/>`.\n\n```xml\n<ItemDefinitionGroup>\n  <ClCompile>\n    <MultiToolTaskDependency>pch.h</MultiToolTaskDependency>\n  </ClCompile>\n</ItemDefinitionGroup>\n```\n\n\n",
        "createdAt": "2025-02-12T01:19:48Z",
        "author": {
          "login": "yuehuang010"
        }
      }
    ]
  }
}