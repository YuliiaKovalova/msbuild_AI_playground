{
  "number": 1352,
  "title": "GenerateResources task does not support non-string resources on .NET core",
  "body": "related: dotnet/corefx#12565\r\n\r\nsee: https://github.com/Microsoft/msbuild/blob/xplat/src/XMakeTasks/GenerateResource.cs#L2906\r\nThe GenerateResources task incorrectly assumes that all entries in a resx file are type string. On .NET core ResourceManager supports loading all types in ResourceTypeCode other than user defined types. The GenerateResources task should properly support adding resources of all types in the ResourceTypeCode enum.",
  "state": "CLOSED",
  "createdAt": "2016-11-16T23:25:10Z",
  "updatedAt": "2024-02-21T17:24:16Z",
  "closedAt": "2018-06-27T20:05:49Z",
  "author": {
    "login": "alexperovich"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Clarification, this bug exists when using the no-ResxResourceReader fallback path. That path can never be as elaborate as the regular path, but it could be educated to understand more types such as ints.",
        "createdAt": "2016-11-21T17:54:08Z",
        "updatedAt": "2016-11-21T17:54:08Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I run into this on VSTS because Visual Studio decided to make .md files Binary File resources after I told it to add a Text File and hence generating byte[] resources. Combined with VSTS Package Management breaking command line restore/build on my machine, this was time consuming.",
        "createdAt": "2018-05-27T04:25:58Z",
        "updatedAt": "2018-05-27T04:25:58Z",
        "author": {
          "login": "ericwj"
        }
      },
      {
        "body": "Duped by #2221. This one has a more descriptive title and is older. That one has more discussion.",
        "createdAt": "2018-06-26T21:11:29Z",
        "updatedAt": "2018-06-26T21:11:29Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "I've run into this issue now with embedded schema files in a test project. A lot of time wasted with confusion of builds working fine in VS vs. not in CLI.",
        "createdAt": "2018-06-27T18:30:06Z",
        "updatedAt": "2018-06-27T18:30:06Z",
        "author": {
          "login": "maxrandolph"
        }
      },
      {
        "body": "I went ahead and changed the title on #2221 and I'll close this one as a duplicate. More people are engaged on #2221 than here.",
        "createdAt": "2018-06-27T20:05:49Z",
        "updatedAt": "2018-06-27T20:05:49Z",
        "author": {
          "login": "nguerrera"
        }
      }
    ]
  }
}