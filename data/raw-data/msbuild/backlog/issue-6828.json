{
  "number": 6828,
  "title": "CreateCSharpManifestResourceName produces wrong result due to being unable to parse file-scoped namespaces",
  "body": "This is the underlying cause for issue https://github.com/dotnet/aspnetcore/issues/35459, and led to a regression in localization starting from .NET 6 preview 7.\r\n\r\nGiven a `.resx` resource that depends on a `.cs` resource, `CreateCSharpManifestResourceName` contains logic that generates a resource name of the form `<ClassName>.<culturename>`. The logic for that is [here](https://github.com/dotnet/msbuild/blob/7f18297304ff4932bc9f4cce60487ca3a3dce34d/src/Tasks/CreateCSharpManifestResourceName.cs#L118-L139).\r\n\r\n * Historically, `<ClassName>` has always been the **fully qualified class name**, e.g., `MyApp.Pages.Counter`, giving a final manifest resource name like `MyApp.Pages.Counter.es`.\r\n * Starting from .NET 6 preview 7, if the depended-upon `.cs` files uses file-scoped namespaces (which is legit for it to do), then the parsing process inside `CSharpParserUtilities` ([code here](https://github.com/dotnet/msbuild/blob/7f18297304ff4932bc9f4cce60487ca3a3dce34d/src/Tasks/CSharpParserUtilities.cs)) goes wrong, and it returns a non-qualified class name. Consequently, the resource name ends up being something like `Counter.es` and misses off the namespace. Then at runtime the resources can't be found and don't work.\r\n\r\nThere's [a complete repro provided by @IEvangelist](https://github.com/IEvangelist/blazor-localization-bug). To use it, ignore the Blazor aspects, and just build the two projects (one with preview 6, the other with preview 7), and then check the generated resource assemblies, e.g., using ILSpy.\r\n\r\nPreview 6:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/132512131-9d1bfa02-3fb0-4b74-9d18-f49264e0ac18.png)\r\n\r\nPreview 7:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/132512170-2f6bf8fc-3735-4cfc-96eb-695dc3288b56.png)\r\n\r\nAlternatively build with `/bl` and check the logs in MSBuild Structured Log viewer. In the preview 7 case, you'll see:\r\n\r\n![image](https://user-images.githubusercontent.com/1101362/132512671-ca8702c2-b366-481c-a69f-2178b5559b66.png)\r\n\r\nNotice how the output item's `ManifestResourceName` is `Counter.es` when it should be `DotNetSixPreviewSeven.Pages.Counter.es`, so it won't work at runtime.\r\n\r\nYou can verify the problem is in parsing `Counter.razor.cs` by changing its initial content:\r\n\r\n```cs\r\nnamespace DotNetSixPreviewSeven.Pages;\r\npublic partial class Counter { }\r\n```\r\n\r\nto use an old-style namespace with braces:\r\n\r\n```cs\r\nnamespace DotNetSixPreviewSeven.Pages\r\n{\r\n    public partial class Counter { }\r\n}\r\n```\r\n\r\n... and then the build will generate the correct output.\r\n\r\nSince file-scoped namespaces are a legit way to write C# classes as of .NET 6, we should assume people will use them. For new projects, people will probably not even think about using old-style namespaces.",
  "state": "CLOSED",
  "createdAt": "2021-09-08T12:56:36Z",
  "updatedAt": "2024-02-21T14:11:42Z",
  "closedAt": "2021-09-29T16:48:29Z",
  "author": {
    "login": "SteveSandersonMS"
  },
  "labels": [
    "bug",
    "Partner request",
    "For consideration",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "Note that this won't only affect Blazor. It will affect anything that uses `IStringLocalizer<T>` (because it does a lookup on the fully-qualified name of type `T`), which is the de-facto localization API for ASP.NET Core.",
        "createdAt": "2021-09-08T12:59:48Z",
        "updatedAt": "2021-09-08T12:59:48Z",
        "author": {
          "login": "SteveSandersonMS"
        }
      }
    ]
  }
}