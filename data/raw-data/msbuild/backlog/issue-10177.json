{
  "number": 10177,
  "title": "[Broken Build]: Blazor Integrity issue",
  "body": "### Issue Description\n\nWhen deploying a blazor wasm  app in dotnet 6, 7 & 8 the integrity of the dlls/wasm files are invalid, randomly.\r\nwhen running `dotnet publish -o ../wwwroot` the build succeeds but the dlls/wasm files are not updated, the old versions from the previous build(s) are taken, thus the invalid sha (error in js console any browser cache cleared)\r\n\r\nThe issue is solved when deleting every `obj` and `bin` folder in the repository.\r\nIt happens on azure (MSBuild) and also locally using visual studio.\r\n\r\nIt is unpredictable if a release containing ny blazor wasm is working in the end, if would be cool if the Build can at least fail and not succeed with corrupt files. Dotnet version does not matter it seems.\r\n\r\nThe issue does not appear when the browser cache was not cleared and the files were not actually fetched, so only new users are doomed, until someone clears the cache and then also notices the app is totally broken.\n\n### Steps to Reproduce\n\nNot sure how to reproduce this, it happens randomly\r\nI had blazor wasm projects in dotnet 6 with the syncfusion library and dotnet 6 & 8 with mudblazor, so its probably related to something different.\n\n### Expected Behavior\n\nIgnore update previous generated dlls/wasm files on build in /bin and /obj folders\n\n### Actual Behavior\n\n-\n\n### Ask us questions\n\nIs it possible to add a feature to f.e. the csproj file that deleted the old dlls/wasm files like\r\n`<DeletePreviousWasmResourcesOnBuild>true<../>` ?\r\nVery annoying to push to production and then see it is actually not working, at least some parts of the app, this case i would have to check very wasm part of the entire app and see if any of them is broken, on every release i do",
  "state": "OPEN",
  "createdAt": "2024-05-27T11:34:58Z",
  "updatedAt": "2025-05-29T17:20:21Z",
  "closedAt": null,
  "author": {
    "login": "skyslide22"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "AR-May"
      }
    ]
  },
  "labels": [
    "needs-more-info",
    "stale",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "@skyslide22 It seems like there might be some issue with incrementality in your builds. \r\nLet's try first to verify that the rebuild works without issues. Could you please instead of `dotnet publish` run first `dotnet build /t:rebuild` and then `dotnet publish --no-build -o ../wwwroot`? Does it lead to the same issues?",
        "createdAt": "2024-05-28T15:26:10Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "will take a look the next time we update and break stuff ^^\r\nbut it definitely happens mostly when we update the versions of any nuget package in the .csproj file",
        "createdAt": "2024-07-20T01:38:13Z",
        "author": {
          "login": "skyslide22"
        }
      },
      {
        "body": "@AR-May for blazor incrementality should we ask the blazor team to dig in for more details? ",
        "createdAt": "2024-07-20T02:37:02Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "@baronfel yes, we would need the blazor team to provide us with a [binary log](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Providing-Binary-Logs.md) of the bad deployment.",
        "createdAt": "2024-07-22T10:18:10Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "I am testing it on azure right now, will give results the next days",
        "createdAt": "2024-09-04T20:07:23Z",
        "author": {
          "login": "skyslide22"
        }
      },
      {
        "body": "So, i am not able to reproduce this issue, changing/adding project references/packages does not break the app, i will invenstigate further, but that will take some weeks.\r\nWill make a report when i get this issue in production again.",
        "createdAt": "2024-09-05T23:10:39Z",
        "author": {
          "login": "skyslide22"
        }
      },
      {
        "body": "i get the same issues using your suggestion:\r\n```md\r\nthis time i did not use\r\ndotnet publish -o ../wwwroot is not used now\r\n\r\nbut this:\r\ndotnet build /t:rebuild \r\ndotnet publish --no-build -o ../wwwroot\r\n\r\ni cleared the wwwroot folder before, but the bin & obj folders were not deleted in the project folders(/server, /client, /shared)\r\n```\r\nSo i changed some code in a controller action and the result is a wasm integrity error, i have not changed anything near wasm or blazor file(s).\r\n\r\n```md\r\nFailed to find a valid digest in the 'integrity' attribute for resource \r\n'website.net/_framework/dotnet.native.wasm' \r\nwith computed SHA-256 integrity 'b3QtgAqvT5FoNyYgoEYsdE4zF5C1Is6lhQ8VEkROor8='. \r\nThe resource has been blocked.\r\n```\r\n\r\nthe slot(azure) where i published on was not deployed to for some weeks, maybe the issue occours when the files in bin/obj folders are too old?",
        "createdAt": "2024-09-11T13:52:31Z",
        "author": {
          "login": "skyslide22"
        }
      },
      {
        "body": "@skyslide22 I think the issue could be request caching, i.e. the browser is thinking that the items on-hand are the latest and greatest. \n\nThis can happen if the server is returning cache headers despite the client including no-cache in the requests. \n\nWe also included some JS prior to blazor.startup(..) to determine whether it needs to clear out any DLLs before attempting to start. This is more of a stop-gap solution as there seems to be many things that could lead to integrity issues, however, serving a dead-app is a show stopper for us.\n\nAlthough don't take my word for it, keen to know if you've made any progress!",
        "createdAt": "2025-04-07T02:55:48Z",
        "author": {
          "login": "scott-the-programmer"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "createdAt": "2025-05-29T17:20:20Z",
        "author": {
          "login": "dotnet-policy-service"
        }
      }
    ]
  }
}