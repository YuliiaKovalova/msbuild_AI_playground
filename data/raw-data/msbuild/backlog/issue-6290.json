{
  "number": 6290,
  "title": "resources relative above the project generate invalid namespace",
  "body": "### Issue Description\r\nUsing resx files which are above current csproj are not working, the will add to namespace the relative dots \"..\".\r\n\r\n### Steps to Reproduce\r\n\r\n* build attached project in VS2019 16.9.2, if not fail, use \"Run Custom Tool\" on resx\r\n[ResXGenAboveProject.zip](https://github.com/dotnet/msbuild/files/6190033/ResXGenAboveProject.zip)\r\n\r\n### Expected Behavior\r\n\r\nNamespace is generated which can be used, best would be same as the key on creating ResourceManager, in provided example \"WindowsFormsDependentUponConventionTest.Properties\".\r\n\r\n### Actual Behavior\r\nNamespace in resources.designer.cs with .. is generated:\r\n`namespace WindowsFormsDependentUponConventionTest....Resources {`\r\n",
  "state": "CLOSED",
  "createdAt": "2021-03-23T13:39:23Z",
  "updatedAt": "2024-02-21T14:14:12Z",
  "closedAt": "2021-04-05T22:56:54Z",
  "author": {
    "login": "trivalik"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I'm able to reproduce your issue on 16.10 preview.\r\n\r\nSteps:\r\n1. Download repro\r\n2. Build project\r\n3. Right click on the resx file and click \"Run Custom Tool\"\r\n4. See the generated designer file have `namespace WindowsFormsDependentUponConventionTest....Resources`.\r\n\r\n@ryanbrandenburg we've chatted a while back about resources as they relate to asp.net, does this ring any bells for you? I recall this type of folder structure not being supported, not sure if you have any idea for winforms.\r\n\r\nNotes to self:\r\nDeploy a bootstrapped build and debug into msbuild when Run Custom Tool is called.",
        "createdAt": "2021-03-31T23:40:28Z",
        "updatedAt": "2021-03-31T23:40:28Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Debugging into the msbuild process after hitting \"Run Custom Tool\", this is the list of targets that run:\r\n![image](https://user-images.githubusercontent.com/4691428/113352677-773a1180-92f1-11eb-822a-fa4030628cfe.png)\r\n /cc: @davkean does this look like a standard design time build? also do you know what runs when \"Run Custom Tool\" is called? first pass doesn't seem like MSBuild controls that. ",
        "createdAt": "2021-04-01T20:53:47Z",
        "updatedAt": "2021-04-01T20:53:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Run Custom Tool calls a single file generator  in the RESX case and not targets. Those targets will be called _after_ the generation of the file.\r\n\r\nWe'd never previously allowed it to run against a linked file so looks like that restriction was removed for whatever reason but the generation was not fixed. @trivalik The easiest way to keep track of this, is via Help -> Send Feedback -> Report a Problem, otherwise, we can move this bug internally.",
        "createdAt": "2021-04-01T21:24:17Z",
        "updatedAt": "2021-04-01T21:24:17Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@davkean thanks! closing this issue. See davkean's suggestion on reporting this problem.",
        "createdAt": "2021-04-01T21:34:27Z",
        "updatedAt": "2021-04-01T21:34:27Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}