{
  "number": 8044,
  "title": "Item casing excludes expected files on case-sensitive filesystems",
  "body": "### Issue Description\r\nWhen using an ItemGroup to include files, casing can exclude files that the user would expect to be included.\r\n\r\n### Steps to Reproduce\r\ntest.proj\r\n```\r\n<Project>\r\n  <PropertyGroup>\r\n    <BuildDependsOn>$(BuildDependsOn);TestCasing</BuildDependsOn>\r\n  </PropertyGroup>\r\n  <Target Name=\"TestCasing\">\r\n    <ItemGroup>\r\n      <MyExtensions Include=\".Dll;.dll\" />\r\n      <Binaries Include=\"**/*%(MyExtensions.Identity)\" />\r\n    </ItemGroup>\r\n    <Message Importance=\"High\" Text=\"Using %(MyExtensions.Identity)\" />\r\n    <Message Importance=\"High\" Text=\"Found %(Binaries.Identity)\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\ncommands:\r\n```\r\nmkdir files\r\ntouch files/test.dll\r\ntouch files/test.Dll\r\ndotnet msbuild test.proj\r\n```\r\n\r\n### Expected Behavior\r\n```\r\nMSBuild version 17.4.0-preview-22428-01+14c24b2d3 for .NET\r\n  Using .Dll\r\n  Using .dll\r\n  Found 1/test.Dll\r\n  Found 1/test.dll\r\n```\r\n\r\n### Actual Behavior\r\n```\r\nMSBuild version 17.4.0-preview-22428-01+14c24b2d3 for .NET\r\n  Using .Dll\r\n  Found 1/test.Dll\r\n```\r\n### Analysis\r\nThis works fine on Windows because it's case-insensitive anyway but on Linux you end up missing files you thought were included.\r\n\r\n### Versions & Configurations\r\n\r\nVerified on Fedora 34 `MSBuild version 17.4.0-preview-22428-01+14c24b2d3 for .NET`.\r\n",
  "state": "OPEN",
  "createdAt": "2022-10-11T16:25:06Z",
  "updatedAt": "2024-01-31T08:16:04Z",
  "closedAt": null,
  "author": {
    "login": "crummel"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Would this be fixed with case-sensitive batching or with case-insensitive globbing?",
        "createdAt": "2022-10-11T16:34:37Z",
        "updatedAt": "2022-10-11T16:34:37Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Sorry, I'm not really finding how to turn either of those on, do you have a pointer to some reference?",
        "createdAt": "2022-10-11T20:32:18Z",
        "updatedAt": "2022-10-11T20:32:18Z",
        "author": {
          "login": "crummel"
        }
      },
      {
        "body": "I don't know a way to tell MSBuild whether those should be case-sensitive. I meant to ask, what would be the right way to fix this by modifying MSBuild.",
        "createdAt": "2022-10-11T20:41:25Z",
        "updatedAt": "2022-10-11T20:41:25Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "There's no way to make globbing from disk case-insensitive today; .NET doesn't expose such a flag and it's surprisingly difficult to build it manually. There's also a question of expectations here: Very UNIXy People\u2122\ufe0f _want_ case sensitivity and are upset that we don't today work very well with files that differ only by case. But also Windows-centric people are used to case insensitivity and are sometimes confused or surprised when porting to Linux that things sometimes care that the case in the project files doesn't match case on disk.\r\n\r\nOn net, I lean toward \"keep current behavior\", since if you're on a case-sensitive filesystem you've sorta opted into that, but I'm open to other proposals if they consider all of the above . . .",
        "createdAt": "2022-10-13T16:27:30Z",
        "updatedAt": "2022-10-13T16:27:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Potential syntax for case-sensitive batching.\r\n\r\n[Item element](https://learn.microsoft.com/visualstudio/msbuild/item-element-msbuild?view=vs-2019) supports `MatchOnMetadataOptions=\"CaseSensitive\"`, but I don't see how MSBuild could safely support a similar `BatchingOptions=\"CaseSensitive\"` attribute here, because existing projects may use that for metadata instead:\r\n\r\n```XML\r\n    <ItemGroup>\r\n      <MyExtensions Include=\".Dll;.dll\" />\r\n      <Binaries Include=\"**/*%(MyExtensions.Identity)\" BatchingOptions=\"CaseSensitive\" />\r\n    </ItemGroup>\r\n```\r\n\r\nMatchOnMetadataOptions does not have that problem, because it works only with `Remove`, which does not support metadata in attributes anyway.\r\n\r\nPerhaps the option should instead be within the parentheses, like the [MSBuild transforms](https://learn.microsoft.com/visualstudio/msbuild/msbuild-transforms?view=vs-2019) syntax:\r\n\r\n```XML\r\n    <ItemGroup>\r\n      <MyExtensions Include=\".Dll;.dll\" />\r\n      <Binaries Include=\"**/*%(MyExtensions.Identity->CaseSensitive)\" />\r\n    </ItemGroup>\r\n```\r\n\r\nor even:\r\n\r\n```XML\r\n    <ItemGroup>\r\n      <MyExtensions Include=\".Dll;.dll\" />\r\n      <Binaries Include=\"**/*$([MSBuild]::CaseSensitive(%(MyExtensions.Identity)))\" />\r\n    </ItemGroup>\r\n```\r\n",
        "createdAt": "2022-10-15T17:08:28Z",
        "updatedAt": "2022-10-15T17:09:28Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}