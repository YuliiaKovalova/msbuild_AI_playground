{
  "number": 4979,
  "title": "Folder is not copied when initially empty",
  "body": "On an ASP.NET Core 3.1 csproj file I have an `approot` folder with client code (javascript).\r\n\r\nUsing webpack the client code is built and saved on the folder `approot\\dist`.\r\n\r\nThen I need to copy `approot\\dist` content to `webroot` folder which is initially empty.\r\n\r\nSo I added the following to my project `csproj` file:\r\n\r\n```xml\r\n  <ItemGroup> \r\n    <Content Include=\"webroot\\**\\*.*\"> \r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory> \r\n    </Content> \r\n  </ItemGroup>\r\n\r\n  <Target Name=\"OnBuild\" BeforeTargets=\"BeforeBuild;BeforePublish\">\r\n    <Exec WorkingDirectory=\"approot\" Command=\"npm install\" />\r\n    <Exec WorkingDirectory=\"approot\" Command=\"npm run build --prod\" />\r\n    <ItemGroup>\r\n      <Folder Include=\"approot\\dist\\**\\*.*\" />\r\n    </ItemGroup>\r\n    <Copy SourceFiles=\"@(Folder)\" DestinationFolder=\"webroot\\%(RecursiveDir)\"></Copy>\r\n  </Target>\r\n```\r\n\r\n**Problem**\r\n\r\nThe `webroot` folder is **not copied** to the Output folder. I built it a second time and now it is.\r\n\r\nSo I tried the following:\r\n\r\n```xml\r\n  <Target Name=\"OnBuild\" BeforeTargets=\"BeforeBuild;BeforePublish\">\r\n    <Exec WorkingDirectory=\"approot\" Command=\"npm install\" />\r\n    <Exec WorkingDirectory=\"approot\" Command=\"npm run build --prod\" />\r\n    <ItemGroup>\r\n      <Folder Include=\"approot\\dist\\**\\*.*\" />\r\n    </ItemGroup>\r\n    <Copy SourceFiles=\"@(Folder)\" DestinationFolder=\"webroot\\%(RecursiveDir)\"></Copy>\r\n    <ItemGroup> \r\n      <Content Include=\"webroot\\**\\*.*\"> \r\n        <CopyToOutputDirectory>Always</CopyToOutputDirectory> \r\n      </Content> \r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n\r\nAnd now it works ... Is this expected?\r\n\r\n**OS info**\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.15\r\n OS Platform: Darwin\r\n RID:         osx.10.15-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.1.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [/usr/local/share/dotnet/sdk]\r\n",
  "state": "CLOSED",
  "createdAt": "2019-12-12T16:09:47Z",
  "updatedAt": "2024-02-21T17:05:48Z",
  "closedAt": "2019-12-16T23:39:57Z",
  "author": {
    "login": "mdmoura"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Yes, that is expected behavior. The ItemGroup is outside of a target, so its wildcards are expanded at project evaluation time\u2014before running any targets\u2014so it moves the files you want into webroot, then copies what had _originally_ been the list of contents of webroot (nothing) into the output directory, whereas you want it to move files into webroot then copy the current contents to the output directory.\r\n\r\nIn code, it might look something like:\r\n```\r\nvar files = ExpandGlob(\"webroot\\**\\*.*\")\r\n// Evaluation completes\r\n// OnBuild:\r\nCopy(approot, webroot)\r\n// something, later\r\nCopy(files, output)\r\n```\r\nYour second snippet is a good way to do it.",
        "createdAt": "2019-12-16T23:39:57Z",
        "updatedAt": "2019-12-16T23:39:57Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}