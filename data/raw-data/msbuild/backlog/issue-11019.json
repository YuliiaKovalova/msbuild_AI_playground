{
  "number": 11019,
  "title": "[Broken Build]: What changed between 17.10.4 to 17.12.6? Our build is broken.",
  "body": "### Issue Description\n\nWe have a F# solution which is a mixture of net48, netstandard20 and some WebSharper 4.x projects. After installing VS 17.12 update this week, our team can no longer build the WebSharper projects. If we use the slightly older VS Build Tools LTSC 17.10.4 to run the build, the issue goes away.\n\n\n\n### Steps to Reproduce\n\nThe WebSharper (WsFsc) tool can no longer \"see\" the `<ProjectReference>`'s and thinks all the namespaces/modules/types in those assemblies are missing. The actual F#/FSC compilation itself is successful.\n\nIf I replace the SDK-style <ProjectReference>'s with the very old style of:\n\n```\n<Reference Include=\"MyProject\">\n\t<HintPath>bin\\Debug\\MyProject.dll</HintPath>\n\t<Private>True</Private>\n</Reference>\n```\n\n.. then the issue goes away - albeit then breaks other stuff in WebSharper's compiler but that seems unrelated to the initial problem.\n\nIt looks like this new version of MSBuild has broken something with older toolchains?\n\n\nI've attached a binlog (.txt to get around file restriction)\n\n[sg.binlog.txt](https://github.com/user-attachments/files/17849316/sg.binlog.txt)\n\n\n\n### Expected Behavior\n\n`<ProjectReference>` should behave the same way it did on 17.10.4 when dealing with older toolchains.\n\n### Actual Behavior\n\nWhen using MSBuild 17.12.6 the `<ProjectReference>`'s are not properly understood by WsFsc (WebSharper 4.x) post-compilation step. This is the step that converts F# code into JavaScript (if that's relevant).\n\n### Ask us questions\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-11-21T16:49:27Z",
  "updatedAt": "2025-01-17T12:27:15Z",
  "closedAt": "2025-01-17T12:27:13Z",
  "author": {
    "login": "nbevans"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "maridematte"
      }
    ]
  },
  "labels": [
    "needs-more-info",
    "stale",
    "closed-by-bot",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Reading through this https://github.com/dotnet/msbuild/blob/main/documentation/ProjectReference-Protocol.md - there could be any number of things here relating to this issue - certainly ProjectReference has had a number of changes made to it in recently MSBuild versions. Maybe some of the dynamic platform/targeting stuff is the root cause.",
        "createdAt": "2024-11-22T10:32:47Z",
        "author": {
          "login": "nbevans"
        }
      },
      {
        "body": "Would you have a small repo project? It might be the easiest way for investigation. For sending binlogs, we suggest you open a ticket through [report a problem through Visual Studio](https://developercommunity.visualstudio.com/report), as binlogs have a lot of personal information from your setup.",
        "createdAt": "2024-12-02T15:57:56Z",
        "author": {
          "login": "maridematte"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "createdAt": "2025-01-02T19:39:00Z",
        "author": {
          "login": "dotnet-policy-service"
        }
      },
      {
        "body": "This issue was closed due to inactivity. If you can still reproduce this bug, please comment with the requested information, detailed steps to reproduce the problem, or any other notes that might help in the investigation.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "createdAt": "2025-01-17T12:27:14Z",
        "author": {
          "login": "dotnet-policy-service"
        }
      }
    ]
  }
}