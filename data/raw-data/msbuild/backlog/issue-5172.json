{
  "number": 5172,
  "title": "Command line builds that conditionally remove project references still bring through NuGet dependencies for the removed project",
  "body": "### Steps to reproduce\r\n\r\nAttached is a solution that reproduces the issue described below:\r\n\r\nI have a .NET Core 3.1 console application, written using Visual Studio 2019, that has the following csproj contents:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <AddDependency>true</AddDependency>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Condition=\"'$(AddDependency)' == 'true'\" Include=\"..\\DependencyProj\\DependencyProj.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nThe referenced project, DependencyProj, contains the following:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Identity.Client\" Version=\"4.9.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nThe following scenarios work as expected:\r\n\r\n1) Visual Studio build where AddDependency = **true**, DependencyProj.dll and Microsoft.Identity.Client.dll are placed into the bin folder for PackageReferenceDependencyApp\r\n\r\n2) Visual Studio build where AddDependency = **false**, DependencyProj.dll and Microsoft.Identity.Client.dll are **NOT** placed into the bin folder for PackageReferenceDependencyApp\r\n\r\n3) Command line build where AddDependency = **true**, DependencyProj.dll and Microsoft.Identity.Client.dll are placed into the bin folder for PackageReferenceDependencyApp\r\n```\r\nmsbuild .\\PackageReferenceDependencyApp.csproj /t:clean;rebuild /p:AddDependency=true\r\n```\r\nThe issue is when I run the following scenario:\r\n\r\n4) Command line build where AddDependency = **false**\r\n```\r\nmsbuild .\\PackageReferenceDependencyApp.csproj /t:clean;rebuild /p:AddDependency=false\r\n```\r\nI would expect the outcome to be the same as 2). However, whilst DependencyProj.dll is absent as expected, Microsoft.Identity.Client.dll is present in the PackageReferenceDependencyApp bin folder.\r\n\r\nIt therefore seems that for command line builds, even though a project reference is screened out using a Condition, the NuGet packages for the referenced project are still brought through.\r\n\r\nPerhaps I am doing something wrong but this does not feel right to me. Whilst the sample is contrived, this is a very real issue for my current project where there is a need to keep the contents of application bin folders to the bare minimum.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n\r\n16.4.0.56107\r\n\r\nOS info:\r\n\r\nWindows 10 Enterprise, OS Build 18363.719\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\nVisual Studio 2019 v16.4.6\r\n",
  "state": "CLOSED",
  "createdAt": "2020-03-11T14:33:31Z",
  "updatedAt": "2024-02-21T17:04:42Z",
  "closedAt": "2020-03-25T16:02:46Z",
  "author": {
    "login": "MonkeyTennis"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "[PackageReferenceDependencyApp.zip](https://github.com/microsoft/msbuild/files/4318817/PackageReferenceDependencyApp.zip)\r\n",
        "createdAt": "2020-03-11T14:35:16Z",
        "updatedAt": "2020-03-11T14:35:16Z",
        "author": {
          "login": "MonkeyTennis"
        }
      },
      {
        "body": "Thanks for reporting this! The ProjectReference graph NuGet uses is built at restore time, not build time, so I was only able to reproduce this issue when I restored first with AddDependency=true. Conversely, if I restored with AddDependency=false, even building with AddDependency=true would not put Microsoft.Identity.Client.dll in the bin folder.\r\n\r\nWould you mind adding `/restore` to the command line where you specify `/p:AddDependency=false` and letting me know how it goes? Thanks!",
        "createdAt": "2020-03-16T21:50:02Z",
        "updatedAt": "2020-03-16T21:53:20Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Closing due to lack of response.",
        "createdAt": "2020-03-25T16:02:46Z",
        "updatedAt": "2020-03-25T16:02:46Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hi, I can confirm that adding a /restore command does fix the issue.\r\n\r\nThanks!",
        "createdAt": "2020-03-26T08:36:59Z",
        "updatedAt": "2020-03-26T08:36:59Z",
        "author": {
          "login": "MonkeyTennis"
        }
      }
    ]
  }
}