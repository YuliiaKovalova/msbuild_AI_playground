{
  "number": 3695,
  "title": "BaseIntermediateOutputPath is not supported with /restore",
  "body": "### Steps to reproduce\r\nWith a solution with vbproj and csproj containing PackageReference and ProjectReference for several projects :\r\n```xml\r\n  <ItemGroup>\r\n    <PackageReference Include=\"EPPlus\">\r\n      <Version>4.1.0</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>11.0.2</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n```\r\nRun MSBuild with the command line : \r\n\r\n> msbuild /restore  /toolsversion:15.0 /property:BaseIntermediateOutputPath=c:\\temp\\;VisualStudioVersion=15.0 mySolution.sln\r\n\r\n### Environment data\r\n`msbuild /version` output: `15.7.179.6572`\r\n\r\n### Expected  behavior\r\nThe build would must be in success\r\n\r\n### Actual behavior\r\nThe build fails with several errors due to missing references :\r\n\r\n> error BC30002: Type 'Newtonsoft.Json.JsonIgnore' is not defined.\r\n> error BC40056: Namespace or type specified in the Imports 'OfficeOpenXml' doesn't contain any public member or cannot be found. Make sure the namespace or the type is defined and contains at least one public member. Make sure the imported element name doesn't use any aliases.\r\n\r\nIf i remove the property **BaseIntermediateOutputPath** from the command line then the build is in success\r\n> msbuild /restore  /toolsversion:15.0 /property:VisualStudioVersion=15.0 mySolution.sln\r\n\r\n**Extracted from the log file**\r\n\r\n> ....\r\n> Using \"GetRestorePackageReferencesTask\" task from assembly \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.Build.Tasks.dll\".\r\n> Task \"GetRestorePackageReferencesTask\"\r\n>   (in) ProjectUniqueName 'C:\\Builds\\Project1.vbproj'\r\n>   (in) TargetFrameworks ''\r\n>   (in) PackageReferences 'EPPlus;Newtonsoft.Json'\r\n> Done executing task \"GetRestorePackageReferencesTask\".\r\n> ...\r\n> ...\r\n> ...\r\n> Using \"GetRestorePackageReferencesTask\" task from assembly \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.Build.Tasks.dll\".\r\n> Task \"GetRestorePackageReferencesTask\"\r\n>   (in) ProjectUniqueName 'C:\\Builds\\Project2.vbproj'\r\n>   (in) TargetFrameworks ''\r\n>   (in) PackageReferences 'EPPlus'\r\n> Done executing task \"GetRestorePackageReferencesTask\".\r\n> ...\r\n> ...\r\n> ...\r\n> Using \"GetRestorePackageReferencesTask\" task from assembly \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.Build.Tasks.dll\".\r\n> Task \"GetRestorePackageReferencesTask\"\r\n>   (in) ProjectUniqueName 'C:\\Builds\\Project3.csproj'\r\n>   (in) TargetFrameworks ''\r\n>   (in) PackageReferences 'Newtonsoft.Json'\r\n> Done executing task \"GetRestorePackageReferencesTask\".\r\n> ...\r\n> ...\r\n> ...\r\n> Using \"GetRestorePackageReferencesTask\" task from assembly \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.Build.Tasks.dll\".\r\n> Task \"GetRestorePackageReferencesTask\"\r\n>   (in) ProjectUniqueName 'C:\\Builds\\Project4.csproj'\r\n>   (in) TargetFrameworks ''\r\n>   (in) PackageReferences 'BouncyCastle.Crypto.dll'\r\n> Done executing task \"GetRestorePackageReferencesTask\".\r\n> ...\r\n> ...\r\n> ...\r\n> Using \"RestoreTask\" task from assembly \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.Build.Tasks.dll\".\r\n> Task \"RestoreTask\"\r\n>   (in) RestoreGraphItems Count '463'\r\n>   (in) RestoreDisableParallel 'False'\r\n>   (in) RestoreNoCache 'False'\r\n>   (in) RestoreIgnoreFailedSources 'False'\r\n>   (in) RestoreRecursive 'True'\r\n>   (in) RestoreForce 'False'\r\n>   (in) HideWarningsAndErrors 'False'\r\n>   Running restore with 2 concurrent jobs.\r\n>   Reading project file C:\\Builds\\Project4.csproj.\r\n>   Restoring packages for C:\\Builds\\Project4.csproj...\r\n>   Restoring packages for .NETFramework,Version=v4.7.1...\r\n>   Resolving conflicts for .NETFramework,Version=v4.7.1...\r\n>   Scanning packages for runtime.json files...\r\n>   Restoring packages for .NETFramework,Version=v4.7.1/win...\r\n>   Resolving conflicts for .NETFramework,Version=v4.7.1/win...\r\n>   Restoring packages for .NETFramework,Version=v4.7.1/win-x64...\r\n>   Resolving conflicts for .NETFramework,Version=v4.7.1/win-x64...\r\n>   Restoring packages for .NETFramework,Version=v4.7.1/win-x86...\r\n>   Resolving conflicts for .NETFramework,Version=v4.7.1/win-x86...\r\n>   Checking compatibility of packages on .NETFramework,Version=v4.7.1.\r\n>   Checking compatibility for Refresh.Common.Utils 1.0.0.0 with .NETFramework,Version=v4.7.1.\r\n>   Checking compatibility for BouncyCastle.Crypto.dll 1.8.1 with .NETFramework,Version=v4.7.1.\r\n>   All packages and projects are compatible with .NETFramework,Version=v4.7.1.\r\n>   Checking compatibility of packages on .NETFramework,Version=v4.7.1 (win).\r\n>   Checking compatibility for Refresh.Common.Utils 1.0.0.0 with .NETFramework,Version=v4.7.1 (win).\r\n>   Checking compatibility for BouncyCastle.Crypto.dll 1.8.1 with .NETFramework,Version=v4.7.1 (win).\r\n>   All packages and projects are compatible with .NETFramework,Version=v4.7.1 (win).\r\n>   Checking compatibility of packages on .NETFramework,Version=v4.7.1 (win-x64).\r\n>   Checking compatibility for Refresh.Common.Utils 1.0.0.0 with .NETFramework,Version=v4.7.1 (win-x64).\r\n>   Checking compatibility for BouncyCastle.Crypto.dll 1.8.1 with .NETFramework,Version=v4.7.1 (win-x64).\r\n>   All packages and projects are compatible with .NETFramework,Version=v4.7.1 (win-x64).\r\n>   Checking compatibility of packages on .NETFramework,Version=v4.7.1 (win-x86).\r\n>   Checking compatibility for Project4 1.0.0.0 with .NETFramework,Version=v4.7.1 (win-x86).\r\n>   Checking compatibility for BouncyCastle.Crypto.dll 1.8.1 with .NETFramework,Version=v4.7.1 (win-x86).\r\n>   All packages and projects are compatible with .NETFramework,Version=v4.7.1 (win-x86).\r\n>   Committing restore...\r\n>   Generating MSBuild file c:\\temp\\Project4.csproj.nuget.g.props.\r\n>   Generating MSBuild file c:\\temp\\Project4.csproj.nuget.g.targets.\r\n>   Writing lock file to disk. Path: c:\\temp\\project.assets.json\r\n>   Writing cache file to disk. Path: c:\\temp\\Project4.csproj.nuget.cache\r\n>   Restore completed in 1,13 sec for C:\\Builds\\Project4.csproj.\r\n>   \r\n>   NuGet Config files used:\r\n>       C:\\Users\\TFSBuild\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n>   \r\n>   Feeds used:\r\n>       https://api.nuget.org/v3/index.json\r\n> Done executing task \"RestoreTask\".\r\n> Done building target \"Restore\" in project \"mySolution.sln\".\r\n> Done Building Project \"C:\\Builds\\mySolution.sln\" (Restore target(s)).\r\n> Project \"C:\\Builds\\mySolution.sln\" on node 1 (default targets).\r\n> Building with tools version \"15.0\".\r\n> ...\r\n> ...\r\n> ...\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2018-09-04T08:40:05Z",
  "updatedAt": "2024-02-21T17:11:26Z",
  "closedAt": "2018-09-05T15:58:26Z",
  "author": {
    "login": "CodeTroopers"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is technically by design as `BaseIntermediateOutputPath` has become a property that you cannot set as a global property.  When you set it via the command-line argument `/Property` it is used by all projects that are built.  NuGet writes out an assets file, `project.assets.json` to the `BaseIntermediateOutputPath` location.  If the same value is used by all projects, then the file is written multiple times with only the last one winning.  This will cause build breaks since most likely there will be a missing dependency.\r\n\r\nYour value for `BaseIntermediateOutputPath` must be unique per project.  This means it can only really be set in an MSBuild import/project.  You can set it in [`Directory.Build.props`](https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2017#directorybuildprops-and-directorybuildtargets) with something like:\r\n\r\n```xml\r\n  <PropertyGroup>\r\n    <BaseIntermediateOutputPath>$(Root)\\obj\\$(MSBuildProjectFile)</BaseIntermediateOutputPath>\r\n  </PropertyGroup>\r\n```",
        "createdAt": "2018-09-04T15:14:49Z",
        "updatedAt": "2018-09-04T15:14:49Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": ">  If the same value is used by all projects, then the file is written multiple times with only the last one winning.\r\n\r\nDoes NuGet could write an incremential file instead of to write a new file for each project?",
        "createdAt": "2018-09-05T07:11:54Z",
        "updatedAt": "2018-09-05T07:14:42Z",
        "author": {
          "login": "CodeTroopers"
        }
      },
      {
        "body": "It would be interesting if the assets file would change from `project.assets.json` to `$(MSBuildProjectName).assets.json`.\r\nIt would solve a lot of projects.\r\nMaybe this can be considered for 16.0 / NuGet 5?  @jeffkl could you take that to the involved teams for discussion?",
        "createdAt": "2018-09-05T09:24:53Z",
        "updatedAt": "2018-09-05T09:24:53Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "There's an open issue for having a project-specific name for the assets file here: https://github.com/NuGet/Home/issues/4463\r\n\r\n@CodeTroopers I'd like to close this issue if you agree",
        "createdAt": "2018-09-05T14:48:45Z",
        "updatedAt": "2018-09-05T14:48:45Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  }
}