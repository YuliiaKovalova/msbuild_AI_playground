{
  "number": 9248,
  "title": "[Bug]: SecurityUtilities.SignFile is broken in Microsoft.Build.Tasks.Core >= 17.1.0",
  "body": "### Issue Description\n\nHi, I am using SecurityUtilities.SignFile to sign a ClickOnce manifest files but it fails with a `System.Security.Cryptography.CryptographicException`.\r\n\r\n\n\n### Steps to Reproduce\n\nThe easiest way to reproduce the issue is to check out [deployment-tools](https://github.com/dotnet/deployment-tools) and to update `Microsoft.Build.Tasks.Core` to version **17.7.2**. This will break ClickOnce signing with `dotnet-mage`.\n\n### Expected Behavior\n\nSigning the ClickOnce manifest file succeeds.\n\n### Actual Behavior\n\nSigning the manifest fails with the following exception:\r\n```\r\nSystem.Security.Cryptography.CryptographicException: Could not create hash algorithm object.\r\n   at System.Security.Cryptography.Xml.Reference.CalculateHashValue(XmlDocument document, CanonicalXmlNodeList refList)\r\n   at System.Security.Cryptography.Xml.SignedXml.BuildDigestedReferences()\r\n   at System.Security.Cryptography.Xml.SignedXml.ComputeSignature()\r\n   at System.Deployment.Internal.CodeSigning.SignedCmiManifest2.AuthenticodeSignLicenseDom(XmlDocument licenseDom, CmiManifestSigner2 signer, String timeStampUrl, Boolean useSha256, Boolean disallowMansignTimestampFallback) in /_/src/Tasks/ManifestUtil/mansign2.cs:line 767\r\n   at System.Deployment.Internal.CodeSigning.SignedCmiManifest2.Sign(CmiManifestSigner2 signer, String timeStampUrl, Boolean disallowMansignTimestampFallback) in /_/src/Tasks/ManifestUtil/mansign2.cs:line 356\r\n   at Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFileInternal(X509Certificate2 cert, Uri timestampUrl, String path, Boolean targetFrameworkSupportsSha256, ResourceManager resources, Boolean disallowMansignTimestampFallback) in /_/src/Tasks/ManifestUtil/SecurityUtil.cs:line 736\r\n```\n\n### Analysis\n\nReverting to _Microsoft.Build.Tasks.Core_ **17.0.1** fixes the issue.\r\nI concluded that the problem occurs because of a change in `ManifestSignedXml2.init`, where `SHA256Managed` was replaced by `SHA256`. [See this changeset](https://github.com/dotnet/msbuild/commit/9c173296404f9c365cc524569766f16d7cfcf308#diff-3c1eaefe9ec91bbe29a841a9ad84b3618f1ccde584f8dee15b8d8f78d3103367).\r\n`System.Security.Cryptography.Xml.Reference.CalculateHashValue` internally uses `CryptoConfig.CreateFromName` to instantiate the hash algorithm which then attempts to resolve the constructor for `SHA256` which fails because `SHA256` is an abstract class.\n\n### Versions & Configurations\n\nMSBuild version 17.7.2+d6990bcfa for .NET Framework\r\n17.7.2.37605\r\ndotnet --version\r\n7.0.401",
  "state": "CLOSED",
  "createdAt": "2023-09-21T15:28:37Z",
  "updatedAt": "2024-02-21T14:03:36Z",
  "closedAt": "2023-11-28T09:32:46Z",
  "author": {
    "login": "e455a81e-d3ba-41a2-bc6d-7aafb1d9a5cd"
  },
  "labels": [
    "bug",
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "YuliiaKovalova"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.9"
  },
  "comments": {
    "nodes": [
      {
        "body": "Can you clarify: are you using the task, or using `Microsoft.Build.Tasks.Core.dll` and manually calling APIs within it?",
        "createdAt": "2023-09-21T15:37:58Z",
        "updatedAt": "2023-09-21T15:37:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@NikolaMilosavljevic is this a supported scenario for mage?",
        "createdAt": "2023-09-21T15:53:49Z",
        "updatedAt": "2023-09-21T15:53:49Z",
        "author": {
          "login": "sujitnayak"
        }
      },
      {
        "body": "> @NikolaMilosavljevic is this a supported scenario for mage?\r\n\r\nWhile there could be issues in the API or Task, there are no current issues with end-to-end experience of dotnet-mage - that is until we update the package reference, as pointed out in the repro steps.",
        "createdAt": "2023-09-21T19:30:44Z",
        "updatedAt": "2023-09-21T19:30:44Z",
        "author": {
          "login": "NikolaMilosavljevic"
        }
      },
      {
        "body": "The task doesn't work on Core today -- it fails early with a \"use full-framework MSBuild on Windows\" message. But if `dotnet-mage` depends on the API from MSBuild on core, we'd probably need to expand our testing (and fix this bug).",
        "createdAt": "2023-09-21T19:45:28Z",
        "updatedAt": "2023-09-21T19:45:28Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Can you clarify: are you using the task, or using `Microsoft.Build.Tasks.Core.dll` and manually calling APIs within it?\r\n\r\nThank you for the quick reply, I am using 'Microsoft.Build.Tasks.Core.dll' and make direct calls to the API.\r\nI am using the API like in `dotnet-mage` [here](https://github.com/dotnet/deployment-tools/blob/5957c5c5f85f17c145e7fab4ece37ad6aafcded9/src/clickonce/MageCLI/Command.cs#L1436).",
        "createdAt": "2023-09-22T07:48:47Z",
        "updatedAt": "2023-09-22T07:48:47Z",
        "author": {
          "login": "e455a81e-d3ba-41a2-bc6d-7aafb1d9a5cd"
        }
      }
    ]
  }
}