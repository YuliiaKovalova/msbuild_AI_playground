{
  "number": 9120,
  "title": "The MSBuild target AssignLinkMetadata is missing the Resource item group",
  "body": "### Description\r\n\r\nI have a shared project with XAML files and where some image files were added to a subdirectory \"Resources\". I tried to embed these images with the \"Resource\" build action to use them as source for BitmapImages. I've done this by manually editing the .projitems file and changing the \"Content\" tags to \"Resource\" for the image files.\r\nSo far this works for the WPF designer: You can chose the images from the dropdown in the property grid and then it will be shown in the preview area of the WPF designer.\r\nBut when you run the app, it will throw an IOException with the message that the \"Resource 'resources/xx' cannot be found\".\r\n\r\n### Reproduction Steps\r\n\r\n- create a new WPF-App project\r\n- create a new shared project\r\n- add a reference to the shared project from the WPF-App project\r\n- add a WPF UserControl to the shared project\r\n- add an image to a subdirectory of the shared project\r\n- open the .projitems file of the shared project in a text editor.\r\n- change the \"None\" or \"Content\" tag of the image to \"Resource\"\r\n- back to Visual Studio, open the XAML file of the new UserControl in the editor/designer\r\n- add a Image tag to the code with the Source property set to the image from the subdirectory\r\n- see the image in the preview area\r\n- add this UserControl into the MainWindow.xaml of the WPF-App project.\r\n- compile and run the app\r\n- the IOException is thrown\r\n\r\n### Expected behavior\r\n\r\nWPF app shows the image instead of throwing an exception.\r\n\r\n### Actual behavior\r\n\r\nThe app throws an exception of type System.IO.IOException with the message about the missing resource.\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\nYou can define and schedule your own MSBuild target in each and every project which references the shared project, so that it includes the missing tasks for Resource items.\r\n\r\n### Impact\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n- .NET Framework 4.8\r\n- Windows 10 Pro 22H2\r\n- x64\r\n- No, it is not specific to this configuration.\r\n\r\n### Other information\r\n\r\nWhen you look into the \".g.ressources\" item in the compiled assembly you can see the image file, but without any folder name.\r\nThis is caused by the missing tasks of the MSBuild target \"AssignLinkMetadata\" in \"Microsoft.Common.CurrentVersion.targets\". There are tasks for Page and ApplicationDefinition items, but not for Resource items.\r\n\r\nWas that intentional or just oversight? I can't find any documentation about it.",
  "state": "CLOSED",
  "createdAt": "2023-06-01T15:05:53Z",
  "updatedAt": "2024-02-21T14:04:48Z",
  "closedAt": "2023-12-11T13:00:01Z",
  "author": {
    "login": "matherm-aboehm"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "AR-May"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@matherm-aboehm Could you please help to share a sample repro?",
        "createdAt": "2023-06-05T05:46:30Z",
        "updatedAt": "2023-06-05T05:46:30Z",
        "author": {
          "login": "singhashish-wpf"
        }
      },
      {
        "body": "I just created the sample repo here: [WpfIssue7892](https://github.com/matherm-aboehm/WpfIssue7892)\r\n\r\nOpen the MyUserControl1.xaml from SharedProject1, to see the image in WPF designer.\r\nIf you want to see the runtime exception, just compile and run the project unmodified.\r\nTo activate the workaround, open the csproj file in editor and uncomment last Target definition.",
        "createdAt": "2023-06-06T14:45:09Z",
        "updatedAt": "2023-06-06T14:45:09Z",
        "author": {
          "login": "matherm-aboehm"
        }
      },
      {
        "body": "@matherm-aboehm - The sample application you provided is designed for .NET Framework, but I have found that the same issue can also be replicated in .NET Core. Upon closer inspection, I have discovered that if we use the image tag in the following way: ```<Image Source=\"/assignlink;component/IconFile_256x.png\" ImageFailed=\"Image_ImageFailed\"/>```, without including the `Resource` folder name, even though the `IconFile_256x.png` is located in the `Resource` folder, there will be no exceptions. I believe you are already aware of this.\r\n\r\nRegarding your question \"Was that intentional or just oversight?\", I cannot provide a definitive answer at this time. Additionally, based on the information you have provided, if you believe that there is a missing task in `Microsoft.Common.CurrentVersion.targets`, you may want to consider opening an issue with `dotnet/msbuild` and close this issue.",
        "createdAt": "2023-08-10T10:56:15Z",
        "updatedAt": "2023-08-10T10:56:15Z",
        "author": {
          "login": "Kuldeep-MS"
        }
      },
      {
        "body": "Yes, I'm aware of this behavior, because this is what I initially tried to describe here.\r\nBut there are some problems writing the image tag like this:\r\n1. This only works because of the missing task in `Microsoft.Common.CurrentVersion.targets`, when this changes it will be broken again.\r\n2. You lose support from WPF designer completely. So, you can't see the image in editor and get various design time errors.\r\n3. You can only use unique file names for the images. This means, you can't use folders as namespaces, but you can for non-shared projects.\r\n\r\nInitially I was about to report the issue on `dotnet/msbuild` but then, when i got the choices for the issue type, I saw the following message:\r\n\"Please open issues relating to WPF in `dotnet/wpf`, including build issues specific to WPF.\"\r\n\r\nSo I thought as this is a build issue specific to WPF it fits best here.\r\nShould I re-post it from scratch under `dotnet/msbuild` or can I just link it there?",
        "createdAt": "2023-08-11T11:10:42Z",
        "updatedAt": "2023-08-11T11:23:28Z",
        "author": {
          "login": "matherm-aboehm"
        }
      },
      {
        "body": "Hello team, based on the information provided by the author and my initial investigation, it appears that there may be a discrepancy between the resource path for embedded resources and user controls. The author suspects that a task may be missing in `Microsoft.Common.CurrentVersion.targets`. Therefore, I am forwarding this issue to you for further review. If your team is not the appropriate one to handle this matter, please feel free to redirect it to the correct team or reassign it to the WPF team.",
        "createdAt": "2023-08-11T13:14:41Z",
        "updatedAt": "2023-08-11T13:14:41Z",
        "author": {
          "login": "Kuldeep-MS"
        }
      }
    ]
  }
}