{
  "number": 2468,
  "title": "Detecting operating system",
  "body": "There is a property that I'd like to give an initial value based on the operating system I'm currently running on: windows, OSX, Linux, etc ... What I'd essentially like to write is the following:\r\n\r\n``` xml\r\n<RoslynRuntimeIdentifier Condition=\"'$(RoslynRuntimeIdentifier)' == '' AND '$(OS)' == 'Windows_NT'\">win7-x64</RoslynRuntimeIdentifier>\r\n<RoslynRuntimeIdentifier Condition=\"'$(RoslynRuntimeIdentifier)' == '' AND '$(OS)' == 'OSX'\"> osx.10.12-x64</RoslynRuntimeIdentifier>\r\n<RoslynRuntimeIdentifier Condition=\"'$(RoslynRuntimeIdentifier)' == ''>linux-rid</RoslynRuntimeIdentifier>\r\n```\r\n\r\nThe `$(OS)` flag works for windows by producing `Windows_NT`. I can't find any documentation for this property though and hence can't determine what the values would be for other operating systems. Is this property the write way to approach this and if so what are the values for other operating systems.",
  "state": "CLOSED",
  "createdAt": "2017-08-24T16:46:34Z",
  "updatedAt": "2024-02-21T17:17:01Z",
  "closedAt": "2019-01-03T16:21:18Z",
  "author": {
    "login": "jaredpar"
  },
  "labels": [
    "question",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "If you can commit to 15.3+, you're looking for the [property function](https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions) `$([MSBuild]::IsOsPlatform())`.\r\n\r\n`$(OS)` is either `Windows_NT` or `Unix`, so you have to use trickery to distinguish between macOS and Linux if you go that route.",
        "createdAt": "2017-08-24T16:57:27Z",
        "updatedAt": "2017-08-24T16:57:27Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> $(OS) is either Windows_NT or Unix, so you have to use trickery to distinguish between macOS and Linux if you go that route.\r\n\r\nWhat kind of trickery? I'm not afraid of using it but don't know what it is ;) ",
        "createdAt": "2017-08-24T17:03:48Z",
        "updatedAt": "2017-08-24T17:03:48Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "One hack I've used in the past is this:\r\n\r\n`Condition=\" '$(OS)' == 'Unix' and $([System.IO.File]::Exists('/usr/lib/libc.dylib')) \">...</Condition>`",
        "createdAt": "2017-08-24T18:32:22Z",
        "updatedAt": "2017-08-24T18:32:22Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "Thank you for posting this \"workaround\" @akoeplinger ",
        "createdAt": "2019-01-02T15:57:38Z",
        "updatedAt": "2019-01-02T15:57:38Z",
        "author": {
          "login": "bgavrilMS"
        }
      },
      {
        "body": "@bgavrilMS I'd recommend using `$([MSBuild]::IsOsPlatform())` instead, since it's now been available for many releases and you're unlikely to encounter a 15.0-15.2 MSBuild anywhere.\r\n\r\n[Docs](https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2017):\r\n\r\n|Function signature|Description|\r\n|------------------------|-----------------|\r\n|bool IsOsPlatform(string platformString)|Specify whether the current OS platform is `platformString`. `platformString` must be a member of [`OSPlatform`](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.osplatform?view=netstandard-2.0).|\r\n",
        "createdAt": "2019-01-03T16:21:18Z",
        "updatedAt": "2019-01-03T16:21:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "https://stackoverflow.com/questions/43412140/csproj-copy-files-depending-on-operating-system",
        "createdAt": "2019-05-03T08:54:53Z",
        "updatedAt": "2019-05-03T08:54:53Z",
        "author": {
          "login": "VladislavAntonyuk"
        }
      },
      {
        "body": "@rainersigwald \r\nYour solution works for me in macOS with dotnet core 2.1.505\r\nThanks\ud83d\udc4d",
        "createdAt": "2019-07-19T15:43:20Z",
        "updatedAt": "2019-07-19T15:43:20Z",
        "author": {
          "login": "liuziangexit"
        }
      }
    ]
  }
}