{
  "number": 524,
  "title": "[RFC] ToolLocationHelper.GetPathToStandardLibraries(..) does not respect $(TargetFrameworkRootPath)",
  "body": "`$(FrameworkPathOverride)` property is set by calling `Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(..)` (in [Microsoft.Common.CurrentVersion.targets](https://github.com/Microsoft/msbuild/blob/master/src/XMakeTasks/Microsoft.Common.CurrentVersion.targets#L81)), but it does not respect `$(TargetFrameworkRootPath)`. So, if the project targets a different framework, which is not available in the default frameworks location, then this ends up adding an invalid reference to `mscorlib.dll` from the .NET framework.\n\nA solution to this would be to add an overload like:\n\n```\n    string GetPathToStandardLibraries(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string platformTarget, string targetFrameworkRoot)\n```\n\n.. which accepts an additional parameter `targetFrameworkRoot`. And `$(TargetFrameworkRootPath)` can be passed as argument for this in `Microsoft.Common.CurrentVersion.targets` like:\n\n```\n-    <FrameworkPathOverride Condition=\"'$(FrameworkPathOverride)' == ''\">$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToStandardLibraries($(TargetFrameworkIdentifier), $(TargetFrameworkVersion), $(TargetFrameworkProfile), $(PlatformTarget)))</FrameworkPathOverride>\n+    <FrameworkPathOverride Condition=\"'$(FrameworkPathOverride)' == ''\">$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToStandardLibraries($(TargetFrameworkIdentifier), $(TargetFrameworkVersion), $(TargetFrameworkProfile), $(PlatformTarget), $(TargetFrameworkRootPath)))</FrameworkPathOverride>\n```\n\nDoes this sound acceptable?\n\nIt might also make sense to add a corresponding overload:\n\n```\n    IList<String> GetPathToReferenceAssemblies(string targetFrameworkIdentifier, string targetFrameworkVersion, string targetFrameworkProfile, string targetFrameworkRoot)\n```\n\nThough the change to `GetPathToStandardLibraries` can be implemented without a new overload for `GetPathToReferenceAssemblies`.\n",
  "state": "CLOSED",
  "createdAt": "2016-03-15T20:02:49Z",
  "updatedAt": "2024-02-21T17:28:51Z",
  "closedAt": "2019-10-21T20:17:03Z",
  "author": {
    "login": "radical"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I have opened a PR ( #529) that implements this, for feedback, specifically the commits - https://github.com/Microsoft/msbuild/pull/529/commits/85edfccaecfdb882188b1d6439f9da1d487f7b90 and https://github.com/Microsoft/msbuild/pull/529/commits/7cf8e080119d0bd9133f8aee8a10e5d31c1e92eb\n",
        "createdAt": "2016-03-17T22:36:28Z",
        "updatedAt": "2016-03-17T22:36:28Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "Assuming this is long addressed.",
        "createdAt": "2019-10-21T20:17:03Z",
        "updatedAt": "2019-10-21T20:17:03Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}