{
  "number": 242,
  "title": "Equals signs in solution path causes CS1679 when calling CSC",
  "body": "It is valid for a Windows path to contain an equals (\"=\") sign.\n\n**Preconditions**:\n- The solution is located in a path containing an equals sign and no spaces.\n- A project in the solution references another project or a Nuget package under the solution folder.\n\n**Actual Result**\n- References are passed to `csc.exe` unquoted in the form `/reference:C:\\Development\\=solution=\\packages\\test.dll`.\n- The C# compiler returns `CS1679: Invalid extern alias for '/reference'; 'C:\\Development\\' is not a valid identifier`\n\n**Expected Result**\n- The solution builds without error.\n\n**Comments**\n\nWhen the solution path contains spaces, MSBuild encloses the paths passed to CSC `/reference` in double quotes. The issue would be resolved if all reference paths were quoted, or if reference paths containing an equals sign were quoted. Currently, CSC interprets unquoted reference paths containing an equals as aliases. I suppose the issue could be fixed in CSC (first check if the entire reference switch represents a valid path, only fall back on alias behavior if it does not), but it seems more appropriate for the MSBuild Csc task to understand how to craft valid arguments to CSC.\n",
  "state": "CLOSED",
  "createdAt": "2015-10-01T13:59:17Z",
  "updatedAt": "2024-02-21T17:30:32Z",
  "closedAt": "2015-10-01T19:56:55Z",
  "author": {
    "login": "ajryan"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This looks like an issue with [Roslyn](https://github.com/dotnet/roslyn/). Can you open this issue there? I think MSBuild is doing the right thing here and quotes shouldn't be needed around the `/reference`. @jaredpar let me know if you disagree here.\n",
        "createdAt": "2015-10-01T18:45:19Z",
        "updatedAt": "2015-10-01T18:45:19Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Even if quotes are needed around the reference, the right place for that is in the Csc task, which isn't in the core MSBuild repo.\n",
        "createdAt": "2015-10-01T18:48:36Z",
        "updatedAt": "2015-10-01T18:48:36Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for taking a look at this, guys.\n\n@AndyGerlicher  - how is `CSC.EXE` supposed to know the difference between an alias and a path with an equals? What if I want to alias a reference that has an equals in its path? It is even possible to construct a path with multiple equals signs and commandline where it is ambiguous whether alias or direct reference is intended, without quotes. The caller who is constructing the commandline (i.e. the MSBuild Csc Task) has all of the information required to construct a valid commandline. \n\n@rainersigwald - what's the right way to file an issue against the Csc task? Connect?\n",
        "createdAt": "2015-10-01T19:27:54Z",
        "updatedAt": "2015-10-01T19:27:54Z",
        "author": {
          "login": "ajryan"
        }
      },
      {
        "body": "The Csc task is in Roslyn [here](https://github.com/dotnet/roslyn/tree/master/src/Compilers/Core/MSBuildTask).\n",
        "createdAt": "2015-10-01T19:34:01Z",
        "updatedAt": "2015-10-01T19:34:01Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Thanks! Closing this and opened another over there.\n",
        "createdAt": "2015-10-01T19:56:55Z",
        "updatedAt": "2015-10-01T19:56:55Z",
        "author": {
          "login": "ajryan"
        }
      }
    ]
  }
}