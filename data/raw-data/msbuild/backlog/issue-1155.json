{
  "number": 1155,
  "title": "Metadata should support instance methods",
  "body": "Property functions allow string instance methods, like `$(prop.Replace('foo', 'bar'))`. It would be nice if metadata could also support this: `%(Filename.Replace('foo', 'bar'))`.\r\n\r\nBecause this is not currently supported, users have to do an ugly workaround: http://stackoverflow.com/questions/5103026/in-msbuild-can-i-use-the-string-replace-function-on-a-metadata-item/8904902#8904902\r\n\r\nTo the the string instance functions we could, maybe, also add `Combine` and `ChangeExtension` from `Path`.\r\n",
  "state": "OPEN",
  "createdAt": "2016-10-04T17:42:16Z",
  "updatedAt": "2024-03-10T14:53:18Z",
  "closedAt": null,
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "backlog",
    "Area: Language",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Note that this should be fixed for:\r\n\r\n* Bare metadata references (`%(MetadataName)` outside of a `@()`)\r\n* Item transforms (`@(ItemName->'%(MetadataName)')`)\r\n* Batching expressions (`'%(ItemName.MetadataName)'`)\r\n",
        "createdAt": "2017-04-13T17:02:12Z",
        "updatedAt": "2020-08-26T19:00:55Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Any update on this?",
        "createdAt": "2018-12-11T15:44:09Z",
        "updatedAt": "2018-12-11T15:44:09Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "@ericstj not at this point. We have other, more blocking issues to look at for dev16 and .net core 3.0, unfortunately. This would be a nice change to get in.",
        "createdAt": "2018-12-11T17:40:55Z",
        "updatedAt": "2018-12-11T17:40:55Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "I would have spared so much time if this was implemented. It took me hours to find the [Stack Overflow answer](https://stackoverflow.com/questions/5103026/in-msbuild-can-i-use-the-string-replace-function-on-a-metadata-item/8904902#8904902) mentioned by the original poster, and some time again to [adapt it for my purpose](https://gist.github.com/0xced/3c38e6d7c5dfd16536ba9412cb79ba64#file-nativesystemdatasqlitewithcostura-csproj) inside a `Condition`.\r\n\r\nThis would be the intuitive way to write it:\r\n\r\n```xml\r\n<EmbeddedResource Include=\"@(SQLiteInteropFiles)\">\r\n  <Link Condition=\"%(Identity.Contains('x86'))\">costura32\\%(Filename)%(Extension)</Link>\r\n  <Link Condition=\"%(Identity.Contains('x64'))\">costura64\\%(Filename)%(Extension)</Link>\r\n</EmbeddedResource>\r\n```\r\n\r\nbut that gets you:\r\n> error MSB4113: Specified condition \"%(Identity.Contains('x86'))\" evaluates to \"%(Identity.Contains('x86'))\" instead of a boolean.\r\n\r\nInstead you have to use this convoluted way:\r\n```xml\r\n<EmbeddedResource Include=\"@(SQLiteInteropFiles)\">\r\n  <Link Condition=\"$([MSBuild]::ValueOrDefault('%(Identity)', '').Contains('x86'))\">costura32\\%(Filename)%(Extension)</Link>\r\n  <Link Condition=\"$([MSBuild]::ValueOrDefault('%(Identity)', '').Contains('x64'))\">costura64\\%(Filename)%(Extension)</Link>\r\n</EmbeddedResource>\r\n```",
        "createdAt": "2019-09-20T13:32:37Z",
        "updatedAt": "2019-09-20T13:32:37Z",
        "author": {
          "login": "0xced"
        }
      },
      {
        "body": "A few years later, I wanted to write this:\r\n\r\n```\r\nCondition=\"%(RuntimeCopyLocalItems.NuGetPackageId.StartsWith('Azure'))\"\r\n```\r\n\r\nbut ended up with this (less readable) workaround instead:\r\n\r\n```\r\nCondition=\"$([System.String]::Copy('%(RuntimeCopyLocalItems.NuGetPackageId)').StartsWith('Azure'))\"\r\n```\r\n\r\nCrossing fingers for this to be eventually addressed. \ud83e\udd1e",
        "createdAt": "2024-02-29T13:27:27Z",
        "updatedAt": "2024-02-29T13:27:27Z",
        "author": {
          "login": "0xced"
        }
      },
      {
        "body": "Calling methods on const strings would be nice too:\r\n\r\n```csproj\r\n<IndexOfToken Condition=\"$('abracadabra'.Contains('$(Token)'))\">$('abracadabra'.IndexOf('$(Token)'))</IndexOfToken>\r\n```\r\n> error MSB4184: The expression \"('abracadabra').Contains('$(Token)')\" cannot be evaluated. \r\n\r\ninstead of:\r\n```csproj\r\n<IndexOfToken Condition=\"$([MSBuild]::ValueOrDefault('abracadabra', '').Contains('$(Token)'))\">$([MSBuild]::ValueOrDefault('abracadabra', '').IndexOf('$(Token)'))</IndexOfToken>\r\n```",
        "createdAt": "2024-03-10T14:53:17Z",
        "updatedAt": "2024-03-10T14:53:17Z",
        "author": {
          "login": "am11"
        }
      }
    ]
  }
}