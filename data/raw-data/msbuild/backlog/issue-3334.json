{
  "number": 3334,
  "title": "MSBuild seems to not respect .targets files recursively for nuget packages using PackageReference",
  "body": "Steps to reproduce:\r\n\r\n- Make a new library project\r\n- Add a nuget package that has a .targets file -> System.Data.SQLite.Core\r\n- Build the project\r\n- x64 / x86 folders with SQLite.Interop.dll appear in the output folder\r\n- Turn that library into a nuget package\r\n- Make another library project\r\n- Reference your nuget package created above\r\n- Build the project\r\n\r\nExpected outcome:\r\nx64 / x86 folders with SQLite.Interop.dll appear in the output folder\r\n\r\nActual outcome:\r\nx64 / x86 folders with SQLite.Interop.dll don't get copied\r\n\r\nThis issue does not appear to manifest iteself when using the old packages.config style.\r\n\r\nMy best guess is that, because packages.config lists all packages directly, even dependencies of dependencies, the .targets gets included. Whereas the new csproj style only lists the top level package as a dependency and MSBuild only cares about the .targets file of the top level package.\r\n\r\nBest regards. ",
  "state": "CLOSED",
  "createdAt": "2018-05-20T11:55:25Z",
  "updatedAt": "2024-02-21T17:13:03Z",
  "closedAt": "2018-05-20T18:42:10Z",
  "author": {
    "login": "Jejuni"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "By default, content files and build-time assets (.props/.targets) don't flow across transitive package references.\r\n\r\nThis can be changed by setting the `PrivateAssets` metadata on `PackageReference` to `none` (the default is `contentfiles;analyzers;build`):\r\n```xml\r\n<ItemGroup>\r\n  <PackageReference Include=\"System.Data.SQLite.Core\" PrivateAssets=\"none\" />\r\n</ItemGroup>\r\n```\r\n\r\nSee [Controlling dependency assets](https://docs.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files#controlling-dependency-assets) for more details.\r\n\r\nThis was also asked an hour ago on StackOverflow - https://stackoverflow.com/questions/50436771/express-transitive-dependency-in-msbuild-without-importing-packagereference",
        "createdAt": "2018-05-20T17:53:19Z",
        "updatedAt": "2018-05-20T17:53:19Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Hey,\r\n\r\nI figured this out just a minute ago after seeing that exact stack overflow question.\r\nAnd that was after spending a good portion of yesterday setting up my own crazy .targets to achieve the result I wanted.\r\n\r\nWorst thing is I even read the documentation you posted, but I must've apparently skimmed over the important bits. Completely my fault.\r\n\r\nI'm just happy that there's a simple way to do this without having to use my own crazy-and-hard-to-maintain solution :)\r\n\r\nThanks!",
        "createdAt": "2018-05-20T18:42:10Z",
        "updatedAt": "2018-05-20T18:42:10Z",
        "author": {
          "login": "Jejuni"
        }
      }
    ]
  }
}