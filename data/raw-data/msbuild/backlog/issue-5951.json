{
  "number": 5951,
  "title": "Add ARM64 as a supported architecture ",
  "body": "**Visual Studio Version**: 16.8\r\n\r\n**Summary**: .NET 5 is adding support for Windows ARM64. Visual Studio .NET Core projects should allow you target ARM64 in addition to x86/x64/arm32.\r\n\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a .NET Core Console / Unit Test / ASP.NET Core  project\r\n\r\n2. Under Project properties, Build, you should be able to select \"ARM64\" as a target architecture\r\n",
  "state": "CLOSED",
  "createdAt": "2020-08-04T20:13:44Z",
  "updatedAt": "2024-02-21T17:02:31Z",
  "closedAt": "2021-04-21T21:03:57Z",
  "author": {
    "login": "tommcdon"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.10"
  },
  "comments": {
    "nodes": [
      {
        "body": "The project system get this information directly from the SDK",
        "createdAt": "2020-08-04T23:14:16Z",
        "updatedAt": "2020-08-04T23:14:16Z",
        "author": {
          "login": "jjmew"
        }
      },
      {
        "body": "This is controlled by `<AvailablePlatforms>` property which is provided by us from the build.",
        "createdAt": "2020-08-05T00:56:53Z",
        "updatedAt": "2020-08-05T00:56:53Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@davkean  I thought you said it came from the SDK. I am confused now, on what it will take to show x64. Should the template automatically add ARM64 to the <AvailablePlatforms> and burn it to the project file?",
        "createdAt": "2020-08-05T05:20:22Z",
        "updatedAt": "2020-08-05T05:20:22Z",
        "author": {
          "login": "jjmew"
        }
      },
      {
        "body": "The SDK is the build, I was just adding context to the bug.",
        "createdAt": "2020-08-05T05:22:39Z",
        "updatedAt": "2020-08-05T05:22:39Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@hoyosjs ",
        "createdAt": "2020-08-18T16:53:14Z",
        "updatedAt": "2020-08-18T16:53:14Z",
        "author": {
          "login": "tommcdon"
        }
      },
      {
        "body": "Is it this one? \r\nhttps://github.com/dotnet/msbuild/blob/f2c4bfd563f559daca27ea1cd8ae40db24e2e7cd/src/Tasks/Microsoft.Common.CurrentVersion.targets#L63\r\n\r\nI'd set it locally to verify directly on the SDK, but I still don't get a configuration available.\r\n![image](https://user-images.githubusercontent.com/19413848/90551169-cdcd5380-e145-11ea-9fab-e3cd0e1d77da.png)\r\n\r\n![image](https://user-images.githubusercontent.com/19413848/90552947-77154900-e148-11ea-92da-eb369bde5fdc.png)\r\n\r\n",
        "createdAt": "2020-08-18T18:47:19Z",
        "updatedAt": "2020-08-18T18:47:19Z",
        "author": {
          "login": "hoyosjs"
        }
      },
      {
        "body": "I think the configuration manager is something else.  This bug is referring to the Platform Target in the project properties:\r\n\r\n![image](https://user-images.githubusercontent.com/145043/101223691-7514be80-3641-11eb-8e75-a5fcbcf77813.png)\r\n\r\nI can confirm that modifying the `AvailablePlatforms` property does add items to this dropdown (though it's not easy to do so because it is set in the common targets).",
        "createdAt": "2020-12-04T23:03:21Z",
        "updatedAt": "2020-12-04T23:03:21Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "/cc @dotnet/wpf-developers ",
        "createdAt": "2021-01-24T19:52:45Z",
        "updatedAt": "2021-01-24T19:52:45Z",
        "author": {
          "login": "ryalanms"
        }
      },
      {
        "body": "@dotnet/sdk - when will the ARM64 option be made available in the Platform Target drop-down? ",
        "createdAt": "2021-01-28T15:40:08Z",
        "updatedAt": "2021-01-28T15:40:08Z",
        "author": {
          "login": "predavid"
        }
      },
      {
        "body": "@tmeschter ",
        "createdAt": "2021-01-29T00:25:18Z",
        "updatedAt": "2021-01-29T00:25:18Z",
        "author": {
          "login": "tommcdon"
        }
      },
      {
        "body": "@BenVillalobos check with Daniel on what are the risks of us updating the AvailablePlatforms in common targets.  @tommcdon , are there any restrictions on when to show ARM64 and ARM32? I think the risk here is that MSBuild may not be aware of projects that don't support those targets.",
        "createdAt": "2021-01-30T00:41:15Z",
        "updatedAt": "2021-01-30T00:41:15Z",
        "author": {
          "login": "marcpopMSFT"
        }
      },
      {
        "body": "> @tommcdon , are there any restrictions on when to show ARM64 and ARM32? I think the risk here is that MSBuild may not be aware of projects that don't support those targets.\r\n\r\n| Version | Windows | Linux | macOS\r\n| --- | --- | --- | ---\r\n| [.NET Core 2.1](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1-supported-os.md) | x86, x64 | x86, x64, arm32 | x64\r\n| [.NET Core 3.1](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1-supported-os.md) | x86, x64, arm32 | x86, x64, arm32, arm64 | x64\r\n| [.NET 5](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0-supported-os.md) | x86, x64, arm64 (console only) | x86, x64, arm32, arm64 | x64",
        "createdAt": "2021-02-01T19:08:47Z",
        "updatedAt": "2021-02-01T19:08:47Z",
        "author": {
          "login": "tommcdon"
        }
      },
      {
        "body": "@BenVillalobos I went ahead and put this in 16.10 as I think we have what we need from Tom.",
        "createdAt": "2021-02-25T18:51:16Z",
        "updatedAt": "2021-02-25T18:51:16Z",
        "author": {
          "login": "marcpopMSFT"
        }
      },
      {
        "body": "@dsplaisted how do we go about checking if we're specifically a console app?\r\n\r\nThe only reference to a console app check I've found is line 5647 on Microsoft.Common.CurrentVersion.Targets:\r\n`<Error Condition=\"'$(OutputType)'!='winexe' and '$(OutputType)'!='exe' and '$(OutputType)'!='appcontainerexe'\" Text=\"Publish is only valid for 'Windows Application' or 'Console Application' project types.\"/>`",
        "createdAt": "2021-04-01T22:21:11Z",
        "updatedAt": "2021-04-01T22:21:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I'm not seeing any changes adding ARM64 to AvailablePlatforms: \r\n![image](https://user-images.githubusercontent.com/4691428/113363232-321fda80-9305-11eb-96f1-8de910eec761.png)\r\n",
        "createdAt": "2021-04-01T23:13:31Z",
        "updatedAt": "2021-04-01T23:13:31Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@drewnoakes How are you populating above?",
        "createdAt": "2021-04-01T23:14:53Z",
        "updatedAt": "2021-04-01T23:14:53Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "> @dsplaisted how do we go about checking if we're specifically a console app?\r\n> \r\n> The only reference to a console app check I've found is line 5647 on Microsoft.Common.CurrentVersion.Targets:\r\n> `<Error Condition=\"'$(OutputType)'!='winexe' and '$(OutputType)'!='exe' and '$(OutputType)'!='appcontainerexe'\" Text=\"Publish is only valid for 'Windows Application' or 'Console Application' project types.\"/>`\r\n\r\nNon-console apps would have a FrameworkReference to the WindowsDesktop or AspNetCore framework.  There wouldn't be a RuntimePack for the ARM RuntimeIdentifiers that aren't supported, so you'd get an error building a self-contained app targeting ARM.  I don't think we have a block that would prevent you from building a shared framework app using an ARM RuntimeIdentifier.",
        "createdAt": "2021-04-02T01:47:20Z",
        "updatedAt": "2021-04-02T01:47:20Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "> How are you populating above?\r\n\r\nThose options are currently hard coded here:\r\n\r\nhttps://github.com/dotnet/project-system/blob/20d7f46f0f492dfabcd61b7462e532b8229ca005/src/Microsoft.VisualStudio.ProjectSystem.Managed/ProjectSystem/Rules/PropertyPages/BuildPropertyPage.xaml#L39-L50\r\n\r\nIf they can be sourced from somewhere, we can add a dynamic enum value provider that surfaces them.",
        "createdAt": "2021-04-02T01:58:43Z",
        "updatedAt": "2021-04-02T01:59:03Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "They are already provided by the `<AvailablePlatforms>` property.",
        "createdAt": "2021-04-02T02:14:59Z",
        "updatedAt": "2021-04-02T02:15:07Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Surfacing it in the new property pages is now tracked via https://github.com/dotnet/project-system/issues/7081. The current plan is to read the allowable values from `<AvailablePlatforms>` and we will depend on the SDK to populate that correctly.",
        "createdAt": "2021-04-02T15:57:33Z",
        "updatedAt": "2021-04-02T15:57:33Z",
        "author": {
          "login": "tmeschter"
        }
      },
      {
        "body": "Note that the property pages have always read it (indirectly) from AvailablePlatforms. This was a regression from the prior pages.",
        "createdAt": "2021-04-03T04:25:11Z",
        "updatedAt": "2021-04-03T04:25:11Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Until this is fixed, what's the best way (if any) to make MSBuild pass /platform:ARM64 to CSC?",
        "createdAt": "2021-04-06T16:39:17Z",
        "updatedAt": "2021-04-06T16:39:17Z",
        "author": {
          "login": "austinkinross"
        }
      },
      {
        "body": "@austinkinross At first glance, it looks like MSBuild calls csc and includes the platform like so: `Platform=\"$(PlatformTarget)\"`. Setting platformtarget affects `PlatformTargetAsMSBuildArchitecture` and `ProcessorArchitecture` properties (and likely others I'm not aware of), which will likely have adverse side effects.",
        "createdAt": "2021-04-06T18:58:02Z",
        "updatedAt": "2021-04-06T18:58:22Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}