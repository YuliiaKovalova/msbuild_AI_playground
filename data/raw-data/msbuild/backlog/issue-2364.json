{
  "number": 2364,
  "title": "ANSI color codes should be on by default for Linux",
  "body": "Why isn't ANSI color codes on by default for Linux platforms? This is the reason why issues like #754 happen. A workaround is to just use /clp:ForceConsoleColor, but that makes using the command line more messy than it has to be.",
  "state": "CLOSED",
  "createdAt": "2017-07-29T17:03:10Z",
  "updatedAt": "2024-10-04T16:15:58Z",
  "closedAt": "2024-10-04T16:15:58Z",
  "author": {
    "login": "Veigres"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Can you clarify this?\r\n\r\n> This is the reason why issues like #754 happen.\r\n\r\nI don't understand Linux console output very well, but my understanding is that the `System.Console` APIs we call in the absence of `ForceConsoleColor` are just emitting the same ANSI control codes. The `Force` parameter just short-circuits CoreFX's attempt to not emit them to a redirected stream.",
        "createdAt": "2017-07-31T19:18:02Z",
        "updatedAt": "2017-07-31T19:18:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Just as a demo, I am running MSBuild on a simple test project:\r\n```\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" DefaultTargets=\"Build\">\r\n\t<Target Name=\"Build\">\r\n\t\t<MakeDir Directories=\"tmp\" />\r\n\t\t<Message Text=\"Hello MSBuild!\" Importance=\"high\" />\r\n\t</Target>\r\n</Project>\r\n```\r\n\r\nHere is the result when runnning the command `dotnet msbuild test.proj /v:n`\r\n![scr1](https://user-images.githubusercontent.com/3228043/28797448-a250b03e-7641-11e7-92ce-1dc2c5897959.png)\r\n\r\nand here is the same project, but using `dotnet msbuild test.proj /v:n /clp:ForceConsoleColor`\r\n![scr2](https://user-images.githubusercontent.com/3228043/28797493-cb9273d8-7641-11e7-806d-6306c9913389.png)\r\n\r\nSo there is clearly going something on when using ForceConsoleColor. I have used MSBuild quite a lot on the command line on Windows and the second case is more in line with what I would expect on default there, where implicit(?) messages are in a greyish tone, as opposed to black which seems to be the default on Linux.\r\n\r\nI have not actually dug into the source code, but a simple search turned up [these lines](https://github.com/Microsoft/msbuild/blob/master/src/Build/Logging/ConsoleLogger.cs#L131-L151) from src/Build/Logging/ConsoleLogger.cs. It might have something to do with it.\r\n\r\nAs for the issue referenced, #754, they are experiencing exactly the same issue as I am, default text is black and hard to see on dark backgrounds.",
        "createdAt": "2017-07-31T21:05:37Z",
        "updatedAt": "2017-07-31T21:05:37Z",
        "author": {
          "login": "Veigres"
        }
      },
      {
        "body": "Maybe this will help - https://github.com/mono/msbuild/commit/84a7897588186e1426ac7416b4ea8f797036d810 ?",
        "createdAt": "2017-08-01T00:51:58Z",
        "updatedAt": "2017-08-01T00:51:58Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "Extra confusingly, this seems to be inverted on macOS:\r\n\r\n<img width=\"809\" alt=\"screen shot 2017-08-07 at 11 57 19 pm\" src=\"https://user-images.githubusercontent.com/3347530/29056936-4d50025c-7bcc-11e7-96c7-9b2ee074c0eb.png\">\r\n\r\n`ForceConsoleColor` turns black-on-black, but without I see the expected `DarkGray` text.",
        "createdAt": "2017-08-08T05:03:03Z",
        "updatedAt": "2017-08-08T05:03:03Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "When I run the project in the integrated terminal in VS Code, I get the expected behavior without using `/clp`.\r\n\r\n![image](https://user-images.githubusercontent.com/3228043/31971850-fae957c2-b91d-11e7-8b80-1a7d3e9a88c3.png)\r\n\r\nI think this is very strange. Maybe there is something wrong with how the system terminal renders ANSI color codes? I know that VS Code uses a custom rendering for the terminal, so maybe that is why we are seeing inconsistent behavior? I am using VS Code 1.17.2 (I think the terminal rendering was changed in 1.16 or 1.17).",
        "createdAt": "2017-10-24T22:54:53Z",
        "updatedAt": "2017-10-24T22:54:53Z",
        "author": {
          "login": "Veigres"
        }
      },
      {
        "body": "Sorry for closing and reopening, I clicked the wrong button.",
        "createdAt": "2017-10-24T22:55:59Z",
        "updatedAt": "2017-10-24T22:55:59Z",
        "author": {
          "login": "Veigres"
        }
      },
      {
        "body": "This hasn't gotten attention in many years, and the new default is `-tl` which unconditionally uses ANSI escape colors, so I'm going to close it.",
        "createdAt": "2024-10-04T16:15:58Z",
        "updatedAt": "2024-10-04T16:15:58Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}