{
  "number": 8279,
  "title": "MSBuild doesn't respect MvcBuildViews-setting in .csproj-file when run through GitHub Actions as part of a CodeQL scan",
  "body": "<!-- NOTE: The MSBuild team receives a lot of issues and we need to prioritize them accordingly. Please understand that we may not get to your issue for some time. -->\r\n<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n<!--\r\n* Here are some useful links to help you figure out what's wrong.\r\n* Our wiki: https://github.com/microsoft/msbuild/blob/master/documentation/wiki/Home.md\r\n* General Help: https://github.com/microsoft/msbuild/blob/master/documentation/wiki/Something's-wrong-in-my-build.md\r\n* Tips & Tricks: https://github.com/microsoft/msbuild/blob/master/documentation/wiki/MSBuild-Tips-%26-Tricks.md\r\n-->\r\n\r\n### Issue Description\r\nMSBuild doesn't seem to respect the MvcBuildViews-setting defined in the project's .csproj-file when it is run as a github action. After trial and error, MSBuild seems to behave as if MvcBuildViews is hardcoded to be true. Mvc view precompilation works just as expected when MSBuild is run locally. \r\n\r\nIn short, I can't disable mvc view precompilation by setting` <MvcBuildViews>false</MvcBuildViews>` in project configuration.\r\n\r\n### Steps to Reproduce\r\n<!--\r\n* Include as much of the following if possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behaviour.\r\n* Your command line invocation\r\n-->\r\n\r\n1. Create a new ASP.NET Web Application called \"TestProject\" with MVC project template in Visual Studio 2022.\r\n2. Observe that MVC view precompilation is set to `false `by default in the project's .csproj -file like so:\r\n`<MvcBuildViews>false</MvcBuildViews>`\r\n3. Observe that further down the same .csproj-file a build target MvcBuildViews is defined like so:\r\n ` <Target Name=\"MvcBuildViews\" AfterTargets=\"AfterBuild\" Condition=\"'$(MvcBuildViews)'=='true'\"> <AspNetCompiler VirtualPath=\"temp\" PhysicalPath=\"$(WebProjectOutputDir)\" />   </Target>`\r\n4. Introduce a syntax error to any of the .cshtml-files in the project to trigger compiler warnings when using msbuild with Mvc view precompilation (right now that should be set to false according to the configuration above). For example, add a semicolon to `ViewBag.Title` in` Views/Home/Index.cshtml` like this:\r\n\r\n```\r\n@{\r\n    ViewBag.Title = \"Home Page\" + ;  <!-- The semicolon triggers a syntax error in Visual Studio -->\r\n}\r\n```\r\n\r\n\r\n6. `nuget restore` the dependencies if Visual Studio didn't do it for you.\r\n7. Try to build the solution locally with msbuild.exe TestProject.sln. The compilation should complete without errors.\r\n8. Define a GitHub Action for the solution (latest version of setup-msbuild or something older, doesn't matter) and try the same compilation process via setup-msbuild GitHub Action. Example CodeQL configuration including steps for MSBuild:\r\n```\r\nname: \"CodeQL\"\r\n\r\non:\r\n  push:\r\n    branches: [ \"main\" ]\r\n  pull_request:\r\n    branches: [ \"main\" ]\r\n  schedule:\r\n    - cron: '25 19 * * 0'\r\n\r\njobs:\r\n  analyze:\r\n    name: Analyze\r\n    runs-on: windows-latest\r\n    permissions:\r\n      actions: read\r\n      contents: read\r\n      security-events: write\r\n\r\n    strategy:\r\n      fail-fast: false\r\n      matrix:\r\n        language: [ 'csharp' ]\r\n\r\n    steps:\r\n    - name: Checkout repository\r\n      uses: actions/checkout@v3\r\n\r\n    - name: Initialize CodeQL\r\n      uses: github/codeql-action/init@v2\r\n      with:\r\n        languages: ${{ matrix.language }}\r\n        queries: security-extended   \r\n\r\n    - name: Add msbuild to PATH\r\n      uses: microsoft/setup-msbuild@v1\r\n    \r\n    - name: Install Nuget to restore packages\r\n      uses: nuget/setup-nuget@v1\r\n    \r\n    - name: Restore Nuget packages\r\n      run: nuget restore TestProject.sln   \r\n      \r\n    - name: Build app for release\r\n      run: msbuild.exe TestProject.sln \r\n\r\n    - name: Perform CodeQL Analysis\r\n      uses: github/codeql-action/analyze@v2\r\n```\r\n\r\n9. The compilation fails because of the syntax error in the .cshtml -file, which implies that precompilation is happening despite a setting to the contrary in the .csproj-file.\r\n\r\n### Expected Behavior\r\nWhen run through GitHub Actions, MSBuild shouldn't return errors related to syntax errors in .cshtml -files when I've disabled Mvc view precompilation by setting `<MvcBuildViews>false</MvcBuildViews>`.\r\n\r\n### Actual Behavior\r\n<!--\r\n* Include the actual output or behavior.\r\n-->\r\nMSBuild (through GitHub Actions) fails with an error regarding the arbitrary syntax error introduced in step 4, which implies that Mvc View precompilation is happening despite it being disabled. This is different than what happens when I run MSBuild locally (MSBuild completes without errors). \r\n\r\nThis discrepancy between the results locally and in GitHub Actions is confusing since they both use the same version of MSBuild. **The build target defined above has the condition set that `MvcBuildViews` should be `true` for the precompilation to happen.** \r\n\r\nI tried out all the different \"permutations\" of the two settings (MvcBuildViews-element and the build target condition) both locally and in GitHub Actions and I got the following results (if the setting and condition match, the precompilation should happen, if I've understood correctly):\r\n\r\n\r\n```\r\n           | <MvcBuildViews> | Build target condition | Did precompilation happen?\r\n------------------------------------------------------------------------------------\r\nLocal      |    False        |         False          |          Yes \r\nGH Actions |                 |                        |          No\r\n-------------------------------------------------------------------------------------\r\nLocal      |    True         |         False          |          No\r\nGH Actions |                 |                        |          No \r\n------------------------------------------------------------------------------------\r\n# This is the default setting that the project template comes with\r\nLocal      |    False        |         True           |          No\r\nGH Actions |                 |                        |          Yes\r\n-----------------------------------------------------------------------------------\r\nLocal      |    True         |         True           |          Yes\r\nGH Actions |                 |                        |          Yes\r\n-----------------------------------------------------------------------------------\r\n```\r\nSo the local run of MSBuild worked just as expected with the precompilation only happening when the MvcBuildView-setting matched the build target condition. On GH Actions the results varied quite a bit. **It basically looks like MSBuild on GH Actions behaves as if the** `<MvcBuildViews>`-**setting is hard coded to be** `true` (ignoring whatever is actually set in the .csproj-file). I also tried to set the MvcBuildViews-parameter by calling GH Action MsBuild with `/p:MvcBuildViews=false` but that did nothing (locally that also worked just as expected. \r\n\r\n### Ask us questions\r\nHave I understood something incorrectly about how to disable/enable Mvc view precompilation? I'm specifically trying to **disable** it. Of course the workaround seems to be to set `MvcBuildViews `to `True `and build target condition to `false`, for example, but I'd like to understand the root cause of why the mcvbuildviews-setting is getting ignored when using GitHub Actions, but not locally. Any ideas? Or is it an actual bug?",
  "state": "CLOSED",
  "createdAt": "2023-01-04T08:05:29Z",
  "updatedAt": "2023-11-01T07:51:02Z",
  "closedAt": "2023-01-17T10:29:24Z",
  "author": {
    "login": "pekkasin"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Closing as this isn't a problem with MSBuild itself.",
        "createdAt": "2023-01-17T10:29:24Z",
        "updatedAt": "2023-01-17T10:29:24Z",
        "author": {
          "login": "pekkasin"
        }
      },
      {
        "body": "I'm seeing the same issue, @pekkasin have you found a solution?",
        "createdAt": "2023-10-31T07:56:39Z",
        "updatedAt": "2023-10-31T07:56:39Z",
        "author": {
          "login": "dimoret"
        }
      },
      {
        "body": "There's more discussion here:\r\nhttps://github.com/github/codeql/issues/11890",
        "createdAt": "2023-11-01T07:51:02Z",
        "updatedAt": "2023-11-01T07:51:02Z",
        "author": {
          "login": "pekkasin"
        }
      }
    ]
  }
}