{
  "number": 5875,
  "title": "Bug when using MSBuild with custom target since NET5.0 update",
  "body": "### Issue Description\r\nI'm hitting a bug when consuming a custom project SDK target (http://nuget.org/packages/h5.target):\r\n\r\n`````\r\nInvalid static method invocation syntax: \"[MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)', 2)\". Method '[MSBuild]::GetTargetFrameworkVersion' not found. Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(`a`, `b`)). Check that all parameters are defined, are of the correct type, and are specified in the right order.  C:\\Program Files\\dotnet\\sdk\\5.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\r\n`````\r\n\r\nThe code in the targets file that seems to be triggering this issue is the following:\r\n\r\n`````xml\r\n  <PropertyGroup Condition=\"'$(TargetFramework)' != '' and ('$(TargetFrameworkIdentifier)' == '' or '$(TargetFrameworkVersion)' == '')\">\r\n\r\n    <TargetFrameworkIdentifier>$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)'))</TargetFrameworkIdentifier>\r\n    <TargetFrameworkVersion>v$([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)', 2))</TargetFrameworkVersion>\r\n  </PropertyGroup>\r\n`````\r\n\r\nIf I manually force the properties to the expected (or dummy) values, so that we avoid the GetTargetFrameworkIdentifier, GetTargetFrameworkVersion, GetTargetPlatformIdentifier and GetTargetPlatformVersion calls above:\r\n\r\n`````xml\r\n    <TargetFrameworkIdentifier>.NETStandard</TargetFrameworkIdentifier>\r\n    <TargetFrameworkVersion>v2.0</TargetFrameworkVersion>\r\n    <TargetPlatformIdentifier>h5</TargetPlatformIdentifier>\r\n    <TargetPlatformVersion>2.0</TargetPlatformVersion>\r\n`````\r\n\r\nThen the compilation using MSBuild works fine. \r\n\r\nAny ideas?",
  "state": "CLOSED",
  "createdAt": "2020-11-11T13:01:49Z",
  "updatedAt": "2021-03-09T15:02:51Z",
  "closedAt": "2020-11-18T16:42:32Z",
  "author": {
    "login": "theolivenbaum"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: Can you confirm the versions of MSBuild and SDK you're using? It sounds like you're using an older MSBuild with a newer SDK.",
        "createdAt": "2020-11-11T16:50:17Z",
        "updatedAt": "2020-11-11T16:50:17Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I thought that was the case, but if I enumerate the MSBuild version being\nfound and selected by the MSBuildLocator, it correctly points to the\n5.0.100 one under the dotnet/sdks folder.\n\nOn Wed, Nov 11, 2020, 5:50 PM Ben Villalobos <notifications@github.com>\nwrote:\n\n> Team Triage: Can you confirm the versions of MSBuild and SDK you're using?\n> It sounds like you're using an older MSBuild with a newer SDK.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dotnet/msbuild/issues/5875#issuecomment-725534444>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACDCOA3B663VLZVNOHI4CX3SPK6FTANCNFSM4TR63KUA>\n> .\n>\n",
        "createdAt": "2020-11-11T16:54:12Z",
        "updatedAt": "2020-11-11T16:54:12Z",
        "author": {
          "login": "theolivenbaum"
        }
      },
      {
        "body": "Very strange, can you post the output of `dotnet msbuild --version`  from your 5.0.100 sdk?\r\n\r\nI can't seem to repro it from sdk version `5.0.100-rc.2.20479.15` that's using MSBuild version `16.8.0-preview-20475-05+aed5e7ed0`",
        "createdAt": "2020-11-11T21:14:13Z",
        "updatedAt": "2020-11-11T21:14:13Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I'm getting the same issue for a project that is targeting net45:\r\n\r\n```\r\n/usr/share/dotnet/sdk/5.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.TargetFrameworkInference.targets(5,5): Error MSB4186: Invalid static method invocation syntax: \"[MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')\". Method '[MSBuild]::GetTargetFrameworkIdentifier' not found. Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(`a`, `b`)). Check that all parameters are defined, are of the correct type, and are specified in the right order. (MSB4186) (SMAPI.ModBuildConfig.Analyzer)\r\n/usr/share/dotnet/sdk/5.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.TargetFrameworkInference.targets(5,5): Error MSB4186: Invalid static method invocation syntax: \"[MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')\". Method '[MSBuild]::GetTargetFrameworkIdentifier' not found. Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(`a`, `b`)). Check that all parameters are defined, are of the correct type, and are specified in the right order. (MSB4186) (SMAPI.Toolkit.CoreInterfaces)\r\n```\r\n```bash\r\n> dotnet --version\r\n5.0.100\r\n> msbuild -version\r\n16.6.0.32601%\r\n```\r\n\r\nThe Project Options view in Monodevelop (7.8.4 (build 2)) actually shows the same oddness:\r\n![image](https://user-images.githubusercontent.com/18850/98918317-cd5c1300-2510-11eb-8b1e-ca7ef43055cc.png)\r\n",
        "createdAt": "2020-11-12T09:00:39Z",
        "updatedAt": "2020-11-12T09:00:39Z",
        "author": {
          "login": "jibsaramnim"
        }
      },
      {
        "body": "Hi, \r\n\r\nI'm getting the same error as @hellodeibu on Visual Studio for Mac. I have a project is targeting net48 and the Xamarin project is targeting netstandard2.0.\r\n\r\nDoes anyone have a solution?\r\n\r\n**Edit:**\r\n\r\n- dotnet -- version : 5.0.100\r\n- msbuild --version : 16.6.0",
        "createdAt": "2020-11-12T13:29:25Z",
        "updatedAt": "2020-11-12T13:32:34Z",
        "author": {
          "login": "emmanuel128"
        }
      },
      {
        "body": "@emmanuel128 @hellodeibu could you post specifically your `dotnet msbuild --version`? Info? As typically `msbuild -version` points to the msbuild installed by visual studio rather than the msbuild packed along with the sdk",
        "createdAt": "2020-11-12T16:52:29Z",
        "updatedAt": "2020-11-12T16:52:29Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos apologies for not including that too:\r\n\r\n```bash\r\n> dotnet --version\r\n5.0.100\r\n> msbuild -version\r\n16.6.0.32601%\r\n> dotnet msbuild -version\r\n16.8.0.52002% \r\n```\r\nJust in case this helps too: this is on Ubuntu 20.04 and with MonoDevelop 7.8.4 (build 2) installed.\r\n\r\n**Edit:** small addendum; I had completely removed and re-installed mono-related packages a few times, trying out different repositories and versions and whatnot. I ended with [the nightly repository](https://www.mono-project.com/download/preview/) but I don't think there's anything in there that's newer than whatever is in preview. I had the same results (failed to build, Monodevelop showing that odd string, etc.) with the `stable-bionic` source (`stable-focal` does not yet contain Monodevelop).\r\n\r\nI have removed and re-installed everything mono related from `stable-bionic` and I'm getting the same versions as shown above.",
        "createdAt": "2020-11-13T00:05:47Z",
        "updatedAt": "2020-11-13T03:30:37Z",
        "author": {
          "login": "jibsaramnim"
        }
      },
      {
        "body": "Same here, using the latest stable release of VS2019 Enterprise on Windows:\r\n\r\n`````bash\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.8.0\r\n** Copyright (c) 2020 Microsoft Corporation\r\n**********************************************************************\r\n\r\n>msbuild -version\r\nMicrosoft (R) Build Engine version 16.8.1+bd2ea1e3c for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.8.1.52902\r\n>dotnet msbuild -version\r\nMicrosoft (R) Build Engine version 16.8.0+126527ff1 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.8.0.52002\r\n>dotnet --version\r\n5.0.100\r\n`````\r\n\r\nAlso in my case this happens when calling MSBuild programmatically with the [h5 compiler](h5.rocks).",
        "createdAt": "2020-11-13T08:01:31Z",
        "updatedAt": "2020-11-13T08:02:43Z",
        "author": {
          "login": "theolivenbaum"
        }
      },
      {
        "body": "We're curious if this may be a GAC issue. Please try repairing Visual Studio. This will at least eliminate that possibility.",
        "createdAt": "2020-11-16T18:51:50Z",
        "updatedAt": "2020-11-16T18:51:50Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "For those on Mono, this might be because Mono needs to be updated. Here is an issue tracking this: https://github.com/mono/mono/issues/20250",
        "createdAt": "2020-11-17T00:57:40Z",
        "updatedAt": "2020-11-17T00:57:40Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Not Mono on my case as running on Windows. Already tried the VS repair but didn't fix it either.\n\nAnd same issue happens when running dotnet build on linux so don't think it's the case.",
        "createdAt": "2020-11-17T08:38:29Z",
        "updatedAt": "2020-11-17T08:38:29Z",
        "author": {
          "login": "theolivenbaum"
        }
      },
      {
        "body": "Tried to repro again and not seeing any issues:\r\n\r\n`dotnet msbuild -version`\r\n```\r\nMicrosoft (R) Build Engine version 16.8.0+126527ff1 for .NET       \r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.8.0.52002\r\n```\r\n`dotnet --version`\r\n```\r\n5.0.100\r\n```\r\n\r\n@theolivenbaum could you try building a tiny project (via `dotnet build` on your 5.0.100 sdk) that uses `[MSBuild]::GetTargetFrameworkIdentifier`? This should eliminate whether it could be MSBuildLocator in your scenario.\r\n\r\nThe project I'm building to try and repro this is simply:\r\n```xml\r\n<Project>\r\n<PropertyGroup>\r\n    <TargetFrameworkIdentifier>.NETStandard</TargetFrameworkIdentifier>\r\n    <TargetFrameworkVersion>v2.0</TargetFrameworkVersion>\r\n    <TargetPlatformIdentifier>h5</TargetPlatformIdentifier>\r\n    <TargetPlatformVersion>2.0</TargetPlatformVersion>\r\n</PropertyGroup>\r\n  <PropertyGroup>\r\n    <TargetFrameworkIdentifier>$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)'))</TargetFrameworkIdentifier>\r\n    <TargetFrameworkVersion>v$([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)', 2))</TargetFrameworkVersion>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"HelloWorld\">\r\n    <Message Text=\"Hello World!\" Importance=\"High\"/>\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nNote that this _does_ fail with your error if I `global.json` myself to do `3.1.404`, which is expected as that version of MSBuild would not have the functions being called.\r\n\r\nYou mentioned MSBuildLocator is finding the correct MSBuild, can you verify this? I ask because this issue (should) only come up if you were using an older MSBuild wth a newer sdk somehow.\r\n\r\nWhat may be the most helpful in this scenario:\r\n1. Providing a minimal repro of your specific scenario.\r\n2. Providing binlogs of your build.",
        "createdAt": "2020-11-17T22:28:23Z",
        "updatedAt": "2020-11-17T22:28:23Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Hi @BenVillalobos \r\n\r\nTried to reproduce the issue today - but I'm not seeing it anymore, even when reverting the recent commits on the h5 compiler and SDK targets. Wondering if the update to VS 2019 16.8.1 that came immediately after 16.8.0 fixed the problem meanwhile and this was indeed a GAC cache issue...\r\n\r\n\r\n\r\n",
        "createdAt": "2020-11-18T09:59:06Z",
        "updatedAt": "2020-11-18T09:59:06Z",
        "author": {
          "login": "theolivenbaum"
        }
      },
      {
        "body": "@theolivenbaum It happens \ud83d\ude42 Edit: The PR that fixed this automatically unGAC's MSBuild assemblies at install/repair time. https://github.com/dotnet/msbuild/pull/5626\r\n\r\nClosing this issue out. For those running on mono, see this issue: https://github.com/mono/mono/issues/20250",
        "createdAt": "2020-11-18T16:42:32Z",
        "updatedAt": "2020-11-18T19:11:17Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "For future readers.\r\n\r\n(On a Mac).\r\n\r\n\r\nI updated (added) (only) dotnetcore SDK 5.0, and started getting this error.\r\n\r\n`error msb4186: invalid static method invocation syntax: \"[msbuild]::gettargetframeworkidentifier('$(targetframework)')\". method '[msbuild]::gettargetframeworkidentifier' not found. static method invocation should be of the form: $([fulltypename]::method()), e.g. $([system.io.path]::combine(`a`, `b`)). check that all parameters are defined, are of the correct type, and are specified in the right order. (msb4186)\r\n`\r\n\r\nOur work machines are fairly \"locked down\", so I do these upgrades one by one to easy trouble shooting if anything goes wrong.\r\n\r\nBelow image was what was shown when I did a \"upgrade\" (aka, below is the newer version at the time of writing)\r\nUnfortunately, I did not capture the original version.\r\n\r\n![image](https://user-images.githubusercontent.com/5487824/110473223-4da01880-80ac-11eb-96c4-33884b2b20d6.png)\r\n\r\n\r\nAfter I did a Visual Studio Update (March 2021 timeline (again, above image)), I opened up my solution, and everything was ok in the nuget restore world.\r\n\r\n\r\nBelow is the complete \"About VS\" information... of the later-working version of VS.\r\n\r\nI still have a few not-yet-done upgrades....but some of those are outside of the project-types I work on.\r\n\r\n`\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.9 (build 1651)\r\nInstallation UUID: c07d044a-1db9-425d-9292-732fd7272960\r\n\tGTK+ 2.24.23\r\n\tXamarin.Mac 6.18.0.23 (d16-6 / 088c73638)\r\n\r\n\tPackage version: 612000090\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 6.12.0.90 (2020-02/d3daacdaa80) (64-bit)\r\n\tPackage version: 612000090\r\n\r\n=== Roslyn (Language Service) ===\r\n\r\n3.9.0-5.21112.8+f3ff04378c972d435826e6181de364b3c0db8d14\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.8.0.6860\r\n\r\n=== .NET Core SDK ===\r\n\r\nSDK: /usr/local/share/dotnet/sdk/5.0.103/Sdks\r\nSDK Versions:\r\n\t5.0.103\r\n\t3.1.406\r\n\t3.1.401\r\nMSBuild SDKs: /Applications/Visual Studio.app/Contents/Resources/lib/monodevelop/bin/MSBuild/Current/bin/Sdks\r\n\r\n=== .NET Core Runtime ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t5.0.3\r\n\t3.1.12\r\n\t3.1.7\r\n\t2.1.21\r\n\r\n=== .NET Core 3.1 SDK ===\r\n\r\nSDK: 3.1.406\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.15.68\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.9.0.316\r\nHash: bd2705417\r\nBranch: remotes/origin/d16-9\r\nBuild date: 2021-02-24 00:16:08 UTC\r\n\r\n=== Apple Developer Tools ===\r\n\r\nA valid Xcode installation was not found at the configured location: '/Library/Developer/CommandLineTools'\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 6.20.2.2 (Visual Studio Community)\r\nHash: 817b6f72a\r\nBranch: d16-7\r\nBuild date: 2020-07-18 18:44:59-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 13.20.2.2 (Visual Studio Community)\r\nHash: 817b6f72a\r\nBranch: d16-7\r\nBuild date: 2020-07-18 18:45:00-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 11.0.2.0 (Visual Studio Community)\r\nCommit: xamarin-android/d16-7/025fde9\r\nAndroid SDK: Not found\r\n\r\n=== Microsoft OpenJDK for Mobile ===\r\n\r\nJava SDK: Not Found\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android SDK Manager ===\r\n\r\nVersion: 16.9.0.22\r\nHash: a391de2\r\nBranch: remotes/origin/d16-9\r\nBuild date: 2021-02-18 03:14:56 UTC\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 16.9.0.17\r\nHash: fc2b3db\r\nBranch: remotes/origin/d16-9\r\nBuild date: 2021-02-18 03:15:18 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 809001651\r\nGit revision: c05b1dec4362b5956d47624a437e900ffdc9aa0a\r\nBuild date: 2021-02-25 11:27:51-05\r\nBuild branch: release-8.9\r\nXamarin extensions: c05b1dec4362b5956d47624a437e900ffdc9aa0a\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.15.7\r\nDarwin 19.6.0 Darwin Kernel Version 19.6.0\r\n    Tue Jan 12 22:13:05 PST 2021\r\n    root:xnu-6153.141.16~1/RELEASE_X86_64 x86_64\r\n\r\n\r\n`",
        "createdAt": "2021-03-09T12:58:22Z",
        "updatedAt": "2021-03-09T15:02:51Z",
        "author": {
          "login": "granadacoder"
        }
      }
    ]
  }
}