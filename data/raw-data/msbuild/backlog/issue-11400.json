{
  "number": 11400,
  "title": "DestinationSubDirectory does not work recursively",
  "body": "This is a bit of an unexpected behavior for me, although I doubt it counts as a bug given that it probably wasn't intended.\n\nthe `<DestinationSubDirectory>` attribute works fine when we are talking about implicit references. But I would have expected it to work recursively up the directory structure. To this end I have created a reproduction repository:\nhttps://github.com/CEbbinghaus/DestinationSubDirectoryRepro\n\nIt's probably not trivial to implement but having functionality like this would go a long way to keeping the root directory clear and being able to better organize libraries.",
  "state": "OPEN",
  "createdAt": "2025-02-07T03:47:17Z",
  "updatedAt": "2025-02-11T15:23:30Z",
  "closedAt": null,
  "author": {
    "login": "CEbbinghaus"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "labels": [
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "@CEbbinghaus what led you to think that specifying `DestinationSubDirectory` metadata in this way would have an effect? The [only docs I see for it](https://learn.microsoft.com/visualstudio/msbuild/resolveassemblyreference-task?view=vs-2022#:~:text=%2D%20DestinationSubDirectory%3A%20String%20value.%20Specifies%20the%20relative%20destination%20directory%20to%20copy%20this%20item%20to.) are as an _output_ of a task.\n\nThe .NET SDK doesn't (today) provide much help with collections of related executables--you may wish to follow the related issue https://github.com/dotnet/sdk/issues/18282.",
        "createdAt": "2025-02-11T15:23:29Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}