{
  "number": 7299,
  "title": "Use StringBuilderCache more",
  "body": "We often make new StringBuilders when we need them rather than using the cache to get a premade one. Please don't just update tests, but some of our uses are presumably in hot paths that could be improved with fewer allocations.\r\n\r\n#7296 is what a single change might look like, though there are presumably many more.",
  "state": "OPEN",
  "createdAt": "2022-01-15T00:27:26Z",
  "updatedAt": "2024-02-21T16:28:07Z",
  "closedAt": null,
  "author": {
    "login": "Forgind"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Situation is more complicated by the fact we have two StringBuilder caches. StringBuilderCache and ReauseableStringBuilder. \r\nI recommend to use:\r\n- StringBuilderCache when\r\n  - expected size of result string <512 characters\r\n- ReauseableStringBuilder\r\n  - expected size of result string >512 characters\r\n  - it does not run heavily concurrently in multiple threads otherwise those threads would compete for process wide shared ReauseableStringBuilder singleton, it is thread safe but perf inefficient\r\n  - limited API fa\u00e7ade of ReauseableStringBuilder is sufficient\r\n",
        "createdAt": "2022-01-17T16:14:22Z",
        "updatedAt": "2022-01-17T16:14:22Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "The updated list with deprecated and tests removed.\r\n```\r\nsrc\\Utilities\\ToolLocationHelper.cs\r\n2299:            StringBuilder displayNameBuilder = new StringBuilder();\r\n\r\nsrc\\Utilities\\TrackedDependencies\\DependencyTableCache.cs\r\n138:                StringBuilder normalizedTlogFilename = new StringBuilder();\r\n174:                StringBuilder normalizedTlogPath = new StringBuilder(i + normalizedTlogFilename.Length);\r\n\r\nsrc\\Utilities\\ToolTask.cs\r\n1580:            StringBuilder sb = new StringBuilder(input);\r\n\r\n\r\nsrc\\Utilities\\CommandLineBuilder.cs\r\n102:        protected StringBuilder CommandLine { get; } = new StringBuilder();\r\n\r\nsrc\\StringTools\\WeakStringCacheInterner.cs\r\n134:            StringBuilder result = new StringBuilder(1024);\r\n\r\nsrc\\Tasks\\NativeMethods.cs\r\n1456:                StringBuilder sDisplayName = new StringBuilder(ilen);\r\n1487:                                .Aggregate(new StringBuilder(), (builder, v) => builder.Append(v.ToString(\"x2\")))),\r\n\r\nsrc\\Tasks\\RoslynCodeTaskFactory\\RoslynCodeTaskFactory.cs\r\n248:                using (StringWriter writer = new StringWriter(new StringBuilder(), CultureInfo.CurrentCulture))\r\n\r\nsrc\\Tasks\\XamlTaskFactory\\XamlTaskFactory.cs\r\n170:                var errorList = new StringBuilder();\r\n\r\nsrc\\Tasks\\XamlTaskFactory\\XamlDataDrivenToolTask.cs\r\n391:            var switchValue = new StringBuilder(baseSwitch);\r\n\r\nsrc\\Tasks\\XamlTaskFactory\\TaskParser.cs\r\n98:                var parseErrors = new StringBuilder();\r\n\r\nsrc\\Tasks\\XamlTaskFactory\\CommandLineGenerator.cs\r\n560:                    StringBuilder val = new StringBuilder();\r\n586:                StringBuilder val = new StringBuilder();\r\n\r\nsrc\\Tasks\\WriteCodeFragment.cs\r\n268:            var generatedCode = new StringBuilder();\r\n\r\nsrc\\Tasks\\RedistList.cs\r\n338:            var keyBuilder = assemblyTables.Length > 0 ? new StringBuilder(assemblyTables[0].Descriptor) : new StringBuilder();\r\n518:            var keyBuilder = whiteListAssemblyTableInfo.Length > 0 ? new StringBuilder(whiteListAssemblyTableInfo[0].Descriptor) : new StringBuilder();\r\n\r\nsrc\\Tasks\\ParserState.cs\r\n101:            var fullClass = new StringBuilder(1024);\r\n\r\nsrc\\Tasks\\LockCheck.cs\r\n214:            var key = new StringBuilder(new string('\\0', CCH_RM_SESSION_KEY + 1));\r\n\r\nsrc\\Tasks\\ManifestUtil\\Util.cs\r\n65:            StringBuilder s = new StringBuilder(a.Length);\r\n75:            StringBuilder s = new StringBuilder(a.Length);\r\n101:            StringBuilder sb = new StringBuilder(value);\r\n\r\nsrc\\Tasks\\ManifestUtil\\SecurityUtil.cs\r\n791:            var commandLine = new StringBuilder();\r\n\r\nsrc\\Tasks\\ManifestUtil\\FileReference.cs\r\n261:            var sb = new StringBuilder();\r\n\r\nsrc\\Tasks\\GetAssemblyIdentity.cs\r\n48:            var s = new StringBuilder(a.Length * 2);\r\n\r\nsrc\\Tasks\\ManifestUtil\\AssemblyIdentity.cs\r\n431:            var sb = new StringBuilder(_name);\r\n\r\nsrc\\Tasks\\GenerateResource.cs\r\n2046:                StringBuilder sb = new StringBuilder(text.Length);\r\n3561:                StringBuilder name = new StringBuilder(255);\r\n3562:                StringBuilder value = new StringBuilder(2048);\r\n\r\nsrc\\Shared\\XamlUtilities.cs\r\n31:            StringBuilder propertyId = new StringBuilder();\r\n\r\nsrc\\Shared\\TaskLoggingHelper.cs\r\n941:                var builder = new StringBuilder(200);\r\n\r\nsrc\\Shared\\StringExtensions.cs\r\n35:            var builder = new StringBuilder(aString.Length - oldValue.Length + newValue.Length);\r\n\r\nsrc\\Shared\\QuotingUtilities.cs\r\n76:            string separators = new StringBuilder().Append(separator).ToString();\r\n80:            StringBuilder splitString = new StringBuilder();\r\n183:            StringBuilder unquotedString = new StringBuilder();\r\n\r\nsrc\\Tasks\\BootstrapperUtil\\BootstrapperBuilder.cs\r\n318:                            StringBuilder missingProductCodes = new StringBuilder();\r\n340:                        var missingProductCodes = new StringBuilder();\r\n514:                StringBuilder productsOrder = new StringBuilder();\r\n734:            var productsInLoop = new StringBuilder();\r\n1628:            var output = new StringBuilder(byteArray.Length);\r\n\r\nsrc\\Tasks\\FileIO\\WriteLinesToFile.cs\r\n63:                StringBuilder buffer = new StringBuilder();\r\n\r\nsrc\\Tasks\\CreateManifestResourceName.cs\r\n377:            var everettId = new StringBuilder(name.Length);\r\n\r\nsrc\\Tasks\\DataDriven\\DataDrivenToolTask.cs\r\n605:            StringBuilder val = new StringBuilder(GetEffectiveArgumentsValues(toolSwitch));\r\n644:                    StringBuilder val = new StringBuilder(GetEffectiveArgumentsValues(toolSwitch));\r\n670:                StringBuilder val = new StringBuilder(GetEffectiveArgumentsValues(toolSwitch));\r\n\r\nsrc\\Shared\\LanguageParser\\StreamMappedString.cs\r\n376:            StringBuilder result = new StringBuilder(length);\r\n\r\nsrc\\Shared\\FileUtilities.cs\r\n144:            StringBuilder builder = new StringBuilder();\r\n\r\nsrc\\Tasks\\ComReference.cs\r\n410:            var buffer = new StringBuilder();\r\n\r\nsrc\\Tasks\\CommandLineBuilderExtension.cs\r\n167:            StringBuilder quotedText = new StringBuilder();\r\n\r\nsrc\\Shared\\ExceptionHandling.cs\r\n367:            var builder = new StringBuilder();\r\n\r\nsrc\\Shared\\FileMatcher.cs\r\n2201:            var sb = new StringBuilder(aString.Length);\r\n\r\nsrc\\Tasks\\CodeTaskFactory.cs\r\n757:                var codeBuilder = new StringBuilder();\r\n\r\nsrc\\Tasks\\AxTlbBaseReference.cs\r\n231:            var builder = new StringBuilder(interopDllHeader);\r\n\r\nsrc\\Shared\\EventArgsFormatting.cs\r\n222:            StringBuilder format = new StringBuilder();\r\n333:            StringBuilder formattedMessage = new StringBuilder();\r\n\r\nsrc\\Tasks\\AssemblyDependency\\ResolveAssemblyReference.cs\r\n1093:                            // If we are logging warnings append it into existing StringBuilder, otherwise build details by new StringBuilder.\r\n1095:                            StringBuilder logDependencies = logWarning ? logConflict.AppendLine() : new StringBuilder();\r\n1139:                        var buffer = new StringBuilder();\r\n1292:            var buffer = new StringBuilder(a.Length * 2);\r\n\r\nsrc\\Tasks\\AssemblyDependency\\GlobalAssemblyCache.cs\r\n376:            StringBuilder gacPath = new StringBuilder(gacPathLength);\r\n\r\nsrc\\Tasks\\AssemblyDependency\\AssemblyInformation.cs\r\n581:                    runtimeVersion = new StringBuilder(bufferLength);\r\n\r\nsrc\\Shared\\ConversionUtilities.cs\r\n60:            var sb = new StringBuilder();\r\n\r\nsrc\\Shared\\AssemblyNameExtension.cs\r\n879:            StringBuilder sb = new StringBuilder(displayName);\r\n\r\nsrc\\StringTools\\SpanBasedStringBuilder.Simple.cs\r\n85:            _builder = new StringBuilder(capacity * 128);\r\n\r\nsrc\\StringTools.Benchmark\\SpanBasedStringBuilder_Benchmark.cs\r\n23:        private static StringBuilder _pooledStringBuilder = new StringBuilder();\r\n\r\nsrc\\MSBuild\\XMake.cs\r\n173:            StringBuilder builder = new StringBuilder();\r\n\r\nsrc\\MSBuild\\PerformanceLogEventListener.cs\r\n139:                    s_builder = new StringBuilder();\r\n\r\nsrc\\Framework\\TaskParameterEventArgs.cs\r\n69:            var sb = new StringBuilder();\r\n\r\nsrc\\Framework\\StringBuilderCache.cs\r\n15:**            subsequent calls will return a new StringBuilder.\r\n61:                    // Avoid StringBuilder block fragmentation by getting a new StringBuilder\r\n74:            StringBuilder stringBuilder = new StringBuilder(capacity);\r\n\r\nsrc\\Framework\\ReuseableStringBuilder.cs\r\n237:                    returned = new StringBuilder(SelectBracketedCapacity(capacity));\r\n252:                    returned = new StringBuilder(newCapacity);\r\n307:                        returningBuilder = new StringBuilder(newCapacity);\r\n\r\nsrc\\Framework\\NativeMethods.cs\r\n962:                StringBuilder fullPathBuffer = new StringBuilder(length);\r\n1001:                StringBuilder fullPathBuffer = new StringBuilder(length);\r\n\r\nsrc\\Build\\Graph\\ProjectGraph.cs\r\n496:            var sb = new StringBuilder();\r\n\r\n\r\nsrc\\Build\\Graph\\GraphBuilder.cs\r\n593:            var errorMessage = new StringBuilder(projectsInCycle.Select(p => p.Length).Sum());\r\n\r\n\r\nsrc\\Build\\Logging\\BaseConsoleLogger.cs\r\n162:            StringBuilder result = new StringBuilder(\r\n283:            StringBuilder result = new StringBuilder((indentLevel * tabWidth) + formattedString.Length);\r\n\r\nsrc\\Build\\Logging\\BinaryLogger\\BuildEventArgsReader.cs\r\n1295:                    stringBuilder = new StringBuilder();\r\n\r\nsrc\\Build\\Evaluation\\Profiler\\ProfilerResultPrettyPrinter.cs\r\n37:            var stringBuilder = new StringBuilder();\r\n\r\nsrc\\Build\\Evaluation\\Evaluator.cs\r\n2551:            var sb = new StringBuilder();\r\n\r\n\r\nsrc\\Build\\Construction\\Solution\\ProjectInSolution.cs\r\n498:            var cleanProjectName = new StringBuilder(projectName);\r\n\r\nsrc\\Build\\Construction\\Solution\\SolutionProjectGenerator.cs\r\n232:            var solutionConfigurationContents = new StringBuilder(1024);\r\n550:            var builder = new StringBuilder(name);\r\n1018:                var xml = new StringBuilder();\r\n1425:                var conditionDescribingValidConfigurations = new StringBuilder(\"(false)\");\r\n1446:                StringBuilder referenceItemName = new StringBuilder(GenerateSafePropertyName(project, \"References\"));\r\n1605:            var referenceGuids = new StringBuilder();\r\n1766:            var condition = new StringBuilder(\" ('$(CurrentSolutionConfigurationContents)' != '') and (false\");\r\n\r\nsrc\\Build\\BackEnd\\TaskExecutionHost\\TaskExecutionHost.cs\r\n1458:                    StringBuilder joinedOutputs = (outputs.Length == 0) ? new StringBuilder() : null;\r\n1465:                            joinedOutputs ??= new StringBuilder();\r\n1534:                    StringBuilder joinedOutputs = (outputs.Length == 0) ? new StringBuilder() : null;\r\n1541:                            joinedOutputs ??= new StringBuilder();\r\n\r\nsrc\\Build\\BackEnd\\Components\\Scheduler\\Scheduler.cs\r\n2273:            StringBuilder nodeIndices = new StringBuilder();\r\n2366:            StringBuilder utilitzationPercentages = new StringBuilder();\r\n2390:            StringBuilder stringBuilder = new StringBuilder(64);\r\n2458:            StringBuilder prePadString = new StringBuilder(2 * level);\r\n\r\n\r\nsrc\\Framework\\BuildEventArgs.cs\r\n291:            var sb = new StringBuilder();\r\n```\r\n\r\nI went through most of the list and these seemed like a good start:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/9ef2fa86f5caa734e697f5bffea80237f8100e43/src/Tasks/GenerateResource.cs#L3558-L3559\r\n\r\nhttps://github.com/dotnet/msbuild/blob/518c041f4511a6bc23eb40703b69a94ea46c65fd/src/Shared/QuotingUtilities.cs#L76-L81\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b909fe611557de6777c141881b7f265495b0ef30/src/Tasks/BootstrapperUtil/BootstrapperBuilder.cs#L318-L341",
        "createdAt": "2022-01-28T06:12:19Z",
        "updatedAt": "2022-01-28T06:12:19Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "A couple of those look like cases of \"why are you using a StringBuilder in the first place,\" so that can also be a consideration. Like in QuotingUtilities, `new StringBuilder().Append(separator).ToString()` stood out to me.",
        "createdAt": "2022-01-31T23:56:47Z",
        "updatedAt": "2022-01-31T23:56:47Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "In #7162 danmoseley suggested msbuild move towards using `ValueStringBuilder`. Does the team want to copy that code from CORE, or wait for it to be exposed publicly in CORE and then target that version of CORE?\r\n\r\nHere is an article on `ValueStringBuilder` that I found a bit helpful:\r\nhttps://andrewlock.net/a-deep-dive-on-stringbuilder-part-6-vaulestringbuilder-a-stack-based-string-builder/\r\n\r\nIt sounds like it would be a great improvement.",
        "createdAt": "2022-02-01T00:09:56Z",
        "updatedAt": "2022-02-01T00:09:56Z",
        "author": {
          "login": "elachlan"
        }
      },
      {
        "body": "I would rather wait on that unless/until we have _very_ compelling performance data suggesting we need it.",
        "createdAt": "2022-02-01T15:52:18Z",
        "updatedAt": "2022-02-01T15:52:18Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}