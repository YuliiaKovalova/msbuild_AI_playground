{
  "number": 795,
  "title": "Microsoft.Build.Evaluation.Project(string projectFile) does not reparse project file the second time a Project instance is constructed",
  "body": "**This item was filed by a customer. See below for description & repro steps:**\n\nDescription: When using the Project(string projectFile) constructor two times after each other, the second time does not read the content from the file, but uses some cache of where it re-uses the content from the first time, even though the file might have changed. \n\nRepro Steps: I have a stand alone solution which has the minimum amount of code to reproduce the issue. It should be self-explanatory. \n\nImpact: Unexpected behaviour, weird issues, lost time. Work around IS available.\n\nSee Connect bug [here](https://connect.microsoft.com/VisualStudio/feedback/details/2880213/microsoft-build-evaluation-project-string-projectfile-does-not-reparse-project-file-the-second-time-a-project-instance-is-constructed). Please let us know if you want the repro zip.\n",
  "state": "CLOSED",
  "createdAt": "2016-07-19T22:34:23Z",
  "updatedAt": "2024-02-21T17:27:02Z",
  "closedAt": "2019-07-24T21:31:55Z",
  "author": {
    "login": "Sarabeth-Jaffe-Microsoft"
  },
  "labels": [
    "help wanted",
    "backlog",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Hi @Sarabeth-Jaffe-Microsoft, can you send me the repro zip. What means \n\n> workaround IS available?\n\nIs this issue still fixed?\n",
        "createdAt": "2016-08-03T11:40:41Z",
        "updatedAt": "2016-08-03T11:40:59Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Hi, here is the zip-file.\n\nYou can see the workaround in the code.\n\n[ProjectConstructorBug.zip](https://github.com/Microsoft/msbuild/files/408771/ProjectConstructorBug.zip)\n",
        "createdAt": "2016-08-09T11:06:03Z",
        "updatedAt": "2016-08-09T11:06:03Z",
        "author": {
          "login": "FelixNairz"
        }
      },
      {
        "body": "Hi @FelixNairz, thanks for the zip. I will see what i can do.\n",
        "createdAt": "2016-08-15T11:39:15Z",
        "updatedAt": "2016-08-15T11:39:15Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Hi @Sarabeth-Jaffe-Microsoft, it may be that this behavior is wanted. Because in the [constructor](https://github.com/Microsoft/msbuild/blob/master/src/XMakeBuildEngine/Definition/ProjectCollection.cs#L256) of `ProjectCollection` this bool hardcoded. Is that correct? So maybe we can add an overload to let the user decide to reload changes from disk.\n",
        "createdAt": "2016-08-15T12:36:17Z",
        "updatedAt": "2016-08-15T12:41:50Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Ok, i see that it's easier. @FelixNairz, you have to do `ProjectCollection.GlobalProjectCollection.UnloadAllProjects()`\n\n```\npublic void UpgradeProject()\n            {\n                var p = GetProject();\n\n                try\n                {\n                    UpgradeRanorexVersion(p);\n\n                    p.Save(this.projectFile);\n                }\n                finally\n                {\n                    ProjectCollection.GlobalProjectCollection.UnloadAllProjects();\n                    var loadedProjects = ProjectCollection.GlobalProjectCollection.GetLoadedProjects(this.projectFile);\n                    Debug.Assert(!loadedProjects.Any());\n                }\n            }\n```\n\nThis forces to unload all projects and cleares the propertyCache.\n[See here](https://github.com/Microsoft/msbuild/blob/master/src/XMakeBuildEngine/Definition/ProjectCollection.cs#L1189)\n",
        "createdAt": "2016-08-15T13:05:42Z",
        "updatedAt": "2016-08-15T13:19:06Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "But there is still the question if user is **not** completely done (e.g. they have another projects in `ProjectCollection`) and **has** to do changes on disk, that they are able to read this changes from disk instead of `PropertyCache`\n",
        "createdAt": "2016-08-15T13:09:13Z",
        "updatedAt": "2016-08-15T13:51:54Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "Okay, now I am confused about the different meaning of UnloadProject vs UnloadAllProjects.\n\nIs it about the PropertyCache only then? UnloadProject does not leave the project itself loaded, this call should insure me against that:\n\nDebug.Assert(!loadedProjects.Any());\n\nI think the behaviour here is really weird.\n",
        "createdAt": "2016-08-16T06:10:43Z",
        "updatedAt": "2016-08-16T06:19:22Z",
        "author": {
          "login": "FelixNairz"
        }
      },
      {
        "body": "Hi @FelixNairz. Yes it unloads the project but it doesn't clear the cache for that project. So if you load the project again it load it from the cache. Maybe tomorrow I can add some overload's that will load the file from Disk and not from cache. But to be sure @Sarabeth-Jaffe-Microsoft is my statement correct that this behavior is not a bug?\n",
        "createdAt": "2016-08-16T15:45:08Z",
        "updatedAt": "2016-08-16T15:47:46Z",
        "author": {
          "login": "martinscholz83"
        }
      },
      {
        "body": "I poked through the code and found this comment: https://github.com/Microsoft/msbuild/blob/xplat/src/XMakeBuildEngine/Definition/ProjectCollection.cs#L189-L197\n\nMy interpretation of that comment (and of the Project constructor that sets the cache to not reload on disk changes) is that when a build is running, multiple project root elements are opened (transitive imports) and possibly re-opened (via the msbuild task). At the same time as a build is running, other programs may change the xml files for those projects (let's say a property rename that touches all the files that use that property). You don't want your build to capture this inconsistent state (part of the build uses some files with the old property name and part of the build uses files with the new name), and therefore the cache is not flushed, and reloading on disk changes is turned off.\n\nConsidering this, I'd vote for just using `UnloadAllProjects` (risk free) instead of adding the overload which  might lead to some nasty weird bugs down the road ... :(\n",
        "createdAt": "2016-08-17T01:33:38Z",
        "updatedAt": "2016-08-17T01:35:30Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "How about a way to remove a particular project from the cache? \n\nIn this case at least, I want to ensure this project should be reloaded, but I don't necessary want all other projects to be reloaded too (costly). \n\nAlso, the fact that we have two constructors, with\n- string filename \n  -XmlReader \n  as arguments, one using a cached version, and another one not using a cached version is somewhat misleading. I know why this is of course, but it just adds to the confusion.\n",
        "createdAt": "2016-08-17T06:28:50Z",
        "updatedAt": "2016-08-17T06:28:50Z",
        "author": {
          "login": "FelixNairz"
        }
      },
      {
        "body": "we want to develop an app which auto migrate lower version projects to higher version.Please help on this to write code in dot net",
        "createdAt": "2017-12-14T09:41:34Z",
        "updatedAt": "2019-07-24T21:26:46Z",
        "author": {
          "login": "manoharjogi"
        }
      },
      {
        "body": "how to write code in dot net.\r\nplease help on this\r\n",
        "createdAt": "2017-12-14T09:41:48Z",
        "updatedAt": "2019-07-24T21:26:40Z",
        "author": {
          "login": "manoharjogi"
        }
      },
      {
        "body": "I am not getting any value in match varialble. please suggest any more\r\n\r\nvar match = this.ranorexSolutionVersionRegex.Match(fileContent);",
        "createdAt": "2017-12-14T11:28:08Z",
        "updatedAt": "2019-07-24T21:26:34Z",
        "author": {
          "login": "manoharjogi"
        }
      },
      {
        "body": "Team triage: After reading @cdmihai's explanation above about keeping the world view consistent and adding to that the fact that people haven't been asking us for this, we are going to go ahead and close this issue.",
        "createdAt": "2019-07-24T21:31:55Z",
        "updatedAt": "2019-07-24T21:31:55Z",
        "author": {
          "login": "livarcocc"
        }
      }
    ]
  }
}