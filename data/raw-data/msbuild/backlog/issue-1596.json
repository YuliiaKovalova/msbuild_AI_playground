{
  "number": 1596,
  "title": "MSBuild should respect upstream tool language requests",
  "body": "Different upstream tools have different language configuration requirements:\r\n- dotnet CLI sets `DOTNET_CLI_UI_LANGUAGE` and `VSLANG` (https://github.com/Microsoft/msbuild/issues/1596#issuecomment-409362785 https://github.com/dotnet/cli/issues/9722#issuecomment-409358296)\r\n- Visual Studio has a [fallback mechanism guideline](https://microsoft.sharepoint.com/teams/DD_Tenets/World%20Ready/Localizability/SitePages/Language%20Pack%20-%20Extended%20Guidance.aspx). In order:\r\n  - `VSLANG` environmnent variable\r\n  - `/lcid` command line switch\r\n  - call `GetConsoleFallbackUICulture` (**we only do this currently**)\r\n\r\nRelated info: https://github.com/dotnet/cli/issues/4988#issuecomment-266836559",
  "state": "CLOSED",
  "createdAt": "2017-01-21T00:20:23Z",
  "updatedAt": "2024-02-21T17:22:38Z",
  "closedAt": "2023-05-12T02:58:39Z",
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "Area: Localization",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "nagilson"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "VSLANG is sufficient for CLI and VS since we set that when the language is overridden by means other than VSLANG.",
        "createdAt": "2018-07-31T20:48:55Z",
        "updatedAt": "2018-07-31T20:48:55Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "Is there a workaround while this is still in development? I've tried:\r\n```\r\nset DOTNET_CLI_UI_LANGUAGE=en\r\n```\r\nand also:\r\n```\r\nset VSLANG=1033\r\n```\r\nto try to get the msbuild output to switch to English when using the `dotnet build` command, but neither works.",
        "createdAt": "2019-05-20T16:58:23Z",
        "updatedAt": "2019-05-20T16:58:23Z",
        "author": {
          "login": "martinstein"
        }
      },
      {
        "body": "Only option I know is to change the machine's language.",
        "createdAt": "2019-05-20T18:08:28Z",
        "updatedAt": "2019-05-20T18:08:28Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "It might be interesting for msbuild to do what CLI does and re-export other things like PreferredUILanguage. This would give the same compiler localization as dotnet build if you configure an env var.",
        "createdAt": "2019-08-09T22:55:26Z",
        "updatedAt": "2019-08-09T22:55:26Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "The BuildParameters class has ```culture``` and ```uiculture``` fields.\r\nI don\u2019t see the ability to set these parameters through the command line parameters (dotnet build | dotnet pack).\r\nIn my case, I use the CI / CD service (gocd), artifact files has invalid the wrong encoding, it is not clear how to set the encoding.",
        "createdAt": "2020-01-05T23:26:21Z",
        "updatedAt": "2020-01-05T23:26:59Z",
        "author": {
          "login": "lobster2012-user"
        }
      },
      {
        "body": "`chcp 437` seems to work if you call it before invoking MSBuild",
        "createdAt": "2020-06-16T18:25:20Z",
        "updatedAt": "2020-06-16T18:25:20Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "This would be incredibly useful when reporting problems; I do use non-English UI language, but it'd be very useful if the output language could be specified by environment variable or something because others do not understand it.\r\n\r\nI'm not exactly sure if this is a MSBuild part or somewhere else, but for example, when I type `dotnet new -i Microsoft.PowerShell.Standard.Module.Template`, there's a first few messages that are printed in local language (in my case, Korean) saying \"determining projects to restore\". I've tried setting `chcp 437`, `$env:DOTNET_CLI_UI_LANGUAGE = \"en-us\"` and `$env:VSLANG=1033` but none of them seem to work.",
        "createdAt": "2020-08-02T12:01:52Z",
        "updatedAt": "2020-08-02T12:01:52Z",
        "author": {
          "login": "Gnbrkm41"
        }
      },
      {
        "body": "@Gnbrkm41 I've filed https://github.com/dotnet/sdk/issues/12747 on your behalf. Since it's dotnet.exe it should probably go there.\r\n\r\nFor now, `chcp 437` from the command line should work for MSBuild.exe.",
        "createdAt": "2020-08-03T17:32:13Z",
        "updatedAt": "2020-08-03T17:32:13Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Deleting `C:\\Program Files\\dotnet\\sdk\\{sdk-version}\\{locale}` folder can also be used as a workaround.",
        "createdAt": "2020-12-04T11:06:12Z",
        "updatedAt": "2020-12-04T11:06:12Z",
        "author": {
          "login": "shadow-cs"
        }
      },
      {
        "body": "It has been over 5 years since the issue opened. Is it resolved? I still cannot change the MSBuild locale without changing OS locale. Tried `chcp 437`, `$env:DOTNET_CLI_UI_LANGUAGE = \"en-US\"` and `$env:VSLANG=\"1033\"`.",
        "createdAt": "2022-09-15T13:10:39Z",
        "updatedAt": "2022-09-15T13:10:39Z",
        "author": {
          "login": "hcoona"
        }
      },
      {
        "body": "I think we can solve this issue by geting `UILanguageOverride` into MSBuild to support overriding its output language:\r\n\r\nhttps://github.com/dotnet/sdk/blob/49d9b4148c4f65fd3f691186a4533375c3a83c97/src/Cli/dotnet/UILanguageOverride.cs#L9",
        "createdAt": "2022-09-23T04:29:08Z",
        "updatedAt": "2022-09-23T04:29:08Z",
        "author": {
          "login": "dominoFire"
        }
      },
      {
        "body": "This is **so frustrating**. I tried setting `DOTNET_CLI_UI_LANGUAGE=en`, killed all MSBuild processes, and I'm still getting compile errors in my system language, which is completely useless because every error on Google is in English.\r\n\r\nI also tried deleting every `cs` folder I found among the many MSBuild folders I have from various .NET versions, but apparently that was too much and MSBuild is now crashing trying to load localized resource DLLs.\r\n\r\n![obrazek](https://user-images.githubusercontent.com/3685160/195080836-73234591-28dd-427d-8032-2ab9d61340dc.png)\r\n\r\nCan't there be a simple way to just stop localizing output? I'm sure there are a few people who find this useful so it doesn't have to be the default, but I think for the majority of non-American programmers, this is really not helpful at all.",
        "createdAt": "2022-10-11T11:51:16Z",
        "updatedAt": "2022-10-11T11:51:16Z",
        "author": {
          "login": "chylex"
        }
      },
      {
        "body": "Agree. At least you can search few results with the localized message in StackOverflow ;-(",
        "createdAt": "2022-10-12T13:50:21Z",
        "updatedAt": "2022-10-12T13:50:36Z",
        "author": {
          "login": "hcoona"
        }
      },
      {
        "body": "@hcoona I will add that you can usually search for the error code and copy the actual English error from Microsoft's documentation, which sounds like it would not be a lot of extra steps, but in reality it goes more like this:\r\n\r\n1. Search the error code on Google.\r\n2. Visit a Microsoft documentation page for the error.\r\n3. Be automatically redirected to a **localized version of the documentation**. I'm not sure about compiler errors specifically, but most times these \"localized\" documentation pages are actually **machine-translated**, which means there are many grammatical errors and mistranslations which **actively harm the understandability of your documentation for foreigners**.\r\n4. Manually switch the website language to English.\r\n5. Finally you can copy/paste the actual error message into Google.\r\n\r\nI'm sorry, but this whole thing is a terrible user experience. ",
        "createdAt": "2022-10-12T15:13:06Z",
        "updatedAt": "2022-10-12T15:14:11Z",
        "author": {
          "login": "chylex"
        }
      },
      {
        "body": "I agree the UX is quite poor. I have been working to improve the UX in the .NET SDK/CLI, hoping to give it a try and migrate that same code here. Once that's been approved there. ",
        "createdAt": "2023-01-06T22:08:32Z",
        "updatedAt": "2023-01-06T22:08:32Z",
        "author": {
          "login": "nagilson"
        }
      },
      {
        "body": "Setting DOTNET_CLI_UI_LANGUAGE=en helped for me.",
        "createdAt": "2023-01-21T09:50:51Z",
        "updatedAt": "2023-01-21T09:50:51Z",
        "author": {
          "login": "sidorov-alex"
        }
      },
      {
        "body": "I already set `DOTNET_CLI_UI_LANGUAGE=en` and I'm still getting this...\r\n\r\n![obrazek](https://user-images.githubusercontent.com/3685160/214456576-a688c746-f752-4ff7-90a2-f8cacf307f9a.png)\r\n",
        "createdAt": "2023-01-25T01:04:04Z",
        "updatedAt": "2023-01-25T01:04:04Z",
        "author": {
          "login": "chylex"
        }
      },
      {
        "body": "@chylex \r\nMy configuration:\r\n- Windows 11 + VS Code 1.74.3\r\n- .NET 7.0.102\r\n- I've set environment variable for user in system settings DOTNET_CLI_UI_LANGUAGE=en\r\n- For build I execute \"dotnet build\"\r\n- My system language is Russian\r\n\r\n**Output:**\r\n\r\nExecuting task: C:\\Program Files\\dotnet\\dotnet.exe build D:\\Work\\BadBroker/BadBroker/BadBroker.csproj /property:GenerateFullPaths=true /consoleloggerparameters:NoSummary \r\n\r\nMSBuild version 17.4.1+9a89d02ff for .NET\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nD:\\Work\\BadBroker\\BadBroker\\Program.cs(25,5): error CS1061: 'WebApplication' does not contain a definition for 'Ru\r\nnnn' and no accessible extension method 'Runnn' accepting a first argument of type 'WebApplication' could be found \r\n (are you missing a using directive or an assembly reference?) [D:\\Work\\BadBroker\\BadBroker\\BadBroker.csproj]      \r\n\r\n *  The terminal process \"C:\\Program Files\\dotnet\\dotnet.exe 'build', 'D:\\Work\\BadBroker/BadBroker/BadBroker.csproj', '/property:GenerateFullPaths=true', '/consoleloggerparameters:NoSummary'\" terminated with exit code: 1. \r\n *  Terminal will be reused by tasks, press any key to close it.\r\n\r\nAs you can see there is only English output.\r\n\r\n**If I delete DOTNET_CLI_UI_LANGUAGE environment variable then output looks like:**\r\n\r\nExecuting task: C:\\Program Files\\dotnet\\dotnet.exe build D:\\Work\\BadBroker/BadBroker/BadBroker.csproj /property:GenerateFullPaths=true /consoleloggerparameters:NoSummary \r\n\r\nMSBuild version 17.4.1+9a89d02ff for .NET\r\n  \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f...\r\n  \u0412\u0441\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u0434\u043b\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f.\r\nD:\\Work\\BadBroker\\BadBroker\\Program.cs(25,5): error CS1061: **\"WebApplication\" \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \"Runnn\", \u0438 \u043d\u0435\r\n \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0439\u0442\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \"Runnn\", \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0449\u0438\u0439 \u0442\u0438\u043f \"WebApplication\" \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 (\r\n\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0430 using \u0438\u043b\u0438 \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0431\u043e\u0440\u043a\u0443).** [D:\\Work\\BadBroker\\BadBroker\\BadBroker.csproj]\r\n\r\n *  The terminal process \"C:\\Program Files\\dotnet\\dotnet.exe 'build', 'D:\\Work\\BadBroker/BadBroker/BadBroker.csproj', '/property:GenerateFullPaths=true', '/consoleloggerparameters:NoSummary'\" terminated with exit code: 1. \r\n *  Terminal will be reused by tasks, press any key to close it. \r\n",
        "createdAt": "2023-01-25T04:40:32Z",
        "updatedAt": "2023-01-25T04:40:32Z",
        "author": {
          "login": "sidorov-alex"
        }
      },
      {
        "body": "Note: This only work for msbuild using `dotnet build`. Calling `msbuild` directly does not honor the language.",
        "createdAt": "2023-01-25T07:56:20Z",
        "updatedAt": "2023-01-25T07:56:20Z",
        "author": {
          "login": "Seikilos"
        }
      },
      {
        "body": "This should be added & fixed in 8.0 preview 5!",
        "createdAt": "2023-05-09T22:43:50Z",
        "updatedAt": "2023-05-09T22:43:58Z",
        "author": {
          "login": "nagilson"
        }
      },
      {
        "body": "Not working for me in .NET 8... I have the `DOTNET_CLI_UI_LANGUAGE=en` environment variable set on my whole user, but compile errors are still in Czech...\r\n\r\nI ended up going into `C:\\Program Files\\dotnet\\sdk\\8.0.100`, deleting every single folder named `cs`, then restoring some of them that were in `analyzers` folders because it can't just fallback to english for some reason, but at least the compile errors are finally in English.\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/3685160/2f590dc8-000d-467a-9fbe-0af2cbd6dd4e)\r\n",
        "createdAt": "2023-12-19T00:42:04Z",
        "updatedAt": "2023-12-19T00:42:04Z",
        "author": {
          "login": "chylex"
        }
      },
      {
        "body": "Strangely, this only made MSBuild output, which was previously also localized, fallback to English, but the actual (I assume, dotnet) error message is still in Czech.\r\n\r\nI've also noticed that the `DOTNET_CLI_UI_LANGUAGE=en` only works when I use `dotnet build` in CL directly. If I build the project in Rider, theoutput is still in system's language, despite Rider detecting the env variable in Run Configuration and JetBrains stating \"build console output in Rider returns the same content as of running dotnet build manually\".\r\n\r\nI'm a bit lost here and quite frustrated. Why would anyone want development tools to be localized?\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/67392206/75adae74-bc97-4ad5-8eb5-7bc9fdacb3bb)\r\n\r\n> Not working for me in .NET 8... I have the `DOTNET_CLI_UI_LANGUAGE=en` environment variable set on my whole user, but compile errors are still in Czech...\r\n> \r\n> I ended up going into `C:\\Program Files\\dotnet\\sdk\\8.0.100`, deleting every single folder named `cs`, then restoring some of them that were in `analyzers` folders because it can't just fallback to english for some reason, but at least the compile errors are finally in English.\r\n> \r\n> ![image](https://private-user-images.githubusercontent.com/3685160/291442285-2f590dc8-000d-467a-9fbe-0af2cbd6dd4e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDQ3MTA1OTgsIm5iZiI6MTcwNDcxMDI5OCwicGF0aCI6Ii8zNjg1MTYwLzI5MTQ0MjI4NS0yZjU5MGRjOC0wMDBkLTQ2N2EtOWZiZS0wYWYyY2JkNmRkNGUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDEwOCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDAxMDhUMTAzODE4WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZDg1MzA1ZTlmMjI5NTY2NTcwMDZmMGMzZWFhZGRiZDU5OWVjYmFiZDE5MGNlYWEzYzJhOWE0YjFmMzU3MWYwMiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.RL7PJakGVxf_1ZUxSPGccBYVk7XGTS8OXJgZEAsTFHo)\r\n\r\n",
        "createdAt": "2024-01-08T11:00:05Z",
        "updatedAt": "2024-01-08T11:00:05Z",
        "author": {
          "login": "adam-zluva"
        }
      },
      {
        "body": "> Not working for me in .NET 8... I have the `DOTNET_CLI_UI_LANGUAGE=en` environment variable set on my whole user, but compile errors are still in Czech...\r\n\r\nIt looks like MSBuild's messages are in English but the C# compiler's are in Czech. @nagilson, does `DOTNET_CLI_UI_LANGUAGE` not imply that the CLI sets the variables that Roslyn checks for?\r\n \r\n> I ended up going into `C:\\Program Files\\dotnet\\sdk\\8.0.100`, deleting every single folder named `cs`, then restoring some of them that were in `analyzers` folders because it can't just fallback to english for some reason, but at least the compile errors are finally in English.\r\n\r\nTo make things extra confusing, some of those `cs` mean `C#` and some mean `Czech`.",
        "createdAt": "2024-01-08T15:28:35Z",
        "updatedAt": "2024-01-08T15:28:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Why would anyone want development tools to be localized?\r\n\r\nOpinions on this vary **widely**, by individual dev and by culture--as I understand it many Europeans are on the \"just give us English\" side and many East Asian folks are strongly on \"if it's in English it's useless, give me a translation\". So we have to try to find compromises.\r\n\r\n> I've also noticed that the `DOTNET_CLI_UI_LANGUAGE=en` only works when I use `dotnet build` in CL directly. If I build the project in Rider, theoutput is still in system's language, despite Rider detecting the env variable in Run Configuration and JetBrains stating \"build console output in Rider returns the same content as of running dotnet build manually\".\r\n\r\nYou'll have to take this up with JetBrains, that sounds like a Rider bug (or doc bug) to me.\r\n",
        "createdAt": "2024-01-08T15:28:44Z",
        "updatedAt": "2024-01-08T15:28:44Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> It looks like MSBuild's messages are in English but the C# compiler's are in Czech. @nagilson, does `DOTNET_CLI_UI_LANGUAGE` not imply that the CLI sets the variables that Roslyn checks for?\r\n> \r\n> >\r\n\r\n@rainersigwald  There is no logic to set a special variable for Roslyn in the SDK or MSBuild to my knowledge (which should be most of the code.) I was not aware they had their own language variable, is that the case? It does set VSLANG. ",
        "createdAt": "2024-01-08T17:13:50Z",
        "updatedAt": "2024-01-08T17:13:50Z",
        "author": {
          "login": "nagilson"
        }
      },
      {
        "body": "I would have expected VSLANG to do it . . .",
        "createdAt": "2024-01-08T17:34:09Z",
        "updatedAt": "2024-01-08T17:34:09Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I looked at it again since its been a while. Actually, it looks like it sets PreferredUILang too, which it says is for C#/VB.\r\nhttps://github.com/dotnet/sdk/blob/main/src/Cli/Microsoft.DotNet.Cli.Utils/UILanguageOverride.cs\r\nBut it does only set those things if it detects a language override, which It should in this case. May be helpful to get a aka.ms//binlog. If the user had set VSLANG or PreferredUILang, as well to something else, then it would NOT override that.",
        "createdAt": "2024-01-08T17:51:49Z",
        "updatedAt": "2024-01-08T17:54:16Z",
        "author": {
          "login": "nagilson"
        }
      },
      {
        "body": "> Opinions on this vary widely, by individual dev and by culture--as I understand it many Europeans are on the \"just give us English\" side and many East Asian folks are strongly on \"if it's in English it's useless, give me a translation\". So we have to try to find compromises.\r\n\r\nThen maybe having English as default for Europeans would be a better compromise? I'm repeatedly frustrated with Microsoft's approach to localization of development tools, such as MSDN (Microsoft Learn?) randomly forcing terrible machine translations of documentation pages, which aren't even consistent with the translations in MSBuild / Roslyn, making it even more difficult to find anything!\r\n\r\nFor example, Adam's example error message \"O\u010dek\u00e1val se st\u0159edn\u00edk (;).\" is apparently translated on https://learn.microsoft.com/cs-cz/dotnet/csharp/misc/cs1002 as \"; O\u010dek\u00e1v\u00e1\", which is complete nonsense. Not to mention that comments in the example code on that page are still in English. This is not helpful at all.\r\n\r\nIf you're not going to do localization properly, then don't make it the default option. If you *are* doing proper localization for East Asian languages, and they have a lot of resources on the internet in their language so it's easier for them to find help, then sure, default to localized for them. For my small european country in particular, this is not the case at all, and all it's doing is hurting communication and searchability.",
        "createdAt": "2024-01-08T22:56:39Z",
        "updatedAt": "2024-01-08T22:58:34Z",
        "author": {
          "login": "chylex"
        }
      },
      {
        "body": "To be clear: \r\n\r\n1. MSBuild will continue to be localized by default.\r\n2. It should be easy to opt out of this, which should be the case in 17.9/8.0.200 (pending release) thanks to https://github.com/dotnet/msbuild/pull/9392.\r\n3. There may be bugs in certain scenarios or with certain tools. Please report them!\r\n4. For quality-of-translation issues, please file bugs on individual repos (but be aware that they'll need to be mirrored to the internal Microsoft loc bug tracking system and then triaged and fixed by the Microsoft loc team).",
        "createdAt": "2024-01-12T21:35:49Z",
        "updatedAt": "2024-01-12T21:35:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "To clarify: we should expect everything in the build process to respect `DOTNET_CLI_UI_LANGUAGE=en`, and open new issues (on the corresponding component issue tracker: e.g. Roslyn, .NET SDK, etc.) if something misbehaves in this mode. Correct?",
        "createdAt": "2024-01-12T21:56:17Z",
        "updatedAt": "2024-01-12T21:56:17Z",
        "author": {
          "login": "ForNeVeR"
        }
      },
      {
        "body": "Exactly correct. But we know of the big can't-set-`DOTNET_CLI_UI_LANGUAGE=en` bug in 8.0.100 (https://github.com/dotnet/msbuild/issues/9254), so make sure it's not that one before filing please :)",
        "createdAt": "2024-01-12T22:01:48Z",
        "updatedAt": "2024-01-12T22:01:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Understood, but\r\n\r\n> For quality-of-translation issues, please file bugs on individual repos (but be aware that they'll need to be mirrored to the internal Microsoft loc bug tracking system and then triaged and fixed by the Microsoft loc team).\r\n\r\nsorry, I'm not going to spend a month of my life reporting endless issues in awful machine translations on your documentation websites, which will only keep piling up as you continue to add new articles. At least MSBuild looks like it might be localized by humans, from the few bits of text I've seen, but what's happening in your online documentation is tragic.",
        "createdAt": "2024-01-13T05:56:55Z",
        "updatedAt": "2024-01-13T05:56:55Z",
        "author": {
          "login": "chylex"
        }
      }
    ]
  }
}