{
  "number": 2240,
  "title": "[Question] How do I debug if msbuild build some of my projects twice during build?",
  "body": "I have solution where some projects have two target frameworks: net46 and netcoreapp1.1. But even if I build solution using `dotnet build -f netcoreapp1.1` some of projects are being built twice according to log.\r\n\r\nHow do I debug this situation?",
  "state": "OPEN",
  "createdAt": "2017-06-22T12:02:20Z",
  "updatedAt": "2024-02-21T16:36:34Z",
  "closedAt": null,
  "author": {
    "login": "aensidhe"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is . . . nontrivial. When faced with similar problems, I put together https://github.com/rainersigwald/ParallelBuildDebuggingLogger, but I haven't yet written any kind of useful documentation about it, so using it is a bit difficult!\r\n\r\nWhat makes you ask the question? Curiosity, or is something going wrong? How did you notice that the projects are being built twice? Depending on what you're seeing, it might just be the [`ProjectReference` protocol](https://github.com/Microsoft/msbuild/blob/master/documentation/ProjectReference-Protocol.md) ensuring that the right output is passed back to a referencing project.",
        "createdAt": "2017-06-26T21:14:59Z",
        "updatedAt": "2017-06-26T21:14:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald [`dotnet build`](https://gist.github.com/aensidhe/90db20a4e7f3dc7ef9a1089fa3951dc9) output suggest it.\r\n\r\n`Running generators in netcore framework mode.` is output from our custom msbuild task.",
        "createdAt": "2017-06-27T12:44:22Z",
        "updatedAt": "2017-06-27T12:44:22Z",
        "author": {
          "login": "aensidhe"
        }
      },
      {
        "body": "@aensidhe How is your custom target hooked into the build?",
        "createdAt": "2017-06-27T15:44:08Z",
        "updatedAt": "2017-06-27T15:44:08Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We have a nuget package included in project via usual `PackageReference` with `*.targets` file in it. `nuget restore` places import directive into `obj\\*.csproj.nuget.g.targets`:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>\r\n  </PropertyGroup>\r\n  <ImportGroup Condition=\" '$(TargetFramework)' == 'net46' AND '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)package.name\\1.1.977-fixt4pdbisnotcrosspl\\build\\package.name.targets\" Condition=\"Exists('$(NuGetPackageRoot)package.name\\1.1.977-fixt4pdbisnotcrosspl\\build\\package.name.targets')\" />\r\n  </ImportGroup>\r\n  <ImportGroup Condition=\" '$(TargetFramework)' == 'netcoreapp1.1' AND '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)package.name\\1.1.977-fixt4pdbisnotcrosspl\\build\\package.name.targets\" Condition=\"Exists('$(NuGetPackageRoot)package.name\\1.1.977-fixt4pdbisnotcrosspl\\build\\package.name.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```",
        "createdAt": "2017-06-27T15:55:12Z",
        "updatedAt": "2017-06-27T15:55:12Z",
        "author": {
          "login": "aensidhe"
        }
      }
    ]
  }
}