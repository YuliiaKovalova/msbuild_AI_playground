{
  "number": 5005,
  "title": "Accept command line parameters from environment variable",
  "body": "Some tools have a handy (hidden?) feature that you can pass them command line parameters through the environment.\r\n\r\nFor example, the Microsoft C++ compiler accepts them through `_CL_` and the linker through `_LINK_`. This can be super handy for adding temporary flags when you don't (easily) control the invocation such as when it's inside a script, batch file, or makefile. For example in the case of the compiler you can use it to preprocess a file with the same defines as the real build, or to get timing information.\r\n\r\nThis would also be useful for MSBuild. Right now I'm looking at the build of dotnet/runtime. I want to temporarily add a verbose logger like `/flp6:v=diag`. Right now to do this I have to dig through a chain of batch files, shell scripts, powershell scripts, and/or cmake files to find the 10 or more places where MSBuild may be launched within these and paste in the flag. This also adds noise in my diff. Later, I have to revert it as well.\r\n\r\nIf I could just do `set _MSBUILD_=/flp6:v=diag` it would solve all these problems.\r\n\r\nI offer a proposed implementation in case you believe this is worthwhile.",
  "state": "OPEN",
  "createdAt": "2019-12-26T21:55:39Z",
  "updatedAt": "2024-02-21T16:30:10Z",
  "closedAt": null,
  "author": {
    "login": "danmoseley"
  },
  "labels": [
    "needs-design",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "We talked about this in PR triage today. BuildXL and other higher-order build engines would like to be better able to cache MSBuild invocations, and we took #5038 to better log when environment variables affect a build invocation. Doing this would mean they would have to know about `_MSBUILD_` for their cache invalidation rules outside of that rule.\r\n\r\nThat's not necessarily a deal breaker but we're having a hard time weighing the costs and benefits, especially with `Directory.Build.rsp` as an option.\r\n\r\nWe'll leave this open to collect upvotes and other feedback, but I don't think we'll take the PR for now.",
        "createdAt": "2020-02-25T21:43:20Z",
        "updatedAt": "2020-02-25T21:43:20Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This shouldn't be anything new for build caching as such systems must already consider `_CL_` and `_LINK_` (either to respect them or document they are not respected) \r\n\r\nFair enough though, thanks for considering!",
        "createdAt": "2020-02-25T22:24:58Z",
        "updatedAt": "2020-02-25T22:24:58Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "I would like to have this feature very much but the response files satisfy my needs for now.",
        "createdAt": "2020-06-13T14:36:13Z",
        "updatedAt": "2020-06-13T14:36:13Z",
        "author": {
          "login": "Nirmal4G"
        }
      }
    ]
  }
}