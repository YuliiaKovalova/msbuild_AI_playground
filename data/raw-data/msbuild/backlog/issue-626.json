{
  "number": 626,
  "title": "Can't get WebSite Project relative path from Sln file",
  "body": "I try to get WebSite Project Relative path from Sln file by using \"Microsoft.Build.Construction.SolutionFile\". But the relative path is wrong in  \"ProjectInSolution\" type.\r\n\r\nFor example, this is Sln file, relative path is \"http://localhost/WebSite\" in \"ProjectInSolutin\" type, How Can I get \"............\\inetpub\\wwwroot\\WebSite\\\" from \"ProjectInSolution\"?  Or is there any other type I can use?\r\n\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 14\r\n\r\nVisualStudioVersion = 14.0.25123.0\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{E24C65DC-7377-472B-9ABA-BC803B73C61A}\") = \"WebSite\", \"http://localhost/WebSite\", \"{0E90CBE5-EA94-41CD-8A64-8D5418B0B5D8}\"\r\n    ProjectSection(WebsiteProperties) = preProject\r\n        UseIISExpress = \"false\"\r\n        TargetFrameworkMoniker = \".NETFramework,Version%3Dv4.5.1\"\r\n        Debug.AspNetCompiler.VirtualPath = \"/WebSite\"\r\n        Debug.AspNetCompiler.PhysicalPath = \"............\\inetpub\\wwwroot\\WebSite\\\"\r\n        Debug.AspNetCompiler.TargetPath = \"PrecompiledWeb\\WebSite\\\"\r\n        Debug.AspNetCompiler.Updateable = \"true\"\r\n        Debug.AspNetCompiler.ForceOverwrite = \"true\"\r\n        Debug.AspNetCompiler.FixedNames = \"false\"\r\n        Debug.AspNetCompiler.Debug = \"True\"\r\n        Release.AspNetCompiler.VirtualPath = \"/WebSite\"\r\n        Release.AspNetCompiler.PhysicalPath = \"............\\inetpub\\wwwroot\\WebSite\\\"\r\n        Release.AspNetCompiler.TargetPath = \"PrecompiledWeb\\WebSite\\\"\r\n        Release.AspNetCompiler.Updateable = \"true\"\r\n        Release.AspNetCompiler.ForceOverwrite = \"true\"\r\n        Release.AspNetCompiler.FixedNames = \"false\"\r\n        Release.AspNetCompiler.Debug = \"False\"\r\n        SlnRelativePath = \"............\\inetpub\\wwwroot\\WebSite\\\"\r\n        DefaultWebSiteLanguage = \"Visual C#\"\r\n    EndProjectSection\r\nEndProject\r\nGlobal\r\n    GlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n        Debug|Any CPU = Debug|Any CPU\r\n    EndGlobalSection\r\n    GlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n        {0E90CBE5-EA94-41CD-8A64-8D5418B0B5D8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n        {0E90CBE5-EA94-41CD-8A64-8D5418B0B5D8}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n    EndGlobalSection\r\n    GlobalSection(SolutionProperties) = preSolution\r\n        HideSolutionNode = FALSE\r\n    EndGlobalSection\r\nEndGlobal\r\n```",
  "state": "OPEN",
  "createdAt": "2016-05-17T17:41:46Z",
  "updatedAt": "2024-02-21T16:38:39Z",
  "closedAt": null,
  "author": {
    "login": "zhili1208"
  },
  "labels": [
    "Area: Solution (.sln)",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "[Our code](https://github.com/Microsoft/msbuild/blob/3fbea636cafb7c62f72604f2442cb147b50dc617/src/Build/Construction/Solution/SolutionFile.cs#L751) thinks that the second field in a project definition is always the relative path to a project, but in this example it's a URL instead. When you ask for `SolutionFile.RelativePath`, MSBuild is just returning that field.\r\n\r\nI tried to create a new ASP.NET project and the resultant solution doesn't look anything like this--it doesn't have a `preProject` section at all. How did this solution file come to be? Can Visual Studio itself open it successfully? If you open it in VS and save it, does it come out the same?",
        "createdAt": "2017-02-22T16:32:41Z",
        "updatedAt": "2017-02-23T20:47:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "this is a solution file of asp.net website project.\r\n\r\nIn dev14, \r\n1. Create a new website\r\n2. choose asp.net website template.\r\n3. open solution file.",
        "createdAt": "2017-02-22T18:32:15Z",
        "updatedAt": "2017-02-22T18:32:15Z",
        "author": {
          "login": "zhili1208"
        }
      },
      {
        "body": "Ah, I tried with a \"File -> New Project -> ASP.NET Web Application\" which is apparently distinct from a \"File -> New Web Site\".\r\n\r\nThat solution section is parsed into the `ProjectInSolution.AspNetConfigurations` `Hashtable`, but that's internal, so probably not particularly useful to you.\r\n\r\nI see no strong reason that couldn't be public. Though it would be unpleasant if NuGet (or another consumer of our API) had to understand that sometimes you should use a different field to get a path.\r\n\r\nThis is another case arising from the fact that MSBuild's solution parsing code was not really intended as a reusable component--it's basically just good enough to run a build.",
        "createdAt": "2017-02-23T20:51:37Z",
        "updatedAt": "2017-02-23T20:51:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I need to get the SlnRelativePath as well. Does anyone know a way to do it using the Microsoft.Build package?",
        "createdAt": "2018-10-31T00:53:12Z",
        "updatedAt": "2018-10-31T00:53:12Z",
        "author": {
          "login": "victorsebrito"
        }
      },
      {
        "body": "Maybe something like this would be ok? https://github.com/jbaig/msbuild/commit/4963b429c05acd6f1147d0cca1825866ed4ae496 \r\nIt makes the aspnetconfiguration properties public.  \r\nAnyone already consuming the API can still use as they currently do but allow others to pull in certain properties set in the AspNetConfigurations if desired.",
        "createdAt": "2019-09-03T16:06:49Z",
        "updatedAt": "2019-09-03T16:06:49Z",
        "author": {
          "login": "jbaig"
        }
      }
    ]
  }
}