{
  "number": 1167,
  "title": "Globbing APIs: reduce memory pressure by storing less data",
  "body": "- [ ] use a linked list to reduce GC events from growing the arraylist\n- [ ] only item elements whose condition evaluated to true and which are under item groups with conditions or under choose elements. Then use this small list to recreate the bigger list from the list of all item elements (provided by ProjectRootElement). If a project has no conditions (like the large Chromium project), then this list will be empty. This works under the assumption that most item elements are not conditioned, and their parents are not conditioned, which appears the case for VS template csprojes\n",
  "state": "CLOSED",
  "createdAt": "2016-10-06T00:32:52Z",
  "updatedAt": "2024-02-21T17:25:20Z",
  "closedAt": "2021-04-13T06:59:13Z",
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.10"
  },
  "comments": {
    "nodes": [
      {
        "body": "[Perf triage]\r\n@cdmihai, can you please help me understand this issue? Which ArrayList is problematic? \"Globbing APIs\" in the title doesn't refer to `namespace Microsoft.Build.Globbing`, does it?",
        "createdAt": "2021-04-12T13:16:47Z",
        "updatedAt": "2021-04-12T13:16:47Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "@ladipro \r\n\r\nWell, this is a very bad example of an ambiguous task :)\r\n\r\nI think it might refer to the `Project.GetAllGlobs` APIs, but I forget what it was about. It could be about [how the API stores its results](https://github.com/dotnet/msbuild/blob/9bcc06cbe19ae2482ab18eab90a82fd079b26897/src/Build/Definition/Project.cs#L2514) or about [how it computes the list of project item elements](https://github.com/dotnet/msbuild/blob/9bcc06cbe19ae2482ab18eab90a82fd079b26897/src/Build/Definition/Project.cs#L2666) it works off of which sometimes can trigger re-evaluations. Maybe best to just close the issue and let it resurface again in perf logs.",
        "createdAt": "2021-04-12T16:54:45Z",
        "updatedAt": "2021-04-12T16:54:45Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Thank you, closing the issue then.",
        "createdAt": "2021-04-13T06:59:13Z",
        "updatedAt": "2021-04-13T06:59:13Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}