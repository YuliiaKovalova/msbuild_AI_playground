{
  "number": 6926,
  "title": "Support for MSBuildGlob serialization round-tripping",
  "body": "Given an MSBuildGlob (and presumably its variant classes), I need to be able to serialize and deserialize it. I cannot today because a given instance does not expose properties that match any constructor.\r\n\r\nThe scenario is RPC: I would like to send MSBuildGlob objects as arguments over RPC for VS caching.\r\n\r\nThis could be mitigated by simply adding a property whose value is the originally parsed string, since if I can acquire that, the remote process can simply pass it to Parse again.\r\n\r\nNote that some globs are composite (e.g. `*.cs;*.vb;!notme.cs`) so however that is represented in msbuild glob classes needs to be reconstructible over RPC as well.",
  "state": "OPEN",
  "createdAt": "2021-10-08T14:45:42Z",
  "updatedAt": "2024-01-31T08:20:20Z",
  "closedAt": null,
  "author": {
    "login": "AArnott"
  },
  "labels": [
    "Partner request",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This sounds more directly like https://github.com/dotnet/msbuild/pull/6694. Would that work for you?",
        "createdAt": "2021-10-27T23:11:53Z",
        "updatedAt": "2021-10-27T23:11:53Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "No, @Forgind. I can't use the regex to recreate the MSBuildGlob object.",
        "createdAt": "2021-10-29T01:30:27Z",
        "updatedAt": "2021-10-29T01:30:27Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "@AArnott I think [this](https://github.com/dotnet/msbuild/pull/6694#issuecomment-931498821) was what he was referring to?",
        "createdAt": "2021-11-11T17:09:58Z",
        "updatedAt": "2021-11-11T17:09:58Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Copying it here, I guess you mean this comment:\r\n\r\n> The latest proposal is to expose the expanded glob as a list of strings that can be serialized or used to deserialize back to MSBuildGlob.\r\n\r\nI *do* want the expanded glob, but that's tracked by #6927.\r\n\r\nThe second part of the above comment (\"deserialize back to MSBuildGlob\") doesn't make any sense to me as one cannot deserialized a list of file paths into an MSBuildGlob object. I don't want or need that. I want to take an MSBuildGlob object, serialize its content (the patterns -- not the expanded product), then deserialize that data back into an `MSBuildGlob` object.",
        "createdAt": "2021-11-11T19:33:07Z",
        "updatedAt": "2021-11-11T19:33:07Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "@arkalyanms",
        "createdAt": "2021-12-02T17:32:55Z",
        "updatedAt": "2021-12-02T17:32:55Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The list of strings in the comment refers to the parts of the glob for deduping not the list of the files. \r\n\r\n>> I want to take an MSBuildGlob object, serialize its content (the patterns -- not the expanded product), then deserialize that data back into an MSBuildGlob object.\r\n\r\nThat sounds the same as #6694, but if you feel that draft is not solve the problem, we can abandon that PR (since CPS has a reconstructions from filespec that unblocks it) and use this as the primary to drive your requirement.",
        "createdAt": "2021-12-02T18:33:56Z",
        "updatedAt": "2021-12-02T18:33:56Z",
        "author": {
          "login": "arunchndr"
        }
      },
      {
        "body": "@arkalyanms, No, #6694 does not satisfy the requirement tracked by this issue. That merely exposes a regex, but a regex cannot be used to recreate an MSBuildGlob, and this issue is about serializing an MSBuildGlob such that it can be deserialized.",
        "createdAt": "2021-12-03T15:24:53Z",
        "updatedAt": "2021-12-03T15:24:53Z",
        "author": {
          "login": "AArnott"
        }
      },
      {
        "body": "Then #6694 is obsolete at this point. We can replace that with this issue. @Forgind fyi.\r\n\r\n@AArnott Perhaps this has been answered. But remind me, what do you intend to do with the glob post deserialization? \r\n\r\nPerhaps your use case falls outside the IMSBuildGlob contract? #6694 was only meant to cover this. The glob gets treated as a black box that answers matching questions around whether a file is covered by the glob, which is the project system scenario.",
        "createdAt": "2021-12-06T18:14:09Z",
        "updatedAt": "2021-12-06T18:14:09Z",
        "author": {
          "login": "arunchndr"
        }
      },
      {
        "body": "@arkalyanms  Once I can deserialize the glob (this issue), I intend to use it for #6927.",
        "createdAt": "2021-12-08T23:15:31Z",
        "updatedAt": "2021-12-08T23:15:31Z",
        "author": {
          "login": "AArnott"
        }
      }
    ]
  }
}