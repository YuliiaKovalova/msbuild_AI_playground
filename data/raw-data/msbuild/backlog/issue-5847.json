{
  "number": 5847,
  "title": "How to compare value to any values (multiple values/items)?",
  "body": "I have the values and keys. The values are pointing on keys.\r\n\r\n    <ItemGroup>\r\n        <Key Include=\"0\" />\r\n        <Key Include=\"3\" />\r\n    </ItemGroup>\r\n\r\n    <ItemGroup>\r\n        <Val Include=\"A0\" Key=\"0\" />\r\n        <Val Include=\"A1\" Key=\"0\" />\r\n        <Val Include=\"B\"  Key=\"1\" />\r\n        <Val Include=\"C\"  Key=\"2\" />\r\n        <Val Include=\"D0\" Key=\"3\" />\r\n        <Val Include=\"D1\" Key=\"3\" />\r\n    </ItemGroup>\r\n\r\nI need to filter values which are pointing on the any key in my list. But none of the following methods works ((\r\n\r\n    <Message Text=\"@(Val->WithMetadataValue( 'Key', %(Key.Identity) ))\" Importance=\"high\" />\r\n    <Message Text=\"@(Val)\" Condition=\"%(Val.Key) == %(Key.Identity)\" Importance=\"high\" />\r\n    <Message Text=\"@(Val)\" Condition=\"@(Key->AnyHaveMetadataValue( 'Identity', %(Val.Key) ) )\" Importance=\"high\" />\r\n\r\nIs it possible to do it?",
  "state": "OPEN",
  "createdAt": "2020-10-30T22:08:24Z",
  "updatedAt": "2024-01-31T08:22:48Z",
  "closedAt": null,
  "author": {
    "login": "Denis535"
  },
  "labels": [
    "question",
    "Area: Language",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "Why does the last line not work? `AnyHaveMetadataValue` looks like the right function for my case.",
        "createdAt": "2020-10-30T23:53:03Z",
        "updatedAt": "2020-11-03T21:34:51Z",
        "author": {
          "login": "Denis535"
        }
      },
      {
        "body": "Function can not accept `%(...)` syntax. So, you need a temporary property and target batching.\r\n\r\n    <Target Name=\"Tmp\" AfterTargets=\"AfterBuild\" Outputs=\"%(Key.Identity)\">\r\n        <PropertyGroup>\r\n            <Key>%(Key.Identity)</Key>\r\n        </PropertyGroup>\r\n        <Message Text=\"%(Key.Identity): @(Val->WithMetadataValue( 'Key', $(Key) ))\" Importance=\"high\" />\r\n    </Target>\r\n\r\n    <Target Name=\"Tmp2\" AfterTargets=\"AfterBuild\" Outputs=\"%(Val.Identity)\">\r\n        <PropertyGroup>\r\n            <Val_Key>%(Val.Key)</Val_Key>\r\n        </PropertyGroup>\r\n        <Message Text=\"%(Val.Identity): %(Val.Key)\" Condition=\"@(Key->AnyHaveMetadataValue( 'Identity', $(Val_Key) ))\" Importance=\"high\" />\r\n    </Target>\r\n\r\nIs there a better way?",
        "createdAt": "2020-10-31T15:03:50Z",
        "updatedAt": "2020-11-09T23:28:21Z",
        "author": {
          "login": "Denis535"
        }
      },
      {
        "body": "We need a function `WithAnyMetadataValue`.",
        "createdAt": "2020-11-10T00:17:53Z",
        "updatedAt": "2020-11-10T00:17:53Z",
        "author": {
          "login": "Denis535"
        }
      }
    ]
  }
}