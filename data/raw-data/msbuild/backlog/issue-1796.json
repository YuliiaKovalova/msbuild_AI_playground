{
  "number": 1796,
  "title": "MSBuild v15.1.545.13942 crashes when running CustomBuild (from Microsoft.CppCommon.targets)",
  "body": "Version: Microsoft (R) Build Engine version 15.1.545.13942\r\n\r\nI'm using CMake-generated vcxproj files to drive a Haskell build. The Haskell build is invoked via a `CustomBuild` item and executed by Microsoft.CommonCpp.targets. One of the lines output by that build process is\r\n\r\n      [5 of 6] Compiling Tests.Syntax     ( tests\\Tests\\Syntax.hs, S:\\src\\build-bond\\2017\\162\\x64\\compiler\\build\\gbc-tests\\gbc-tests-tmp\\Tests\\Syntax.o )\r\n\r\nThis line is cauing MSBuild to crash with a `System.IndexOutOfRangeException`. The top of the stack trace is below and [the full stack is attached](https://github.com/Microsoft/msbuild/files/818402/fullstack.txt).\r\n\r\nThe value of the `message` parameter to `Microsoft.Build.Utilities.Core.dll!Microsoft.Build.Shared.CanonicalError.Parse` during this crash is `tests\\Tests\\Syntax.hs:1:1: error:`.\r\n\r\nThe failure is occurring on [line 352](https://github.com/Microsoft/msbuild/blob/ae9ad2c1903980bc42d958debbaac971d988c3f9/src/Shared/CanonicalError.cs#L352), when it unconditionally indexed into an empty array.\r\n\r\nI have a proposed fix coded. (There's also a regression test in my [branch](https://github.com/chwarr/msbuild/tree/fix-canonicalerror-empty-text-crash) with the fix.) Is this something that you'd be amenable to merging? I've yet to validate whether this allows my CMake build to pass, but the unit test is now passing.\r\n\r\n```\r\ndiff --git a/src/Shared/CanonicalError.cs b/src/Shared/CanonicalError.cs\r\nindex a4ea694c..94d6ad9f 100644\r\n--- a/src/Shared/CanonicalError.cs\r\n+++ b/src/Shared/CanonicalError.cs\r\n@@ -349,7 +349,17 @@ namespace Microsoft.Build.Shared\r\n                 parsedMessage.column = ConvertToIntWithDefault(match.Groups[\"COLUMN\"].Value.Trim());\r\n                 parsedMessage.text = (match.Groups[\"TEXT\"].Value + messageOverflow).Trim();\r\n                 parsedMessage.origin = match.Groups[\"FILENAME\"].Value.Trim();\r\n-                parsedMessage.code = \"G\" + parsedMessage.text.Split(new char[] { '\\'' }, StringSplitOptions.RemoveEmptyEntries)[0].GetHashCode().ToString(\"X8\");\r\n+\r\n+                string[] explodedText = parsedMessage.text.Split(new char[] {'\\''}, StringSplitOptions.RemoveEmptyEntries);\r\n+                if (explodedText.Length > 1)\r\n+                {\r\n+                    parsedMessage.code = \"G\" + explodedText[0].GetHashCode().ToString(\"X8\");\r\n+                }\r\n+                else\r\n+                {\r\n+                    parsedMessage.code = \"G00000000\"; // Is this an OK code for this case?\r\n+                }\r\n+\r\n                 return parsedMessage;\r\n             }\r\n```\r\n\r\nStack trace:\r\n\r\n \tMicrosoft.Build.Utilities.Core.dll!Microsoft.Build.Shared.CanonicalError.Parse(string message) Line 451\tC#\r\n\tMicrosoft.Build.Utilities.Core.dll!Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(string lineOfText, Microsoft.Build.Framework.MessageImportance messageImportance) Line 1294\tC#\r\n \tMicrosoft.Build.Utilities.Core.dll!Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance) Line 1252\tC#\r\n \tMicrosoft.Build.Utilities.Core.dll!Microsoft.Build.Utilities.ToolTask.LogMessagesFromStandardErrorOrOutput(System.Collections.Queue dataQueue, System.Threading.ManualResetEvent dataAvailableSignal, Microsoft.Build.Framework.MessageImportance messageImportance, Microsoft.Build.Utilities.ToolTask.StandardOutputOrErrorQueueType queueType) Line 1218\tC#\r\n \tMicrosoft.Build.Utilities.Core.dll!Microsoft.Build.Utilities.ToolTask.HandleToolNotifications(System.Diagnostics.Process proc) Line 1034\tC#\r\n \tMicrosoft.Build.Utilities.Core.dll!Microsoft.Build.Utilities.ToolTask.ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) Line 879\tC#\r\n \tMicrosoft.Build.CppTasks.Common.dll!Microsoft.Build.CPPTasks.TrackedVCToolTask.TrackerExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) Line 1415\tC#\r\n \tMicrosoft.Build.CppTasks.Common.dll!Microsoft.Build.CPPTasks.CustomBuild.ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) Line 350\tC#",
  "state": "CLOSED",
  "createdAt": "2017-03-04T04:17:44Z",
  "updatedAt": "2024-02-21T17:21:09Z",
  "closedAt": "2017-03-15T21:59:48Z",
  "author": {
    "login": "chwarr"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Should this `if (explodedText.Length > 1)` be `if (explodedText.Length > 0)`",
        "createdAt": "2017-03-06T18:24:33Z",
        "updatedAt": "2017-03-06T18:24:33Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Doh. Yes, it should.",
        "createdAt": "2017-03-06T18:43:10Z",
        "updatedAt": "2017-03-06T18:43:10Z",
        "author": {
          "login": "chwarr"
        }
      },
      {
        "body": "It would be worth a PR",
        "createdAt": "2017-03-06T23:17:18Z",
        "updatedAt": "2017-03-06T23:17:18Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  }
}