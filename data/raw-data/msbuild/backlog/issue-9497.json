{
  "number": 9497,
  "title": "[Feature Request]: Support concatenating binlogs together",
  "body": "### Summary\n\nThe guidance we give users at https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Providing-Binary-Logs.md is good, but for VS users specifically it introduces some hurdles for us during analysis. The way VS creates the binlogs for a session results in many 'loose' binlogs, so it can be hard to identify the log that has the useful scenario in it. It would be great to have some way to view the combined logs easily, either through a tool that actually concats the binlogs together to be read as a single log, or a viewer-only enhancement to open multiple binlogs and allow querying/investigation across them in some way.\n\n### Background and Motivation\n\nTriaging VS feedback tickets, you hit this pretty often. \n\n### Proposed Feature\n\nThe simplest way would be to have a tool that can concat N logs into a single log, which then could be opened in the viewer. I'm unsure what UX impacts this might have on the viewer, however. For example, would the timeline view possibly stretch so far as to be unusable?\r\n\r\nAlternatively, the viewer could learn a new top-level node, under which each binlog session is a child node?\n\n### Alternative Designs\n\n_No response_",
  "state": "OPEN",
  "createdAt": "2023-12-05T16:42:41Z",
  "updatedAt": "2024-02-07T15:32:38Z",
  "closedAt": null,
  "author": {
    "login": "baronfel"
  },
  "labels": [
    "backlog",
    "Feature Request",
    "Area: Logging",
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "> a tool that can concat N logs into a single log\r\n\r\nCan that tool be just file concatenation, as in `cat A.binlog B.binlog > all.binlog` or `COPY /B A.binlog+B.binlog all.binlog`?  There is precedent for supporting this kind of concatenation, in `gunzip`.",
        "createdAt": "2023-12-06T10:27:04Z",
        "updatedAt": "2023-12-06T10:27:04Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}