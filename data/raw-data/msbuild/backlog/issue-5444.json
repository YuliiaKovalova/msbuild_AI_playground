{
  "number": 5444,
  "title": "Consider eliminating ProjectStringCache",
  "body": "`ProjectStringCache` is used to intern text and whitespace strings parsed from XML project files. It has a manual lifetime mechanism where ref-counted entries are associated with the XML document they came from and then bulk-removed when the last associated document is released.\r\n\r\nWe should:\r\n- Verify that the cache is still adding value, i.e. that System.Xml is not interning strings for us.\r\n- Check how many strings in this cache later make their way into `OpportunisticIntern`, i.e. the overlap between these two caches, and measure the performance impact of eliminating `ProjectStringCache` in favor of `OpportunisticIntern`.\r\n- Depending on the outcome of above investigations: Do nothing, or make the XML DOM use `OpportunisticIntern`, or remove XML string interning from MSBuild altogether.",
  "state": "CLOSED",
  "createdAt": "2020-06-18T13:21:12Z",
  "updatedAt": "2024-02-21T17:03:24Z",
  "closedAt": "2022-10-17T16:17:41Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "backlog",
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "AR-May"
      }
    ]
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "We have a custom tool that deals with .sln, using Microsoft.Build - just profiled our app, and 30% of the time is spent there - \r\n\r\n|Function Name|Total CPU \\[unit, %\\]|Self CPU \\[unit, %\\]|Module|\r\n|-|-|-|-|\r\n|\\| - Microsoft.Build.Construction.ProjectStringCache.Add\\(string, System.Xml.XmlDocument\\)|19568 \\(31.50%\\)|18448 \\(29.70%\\)|Microsoft.Build.dll|\r\n\r\nwondering if there is a way to disable it? This is from Visual Studio 2019 Professional, 16.11.1.47101\r\n",
        "createdAt": "2021-10-20T20:30:43Z",
        "updatedAt": "2021-10-20T20:30:43Z",
        "author": {
          "login": "malkia"
        }
      },
      {
        "body": "@malkia I'm afraid there is currently no switch to disable the cache. If it's acceptable for you to use a custom build of MSBuild, it is a matter of changing four source lines.\r\n\r\n```C#\r\nstring interned = StringCache.Add(text, this);\r\n```\r\n\r\nshould simply become\r\n\r\n```C#\r\nstring interned = text;\r\n```\r\n\r\n(In one case the name of the variable is `textNode` instead of `interned`.)",
        "createdAt": "2021-10-21T14:35:12Z",
        "updatedAt": "2021-10-21T14:35:12Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}