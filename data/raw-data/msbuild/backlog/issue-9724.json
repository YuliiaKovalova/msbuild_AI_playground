{
  "number": 9724,
  "title": "[Bug]: WriteCodeFragment - assembly attribute doesn't work for F#",
  "body": "### Issue Description\n\nNot sure if that's by-design and the doc is only missing some sections or if that's a bug.\r\n\r\nAs part of maintenance on test-templates, I am trying to enable parallelize assembly attribute by default using the `<AssemblyAttribute.../>` syntax in the project. I have been able to successfully provide the implementation for C# and VB.NET but F# is failing with `Unable to parse '1_IsLiteral' as an index`.\n\n### Steps to Reproduce\n\n- Create a new F# MSTest project: `dotnet new mstest --language F#`\r\n\r\n- Edit the fsproj by adding:\r\n```xml\r\n<AssemblyAttribute Include=\"Microsoft.VisualStudio.TestTools.UnitTesting.Parallelize\">\r\n  <_Parameter1>Workers = 0</_Parameter1>\r\n  <_Parameter1_IsLiteral>true</_Parameter1_IsLiteral>\r\n  <_Parameter2>Scope = Microsoft.VisualStudio.TestTools.UnitTesting.ExecutionScope.MethodLevel</_Parameter2>\r\n  <_Parameter2_IsLiteral>true</_Parameter2_IsLiteral>\r\n</AssemblyAttribute>\r\n```\r\n\r\n- Build: `dotnet build`\r\n\r\nError:\r\n\r\n```text\r\n<redacted>\\FSharp\\Microsoft.FSharp.Overrides.NetSdk.targets(30,5): error : Unable to parse '1_IsLiteral' as an index [<redacted>\\\r\nproject.fsproj]\r\n```\n\n### Expected Behavior\n\nFeature is supported or doc and error is improved to specify this is not supported.\n\n### Actual Behavior\n\n`<AssemblyAttribute.../>` syntax in the project. I have been able to successfully provide the implementation for C# and VB.NET but F# is failing with `Unable to parse '1_IsLiteral' as an index`.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-02-09T08:51:11Z",
  "updatedAt": "2024-02-09T16:41:48Z",
  "closedAt": "2024-02-09T16:41:47Z",
  "author": {
    "login": "Evangelink"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "F# has its own WriteCodeFragment task implementation that does not support the \"_TypeName\" and \"_IsLiteral\" suffixes. <https://github.com/dotnet/fsharp/blob/v12.8.0/src/FSharp.Build/WriteCodeFragment.fs>",
        "createdAt": "2024-02-09T15:44:11Z",
        "updatedAt": "2024-02-09T15:44:11Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Also noted in <https://github.com/dotnet/msbuild/pull/6285#issuecomment-922394241>.\r\n\r\nI think it would be best to document at [WriteCodeFragment task](https://learn.microsoft.com/en-us/visualstudio/msbuild/writecodefragment-task?view=vs-2022) that \"_TypeName\" and \"_IsLiteral\" are only implemented for CodeDom supported languages, i.e. C# and VB.  If the F# implementation of WriteCodeFragment is ever changed to support these too, then the documentation can be updated at that time, and it can state the version of F# in which this support is added.",
        "createdAt": "2024-02-09T15:50:57Z",
        "updatedAt": "2024-02-09T15:52:28Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Thanks for the pointers @KalleOlaviNiemitalo! I am closing this issue then.",
        "createdAt": "2024-02-09T16:41:47Z",
        "updatedAt": "2024-02-09T16:41:47Z",
        "author": {
          "login": "Evangelink"
        }
      }
    ]
  }
}