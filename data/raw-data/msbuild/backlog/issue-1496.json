{
  "number": 1496,
  "title": "Nuget dependencies content is not been added for dotnet core projects - VS2017",
  "body": "When importing a package that adds content to the project it completes without displaying any errors but doesn't add the files.\r\n\r\nSteps to reproduce:\r\n1. Create a project with any of the templates for dotnetcore (Console/Class Library/Web)\r\n2. Add a nuget package with content, ex: _jQuery_ with ` Install-Package jQuery`.\r\n\r\nThe reference is added correctly but the content is no added to the project.\r\n\r\nNote: It works correctly with the classic projects.\r\n",
  "state": "CLOSED",
  "createdAt": "2016-12-19T20:56:49Z",
  "updatedAt": "2024-02-21T17:23:15Z",
  "closedAt": "2016-12-20T20:54:03Z",
  "author": {
    "login": "roysanchez"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@nguerrera or @emgarten should know who would own this.",
        "createdAt": "2016-12-19T21:01:56Z",
        "updatedAt": "2016-12-19T21:01:56Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@natidea ",
        "createdAt": "2016-12-19T21:15:14Z",
        "updatedAt": "2016-12-19T21:15:14Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "@roysanchez  Dotnet core does not support the ``Content/`` folder used in JQuery, this was previously installed directly into the project using Visual Studio and no longer works when restoring packages cross platform from the command line.  Packages must move to using ``ContentFiles/`` which is supported for both project.json and PackageReference projects.",
        "createdAt": "2016-12-19T21:35:06Z",
        "updatedAt": "2016-12-19T21:35:06Z",
        "author": {
          "login": "emgarten"
        }
      },
      {
        "body": "@emgarten I used `jQuery` only as an example, I got this error trying to add an internal dependency to a new project and not seeing the files.\r\n\r\nIs there a specific way that it needs to be handled, I tried the following configurations and none seem to work: [gist of the csproj and generated nuspec](https://gist.github.com/roysanchez/a3b8dd9b58eee26399be016520165f2e)\r\n\r\n",
        "createdAt": "2016-12-19T22:03:47Z",
        "updatedAt": "2016-12-19T22:03:47Z",
        "author": {
          "login": "roysanchez"
        }
      },
      {
        "body": "ContentFiles support was recently added to NuGet but it isn't in the current dotnet CLI release. Once it is you will see items under contentFiles in the generates props file for the project.\r\n",
        "createdAt": "2016-12-19T22:08:00Z",
        "updatedAt": "2016-12-19T22:08:00Z",
        "author": {
          "login": "emgarten"
        }
      },
      {
        "body": "@emgarten Nice, should I close this or wait for the release?",
        "createdAt": "2016-12-19T22:15:28Z",
        "updatedAt": "2016-12-19T22:15:28Z",
        "author": {
          "login": "roysanchez"
        }
      },
      {
        "body": "@roysanchez I think this can be closed, and then watch for it in the next release. thanks!",
        "createdAt": "2016-12-19T22:38:53Z",
        "updatedAt": "2016-12-19T22:38:53Z",
        "author": {
          "login": "emgarten"
        }
      },
      {
        "body": "@roysanchez @emgarten Is this issue resolved? I'm including a nuget on my dotnet core project using VS2017 and I see the contentFiles inside the nuget, but I can't manage to copy them into my local project.",
        "createdAt": "2017-03-14T23:22:58Z",
        "updatedAt": "2017-03-14T23:22:58Z",
        "author": {
          "login": "samcoga"
        }
      }
    ]
  }
}