{
  "number": 7921,
  "title": "Specify all source-built dependencies and ensure they are regularly updated",
  "body": "### Overview\r\n\r\nSource-build works today by building a repository, gathering the versions of the outputs, and creating a property file with those versions. This property file is then fed to downstream repositories, which import it after their `eng/Versions.props`. The resulting behavior is that the downstream repo overrides all dependency versions specified in `eng/Versions.props` with the versions built from source. This behavior is **not** the same as the Maestro dependency-flow based approach. Maestro only updates properties for dependencies that are specified in `eng/Version.Details.xml`.\r\n\r\nThis causes the following difference: Say that dotnet/aspnetcore has a `Microsoft.Net.Compilers.Toolset` dependency. It codes a property for that dependency's version in `eng/Versions.props` as `MicrosoftNetCompilersToolsetVersion`, with an older version of the package.\r\n- When building via source-build, roslyn builds first, and aspnetcore will pick up the new version of Microsoft.Net.Compilers.Toolset, even though it doesn't want to.\r\n- When building officially, the non-latest version will be used.\r\n\r\nThis difference tends to cause build breaks in source-build. The version bump may be significant and require repo reaction. This is not ideal and not sustainable.\r\n\r\nOne option would be to only override those versions that are specified in `eng/Version.Details.xml`. This would more closely align the source-build and current official builds. The huge downside is that this will cause an explosion of ref packs. And in some cases, we would be building against old versions but actually executing against newer ones. Non-ideal.\r\n\r\nIn summary, the goals are:\r\n- Reduce source-build build breaks\r\n- Avoid a large increase in ref packs.\r\n- Ensure that it is possible to freeze on old versions of a specific component if absolutely necessary\r\n\r\n### Work Required\r\n\r\n**This work is dependent on https://github.com/dotnet/source-build/issues/2982**.\r\n\r\nIn this repo, do the following\r\n- [ ] Obtain a report of un-specified dependencies in this repo. This issue will be updated with instructions on how to do so after https://github.com/dotnet/source-build/issues/2982 is complete.\r\n- [ ] Specify all dependencies classified as missing in the report in the `eng/Version.Details.xml` file.\r\n- [ ] Upgrade dependencies regularly via Maestro dependency flow mechanisms, or pin dependencies that should stay the same, with justification.",
  "state": "CLOSED",
  "createdAt": "2022-08-29T16:36:46Z",
  "updatedAt": "2024-02-21T17:00:10Z",
  "closedAt": "2023-06-15T20:54:14Z",
  "author": {
    "login": "mmitche"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": ".NET 8.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "\r\nClosing as completed as part of the source-build sustainability (PVP and prebuilt detection) work\r\n\r\n",
        "createdAt": "2023-06-15T20:54:14Z",
        "updatedAt": "2023-06-15T20:54:14Z",
        "author": {
          "login": "mmitche"
        }
      }
    ]
  }
}