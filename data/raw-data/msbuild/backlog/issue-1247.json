{
  "number": 1247,
  "title": "GenerateResources does not support linked resources on .NET Core",
  "body": "See discussion in https://github.com/Microsoft/msbuild/issues/1197#issuecomment-254564243 and dotnet/corefx#8200.\n\nWe don't have `ResXResourceReader` on .NET Core, so we can't crack a `.resx` file to find its linked resources. But that's ok because a .NET Core application couldn't consume them even if they were embedded.\n\nAt the moment, we will ignore linked resources when running in .NET Core.\n",
  "state": "CLOSED",
  "createdAt": "2016-10-25T21:25:24Z",
  "updatedAt": "2024-02-21T17:24:56Z",
  "closedAt": "2019-06-25T19:56:12Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    ".NET Core",
    "Area: Task: GenerateResource",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "#4090 will improve this greatly for linked text files, but I'm leaving this open until it behaves correctly for incremental builds -- #1197 is long closed by #1251, but that doesn't consider linked resources.",
        "createdAt": "2019-03-13T14:48:17Z",
        "updatedAt": "2019-03-13T14:48:17Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Having strange behavior, when running locally with with .net core 2.2 on local machine, it works fine. while hosted in azure I get \r\nRegistrationEmail.html;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8  \r\n\r\nAs I can see it depends on the way it is built.\r\nAzure version is built with Azure DevOps CI tools, while local is VS \r\nAnd version published from VS works fine in Azure, while CI version fails :( ",
        "createdAt": "2019-03-31T21:33:14Z",
        "updatedAt": "2019-03-31T21:53:50Z",
        "author": {
          "login": "kirakosyan"
        }
      },
      {
        "body": "@kirakosyan You're hitting the difference between .NET Core MSBuild (`dotnet build`, evidently used by your Azure Pipelines CI) and full framework MSBuild (`msbuild.exe` and Visual Studio driven builds). Can you change your Azure DevOps build definition to use the \"MSBuild\" or \"Visual Studio Build\" tasks instead of \"dotnet build\"?",
        "createdAt": "2019-04-01T13:59:22Z",
        "updatedAt": "2019-04-01T13:59:22Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}