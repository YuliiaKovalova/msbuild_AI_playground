{
  "number": 9584,
  "title": "manage output path by using project properties",
  "body": "### Issue Description\n\nI want to manage outputpath by using project property. so I definition a property in csproj file, like this:\r\n```xml\r\n<MyProperty>true</MyProperty>\r\n```\r\n\r\nand I add a condition PropertyGroup in `Directory.Build.props` like this:\r\n```xml\r\n  <PropertyGroup Condition=\"'$(MyProperty)' == 'true'\">\r\n    <OutputPath>.\\Bin\\CustomeDirectory</OutputPath>\r\n  </PropertyGroup>\r\n```\r\n\r\nbut after I finished these operations, the dll file didn't output to the location that I wanted.\n\n### Steps to Reproduce\n\n1. add a custom property in csproj file, like `<MyProperty>true</MyProperty>`\r\n2. use the property in `Directory.Build.props` file, like this:\r\n```xml\r\n  <PropertyGroup Condition=\"'$(MyProperty)' == 'true'\">\r\n    <OutputPath>.\\Bin\\CustomeDirectory</OutputPath>\r\n  </PropertyGroup>\r\n```\n\n### Expected Behavior\n\nthe dll file should output to the `.\\Bin\\CustomDirectory` \n\n### Actual Behavior\n\nthe dll file output to the project default directory \n\n### Ask us questions\n\nCan I use the property in props file? If I can, how to make it work correctly?",
  "state": "CLOSED",
  "createdAt": "2024-01-03T02:05:49Z",
  "updatedAt": "2024-01-05T15:38:04Z",
  "closedAt": "2024-01-05T07:42:20Z",
  "author": {
    "login": "rainbowechoes"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is an ordering issue - when MSBuild builds a project it first _evaluates_ that project, and evaluation ends up firing in this order:\r\n\r\n* .NET SDK Props\r\n* Directory.Build.props\r\n* project file content\r\n* .NET SDK Targets\r\n* NuGet package props/targets\r\n* Directory.Build.targets\r\n\r\n(roughly, I've omitted some details).\r\n\r\nThis means that anything you set in the project _cannot_ influence the way that Directory.Build.props is evaluated. But even if it could, setting properties like OutputPath in the Project is not a good idea - by the time the project is evaluated several other .props files have been evaluated by the .NET SDK that depend on the value of OutputPath.",
        "createdAt": "2024-01-03T02:47:54Z",
        "updatedAt": "2024-01-03T02:47:54Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "Thank you for your reply, baronfel.\r\n\r\nBased on your explanation, does it mean that I can't use the properties defined in the csproj file within the props file? However, I've tried combining this property condition with Message Text, and the message in Text was successfully output during project build. This is quite strange.\r\n\r\nAdditionally, if I want to control the location of the Output path by implementing a property, what would be the recommended approach?",
        "createdAt": "2024-01-03T05:50:25Z",
        "updatedAt": "2024-01-03T05:50:25Z",
        "author": {
          "login": "rainbowechoes"
        }
      },
      {
        "body": "That's correct - you can't use properties in the `Directory.Build.props` file that are defined in the project file. The `Directory.Build.props` is evaluated early before the project file content. Properties that have their initial definition in the project file will be undefined when the `Directory.Build.props` is evaluated.\r\n\r\nThe `SDK.props` imports the `Directory.Build.props` (if one exists) and most of the content of the `SDK.props` is after the `Directory.Build.props` import. The point being that you can change the value of `OutputPath` in the `Directory.Build.props`.\r\n\r\nIt's common to chain a set of `Directory.Build.props` (and `Directory.Build.targets`) files. See \"[Use case: multi-level merging](https://learn.microsoft.com/en-us/visualstudio/msbuild/customize-by-directory?view=vs-2022#use-case-multi-level-merging)\".\r\n\r\nIn the project folder as a sibling of the .csproj file, you could add a `Directory.Build.props` file like:\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup>\r\n    <MyProperty>true</MyProperty>\r\n  </PropertyGroup>\r\n  <Import Project=\"$([MSBuild]::GetPathOfFileAbove('$(MSBuildThisFile)', '$(MSBuildThisFileDirectory)../'))\" />\r\n</Project>\r\n```\r\n\r\nHigher in the directory tree where it will be shared across projects, you could have another `Directory.Build.props` file like:\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup Condition=\"'$(MyProperty)' == 'true'\">\r\n    <OutputPath>.\\Bin\\CustomeDirectory</OutputPath>\r\n  </PropertyGroup>\r\n</Project>\r\n```",
        "createdAt": "2024-01-05T03:42:31Z",
        "updatedAt": "2024-01-05T03:42:31Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "> you can't use properties in the Directory.Build.props file that are defined in the project file\n\nYou can't use those properties in _PropertyGroup_ in the Directory.Build.props file, but you can use them in _ItemGroup_ or _Target_ in that file, as those are evaluated later \u2014 see [Property and item evaluation order](https://learn.microsoft.com/en-us/visualstudio/msbuild/comparing-properties-and-items?view=vs-2022#property-and-item-evaluation-order).\n",
        "createdAt": "2024-01-05T06:11:48Z",
        "updatedAt": "2024-01-05T06:11:48Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Understant it. Thank you all! Thanks for your patience and help.",
        "createdAt": "2024-01-05T07:42:16Z",
        "updatedAt": "2024-01-05T07:42:16Z",
        "author": {
          "login": "rainbowechoes"
        }
      },
      {
        "body": "> > you can't use properties in the Directory.Build.props file that are defined in the project file\r\n> \r\n> You can't use those properties in _PropertyGroup_ in the Directory.Build.props file, but you can use them in _ItemGroup_ or _Target_ in that file, as those are evaluated later \u2014 see [Property and item evaluation order](https://learn.microsoft.com/en-us/visualstudio/msbuild/comparing-properties-and-items?view=vs-2022#property-and-item-evaluation-order).\r\n\r\nI was answering in the context of the issue to be solved -- managing the `OutputPath` property -- but I didn't make that clear so it's good to note that my statement is not the general case.\r\n\r\nThe 'top level' content of the Project is in the evaluation phase. Targets are in the execution phase. As noted, \r\n\r\n> ... setting properties like OutputPath in the Project is not a good idea ...\r\n\r\nJust as setting `OutputPath` in the project is problematic, so is setting `OutputPath` in a target.",
        "createdAt": "2024-01-05T15:37:23Z",
        "updatedAt": "2024-01-05T15:38:04Z",
        "author": {
          "login": "jrdodds"
        }
      }
    ]
  }
}