{
  "number": 1899,
  "title": "Specifying multiple targets in command line does not work as expected.",
  "body": "**MSBuild version:**\r\n```\r\nMicrosoft (R) Build Engine version 15.1.548.43366\r\n```\r\n\r\n**.NET Core Host version:**\r\n```\r\nMicrosoft .NET Core Shared Framework Host\r\nVersion  : 1.1.0\r\nBuild    : 928f77c4bc3f49d892459992fb6e1d5542cb5e86\r\n```\r\n\r\nFollowing project is using `SuppressXunitContent` property to control whether the 'build' asset of `xunit.runner.visualstudio` package will be excluded from build or not. This asset copies some xunit dlls to output directory:\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net452</TargetFramework>\r\n  </PropertyGroup>\r\n  <!--\r\n  By default xunit.runner.visualstudio package will copy test adapter\r\n  to output directory via Build asset.\r\n  Use: dotnet msbuild \"/t:Restore;Rebuild\" /p:SuppressXunitContent=False\r\n  -->\r\n  <ItemGroup Condition=\"'$(SuppressXunitContent)'=='False'\">\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.2.0\" />\r\n  </ItemGroup>\r\n  <!--\r\n  This will ignore Build asset from xunit.runner.visualstudio nuget package.\r\n  As a result no xunit files will be copied to output directory.\r\n  Use: dotnet msbuild \"/t:Restore;Rebuild\" /p:SuppressXunitContent=True\r\n  -->\r\n  <ItemGroup Condition=\"'$(SuppressXunitContent)'=='True'\">\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.2.0\" ExcludeAssets=\"Build\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n**Steps to reproduce:**\r\n1. In a fresh project directory run `dotnet msbuild \"/t:Restore;Rebuild\" /p:SuppressXunitContent=False`.\r\n**Expected behavior:** xunit dll files are copied to output directory.\r\n**Actual behavior:** :exclamation:no dll files are copied.\r\n2. `dotnet msbuild \"/t:Rebuild\" /p:SuppressXunitContent=False`.\r\n**Expected behavior:** xunit dll files are copied to output directory.\r\n**Actual behavior:** as expected.\r\n3. Run `dotnet msbuild \"/t:Restore;Rebuild\" /p:SuppressXunitContent=True` in a project directory.\r\n**Expected behavior:** xunit dll files were removed from output directory.\r\n**Actual behavior:** :exclamation:dll files are still in the output directory.\r\n4. `dotnet msbuild \"/t:Rebuild\" /p:SuppressXunitContent=True`.\r\n**Expected behavior:** xunit dll files are removed from output directory.\r\n**Actual behavior:** as expected.\r\n\r\n*The problem occurs when both targets are specified in one command. Moving them to separate `dotnet msbuild` commands works as expected.*\r\n\r\n5. Delete `out` and `bin` directories then run `dotnet msbuild \"/t:Restore\" /p:SuppressXunitContent=False` followed by `dotnet msbuild \"/t:Rebuild\" /p:SuppressXunitContent=False`\r\n**Expected behavior:** xunit dll files are copied to output directory.\r\n**Actual behavior:** as expected.\r\n6. Run `dotnet msbuild \"/t:Restore\" /p:SuppressXunitContent=True` followed by `dotnet msbuild \"/t:Rebuild\" /p:SuppressXunitContent=True`\r\n**Expected behavior:** xunit dll files are removed from output directory.\r\n**Actual behavior:** as expected.",
  "state": "CLOSED",
  "createdAt": "2017-03-22T21:42:56Z",
  "updatedAt": "2024-02-21T17:20:26Z",
  "closedAt": "2017-03-22T22:27:47Z",
  "author": {
    "login": "hubuk"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "If you're only seeing this with the `Rebuild` target, it's because of #1065, fixed by #1665 for a future update release. Separating the invocations is the best workaround for now.",
        "createdAt": "2017-03-22T22:27:47Z",
        "updatedAt": "2017-03-22T22:27:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Also and totally unrelatedly: personally, I'd replace\r\n\r\n```xml\r\n  <!--\r\n  By default xunit.runner.visualstudio package will copy test adapter\r\n  to output directory via Build asset.\r\n  Use: dotnet msbuild \"/t:Restore;Rebuild\" /p:SuppressXunitContent=False\r\n  -->\r\n  <ItemGroup Condition=\"'$(SuppressXunitContent)'=='False'\">\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.2.0\" />\r\n  </ItemGroup>\r\n  <!--\r\n  This will ignore Build asset from xunit.runner.visualstudio nuget package.\r\n  As a result no xunit files will be copied to output directory.\r\n  Use: dotnet msbuild \"/t:Restore;Rebuild\" /p:SuppressXunitContent=True\r\n  -->\r\n  <ItemGroup Condition=\"'$(SuppressXunitContent)'=='True'\">\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.2.0\" ExcludeAssets=\"Build\" />\r\n  </ItemGroup>\r\n```\r\n\r\nwith the equivalent-but-much-shorter\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.2.0\">\r\n      <!-- Avoid copying xunit files to the output directory when called with\r\n           dotnet msbuild \"/t:Restore;Rebuild\" /p:SuppressXunitContent=True -->\r\n      <ExcludeAssets Condition=\"'$(SuppressXunitContent)'=='True'\">Build</ExcludeAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n```",
        "createdAt": "2017-03-22T22:34:53Z",
        "updatedAt": "2017-03-22T22:34:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Thanks for the hint. Making `ExcludeAssets` an element simplifies a lot.\r\nAnd regarding your previous comment:\r\n\r\n> If you're only seeing this with the Rebuild target, it's because of #1065, fixed by #1665 for a future update release.\r\n\r\nI have checked **Build** i.e. `Restore;Build`. It does not work either. Is this the same problem already addressed by #1665?",
        "createdAt": "2017-03-28T21:53:09Z",
        "updatedAt": "2017-03-28T21:53:09Z",
        "author": {
          "login": "hubuk"
        }
      }
    ]
  }
}