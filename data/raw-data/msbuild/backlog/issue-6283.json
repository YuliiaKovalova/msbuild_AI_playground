{
  "number": 6283,
  "title": "MSBuildWorkspace: Unable to build hello world .netstandard2.0 class library anymore",
  "body": "### Issue Description\r\nUsing `MSBuild.Locator`, `Workspaces.MSBuild` and the Roslyn infrastructure I'm unable to compile an hello world netstandard2.0 class library. The same library compile just fine when targeting .Net framework 4.5.2. I noticed the issue after I installed Visual Studio 16.8. Some releases before the same scenario was working.\r\n\r\n### Steps to Reproduce\r\n1) Unpack the following test project:\r\n[TestMSBuildWorkspaceCompilation.zip](https://github.com/dotnet/msbuild/files/6173725/TestMSBuildWorkspaceCompilation.zip)\r\n\r\n2) Open TestMSBuildWorkspaceCompilation.sln;\r\n3) Compile and run TestMSBuildWorkspaceCompilation project. When trying to compile the netstandard2.0 project an exception should trigger and compilation errors are printed. More explanations are in the code there.\r\n\r\n### Expected Behavior\r\nNo compilation errors should the issued when compiling the project targeting netstandard2.0.\r\n\r\n### Actual Behavior\r\nA bunch of errors are printed, as the build system is unable to load the netstandard2.0 base library when compiling the project.\r\n\r\n```\r\nTestClassLibrary\\obj\\Debug\\netstandard2.0\\.NETStandard,Version=v2.0.AssemblyAttributes.cs[82..88)), CS0400: The type or namespace name 'System' could not be found in the global namespace (are you missing an assembly reference?)\r\nTestMSBuildWorkspaceCompilation\\TestClassLibrary\\obj\\Debug\\netstandard2.0\\TestClassLibrary.AssemblyInfo.cs[421..427)), CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\r\nTestMSBuildWorkspaceCompilation\\TestClassLibrary\\obj\\Debug\\netstandard2.0\\TestClassLibrary.AssemblyInfo.cs[497..503)), CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\r\n[...]\r\n```\r\n\r\n### Analysis\r\n I'm currently using VS 16.9.2 but the same scenario was working some releases before 16.8.\r\n\r\n### Versions & Configurations\r\nmsbuild 16.9.0.11203\r\nVisualStudio 16.9.2\r\n .NET SDK 5.0.201\r\n",
  "state": "CLOSED",
  "createdAt": "2021-03-19T20:02:24Z",
  "updatedAt": "2024-02-21T14:14:15Z",
  "closedAt": "2021-04-02T16:14:31Z",
  "author": {
    "login": "ceztko"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Any confirm on reproduction of this?",
        "createdAt": "2021-03-30T07:11:54Z",
        "updatedAt": "2021-03-30T07:11:54Z",
        "author": {
          "login": "ceztko"
        }
      },
      {
        "body": "This issue seems to be more related to roslyn infrastructure (tracking issue https://github.com/dotnet/roslyn/issues/52293). Feel free to close anytime if you're already sure it's not pertinent to msbuild, or I will do it myself later.",
        "createdAt": "2021-04-02T09:24:26Z",
        "updatedAt": "2021-04-02T09:24:26Z",
        "author": {
          "login": "ceztko"
        }
      },
      {
        "body": "Sorry I was a little slow in getting to this, but I agree with your analysis\u2014the GetCompilationAsync call is what's finding the errors, and MSBuild doesn't have anything to do with that. Roslyn sounds like a likely candidate.",
        "createdAt": "2021-04-02T16:14:31Z",
        "updatedAt": "2021-04-02T16:14:31Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}