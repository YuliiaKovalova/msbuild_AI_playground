{
  "number": 8004,
  "title": "ProjectCollection.LoadProject fails to load net6.0 csproj with \"The SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator' specified could not be found.\"",
  "body": "### Issue Description\r\nDuring the build of our production application we use the Microsoft.Build APIs to read csproj configuration and evaluate the nuget references we have. We also have a test project that checks this functionality and it's this that's failing and I have provide steps to reproduce.\r\n\r\nWhen running the test with `dotnet test` the call to ProjectCollection.LoadProject raises the following exception:\r\n\r\n```\r\n  Error Message:\r\n   Microsoft.Build.Exceptions.InvalidProjectFileException : The SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator' specified could not be found.  C:\\Program Files\\dotnet\\sdk\\6.0.401\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.props\r\n  Stack Trace:\r\n     at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate()\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext, IDirectoryCacheFactory directoryCacheFactory)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, String toolsVersion)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName)\r\n   at BuildTest.Tests.Test1() in C:\\temp\\BuildTest\\UnitTest1.cs:line 18\r\n```\r\n\r\nWhen run from Visual Studio the error is different:\r\n```\r\n    Microsoft.Build.Exceptions.InvalidProjectFileException : The SDK 'Microsoft.NET.Sdk' specified could not be found.  C:\\temp\\BuildTest\\BuildTest.csproj\r\n```\r\n\r\n### Steps to Reproduce\r\nI've attached the minimal app but this was created by:\r\n* `dotnet new nunit`\r\n* `dotnet add package Microsoft.Build`\r\n* `dotnet add package Microsoft.Build.Utilities.Core`\r\n* Change the UnitTest1.cs test method to (watch out for the absolute path which seems to be required when running this as net48):\r\n```c#\r\n    [Test]\r\n    public void Test1()\r\n    {\r\n        var projectCollection = new ProjectCollection();\r\n        projectCollection.LoadProject(@\"C:\\temp\\BuildTest\\BuildTest.csproj\");\r\n        Assert.Pass();\r\n    }\r\n```\r\n* Run the tests with `dotnet test` and observe the error regarding WorkloadAutoImportPropsLocator as shown above.\r\n* If TargetFramework is swapped to net48 then the test is green.\r\n\r\nAnd here's my sample app: [BuildTest.zip](https://github.com/dotnet/msbuild/files/9647818/BuildTest.zip)\r\n\r\n### Expected Behavior\r\nThe call to `ProjectCollection.LoadProject` should work for net6.0 as it does for net48.\r\n\r\n### Versions & Configurations\r\n```\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise>msbuild -version\r\nMSBuild version 17.3.1+2badb37d1 for .NET Framework\r\n17.3.1.41501                                                               \r\n```\r\n\r\nAnd the output from `dotnet --info`:\r\n```\r\ndotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.401\r\n Commit:    0906eae6f8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19044\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.401\\\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nHost:\r\n  Version:      6.0.9\r\n  Architecture: x64\r\n  Commit:       163a63591c\r\n\r\n.NET SDKs installed:\r\n  3.1.422 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.403 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.408 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.410 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.202 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.203 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.301 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.302 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.303 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.24 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.24 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.24 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.29 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet-download\r\n\r\nLearn about .NET Runtimes and SDKs:\r\n  https://aka.ms/dotnet/runtimes-sdk-info\r\n```",
  "state": "CLOSED",
  "createdAt": "2022-09-26T15:57:07Z",
  "updatedAt": "2022-10-11T13:46:35Z",
  "closedAt": "2022-10-11T07:05:42Z",
  "author": {
    "login": "philiphendry"
  },
  "labels": [
    "bug",
    "needs-triage",
    "author-responded"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "In addition to the above, if I put the same `ProjectCollection.LoadProject()` code into a `dotnet new console` created application then when I run the exe in that scenario the exception is the following instead (which happens to be the same error I would receive when running the test above in Visual Studio':\r\n\r\n```\r\nUnhandled exception. Microsoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.NET.Sdk' specified could not be found.  C:\\temp\\BuildTest\\BuildTest.csproj\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate()\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext, IDirectoryCacheFactory directoryCacheFactory)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, String toolsVersion)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName)\r\n   at Program.<Main>$(String[] args) in C:\\temp\\BuildTest\\BuildTestConsole\\Program.cs:line 5\r\n```",
        "createdAt": "2022-09-27T07:27:15Z",
        "updatedAt": "2022-09-27T07:27:15Z",
        "author": {
          "login": "philiphendry"
        }
      },
      {
        "body": "Team Triage: Are you using [MSBuildLocator](https://docs.microsoft.com/visualstudio/msbuild/updating-an-existing-application?view=vs-2019#use-microsoftbuildlocator)?",
        "createdAt": "2022-09-29T16:24:01Z",
        "updatedAt": "2022-09-29T16:24:01Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos The test app attached above demonstrates what we're using and MSBuildLocator isn't included. For what it's worth I tried it with the MSBuildLocator in the console app example so the csproj was this (using package version taken from [an example](https://github.com/microsoft/MSBuildLocator/commit/b746e75d4ec1e29e31c6e9f112a2ff3217044a78)):\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net48</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Using Remove=\"System.Net.Http\" />\r\n    <!-- <PackageReference Include=\"Microsoft.Build\" Version=\"17.3.1\" ExcludeAssets=\"runtime\" />\r\n    <PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"17.3.1\" ExcludeAssets=\"runtime\" /> -->\r\n    <PackageReference Include=\"Microsoft.Build\" Version=\"15.1.548\" ExcludeAssets=\"runtime\" />\r\n    <PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"15.1.548\" ExcludeAssets=\"runtime\" />\r\n    <PackageReference Include=\"Microsoft.Build.Locator\" Version=\"1.0.7-preview-ge60d679b53\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nand program.cs was this:\r\n```c#\r\nConsole.WriteLine(\"Hello, World!\");\r\n\r\nMicrosoft.Build.Locator.MSBuildLocator.RegisterDefaults();\r\n\r\nvar projectCollection = new Microsoft.Build.Evaluation.ProjectCollection();\r\nprojectCollection.LoadProject(@\"C:\\temp\\BuildTest\\BuildTestConsole\\BuildTestConsole.csproj\");\r\n```\r\nand that resulted in a runtime error of this:\r\n```\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n   at Program.<Main>$(String[] args)\r\n```\r\nI'm in unfamiliar territory here so appreciate any suggestions you may have and more than happy to explore further ideas.",
        "createdAt": "2022-09-30T08:38:28Z",
        "updatedAt": "2022-09-30T08:38:28Z",
        "author": {
          "login": "philiphendry"
        }
      },
      {
        "body": "@philiphendry please follow the instructions @BenVillalobos linked to adopt Locator. Specifically I think you've missed this one: https://learn.microsoft.com/visualstudio/msbuild/updating-an-existing-application#register-instance-before-calling-msbuild; you need to move the calls to MSBuild types out of the method that calls MSBuildLocator.",
        "createdAt": "2022-09-30T13:47:32Z",
        "updatedAt": "2022-09-30T13:47:32Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Many thanks for the response... that was indeed my problem so moving `MSBuildLocator.RegisterDefaults()` to its own method did the trick.\r\n\r\nHowever, I do have one final problem with application tests. I've put the `MSBuildLocator.RegisterDefaults()` call in to a one time set up method so it only runs once for all tests. The tests still fail though because we create a mock implementation of `Microsoft.Build.Framework.IBuildEngine` and that means the RegisterInstance method fails with the following:\r\n\r\n```\r\n   OneTimeSetUp: System.InvalidOperationException : Microsoft.Build.Locator.MSBuildLocator.RegisterInstance was called, but MSBuild assemblies were already loaded.\r\n    Ensure that RegisterInstance is called before any method that directly references types in the Microsoft.Build namespace has been called.\r\n    This dependency arises from when a method is just-in-time compiled, so if it breaks even if the reference to a Microsoft.Build type has not been executed.\r\n    For more details, see aka.ms/RegisterMSBuildLocator\r\n    Loaded MSBuild assemblies: Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n```\r\n\r\nIt's loaded Microsoft.Build.Framework because of the reference to the `IBuildEngine` interface.\r\n\r\nDo you know how I might work around this final issue?\r\n\r\n",
        "createdAt": "2022-10-10T14:58:24Z",
        "updatedAt": "2022-10-10T14:58:24Z",
        "author": {
          "login": "philiphendry"
        }
      },
      {
        "body": "Can you create the mock `IBuildEngine` in a separate method after registration called from your one-time setup method?",
        "createdAt": "2022-10-10T15:00:07Z",
        "updatedAt": "2022-10-10T15:00:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The original code declared a stub object `public class BuildEngineLogSub : IBuildEngine {}` and if I removed the `IBuildEngine` from that declaration the code would run but put it back and the locator complained MSBuild was already found. I've now removed that stub and used a `Mock<IBuildEngine>` and that seems to have done the trick. The test verifications are slightly harder to read but at least both net6.0 and net48 tests are running with no errors.\r\n\r\nMany thanks for your help @rainersigwald :)",
        "createdAt": "2022-10-11T07:05:42Z",
        "updatedAt": "2022-10-11T07:05:42Z",
        "author": {
          "login": "philiphendry"
        }
      },
      {
        "body": "> The SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator' specified could not be found. \n\nIs there more information this message could usefully provide, such as where it looked or how to configure that?",
        "createdAt": "2022-10-11T13:15:44Z",
        "updatedAt": "2022-10-11T13:15:44Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "> Is there more information this message could usefully provide, such as where it looked or how to configure that?\r\n\r\nWe are working on that--#7882 is the first step.",
        "createdAt": "2022-10-11T13:46:35Z",
        "updatedAt": "2022-10-11T13:46:35Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}