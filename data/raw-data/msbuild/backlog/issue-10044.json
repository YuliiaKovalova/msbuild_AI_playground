{
  "number": 10044,
  "title": "[Feature Request]: Add ProjectGraph APIs for target framework negotiation",
  "body": "### Summary\n\nWith current ProjectGraph APIs one can analyze project dependencies and retrieve evaluation results. However, given a (multi-targeted) project and a TFM we can't determine from the graph, which nodes of the referenced multi-targeted projects match that specific TFM. This makes it hard to determine values of properties/items across project dependencies.\r\n\r\n\r\n\n\n### Background and Motivation\n\ndotnet-watch uses ProjectGraph to determine various properties of the projects that affect its behavior. E.g. to distinguish between Blazor Hosted app and Blazor WASM client app we need to look at project dependencies and check their `ProjectCapability` items. Currently these specific capabilities do not change between TFMs in practice. However, it is entirely possible that in future we might encounter such scenarios, or other cases where we need to analyze TFM-specific project dependency.\n\n### Proposed Feature\n\nThere are multiple options how this feature may be implemented and exposed as public API. \r\n\r\nOne option is, for example, to specify an optional parameter to the ProjectGraph constructor that instructs it to only include project nodes that match the given TFM (create a subgraph).\r\n\r\nAnother option might be to add method `ProjectGraphNode? GetProjectReference(string targetFramework)` that returns the node that matches the given TFM for each project node (or null if none does).\n\n### Alternative Designs\n\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-04-19T16:02:28Z",
  "updatedAt": "2024-10-10T15:57:29Z",
  "closedAt": null,
  "author": {
    "login": "tmat"
  },
  "labels": [
    "backlog",
    "Feature Request",
    "Area: Static Graph",
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}