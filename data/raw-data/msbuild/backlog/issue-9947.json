{
  "number": 9947,
  "title": "[Bug]: Task failing unexpectedly on .Net 6.0 platform",
  "body": "### Issue Description\n\nAfter the migration from .Net48 to .Net6.0 I`m getting weird errors on a post-build event that triggers a custom task.\r\n\r\nError\tMSB4018\tThe \"PostBuildTask\" task failed unexpectedly.\r\nSystem.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at Core.PostBuildTask.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\nMy csproj file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>net6.0</TargetFramework>\r\n\t</PropertyGroup>\r\n\r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build.Utilities.Core\" Version=\"17.9.5\" />\r\n  </ItemGroup>\r\n\r\n  <UsingTask TaskName=\"PostBuildTask\" AssemblyFile=\"C:\\Git\\TestingTaskIssue\\Core\\bin\\Debug\\net6.0\\Core.dll\" />\r\n  <Target Name=\"ExecutePostBuildTask\" AfterTargets=\"afterbuild\" >\r\n\t  <PostBuildTask />\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n\n\n### Steps to Reproduce\n\n[Issue.zip](https://github.com/dotnet/msbuild/files/14790757/Issue.zip)\n\n### Expected Behavior\n\nTask is running without errors\n\n### Actual Behavior\n\nError\tMSB4018\tThe \"PostBuildTask\" task failed unexpectedly.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-03-28T14:08:39Z",
  "updatedAt": "2024-04-16T13:58:45Z",
  "closedAt": "2024-04-16T13:58:45Z",
  "author": {
    "login": "serhiikuksov3shape"
  },
  "labels": [
    "bug",
    "Area: Documentation",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@serhiikuksov3shape how are you invoking the build?",
        "createdAt": "2024-03-28T14:12:44Z",
        "updatedAt": "2024-03-28T14:12:44Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "You need just to rebuild the solution to see an error.",
        "createdAt": "2024-03-28T15:03:05Z",
        "updatedAt": "2024-03-28T15:03:05Z",
        "author": {
          "login": "serhiikuksov3shape"
        }
      },
      {
        "body": "@serhiikuksov3shape _exactly_ how please? What command line are you invoking?",
        "createdAt": "2024-03-28T15:05:58Z",
        "updatedAt": "2024-03-28T15:05:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I was building this in Visual Studio 2022, by right click on Solution --> Rebuild. Also, this can be achieved with \r\n`msbuild TestingTaskIssue.sln /t:Rebuild`. I can attach an archive with a whole solution if it will help.",
        "createdAt": "2024-03-28T15:13:21Z",
        "updatedAt": "2024-03-28T15:13:21Z",
        "author": {
          "login": "serhiikuksov3shape"
        }
      },
      {
        "body": "No need, that reveals the problem: you're running the build from a .NET Framework process, so it can't run a .NET 6 DLL. If you want your task to work in that situation you must target .NET Framework 4.7.2. If you can run all builds with `dotnet build` you can target only .NET 6, but that precludes using Visual Studio. Many tasks multitarget and select with conditions on `$(MSBuildRuntimeType)` in the `UsingTask`.\r\n\r\nIt may be possible at some point in the future to run a .NET 6 task in these scenarios; that's tracked as #4834.",
        "createdAt": "2024-03-28T15:56:17Z",
        "updatedAt": "2024-03-28T15:57:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hi @rainersigwald,\r\n\r\nIs there any other option to run c# code on the \"afterbuild\" event, in Visual Studio (.NET 6 only)?",
        "createdAt": "2024-04-01T09:47:22Z",
        "updatedAt": "2024-04-01T09:47:22Z",
        "author": {
          "login": "3s-ap"
        }
      },
      {
        "body": "If you build your code as an executable, you can use the Exec task to run it from the post-build target.  But then it cannot use the MSBuild API for parameters and logging.\n\nAnother option might be to target netstandard2.0 in the task project, but then the project would not be able to reference NuGet packages that support only net6.0.  IIRC, referencing Microsoft.Build.Utilities.Core should be OK, though.",
        "createdAt": "2024-04-01T10:11:43Z",
        "updatedAt": "2024-04-01T10:11:43Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Thank you for your answers, we already found a workaround for this issue, so it can be closed.",
        "createdAt": "2024-04-16T11:51:53Z",
        "updatedAt": "2024-04-16T11:51:53Z",
        "author": {
          "login": "serhiikuksov3shape"
        }
      }
    ]
  }
}