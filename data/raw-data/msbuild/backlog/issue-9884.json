{
  "number": 9884,
  "title": "[Built-in analyzer] Item is updated inside a target",
  "body": "### Background\r\n\r\nThis issue tracks one of the BuildCheck analyzers we would like to ship in-box with MSBuild.\r\n\r\n### Goal\r\n\r\nImplement an analyzer with the following rule: No item is attempted to be updated using the `Update` attribute inside a target.\r\n\r\n### Notes\r\n\r\nWhile the `Update` attribute can be added to items inside a target, it is ignored and the transformation is applied to all items of the given type. Implementing this analyzer will likely require introducing `TaskParameterMessageKind.UpdateItem` to communicate the attempted operation to the analyzer.",
  "state": "OPEN",
  "createdAt": "2024-03-18T12:06:31Z",
  "updatedAt": "2024-12-17T15:54:24Z",
  "closedAt": null,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "BuildCheck Suggestion",
    "triaged",
    "Area: BuildCheck"
  ],
  "comments": {
    "nodes": [
      {
        "body": "This is a mitigation for #2835.\r\n\r\n> this functionality is not supported inside targets and the engine silently does nothing\r\n\r\nNit: the problem isn't that the engine does nothing, it's that it _ignores the `Update` attribute_, applying the transformation to _all_ items of that type instead of a filtered list.",
        "createdAt": "2024-03-18T14:12:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I have updated the description, thank you!",
        "createdAt": "2024-03-18T14:18:05Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Related to:\r\n\r\n* #2835\r\n* #3538\r\n\r\nIf the engine instead was updated to honor the attribute, this analysis would not be needed. However, it sounds like that isn't an option.",
        "createdAt": "2024-03-20T22:17:53Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "This is not related to #3538--that's about the update mechanism that has existed ~forever, rather than the Update attribute.\r\n\r\nIndeed, honoring the attribute would be a breaking change \ud83d\ude22",
        "createdAt": "2024-04-01T18:18:52Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "wish we could opt in to honoring the attribute somehow, and then gradually roll out the opt in over the years",
        "createdAt": "2024-09-12T15:10:21Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "hopefully setting a property as an opt in mechanism could work",
        "createdAt": "2024-09-12T15:11:06Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I'm sure 100% of people when asked, do you want this semantics to be fixed at the risk of you having to update your build? would emphatically say yes",
        "createdAt": "2024-09-12T15:12:08Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I wish I believed that. I would expect a bunch of angry bugs.",
        "createdAt": "2024-09-12T15:13:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "An opt-in property could work since it'd be set before any target executed . . . that's a GREAT idea.",
        "createdAt": "2024-09-12T15:14:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This feels like something we would have to preflight _very early in a development cycle_ if we wanted to touch it at all.",
        "createdAt": "2024-09-12T15:18:56Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "let's do it! if a prop is set only update the included items, and send a log event (currently item updates are not logged at all, neither during eval nor during execution)",
        "createdAt": "2024-09-12T15:29:24Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I see three things we could do and I think we should do all three:\r\n\r\n1. Log all item updates (#3538, #10103)\r\n2. Add the \"work like you expect\" opt-in property (#2835)\r\n3. When that property is not set, have a buildcheck for \"this is probably wrong\" (#9884)",
        "createdAt": "2024-09-12T15:34:16Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}