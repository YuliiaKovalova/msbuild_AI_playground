{
  "number": 4792,
  "title": "Logging through an out-of-date `TaskLoggingHelper` causes MSB0001",
  "body": "MSB0001: Internal MSBuild Error: ContextID 10 should have been in the ID-to-project file mapping but wasn't!\r\n\r\n\r\n----\r\n\r\n```\r\nat Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(String message, Object[] args)\r\n    at Microsoft.Build.BackEnd.Logging.LoggingService.GetAndVerifyProjectFileFromContext(BuildEventContext context)\r\n    at Microsoft.Build.BackEnd.Logging.LoggingService.LogBuildEvent(BuildEventArgs buildEvent)\r\n    at Microsoft.Build.BackEnd.TaskHost.LogMessageEvent(BuildMessageEventArgs e)\r\n    at Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(MessageImportance importance, String message, Object[] messageArgs)\r\n    at NuGet.Build.MSBuildLogger.LogMessage(INuGetLogMessage logMessage, MessageImportance importance, LogMessageWithDetails logWithDetails, LogMessageAsString logAsString)\r\n    at NuGet.Build.MSBuildLogger.LogForNonMono(INuGetLogMessage message)\r\n    at NuGet.Build.MSBuildLogger.Log(ILogMessage message)\r\n    at NuGet.Common.LoggerBase.Log(LogLevel level, String data)\r\n    at NuGet.Common.LoggerBase.LogVerbose(String data)\r\n    at NuGet.Protocol.Plugins.LogRequestHandler.Log(LogRequest request)\r\n    at NuGet.Protocol.Plugins.LogRequestHandler.HandleResponseAsync(IConnection connection, Message request, IResponseHandler responseHandler, CancellationToken cancellationToken)\r\n```",
  "state": "CLOSED",
  "createdAt": "2019-10-08T21:26:13Z",
  "updatedAt": "2024-02-21T17:06:42Z",
  "closedAt": "2019-10-14T16:48:41Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Area: Debuggability",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Rough notes on what I've figured out debugging the repro I got offline so far:\r\n\r\n* `RestoreTask` is called twice; the second one is the one that crashes.\r\n* it uses async/await and does a bunch of work in the background, but AFAIK waits for it all to complete before returning (doesn't even yield the node).\r\n* The internal error is thrown here:\r\nhttps://github.com/microsoft/msbuild/blob/25f141655da25aace8fd2ee1776f43210b124e92/src/Build/BackEnd/Components/Logging/LoggingService.cs#L1548-L1553\r\n* that `_projectFileMap` is added to on project start\r\nhttps://github.com/microsoft/msbuild/blob/25f141655da25aace8fd2ee1776f43210b124e92/src/Build/BackEnd/Components/Logging/LoggingServiceLogMethods.cs#L567\r\n* and removed from on project finish\r\nhttps://github.com/microsoft/msbuild/blob/25f141655da25aace8fd2ee1776f43210b124e92/src/Build/BackEnd/Components/Logging/LoggingServiceLogMethods.cs#L640\r\n* The repro always fails with the map containing\r\n```\r\n4: C:\\Users\\azdofeeds\\Workdir\\dotnet-core-setup\\.packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19461.7\\tools\\Build.proj\r\n124: C:\\Users\\azdofeeds\\Workdir\\dotnet-core-setup\\.dotnet\\sdk\\3.0.100-preview6-012264\\NuGet.targets\r\n```\r\n* `NuGet.targets` being a project is weird but expected because of https://github.com/dotnet/arcade/blob/8cd48078f550fbcbd4f684b897b14db207397b52/src/Microsoft.DotNet.Arcade.Sdk/tools/Build.proj#L150-L162\r\n* It fails because it's looking for\r\n```\r\n7: C:\\Users\\azdofeeds\\Workdir\\dotnet-core-setup\\.packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19461.7\\tools\\Tools.proj\r\n```\r\n* But I think the second time the task is run, it should be from `build.proj`\r\n",
        "createdAt": "2019-10-10T22:19:19Z",
        "updatedAt": "2019-10-10T22:19:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "1. The first call to `RestoreTask` gets a `TaskLoggingHelper` (which I made object ID `$1`)\r\n2. The second call to `RestoreTask` gets a `TaskLoggingHelper` (which I made object ID `$2`)\r\n3. At the point of failure inside the second task, it tries to log through `$1`:\r\n\r\n![image](https://user-images.githubusercontent.com/3347530/66647361-4f7f5700-ebee-11e9-9b76-b68fa2ff1d29.png)\r\n",
        "createdAt": "2019-10-11T11:14:02Z",
        "updatedAt": "2019-10-11T11:14:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The root cause here is NuGet/Home#8688; NuGet preserves a reference to a `TaskLoggingHelper` object in a `static` field beyond the lifetime of its associated `Task` invocation. When NuGet tries to log to it later, it results in this assertion failure.\r\n\r\nMSBuild may be able to provide a more helpful error in this case. It'd be nice to be able to know what task created the logging context in the error, for instance.",
        "createdAt": "2019-10-11T16:58:06Z",
        "updatedAt": "2019-10-11T16:58:06Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Closing this issue as this has been root caused to be an issue in NuGet.",
        "createdAt": "2019-10-14T16:48:40Z",
        "updatedAt": "2019-10-14T16:48:40Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "@rainersigwald if you want to add better error messages here, let's use a separate issue for that.",
        "createdAt": "2019-10-14T16:49:12Z",
        "updatedAt": "2019-10-14T16:49:12Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "Since it's easy for task authors to get this wrong, perhaps TaskLoggingHelper should implement IDisposable, and the Dispose would zombify it to block all calls to it.",
        "createdAt": "2019-10-17T19:57:53Z",
        "updatedAt": "2019-10-17T19:57:53Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  }
}