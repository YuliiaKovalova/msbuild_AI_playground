{
  "number": 4065,
  "title": "Performance regression in <Copy/> task with dev16",
  "body": "### Steps to reproduce\r\n\r\nCheckout my example repro here (`dev16-repro` branch): https://github.com/jonathanpeppers/HelloWorld/tree/dev16-repro\r\n\r\nI have the Xamarin workload installed and an Android device connected via USB. An emulator would also be fine.\r\n\r\nCommand line\r\n```\r\n.\\build.ps1\r\n```\r\nThis script is running Xamarin.Android's `Install` target to deploy an APK. It is timing an initial deploy, then a deploy with no changes.\r\n\r\nReviewing `/clp:peformancesummary`:\r\n```\r\n# 16.0\r\n434 ms  _CopyFilesMarkedCopyLocal                  1 calls\r\n# 15.9\r\n 20 ms  _CopyFilesMarkedCopyLocal                  1 calls\r\n```\r\nThe bulk of the time here is spent in `<Copy/>`:\r\n```\r\n# 16.0\r\n433 ms  Copy                                       5 calls\r\n# 15.9\r\n23 ms  Copy                                       5 calls\r\n```\r\nThese two files are ~6k and ~1k...\r\n\r\n![image](https://user-images.githubusercontent.com/840039/51045918-6115ce80-158a-11e9-85b6-74f7e9b04290.png)\r\n\r\nWhat is weird about this, is I couldn't reproduce this by just running the `Build` target.\r\n\r\n### Expected  behavior\r\n\r\n`<Copy/>` should be quick when no changes are occurring.\r\n\r\n### Actual behavior\r\n\r\nIn some cases, `<Copy/>` is taking a bit of time, even when doing no work against two small files.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n```\r\nMicrosoft (R) Build Engine version 16.0.360-preview+g9781d96883 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.0.360.33175\r\n```\r\nOS info:\r\n```\r\nMicrosoft Windows 10 Enterprise\r\n10.0.17763 Build 17763\r\n```\r\n\r\nBinlogs: [logs.zip](https://github.com/Microsoft/msbuild/files/2750361/logs.zip)\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2019-01-11T16:23:04Z",
  "updatedAt": "2024-02-21T17:09:45Z",
  "closedAt": "2019-05-02T21:25:25Z",
  "author": {
    "login": "jonathanpeppers"
  },
  "labels": [
    "Area: Performance",
    "Area: Tasks",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.2"
  },
  "comments": {
    "nodes": [
      {
        "body": "There were a series of issues in .NET Core related to the nanosecond parts of file timestamps - either not reading them correctly, or when doing `File.Copy` not copying them fully. These should all be corrected now in CoreFX master. The effect of this was that MSBuild could see the destination as older even when it wasn't.\r\n\r\nYou can verify this was the problem by using `touch` to set the timestamp of source and destination files to something (say a whole number of seconds). Repeat the build and it should not copy.\r\n\r\nhttps://github.com/dotnet/corefx/issues/32115\r\nhttps://github.com/dotnet/corefx/issues/31379\r\nhttps://github.com/dotnet/corefx/issues/26024",
        "createdAt": "2019-01-22T02:42:49Z",
        "updatedAt": "2019-01-22T02:42:49Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@danmosemsft I'm not sure these are the issue. These builds are running on MSBuild full .NET framework on Windows.\r\n\r\nReviewing the binlog, the files aren't copying, but the task takes 426ms:\r\n```\r\nCopy\r\n    Assembly = Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, \r\n...\r\n    Did not copy from file \"C:\\Users\\jopepper\\Desktop\\Git\\HelloWorld\\HelloForms\\HelloForms\\bin\\Debug\\netstandard2.0\\HelloForms.dll\" to file \"bin\\Debug\\HelloForms.dll\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match.\r\n    Did not copy from file \"C:\\Users\\jopepper\\Desktop\\Git\\HelloWorld\\HelloForms\\HelloForms\\bin\\Debug\\netstandard2.0\\HelloForms.pdb\" to file \"bin\\Debug\\HelloForms.pdb\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match.\r\n```\r\nI believe this is the line these are logged from: https://github.com/Microsoft/msbuild/blob/9781d968839ded744e18152f991d21eb6ce83862/src/Tasks/Copy.cs#L669-L676\r\n",
        "createdAt": "2019-01-22T14:42:33Z",
        "updatedAt": "2019-01-22T14:42:33Z",
        "author": {
          "login": "jonathanpeppers"
        }
      },
      {
        "body": "Ah yes that's not the issue then. I wonder whether procmon might suggest why the time stamp checks are taking so long (eg msybe they are getting repeated? Seems unlikely)",
        "createdAt": "2019-01-22T15:21:39Z",
        "updatedAt": "2019-01-22T15:21:39Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@jonathanpeppers I can't seem to repro your issue with the versions of MSBuild on my machine.\r\n\r\n### Versions I tested\r\n```\r\nMicrosoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework\r\n15.9.21.664\r\n\r\n-----\r\n\r\nMicrosoft (R) Build Engine version 16.1.68-preview+g64a5b6be6d for .NET Framework\r\n16.1.68.42340\r\n```\r\n\r\n### My Results\r\n\r\n```\r\n# 15.9\r\n5 ms  _CopyFilesMarkedCopyLocal                  1 calls\r\n47 ms  Copy                                       8 calls\r\n\r\n# 16.1\r\n5 ms  _CopyFilesMarkedCopyLocal                  1 calls\r\n12 ms  Copy                                       5 calls\r\n```\r\n\r\nAre you still seeing this regression?",
        "createdAt": "2019-05-01T21:49:45Z",
        "updatedAt": "2019-05-01T21:49:45Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I can repro with 16.0 GA:\r\n\r\n![image](https://user-images.githubusercontent.com/840039/57107764-7f006e00-6cf6-11e9-9b25-dd3bc12a0978.png)\r\n\r\nBut I think it's fixed with `16.1.68-preview+g64a5b6be6d`:\r\n\r\n![image](https://user-images.githubusercontent.com/840039/57107863-cdae0800-6cf6-11e9-8c89-5683173e5ad9.png)\r\n\r\nSo must be already fixed? I think we can close this, I'll reopen if I see it again with 16.1 or higher.\r\n",
        "createdAt": "2019-05-02T21:25:24Z",
        "updatedAt": "2019-05-02T21:25:24Z",
        "author": {
          "login": "jonathanpeppers"
        }
      }
    ]
  }
}