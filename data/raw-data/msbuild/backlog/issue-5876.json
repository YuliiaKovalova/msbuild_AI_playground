{
  "number": 5876,
  "title": "Improve performance of CLI/SDK/MSBuild as it relates to the developer inner-loop",
  "body": "### Summary\r\nThe .NET CLI, SDK, and MSBuild have a large impact on the inner-loop experience today. New .NET developers are often introduced via the CLI and perform the project creation, build, and launch operations from the command line. The SDK and MSBuild itself are present in all inner-loop scenarios whether it be CLI or IDE based.\r\n\r\nPrior investigations have identified potential opportunities to improve performance of CLI interactions which should be further investigated and addressed as appropriate including but not limited to:\r\n\r\n- Reduction in the launching of new processes and potential process reuse\r\n- Optimizations of core SDK targets including NuGet restore and `ResolveAssemblyReference`\r\n- Startup time optimizations  \r\n- Revisiting of server timeouts (e.g. VBCSCompiler and rzr)\r\n- Further workload-specific improvements to improve dotnet-watch performance\r\n- General in-depth fundamentals push (profile, analyze, improve, repeat)\r\n\r\nWe should also explore opportunities for improving the CLI-based inner-loop UX through changes to the core commands involved, including revisiting defaults and potentially introducing new arguments or commands that improve the relevant scenarios, e.g. `dotnet run --watch`.\r\n\r\n### User Stories & Issues\r\n\r\n- [x] [As a customer, I want implicitly cached references so that MSBUILD builds faster](https://github.com/dotnet/msbuild/issues/3139)\r\n- [x] [As a customer, I want implicitly reduced launched processes so that MSBUILD is faster & consumes less resources](https://github.com/dotnet/msbuild/issues/5866)\r\n- [x] [As a customer, I want MSBUILD to start faster so that I wait negligible time to do my work](https://github.com/dotnet/msbuild/issues/5873)\r\n- [x] [As a customer, I want my applications to boot faster.](https://github.com/dotnet/runtime/issues/44598)\r\n- [x] [As a customer, speed up my first run of \"dotnet new console\"](https://github.com/dotnet/templating/issues/2743)\r\n- [ ] As a customer, speed up my first build/run after doing dotnet new #5969\r\n- [ ] As a developer, I want my first time dotnet command to be faster dotnet/sdk#16998\r\n- [x] Investigate improvements to our disk usage on file timestamp checks #5972\r\n- [x] Investigate performance issues and explore solutions regarding CLI-related inner-loop scenarios dotnet/sdk#15218\r\n- [x] Generate a RAR cache during SDK builds to improve first time RAR pass #5247\r\n- [ ] [Measure and understand how time is spent currently in each phase / area of the build (ASP.NET Core projects)](https://github.com/dotnet/aspnetcore/issues/27271)\r\n- [x] [Have SDK opt into using MSBuild's precomputed RAR cache](https://github.com/dotnet/installer/pull/10037)",
  "state": "CLOSED",
  "createdAt": "2020-11-02T22:44:31Z",
  "updatedAt": "2024-02-21T17:02:15Z",
  "closedAt": "2021-08-09T12:41:51Z",
  "author": {
    "login": "DamianEdwards"
  },
  "labels": [
    "Area: Performance",
    "Priority:0",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": ".NET 6.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "Greetings @DamianEdwards , heads up on new child user story: [As a customer, speed up my first run of \"dotnet new console\"](https://github.com/dotnet/templating/issues/2743), based on the Brian's benchmarking follow ups.  Please advise if there is a better inner-loop parent for this user story & we'll gladly move it there.",
        "createdAt": "2021-01-11T11:00:03Z",
        "updatedAt": "2021-01-11T11:00:03Z",
        "author": {
          "login": "donJoseLuis"
        }
      },
      {
        "body": "Team Triage: Closing the epic, as we are done with it.",
        "createdAt": "2021-08-09T12:41:51Z",
        "updatedAt": "2021-08-09T12:41:51Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}