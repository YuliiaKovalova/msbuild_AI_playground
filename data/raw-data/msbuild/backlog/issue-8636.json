{
  "number": 8636,
  "title": "RAR: Save only relevant data to per project disk cache",
  "body": "This issue tracks implementing the optimization per https://github.com/dotnet/msbuild/blob/main/documentation/design/rar-core-scenarios.md#save-only-relevant-data-to-the-per-project-disk-cache\r\n\r\nParent user story: #8422\r\n\r\nFor saving the per-project cache, we should guarantee that after RAR is done, the cache contains exactly the data needed for this specific project. This would be done by keeping track of the items used during RAR execution, and writing those and only those to the cache. Having a cache that's guaranteed to have certain well-defined content after each build is a very good property to have. For instance, in dev box scenarios it would otherwise be hard to reliably \"prime\" a repo enlistment - the system may prime by building the full solution and then the developer uses the box to build a specific project that happens to have an incomplete cache and get sub-optimal first-time build performance.\r\n\r\nSaving of the per-project disk cache may be further optimized by\r\n\r\n- Keeping the timestamp of the cache file in memory and skipping the save if the relevant cache items haven't become dirty (i.e. the dependencies have not changed) and the timestamp of the cache file hasn't changed since the last save. In hot inner loop scenarios this would reduce the save to a timestamp check.\r\n- Saving the file asynchronously, i.e. not blocking the build on completing the save operation.",
  "state": "CLOSED",
  "createdAt": "2023-04-05T08:50:00Z",
  "updatedAt": "2024-02-21T16:59:19Z",
  "closedAt": "2023-06-22T05:23:36Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "Area: Task: Resolve Assembly References (RAR)",
    "triaged",
    "8.0"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "ladipro"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}