{
  "number": 423,
  "title": "On Linux msbuild generates error about missing api-ms-win-core-registry-l1-1-0.dll",
  "body": "While running msbuild on Linux, I received the following error:\n\n```\nUnhandled Exception: System.DllNotFoundException: Unable to load DLL 'api-ms-win-core-registry-l1-1-0.dll': The specified module could not be found.\n (Exception from HRESULT: 0x8007007E)\n   at Interop.mincore.RegCloseKey(IntPtr hKey)\n   at Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle()\n   at System.Runtime.InteropServices.SafeHandle.InternalFinalize()\n   at System.Runtime.InteropServices.SafeHandle.Dispose(Boolean disposing)\n   at System.Runtime.InteropServices.SafeHandle.Finalize()\n```\n\nThe error occurred during clean up, after msbuild had already finished its work. Apparently it was trying to do RegCloseKey(HKEY_PERFORMANCE_DATA).\n",
  "state": "CLOSED",
  "createdAt": "2016-01-09T00:36:45Z",
  "updatedAt": "2024-02-21T17:29:24Z",
  "closedAt": "2016-01-19T23:01:47Z",
  "author": {
    "login": "JohnChen0"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "What is the ETA for this fix? This is blocking https://github.com/dotnet/coreclr/issues/1934#issuecomment-170444117\n\nCC @weshaggard @joshfree \n",
        "createdAt": "2016-01-11T19:17:41Z",
        "updatedAt": "2016-01-11T19:17:41Z",
        "author": {
          "login": "gkhanna79"
        }
      },
      {
        "body": "I'm taking a look at this now.\n",
        "createdAt": "2016-01-11T23:52:10Z",
        "updatedAt": "2016-01-11T23:52:10Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": " I suspect that this is because the feature flag for registry access is set to true when building for Windows [here](https://github.com/Microsoft/msbuild/blob/54c137f24422481e6ecbfc8c8f857cafb09b488b/dir.props#L287-L289), when it should be disabled for all CoreCLR scenarios.\n\nThat doesn't explain why the crash only happens at `RegCloseKey` time, though--AFAICT, this key gets opened for any registry query, but I don't see how the handle could have been constructed successfully.\n\nI'm trying to disable registry use entirely for our coreclr flavor.\n",
        "createdAt": "2016-01-12T01:36:06Z",
        "updatedAt": "2016-01-12T01:36:06Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "For this particular crash, the registry handle that is being closed is a pseudo handle, HKEY_PERFORMANCE_DATA, so there is no corresponding open operation.\n",
        "createdAt": "2016-01-12T08:36:13Z",
        "updatedAt": "2016-01-12T08:36:13Z",
        "author": {
          "login": "JohnChen0"
        }
      },
      {
        "body": "@rainersigwald were we able to fix this? This is also blocking building corefx using netcore msbuild which we intended to have for tomorrow\n",
        "createdAt": "2016-01-15T01:44:01Z",
        "updatedAt": "2016-01-15T01:44:01Z",
        "author": {
          "login": "joperezr"
        }
      },
      {
        "body": "I've reproduced the issue and am building and will test with what I hope is a fix. If this doesn't work I'll have to spend some more time poking at it (and may have to bug someone for help debugging).\n",
        "createdAt": "2016-01-15T16:44:21Z",
        "updatedAt": "2016-01-15T16:44:21Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This should be fixed in our packages `v0.1.0-preview-00008` and higher. Let me know if you see otherwise.\n",
        "createdAt": "2016-01-19T23:01:47Z",
        "updatedAt": "2016-01-19T23:01:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The fix is verified.\n",
        "createdAt": "2016-01-20T00:33:08Z",
        "updatedAt": "2016-01-20T00:33:08Z",
        "author": {
          "login": "JohnChen0"
        }
      }
    ]
  }
}