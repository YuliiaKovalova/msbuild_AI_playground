{
  "number": 7382,
  "title": "MSBuild is loading the wrong task architecture",
  "body": "### Issue Description\r\n64-bit MSBuild loads 32-bit task in-proc. Part of the issue here: https://github.com/wixtoolset/issues/issues/6720.\r\n\r\n### Steps to Reproduce\r\n1. Clone https://github.com/rseanhall/wix4.\r\n2. Checkout the msbuild-task-arch-issue branch.\r\n3. Run src\\setupenv.cmd (might need to download the latest nuget.exe into C:\\Programs).\r\n4. Run build.cmd.\r\n\r\nBinlogs are created in build\\logs.\r\n\r\n### Expected Behavior\r\nAll tests pass in the src\\wix\\test\\WixToolsetTest.Sdk project.\r\n\r\n### Actual Behavior\r\n`WixToolsetTest.Sdk.MsbuildFixture.CanBuildSimpleMsiPackageWithMergeModule` test fails in the 64-bit configuration.\r\n\r\n```\r\nC:\\src\\mywix4\\build\\wix\\Debug\\publish\\WixToolset.Sdk\\tools\\wix.targets(590,5): BadImageFormatException: An attempt was made to load a program with an incorrect format. (Exception from HRESULT: 0x8007000B)\r\n   at WixToolset.Core.Native.Msm.MsmInterop.MergeModGetClassObject(Guid clsid, Guid iid)\r\n   at WixToolset.Core.Native.Msm.MsmInterop.GetMsmMerge() in C:\\src\\mywix4\\src\\wix\\WixToolset.Core.Native\\Msm\\MsmInterop.cs:line 45\r\n   at WixToolset.Core.WindowsInstaller.Bind.ExtractMergeModuleFilesCommand.Execute() in C:\\src\\mywix4\\src\\wix\\WixToolset.Core.WindowsInstaller\\Bind\\ExtractMergeModuleFilesCommand.cs:line 56\r\n   at WixToolset.Core.WindowsInstaller.Bind.BindDatabaseCommand.Execute() in C:\\src\\mywix4\\src\\wix\\WixToolset.Core.WindowsInstaller\\Bind\\BindDatabaseCommand.cs:line 244\r\n   at WixToolset.Core.WindowsInstaller.MsiBackend.Bind(IBindContext context) in C:\\src\\mywix4\\src\\wix\\WixToolset.Core.WindowsInstaller\\MsiBackend.cs:line 31\r\n   at WixToolset.Core.Binder.BackendBind(IBindContext context) in C:\\src\\mywix4\\src\\wix\\WixToolset.Core\\Binder.cs:line 67\r\n   at WixToolset.Core.Binder.Bind(IBindContext context) in C:\\src\\mywix4\\src\\wix\\WixToolset.Core\\Binder.cs:line 40\r\n   at WixToolset.Core.CommandLine.BuildCommand.BindPhase(Intermediate output, IReadOnlyCollection`1 localizations, IReadOnlyCollection`1 filterCultures, String cabCachePath, IReadOnlyCollection`1 bindPaths, CancellationToken cancellationToken) in C:\\src\\mywix4\\src\\wix\\WixToolset.Core\\CommandLine\\BuildCommand.cs:line 360\r\n   at WixToolset.Core.CommandLine.BuildCommand.ExecuteAsync(CancellationToken cancellationToken) in C:\\src\\mywix4\\src\\wix\\WixToolset.Core\\CommandLine\\BuildCommand.cs:line 169\r\n   at WixToolset.BuildTasks.WixExeBaseTask.ExecuteCoreAsync(IWixToolsetCoreServiceProvider coreProvider, String commandLineString, CancellationToken cancellationToken) in C:\\src\\mywix4\\src\\wix\\WixToolset.BuildTasks\\WixExeBaseTask_Inproc.cs:line 24\r\n   at WixToolset.BuildTasks.ToolsetTask.ExecuteInProc(String commandLineString) in C:\\src\\mywix4\\src\\wix\\WixToolset.BuildTasks\\ToolsetTask_InProc.cs:line 42\r\n [C:\\Users\\rhall\\AppData\\Local\\Temp\\5icgguio.okw\\MergeMsiPackage\\MergeMsiPackage.wixproj]\r\n```\r\n\r\n`mergemod.dll` is a native DLL that needs to match the process's architecture and is the one that is causing this failure.\r\n\r\n### Analysis\r\nThe test is launching MSBuild from `C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe`. We have our tasks defined at https://github.com/rseanhall/wix4/blob/6a3a21a9990020e56acbf930f52b479b5d4d08d4/src/wix/WixToolset.Sdk/tools/wix.targets#L142:\r\n\r\n```\r\n  <UsingTask TaskName=\"WixBuild\" Condition=\" '$(WixTasksPath64)' == '' \" AssemblyFile=\"$(WixTasksPath)\" />\r\n  <UsingTask TaskName=\"WixBuild\" Condition=\" '$(WixTasksPath64)' != '' \" AssemblyFile=\"$(WixTasksPath)\" Architecture=\"x86\" />\r\n  <UsingTask TaskName=\"WixBuild\" Condition=\" '$(WixTasksPath64)' != '' \" AssemblyFile=\"$(WixTasksPath64)\" Architecture=\"x64\" />\r\n```\r\n\r\n`WixTasksPath64` is always defined in .NET Framework MSBuild, so the task should be loaded from the `WixTasksPath64` path.\r\n\r\nThe very unusual thing about this issue is that it works fine if initializing the command prompt from `C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\vsdevcmd.bat`.\r\n\r\nWe have a build process issue that is causing 64-bit dlls to be in the 32-bit folder (`build\\wix\\Debug\\publish\\WixToolset.Sdk\\tools\\net472\\x86`). That test should always be failing in the 32-bit configuration, and always passing in the 64-bit configuration. Instead, both configurations are passing when initialized through `vsdevcmd.bat` and both configuration are failing otherwise.\r\n\r\n### Versions & Configurations\r\n`msbuild -version` output:\r\nMicrosoft (R) Build Engine version 17.0.0+c9eb9dd64 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n17.0.0.52104\r\n\r\n### Attach a binlog\r\n[MergeMsiPackage.MSBuild64.zip](https://github.com/dotnet/msbuild/files/8036729/MergeMsiPackage.MSBuild64.zip)\r\n[MergeMsiPackage.rest.zip](https://github.com/dotnet/msbuild/files/8036903/MergeMsiPackage.rest.zip)\r\n\r\n",
  "state": "OPEN",
  "createdAt": "2022-02-09T23:08:22Z",
  "updatedAt": "2024-01-31T08:18:37Z",
  "closedAt": null,
  "author": {
    "login": "rseanhall"
  },
  "labels": [
    "bug",
    "has-repro",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Duplicate of #6461",
        "createdAt": "2022-02-09T23:16:46Z",
        "updatedAt": "2022-02-09T23:16:46Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Actually wait, maybe not?",
        "createdAt": "2022-02-09T23:18:11Z",
        "updatedAt": "2022-02-09T23:18:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rseanhall can you share a binlog of the _passing_ case?\r\n\r\nThe failing binlog you shared looks right to me, given your \"we have x64 binaries in the x86 folder\" situation:\r\n\r\n```\r\nLaunching task \"WixBuild\" from assembly \"C:\\src\\mywix4\\build\\wix\\Debug\\publish\\WixToolset.Sdk\\tools\\net472\\x86\\WixToolset.BuildTasks.dll\" in an external task host with a runtime of \"CLR4\" and a process architecture of \"x86\".\r\n...\r\nC:\\src\\mywix4\\build\\wix\\Debug\\publish\\WixToolset.Sdk\\tools\\wix.targets(590,5): BadImageFormatException: An attempt was made to load a program with an incorrect format. (Exception from HRESULT: 0x8007000B)\r\n```",
        "createdAt": "2022-02-09T23:25:59Z",
        "updatedAt": "2022-02-09T23:25:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I can, but why should it matter? The actual tasks DLL, WixToolset.BuildTasks.dll, is AnyCPU. This case is running in 64-bit MSBuild and we are declaring that the 64-bit task is in `C:\\src\\mywix4\\build\\wix\\Debug\\publish\\WixToolset.Sdk\\tools\\net472\\x64\\WixToolset.BuildTasks.dll` so it should be loading that.",
        "createdAt": "2022-02-09T23:32:12Z",
        "updatedAt": "2022-02-09T23:32:12Z",
        "author": {
          "login": "rseanhall"
        }
      },
      {
        "body": "@rainersigwald Here are the binlogs when initializing from `vsdevcmd.bat`. I will update the original post with the other binlogs later when not initializing from `vsdevcmd.bat`. [MergeMsiPackage.passing.zip](https://github.com/dotnet/msbuild/files/8036867/MergeMsiPackage.passing.zip)\r\n",
        "createdAt": "2022-02-09T23:40:59Z",
        "updatedAt": "2022-02-09T23:40:59Z",
        "author": {
          "login": "rseanhall"
        }
      }
    ]
  }
}