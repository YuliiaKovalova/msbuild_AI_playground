{
  "number": 1860,
  "title": "NuGet package with build .targets and .props not working with TargetFrameworks",
  "body": "I have nuget package which contains .props and .targets files in build directory.\r\n\r\nWhen i install this package to another project .targets and .props are called as they should if i specify only one `<targetFramework>`, but if i want my project to be build for multiple frameworks and i use let say `<TargetFrameworks>netcoreapp1.0;net46</TargetFrameworks>` .targets and .props from my package are never used. \r\n\r\nHere is the reason why (generated project.csproj.nuget.g.targets generated by Restore):\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>\r\n  </PropertyGroup>\r\n  <ImportGroup Condition=\" '$(TargetFramework)' == 'net46' AND '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)asseco.nuget.deployment\\2.0.0\\build\\Asseco.NuGet.Deployment.targets\" Condition=\"Exists('$(NuGetPackageRoot)asseco.nuget.deployment\\2.0.0\\build\\Asseco.NuGet.Deployment.targets')\" />\r\n  </ImportGroup>\r\n  <ImportGroup Condition=\" '$(TargetFramework)' == 'netcoreapp1.0' AND '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)asseco.nuget.deployment\\2.0.0\\build\\Asseco.NuGet.Deployment.targets\" Condition=\"Exists('$(NuGetPackageRoot)asseco.nuget.deployment\\2.0.0\\build\\Asseco.NuGet.Deployment.targets')\" />\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\r\nMy project file is simple as this:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp1.0;net46</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Asseco.NuGet.Deployment\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nIf you look at `Condition=\"'$(TargetFramework)' == 'netcoreapp1.0'\"` this condition is source of problem. Since i have set `TargetFrameworks` and not `TargetFramework` this condition is alwasy `false` because `$(TargetFramework)` is always empty and import of .targets or .props never happen.\r\n\r\nGenerated nupkg is ok, contains all frameworks, but .targets and .props from other packages can not be used with `TargetFrameworks`.\r\n\r\nThank you for help",
  "state": "CLOSED",
  "createdAt": "2017-03-14T12:10:51Z",
  "updatedAt": "2024-02-21T17:20:49Z",
  "closedAt": "2017-03-14T12:43:22Z",
  "author": {
    "login": "kukjevov"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "The conditions will evaluate to true on the inner builds of the referenced projects. This may or may not be what you want. If you want to build props/targets that are imported for the outer build in multi-targeting projects, you can put the files into a `buildCrossTargeting` folder inside the nuget (instead of or complementing `build`).",
        "createdAt": "2017-03-14T12:15:17Z",
        "updatedAt": "2017-03-14T12:15:17Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Hi, thank you for answer.\r\n\r\nWhat i want is to have multitarget project (classlibrary) and i want to create nuget package.\r\n\r\nI have my custom target `AfterTargets=\"Pack\"`. So when package is created it will contain all target frameworks libraries (.dll) and my target is called with this nupkg. \r\n\r\nI want to use `dotnet pack` or `msbuild /t:Pack`. \r\n\r\nWhat do you mean by `buildCrossTargeting` folder? Rename folder `build` to `buildCrossTargeting`?\r\n\r\nThank you",
        "createdAt": "2017-03-14T12:30:42Z",
        "updatedAt": "2017-03-14T12:31:45Z",
        "author": {
          "login": "kukjevov"
        }
      },
      {
        "body": "Thank you i have tried it.\r\n\r\nIt works like charm, but i have to have both directories `buildCrossTargeting` and `build` since i want it working for multitarget projects and also single target projects.\r\n\r\nBut thanks anyway for help, you saved my day :).",
        "createdAt": "2017-03-14T12:43:22Z",
        "updatedAt": "2017-03-14T12:43:22Z",
        "author": {
          "login": "kukjevov"
        }
      },
      {
        "body": "I just hit this in my nuget package, I was getting crazy! Any plan to fix this since no one knows about that `buildCrossTargeting` folder?",
        "createdAt": "2020-03-07T20:31:55Z",
        "updatedAt": "2020-03-07T20:31:55Z",
        "author": {
          "login": "isc30"
        }
      },
      {
        "body": "I also hit this. Trying to setup metrics gathering for CI.\r\nEverything seemed to build fine however wasn't getting the metrics target for most of the projects.\r\nAs i was only targeting one framework was no hard fix to change, however now limits multitargeting.\r\n\r\nThe 'Metrics' Target was basically nonexistent for TargetFrameworks projects.\r\n\r\nHope this helps someone else",
        "createdAt": "2020-09-01T01:02:24Z",
        "updatedAt": "2020-09-01T01:02:24Z",
        "author": {
          "login": "PPenglis"
        }
      }
    ]
  }
}