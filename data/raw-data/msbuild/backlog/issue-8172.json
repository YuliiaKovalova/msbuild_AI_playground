{
  "number": 8172,
  "title": "Project evaluation tries to import targets even when import condition is false, failing evaluation",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\n<!--\r\n* Please include a clear and concise description of the problem.\r\n-->\r\nProject evaluation tries to import targets even when import condition is false, possibly due to new behavior related to MSBuild.exe.config.\r\n\r\n### Steps to Reproduce\r\n<!--\r\n* Include as much of the following as possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behaviour.\r\n* Your command line invocation\r\n\r\nIf providing steps to reproduce the issue proves difficult, consider attaching a binlog:\r\n[Details on sharing binary logs](https://aka.ms/msbuild/binlog)\r\n[More information on binary logs](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md)\r\nNOTE: Binary logs capture environment information. Ensure it does not include any information you don't want to be public before you attach one.\r\nIf you want to share one just with Microsoft, you can [report a problem through Visual Studio](https://developercommunity.visualstudio.com/report) and share it privately with Microsoft.\r\n-->\r\nCan't share failing projects because they are MS internal. Feel free to reach out for more details.\r\n\r\n### Expected Behavior\r\nI have a custom MSBuild task that runs after restore that evaluates a bunch of projects using the Microsoft.Build API. I expect all the evaluations to succeed and the task to complete successfully.\r\n\r\n### Actual Behavior\r\n<!--\r\n* The actual output or behavior.\r\n-->\r\n<!--\r\n* The expected output or behavior.\r\n-->\r\nOne of the project evaluations fails with:\r\n\r\n```\r\nsrc\\Tests\\Test.targets(10,11) error MSB4226: The imported project \"$(VSToolsPath)\\TeamTest\\Microsoft.TestTools.targets\" was not found. Also, tried to find \"$(VSToolsPath)\\TeamTest\\Microsoft.TestTools.targets\" in the fallback search path(s) for $(VSToolsPath) - \"C:\\Program Files\\Microsoft Visual Studio\\2022\\IntPreview\\MSBuild\\MSBuild\\Microsoft\\VisualStudio\\v17.0\" . These search paths are defined in \"C:\\Program Files\\Microsoft Visual Studio\\2022\\IntPreview\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe.Config\". Confirm that the path in the <Import> declaration is correct, and that the file exists on disk in one of the search paths.\r\n```\r\n\r\nError message is correct -- the targets file does not exist in `C:\\Program Files\\Microsoft Visual Studio\\2022\\IntPreview\\MSBuild\\Current\\Bin\\amd64`, but project shouldn't even try to import it, since the import condition is not met:\r\n\r\n```\r\n# line in src\\Tests\\Tests.targets\r\n<Import Project=\"$(VSToolsPath)\\TeamTest\\Microsoft.TestTools.targets\" Condition=\"'$(IsSDKStyle)' != 'true' AND Exists('$(VSToolsPath)\\TeamTest\\Microsoft.TestTools.targets')\" />\r\n```\r\n\r\nThe failing project is an SDK style project, so `IsSDKStyle` is true. Also observe that there is a condition on existence of the targets file.\r\n\r\n### Analysis\r\n<!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n-->\r\nMaybe a new behavior was introduced regarding `MSBuild.exe.Config`.\r\n\r\nI also want to note that in version:\r\n```\r\nMSBuild version 17.4.0-preview-22368-02+c8492483a for .NET Framework\r\n17.4.0.3680\r\n```\r\nI don't see this problem.\r\n\r\n### Versions & Configurations\r\n<!--\r\n* In a Visual Studio developer command prompt, run `msbuild -version` and paste the output here.\r\n* If applicable, include the version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\n* Post any other relevant configuration settings here.\r\n*   OS, architecture, etc.\r\n-->\r\n```\r\nMSBuild version 17.5.0-preview-22564-01+d14b74d6f for .NET Framework\r\n17.5.0.56401\r\n```",
  "state": "CLOSED",
  "createdAt": "2022-11-15T21:53:01Z",
  "updatedAt": "2022-11-15T21:56:28Z",
  "closedAt": "2022-11-15T21:56:02Z",
  "author": {
    "login": "youn123"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Duplicate of #8168",
        "createdAt": "2022-11-15T21:56:02Z",
        "updatedAt": "2022-11-15T21:56:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for the report. There's a workaround in https://github.com/dotnet/msbuild/issues/8168#issuecomment-1315790712.",
        "createdAt": "2022-11-15T21:56:28Z",
        "updatedAt": "2022-11-15T21:56:28Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}