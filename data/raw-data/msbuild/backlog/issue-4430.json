{
  "number": 4430,
  "title": "dotnet msbuild fails to restore from private Azure feed",
  "body": "### Steps to reproduce\r\n\r\n1. Install dotnet sdk version 3.0.100-preview5-011568\r\n2. Do `dotnet msbuild <proj>` where <proj> has a reference stored in an internal Azure feed\r\n\r\nProject file\r\n```xml\r\n<Project Sdk=\"Microsoft.DotNet.Arcade.Sdk\"/>\r\n```\r\n\r\nPackage source in nuget.config\r\n```xml\r\n<add key=\"dotnet-core\" value=\"https://pkgs.dev.azure.com/dnceng/_packaging/stable-dotnet-test-1/nuget/v3/index.json\" />\r\n```\r\n\r\n(Ping me for the token)\r\n\r\nWhen using dotnet version 2.1 the Arcade SDK is restored correctly as seen in `dotnet msbuild 2.1` of https://dev.azure.com/dnceng/internal/_build/results?buildId=219211.\r\n\r\ndotnet version 2.1 and 3.0 work fine when doing `dotnet restore <proj>` as seen in `CmdLine` of https://dev.azure.com/dnceng/internal/_build/results?buildId=217065 and https://dev.azure.com/dnceng/internal/_build/results?buildId=219105\r\n\r\nI don't really know if the issue is in msbuild, nuget or CredProvider.\r\n\r\n/fyi: @rainersigwald @zarenner",
  "state": "OPEN",
  "createdAt": "2019-06-10T23:55:46Z",
  "updatedAt": "2024-02-21T16:31:09Z",
  "closedAt": null,
  "author": {
    "login": "jcagme"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "@jcagme does your result change if you specify a version, e.g.\r\n`<Project Sdk=\"Microsoft.DotNet.Arcade.Sdk/1.0.0-beta.19306.2\" />`?\r\n\r\nI don't at all know the history here like I'm sure @rainersigwald or @jeffkl do, but at least in the original https://github.com/Microsoft/msbuild/pull/2850 implementation it looks like the nuget resolver required a version.",
        "createdAt": "2019-06-11T01:33:39Z",
        "updatedAt": "2019-06-11T01:33:39Z",
        "author": {
          "login": "zarenner"
        }
      },
      {
        "body": "It didn't fly: https://dev.azure.com/dnceng/internal/_build/results?buildId=219589&view=logs&jobId=16ce49ee-8d0d-5a76-4958-88f78392b71f&taskId=66dcdedb-fba2-5a48-ac41-285184570112&lineStart=51&lineEnd=51&colStart=6&colEnd=158\r\n\r\n`1>F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj : error MSB4236: The SDK 'Microsoft.DotNet.Arcade.Sdk/1.0.0-beta.19306.2' specified could not be found.`",
        "createdAt": "2019-06-11T03:27:13Z",
        "updatedAt": "2019-06-11T03:27:43Z",
        "author": {
          "login": "jcagme"
        }
      },
      {
        "body": "Don't know if relevant or not but found a difference, at least in the logs, of the endpoints that are attempted to get the package from a 2.1 and a 3.0 CLI: For instance:\r\n\r\n3.0\r\n```\r\nUsing C:\\Users\\vsagent\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll as a credential provider plugin.\r\n         GET https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.arcade.sdk/index.json\r\n         NotFound https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.arcade.sdk/index.json 239ms\r\n       Resolving conflicts for .NETStandard,Version=v0.0...\r\n```\r\nFull log: https://dev.azure.com/dnceng/internal/_build/results?buildId=219589\r\n\r\n2.1\r\n```\r\nUsing C:\\Users\\vsagent\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll as a credential provider plugin.\r\n         GET https://pkgs.dev.azure.com/dnceng/_packaging/7ad43c59-454f-43ff-aef9-f6015eb4704b/nuget/v3/flat2/microsoft.dotnet.arcade.sdk/index.json\r\n         GET https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.arcade.sdk/index.json\r\n         NotFound https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.arcade.sdk/index.json 65ms\r\n         OK https://pkgs.dev.azure.com/dnceng/_packaging/7ad43c59-454f-43ff-aef9-f6015eb4704b/nuget/v3/flat2/microsoft.dotnet.arcade.sdk/index.json 154ms\r\n         GET https://pkgs.dev.azure.com/dnceng/_packaging/7ad43c59-454f-43ff-aef9-f6015eb4704b/nuget/v3/flat2/microsoft.dotnet.arcade.sdk/1.0.0-beta.19306.2/microsoft.dotnet.arcade.sdk.1.0.0-beta.19306.2.nupkg\r\n         OK https://pkgs.dev.azure.com/dnceng/_packaging/7ad43c59-454f-43ff-aef9-f6015eb4704b/nuget/v3/flat2/microsoft.dotnet.arcade.sdk/1.0.0-beta.19306.2/microsoft.dotnet.arcade.sdk.1.0.0-beta.19306.2.nupkg 888ms\r\n       Resolving conflicts for .NETStandard,Version=v0.0...\r\n       Acquiring lock for the installation of Microsoft.DotNet.Arcade.Sdk 1.0.0-beta.19306.2\r\n```\r\nFull log: https://dev.azure.com/dnceng/internal/_build/results?buildId=219593\r\n\r\nEven though 3.0 doesn't log the internal feed the logged error claims it couldn't load the index from it `F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj : warning : Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/_packaging/stable-dotnet-test-1/nuget/v3/index.json.`\r\n",
        "createdAt": "2019-06-11T03:48:02Z",
        "updatedAt": "2019-06-11T03:48:02Z",
        "author": {
          "login": "jcagme"
        }
      },
      {
        "body": "This seems like something that NuGet should be looking at, since the differences seem to be happening in restore.\r\n\r\n@rrelyea @nkolev92 ",
        "createdAt": "2019-06-11T15:30:47Z",
        "updatedAt": "2019-06-11T15:30:47Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "The logs are coming from the SDK resolver. I don't know of anything that has changed there.\r\n//cc @jeffkl \r\n\r\nI don't have access ( \ud83d\ude22  ) to the logs to see if there's something obvious happening.\r\n\r\nBasically NuGet fails fast if there's a source that's unreachable. \r\nIs it possible that the plugin is not configured to support the specific feed? \r\n\r\nWhat are the versions of 2.1 and 3.0 that your testing. For all we know they could have the same exact same NuGet bits.",
        "createdAt": "2019-06-11T16:08:13Z",
        "updatedAt": "2019-06-11T16:08:13Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "This is pretty complicated.  Arcade running [eng/common/internal-feed-operations.ps1](https://dev.azure.com/dnceng/internal/_git/d551d0d5-053b-400b-99d7-56e9c6c469c4?path=%2Feng%2Fcommon%2Finternal-feed-operations.ps1&version=GBcredprov) which does the following:\r\n\r\n1. Download the Artifacts Services credential provider installer\r\n2. Run the [installcredprovider.ps1](https://raw.githubusercontent.com/microsoft/artifacts-credprovider/master/helpers/installcredprovider.ps1) script\r\n3. Harvests feed names and URLs from Versions.props and NuGet.config\r\n4. Sets environment variables that the Artifacts Services credential provider will read\r\n5. Emits an empty `restore.proj` with `<Project Sdk=\"Microsoft.DotNet.Arcade.Sdk/1.0.0-beta.19306.2\"/>`\r\n\r\nThe log then contains:\r\n\r\n```\r\nF:\\workspace\\_work\\1\\s\\.dotnet\\dotnet.exe msbuild F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj -verbosity:d\r\nMicrosoft (R) Build Engine version 16.0.462+g62fb89029d for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 6/11/2019 3:23:47 AM.\r\n     0>Resolving SDK 'Microsoft.DotNet.Arcade.Sdk/1.0.0-beta.19306.2'...\r\n       Running restore with 4 concurrent jobs.\r\n       Reading project file C:\\Users\\vsagent\\AppData\\Local\\Temp\\1b44969e-5433-48e1-838b-397efbdb772d.\r\n       Persisting no-op dg to C:\\Users\\vsagent\\AppData\\Local\\Temp\\1b44969e-5433-48e1-838b-397efbdb772d.nuget.dgspec.json\r\n       Restoring packages for C:\\Users\\vsagent\\AppData\\Local\\Temp\\1b44969e-5433-48e1-838b-397efbdb772d...\r\n       Restoring packages for .NETStandard,Version=v0.0...\r\n       Using C:\\Users\\vsagent\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll as a credential provider plugin.\r\n         GET https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.arcade.sdk/index.json\r\n         NotFound https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.arcade.sdk/index.json 239ms\r\n       Resolving conflicts for .NETStandard,Version=v0.0...\r\n     0>F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj : warning : Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/_packaging/stable-dotnet-test-1/nuget/v3/index.json.\r\n     0>F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj : error : Unable to find package Microsoft.DotNet.Arcade.Sdk. No packages exist with this id in source(s): dotnet-core-internal, nuget.org\r\n     1>Project \"F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj\" on node 1 (default targets).\r\n     1>Building with tools version \"Current\".\r\n     1>F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj : error MSB4236: The SDK 'Microsoft.DotNet.Arcade.Sdk/1.0.0-beta.19306.2' specified could not be found.\r\n     1>Done Building Project \"F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj\" (default targets) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n         F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj : warning : Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/_packaging/stable-dotnet-test-1/nuget/v3/index.json.\r\n\r\n\r\n         F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj : error : Unable to find package Microsoft.DotNet.Arcade.Sdk. No packages exist with this id in source(s): dotnet-core-internal, nuget.org\r\n\r\n\r\n       \"F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj\" (default target) (1) ->\r\n         F:\\workspace\\_work\\1\\s\\eng\\common\\restore.proj : error MSB4236: The SDK 'Microsoft.DotNet.Arcade.Sdk/1.0.0-beta.19306.2' specified could not be found.\r\n\r\n    1 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:06.95\r\n```\r\n\r\nThe SDK resolver is just calling `RestoreRunner` which ties into the configured credential provider.  The log shows the credential provider being used, so it makes me wonder if the credential provider can't provide credentials.  But the `internal-feed-operations.ps1` does not log whether or not the env vars were set.  I doubt its related to the SDK resolver, it looks like authentication isn't working which is a contract between NuGet and the credential provider.",
        "createdAt": "2019-06-11T16:20:06Z",
        "updatedAt": "2019-06-11T16:20:06Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "3.0:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\nNuGet Command Line\r\n5.1.0.0\r\n```\r\n\r\n2.1\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.503\r\n Commit:    4c506e0f35\r\nNuGet Command Line\r\n4.9.0.6\r\n```",
        "createdAt": "2019-06-11T16:20:09Z",
        "updatedAt": "2019-06-11T16:20:09Z",
        "author": {
          "login": "jcagme"
        }
      },
      {
        "body": "> But the internal-feed-operations.ps1 does not log whether or not the env vars were set.\r\n\r\nCredentials are set correctly. Two things I did to check, which are no longer in the build, 1) Printed the environment variable which was set correctly, 2) Ran the Cred Provider in standalone mode which basically checks whether it can fetch a token from envvar, VS, etc. and if it can, then it makes sure it is valid. If needed I can put these back in the build.",
        "createdAt": "2019-06-11T16:23:19Z",
        "updatedAt": "2019-06-11T16:23:35Z",
        "author": {
          "login": "jcagme"
        }
      },
      {
        "body": "FYI the cred provider does not check tokens for validity.\r\n\r\nCan you set NUGET_CREDENTIALPROVIDER_LOG_PATH (https://github.com/Microsoft/artifacts-credprovider#help) and then emit the log? I'm not sure why detailed logging isn't enough to get the credential provider's verbose output on the console, but apparently it isn't.\r\n\r\nYou're looking for either the line \r\n`Found credentials for endpoint https://pkgs.dev.azure.com/dnceng/_packaging/stable-dotnet-test-1/nuget/v3/index.json`\r\nor the line\r\n`Environment variable VSS_NUGET_EXTERNAL_FEED_ENDPOINTS did not have credentials for endpoint https://pkgs.dev.azure.com/dnceng/_packaging/stable-dotnet-test-1/nuget/v3/index.json`",
        "createdAt": "2019-06-11T18:38:59Z",
        "updatedAt": "2019-06-11T18:39:16Z",
        "author": {
          "login": "zarenner"
        }
      },
      {
        "body": "More info per preview version.\r\n\r\n3.0.100-preview-009812 (preview 2)\r\n```\r\nNuGet Command Line 5.0.0.1\r\nmsbuild 16.0.225-preview+g5ebeba52a1\r\n```\r\n\r\n3.0.100-preview3-010431 (preview3)\r\n```\r\nNuGet Command Line 5.0.0.4\r\nmsbuild 16.0.443+g5775d0d6bb\r\n```\r\n\r\n3.0.100-preview4-011223 (preview4)\r\n```\r\nNuGet Command Line 5.1.0.0\r\nmsbuild 16.1.54-preview+gd004974104\r\n```\r\n\r\n3.0.100-preview5-011568 (preview5)\r\n```\r\nNuGet Command Line 5.1.0.0\r\nmsbuild 16.0.462+g62fb89029d\r\n```\r\n\r\n3.0.100-preview6-012264 (preview6)\r\n```\r\nNuGet Command Line 5.2.0.1\r\nmsbuild 16.2.0-preview-19278-01+d635043bd\r\n```\r\n\r\nsetting the envvar for logs now...\r\n",
        "createdAt": "2019-06-11T19:25:31Z",
        "updatedAt": "2019-06-11T19:25:31Z",
        "author": {
          "login": "jcagme"
        }
      },
      {
        "body": "The other piece of the issue we are hitting is similar to https://github.com/NuGet/Home/issues/6609 where I've included information and logs about our particular scenario. Issue is closed tho...\r\n\r\n/fyi: @markwilkie ",
        "createdAt": "2019-06-12T00:14:03Z",
        "updatedAt": "2019-06-12T00:14:03Z",
        "author": {
          "login": "jcagme"
        }
      },
      {
        "body": "> Can you set NUGET_CREDENTIALPROVIDER_LOG_PATH (https://github.com/Microsoft/artifacts-credprovider#help) and then emit the log? I'm not sure why detailed logging isn't enough to get the credential provider's verbose output on the console, but apparently it isn't.\r\n\r\nI tried a bunch of different things and the only logs flushed into the file are those of running the CredProvider tool in standalone mode:\r\n\r\n```\r\n[Verbose] [CredentialProvider]Running in stand-alone mode\r\n[Verbose] [CredentialProvider]Command-line v0.1.17: c:\\users\\user\\.nuget\\plugins\\netcore\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.dll -U https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json -R -V Debug\r\n[Verbose] [CredentialProvider]Handling auth request, Uri: https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json, IsRetry: False, IsNonInteractive: False, CanShowDialog: False\r\n[Verbose] [CredentialProvider]URI: https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Verbose] [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - This credential provider must be run under the Team Build tasks for NuGet with external endpoint credentials. Appropriate environment variable needs to be set.\r\n[Verbose] [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider, cannot provide credentials for https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Verbose] [CredentialProvider]VstsBuildTaskCredentialProvider - This credential provider must be run under the Team Build tasks for NuGet. Appropriate environment variables must be set.\r\n[Verbose] [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.VstsBuildTask.VstsBuildTaskCredentialProvider, cannot provide credentials for https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Verbose] [CredentialProvider]GET https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Verbose] [CredentialProvider]IsRetry: False\r\n[Verbose] [CredentialProvider]Could not find cached SessionToken for https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Verbose] [CredentialProvider]GET https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Verbose] [CredentialProvider]Found AAD Authority from 401 headers: https://login.windows.net/GUID\r\n[Verbose] [CredentialProvider]VstsCredentialProvider - Using AAD authority: https://login.windows.net/GUID\r\n[Verbose] [CredentialProvider]VstsCredentialProvider - Attempting to acquire bearer token using provider 'ADAL Cache'\r\n[Verbose] [CredentialProvider]VstsCredentialProvider - Bearer token provider 'ADAL Cache' didn't acquire a token\r\n[Verbose] [CredentialProvider]VstsCredentialProvider - Attempting to acquire bearer token using provider 'ADAL Windows Integrated Authentication'\r\n[Information] [CredentialProvider]VstsCredentialProvider - Acquired bearer token using 'ADAL Windows Integrated Authentication'\r\n[Information] [CredentialProvider]VstsCredentialProvider - Attempting to exchange the bearer token for an Azure DevOps session token.\r\n[Verbose] [CredentialProvider]Requesting a SelfDescribing token valid for duration 04:00:00, valid until 6/12/2019 4:07:53 AM UTC. Note that the generated token may have different validity than requested.\r\n[Verbose] [CredentialProvider]GET https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Verbose] [CredentialProvider]VstsCredentialProvider - Found SessionToken for https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Verbose] [CredentialProvider]Caching SessionToken for https://pkgs.dev.azure.com/****/_packaging/****/nuget/v3/index.json\r\n[Information] [CredentialProvider]Username: VssSessionToken\r\n[Information] [CredentialProvider]Password: [REDACTED]\r\n```",
        "createdAt": "2019-06-12T00:17:55Z",
        "updatedAt": "2019-06-12T00:17:55Z",
        "author": {
          "login": "jcagme"
        }
      },
      {
        "body": "This is a verbose log build with shows that the PAT was set correctly since CredProvider was able to read it from the envvar so auth is fine (I think). Now, during `msbuild /t:restore` we get \r\n`\r\n\u201cNuGet.Protocol.Core.Types.FatalProtocolException: Failed to retrieve information about 'Microsoft.DotNet.Build.Tasks.Feed' from remote source 'https://dnceng.pkgs.visualstudio.com/_packaging/a5d2de38-9eb4-419b-98f6-6a69c4bd0eb9/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json'. ---> System.Threading.Tasks.TaskCanceledException: A task was canceled.\u201d\r\n`",
        "createdAt": "2019-06-27T22:26:45Z",
        "updatedAt": "2019-06-27T22:26:45Z",
        "author": {
          "login": "jcagme"
        }
      },
      {
        "body": "Possibly related to https://github.com/NuGet/Home/issues/8198\r\n",
        "createdAt": "2019-07-01T14:05:56Z",
        "updatedAt": "2019-07-01T14:05:56Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Maybe there's an issue here with a similar root cause as https://github.com/NuGet/Home/issues/8688.\r\nThe plugin also sets up a credential service, which is where the leak is. \r\n\r\nThe fix for https://github.com/NuGet/Home/issues/8688 will also include some resolver fixes. ",
        "createdAt": "2019-10-14T18:30:01Z",
        "updatedAt": "2019-10-14T18:30:01Z",
        "author": {
          "login": "nkolev92"
        }
      }
    ]
  }
}