{
  "number": 3233,
  "title": "[Unix] MSBuild should escape/sanitize environment variables when logging them",
  "body": "### Steps to reproduce\r\n\r\nWhen running msbuild in a Unix terminal emulator with environment containing variables whose values contain ANSI color escapes, colors of the diagnostic\r\noutput are ruined because msbuild outputs the variables and their values verbatim to stdout. I have a number of variables in the environment which contain\r\nsuch escapes, but it appears that this is the minimal set which triggers the behavior:\r\n\r\n```\r\nCLUTTER_IM_MODULE=xim\r\nGIT_PROMPT_FETCH_REMOTE_STATUS=0\r\nLD_LIBRARY_PATH=/home/grendel/devel/mono/mono-master/lib:\r\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:\r\nLESSCLOSE=/usr/bin/lesspipe %s %s\r\nANDROID_HOST_PLATFORM=linux-x86_64\r\nHISTCONTROL=ignoreboth\r\nLESS=-R\r\nCOLORTERM=truecolor\r\nXDG_VTNR=2\r\nLESS_TERMCAP_so=\r\nLESS_TERMCAP_se=\r\nMANPAGER=less -s -M +Gg\r\nLESS_TERMCAP_mb=\r\nLESS_TERMCAP_md=\r\nLESS_TERMCAP_me=\r\nLESS_TERMCAP_mh=\r\nLESS_TERMCAP_mr=\r\nTERM=xterm-256color\r\nVTE_VERSION=5201\r\nSHELL=/bin/bash\r\nSHLVL=1\r\nLESS_TERMCAP_ue=\r\nLESS_TERMCAP_us=\r\nLESS_TERMCAP_ZW=\r\nLESS_TERMCAP_ZV=\r\nLESS_TERMCAP_ZO=\r\nLESS_TERMCAP_ZN=\r\nLESSOPEN=| /usr/bin/lesspipe %s\r\n\r\n```\r\n\r\nIn particular, removing the following variable:\r\n\r\n```\r\nLESS_TERMCAP_us=$'\\E[4m\\E[1m\\E[33m'\r\n```\r\n\r\nfixes `msbuild` output colors. MSBuild should escape the ANSI codes when logging to console to avoid this kind of side effect on the output. Screenshot below shows\r\nthe corrupted output (terminal is mate-terminal, based on GNOME VTE library)\r\n\r\n![screenshot at 2018-04-25 23-21-39](https://user-images.githubusercontent.com/184788/39274314-ddf2d928-48e1-11e8-9ef1-6da20161ab03.png)\r\n\r\n### Expected  behavior\r\n\r\nOutput colors should not be affected by contents of the environment variables.\r\n\r\n### Actual behavior\r\n\r\nOutput colors are all replaced by underscored bright yellow color.\r\n\r\n### Environment data\r\n```\r\n$ msbuild -version\r\nMicrosoft (R) Build Engine version 15.6.0.0 ( Fri Apr  6 15:55:10 UTC 2018) for Mono\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n```\r\n\r\nOS info:\r\n\r\nUbuntu Linux 18.04 64-bit (and earlier), also reproduced in Debian and Arch. The issue is independent on Linux distribution most probably\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\nCLI\r\n",
  "state": "CLOSED",
  "createdAt": "2018-04-25T21:43:14Z",
  "updatedAt": "2024-10-04T16:18:50Z",
  "closedAt": "2024-10-04T16:18:50Z",
  "author": {
    "login": "grendello"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This seems entirely reasonable. It may also affect Windows, if we ever start setting [`ENABLE_VIRTUAL_TERMINAL_PROCESSING`](https://docs.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) there.\r\n\r\nBut I do note that `env` doesn't escape either:\r\n\r\n![image](https://user-images.githubusercontent.com/3347530/39374392-4f6e5ee0-4a10-11e8-82d9-c566112d0b4d.png)\r\n",
        "createdAt": "2018-04-27T16:44:24Z",
        "updatedAt": "2018-04-27T16:44:24Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Since this only affects console logging at high verbosities (don't do that, use a binlog :)) and we're not inconsistent with other tooling, I don't think we're likely to change it.",
        "createdAt": "2024-10-04T16:18:50Z",
        "updatedAt": "2024-10-04T16:18:50Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}