{
  "number": 8936,
  "title": "[Bug]: Resource generation with DependentUpon doesn't support record types",
  "body": "### Issue Description\r\n\r\nWe use CQRS in our applications and decided to place the handlers together with their requests and validators in the same file.  Our resources are \"grouped\" per request using `<EmbeddedResource Include=\"Request.resx\" DependentUpon=\"Request.cs\"/>`. \r\n\r\nHowever just moving one class from one source file to another, this caused an unexpected bug in our application by which certain resources could no longer be found. It turned out the resources got a different name in some cases.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nHave the following resource files (contents don't matter):\r\n\r\n- RequestClass.resx\r\n- RequestClass.nl.resx\r\n- RequestRecord.resx\r\n- RequestRecord.nl.resx\r\n\r\nProject file `MyProject.csproj`:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n   <EmbeddedResource Update=\"RequestClass.resx\"><DependentUpon>RequestClass.cs</DependentUpon></EmbeddedResource>\r\n   <EmbeddedResource Update=\"RequestClass.nl.resx\"><DependentUpon>RequestClass.cs</DependentUpon></EmbeddedResource>\r\n   <EmbeddedResource Update=\"RequestRecord.resx\"><DependentUpon>RequestRecord.cs</DependentUpon></EmbeddedResource>\r\n   <EmbeddedResource Update=\"RequestRecord.nl.resx\"><DependentUpon>RequestRecord.cs</DependentUpon></EmbeddedResource>\r\n</Project>\r\n```\r\n\r\nRequestClass.cs:\r\n\r\n```C#\r\npublic sealed class RequestClass { }\r\n\r\npublic sealed class RequestClassValidator { }\r\n```\r\n\r\nRequestRecord.cs:\r\n\r\n```C#\r\npublic sealed record RequestRecord();\r\n\r\npublic sealed class RequestRecordValidator { }\r\n```\r\n\r\nBuild the project (`dotnet build`) and open de binary in a decompiler like JetBrains dotPeek and open the listing of the resource files.\r\n\r\n\r\n### Expected Behavior\r\n\r\nListed resource files:\r\n\r\n- MyProject.RequestClass.resources\r\n- MyProject.RequestRecord.resources\r\n\r\n### Actual Behavior\r\n\r\n\r\nListed resource files:\r\n\r\n- MyProject.RequestClass.resources\r\n- MyProject.RequestRecordValidator.resources\r\n\r\n### Analysis\r\n\r\nThe task `CreateCSharpManifestResourceName` parses a part of the source code in the source file to extract the class name. When it fails to do so, it falls back to the file name of the source class. \r\n\r\nhttps://github.com/dotnet/msbuild/blob/227092b45a18b5892638d87fe4bc1b07ac4f8d96/src/Tasks/CreateCSharpManifestResourceName.cs#L112-L134\r\n\r\nPreviously it worked fine by accident: It didn't recognize any class (because it didn't parse records) and fell back to the file name. However, now we've moved the related classes together in the same file it found the first class in the file (`RequestRecordValidator`) and decided that should be the manifest resource name.\r\n\r\nWorkarounds\r\n\r\n- Manually set the ManifestResourceName property\r\n- If you change `public sealed record RequestRecord` to `public sealed record class RequestRecord` it works as expected\r\n\r\n### Versions & Configurations\r\n\r\n_No response_",
  "state": "OPEN",
  "createdAt": "2023-06-22T06:16:03Z",
  "updatedAt": "2024-01-31T08:14:03Z",
  "closedAt": null,
  "author": {
    "login": "Sebazzz"
  },
  "labels": [
    "bug",
    "backlog",
    "Priority:3",
    "triaged",
    "gathering-feedback"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team triage: Thank you for the filing the bug and for the great analysis!\r\nThis issue currently doesn't meet bar for fixing, but we are leaving this open for upvotes.",
        "createdAt": "2023-06-27T14:54:15Z",
        "updatedAt": "2023-06-27T14:54:15Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}