{
  "number": 790,
  "title": "Refactor ExecuteInstantiatedTask exception handling",
  "body": "There's a great deal of logic in `ExecuteInstantiatedTask` designed to handle exceptions thrown by tasks: https://github.com/Microsoft/msbuild/blob/4b30fac51ab58dadfffedb2a57e83b8398e3a5e1/src/XMakeBuildEngine/BackEnd/Components/RequestBuilder/TaskBuilder.cs#L720\n\nIncluded in a lot of that logic is \"rethrow wrapped to preserve stack\", which was required in C# before C# 6. But now we have exception filters, which could simplify this logic and preserve stacks for free.\n\nThis is an important part of failure handling, so we'd need to make sure the right behavior from the existing logic is preserved.\n",
  "state": "OPEN",
  "createdAt": "2016-07-19T15:41:43Z",
  "updatedAt": "2024-02-21T16:38:29Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "help wanted",
    "Area: Debuggability",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": []
  }
}