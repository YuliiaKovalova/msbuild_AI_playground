{
  "number": 4286,
  "title": "System.MissingMethodException in MSBuild bundled with VS2019",
  "body": "On fresh installation of VS2019, when trying to build project from VS Console, I'm getting following error on every solution:\r\n\r\n```csharp\r\nSystem.MissingMethodException: Method not found: 'Void Microsoft.Build.Evaluation.ProjectCollection..ctor(System.Collections.Generic.IDictionary`2<System.String,System.String>, System.Collections.Generic.IEnumerable`1<Microsoft.Build.Framework.ILogger>, System.Collections.Generic.IEnumerable`1<Microsoft.Build.Logging.ForwardingLoggerRecord>, Microsoft.Build.Evaluation.ToolsetDefinitionLocations, Int32, Boolean, Boolean)'.\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler, Boolean interactive, Boolean isolateProjects, Boolean graphBuild, String[] inputResultsCaches, String outputResultsCache)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String commandLine)\r\n\r\nUnhandled Exception: System.MissingMethodException: Method not found: 'Void Microsoft.Build.Evaluation.ProjectCollection..ctor(System.Collections.Generic.IDictionary`2<System.String,System.String>, System.Collections.Generic.IEnumerable`1<Microsoft.Build.Framework.ILogger>, System.Collections.Generic.IEnumerable`1<Microsoft.Build.Logging.ForwardingLoggerRecord>, Microsoft.Build.Evaluation.ToolsetDefinitionLocations, Int32, Boolean, Boolean)'.\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler, Boolean interactive, Boolean isolateProjects, Boolean graphBuild, String[] inputResultsCaches, String outputResultsCache)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String commandLine)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main()\r\n```\r\nWhen trying to open solution directly from VS, projects are failing to load, and MSBuild just crashes.\r\nThere is also ongoing discussion about this here: \r\nhttps://developercommunity.visualstudio.com/content/problem/500131/0-projects-in-solution-explorer-in-visual-studio-2.html",
  "state": "CLOSED",
  "createdAt": "2019-04-04T16:49:39Z",
  "updatedAt": "2024-02-21T17:08:45Z",
  "closedAt": "2019-04-05T06:30:58Z",
  "author": {
    "login": "Hubert-Rybak"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Can you please download and run https://github.com/Microsoft/msbuild/blob/master/scripts/EnumerateMSBuild.ps1 and post the results? I suspect you have an old version of MSBuild installed in your GAC.",
        "createdAt": "2019-04-04T17:02:31Z",
        "updatedAt": "2019-04-04T17:02:31Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Output: https://gist.github.com/Hubert-Rybak/efcda923cd3c06e0b9817bc26f4d10cb",
        "createdAt": "2019-04-04T20:22:04Z",
        "updatedAt": "2019-04-04T20:22:04Z",
        "author": {
          "login": "Hubert-Rybak"
        }
      },
      {
        "body": "Thank you, that shows the problem. You have MSBuild assemblies in your Global Assembly Cache, which they're not designed for.\r\n\r\nYou can run these commands from an elevated Developer Command Prompt to remove them:\r\n\r\n```\r\ngacutil /u \"MSBuild, Version=15.1.0.0\"\r\ngacutil /u \"Microsoft.Build.Conversion.Core, Version=15.1.0.0\"\r\ngacutil /u \"Microsoft.Build, Version=15.1.0.0\"\r\ngacutil /u \"Microsoft.Build.Engine, Version=15.1.0.0\"\r\ngacutil /u \"Microsoft.Build.Tasks.Core, Version=15.1.0.0\"\r\ngacutil /u \"Microsoft.Build.Utilities.Core, Version=15.1.0.0\"\r\ngacutil /u \"Microsoft.Build.Framework, Version=15.1.0.0\"\r\n```\r\n\r\nAfter that, VS 2017 and VS 2019 will be able to each have their own copy of MSBuild and they won't interfere with one another.",
        "createdAt": "2019-04-04T20:35:57Z",
        "updatedAt": "2019-04-04T20:35:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks, it helped! Something must gone wrong during VS2019 install or VS2017 uninstall.",
        "createdAt": "2019-04-05T06:30:58Z",
        "updatedAt": "2019-04-05T06:30:58Z",
        "author": {
          "login": "Hubert-Rybak"
        }
      },
      {
        "body": "Fresh install of VS2019 preview 5 and I had same problem.\r\nFix from @rainersigwald  solved it.\r\nI'm not aware of anything I did within VS2017 to place MSBuild assemblies in your Global Assembly Cache.\r\nWould be good if the VS2019 install automatically checked this",
        "createdAt": "2019-04-05T09:36:37Z",
        "updatedAt": "2019-04-05T09:36:37Z",
        "author": {
          "login": "kerrpeter"
        }
      },
      {
        "body": "> Would be good if the VS2019 install automatically checked this\r\n\r\nI agree. Unfortunately, the current VS setup process doesn't make this easy to do. We'll sync with the Setup team again to see if our options have improved there.",
        "createdAt": "2019-04-05T14:12:37Z",
        "updatedAt": "2019-04-05T14:12:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I am using the latest Rider version (2019.3 EAP 4; At the time of this comment) and have not been able to utilize WinForms at all since I removed VS2019 for being too broken on my system months ago. Since then I have had no space to even reconsider VS2019 as the SSD I am working with is far too small (Yes I have been considering a newer SSD, one with more space... sosumi)\r\n\r\nCurrently I can only do Console Applications, nothing requiring even a spec of GUI libraries. So far, I have had no luck in using the latest version of MSBuild other than through the Dotnet SDK 2.2.202 which I assume now is not the latest version anymore, however it does not build GUIs. I had installed MSBuild separately which installed it into the VS2019 folder on my workstation, however I get the following error:    https://gist.github.com/Blizzardo1/55a73801b733d5b7a12dafc0e553a9c7\r\n\r\nBy googling it had lead me here and thus I ran the EnumerateMSBuild script which got me the following output:    https://gist.github.com/Blizzardo1/5d97e68fe7119394d696c90d73b4f8c0\r\n\r\nPlease let me know what I can do to finally fix this 6 month issue once and for all.\r\n\r\nThank you.\r\n\r\n**EDIT**: Looking at one of the suggestions above to use gacutil (me not having it installed as I do not have VisualStudio 2019 installed), I had taken the Microsoft.NET list portion of my msbuild_version (Which I backed up the entire folder for safety reasons), converted it into a CSV, loaded into a powershell session, and began to remove anything 12 or later from the folder, only to leave anything less than 12, for compatibility I guess or something like such. From there, I restarted Rider, and .... it works! WinForms all the way just like the Double Rainbow.",
        "createdAt": "2019-11-18T00:41:49Z",
        "updatedAt": "2019-11-18T01:13:55Z",
        "author": {
          "login": "Blizzardo1"
        }
      }
    ]
  }
}