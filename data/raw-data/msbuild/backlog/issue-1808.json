{
  "number": 1808,
  "title": "`dotnet msbuild` commands sometimes hang after writing MSBuild_*.failure.txt files",
  "body": "_From @dougbu on February 25, 2017 23:21_\n\n## Steps to reproduce\r\n1. clone the [MVC repo](https://github.com/aspnet/Mvc) (https://github.com/aspnet/Mvc.git)\r\n2. checkout the `dougbu/does.it.hang.yes.it.does` branch\r\n3. initialize the build and restore everything: `.\\build.cmd initialize`\r\n4. either use `build.cmd` to compile (this involves wrapper / waiting `sake.exe` and `dotnet` processes) or run inner MsBuild command with stderr redirected. I.e. execute one of\r\n  - `.\\build.cmd build-compile`\r\n  - `dotnet msbuild /nologo \"C:\\dd\\dnx\\Universe\\Mvc\\.build/makefile.proj\" \"/p:LifecycleType=Standard;Configuration=Debug\" /t:Compile 2>build.err`\r\n\r\nHave similar issues with `2>&1 |tee build.log`, `|tee build.log` or `2>&1` in the second case. The unadorned second command and that with `2>build.err >build.log` usually work fine.\r\n\r\n## Expected  behavior\r\nBuild completes and exits cleanly.\r\n\r\nErrors and warnings during the build are expected as well, especially MSB3277 due to .Microsoft/vstest#393 or perhaps because Mvc.Core project depends on Microsoft.Extensions.DependencyModel version `1.2.0-*` while the xUnit runner uses version `1.1.0`.\r\n\r\n## Actual behavior\r\nCommands hang consistently. (Hang may take some work in Task Manager due to dotnet/cli#4856.)\r\n\r\nIt's not predictable what project is last mentioned in `build.log`. But, hangs seem to occur when the build is near its end.\r\n\r\nThere's never just one `dotnet` process when hangs occur. Usually see the original command, the `dotnet exec` command (to invoke the latest copy of `dotnet.exe`), and at least one of the worker processes.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Command Line Tools (1.0.0-rc4-004883)\r\n\r\nProduct Information:\r\n Version:            1.0.0-rc4-004883\r\n Commit SHA-1 hash:  fa2c9e025c\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\dougbu\\AppData\\Local\\Microsoft\\dotnet\\sdk\\1.0.0-rc4-004883\r\n```\r\n\r\n## Additional information\r\nI have process dumps captured in Visual Studio and Task Manager. If they will help, contact me at my Microsoft email (same alias as here) and I'll share.\r\n\r\nProblems appear specific to this branch. Command-line builds complete reliably in the `dougbu/migration` branch for example. I cleaned up some `dotnet migrate` artifacts in the `dougbu/migration` branch and the `*.sln` files are different. But, largest change is probably a fix that's only in the `dougbu/migration` branch to build just `Mvc.sln` and not all three solutions.\n\n_Copied from original issue: dotnet/cli#5849_",
  "state": "CLOSED",
  "createdAt": "2017-03-07T18:09:39Z",
  "updatedAt": "2024-02-21T17:21:05Z",
  "closedAt": "2017-05-04T22:40:19Z",
  "author": {
    "login": "dougbu"
  },
  "labels": [
    "bug",
    "under-investigation",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "FYI @Eilon this is the hang we discussed a couple of days back.",
        "createdAt": "2017-03-07T18:09:39Z",
        "updatedAt": "2017-03-07T18:09:39Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "Behaviour more consistent after I rebased `dougbu/does.it.hang.yes.it.does` to include latest from the Mvc `dev` branch. Problems now sometimes reproduce without redirects. Likely the redirects just change timings slightly and previously made races occur more often.\r\n\r\n> But, largest change is probably a fix that's only in the `dougbu/migration` branch to build just Mvc.sln and not all three solutions.\r\n\r\nI tested in the `dougbu/migration` branch after backing out that fix. No hangs.",
        "createdAt": "2017-03-07T18:09:40Z",
        "updatedAt": "2017-03-07T18:09:40Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "Just saw a message about `MSBuild_*.failure.txt` files written into `$env:temp`. These messages aren't normally output. But, I've got files for all or most hangs I've experienced this morning. Contents include\r\n```\r\nUNHANDLED EXCEPTIONS FROM PROCESS 16096:\r\n=====================\r\n2/27/2017 09:27:51\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.Build.BackEnd.NodePacketTranslator.SerializedException.ToException(SerializedException serializedException)\r\n   at Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateException(Exception& value)\r\n   at Microsoft.Build.Execution.BuildResult.Microsoft.Build.BackEnd.INodePacketTranslatable.Translate(INodePacketTranslator translator)\r\n   at Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Translate[T](T& value)\r\n   at Microsoft.Build.BackEnd.BuildRequestUnblocker.Translate(INodePacketTranslator translator)\r\n   at Microsoft.Build.BackEnd.BuildRequestUnblocker.FactoryForDeserialization(INodePacketTranslator translator)\r\n   at Microsoft.Build.BackEnd.NodePacketFactory.PacketFactoryRecord.DeserializeAndRoutePacket(Int32 nodeId, INodePacketTranslator translator)\r\n   at Microsoft.Build.BackEnd.NodePacketFactory.DeserializeAndRoutePacket(Int32 nodeId, NodePacketType packetType, INodePacketTranslator translator)\r\n   at Microsoft.Build.Execution.OutOfProcNode.Microsoft.Build.BackEnd.INodePacketFactory.DeserializeAndRoutePacket(Int32 nodeId, NodePacketType packetType, INodePacketTranslator translator)\r\n   at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stream localWritePipe, Queue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTerminatePacketPump)\r\n===================\r\n```\r\nand / or (or is much more common)\r\n```\r\nUNHANDLED EXCEPTIONS FROM PROCESS 16360:\r\n=====================\r\n2/27/2017 09:37:13\r\nMicrosoft.Build.Shared.InternalErrorException: MSB0001: Internal MSBuild Error: Items already exist for target CoreBuild.\r\n   at Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(String message, Object[] args)\r\n   at Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(Boolean condition, String unformattedMessage, Object arg0)\r\n   at Microsoft.Build.Execution.BuildResult.AddResultsForTarget(String target, TargetResult result)\r\n   at Microsoft.Build.BackEnd.TargetBuilder.<ProcessTargetStack>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.Build.BackEnd.TargetBuilder.<BuildTargets>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.Build.BackEnd.RequestBuilder.<BuildProject>d__57.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.Build.BackEnd.RequestBuilder.<BuildAndReport>d__49.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.Build.BackEnd.RequestBuilder.<RequestThreadProc>d__48.MoveNext()\r\n===================\r\n```\r\n\r\nOf course, these failures should not result in hangs.",
        "createdAt": "2017-03-07T18:09:40Z",
        "updatedAt": "2017-03-07T18:09:40Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "@pranavkm please add your smaller (IdentityServer) repro steps to this bug.",
        "createdAt": "2017-03-07T18:11:16Z",
        "updatedAt": "2017-03-07T18:11:16Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "Renamed issue because redirection is not required to see the hangs.",
        "createdAt": "2017-03-07T18:12:16Z",
        "updatedAt": "2017-03-07T18:12:16Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "/cc @piotrpMSFT since you put the old bug into a milestone.",
        "createdAt": "2017-03-07T18:13:12Z",
        "updatedAt": "2017-03-07T18:13:12Z",
        "author": {
          "login": "dougbu"
        }
      },
      {
        "body": "Saw this in our CI and locally recently when building this specific commit https://github.com/aspnet/IdentityService/commit/7f3707520cc5bba05947ef8a660b3c41eb5968a7:\r\n\r\n1. `src\\Microsoft.AspNetCore.Identity.Service\\Microsoft.AspNetCore.Identity.Service.csproj` failed to compile due to `TreatWarningsAsErrors`: \r\n```\r\nApplicationManager.cs(13,22): error CS0649: Field 'ApplicationManager<TApplication>._disposed' is never assigned to, and will always have its default value false [IdentityService\\src\\Microsoft.AspNetCore.Identity.Service\\Microsoft.AspNetCore.Identity.Service.csproj]\r\n```\r\n2. Projects referencing it failed to build. The error message doesn't seem particularly correct:\r\n```\r\ndotnet\\sdk\\1.0.0\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Sdk.targets(92,5): error : Cannot find project info for 'IdentityService\\src\\Microsoft.AspNetCore.Identity.Service\\Microsoft.AspNetCore.Identity.Service.csproj'. This can indicate a missing project reference. [IdentityService\\src\\Microsoft.AspNetCore.Identity.Service.EntityFrameworkCore\\Microsoft.AspNetCore.Identity.Service.EntityFrameworkCore.csproj]\r\ndotnet\\sdk\\1.0.0\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Sdk.targets(92,5): error : Cannot find project info for 'IdentityService\\src\\Microsoft.AspNetCore.Identity.Service\\Microsoft.AspNetCore.Identity.Service.csproj'. This can indicate a missing project reference. [IdentityService\\test\\Microsoft.AspNetCore.Identity.Service.Test\\Microsoft.AspNetCore.Identity.Service.Test.csproj]\r\n```\r\n\r\nMSBuild prints this error and ends up hanging. Our CI eventually killed it after 240 minutes of inactivity:\r\n`MSBUILD : error MSB4166: Child node \"5\" exited prematurely. Shutting down. Diagnostic information may be found in files in the temporary files directory named MSBuild_*.failure.txt.`\r\n\r\nFailure log file says:\r\n```\r\nUNHANDLED EXCEPTIONS FROM PROCESS 150400:\r\n=====================\r\n3/7/2017 8:41:02 AM\r\nMicrosoft.Build.Shared.InternalErrorException: MSB0001: Internal MSBuild Error: Items already exist for target CoreBuild.\r\n   at Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(String message, Object[] args)\r\n   at Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(Boolean condition, String unformattedMessage, Object arg0)\r\n   at Microsoft.Build.Execution.BuildResult.AddResultsForTarget(String target, TargetResult result)\r\n   at Microsoft.Build.BackEnd.TargetBuilder.<ProcessTargetStack>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.Build.BackEnd.TargetBuilder.<BuildTargets>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.Build.BackEnd.RequestBuilder.<BuildProject>d__57.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.Build.BackEnd.RequestBuilder.<BuildAndReport>d__49.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.Build.BackEnd.RequestBuilder.<RequestThreadProc>d__48.MoveNext()\r\n===================\r\n```\r\n\r\n",
        "createdAt": "2017-03-07T18:19:40Z",
        "updatedAt": "2017-03-07T18:19:40Z",
        "author": {
          "login": "pranavkm"
        }
      },
      {
        "body": "This happened again today with MSBuild 15.2.47.30403 on .NET Core. I've gathered process dumps of MSBuild in its hung state. Let me know if you'd like me to email them to you.",
        "createdAt": "2017-03-27T20:38:34Z",
        "updatedAt": "2017-03-27T20:38:34Z",
        "author": {
          "login": "natemcmaster"
        }
      },
      {
        "body": "# Simplified Repro Steps\r\n1. VM with clean Win10\r\n2. Install .NET 4.5.1 and 4.5.2 targeting packs\r\n  A. https://www.microsoft.com/en-us/download/details.aspx?id=40772\r\n  B. https://www.microsoft.com/en-us/download/details.aspx?id=42637\r\n3. Unzip https://dotnetcli.azureedge.net/dotnet/Sdk/2.0.0-preview1-005724/dotnet-dev-win-x64.2.0.0-preview1-005724.zip\r\n4. git clone https://github.com/aspnet/IdentityService\r\n5. cd IdentityService\r\n6. git checkout 7f3707520cc5bba05947ef8a660b3c41eb5968a7 (known good commit)\r\n7. ..\\dotnet-dev-win-x64.2.0.0-preview1-005724\\dotnet.exe restore /p:TargetFrameworks=netcoreapp1.1\r\n8. ..\\dotnet-dev-win-x64.2.0.0-preview1-005724\\dotnet.exe build /p:TargetFrameworks=netcoreapp1.1\r\n",
        "createdAt": "2017-04-07T19:05:44Z",
        "updatedAt": "2017-04-07T19:05:44Z",
        "author": {
          "login": "mikeharder"
        }
      },
      {
        "body": "@AndyGerlicher does 1022b48 correct MSBuild hangs in general? Or, is it a targeted fix for hangs during compilation? I ask because we've seen hangs while MSBuild is testing projects and / or without *.failure.txt files.\r\n\r\nSticking to the *.failure.txt cases, does 1022b48 avoid both stack traces shown in my [comment above](https://github.com/Microsoft/msbuild/issues/1808#issuecomment-284806981)?\r\n\r\nAnd, which MSBuild release will include 1022b48?",
        "createdAt": "2017-05-04T23:00:59Z",
        "updatedAt": "2017-05-04T23:00:59Z",
        "author": {
          "login": "dougbu"
        }
      }
    ]
  }
}