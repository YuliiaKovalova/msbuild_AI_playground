{
  "number": 7219,
  "title": "Properties and items logged at evaluation with legacy loggers for single-process builds",
  "body": "We have an unexpected behavior for single-process builds (/bl), where if there are legacy loggers that haven't opted in via `IEventSource4.IncludeEvaluationPropertiesAndItems()`, and the environment variable `MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION` is not set, we still enable the new behavior if there is at least one \"enlightened\" logger.\r\n\r\nSee test results here:\r\nhttps://github.com/dotnet/msbuild/pull/7217#issuecomment-1005345899\r\n\r\nSee related:\r\n * https://github.com/dotnet/msbuild/pull/6520\r\n * https://github.com/dotnet/msbuild/issues/6498",
  "state": "OPEN",
  "createdAt": "2022-01-05T03:19:33Z",
  "updatedAt": "2024-01-31T08:18:52Z",
  "closedAt": null,
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "Area: Debuggability",
    "For consideration",
    "Area: Logging",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Looked at this a bit this morning. Loggers work with an event-based approach, where one \"SourceSink\" of events can feed multiple loggers.\r\n\r\nFor a build with the default console logger, the binlog, and a random unenlightened logger, I see only one `_eventSinkDictionary` here:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b827bf58c21f7a38770d786848c76f771d995a94/src/Build/BackEnd/Components/Logging/LoggingService.cs#L528-L530\r\n\r\nI can also see the `ProjectCollection.ReusableLogger`'s internal state here\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b827bf58c21f7a38770d786848c76f771d995a94/src/Build/Definition/ProjectCollection.cs#L2054\r\n\r\ngetting toggled while registering the `ParallelConsoleLogger`.\r\n\r\nThe second logger gets registered through this path:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b827bf58c21f7a38770d786848c76f771d995a94/src/Build/BackEnd/Components/Logging/LoggingService.cs#L926-L931\r\n\r\nSo it sees only the `EventSourceSink` created in the first logger, which had `IncludeEvaluationPropertiesAndItems` toggled on.\r\n\r\nIn the multiproc case, we actually pass only the non-console loggers to the ProjectCollection, because the console logger is a `DistributedLoggerRecord` which are treated separately\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b827bf58c21f7a38770d786848c76f771d995a94/src/MSBuild/XMake.cs#L3202-L3220\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b827bf58c21f7a38770d786848c76f771d995a94/src/MSBuild/XMake.cs#L1027-L1030\r\n\r\nand passed to the `BuildParameters` rather than the `ProjectCollection`\r\n\r\nhttps://github.com/dotnet/msbuild/blob/b827bf58c21f7a38770d786848c76f771d995a94/src/MSBuild/XMake.cs#L1168\r\n\r\nSo I think the current filtering mechanism just doesn't work, and we've been squeaking by with luck :(",
        "createdAt": "2022-01-05T16:29:13Z",
        "updatedAt": "2022-01-05T16:29:13Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for looking. When I added support for IncludePropertiesAndItems I copy pasted existing support for other settings, which probably have the same issue :|",
        "createdAt": "2022-01-05T16:48:25Z",
        "updatedAt": "2022-01-05T16:48:25Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I just noticed that `MuxLogger.SubmissionRecord` only supports IEventSource2. \r\n\r\nI think It needs to be enlightened to support IEventSource4:\r\nhttps://github.com/dotnet/msbuild/blob/2cbc8b6aef648cf21c6a68a0dab7fe09a614e475/src/Utilities/MuxLogger.cs#L339\r\n\r\nHere I think:\r\nhttps://github.com/dotnet/msbuild/blob/2cbc8b6aef648cf21c6a68a0dab7fe09a614e475/src/Utilities/MuxLogger.cs#L1336",
        "createdAt": "2023-04-18T21:25:36Z",
        "updatedAt": "2023-04-18T21:25:36Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Hmm, that's probably fine. I'm not even sure what SubmissionRecord is used for or whether that is relevant in any way.",
        "createdAt": "2023-04-18T21:48:08Z",
        "updatedAt": "2023-04-18T21:48:08Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}