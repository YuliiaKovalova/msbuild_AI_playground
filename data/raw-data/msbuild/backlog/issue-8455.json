{
  "number": 8455,
  "title": "[LiveLogger] Garbled output in cmd.exe",
  "body": "### Issue Description\n\nLiveLogger does not work in cmd.exe.\n\n### Steps to Reproduce\n\n`dotnet build /ll` in cmd.exe.\n\n### Expected Behavior\n\nEither LiveLogger errors out or MSBuild falls back to regular console logging.\n\n### Actual Behavior\n\nMy first attempt to use LiveLogger resulted in this:\r\n\r\n![image](https://user-images.githubusercontent.com/12206368/219328641-5daea853-97d2-4962-9912-3a660c1e6a1a.png)\r\n\n\n### Analysis\n\nIf this console is not fancy-capable then the logger should not be allowed to run. Note that you still get this kind of console when running the VS Developer prompt as administrator so this would be a blocker for enabling LL by default.\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2023-02-16T09:53:46Z",
  "updatedAt": "2024-02-21T14:06:20Z",
  "closedAt": "2023-02-21T02:24:59Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "bug",
    "Area: Logging",
    "triaged",
    "Area: Terminal Logger"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "MSBuild has code for setting the ENABLE_VIRTUAL_TERMINAL_PROCESSING mode:\r\n\r\n<https://github.com/dotnet/msbuild/blob/dfd8f413a80cd0865f968b2c0ad9b09c0df8c430/src/Build/BackEnd/Client/MSBuildClient.cs#L392-L394>\r\n\r\nI suppose this is not executed in the LiveLogger scenario, or is executed by a process that uses a different console.",
        "createdAt": "2023-02-16T10:51:37Z",
        "updatedAt": "2023-02-16T10:51:37Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "I would have expected the livelogger to not be enabled in this case\r\n\r\nhttps://github.com/dotnet/msbuild/blob/dfd8f413a80cd0865f968b2c0ad9b09c0df8c430/src/MSBuild/XMake.cs#L3436-L3455\r\n\r\nSo that's likely the first thing to chase.",
        "createdAt": "2023-02-16T15:05:59Z",
        "updatedAt": "2023-02-16T15:05:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@ladipro do you run cmd inside Windows Terminal? if so the WT_SESSION would be non-empty.\r\n\r\n![image](https://user-images.githubusercontent.com/573979/219406657-338f7363-67df-4c71-ab53-25477eb6338c.png)\r\n",
        "createdAt": "2023-02-16T15:13:38Z",
        "updatedAt": "2023-02-16T15:13:53Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "@baronfel I use the \"Developer Command Prompt for VS 2022\" shortcut created by VS installer. It has `%comspec% /k \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\Tools\\VsDevCmd.bat\"` as its target. It does not run cmd inside Windows Terminal, as far as I can tell. The `WT_SESSION` environment variable is not defined.\r\n\r\nAh, _not defined_! The fix is to check for null in addition to \"\" in the code @rainersigwald linked above.\r\n\r\n\r\n",
        "createdAt": "2023-02-16T15:52:17Z",
        "updatedAt": "2023-02-16T15:52:49Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Oh, that makes sense too :+1: I did a check real quick and verified that `cmd` inside Windows Terminal _does_ render correctly (which I hoped since Windows Terminal was doing the rendering portion).",
        "createdAt": "2023-02-16T15:54:06Z",
        "updatedAt": "2023-02-16T15:54:06Z",
        "author": {
          "login": "baronfel"
        }
      }
    ]
  }
}