{
  "number": 4228,
  "title": "WPF Application Always Rebuilds In Visual Studio",
  "body": "### Background\r\nIn attempting to reproduce the issue for #4217 I attempted to create a fresh WPF Project to see if I could reproduce it; in doing this I encountered a similar (but I do not believe identical) issue wherein the MainWindow.g.cs was always regenerated.\r\n\r\n### Steps to reproduce\r\nPlease find an attached zip file that contains the project that demonstrates this behavior: [WpfAppAlwaysRebuilds.zip](https://github.com/Microsoft/msbuild/files/2956954/WpfAppAlwaysRebuilds.zip)\r\n\r\nThis project was created by:\r\n\r\n1. Creating a new WPF Application within Visual Studio\r\n2. Modifying the CSPROJ To contain the work around for #1648 as follows\r\n```xml\r\n  <Target Name=\"GenerateCompiledExpressionsTempFile\">\r\n    <!--This is a no-op to overwrite the existing target that ships with MSBuild. When we upgrade to Visual Studio 2019 (MSBuild 16.0) we can remove this. See https://github.com/Microsoft/msbuild/issues/1648-->\r\n  </Target>\r\n```\r\n\r\nTo reproduce the issue on the command line build the project\r\n\r\n```\r\nmsbuild WpfAppAlwaysRebuilds.sln /t:Build\r\n```\r\n\r\nThen launch the Solution in Visual Studio and build you will see this in diganostic verbosity:\r\n\r\n```\r\nProject 'WpfAppAlwaysRebuilds' is not up to date. Input file 's:\\temp\\markupbug\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\obj\\debug\\mainwindow.g.cs' is modified after output file ''.\r\n------ Build started: Project: WpfAppAlwaysRebuilds, Configuration: Debug Any CPU ------\r\n```\r\n\r\nNote that in order to repeat it a second time you MUST delete the contents of the /obj/ folder to start \"clean\" again. Once it has built in Visual Studio once MSBuild will happily report that it is up to date.\r\n\r\n### Expected  behavior\r\nThe expected behavior is that this project will report as \"up-to-date\"\r\n\r\n### Actual behavior\r\nThe project rebuilds because it determines that it is not \"up-to-date\"\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n```\r\nMicrosoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.9.21.664\r\n```\r\n\r\nOS info:\r\nWindows Server 2012 R2\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\nVisual Studio 15.9.8",
  "state": "OPEN",
  "createdAt": "2019-03-12T13:20:19Z",
  "updatedAt": "2024-02-21T17:16:25Z",
  "closedAt": null,
  "author": {
    "login": "aolszowka"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "My understanding is that the fix there require a coordinated change for workflows as well that went in on Dev16. You are  trying to apply a similar change and make it work on Dev15.\r\n\r\nI don't believe that would be expected to work.",
        "createdAt": "2019-03-15T06:03:03Z",
        "updatedAt": "2019-03-15T06:03:03Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "@livarcocc The Workflow Fix requires the coordination between Dev16; however if you notice bullet 2 I have already worked around this; this is a NEW issue (even after the workflow one is corrected).\r\n\r\nHere is the rebuild trigger:\r\n```text\r\n1>Project 'WpfAppAlwaysRebuilds' is not up to date. Input file 'r:\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\obj\\debug\\mainwindow.g.cs' is modified after output file ''.\r\n```\r\n\r\nIf this had been the workflow issue it would have been complaining about a *TemporaryGenerated.cs file.\r\n\r\nThis issue ends up being the same as the reference issue (although it took me a lot longer to get to that point in the reference issue):\r\n\r\n* When MSBuild compiles a WPF Application `MarkupCompilePass1` is called PRIOR to all `Compile` inputs being calculated. One such task that adds additional compile items is `GenerateTargetFrameworkMonikerAttribute`\r\n* In Visual Studio `GenerateTargetFrameworkMonikerAttribute` is called PRIOR to `MarkupCompilePass1`\r\n* Because of the design of `MarkupCompilePass1` there is another layer of incremental build caching: it is looking at the number of files used as inputs (as well as taking the hashes of their file names) to determine if it should run again or not. Because this added an additional `Compile` item in Visual Studio it will always rebuild.\r\n\r\nThe work around is to apply this into the ProjectFile which will temporarily fix you; but the real fix needs to happen in MSBuild to correctly call `GenerateTargetFrameworkMonikerAttribute` prior to `MarkupCompilePass1`:\r\n\r\n```xml\r\n  <PropertyGroup>\r\n    <!--This is a hack to try and fix https://github.com/Microsoft/msbuild/issues/4228-->\r\n    <MarkupCompilePass1DependsOn>$(MarkupCompilePass1DependsOn);GenerateTargetFrameworkMonikerAttribute</MarkupCompilePass1DependsOn>\r\n  </PropertyGroup>\r\n```\r\n\r\nIts unclear who owns this; its either gotta be Visual Studio or the MSBuild team that changes to make this consistent otherwise you will ALWAYS rebuild in WPF.",
        "createdAt": "2019-03-18T13:12:51Z",
        "updatedAt": "2019-03-18T13:12:51Z",
        "author": {
          "login": "aolszowka"
        }
      },
      {
        "body": "I think you should file a VS Feedback ticket so that the owners of WPF can take a look at this issue. This is not code that lives in the msbuild repo.\r\n\r\nMeanwhile, I am going to close this issue.",
        "createdAt": "2019-03-19T23:30:17Z",
        "updatedAt": "2019-03-19T23:30:17Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "Can you please point me to the location to properly report this to the owners of WPF? The bug itself only exhibits in MSBuild for what its worth; Visual Studio does the correct thing.",
        "createdAt": "2019-03-20T03:11:15Z",
        "updatedAt": "2019-03-20T03:11:15Z",
        "author": {
          "login": "aolszowka"
        }
      },
      {
        "body": "Note that {Target}DependsOn properties [do not work](https://github.com/Microsoft/msbuild/issues/1680) in \"new style\" SDK projects if they use implicit imports (the default) so the workaround only applies to classic projects.",
        "createdAt": "2019-03-25T09:04:26Z",
        "updatedAt": "2019-03-25T09:04:26Z",
        "author": {
          "login": "weltkante"
        }
      },
      {
        "body": "@livarcocc hey Livar, I feel like this bug report has valuable information in it, and other issues spawned off of this one aren't getting the hoped traction. Would be you OK with reactivating this issue and giving it another look?",
        "createdAt": "2019-12-05T15:53:14Z",
        "updatedAt": "2019-12-05T15:53:14Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}