{
  "number": 8563,
  "title": "Node assignments pessimized in multitargeted->multitargeted refs with `BuildProjectReferences=false`",
  "body": "Given a project that itself multitargets and references several multitargeted projects, like [pessimized_node_assignments.zip](https://github.com/dotnet/msbuild/files/10969331/pessimized_node_assignments.zip), the scheduler does a terrible job spreading the work around among nodes when the referencing project (here `Aggregate\\Aggregate.csproj`) is built with `-p:BuildProjectReferences=false -m:3 -nr:false`.\r\n\r\nThe true optimal node count and scheduling for such a system may not be knowable, but `number_of_nodes = number_of_TargetFrameworks` seems like a very reasonable guess.\r\n\r\nFrom my debugging, what's going wrong is that we have these dependencies (filtered to a single reference):\r\n\r\n```mermaid\r\ngraph TD\r\nsubgraph Aggregate\r\n    Aggregate_outer\r\n    Aggregate_net5\r\n    Aggregate_net6\r\n    Aggregate_net7\r\nend\r\nsubgraph Lib1\r\n    Lib1_outer\r\n    Lib1_net5\r\n    Lib1_net6\r\n    Lib1_net7\r\nend\r\nAggregate_outer -->|Build| Aggregate_net5\r\nAggregate_outer -->|Build| Aggregate_net6\r\nAggregate_outer -->|Build| Aggregate_net7\r\nAggregate_net5 -->|GetTargetFrameworks| Lib1_outer\r\nAggregate_net6 -->|GetTargetFrameworks| Lib1_outer\r\nAggregate_net7 -->|GetTargetFrameworks| Lib1_outer\r\n\r\nLib1_outer -->|GetTargetFrameworksWithPlatformForSingleTargetFramework| Lib1_net5\r\nLib1_outer -->|GetTargetFrameworksWithPlatformForSingleTargetFramework| Lib1_net6\r\nLib1_outer -->|GetTargetFrameworksWithPlatformForSingleTargetFramework| Lib1_net7\r\n\r\nAggregate_net5 -->|GetTargetPath| Lib1_net5\r\nAggregate_net6 -->|GetTargetPath| Lib1_net6\r\nAggregate_net7 -->|GetTargetPath| Lib1_net7\r\n```\r\n\r\nUnfortunately, the calls to `GetTargetFrameworksWithPlatformForSingleTargetFramework` are all getting assigned to `node 1`, locking the inner builds for all referenced projects to that node. That node is also used to do actual build work for one of the inner builds of `Aggregate`, which blocks work that should be able to run in parallel for the other inner builds:\r\n\r\n![image](https://user-images.githubusercontent.com/3347530/225066388-eb950826-5a05-482e-a5b3-59f7a266b179.png)\r\n\r\n@dfederm has observed worse cascading where all of the inner builds were serialized on real-world projects.",
  "state": "OPEN",
  "createdAt": "2023-03-14T16:07:21Z",
  "updatedAt": "2025-06-02T08:26:39Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "backlog",
    "needs-design",
    "Area: Engine",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": []
  }
}