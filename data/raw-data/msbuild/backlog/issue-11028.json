{
  "number": 11028,
  "title": "Terminal logger inserts newlines into messages",
  "body": "### Issue Description\n\nThe new terminal logger inserts newlines and some whitespace padding into longer messages, such as exception from unit tests or \"package downgrade detected\" build errors to match the terminal window width. This causes two problems (for me):\n\n* Copying text from terminal now contains these additional characters, making it harder to paste file paths into other commands/editor or comparing long strings in other software.\n* I'd run `dotnet test` in a narrow terminal window to see how it's going and then enlarge it to read the errors. That workflow now doesn't work.\n\nWorkaround is to disable terminal logger using `--tl:off` option or `MSBUILDTERMINALLOGGER=off` env variable. That, however, looses all the other nice features of the logger.\n\n### Steps to Reproduce\n\nRun `dotnet test` or `dotnet build` in project where long enough messages will be printed (such as stacktrace with filenames).\n\nThen either copy-paste some text which was long enough to be line-broken, or run it a narrow window and then enlarge it. \n\n### Expected Behavior\n\n* Text reflows after the window resized (even when dotnet is not running anymore).\n* Copied file paths, exception messages, assert values, etc do not contain any additional characters.\n\n-> Line breaks are not inserted into message, or there is a (documented) option to disable it. I don't know of a terminal emulator which can't break text, so I think it should be disabled by default.\n\n### Actual Behavior\n\nLine breaks and additional whitespace characters are inserted into exception messages, stack traces and other messages.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n```\n> dotnet msbuild -version\n17.12.7.52203\n\n> dotnet --info\n\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.c6f19616\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     arch\n OS Version:  \n OS Platform: Linux\n RID:         linux-x64\n Base Path:   /usr/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: x64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  6.0.135 [/usr/share/dotnet/sdk]\n  7.0.120 [/usr/share/dotnet/sdk]\n  8.0.110 [/usr/share/dotnet/sdk]\n  9.0.100 [/usr/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 6.0.35 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 7.0.20 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.10 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.35 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\n  Microsoft.NETCore.App 7.0.20 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  None\n\nEnvironment variables:\n  DOTNET_ROOT       [/usr/share/dotnet]\n\nglobal.json file:\n  Not found\n\n> uname -a\nLinux hostname 6.6.62-1-lts #1 SMP PREEMPT_DYNAMIC Sun, 17 Nov 2024 16:35:16 +0000 x86_64 GNU/Linux\n```",
  "state": "OPEN",
  "createdAt": "2024-11-24T11:26:22Z",
  "updatedAt": "2024-11-26T14:52:39Z",
  "closedAt": null,
  "author": {
    "login": "exyi"
  },
  "labels": [
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}