{
  "number": 3795,
  "title": "Support multiple entry points in the ProjectGraph",
  "body": "For some programmatic API scenarios, multiple entry points would be required.\r\n\r\nCommand-line still only has the ability to provide one file though, so this is purely for consumers of the ProjectGraph API.\r\n\r\nExample scenario: \"Open folder\" (no sln), or constructing a graph for an entire repo which doesn't have a root-level traversal project.\r\n\r\nA possible alternative would be to \"fake\" a project which simply has `<ProjectReference Include=\"**\\*.*proj\" />` as the entry point, but allowing multiple entry points instead is more flexible.",
  "state": "CLOSED",
  "createdAt": "2018-09-26T16:31:54Z",
  "updatedAt": "2024-02-21T17:11:01Z",
  "closedAt": "2018-10-05T17:29:21Z",
  "author": {
    "login": "dfederm"
  },
  "labels": [
    "Area: Static Graph",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "dfederm"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Counterpoint: MSBuild.exe has never had this, and VS mostly hasn't either (\"open folder\" is new and doesn't really work the same way). I think this should be cut at least for v1.",
        "createdAt": "2018-09-26T16:34:59Z",
        "updatedAt": "2018-09-26T16:34:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "API proposal:\r\n```c#\r\n/* Existing */\r\npublic ProjectGraph(string entryProjectFile);\r\npublic ProjectGraph(string entryProjectFile, IDictionary<string, string> globalProperties);\r\npublic ProjectGraph(string entryProjectFile, IDictionary<string, string> globalProperties, ProjectCollection projectCollection);\r\n\r\n/* New */\r\n\r\n// Straightforward\r\npublic ProjectGraph(string[] entryProjectFiles);\r\npublic ProjectGraph(string[] entryProjectFiles, ProjectCollection projectCollection);\r\n\r\n// All projects use the same set of global props\r\npublic ProjectGraph(string[] entryProjectFiles, IDictionary<string, string> globalProperties);\r\npublic ProjectGraph(string[] entryProjectFiles, IDictionary<string, string> globalProperties, ProjectCollection projectCollection);\r\n\r\n// Each project has its own set of global props. Here written as a tuple, but likely need a struct or something for a sane interface? Sister arrays also seems meh.\r\npublic ProjectGraph((string entryProjectFile, IDictionary<string, string> globalProperties)[]);\r\npublic ProjectGraph((string entryProjectFile, IDictionary<string, string> globalProperties)[], ProjectCollection projectCollection);\r\n```",
        "createdAt": "2018-10-02T20:25:26Z",
        "updatedAt": "2018-10-04T15:29:43Z",
        "author": {
          "login": "dfederm"
        }
      }
    ]
  }
}