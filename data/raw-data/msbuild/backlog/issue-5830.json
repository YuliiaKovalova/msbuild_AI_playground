{
  "number": 5830,
  "title": "Overbuild and timing breaks when multi-targeting csproj has a P2P to a vcxproj",
  "body": "# Issue Description\r\n\r\nA multi-targeting SDK style csproj project that includes a `ProjectReference` to a vcxproj ends up building that vcxproj *twice*, and potentially in parallel causing timing breaks.\r\n\r\n### Steps to Reproduce\r\n\r\n[msbuild_tfm_p2p.sln.zip](https://github.com/dotnet/msbuild/files/5431186/msbuild_tfm_p2p.sln.zip)\r\n\r\n1. Create a new VS solution with a .NET SDK csproj.\r\n1. Add a new vcxproj project to the solution.\r\n1. Modify the csproj to multitarget:\r\n   ```xml\r\n    <TargetFrameworks>netcoreapp3.1;net472</TargetFrameworks>\r\n   ```\r\n1. Add a project reference from csproj to vcxproj\r\n\r\nBuild the csproj from the command line with the `/bl` switch.\r\n\r\n```\r\nmsbuild some.csproj /bl\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe vcxproj only builds *once*\r\n\r\n### Actual Behavior\r\n\r\nThe vcxproj builds twice, as observable with the msbuild.binlog file.\r\nSometimes the build can break when these builds are in parallel.\r\n\r\n### Analysis\r\n\r\nIt builds twice because the C# `ResolveProjectReferences` target does not remove the `TargetFramework` global property that the vcxproj otherwise inherits from the csproj.\r\n\r\n![image](https://user-images.githubusercontent.com/3548/97039873-5db6c180-152a-11eb-8153-a5ff6e1d5129.png)\r\n\r\nIf the ProjectReference to vcxproj would have had `GlobalPropertiesToRemove` metadata that included `TargetFramework`, I think the problem would be solved:\r\n\r\n![image](https://user-images.githubusercontent.com/3548/97039949-7e7f1700-152a-11eb-9d2d-5e26502f3fba.png)\r\n\r\n### Attach a binlog\r\n\r\n[binlog](https://microsoft-my.sharepoint.com/:u:/p/andarno/Eaup_S3H0RpNlHtXwziWEtYBGns1UYy3jY46iXdf8MOVNg?e=HBN2mw)",
  "state": "CLOSED",
  "createdAt": "2020-10-23T18:26:41Z",
  "updatedAt": "2024-02-21T14:16:27Z",
  "closedAt": "2020-11-13T17:22:39Z",
  "author": {
    "login": "AArnott"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Here's what we think is happening here:\r\n\r\nvcxproj files compile down to OS-specific binaries, either native or .NET. They don't currently permit multitargeting, so you must specify exactly one TargetFramework. In the _GetProjectReferenceTargetFrameworkProperties target of Microsoft.Common.CurrentVersion.targets, SkipTargetFrameworkProperties is set to true for vcxproj to account for that.\r\n\r\nThis means we do not fill the Item _ProjectReferenceTargetFrameworkPossibilities or, by extension, the AnnotatedProjects Item.\r\n\r\nFor single-targeted projects, we normally decorate the AnnotatedProjects Item with UndefineProperties metadata specifying that TargetFramework should be undefined. Because it isn't defined properly at that stage, however, this does not happen, and TargetFramework is defined at this point in addition to having been defined globally. Currently, this is always true for vcxproj.\r\n\r\nMSBuild permits building the same project twice as long as it has different sets of global properties. Because the TargetFramework global property is not being removed as expected by the multitargeting part of MSBuild, the engine recognizes that there are differences and builds it twice. This can become more noticeable if the projects build in parallel, since they could try to access the same resources and conflict, failing the build. Note, however, that building the same project twice in this way is always wrong even if it seems minor because they do not conflict, and the second build is relatively fast.",
        "createdAt": "2020-11-11T23:37:44Z",
        "updatedAt": "2020-11-11T23:37:44Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}