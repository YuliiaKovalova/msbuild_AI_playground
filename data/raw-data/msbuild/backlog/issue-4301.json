{
  "number": 4301,
  "title": "Maintaining 2 Different sets of import statements Based on OS.",
  "body": "```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Condition=\" '$(OS)' == 'Windows_NT' \" Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <Import Condition=\" '$(OS)' != 'Windows_NT' \" Project=\"Sdk.props\" Sdk=\"Microsoft.NET.Sdk\" />\r\n  <PropertyGroup Condition=\" '$(OS)' == 'Windows_NT' \">\r\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\r\n    <ProjectGuid>{9DAF0084-3D8C-4871-86B9-C9024D8F9DFE}</ProjectGuid>\r\n    <OutputType>Library</OutputType>\r\n    <AppDesignerFolder>Properties</AppDesignerFolder>\r\n    <RootNamespace>ClassLibrary4</RootNamespace>\r\n    <AssemblyName>ClassLibrary4</AssemblyName>\r\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\r\n    <FileAlignment>512</FileAlignment>\r\n    <Deterministic>true</Deterministic>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(OS)' != 'Windows_NT' \">\r\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\r\n    <ProjectGuid>{9DAF0084-3D8C-4871-86B9-C9024D8F9DFE}</ProjectGuid>\r\n    <OutputType>Library</OutputType>\r\n    <AppDesignerFolder>Properties</AppDesignerFolder>\r\n    <RootNamespace>ClassLibrary2</RootNamespace>\r\n    <AssemblyName>ClassLibrary2</AssemblyName>    \r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <FileAlignment>512</FileAlignment>\r\n    <Deterministic>true</Deterministic>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <Optimize>false</Optimize>\r\n    <OutputPath>bin\\Debug\\</OutputPath>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\Release\\</OutputPath>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"System.Core\" />    \r\n  </ItemGroup>\r\n   <ItemGroup>\r\n    <Compile Include=\"Class1.cs\" />\r\n    <Compile Include=\"Properties\\AssemblyInfo.cs\" />\r\n  </ItemGroup> \r\n  <Import Condition=\" '$(OS)' == 'Windows_NT' \" Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n  <Import Condition=\" '$(OS)' != 'Windows_NT' \" Project=\"Sdk.targets\" Sdk=\"Microsoft.NET.Sdk\" />\r\n</Project>\r\n```",
  "state": "OPEN",
  "createdAt": "2019-04-11T11:02:02Z",
  "updatedAt": "2024-02-21T16:31:34Z",
  "closedAt": null,
  "author": {
    "login": "Shivaraj117"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This one works only with '$(OS)' != 'Windows_NT'.. Why doesnt this build on windows?",
        "createdAt": "2019-04-11T11:07:45Z",
        "updatedAt": "2019-04-11T11:07:45Z",
        "author": {
          "login": "Shivaraj117"
        }
      },
      {
        "body": "I'd be interested to know why you're trying to compile for a different target framework depending on the operating system.  I wouldn't normally recommend this.\r\n\r\nCan you provide more information on how this is failing?  If you can [provide a binlog](https://gist.github.com/dsplaisted/b256d7804672a6f6375476a5f5658b7b) that would help.\r\n\r\nFinally, if you really do want to set the target framework based on the OS, I would suggest trying to do it with an entirely SDK-style project, like this:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <TargetFramework Condition=\" '$(OS)' == 'Windows_NT' \">net461</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n",
        "createdAt": "2019-04-22T01:28:13Z",
        "updatedAt": "2019-04-22T01:28:13Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "There is a scenario where we need to run the existing project(windows) on Linux. so i was trying this approach.",
        "createdAt": "2019-04-22T09:03:14Z",
        "updatedAt": "2019-04-22T09:03:14Z",
        "author": {
          "login": "Shivaraj117"
        }
      }
    ]
  }
}