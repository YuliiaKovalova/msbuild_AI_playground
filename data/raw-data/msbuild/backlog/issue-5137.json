{
  "number": 5137,
  "title": "AssignTargetPath task embeds full paths",
  "body": "If an `EmbeddedResource` has `Link` metadata set to a full path, `AssignTargetPath` task uses this full path as the value of `EmbeddedResource.TargetPath` metadata, which in turn is used by `CreateCSharpManifestResourceName` task to calculate a `ManifestResourceName`. This value is used as a resource name in the assembly metadata.\r\n\r\nThis makes the content of the built binaries dependent on the directory the repository was built from.\r\n\r\nIn addition `AssignTargetPath` task calls [`Directory.GetCurrentDirectory()`](https://github.com/microsoft/msbuild/blob/e70a3159d64f9ed6ec3b60253ef863fa883a99b1/src/Tasks/AssignTargetPath.cs#L58). \r\n\r\nNote: xliff-build task sets `Link` to a full path: https://github.com/dotnet/xliff-tasks/blob/master/src/XliffTasks/Tasks/GatherTranslatedSource.cs#L49\r\n\r\n### Steps to reproduce\r\n\r\nBuild the following project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <EmbeddedResource Include=\"..\\Resources\\Resources.resx\" Link=\"$(MSBuildThisFileDirectory)..\\Resources\\Resources.resx\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nDirectory contents:\r\n```\r\nC:\\temp\\repro\\Resources\\Resources.resx // some resources\r\nC:\\temp\\repro\\ClassLibrary1\\ClassLibrary1.csproj\r\n```\r\n\r\nCommand line\r\n```\r\nmsbuild /bl\r\n```\r\n\r\n### Actual behavior\r\n\r\nThe .resources file generated to obj directory includes the full (sanitized) path:\r\n\r\n`ClassLibrary1.C_.Temp.repro.ClassLibrary1....Resources.Resources.resources`\r\n\r\nwhich also ends up being the manifest resource name embedded in the assembly:\r\n\r\n![image](https://user-images.githubusercontent.com/41759/74965250-bcd79b80-53c9-11ea-824d-0254f88b3130.png)\r\n\r\n### Expected behavior\r\n\r\nThe manifest resource name does not include the full path.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.6.0-preview-20110-08+b2a011d16 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.6.0.11008\r\n```\r\n",
  "state": "OPEN",
  "createdAt": "2020-02-20T18:24:25Z",
  "updatedAt": "2024-02-21T16:29:51Z",
  "closedAt": null,
  "author": {
    "login": "tmat"
  },
  "labels": [
    "Area: Debuggability",
    "Area: Tasks",
    "Area: Task: GenerateResource",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "> In addition AssignTargetPath task calls Directory.GetCurrentDirectory().\r\n\r\nI was sure that I saw code in MSBuild make sure that the current path was always set to the directory of the current project.\r\n\r\n**Update:** Yes: https://github.com/microsoft/msbuild/blob/fa773bb8d44a358963481c02e772509dc408a6d9/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs#L998",
        "createdAt": "2020-02-27T23:38:24Z",
        "updatedAt": "2020-02-28T05:17:56Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Two questions:\r\n\r\n* Do you have a priority on this?\r\n* Should the fix be to teach `CreateCSharpManifestResourceName` to respect the path-prefix-stripping option that the compiler does?",
        "createdAt": "2020-03-18T15:47:31Z",
        "updatedAt": "2020-03-18T15:47:31Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}