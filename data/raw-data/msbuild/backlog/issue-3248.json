{
  "number": 3248,
  "title": "Item definitions (ItemDefinitionGroup) ignore KeepMetadata and RemoveMetadata",
  "body": "Reported by a customer. Internal bug [597908](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/597908)\r\n### Steps to reproduce\r\n\r\nProject file KeepMetadata.proj\r\n```xml\r\n<Project DefaultTargets=\"Test\">\r\n\r\n  <ItemDefinitionGroup>\r\n    <A>\r\n      <bar>barA</bar>\r\n    </A>\r\n  </ItemDefinitionGroup>\r\n  \r\n  <ItemGroup>\r\n    <A Include=\"1\" foo=\"foo1\" />\r\n    <A Include=\"2\" foo=\"foo2\" bar=\"bar2\"/>\r\n    <A Include=\"3\" />\r\n  </ItemGroup>\r\n  \r\n  <Target Name=\"Test\">\r\n    <ItemGroup>\r\n      <B Include=\"@(A)\" KeepMetadata=\"foo\" />\r\n    </ItemGroup>\r\n\r\n    <Message Importance=\"high\" Text=\"%(B.Identity) %(B.foo) %(B.bar)\"/>\r\n  </Target>\r\n</Project>\r\n```\r\nCommand line\r\n```\r\nmsbuild /v:m KeepMetadata.proj\r\n```\r\n### Expected  behavior\r\n```\r\n      1 foo1\r\n      2 foo2\r\n      3 \r\n```\r\n\r\n### Actual behavior\r\n```\r\n      1 foo1 barA\r\n      2 foo2 barA\r\n      3  barA\r\n```\r\n\r\nRepros on MSBuild 4.0 (with no metadata as attribute of course) to 15.6.\r\n",
  "state": "CLOSED",
  "createdAt": "2018-04-28T03:14:17Z",
  "updatedAt": "2024-02-21T17:13:23Z",
  "closedAt": "2018-05-02T17:35:01Z",
  "author": {
    "login": "AndyGerlicher"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@cdmihai can you spend a half hour or so max to investigate this next week? Given that it repros on 4.0 I'm not sure we even should fix it but I'd like to know if there's an obvious cause or not.",
        "createdAt": "2018-04-28T03:15:24Z",
        "updatedAt": "2018-04-28T03:15:24Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Did this ever work differently? The code looks like this is intended behaviour: if there is no direct metadata, then item definition groups act as a fallback. This logic is duplicated in two places, once for build time, and once for evaluation:\r\n- build: https://github.com/Microsoft/msbuild/blob/49af2b9a4fb25044121932910e67c644f407b989/src/Build/Instance/ProjectItemInstance.cs#L1226\r\n- evaluation: https://github.com/Microsoft/msbuild/blob/fd91f9661aa90347fa292f50cbf8387dfb6d1bc2/src/Build/Definition/ProjectItem.cs#L438",
        "createdAt": "2018-05-01T21:41:21Z",
        "updatedAt": "2018-05-01T21:41:34Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Test for this scenario: https://github.com/cdmihai/msbuild/commit/4e9f574f6f5b1bb254936a985cf572a3d0e233f8\r\nShould I invert the assertions and send a pr? :)",
        "createdAt": "2018-05-01T21:51:46Z",
        "updatedAt": "2018-05-01T21:51:46Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Oops, did not initially realize that B is getting its items copied from A, so one expectation would be that A's item definitions do not apply on B anymore.\r\n\r\nThe item transferring code suggests that keeping around the original item definition might still be intended behaviour: https://github.com/Microsoft/msbuild/blob/49af2b9a4fb25044121932910e67c644f407b989/src/Build/Instance/ProjectItemInstance.cs#L1884-L1891\r\n\r\nAs a test, I added item definitions for item type B that try to override A's item definition. According to the above rules, A's item definitions will win.\r\n\r\n```xml\r\n<Project DefaultTargets=\"Test\">\r\n\r\n  <ItemDefinitionGroup>\r\n    <A>\r\n      <AItemDefinition>A-item-definition</AItemDefinition>\r\n    </A>\r\n  </ItemDefinitionGroup>\r\n\r\n  <ItemDefinitionGroup>\r\n    <B>\r\n      <AItemDefinition>B-item-definition</AItemDefinition>\r\n    </B>\r\n  </ItemDefinitionGroup>\r\n  \r\n  <ItemGroup>\r\n    <A Include=\"1\" ADirect=\"ADirect1\" />\r\n    <A Include=\"2\" ADirect=\"ADirect2\" AItemDefinition=\"A overriden\"/>\r\n    <A Include=\"3\" />\r\n  </ItemGroup>\r\n  \r\n  <Target Name=\"Test\">\r\n    <ItemGroup>\r\n      <B Include=\"@(A)\" KeepMetadata=\"ADirect\" />\r\n    </ItemGroup>\r\n\r\n    <Message Importance=\"high\" Text=\"%(B.Identity) ADirect=%(B.ADirect) AItemDefinition=%(B.AItemDefinition)\"/>\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nOutput:\r\n```\r\n  1 ADirect=ADirect1 AItemDefinition=A-item-definition\r\n  2 ADirect=ADirect2 AItemDefinition=A-item-definition\r\n  3 ADirect= AItemDefinition=A-item-definition\r\n```",
        "createdAt": "2018-05-02T00:16:51Z",
        "updatedAt": "2018-05-02T00:18:22Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  }
}