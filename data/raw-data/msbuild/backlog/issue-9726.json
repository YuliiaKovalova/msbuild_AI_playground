{
  "number": 9726,
  "title": "Document folder element in XSD",
  "body": "Gordon noticed we have it undocumented. After some research we believed it is relicd of past and shall be deleted.\r\n\r\nBut later, thanks to Kalle, we realized, VS uses it to mark empty folders.\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/25249058/715fb084-2f27-4305-8f32-b45d29fa8963)\r\n\r\nSuch mark is removed by VS as soon as you add file to it, and created when folder becomes empty.\r\n\r\nPlease document in xsd \"Used by Visual Studio for empty folders.\" or something like this.\r\n\r\nRelated xsd location:\r\nhttps://github.com/dotnet/msbuild/blob/0d8d09e5c582526daeb4af0b52956c3290e424d1/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd#L1161\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2024-02-09T14:53:00Z",
  "updatedAt": "2024-03-28T09:43:41Z",
  "closedAt": "2024-03-28T09:43:41Z",
  "author": {
    "login": "rokonec"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "MichalPavlik"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Visual Studio adds a `Folder` item in a csproj file if you create a folder in Solution Explorer and it doesn't yet contain any files that are included in the project.  It would be unfortunate if the schema considered these elements invalid.",
        "createdAt": "2024-02-09T15:01:13Z",
        "updatedAt": "2024-02-09T15:01:13Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Ah great, thanks for letting us know!\r\n\r\nNote that the schema doesn't consider anything valid or invalid--you're welcome to define whatever items you want in your project and that shouldn't cause errors. The XSD controls VS intellisense and hover information.\r\n\r\nNow that we understand this we should add some hover information to it :)",
        "createdAt": "2024-02-09T15:05:45Z",
        "updatedAt": "2024-02-09T15:05:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Huh, if I add a custom item type to a csproj file, then Visual Studio indeed does not mark that as invalid in any way.  But if I change the file name extension from `csproj` to `xml` and edit the file in Visual Studio again, then I do get a wavy blue underline and a warning in the Error List pane:\r\n\r\n> The element 'ItemGroup' in namespace 'http://schemas.microsoft.com/developer/msbuild/2003' has invalid child element 'SomethingCustom' in namespace 'http://schemas.microsoft.com/developer/msbuild/2003'. List of possible elements expected: 'Item, Reference, SDKReference, COMReference, COMFileReference, PackageReference, DotNetCliToolReference, Xdcmake, Bscmake, ClCompile, ClInclude, Midl, ResourceCompile, PreLinkEvent, CustomBuildStep, Manifest, ProjectConfiguration, ProjectCapability, NativeReference, ProjectReference, Compile, EmbeddedResource, Content, Page, Resource, ApplicationDefinition, None, BaseApplicationManifest, Folder, Import, Service, WebReferences, WebReferenceUrl, FileAssociation, BootstrapperFile, PublishFile, TargetPlatform, Analyzer, CodeAnalysisDependentAssemblyPaths, CodeAnalysisDictionary, CodeAnalysisImport, AppxManifestSchema, StoreManifestSchema, AppxHashUri, PRIResource, AppxSystemBinary, AppxReservedFileName, AppxManifestFileNameQuery, AppxManifestImageFileNameQuery, AppxManifest, StoreAssociationFile, AppxManifestMetadata, PlatformVersionDescription, AppxPackagePayload, ComFilesOutputGroupOutputs, CopyWinmdArtifactsOutputGroupOutputs, CopyLocalFilesOutputGroupOutput, _PackagingOutputsUnexpanded, _GetResolvedSDKRef....\r\n\r\nSo, it seems the schema does not allow custom elements, but Visual Studio suppresses those violations when it knows it's editing a project file.\r\n",
        "createdAt": "2024-02-09T15:21:45Z",
        "updatedAt": "2024-02-09T15:21:45Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}