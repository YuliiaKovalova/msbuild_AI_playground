{
  "number": 3843,
  "title": "Make it easier to express dependencies among projects without referencing output assembly",
  "body": "_From @tmat on October 8, 2018 23:44_\n\nIt is sometimes necessary to build project A before project B without project B referencing the assembly that A generates. In such cases one can use `ProjectReference` with `ReferenceOutputAssembly=\"false\"`. \r\n\r\nThis however is not sufficient in all scenarios, especially when these projects target different, incompatible frameworks and/or multi-target.\r\n\r\nTurns out 3 properties need to be set to make this work:\r\n```xml\r\n<ProjectReference Include=\"B.csproj\" \r\n       ReferenceOutputAssembly=\"false\"\r\n       SkipGetTargetFrameworkProperties=\"true\"\r\n       GlobalPropertiesToRemove=\"TargetFramework\" />\r\n```\r\n\r\nThis is much more complex than it should be.\r\n\r\nProposal: introduce a new item that can be use to express that this project depends on building another project, but has no implication on references. Such item could be called e.g. `ProjectBuildOrderDependency`, `DependsOnProject`, etc.\r\n\r\n```xml\r\n<DependsOnProject Include=\"B.csproj\" />\r\n```\n\n_Copied from original issue: dotnet/sdk#2574_",
  "state": "OPEN",
  "createdAt": "2018-10-09T14:50:36Z",
  "updatedAt": "2024-02-21T16:32:39Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "_From @nguerrera on October 8, 2018 23:45_\n\ncc @rainersigwald",
        "createdAt": "2018-10-09T14:50:37Z",
        "updatedAt": "2018-10-09T14:50:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Any change here would need to live on the MSBuild side of the fence, because you can have dependencies to SDK projects from non-SDK projects.",
        "createdAt": "2018-10-09T14:50:38Z",
        "updatedAt": "2018-10-09T14:50:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I don't think adding a new item type is the right way to fix this, because `ProjectReference` is semantically meaningful to VS and other consumers.\r\n\r\nI wish we had made `ReferenceOutputAssembly=\"false\"` have this behavior, but because we shipped the way we did, we can't fix that now -- see https://github.com/Microsoft/msbuild/issues/2661 (and why the fix for it got backed out). This might actually just be a duplicate of that bug.\r\n\r\nWe could potentially just add a `BuildOrderingOnly=\"true\"` or something, and recommend using that always over `ReferenceOutputAssembly`.",
        "createdAt": "2018-10-09T14:53:45Z",
        "updatedAt": "2018-10-09T14:53:45Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I agree with everything you wrote. There are actually two workarounds here vs. the desire of just saying ReferenceOutputAssembly=\"false\"\r\n\r\n1. SkipGetTargetFrameworkProperties (works around #2661, which I think at this point is by design / won't fix)\r\n2. GlobalPropertiesToRemove (works around #2366, which I think we still hope to fix -- there's an active PR)\r\n\r\nSince it doesn't seem we can compatibly make ReferenceOutputAssembly=\"false\" the master switch, I vote +1 on BuildOderingOnly=\"true\" or some other new metadata.",
        "createdAt": "2018-10-09T17:52:55Z",
        "updatedAt": "2018-10-09T17:52:55Z",
        "author": {
          "login": "nguerrera"
        }
      }
    ]
  }
}