{
  "number": 3468,
  "title": "Backslash in property gets converted to forward slash on Linux",
  "body": "When a property contains backslashs in a project file, it will be converted to forward slashs when running with msbuild on Linux.\r\n\r\nWhile this would be fine for paths (although one could just as well use forward slash in the project file since that works on both Windows and Linux), it causes problems when trying to set a regular expression in a property which requires a backslash to escape the next character.\r\n\r\n### Steps to reproduce\r\n\r\nProject file `bug.proj`:\r\n```xml\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n\t<PropertyGroup>\r\n\t\t<Regex>\\(([^]]+)\\)</Regex>\r\n\t</PropertyGroup>\r\n\r\n\t<Target Name=\"Build\">\r\n\t\t<Message Text=\"Regex=$(Regex)\"/>\r\n\t</Target>\r\n</Project>\r\n```\r\n\r\n### Command line\r\n```\r\nmsbuild /t:Build bug.proj\r\n```\r\n\r\n### Expected  behavior\r\n\r\nOutputs the line\r\n```\r\nRegex=\\(([^]]+)\\)\r\n```\r\n\r\n### Actual behavior\r\n\r\nOutputs the line\r\n```\r\nRegex=/(([^]]+)/)\r\n```\r\n\r\n### Environment data\r\n\r\n`msbuild /version` output: 15.6.0.0\r\n\r\nAlso happens with `xbuild` from older Mono versions.\r\n\r\nWhen building with `dotnet build -v d bug.proj` the output is as expected.\r\n\r\nOS Info:\r\nUbuntu 16.04.4 LTS",
  "state": "OPEN",
  "createdAt": "2018-07-02T09:18:16Z",
  "updatedAt": "2025-04-15T22:22:54Z",
  "closedAt": null,
  "author": {
    "login": "ermshiperete"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "xplat",
    "needs-design",
    "Mono",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "It's interesting that .NET Core MSBuild doesn't do the same thing:\r\n\r\n```sh-session\r\nraines@raines-z220u:~$ msbuild bug.proj\r\nMicrosoft (R) Build Engine version 15.6.0.0 ( Thu May 10 14:00:26 UTC 2018) for Mono\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 7/2/2018 10:13:27 AM.\r\nProject \"/home/raines/bug.proj\" on node 1 (default targets).\r\nBuild:\r\n  Regex=/(([^]]+)/)\r\nDone Building Project \"/home/raines/bug.proj\" (default targets).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.22\r\nraines@raines-z220u:~$ dotnet msbuild bug.proj \r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Regex=\\(([^]]+)\\)\r\n```\r\n\r\n@radical Do you recall anything that might explain this difference?",
        "createdAt": "2018-07-02T15:33:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This also seems to happen with the Exec task as well\r\n\r\n```\r\n<Exec Command=\"perl -pi -e 's/\\r\\n|\\n|\\r/\\n/g' %(StdLibOutputFiles.Identity)\" />\r\n```\r\n\r\nI get the error:\r\n```\r\nThe command \"perl -pi -e 's//r/n|/n|/r//n/g' abc.py\" exited with code 255\r\n```\r\n\r\nWould be nice to have an attribute or something that turned off the replacement of backslashes.",
        "createdAt": "2018-08-01T18:07:17Z",
        "author": {
          "login": "slide"
        }
      },
      {
        "body": "@radical any idea why this is happening only on our fork?",
        "createdAt": "2018-11-02T13:29:30Z",
        "author": {
          "login": "akoeplinger"
        }
      },
      {
        "body": "Same problem on Mac.\r\n\r\nI have the following statement in my Xamarin.Android app:\r\n\r\n```\r\n<XmlPoke\r\n    XmlInputPath=\"Resources\\values\\Strings.xml\"\r\n    Query=\"/resources/string[@name = 'asset_statements']\"\r\n    Value=\" [{ \\&quot;include\\&quot;: \\&quot;https://$(AppAssociatedDomain)/.well-known/assetlinks.json\\&quot; }]\" />\r\n```\r\n\r\nThe result should be:\r\n\r\n```\r\n[{ \\\"include\\\": \\\"https://www.example.com/.well-known/assetlinks.json\\\" }]\r\n```\r\n\r\nBut in fact it is:\r\n\r\n```\r\n[{ /\"include/\": /\"https://www.example.com/.well-known/assetlinks.json/\" }]\r\n```\r\n\r\nAny workaround?\r\n\r\n<details>\r\n  <summary>My environment:</summary>\r\n\r\nRuntime: `Mono 5.20.1.19 (2018-10/886c4901747) (64-bit)`, Package version: `520010019`.\r\n\r\n```\r\n$ msbuild -version\r\nMicrosoft (R) Build Engine version 16.0.42-preview+g804bde742b for Mono\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.0.42.19328\r\n```\r\n\r\n</details>",
        "createdAt": "2019-06-07T07:45:03Z",
        "author": {
          "login": "lassana"
        }
      },
      {
        "body": "I have related problem embedding resources:\r\n```\r\n        <EmbeddedResource Include=\"@(XsdSchema)\">\r\n            <LogicalName>$([System.String]::Copy(%(Identity)).Replace('/','\\'))</LogicalName>\r\n        </EmbeddedResource>\r\n```\r\nEven after I call replace, it still /",
        "createdAt": "2022-02-04T18:18:12Z",
        "author": {
          "login": "jinek"
        }
      },
      {
        "body": "This is a huge issue also for me. Not sure why it is not addressed. For me, its either in the `WriteLinesToFile` or `Copy` task...",
        "createdAt": "2022-03-11T11:01:42Z",
        "author": {
          "login": "FlorianRappl"
        }
      },
      {
        "body": "Anyone have a workaround?",
        "createdAt": "2022-06-03T10:36:55Z",
        "author": {
          "login": "lonix1"
        }
      },
      {
        "body": "Yes @lonix1 \r\n\r\nInstead of using the inbuilt task(s) you can create your own task and use this one instead. Advantage here is that you can potentially customize / improve the flow even more. Disadvantage is the additional maintenance and complexity.",
        "createdAt": "2022-06-03T11:04:57Z",
        "author": {
          "login": "FlorianRappl"
        }
      },
      {
        "body": "> you can create your own task\r\n\r\nThanks for that nice workaround, I'm going to try it!\r\n\r\n> Disadvantage is the additional maintenance and complexity.\r\n\r\nAgreed. This is a nasty bug. Who doesn't use linux for devops these days? Every time I encounter this bug, I resort to some hacky workaround. And scripts often fail and it takes me ages to debug the problem.\r\n\r\nPlease attend to this, it's really a big one. Thanks!",
        "createdAt": "2022-06-07T03:26:45Z",
        "author": {
          "login": "lonix1"
        }
      },
      {
        "body": "### Workaround found! Use `%5C` instead of `\\`\r\nIn the related (duplicate IMO) issue https://github.com/dotnet/msbuild/issues/1622, [@r3ho](https://github.com/r3h0) discovered it does the trick in task attribute values and [@lordscarlet](https://github.com/lordscarlet) found that it also works in property values.",
        "createdAt": "2022-10-12T14:59:01Z",
        "author": {
          "login": "Adam-S-Daniel"
        }
      },
      {
        "body": "> ### Workaround found! Use `%5C` instead of `\\`\r\n> In the related (duplicate IMO) issue #1622, [@r3ho](https://github.com/r3h0) discovered it does the trick in task attribute values and [@lordscarlet](https://github.com/lordscarlet) found that it also works in property values.\r\n\r\nI am having a similar issue. The \"Dotnet test\" call is being made in the CI/CD pipeline. And Azure DevOps is stripping the \" no matter what I do. I don't think this is a \\ problem here though, but a \" problem. And this happens irrespective of windows or ubuntu machine.",
        "createdAt": "2022-10-29T17:10:06Z",
        "author": {
          "login": "tushargw"
        }
      },
      {
        "body": "@tushargw This sounds like a different problem. I'd recommend opening a new issue for that (of course unless there's already a better fitting existing one).",
        "createdAt": "2022-11-10T08:10:38Z",
        "author": {
          "login": "ermshiperete"
        }
      },
      {
        "body": "> ### Workaround found! Use `%5C` instead of `\\`\r\n> In the related (duplicate IMO) issue #1622, [@r3ho](https://github.com/r3h0) discovered it does the trick in task attribute values and [@lordscarlet](https://github.com/lordscarlet) found that it also works in property values.\r\n\r\n`%5C` does not work, it's still replaced by forward slash in my case",
        "createdAt": "2023-02-21T15:24:55Z",
        "author": {
          "login": "lucicam"
        }
      },
      {
        "body": "Just hit this bug **again**, and again spent almost a day on it.\r\n\r\nThe `%5C` trick doesn't work when the slashes are *inside a file* processed by msbuild. e.g. I'm using msbuild to [concat javascript files](https://stackoverflow.com/q/77734733/9971404), which use backslashes for regexes, and those are mangled by msbuild into forward slashes which are basically comments, and thus breaks the script.\r\n\r\nNo workaround other than a complete redesign. :rage:",
        "createdAt": "2023-12-30T12:57:52Z",
        "author": {
          "login": "lonix1"
        }
      },
      {
        "body": "Hit this as well: https://github.com/vezel-dev/zig-sdk/issues/121\r\n\r\nWould really like to see a better answer to this than \"write an inline task\"...",
        "createdAt": "2024-04-24T18:41:32Z",
        "author": {
          "login": "alexrp"
        }
      },
      {
        "body": "I just got bitten by this as well\n\n`{ \"os\": \"windows-latest\", \"command\": \"./eng/build.ps1 -projects \\\"%24%28pwd%29/tests/Aspire.Cli.Tests/Aspire.Cli.Tests.csproj\\\" \" }`\n\ngets written as \n\n`{ \"os\": \"windows-latest\", \"command\": \"./eng/build.ps1 -projects /\"$(pwd)/tests/Aspire.Cli.Tests/Aspire.Cli.Tests.csproj/\" \" }`\n\nIn my case, I had to come up with a workaround re-reading the output file and correcting the slash:\n```xml\n    <Exec Command=\"pwsh -Command &quot;(Get-Content -Path '$(FileName)' -replace '/\\&quot;', '\\\\\\&quot;' | Set-Content -Path '$(FileName)'&quot; \"\n          Condition=\" Exists('$(FileName)') \" />\n```",
        "createdAt": "2025-04-07T02:58:14Z",
        "author": {
          "login": "RussKie"
        }
      }
    ]
  }
}