{
  "number": 8784,
  "title": "[Bug]: \"Assembly loaded during Evaluation\" shown during build despite minimal output selected",
  "body": "### Issue Description\n\nUpdated to Visual Studio 2022 17.6 and now whenever I first build I get three lines of \"Assembly loaded during Evaluation\" for each project that I am building. My msbuild output verbosity setting within Visual Studio is set to \"minimal\" so I would not expect these messages to be shown.\r\n\r\nThis is shown just after `------ Build started: Project:` :\r\n```\r\nAssembly loaded during Evaluation: System.Collections.Immutable, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (location: C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\System.Collections.Immutable.dll, MVID: 5f9ff90f-0d16-4469-a104-76829d3705e2, AppDomain: [Default])\r\nAssembly loaded during Evaluation: Microsoft.IO.Redist, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 (location: C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\Microsoft.IO.Redist.dll, MVID: d528d43e-4d35-4c28-8aa6-a5ce49a5eba7, AppDomain: [Default])\r\nAssembly loaded during Evaluation: Microsoft.Build.Utilities.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (location: C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\Microsoft.Build.Utilities.Core.dll, MVID: fbb0ad21-bf4f-4348-a20a-cfe351e23e51, AppDomain: [Default])\r\n```\r\n\r\nThese messages bring no value to me and are distracting as usually the only messages that long are warnings and errors which need to be dealt with.\r\n\r\nI'm not sure if this would qualify as a bug or a feature request, so I've made it a bug for simplicity's sake, and let the msbuild experts figure out an appropriate solution.\r\n\n\n### Steps to Reproduce\n\nBuild a C++ project with Visual Studio 2022 17.6 just after starting Visual Studio and having no lingering msbuild instances. Additional builds while msbuild instances are resident do not emit these extra messages.\n\n### Expected Behavior\n\n```\r\n2>------ Rebuild All started: Project: DataAPI, Configuration: Debug x64 ------\r\n2>Building Custom Rule E:/Source/Libraries/DataAPI/CMakeLists.txt\r\n2>Values.cpp\r\n2>Generating Code...\r\n2>DataAPI.vcxproj -> E:\\Build\\Libraries\\DataAPI\\Debug\\DataAPI.lib\r\n```\n\n### Actual Behavior\n\n```\r\n2>------ Build started: Project: DataAPI, Configuration: Debug x64 ------\r\n2>Assembly loaded during Evaluation: System.Collections.Immutable, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (location: C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\System.Collections.Immutable.dll, MVID: 5f9ff90f-0d16-4469-a104-76829d3705e2, AppDomain: [Default])\r\n2>Assembly loaded during Evaluation: Microsoft.IO.Redist, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 (location: C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\Microsoft.IO.Redist.dll, MVID: d528d43e-4d35-4c28-8aa6-a5ce49a5eba7, AppDomain: [Default])\r\n2>Assembly loaded during Evaluation: Microsoft.Build.Utilities.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (location: C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Current\\Bin\\Microsoft.Build.Utilities.Core.dll, MVID: fbb0ad21-bf4f-4348-a20a-cfe351e23e51, AppDomain: [Default])\r\n2>Values.cpp\r\n2>DataAPI.vcxproj -> E:\\Build\\Libraries\\DataAPI\\Debug\\DataAPI.lib\r\n```\n\n### Analysis\n\nI believe the code was introduced in [this pull request](https://github.com/dotnet/msbuild/pull/8316), and I see two ways in which this could be mitigated, either:\r\n* by removing them from the 'minimal' verbosity configuration\r\n* or by adding a command line option or global environment setting to enable printing of them\n\n### Versions & Configurations\n\n```\r\nMSBuild version 17.6.3+07e294721 for .NET Framework\r\n17.6.3.22601\r\n```",
  "state": "CLOSED",
  "createdAt": "2023-05-21T22:09:27Z",
  "updatedAt": "2023-06-22T15:16:33Z",
  "closedAt": "2023-06-22T15:16:33Z",
  "author": {
    "login": "DominikGrabiec"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@DominikGrabiec can you confirm your Visual Studio MSBuild verbosity levels?\r\n\r\nWe had recently similar case where that turned out to be caused by `Diagnostic` verbosity:\r\nhttps://developercommunity.visualstudio.com/t/Build-spamming-NET-assembly-load-messag/10365884#T-N10367400-N10369224",
        "createdAt": "2023-05-23T14:08:09Z",
        "updatedAt": "2023-05-23T14:08:09Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "My \"MSBuild project build output verbosity:\" is set to \"Minimal\", and my \"MSBuild project build log file verbosity:\" is set to \"Normal\". \r\n\r\nI did a little bit of experimenting and found out the following:\r\n* When building after upgrade with unchanged settings from before the upgrade I ended up having those log messages displayed whenever a new MSBuild instance was started for the build.\r\n* Having changed the \"log\" verbosity to \"Minimal\" I could not get the messages to appear in the output window.\r\n* Changing the \"log\" verbosity back to \"Normal\" I could not get the messages to appear. (Even with MSBuild instances being force closed).\r\n* Changing the \"log\" verbosity to \"Diagnostic\" made them reappear in the output window.\r\n* Changing the \"log\" verbosity back to \"Normal\" hid those log messages from the output window.\r\n\r\nNow I do have to question if this is the correct behaviour still, because changing the \"log\" verbosity within Visual Studio should change what gets put into the log file on disk, not what appears in the output window of Visual Studio. That should be controlled by the \"output\" verbosity setting.\r\n\r\nThere might also be an issue with a setting not getting correctly refreshed to the correct new value when upgrading Visual Studio versions, as the output kept happening to me on \"Normal\" logging when it shouldn't have.",
        "createdAt": "2023-05-23T14:44:57Z",
        "updatedAt": "2023-05-23T14:44:57Z",
        "author": {
          "login": "DominikGrabiec"
        }
      },
      {
        "body": "Thank you @DominikGrabiec for the followup. It certainly looks quite unexpected.\r\nIt doesn't seem to be MSBuild related - I'm trying to check intenrnaly for possible cause in Visual Studio.",
        "createdAt": "2023-05-23T15:10:00Z",
        "updatedAt": "2023-05-23T15:10:00Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Hi @JaynieBai can you please try to quickly repro this - VS and SDK (`dotnet build --verbosity ...`), and CPS vs csproj vs cpp projects?",
        "createdAt": "2023-05-23T16:09:47Z",
        "updatedAt": "2023-05-23T16:09:47Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "> Hi @JaynieBai can you please try to quickly repro this - VS and SDK (`dotnet build --verbosity ...`), and CPS vs csproj vs cpp projects?\r\n\r\n@JanKrivanek  I repro this issue with CPS vs csproj vs cpp projects in VS when the MSBuild project build log file verbosity is diag and detailed  \r\nBut SDK (dotnet build --verbosity:diag ...) doesn't show the same Assembly loaded during Evaluation with VS. It doesn't repro in SDK.\r\n",
        "createdAt": "2023-05-24T03:54:56Z",
        "updatedAt": "2023-05-24T03:54:56Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  }
}