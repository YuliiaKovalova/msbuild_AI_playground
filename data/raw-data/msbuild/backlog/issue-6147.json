{
  "number": 6147,
  "title": "Unable to evaluate non SDK style project with Microsoft.Build NuGet package",
  "body": "### Issue Description\r\nI have a .Net non SDK style project which I want to evaluate in code using the latest `Microsoft.Build` NuGet package. I am unable to make it work.\r\n\r\n### Steps to Reproduce\r\nhttps://stackoverflow.com/questions/66146972/whats-the-correct-usage-of-microsoft-build-evaluation-fast-forward-to-2021\r\n\r\n### Versions & Configurations\r\n```\r\nMicrosoft (R) Build Engine version 16.8.2+25e4d540b for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.8.2.56705\r\n```\r\nI have enterprise edition of VS 2019\r\n",
  "state": "CLOSED",
  "createdAt": "2021-02-11T00:37:27Z",
  "updatedAt": "2021-03-04T02:08:21Z",
  "closedAt": "2021-02-24T16:43:05Z",
  "author": {
    "login": "MarkKharitonov"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I guess I must provide the issue in full rather than rely on StackOverflow:\r\n\r\nSo the original question https://stackoverflow.com/questions/24140413/whats-the-correct-usage-of-microsoft-build-evaluation has the following accepted answer:\r\n```\r\nproject = new Project(projectPath, new Dictionary<string, string>(), \"12.0\", new ProjectCollection());\r\n```\r\nThis does not work in 2021 with NuGet package Microsoft.Build 16.8.0. \r\n\r\nI would like to evaluate a non SDK style project like this:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n...\r\n  <Import Project=\"..\\..\\..\\Tools\\MSBuild\\Dayforce.targets\" />\r\n  <Import Project=\"$(MSBuildBinPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nPlease, observe:\r\n\r\n**Attempt 1**\r\n```\r\nnew Project(projectPath, new Dictionary<string, string>(), \"16.0\", new ProjectCollection());\r\n```\r\nResults in:\r\n```none\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The tools version \"16.0\" is unrecognized. Available tools versions are \"Current\".\r\n```\r\n**Attempt 2**\r\n```\r\nnew Project(projectPath, new Dictionary<string, string>(), \"Current\", new ProjectCollection());\r\n```\r\nResults in:\r\n```none\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The imported project \"C:\\work\\CSTool\\CSTool\\bin\\Debug\\netcoreapp3.1\\Current\\Microsoft.Common.props\" was not found. Confirm that the expression in the Import declaration \"C:\\work\\CSTool\\CSTool\\bin\\Debug\\netcoreapp3.1\\Current\\Microsoft.Common.props\" is correct, and that the file exists on disk.\r\n```\r\n**Attempt 3**\r\n```\r\nnew Project(projFilePath, new Dictionary<string, string>\r\n{\r\n    [\"MSBuildExtensionsPath\"] = @\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\",\r\n}, \"Current\", new ProjectCollection());\r\n```\r\nResults in:\r\n```none\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The imported project \"C:\\work\\CSTool\\CSTool\\bin\\Debug\\netcoreapp3.1\\Microsoft.CSharp.targets\" was not found. Confirm that the expression in the Import declaration \"C:\\work\\CSTool\\CSTool\\bin\\Debug\\netcoreapp3.1\\Microsoft.CSharp.targets\" is correct, and that the file exists on disk. \r\n```\r\nWe are making progress, Microsoft.Common.props seems to have been imported and now we fail on the last import - Microsoft.CSharp.targets\r\n\r\n**Attempt 4**\r\n```\r\nnew Project(projFilePath, new Dictionary<string, string>\r\n{\r\n    [\"MSBuildExtensionsPath\"] = @\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\",\r\n    [\"MSBuildBinPath\"] = @\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\",\r\n}, \"Current\", new ProjectCollection());\r\n```\r\nBut the result is:\r\n```none\r\nSystem.ArgumentException: The \"MSBuildBinPath\" property name is reserved.\r\n```\r\nSo, what am I missing?\r\n\r\nI managed to do what I wanted. However, none of the `Microsoft.Build` NuGet packages worked as expected by me. I checked all the published versions.\r\n\r\nWhat worked for me is reference the Microsoft.Build Dlls found inside the VS 2019 installation directory. Here is my project file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  ...\r\n\r\n  <ItemGroup>\r\n    <Reference Include=\"Microsoft.Build\">\r\n      <HintPath>..\\..\\..\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Build.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.Build.Framework\">\r\n      <HintPath>..\\..\\..\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Build.Framework.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.Build.Utilities.Core\">\r\n      <HintPath>..\\..\\..\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Build.Utilities.Core.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nAnd here is the code that works:\r\n```\r\nvar project = new Project(projFilePath);\r\nforeach (var compileItem in project.AllEvaluatedItems.Cast<ProjectItem>().Where(item => item.ItemType == \"Compile\"))\r\n{\r\n    var filePath = compileItem.EvaluatedInclude;\r\n    ...\r\n}\r\n```\r\nI checked the [msbuild github repository][1] - it does not use the NuGet packages either. Instead it includes the source code for all the relevant libraries and just builds them. And these dlls work too just as the VS dlls work.\r\n\r\nSo, what is the deal with the NuGet packages?\r\n\r\n\r\n  [1]: https://github.com/dotnet/msbuild",
        "createdAt": "2021-02-16T22:38:40Z",
        "updatedAt": "2021-02-16T22:38:40Z",
        "author": {
          "login": "MarkKharitonov"
        }
      },
      {
        "body": "Anyone?",
        "createdAt": "2021-02-16T22:38:56Z",
        "updatedAt": "2021-02-16T22:38:56Z",
        "author": {
          "login": "MarkKharitonov"
        }
      },
      {
        "body": "@KirillOsenkov - would you be able to comment? Thank you.",
        "createdAt": "2021-02-17T15:32:34Z",
        "updatedAt": "2021-02-17T15:32:34Z",
        "author": {
          "login": "MarkKharitonov"
        }
      },
      {
        "body": "Yes, add the Microsoft.Build.Locator NuGet package and see if it helps",
        "createdAt": "2021-02-17T18:15:54Z",
        "updatedAt": "2021-02-17T18:15:54Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "see https://github.com/microsoft/MSBuildLocator",
        "createdAt": "2021-02-17T18:32:32Z",
        "updatedAt": "2021-02-17T18:32:32Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I replaced direct assembly references with the latest Microsoft.Build package (16.8) and added Microsoft.Build.Locator 1.4.1. Now the compilation returns this:\r\n```\r\nBuild started...\r\n1>------ Build started: Project: CSTool, Configuration: Debug Any CPU ------\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2123,5): warning MSB3277: Found conflicts between different versions of \"Microsoft.Win32.Registry\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed.\r\n1>CSTool -> C:\\work\\CSTool\\CSTool\\bin\\Debug\\netcoreapp3.1\\CSTool.dll\r\n1>C:\\Users\\mkharitonov\\.nuget\\packages\\microsoft.build.locator\\1.4.1\\build\\Microsoft.Build.Locator.targets(20,5): error : A PackageReference to Microsoft.Build.* without ExcludeAssets=\"runtime\" exists in your project. This will cause MSBuild assemblies to be copied to your output directory, causing your application to load them at runtime. To use the copy of MSBuild registered by MSBuildLocator, set ExcludeAssets=\"runtime\" on the MSBuild PackageReferences. To disable this check, set the property DisableMSBuildAssemblyCopyCheck=true in your project file (not recommended as you must distributed all of MSBuild + associated toolset). Package(s) referenced: Microsoft.Build\r\n1>Done building project \"CSTool.csproj\" -- FAILED.\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```\r\nThe project file is:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ManyConsole\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.Build\" Version=\"16.8.0\" />\r\n    <PackageReference Include=\"Microsoft.Build.Locator\" Version=\"1.4.1\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"3.8.0\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.3\" />\r\n    <PackageReference Include=\"System.ComponentModel.Composition\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"System.Configuration.ConfigurationManager\" Version=\"5.0.0\" />\r\n    <PackageReference Include=\"System.Reactive\" Version=\"5.0.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nAs I understand, the locator wants me to add `ExcludeAssets=\"runtime\"` to Microsoft.Build, ok - added and now compilation returns:\r\n```\r\nBuild started...\r\n1>------ Build started: Project: CSTool, Configuration: Debug Any CPU ------\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2123,5): warning MSB3277: Found conflicts between different versions of \"Microsoft.Win32.Registry\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed.\r\n1>CSTool -> C:\\work\\CSTool\\CSTool\\bin\\Debug\\netcoreapp3.1\\CSTool.dll\r\n1>Done building project \"CSTool.csproj\".\r\n========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\r\n```\r\nNot ideal, because of the warning, but at least the locator is happy. Running it, however, explodes with:\r\n```\r\nSystem.IO.FileNotFoundException\r\n  HResult=0x80070002\r\n  Message=Could not load file or assembly 'Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.\r\n  Source=CSTool\r\n  StackTrace:\r\n   at CSTool.MapAllTypesCmd.Run(String slnListFilePath, String outputFilePath) in C:\\work\\CSTool\\CSTool\\MapAllTypesCmd.cs:line 67\r\n   at CSTool.MapAllTypesCmd.Run(String[] remainingArguments) in C:\\work\\CSTool\\CSTool\\MapAllTypesCmd.cs:line 27\r\n```\r\nWhich kinda makes sense to me, but I did what locator asked me to.\r\n\r\nI need more instructions, because it is not obvious at all how this should work.",
        "createdAt": "2021-02-17T23:34:59Z",
        "updatedAt": "2021-02-17T23:34:59Z",
        "author": {
          "login": "MarkKharitonov"
        }
      },
      {
        "body": "At the beginning of your app call MSBuildLocator.RegisterDefault() and make sure it\u2019s in a submethod from Main(). It\u2019s important this runs before any MSBuild assemblies attempt to get loaded.",
        "createdAt": "2021-02-17T23:40:42Z",
        "updatedAt": "2021-02-17T23:40:42Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "See this comment for a sample:\r\nhttps://github.com/dotnet/msbuild/issues/3434#issuecomment-774280523\r\n\r\nWe should add a good sample on https://github.com/microsoft/MSBuildLocator",
        "createdAt": "2021-02-17T23:48:00Z",
        "updatedAt": "2021-02-17T23:48:00Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Still no dice. Followed your instructions and got to the line `var project = new Project(projFilePath);` running which produces\r\n```\r\nSystem.IO.FileNotFoundException\r\n  HResult=0x80070002\r\n  Message=Could not load file or assembly 'C:\\Program Files\\dotnet\\sdk\\3.1.101\\Microsoft.Build.resources.dll'. The system cannot find the file specified.\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n<Cannot evaluate the exception stack trace>\r\n```\r\nI need to load **a non SDK** style project. ",
        "createdAt": "2021-02-18T02:07:29Z",
        "updatedAt": "2021-02-18T02:07:29Z",
        "author": {
          "login": "MarkKharitonov"
        }
      },
      {
        "body": "Actually the real error which aborts the program is:\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The imported project \"C:\\Program Files\\dotnet\\sdk\\3.1.101\\Microsoft\\VisualStudio\\v16.0\\WebApplications\\Microsoft.WebApplication.targets\" was not found. Confirm that the expression in the Import declaration \"C:\\Program Files\\dotnet\\sdk\\3.1.101\\Microsoft\\VisualStudio\\v16.0\\WebApplications\\Microsoft.WebApplication.targets\" is correct, and that the file exists on disk.  c:\\dayforce\\tip\\Services\\Platform\\WBDataSvc\\DataSvc\\DataSvc.csproj\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject[T1,T2](IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpression(String directoryOfImportingFile, ProjectImportElement importElement, String unescapedExpression, Boolean throwOnFileNotExistsError, List`1& imports)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile)\r\n   at CSTool.MapAllTypesCmd.Run(String slnListFilePath, String outputFilePath) in C:\\work\\CSTool\\CSTool\\MapAllTypesCmd.cs:line 45\r\n   at CSTool.MapAllTypesCmd.Run(String[] remainingArguments) in C:\\work\\CSTool\\CSTool\\MapAllTypesCmd.cs:line 27\r\n   at ManyConsole.ConsoleCommandDispatcher.DispatchCommand(IEnumerable`1 commands, String[] arguments, TextWriter consoleOut, Boolean skipExeInExpectedUsage)\r\n   at CSTool.Program.Main(String[] args) in C:\\work\\CSTool\\CSTool\\Program.cs:line 19\r\n```\r\nAs I said - non SDK style project.",
        "createdAt": "2021-02-18T02:09:07Z",
        "updatedAt": "2021-02-18T02:09:07Z",
        "author": {
          "login": "MarkKharitonov"
        }
      },
      {
        "body": "What is the target framework of your project that is using Locator? Make sure to target desktop (net472) and not Core. Also remember to git clean or remove bin/obj every time you change the target framework.\r\n\r\nPlease post a standalone minimal sample so we can debug it.",
        "createdAt": "2021-02-18T02:41:38Z",
        "updatedAt": "2021-02-18T02:41:38Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "So the tool targets .NET Core, but it analyzes non SDK style projects targeting net472. Changing the tool to target net472 is possible, but I would like to avoid it if possible.\r\n",
        "createdAt": "2021-02-18T02:57:33Z",
        "updatedAt": "2021-02-18T02:57:33Z",
        "author": {
          "login": "MarkKharitonov"
        }
      },
      {
        "body": "The tool needs to target net472 (at least for now). The bug above (#3434) is about tools that target .NET Core not supporting this.",
        "createdAt": "2021-02-18T03:50:18Z",
        "updatedAt": "2021-02-18T03:50:18Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Got it. I prefer to stick to the VS 2019 assemblies for now. Using the NuGet packages is too much fuss at this point.",
        "createdAt": "2021-02-18T13:19:05Z",
        "updatedAt": "2021-02-18T13:19:05Z",
        "author": {
          "login": "MarkKharitonov"
        }
      },
      {
        "body": "Team triage: Looks like the issue is understood and mitigated. Please reopen otherwise.",
        "createdAt": "2021-02-24T16:43:05Z",
        "updatedAt": "2021-02-24T16:43:05Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}