{
  "number": 4946,
  "title": "Suggestion: Create Git related tasks",
  "body": "Using GIT is really common. So, it would be great to have Tasks that wraps GIT executable or libgit2.\r\n\r\nIn my experience, most wrappers arround git are related to:\r\n- clone\r\n- checkout\r\n- fetch\r\n- pull",
  "state": "CLOSED",
  "createdAt": "2019-11-26T22:23:43Z",
  "updatedAt": "2024-02-21T17:05:58Z",
  "closedAt": "2019-12-16T21:37:44Z",
  "author": {
    "login": "deinok"
  },
  "labels": [
    "Feature Request",
    "Area: Tasks",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team triage: we haven't seen a great deal of demand for building this into core MSBuild, since most projects build at a single commit coordinated either manually or by a CI/automated build system. There are various tasks that extract information from the current git repo (like [GitInfo](https://github.com/kzu/GitInfo), [Source Link](https://github.com/dotnet/sourcelink), and [Nerdbank.GitVersioning](https://github.com/AArnott/Nerdbank.GitVersioning/)).\r\n\r\nThere's probably room for a NuGet package that has tasks that offer other or more general Git operations, but we don't currently think it needs to be baked into MSBuild. We can revisit this decision if demand increases.",
        "createdAt": "2019-12-16T21:37:44Z",
        "updatedAt": "2019-12-16T21:37:44Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I disagree, what most people do is use <Exec />\r\n\r\nHaving a builtin git task could open a new world like been the first step to referenciate a package that is not in a nuget only by its URL, version and path",
        "createdAt": "2019-12-17T22:06:32Z",
        "updatedAt": "2019-12-17T22:06:32Z",
        "author": {
          "login": "deinok"
        }
      }
    ]
  }
}