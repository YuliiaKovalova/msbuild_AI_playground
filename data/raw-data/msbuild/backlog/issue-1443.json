{
  "number": 1443,
  "title": "Please expose the current instance of the msbuild project object for tasks",
  "body": "There are many times we want to evaluate a given projects context during the execution of one of it's task.\r\nThis allows us to have enforcement tools like projectcop that prevent devs from improper project authoring which can reduce all sorts of tricky hard to diagnose build synchronization issues and other nasty breaks.\r\n\r\nHowever getting access to the running instance of the project object since it is not exposed is a complicated ordeal that makes things very difficult.  \r\nSome times a task will need to run and load a project under a given context but to do this properly it would need to know what the globalproperties are for that build episode so it can evaluate that new project properly.  \r\nOther reasons are to simply look at the current context is and execute business logic based off that.\r\n\r\nAnyway not having this has been a huge frustration over the years.",
  "state": "CLOSED",
  "createdAt": "2016-12-06T02:50:57Z",
  "updatedAt": "2024-02-21T17:23:39Z",
  "closedAt": "2019-10-21T20:56:56Z",
  "author": {
    "login": "kingerja"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "jeffkl"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This would badly break the best abstraction MSBuild provides to keep a build process from doing arbitrary, unreproducible self-transformations. A task is a pure function of its inputs (and the state of the file system, which admittedly stretches the definition of \"purity\" a bit). It should stay that way.",
        "createdAt": "2016-12-06T04:08:26Z",
        "updatedAt": "2016-12-06T04:08:26Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hmm so we use these project diagnostic tools to reason about the build episode as a whole to identify and correct arbitrariness practices that creep into the build.  Such as synchronization issues that result in build breaks or worse the silent pass.\r\n\r\nWould you be willing to compromise and have the project obj there but only accessible through reflection instead of the insane voodoo (will building multi proc) required to fetch it currently.\r\n\r\nWe could get away with out the project object if we were able to get the context required to evaluate the project in the same manner the build episode is such as by having access to the globalproperties that were used.",
        "createdAt": "2016-12-07T23:24:42Z",
        "updatedAt": "2016-12-07T23:24:42Z",
        "author": {
          "login": "kingerja"
        }
      },
      {
        "body": "I spoke with Josh and we're going to address this when we develop ProjectCop.  The issue is that ideally this sort of analysis would happen as part of a build (Task) but those constructs don't have access to the whole build episode.  The analysis engine needs to know what properties were passed so it can get the full project closure.  So we'll need a good way for the analysis engine to get to that. ",
        "createdAt": "2016-12-12T16:28:12Z",
        "updatedAt": "2016-12-12T16:28:12Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Team triage: uncommon request with reasons against. Closing won't-fix.",
        "createdAt": "2019-10-21T20:56:56Z",
        "updatedAt": "2019-10-21T20:56:56Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}