{
  "number": 9013,
  "title": "Crash handler relies on BinaryFormatter?",
  "body": "I had some sort of msbuild failure occur during a source build of dotnet/runtime (probably my fault), but I noticed that the crash handler seems to try and serialize state with BinaryFormatter, which no longer works because support for it has been removed in 8 (afaik).\r\n\r\n```\r\nMSBUILD : error MSB4166: Child node \"6\" exited prematurely. Shutting down. Diagnostic information may be found in files in \"/tmp/MSBuildTempkate/\" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.\r\nMSBUILD : error MSB4166: Child node \"3\" exited prematurely. Shutting down. Diagnostic information may be found in files in \"/tmp/MSBuildTempkate/\" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.\r\nMSBUILD : error MSB4166: /tmp/MSBuildTempkate/MSBuild_pid-51284_8994c4b322254f82b048929a6b247fd4.failure.txt:\r\nMSBUILD : error MSB4166: UNHANDLED EXCEPTIONS FROM PROCESS 51284:\r\nMSBUILD : error MSB4166: =====================\r\nMSBUILD : error MSB4166: 7/11/2023 4:43:18\u202fPM\r\nMSBUILD : error MSB4166: System.NotSupportedException: BinaryFormatter serialization and deserialization are disabled within this application. See https://aka.ms/binaryformatter for more information.\r\nMSBUILD : error MSB4166:    at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream serializationStream, Object graph)\r\nMSBUILD : error MSB4166:    at Microsoft.Build.BackEnd.BinaryTranslator.BinaryWriteTranslator.TranslateException(Exception& value)\r\nMSBUILD : error MSB4166:    at Microsoft.Build.Execution.BuildResult.Microsoft.Build.BackEnd.ITranslatable.Translate(ITranslator translator)\r\nMSBUILD : error MSB4166:    at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stream localWritePipe, ConcurrentQueue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTerminatePacketPump)\r\nMSBUILD : error MSB4166: ===================\r\nMSBUILD : error MSB4166: \r\nMSBUILD : error MSB4166: \r\nMSBUILD : error MSB4166: /tmp/MSBuildTempkate/MSBuild_pid-51195_ccd0543cc1b14867b276dfa044ac3e98.failure.txt:\r\nMSBUILD : error MSB4166: UNHANDLED EXCEPTIONS FROM PROCESS 51195:\r\nMSBUILD : error MSB4166: =====================\r\nMSBUILD : error MSB4166: 7/11/2023 4:43:18\u202fPM\r\nMSBUILD : error MSB4166: System.NotSupportedException: BinaryFormatter serialization and deserialization are disabled within this application. See https://aka.ms/binaryformatter for more information.\r\nMSBUILD : error MSB4166:    at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream serializationStream, Object graph)\r\nMSBUILD : error MSB4166:    at Microsoft.Build.BackEnd.BinaryTranslator.BinaryWriteTranslator.TranslateException(Exception& value)\r\nMSBUILD : error MSB4166:    at Microsoft.Build.Execution.BuildResult.Microsoft.Build.BackEnd.ITranslatable.Translate(ITranslator translator)\r\nMSBUILD : error MSB4166:    at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stream localWritePipe, ConcurrentQueue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTerminatePacketPump)\r\nMSBUILD : error MSB4166: ===================\r\n\r\n```",
  "state": "CLOSED",
  "createdAt": "2023-07-11T23:45:38Z",
  "updatedAt": "2024-02-01T18:01:18Z",
  "closedAt": "2024-02-01T18:01:17Z",
  "author": {
    "login": "kg"
  },
  "labels": [
    "backlog",
    "Priority:1",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.8"
  },
  "comments": {
    "nodes": [
      {
        "body": "Do you know what SHA of MSBuild was involved there? I hope this was fixed by #8779.\r\n\r\ncc @JanKrivanek ",
        "createdAt": "2023-07-12T20:00:21Z",
        "updatedAt": "2023-07-12T20:00:21Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Would have been dotnet/runtime main as of the 10th or 11th.",
        "createdAt": "2023-07-12T20:14:08Z",
        "updatedAt": "2023-07-12T20:14:08Z",
        "author": {
          "login": "kg"
        }
      },
      {
        "body": "Hmm, looks like runtime is on preview 5 (which shouldn't have the problem, because binaryformatter wasn't disabled then), so I'm wondering if a private just-built runtime was maybe applied with the preview-5 MSBuild bits? The fix we put in for preview 6 (https://github.com/dotnet/sdk/pull/33227) should work in that case (by opting into backward-compatibility). And then in preview 7 we shouldn't need it on this codepath any more.\r\n\r\nSo I'm hopeful that there's no current bug here. Sorry you ran into this though!",
        "createdAt": "2023-07-12T20:57:11Z",
        "updatedAt": "2023-07-12T20:57:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "How do I check which version of msbuild main is using? I had a crash during build again, but this time it didn't put any failure info in the temp directory. I nuked my .dotnet before building so it should be using the latest as far as dotnet/runtime is configured.\r\n\r\nHere's the output from when it generated .dotnet:\r\n```\r\nkate@reeir-debian2:~/Projects/dotnet-runtime-wasm$ ./build.sh -c Release --os Browser /p:WasmNativeStrip=false\r\nDownloading 'https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh'\r\n  Attempting to install 'sdk v8.0.100-preview.6.23330.14' from public_location.\r\ndotnet-install: Attempting to download using primary link https://dotnetcli.azureedge.net/dotnet/Sdk/8.0.100-preview.6.23330.14/dotnet-sdk-8.0.100-preview.6.23330.14-linux-x64.tar.gz\r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/8.0.100-preview.6.23330.14/dotnet-sdk-8.0.100-preview.6.23330.14-linux-x64.tar.gz\r\ndotnet-install: Installed version is 8.0.100-preview.6.23330.14\r\ndotnet-install: Adding to current process PATH: `/home/kate/Projects/dotnet-runtime-wasm/.dotnet`. Note: This change will be visible only when sourcing script.\r\ndotnet-install: Note that the script does not resolve dependencies during installation.\r\ndotnet-install: To check the list of dependencies, go to https://learn.microsoft.com/dotnet/core/install, select your operating system and check the \"Dependencies\" section.\r\ndotnet-install: Installation finished successfully.\r\n\r\nWelcome to .NET 8.0!\r\n---------------------\r\nSDK Version: 8.0.100-preview.6.23330.14\r\n```",
        "createdAt": "2023-07-17T23:35:37Z",
        "updatedAt": "2023-07-17T23:35:37Z",
        "author": {
          "login": "kg"
        }
      },
      {
        "body": "IIRC `dotnet msbuild -version` would display it.",
        "createdAt": "2023-07-18T05:00:35Z",
        "updatedAt": "2023-07-18T05:00:35Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Previous main:\r\nMSBuild version 17.7.0-preview-23281-03+4ce2ff1f8 for .NET\r\n17.7.0.28103\r\n\r\nCurrent-ish main:\r\nMSBuild version 17.7.0+5785ed5c2 for .NET\r\n17.7.0.32305\r\n\r\nSo I guess based on it saying it's using a preview 6 sdk maybe the SDK is just slightly too old to have picked up the fix?\r\n",
        "createdAt": "2023-07-18T19:41:40Z",
        "updatedAt": "2023-07-18T19:41:40Z",
        "author": {
          "login": "kg"
        }
      },
      {
        "body": "@JanKrivanek Is this still active?",
        "createdAt": "2024-02-01T14:43:54Z",
        "updatedAt": "2024-02-01T14:43:54Z",
        "author": {
          "login": "rokonec"
        }
      },
      {
        "body": "This is fixed in NET 8",
        "createdAt": "2024-02-01T18:01:17Z",
        "updatedAt": "2024-02-01T18:01:17Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}