{
  "number": 5506,
  "title": "TimeoutFailsEvenWhenExitCodeIsIgnored intermittently fails on Mono",
  "body": "```\r\nAssert.Equal() Failure\\nExpected: 143\\nActual:   259\r\n\r\n\r\nStack trace\r\n  at Microsoft.Build.UnitTests.Exec_Tests.TimeoutFailsEvenWhenExitCodeIsIgnored () [0x00050] in <e2bb78cae790436db9274dfd30d03cfc>:0 \r\n  at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)\r\n  at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in <ba70b91736bd40cb990a357097dba9c3>:0 \r\n```\r\n\r\nI've seen this several times. No idea why the timed-out exit code is sometimes different.",
  "state": "OPEN",
  "createdAt": "2020-07-10T16:22:44Z",
  "updatedAt": "2024-02-21T16:29:07Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "testing",
    "Mono",
    "flaky-test",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "FYI @tmds since you're looking at process exit codes on Linux",
        "createdAt": "2021-01-31T00:12:19Z",
        "updatedAt": "2021-01-31T00:12:19Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "You are using [this branch](https://github.com/dotnet/runtime/blob/3d8d29731b62c6bdc37c6fb3e22ef8bcdd5ec99b/src/mono/mono/metadata/w32process-unix.c#L2305-L2309) in mono:\r\n\r\n```c\r\n\tif (process_handle->pid == current_pid) {\r\n\t\t*exitcode = STILL_ACTIVE;\r\n\t\tmono_w32handle_unref (handle_data);\r\n\t\treturn TRUE;\r\n\t}\r\n```\r\n\r\nBecause there is no `WaitForExit` call, the child process may not be terminated yet when the exit code is retrieved. Then it returns `STILL_ACTIVE` (`259`).",
        "createdAt": "2021-02-01T07:51:30Z",
        "updatedAt": "2021-02-01T07:51:30Z",
        "author": {
          "login": "tmds"
        }
      },
      {
        "body": "There actually is a `WaitForExit`, but it has a timeout:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/74cbf25b3543a5c8c886a5a6659316f18dc49b8a/src/Utilities/ToolTask.cs#L943-L953\r\n\r\nimo, as I've mentioned on https://github.com/dotnet/msbuild/pull/6053, we can do a blocking `WaitForExit` (without timeout) when we `Process.Kill`, because the OS should really be capable of fulfilling our request.",
        "createdAt": "2021-02-01T08:01:21Z",
        "updatedAt": "2021-02-01T08:01:21Z",
        "author": {
          "login": "tmds"
        }
      },
      {
        "body": "Cool, what would you suggest here? Will your PR fix it? Should we just remove the timeout here as part of your PR or separately? Or increase the default timeout to maybe 1 minute?",
        "createdAt": "2021-02-01T17:04:45Z",
        "updatedAt": "2021-02-01T17:04:45Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}