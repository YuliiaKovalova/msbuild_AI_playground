{
  "number": 9528,
  "title": "[Broken Build]: Build error with special characters in username on Windows",
  "body": "### Issue Description\r\n\r\nI am facing an build error after updating Visual Studio 2022 and installing the latest .NET framework. Every CMake build project fails with an error message from `MSBuild`. The issue seems to be related to the way `MSBuild` uses temporary paths.\r\nI am using CMake, and was able to reproduce the issue with any CMake project I try to build. Before updating MSVC, these projects could be built without issues.\r\n\r\nSee the following build output:\r\n```powershell\r\nPS C:\\Work\\CPP\\cpp-cmake-bare\\bin> cmake --build .\r\nMSBuild version 17.8.3+195e7f5a3 for .NET Framework\r\n\r\n  'C:\\Users\\123\\AppData\\Local\\Temp\\MSBuildTempFirstNameLastName' is not recognized as an internal or external command,\r\n  operable program or batch file.\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Microsoft\\VC\\v170\\Microsoft.CppCommon.targets(237,5): e\r\nrror MSB8066: Custom build for 'C:\\Work\\CPP\\cpp-cmake-bare\\bin\\CMakeFiles\\d0c3deefe69ea22f50ff94701eaf2da5\\gene\r\nrate.stamp.rule' exited with code 1. [C:\\Work\\CPP\\cpp-cmake-bare\\bin\\ZERO_CHECK.vcxproj]\r\n```\r\nLooking at my temporary folder, I can see that the folder `C:\\Users\\123\\AppData\\Local\\Temp\\MSBuildTempFirstNameLastName` indeed does not exist, but the folder `C:\\Users\\123\\AppData\\Local\\Temp\\MSBuildTempFirstNameLastName(CompanyName` does exist. Could it be that there is an issue with the way MSBuild picks a temp directory?\r\n \r\nMy MSBuild version is as follows:\r\n```powershell\r\nPS C:\\Users\\123\\source\\repos> msbuild --version\r\nMSBuild version 17.8.3+195e7f5a3 for .NET Framework\r\n17.8.3.51904\r\n```\r\nI am using Windows 10 OS build 19044.3693.\r\n\r\nI am not 100% if this is a CMake or MSBuild issue, but because the temporary path name starts with `MSBuildTemp`, and there was a [recent PR modifying the MSBuild temporary path directory](https://github.com/dotnet/msbuild/pull/9232), I suspect it may be related to the way MSBuild handles the temporary directories on Windows.\r\n\r\nMany thanks in advance, and sorry if I missed providing required information. Please let me know if there is something missing.\r\n\r\n### Steps to Reproduce\r\n\r\nThe issue seems to happen with any CMake project. I picked a random [super-simple CMake project](https://github.com/Danaozhong/Lightweight-C-ASCII-Table).\r\n\r\nAfter cloning, run in a powershell:\r\n```powershell\r\nmkdir bin\r\ncd bin\r\ncmake ..\r\ncmake --build .\r\n```\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe `cmake --build .` should run successfully, and build the project.\r\n\r\n### Actual Behavior\r\n\r\ncrash during building:\r\n```powershell\r\nPS C:\\Work\\CPP\\Lightweight-C-ASCII-Table\\bin> cmake --build .\r\nMSBuild version 17.8.3+195e7f5a3 for .NET Framework\r\n\r\n  'C:\\Users\\123\\AppData\\Local\\Temp\\MSBuildTempFirstNameLastName' is not recognized as an internal or external command,\r\n  operable program or batch file.\r\nC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\MSBuild\\Microsoft\\VC\\v170\\Microsoft.CppCommon.targets(237,5): error MSB8066: Custom build for 'C:\\Wo\r\nrk\\CPP\\Lightweight-C-ASCII-Table\\bin\\CMakeFiles\\5d52f6b646fe4691cf3bf389522d7dd3\\generate.stamp.rule' exited with code 1. [C:\\Work\\CPP\\Lightweight-C-ASCII-T\r\nable\\bin\\ZERO_CHECK.vcxproj]\r\n```\r\n\r\n\r\n### Ask us questions\r\n\r\n_No response_",
  "state": "CLOSED",
  "createdAt": "2023-12-13T02:10:04Z",
  "updatedAt": "2024-01-02T09:29:17Z",
  "closedAt": "2024-01-02T09:29:17Z",
  "author": {
    "login": "Danaozhong"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Upon closer look, it seems the issue was introduced with this commit: https://github.com/dotnet/msbuild/commit/7f3a30cd04aa884699b7980a9209aade28f1eca2#diff-3ecd811e3c6e9fd00cc8dd066953e6b280bedb594223203d0bb7786a46ca18d5L27\r\n\r\nThis PR seems to already fix the issue I observe: https://github.com/dotnet/msbuild/pull/9232\r\n\r\nLet me try with a pre-release version, and see if the issue is fixed.",
        "createdAt": "2023-12-13T03:36:56Z",
        "updatedAt": "2023-12-13T03:36:56Z",
        "author": {
          "login": "Danaozhong"
        }
      },
      {
        "body": "I rebuilt `MSBuild` by using `v17.8.3` as a basis, and chery-pick #9232 on top of it. The rebuilt `MSBuild` now works without issues. I can therefore confirm that the issue raised here will be resolved with #9232.",
        "createdAt": "2023-12-13T06:49:03Z",
        "updatedAt": "2023-12-13T06:49:03Z",
        "author": {
          "login": "Danaozhong"
        }
      },
      {
        "body": "Closed as #9232 dupe",
        "createdAt": "2024-01-02T09:29:17Z",
        "updatedAt": "2024-01-02T09:29:17Z",
        "author": {
          "login": "rokonec"
        }
      }
    ]
  }
}