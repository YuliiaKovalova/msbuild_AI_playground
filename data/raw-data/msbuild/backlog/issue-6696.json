{
  "number": 6696,
  "title": "Item Remove's lack caching and lead to O(N^2) time",
  "body": "### Issue Description\r\n\r\nEvaluating each `<SomeItem Remove=\"...\"/>` performs O(N) work where N is the number of items already in `SomeItem`. This work is not cheap because it involves path normalization. `<SomeItem Remove=\"@(A)\"/>` is O(N^2) as each item already in `SomeItem` is compared with each item in `A`. This is perf prohibitive with as few as small thousands of items and has come up in user feedback several times.\r\n\r\n### Steps to Reproduce\r\n\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <A Include=\"**/*.*\" />\r\n    <B Include=\"**/*.*\" />\r\n    <B Remove=\"@(A)\" />\r\n  </ItemGroup>\r\n  <Target Name=\"Build\" />\r\n</Project>\r\n```\r\n\r\nwith a few thousand files in the project directory takes seconds to evaluate.\r\n\r\n### Data\r\n\r\nThe above project with 2000 files takes ~8 seconds to build on my machine.\r\n\r\n### Analysis\r\n\r\nThis is where the work is happening:\r\n\r\n```\r\n \tMicrosoft.Build.dll!Microsoft.Build.Shared.FileUtilities.GetFullPathNoThrow(string path) Line 692\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Shared.FileUtilities.NormalizePathForComparisonNoThrow(string path, string currentDirectory) Line 739\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Shared.FileUtilities.ComparePathsNoThrow(string first, string second, string currentDirectory, bool alwaysIgnoreCase) Line 720\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Internal.FileSpecMatcherTester.IsMatch(string fileToMatch) Line 68\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.ItemSpecFragment.IsMatch(string itemToMatch) Line 415\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.ItemSpec<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem>.MatchesItem(Microsoft.Build.Evaluation.ProjectItem item) Line 283\tC#\r\n>\tMicrosoft.Build.dll!Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.RemoveOperation.SelectItems(System.Collections.Immutable.ImmutableList<Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.ItemData>.Builder listBuilder, System.Collections.Immutable.ImmutableHashSet<string> globsToIgnore) Line 60\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.LazyItemOperation.ApplyImpl(System.Collections.Immutable.ImmutableList<Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.ItemData>.Builder listBuilder, System.Collections.Immutable.ImmutableHashSet<string> globsToIgnore) Line 66\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.RemoveOperation.ApplyImpl(System.Collections.Immutable.ImmutableList<Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.ItemData>.Builder listBuilder, System.Collections.Immutable.ImmutableHashSet<string> globsToIgnore) Line 51\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.LazyItemOperation.Apply(System.Collections.Immutable.ImmutableList<Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.ItemData>.Builder listBuilder, System.Collections.Immutable.ImmutableHashSet<string> globsToIgnore) Line 59\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.MemoizedOperation.Apply(System.Collections.Immutable.ImmutableList<Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.ItemData>.Builder listBuilder, System.Collections.Immutable.ImmutableHashSet<string> globsToIgnore) Line 173\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.LazyItemList.ComputeItems(Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.LazyItemList lazyItemList, System.Collections.Immutable.ImmutableHashSet<string> globsToIgnore) Line 413\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.LazyItemList.GetItemData(System.Collections.Immutable.ImmutableHashSet<string> globsToIgnore) Line 290\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.GetAllItemsDeferred.AnonymousMethod__26_0(Microsoft.Build.Evaluation.LazyItemEvaluator<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem, Microsoft.Build.Evaluation.ProjectMetadata, Microsoft.Build.Evaluation.ProjectItemDefinition>.LazyItemList itemList) Line 489\tC#\r\n```\r\n\r\n### Versions & Configurations\r\n\r\nMicrosoft (R) Build Engine version 17.0.0-dev-21370-01+dfd2be739 for .NET Framework\r\n\r\n### Regression?\r\n\r\nNo.\r\n\r\n### Attach a binlog\r\n\r\nN/A\r\n\r\n### Exit criteria\r\n- Remove=\"someitem\" is a constant-time operation (amortized).\r\n- Remove=\"@(A)\" scales linearly with the number of items being removed.",
  "state": "CLOSED",
  "createdAt": "2021-07-21T11:54:59Z",
  "updatedAt": "2024-02-21T14:12:27Z",
  "closedAt": "2021-08-23T19:17:10Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "ladipro"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": []
  }
}