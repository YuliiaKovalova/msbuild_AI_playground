{
  "number": 5733,
  "title": "MSBuild's Publish Target does not see AdditionalFile added to project through a NuGet package's target file.",
  "body": "### Issue Description\r\nI have some code analysis in a NuGet package that gets added to my project. Part of that NuGet package is a targets file that has some properties that point to the location of a dictionary for acceptable spellings.\r\n\r\nDuring `dotnet publish` (which I assume does an MSBuild Publish target), the dictionary cannot be found, and my build fails because I treat warnings as errors.\r\n\r\nEverything works correctly using Build, its only the Publish task that fails.\r\n\r\n### Steps to Reproduce\r\n1. NuGet package that pulls in a target file, that includes a property pointing to the dictionary. It looks something like this:\r\n```\r\n<PropertyGroup>\r\n    <MyDictionary>$(SolutionDir)\\CodeAnalysisDictionary.xml</MyDictionary>\r\n</PropertyGroup>\r\n\r\n<ItemGroup>\r\n    <AdditionalFiles Include=\"$(MyDictionary)\" Condition=\"Exists('$(MyDictionary)')\"/>\r\n</ItemGroup>\r\n```\r\n2. Include NuGet package as PackageReference to my project.\r\n3. Run the following dotnet publish command:\r\n```\r\ndotnet publish -r win-x64 -c \"Release\" --output \"C:\\Users\\chris\\source\\repos\\MyRepo\\src\\UI\\obj\\desktop\\--win\\bin\" /p:PublishReadyToRun=true --self-contained\r\n```\r\n\r\n### Expected Behavior\r\nPublish occurs without warnings.\r\n\r\n### Actual Behavior\r\nMy build fails because I treat warnings as errors for Release, and I get warnings related to things being misspelled, which my AdditionalFiles dictionary should fix.\r\n\r\n### Analysis\r\nI have tried explicitly putting the AdditionalFiles property in my csproj and using the copy to publish directory, but that shouldn't make a difference. It should see the property from the NuGet file, and resolve the SolutionDirectory.\r\n\r\nI have other AdditionalFiles in that target file that appear to be working. The only difference is they reference directories within the NuGet package, **not the SolutionDirectory**. I feel like its possible the SolutionDirectory property does not work with dotnet publish.\r\n\r\n### Versions & Configurations\r\nVS2019\r\nMicrosoft (R) Build Engine version 16.6.0+5ff7b0c9e for .NET Framework\r\ndotnet version 3.1.300\r\nWindows 10",
  "state": "CLOSED",
  "createdAt": "2020-09-10T21:17:27Z",
  "updatedAt": "2024-02-21T14:16:52Z",
  "closedAt": "2020-09-16T16:37:00Z",
  "author": {
    "login": "Delpire"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "Okay so I tried replacing $(SolutionDir) with a hardcoded path, and everything worked. So I believe MSBuild Publish does not know about the $(SolutionDir).",
        "createdAt": "2020-09-10T21:30:05Z",
        "updatedAt": "2020-09-10T21:30:05Z",
        "author": {
          "login": "Delpire"
        }
      },
      {
        "body": "Team Triage: Because you're building an individual project and not a solution, the `$(SolutionDir)` property won't be defined. If you own this NuGet package, try avoiding use of `$(SolutionDir)`, as you won't know what context it will be used in.\r\n\r\nHere are some options:\r\n1. Require your users to define a property such as `$(RepoRoot)`, and use that in the package. Error if not set.\r\n2. Package the dictionary in the NuGet package.\r\n3. Depending on your use case, do you need a NuGet package for this? Can you accomplish your goals with `Directory.Build.props` in your repo?",
        "createdAt": "2020-09-16T15:53:55Z",
        "updatedAt": "2020-09-16T15:53:55Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos thank you for the response. Option 1 seems like our best bet. \r\n\r\nIt makes sense that `$(SolutionDir)` would not be populated. I think it is safe to close this issue.",
        "createdAt": "2020-09-16T16:37:00Z",
        "updatedAt": "2020-09-16T16:37:00Z",
        "author": {
          "login": "Delpire"
        }
      }
    ]
  }
}