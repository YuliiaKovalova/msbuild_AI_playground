{
  "number": 2546,
  "title": "Cannot combine batching and item functions",
  "body": "It appears MSBuild doesn't correctly evaluating item functions when batching a task.\r\n\r\n**Repro**\r\n\r\n```xml\r\n<Project>\r\n  <Target Name=\"Build\">\r\n    <Message Text=\"%(A.Identity)/%(A.Version) = @(A->AnyHaveMetadataValue('Version', '2.0'))\" Importance=\"High\"/>\r\n  </Target>\r\n\r\n  <ItemGroup>\r\n    <A Include=\"Item1\" Version=\"1.0\" />\r\n    <A Include=\"Item2\" Version=\"2.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Expected Output**\r\n```\r\n  Item1/1.0 = true\r\n  Item2/2.0 = true\r\n```\r\n\r\n**Actual**\r\n```\r\n  Item1/1.0 = false\r\n  Item2/2.0 = true\r\n```\r\n\r\n**Info**\r\n```\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Core\r\n```",
  "state": "CLOSED",
  "createdAt": "2017-09-22T20:15:05Z",
  "updatedAt": "2024-02-21T17:16:35Z",
  "closedAt": "2018-02-14T06:10:59Z",
  "author": {
    "login": "natemcmaster"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Seems like `TaskExecutionHost.SetTaskParameters` calls into the expander one at a time (`foreach` item). `AnyHaveMetadataValue` intrinsic is a special use case where it needs full set of items.\r\n\r\nBatching fix would probably reside at `TaskExecutionHost` level, so the calls to `evaluatedItems.GetItems(expressionCapture.ItemType)` in expander get both instances of list `A`.\r\n\r\n@rainersigwald, is it (by-design) limitation of MSBuild's evaluator that one cannot build logical disjunction?",
        "createdAt": "2017-09-23T00:00:54Z",
        "updatedAt": "2017-09-23T00:00:54Z",
        "author": {
          "login": "am11"
        }
      },
      {
        "body": "Why would you expect true on the first item?\r\n\r\nWhen batching over metadata (like `%(Version)`), the `@()` syntax only returns elements with that metadata. So for the batch with `%(Version)` = `1.0`, there is no item with `Version`=`2.0` metadata, thus evaluating to false.\r\n\r\nFor example:\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <A Include=\"Item1\" Version=\"1.0\" />\r\n    <A Include=\"Item2\" Version=\"1.0\" />\r\n    <A Include=\"Item3\" Version=\"2.0\" />\r\n    <A Include=\"Item4\" Version=\"2.0\" />\r\n    <A Include=\"Item5\" Version=\"3.0\" />\r\n  </ItemGroup>\r\n  <Target Name=\"Build\">\r\n    <Message Importance=\"high\" Text=\"%(A.Version): @(A)\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nPrints:\r\n```\r\n  1.0: Item1;Item2\r\n  2.0: Item3;Item4\r\n  3.0: Item5\r\n```",
        "createdAt": "2017-09-23T00:27:53Z",
        "updatedAt": "2017-09-23T00:27:53Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Right, so we will have to define separate item list for LHS within the target:\r\n\r\n```xml\r\n<Project>\r\n\r\n  <Target Name=\"Build\">\r\n    <ItemGroup>\r\n      <Name Include=\"%(A.Identity)/%(A.Version)\" />\r\n    </ItemGroup>\r\n\r\n    <Message Text=\"%(Name.Identity) = @(A->AnyHaveMetadataValue('Version', '2.0'))\" Importance=\"High\"/>\r\n  </Target>\r\n\r\n  <ItemGroup>\r\n    <A Include=\"Item1\" Version=\"1.0\" />\r\n    <A Include=\"Item2\" Version=\"2.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n``` \r\n\r\nPrints:\r\n\r\n```powershell\r\n  Item1/1.0 = true\r\n  Item2/2.0 = true\r\n```",
        "createdAt": "2017-09-23T01:05:11Z",
        "updatedAt": "2017-09-23T01:05:11Z",
        "author": {
          "login": "am11"
        }
      },
      {
        "body": "> When batching over metadata (like %(Version)), the @() syntax only returns elements with that metadata.\r\n\r\nThis is the behavior in question. I was expecting the item function evaluation to be independent of the batching. If this behavior is by-design, then this can be closed as user-error.",
        "createdAt": "2017-09-26T16:13:57Z",
        "updatedAt": "2017-09-26T16:13:57Z",
        "author": {
          "login": "natemcmaster"
        }
      },
      {
        "body": "Closing. Behavior is by-design.",
        "createdAt": "2018-02-14T06:10:59Z",
        "updatedAt": "2018-02-14T06:10:59Z",
        "author": {
          "login": "natemcmaster"
        }
      }
    ]
  }
}