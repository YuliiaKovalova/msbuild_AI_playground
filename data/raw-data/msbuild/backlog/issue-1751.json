{
  "number": 1751,
  "title": "MSBuild 15.0 is case sensitive for item transforms (regression).",
  "body": "Repro:\r\nbuild https://gist.github.com/ericstj/bf0c3191800a2dd5a61d418eca4fffb9 with desktop Msbuild\r\n`msbuild.exe test-casing-transforms.proj`\r\nOutput:\r\n```\r\n  ABC\r\n  foo.ABC\r\n  bar.ABC\r\n```\r\n\r\nDo the same with core msbuild\r\n`dotnet build test-casing-transforms.proj`\r\nOutput:\r\n```\r\n  ABC\r\n  bar.ABC\r\n```\r\n\r\nIt would seem that MSBuild ignores the casing when doing an item reference, but uses strict casing when doing a transform.  Desktop MSBuild ignored the casing in both places.\r\n",
  "state": "CLOSED",
  "createdAt": "2017-02-24T23:22:36Z",
  "updatedAt": "2024-02-21T17:21:31Z",
  "closedAt": "2017-03-16T21:16:20Z",
  "author": {
    "login": "ericstj"
  },
  "labels": [
    "bug",
    "regression",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 15.1"
  },
  "comments": {
    "nodes": [
      {
        "body": "/cc @rainersigwald",
        "createdAt": "2017-02-24T23:46:05Z",
        "updatedAt": "2017-02-24T23:46:05Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "Distressing. I don't observe a difference between .NET Core and full MSBuild, but I do see a difference between MSBuild 14 and MSBuild 15.1 . . .\r\n\r\n```\r\nS:\\work\\msb1751>msbuild /v:m\r\nMicrosoft (R) Build Engine version 15.1.548.43366\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  ABC\r\n  bar.ABC\r\n\r\nS:\\work\\msb1751>dotnet msbuild /v:m\r\nMicrosoft (R) Build Engine version 15.1.548.43366\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  ABC\r\n  bar.ABC\r\n\r\nS:\\work\\msb1751>\"c:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe\" /v:m\r\nMicrosoft (R) Build Engine version 14.0.25420.1\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  ABC\r\n  foo.ABC\r\n  bar.ABC\r\n\r\nS:\\work\\msb1751>c:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe /v:m\r\nMicrosoft (R) Build Engine version 4.6.1586.0\r\n[Microsoft .NET Framework, version 4.0.30319.42000]\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  ABC\r\n  foo.ABC\r\n  bar.ABC\r\n```\r\n\r\nCase insensitivity is the correct behavior. I suspect this is a regression from lazy evaluation. Continuing to debug.",
        "createdAt": "2017-02-27T21:42:01Z",
        "updatedAt": "2017-02-27T21:42:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I see, yes I was using MSBuild 14 when doing the desktop test.",
        "createdAt": "2017-02-27T22:15:16Z",
        "updatedAt": "2017-02-27T22:37:45Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "Should [this](https://github.com/Microsoft/msbuild/blob/xplat/src/Build/Evaluation/LazyItemEvaluator.cs#L52) be passing in StringComparer.OrdinalIgnoreCase, as was done [here](https://github.com/Microsoft/msbuild/blob/xplat/src/Deprecated/Engine/Engine/Project.cs#L387)?",
        "createdAt": "2017-02-27T22:43:48Z",
        "updatedAt": "2017-02-27T22:43:48Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "@ericstj almost. PR coming as soon as I write a unit test.",
        "createdAt": "2017-02-27T22:44:53Z",
        "updatedAt": "2017-02-27T22:44:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@AndyGerlicher @rainersigwald I thinks we should be this reopened:  \r\n\r\n## This is also case sensitive!\r\n**This works:**\r\n```xml\r\n      <TestStrings Include=\"test\">\r\n        <ValueOne>$(one)-$(two)</ValueOne>\r\n        <ValueTwo>$(one)-$(two)-$(three)</ValueTwo>\r\n        <ValueThree>%(TestStrings.ValueOne)</ValueThree>\r\n      </FormatStrings>\r\n```\r\n\r\n**This works:**\r\n```xml\r\n      <TestStrings Include=\"test\">\r\n        <ValueOne>$(one)-$(two)</ValueOne>\r\n        <ValueTwo>$(one)-$(two)-$(three)</ValueTwo>\r\n        <ValueThree>%(TestStrings.valueone)</ValueThree>\r\n      </FormatStrings>\r\n```\r\n\r\n**This does not work:**\r\n```xml\r\n      <TestStrings Include=\"test\">\r\n        <ValueOne>$(one)-$(two)</ValueOne>\r\n        <ValueTwo>$(one)-$(two)-$(three)</ValueTwo>\r\n        <ValueThree>%(teststrings.valueone)</ValueThree>\r\n      </FormatStrings>\r\n```\r\n\r\n**This works:**\r\n```xml\r\n      <TestStrings Include=\"test\">\r\n        <ValueOne>$(one)-$(two)</ValueOne>\r\n        <ValueTwo>$(one)-$(two)-$(three)</ValueTwo>\r\n        <ValueThree>%(ValueOne)</ValueThree>\r\n      </FormatStrings>\r\n```\r\n\r\n**This does not work:**\r\n```xml\r\n      <TestStrings Include=\"test\">\r\n        <ValueOne>$(one)-$(two)</ValueOne>\r\n        <ValueTwo>$(one)-$(two)-$(three)</ValueTwo>\r\n        <ValueThree>%(valueone)</ValueThree>\r\n      </FormatStrings>\r\n```",
        "createdAt": "2018-05-06T12:22:26Z",
        "updatedAt": "2018-05-06T12:22:26Z",
        "author": {
          "login": "DoCode"
        }
      }
    ]
  }
}