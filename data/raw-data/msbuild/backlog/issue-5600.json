{
  "number": 5600,
  "title": "dotnet5 msbuild regressions",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\n\r\n* issue1  SdkResolverService issue can be a reason of: https://github.com/microsoft/MSBuildSdks/issues/195\r\n    Microsoft.Build.Framework  packet can't load csproj that uses CentralPackageVersions if you use msbuild from dotnet 5.\r\n   This works fine with dotnet 3.1\r\n* issue2: `dotnet restore` (msbuild) returns error while restore is complete. \r\n\r\n\r\n### Steps to Reproduce\r\n<!--\r\n* Include as much of the following as possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behaviour.\r\n* Your command line invocation\r\n-->\r\n\r\nhttps://github.com/vchirikov/msbuild_issue_repro\r\nThere are 2 different issues, but maybe all of them connected.\r\n\r\n### Expected Behavior\r\nissue1: CentralPackageVersions is resolved correctly\r\nissue2: `dotnet restore` returns 0\r\n\r\n### Actual Behavior\r\nissue1 exception:\r\n```\r\n'The SDK 'Microsoft.Build.CentralPackageVersions/2.0.52' specified could not be found\r\n```\r\nissue2 returns `-1` exit code\r\n\r\n\r\n### Analysis\r\n\r\n1) Recent changes in `SdkResolverService`\r\n\r\n### Versions & Configurations\r\n<!--\r\n* In a Visual Studio developer command prompt, run `msbuild -version` and paste the output here.\r\n* If applicable, include the version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\n* Post any other relevant configuration settings here.\r\n*   OS, architecture, etc.\r\n-->\r\n<!-- <spoiler> -->\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.7.20366.6\r\n Commit:    0684df3a5b\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.7.20366.6\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.7.20364.11\r\n  Commit:  53976d38b1\r\n\r\n.NET SDKs installed:\r\n  3.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.400-preview-015203 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-preview.7.20366.6 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.7.20365.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-fork.vchirikov [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.7.20364.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.7.20366.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n<!-- </spoiler> -->",
  "state": "CLOSED",
  "createdAt": "2020-08-02T16:38:21Z",
  "updatedAt": "2024-02-21T14:17:57Z",
  "closedAt": "2022-11-16T18:28:54Z",
  "author": {
    "login": "vchirikov"
  },
  "labels": [
    "bug",
    "author-responded",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "I'm not able to reproduce this.  Am I following the steps wrong?\r\n\r\n```cmd\r\nD:\\msbuild_issue_repro>git remote -v\r\norigin  https://github.com/vchirikov/msbuild_issue_repro.git (fetch)\r\norigin  https://github.com/vchirikov/msbuild_issue_repro.git (push)\r\n\r\nD:\\msbuild_issue_repro>C:\\Users\\jeffkl\\Downloads\\dotnet-sdk-5.0.100-preview.7.20366.6-win-x64\\dotnet.exe restore\r\n  Determining projects to restore...\r\n  Restored D:\\msbuild_issue_repro\\issue1\\msbuild_issue_repro.csproj (in 9.53 sec).\r\n  Restored D:\\msbuild_issue_repro\\issue2\\issue2.csproj (in 9.53 sec).\r\n```\r\n\r\n",
        "createdAt": "2020-08-03T16:16:52Z",
        "updatedAt": "2020-08-03T16:16:52Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl \r\ntry run under debug. Problem is that msbuild return 1 (failed) after actual restore.\r\nYou can see it with binlog or diag (if you change arguments in issue1 project.\r\n\r\n```\r\nC:\\code\\vchirikov\\msbuild_issue_repro [master \u2261]> dotnet restore\r\n  Determining projects to restore...\r\n  Restored C:\\code\\vchirikov\\msbuild_issue_repro\\issue1\\msbuild_issue_repro.csproj (in 218 ms).\r\n  Restored C:\\code\\vchirikov\\msbuild_issue_repro\\issue2\\issue2.csproj (in 218 ms).\r\nC:\\code\\vchirikov\\msbuild_issue_repro [master \u2261]> dotnet run --project .\\issue1\\\r\n  Determining projects to restore...\r\n  Restored C:\\code\\vchirikov\\msbuild_issue_repro\\issue2\\issue2.csproj (in 176 ms).\r\n  Restored C:\\code\\vchirikov\\msbuild_issue_repro\\issue1\\msbuild_issue_repro.csproj (in 176 ms).\r\nUnhandled exception. CliWrap.Exceptions.CommandExecutionException: Underlying process reported a non-zero exit code (1).\r\n\r\nCommand:\r\n  C:\\Program Files\\dotnet\\dotnet.exe restore\r\n\r\nYou can suppress this validation by calling `WithValidation(CommandResultValidation.None)` on the command.\r\n   at CliWrap.Command.ExecuteAsync(ProcessEx process, CancellationToken cancellationToken)\r\n   at msbuild_issue_repro.Program.Main(String[] args) in C:\\code\\vchirikov\\msbuild_issue_repro\\issue1\\Program.cs:line 34\r\n   at msbuild_issue_repro.Program.<Main>(String[] args)\r\n```\r\nAnd this is -v:diag\r\n\r\n![image](https://user-images.githubusercontent.com/40987940/89215879-1297ad00-d5d2-11ea-9d01-707811f7c003.png)\r\n\r\n\r\n",
        "createdAt": "2020-08-03T18:41:41Z",
        "updatedAt": "2020-08-03T18:41:41Z",
        "author": {
          "login": "vchirikov"
        }
      },
      {
        "body": "For reproducing issue 1 you should comment https://github.com/vchirikov/msbuild_issue_repro/blob/30ce422c10ae77e3cbec0279f868737eb4cc9e3d/issue1/Program.cs#L1\r\nthis define and run program.\r\nHere is the exception:\r\n```\r\nC:\\code\\vchirikov\\msbuild_issue_repro [master \u2261 +0 ~1 -0 !]> dotnet run --project .\\issue1\\\r\nUnhandled exception. Microsoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.Build.CentralPackageVersions/2.0.79' specified could not be found.  C:\\code\\vchirikov\\msbuild_issue_repro\\Directory.Build.targets\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject[T1](Boolean condition, String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, T1 arg0)\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject[T1](IElementLocation elementLocation, String resourceName, T1 arg0)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate()\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, ProjectCollection projectCollection)\r\n   at msbuild_issue_repro.Program.Main(String[] args) in C:\\code\\vchirikov\\msbuild_issue_repro\\issue1\\Program.cs:line 30\r\n   at msbuild_issue_repro.Program.<Main>(String[] args)\r\n```",
        "createdAt": "2020-08-03T18:50:06Z",
        "updatedAt": "2020-08-03T18:51:57Z",
        "author": {
          "login": "vchirikov"
        }
      },
      {
        "body": "@BenVillalobos can you reproduce the issue?",
        "createdAt": "2020-08-08T17:45:03Z",
        "updatedAt": "2020-08-08T17:45:03Z",
        "author": {
          "login": "vchirikov"
        }
      },
      {
        "body": "I'm able to reproduce _most_ of what you're seeing. \r\n\r\n## Version\r\n`dotnet --version`\r\n```\r\nC:\\src\\github\\msbuild_issue_repro>dotnet --version\r\n5.0.100-preview.7.20366.6\r\n\r\nC:\\src\\github\\msbuild_issue_repro>where dotnet\r\nC:\\Program Files\\dotnet\\dotnet.exe\r\n```\r\n## Repro\r\n### `dotnet restore`\r\n```\r\nC:\\src\\github\\msbuild_issue_repro>dotnet restore\r\n  Determining projects to restore...\r\n  Restored C:\\src\\github\\msbuild_issue_repro\\issue2\\issue2.csproj (in 247 ms).\r\n  Restored C:\\src\\github\\msbuild_issue_repro\\issue1\\msbuild_issue_repro.csproj (in 247 ms).\r\n```\r\n\r\n### `dotnet run --project issue1\\`\r\n```\r\nC:\\src\\github\\msbuild_issue_repro>dotnet run --project issue1\\\r\n  Determining projects to restore...\r\n  Restored C:\\src\\github\\msbuild_issue_repro\\issue2\\issue2.csproj (in 255 ms).\r\n  Restored C:\\src\\github\\msbuild_issue_repro\\issue1\\msbuild_issue_repro.csproj (in 255 ms).\r\nUnhandled exception. CliWrap.Exceptions.CommandExecutionException: Underlying process reported a non-zero exit code (1).\r\n\r\nCommand:\r\n  C:\\Program Files\\dotnet\\dotnet.exe restore\r\n\r\nYou can suppress this validation by calling `WithValidation(CommandResultValidation.None)` on the command.\r\n   at CliWrap.Command.ExecuteAsync(ProcessEx process, CancellationToken cancellationToken)\r\n   at msbuild_issue_repro.Program.Main(String[] args) in C:\\src\\github\\msbuild_issue_repro\\issue1\\Program.cs:line 34\r\n   at msbuild_issue_repro.Program.<Main>(String[] args)\r\n```\r\nThe difference in our repros seem to be that I get a successful restore. My underlying command also doesn't carry the `-v:diag` for some reason.\r\n\r\n### `dotnet run --project issue1\\ -v:diag`\r\n![image](https://user-images.githubusercontent.com/4691428/89841952-2343a800-db29-11ea-9386-a247d69876e5.png)\r\n\r\n### `dotnet run --project issue1\\` (for repro 1)\r\n```\r\nC:\\src\\github\\msbuild_issue_repro>dotnet run --project issue1\\\r\nUnhandled exception. Microsoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.Build.CentralPackageVersions/2.0.79' specified could not be found.  C:\\src\\github\\msbuild_issue_repro\\Directory.Build.targets\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject[T1](Boolean condition, String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, T1 arg0)\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject[T1](IElementLocation elementLocation, String resourceName, T1 arg0)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate()\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, ProjectCollection projectCollection)\r\n   at msbuild_issue_repro.Program.Main(String[] args) in C:\\src\\github\\msbuild_issue_repro\\issue1\\Program.cs:line 30\r\n   at msbuild_issue_repro.Program.<Main>(String[] args)\r\n```\r\n\r\nWill be looking more into this, just wanted to confirm that I can repro most of this.",
        "createdAt": "2020-08-11T00:17:08Z",
        "updatedAt": "2020-08-11T00:17:08Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> Will be looking more into this, just wanted to confirm that I can repro most of this.\r\n\r\nyes, you reproduced everything.\r\n\r\n1)  SdkResolverService issue\r\n2) `dotnet restore` - works fine from cmd and returned 0  \r\n    `dotnet restore` - from another program it returns non-zero exit code.\r\n",
        "createdAt": "2020-08-11T06:39:19Z",
        "updatedAt": "2020-08-11T06:39:19Z",
        "author": {
          "login": "vchirikov"
        }
      },
      {
        "body": "Spent some time digging into this today and noticed a few things.\r\n\r\nOne issue here is that there was a relevant breaking change done with the migration to dotnet 5 where nuget took a dependency on `System.Runtime` version 5.0, which isn't compatible when on `netcoreapp3.1`. A workaround for this issue in your case is to target `net5.0` instead of `netcoreapp3.1`.\r\n\r\nAnother issue here is the error behind the scenes isn't getting routed properly. You should be getting \r\n```\r\nThe NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable \"MSBUILD_NUGET_PATH\" to the folder that contains the required NuGet assemblies. Could not load file or assembly 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.\r\n```\r\n\r\nStill investigating this.",
        "createdAt": "2020-08-18T23:33:41Z",
        "updatedAt": "2020-08-18T23:33:41Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Another note: Instead of manually finding MSBuild, you should be [using MSBuildLocator](https://docs.microsoft.com/en-us/visualstudio/msbuild/updating-an-existing-application?view=vs-2019#use-microsoftbuildlocator). Though note the issue linked earlier.",
        "createdAt": "2020-08-18T23:36:10Z",
        "updatedAt": "2020-08-18T23:36:10Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Hitting the same issue with our [C# to JS compiler](https://h5.rocks) starting since I installed the latest VS2019 preview update today (Version 16.8.0 Preview 2.0), where it is failing to locate the correct NuGet custom SDK target (which is available on disk if I check the .nuget folder on my computer).\r\n\r\n![image](https://user-images.githubusercontent.com/8791811/91732346-67feb400-eba8-11ea-912e-18e7a05e406a.png)\r\n",
        "createdAt": "2020-08-31T14:39:13Z",
        "updatedAt": "2020-08-31T14:39:13Z",
        "author": {
          "login": "theolivenbaum"
        }
      },
      {
        "body": "I can also confirm uninstalling VS2019 preview and the associated .NET 5.0 SDK (effective rolling back to the .NET Core SDK 3.1.401) fixes the compilation problem.\r\n\r\nIf you need to reproduce, there is an empty dotnet new template for h5 here: https://www.nuget.org/packages/h5.template\r\n\r\n\r\n",
        "createdAt": "2020-08-31T15:22:49Z",
        "updatedAt": "2020-08-31T15:22:49Z",
        "author": {
          "login": "theolivenbaum"
        }
      },
      {
        "body": "@BenVillalobos any news?",
        "createdAt": "2020-09-28T09:33:46Z",
        "updatedAt": "2020-09-28T09:33:46Z",
        "author": {
          "login": "vchirikov"
        }
      },
      {
        "body": "@vchirikov Unfortunately not. Other than calling `MSBuildLocator.RegisterDefaults()` _should_ be enough to set things up properly for you. I tested this with your repro project and hit the issue with `Microsoft.Build.CentralPackageVersions/2.0.79` not being found.\r\n\r\nThe strange thing is that it certainly **looks** like it's being loaded properly:\r\n![image](https://user-images.githubusercontent.com/4691428/95257945-e79c2600-07d9-11eb-9317-738269fb3e47.png)\r\n\r\n![sdkresult](https://user-images.githubusercontent.com/4691428/95258246-524d6180-07da-11eb-83ca-c8738358c5d7.png)",
        "createdAt": "2020-10-06T20:52:14Z",
        "updatedAt": "2020-10-06T20:52:14Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I may have spoken too soon. I changed both the `issue1` and `issue2` to target `net5.0` and tested this on newer versions of dotnet and msbuild. It seems this is fixed in a newer version. Here's what I see now.\r\n\r\n```\r\nC:\\src\\git\\repros\\5600\\updated_msbuild_issue_repro>dotnet run --project issue1\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nDone. Result: 0\r\n```\r\n\r\n\r\n**dotnet --version**\r\n```\r\n5.0.100-rc.2.20479.15\r\n```\r\n\r\n**dotnet msbuild -version** (locally deployed)\r\n```\r\nMicrosoft (R) Build Engine version 16.8.0-dev-20506-01+aed5e7ed0 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.8.0.5060\r\n```\r\n\r\n@vchirikov is this the expected output of your program?",
        "createdAt": "2020-10-06T21:00:57Z",
        "updatedAt": "2020-10-06T21:05:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> @vchirikov is this the expected output of your program?\r\n\r\nyes, but you changed tfm. The original issue was how to load a **`netcoreapp3.1`** project that uses a custom SDK if the dotnet5 sdk is also presented on the computer (MSBuild from net5, but we are trying to load netcoreapp3.1 app),\r\n\r\nI tested this issue again, with current dotnet 5.0 RC (tfm is `netcoreapp3.1`). Now I've got another exception (`dotnet run --project issue1`):\r\n\r\n```\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: 'Invalid static method invocation syntax: \"[MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')\". Method '[MSBuild]::GetTargetFrameworkIdentifier' not found. Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(`a`, `b`)). Check that all parameters are defined, are of the correct type, and are specified in the right order.  C:\\Program Files\\dotnet\\sdk\\5.0.100-rc.1.20452.10\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets'\r\n\r\n```\r\n\r\nSame exception if I change the tfm to net5.0.\r\nI've updated the repro to use the latest `Microsoft.Build` packages (16.7.0).\r\n\r\np.s. versions:\r\n```bash\r\n> dotnet --version\r\n5.0.100-rc.1.20452.10\r\n> dotnet msbuild -version\r\nMicrosoft (R) Build Engine version 16.8.0-preview-20451-02+51a1071f8 for .NET\r\n16.8.0.45102\r\n```\r\n",
        "createdAt": "2020-10-07T08:35:15Z",
        "updatedAt": "2020-10-07T08:35:15Z",
        "author": {
          "login": "vchirikov"
        }
      },
      {
        "body": "I've just seen what I think is a similar issue on my TeamCity CI build server. I set my web project target to .NET 5.0 and upgraded all my dotnet packages to the latest 5.0.2. Installed the [SDK 5.0.102](https://dotnet.microsoft.com/download/dotnet/5.0) on the build server. However after TeamCity successfully deployed to my host, I discovered they don't support .NET 5.0 yet. I reverted back to the latest .NET Core 3.1.11 packages in my project, and reverted to target .NET Core 3.1.\r\n\r\nWhen redeploying using TeamCity I got this error message when trying to access the webserver: `FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.` despite my project not having any .NET 5.0 dependencies. This build used `Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET`\r\n\r\nI uninstalled the SDK from my build server, redeployed and it worked again, now using `Microsoft (R) Build Engine version 16.6.0+5ff7b0c9e for .NET Core`\r\n\r\nHope that helps, let me know if you want any of the dotnet publish build logs.",
        "createdAt": "2021-01-20T01:42:50Z",
        "updatedAt": "2021-01-20T01:42:50Z",
        "author": {
          "login": "jhelmink"
        }
      },
      {
        "body": "@jhelmink does your project have a global.json?\r\n\r\n@vchirikov I noticed your project didn't have one, I was able to get successful builds/runs by using MSBuildLocator to find MSBuild and creating a global.json that explicitly looks for a 3.x sdk.",
        "createdAt": "2021-05-21T21:53:11Z",
        "updatedAt": "2021-05-21T21:53:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> @vchirikov I noticed your project didn't have one, I was able to get successful builds/runs by using MSBuildLocator to find MSBuild and creating a global.json that explicitly looks for a 3.x sdk.\r\n\r\nI wrote it before:\r\n\r\n> The original issue was how to load a netcoreapp3.1 project that uses a custom SDK if the dotnet5 sdk is also presented on the computer (MSBuild from net5, but we are trying to load netcoreapp3.1 app),\r\n\r\nand you didn't answer the question, create global.json is not an answer. I'll try to explain it. Imagine you have a build tool which uses msbuild sdk (you are the owner of this tool), you compiled it with net5 and want to load an external netcoreapp3.1 project (you aren't owner of this project) to it. So creating a global.json is not an option.\r\n\r\np.s. issue2 is resolved",
        "createdAt": "2021-05-24T09:17:14Z",
        "updatedAt": "2021-05-24T09:22:08Z",
        "author": {
          "login": "vchirikov"
        }
      },
      {
        "body": "Any update on this? Seeing the same issue.",
        "createdAt": "2022-02-07T22:04:13Z",
        "updatedAt": "2022-02-07T22:04:13Z",
        "author": {
          "login": "gandharv-kapoor"
        }
      },
      {
        "body": "![image](https://user-images.githubusercontent.com/2318480/153051312-9073416d-e999-4f0a-b866-2ae33073e4bd.png)\r\nWhat's going on? Why we can't use VS2022 and compelled using old VS2017?",
        "createdAt": "2022-02-08T18:24:50Z",
        "updatedAt": "2022-02-08T18:24:50Z",
        "author": {
          "login": "savalik"
        }
      },
      {
        "body": "> The original issue was how to load a netcoreapp3.1 project that uses a custom SDK if the dotnet5 sdk is also presented on the computer (MSBuild from net5, but we are trying to load netcoreapp3.1 app),\r\n\r\nLet's say you have a tool (call it A) that uses MSBuild APIs to load another project (call that project B).\r\n\r\nIf tool A is targeting .NET Core 3.1, then it will not work if it tries to use the MSBuild version from the .NET 5 SDK.  It will try to load code written for .NET 5 in a process that's running in .NET Core 3.1.\r\n\r\nIt sounds to me like a lot of the issues reported here are caused by this.  You would either need to update tool A to target .NET 5, or find a way to have tool A load the .NET Core 3.1 SDK version of MSBuild instead of the .NET 5 version.  That's where global.json may help.\r\n\r\nProject B, which is being evaluated by tool A, can still target .NET Core 3.1 or a previous version.  That sounds like what you're describing here:\r\n\r\n> Imagine you have a build tool which uses msbuild sdk (you are the owner of this tool), you compiled it with net5 and want to load an external netcoreapp3.1 project (you aren't owner of this project) to it.\r\n\r\nNote 1: It looks like in the [repro](https://github.com/vchirikov/msbuild_issue_repro/tree/master/issue1), the project is actually loading itself, so Tool A and Project B are actually the same project in that case.\r\n\r\nNote 2: As mentioned previously, we recommend using [MSBuildLocator](https://docs.microsoft.com/en-us/visualstudio/msbuild/updating-an-existing-application?view=vs-2019#use-microsoftbuildlocator) for tools like this.\r\n\r\nDoes that help?",
        "createdAt": "2022-02-08T20:13:22Z",
        "updatedAt": "2022-02-08T20:13:22Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "> You would either need to update tool A to target .NET 5, or find a way to have tool A load the .NET Core 3.1 SDK version of MSBuild instead of the .NET 5 version. That's where global.json may help.\r\n\r\nI wrote:\r\n> Same exception if I change the tfm to net5.0.\r\n\r\nand\r\n\r\n> external netcoreapp3.1 project (you aren't owner of this project)\r\n\r\nI think it's clear that I can't place `global.json` to project B, the build tool (project A) can't change directory/files at project B.\r\n\r\n> Does that help?\r\n\r\nNo, sorry, but I don't want to spend time digging and explaining a bug with a response time of more than 1.5 years.",
        "createdAt": "2022-02-09T09:37:55Z",
        "updatedAt": "2022-02-09T09:38:43Z",
        "author": {
          "login": "vchirikov"
        }
      },
      {
        "body": "We have a project with ASP.NET MVC5 where we are using `CentralPackageVersions` and VS2019 and VS2022 are affected by this issue, whereas VS 2017 and the latest Rider aren't.",
        "createdAt": "2022-02-09T19:07:34Z",
        "updatedAt": "2022-02-09T19:07:34Z",
        "author": {
          "login": "tuscen"
        }
      },
      {
        "body": "Hey folks, getting back to this after much too long. I can repro the issue being unable to find the 5.0 runtime:\r\n```\r\nUnhandled exception. Microsoft.Build.Exceptions.InvalidProjectFileException: The SDK resolver type \"NuGetSdkResolver\" failed to load. Could not load file or assembly 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.  C:\\src\\temp\\5600\\msbuild_issue_repro\\issue1\\msbuild_issue_repro.csproj\r\n ---> System.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.\r\nFile name: 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n   at Microsoft.Build.NuGetSdkResolver.NuGetSdkResolver..ctor()\r\n```\r\n\r\n\r\n\r\nI can also repro this by global.json'ing myself down to 5.0.413 (the version I happen to have installed)\r\n```\r\nUnhandled exception. Microsoft.Build.Exceptions.InvalidProjectFileException: Invalid static method invocation syntax: \"[MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)', 2)\". Method '[MSBuild]::GetTargetFrameworkVersion' not found. Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(`a`, `b`)). Check that all parameters are defined, are of the correct type, and are specified in the right order.  C:\\Program Files\\dotnet\\sdk\\5.0.413\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\r\n```\r\n\r\nAnd I can work around both issues by using MSBuildLocator. I simply added\r\n\r\n`MSBuildLocator.RegisterInstance(MSBuildLocator.QueryVisualStudioInstances().OrderByDescending(instance => instance.Version).First());` and separated out the rest of the logic into a new function.\r\n\r\nI'm unable to repro the issue with the SDK not being found. \r\n\r\nEdit: If anyone can repro this in a post-net5.0 SDK, please reopen.",
        "createdAt": "2022-11-15T19:10:48Z",
        "updatedAt": "2022-11-16T18:32:53Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Wow, 2 years old issue :)\r\nYou can close the issue if you're unable to reproduce it anymore.",
        "createdAt": "2022-11-16T10:51:56Z",
        "updatedAt": "2022-11-16T10:51:56Z",
        "author": {
          "login": "vchirikov"
        }
      }
    ]
  }
}