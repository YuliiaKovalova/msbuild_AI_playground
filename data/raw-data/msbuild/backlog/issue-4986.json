{
  "number": 4986,
  "title": "Add property function GetStableHash for String ",
  "body": "Some projects wish to include hashes of strings (often paths) in output folder names, which must be defined at evaluation time. [`System.String.GetHashCode`](https://docs.microsoft.com/dotnet/api/system.string.gethashcode?view=netframework-4.8) is available but unsuitable for many desirable purposes: it's documented to vary across 64- and 32-bit .NET implementations and can also vary between .NET Framework and .NET Core.\r\n\r\nMSBuild has an internal method to get a stable hash that's currently used for IPC\r\n\r\nhttps://github.com/microsoft/msbuild/blob/fa773bb8d44a358963481c02e772509dc408a6d9/src/Shared/CommunicationsUtilities.cs#L673-L707\r\n\r\nWe should expose it as `$([MSBuild]::StableStringHash())`.\r\n\r\nOpen questions:\r\n* Name\r\n* Should we override calls to `String.GetHashCode()`?",
  "state": "CLOSED",
  "createdAt": "2019-12-13T15:31:45Z",
  "updatedAt": "2024-02-21T17:05:47Z",
  "closedAt": "2020-10-02T22:10:08Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "Feature Request",
    "Area: Language",
    "Partner request",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "![image](https://user-images.githubusercontent.com/12969783/70952444-1367d880-201b-11ea-8186-f65c6de01512.png)\r\nThis part looks like something that would cause me problems if I didn't know about it previously. I'd prefer to override System.String.GetHashCode.",
        "createdAt": "2019-12-16T23:46:11Z",
        "updatedAt": "2019-12-16T23:46:11Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Would authors using this hash code be happy with `String.GetHashCode()` behaving differently between msbuild versions? This may add another unexpected (?) dimension to the differences matrix until every system is updated; all dev tools (vs/cli/vs-mac/rider) as well as CI systems.\r\nFrom an API perspective it would make more sense to add a new API and offer build authors the possibility to require a minimum MSBuild version or condition on the current version instead of playing a \"what tool is build me\"-roulette.",
        "createdAt": "2019-12-26T22:16:18Z",
        "updatedAt": "2019-12-26T22:16:18Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "That's true. I don't like how GetHashCode works now, but it's also good to avoid unexpected changes. If we were to add a System.String.HashCode that generates a stable hash in addition to System.String.GetHashCode, that would resolve the problem.\r\n\r\nOn the other hand, the warning I pasted previously explicitly says not to use them outside the application domain or persist them, so this might not be a problem. Also, if hashes are expected to \"differ across .NET implementations,\" this just seems like more of the same.",
        "createdAt": "2019-12-26T22:58:34Z",
        "updatedAt": "2019-12-26T22:58:34Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}