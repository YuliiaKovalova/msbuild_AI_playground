{
  "number": 6162,
  "title": "Solution filter name as MSBuild variable",
  "body": "We are starting to use new solution filters more, including in our build - they're great.  We have some conditional elements in our project files dependent on which .sln is being built, can you add support for which .slnf is being built / processed?  I had a look through available variables, but couldn't see any that looked like the current .slnf.",
  "state": "CLOSED",
  "createdAt": "2021-02-12T10:47:53Z",
  "updatedAt": "2024-12-17T03:38:54Z",
  "closedAt": "2021-02-18T08:53:35Z",
  "author": {
    "login": "rcmdh"
  },
  "labels": [
    "Feature Request",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Should be doable. There are only 11 lines with \"SolutionName\" in them, so probably just add SolutionFilterFileName under the relevant ones, and it'll show up as desired. Does that sound like the solution you want @rcmdh?",
        "createdAt": "2021-02-17T22:15:02Z",
        "updatedAt": "2021-02-17T22:15:02Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "Sounds great!",
        "createdAt": "2021-02-18T08:53:35Z",
        "updatedAt": "2021-02-18T08:53:35Z",
        "author": {
          "login": "rcmdh"
        }
      },
      {
        "body": "@rcmdh, We decided to back this out, unfortunately. See https://github.com/dotnet/msbuild/issues/6325#issuecomment-828550434",
        "createdAt": "2021-04-28T15:30:14Z",
        "updatedAt": "2021-04-28T15:30:14Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@Forgind Could this be reconsidered? From the sound of it, sounds like it was backed out because you didn't have the user stories to support it. So I'll start:\r\n\r\nWe have a solution filter that only opens the unit test projects. When opening project using this filter, I want to create a switch that uses nuget package references instead of project references, so that I can properly run my unit test with generated nuget packages, and also validate that these work correctly. The unit test projects won't even build when referencing the unloaded/filtered projects anyway, so naturally we do want to switch over.\r\n\r\nFor example\r\n```xml\r\n<ItemGroup Condition=\"'$(SolutionFilterName)'=='MySolutionFilter'\">\r\n    <PackageReference Include=\"MyProject\" Version=\"*\" />\r\n</ItemGroup>\r\n<ItemGroup Condition=\"'$(SolutionFilterName)'!='MySolutionFilter'\">\r\n    <ProjectReference Include=\"..\\MyProject\\MyProject.csproj\" />\r\n</ItemGroup>\r\n```\r\n\r\nThis makes it super easy for anyone to just open the test solution filter and run the unit tests with the latest build.\r\n\r\nCurrently we do this with a manually set switch, but would be much easier and less error-prone to tie it to the filter.",
        "createdAt": "2022-06-10T16:37:36Z",
        "updatedAt": "2022-06-10T16:37:36Z",
        "author": {
          "login": "dotMorten"
        }
      },
      {
        "body": "This \u261d\ufe0f a million times ",
        "createdAt": "2023-08-24T01:38:36Z",
        "updatedAt": "2023-08-24T01:38:36Z",
        "author": {
          "login": "dotMorten"
        }
      },
      {
        "body": "I figured since this issue is closed, I'd create a feature request instead:\r\n[Solution Filters for target frameworks as well as projects #9159](https://github.com/dotnet/msbuild/issues/9159)",
        "createdAt": "2023-08-24T02:01:34Z",
        "updatedAt": "2023-08-24T02:01:34Z",
        "author": {
          "login": "jamescrosswell"
        }
      },
      {
        "body": "Based on the comments, what we need is a concept of Build Profiles for solutions and Target Profiles for projects. But first we need to have a MSBuild native solution file format. Solution files are a concept tied to VS IDE only right now! They are verbose and not human friendly. There's an issue open, requesting to modernize the solution file.\n\nThen again, `SolutionFilterName` provides an interim relief for those who doesn't want/like to maintain multiple solutions. I know that is a nightmare. Sure, tools like SlnGen makes it easy but still not source control friendly.",
        "createdAt": "2023-08-24T02:34:49Z",
        "updatedAt": "2023-08-24T02:34:49Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> Based on the comments, what we need is a concept of Build Profiles for solutions and Target Profiles for projects. But first we need to have a MSBuild native solution file format. Solution files are a concept tied to VS IDE only right now! They are verbose and not human friendly. There's an issue open, requesting to modernize the solution file.\n> \n> Then again, `SolutionFilterName` provides an interim relief for those who doesn't want/like to maintain multiple solutions. I know that is a nightmare. Sure, tools like SlnGen makes it easy but still not source control friendly.\n\nIs there an issue for Build/Target profiles?\n\nMy usecase is very similar to the situation described in: https://github.com/dotnet/msbuild/issues/6162#issuecomment-1152543037",
        "createdAt": "2024-12-17T03:38:52Z",
        "updatedAt": "2024-12-17T03:38:52Z",
        "author": {
          "login": "CoenraadS"
        }
      }
    ]
  }
}