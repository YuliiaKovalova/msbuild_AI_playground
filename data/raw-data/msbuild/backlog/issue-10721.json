{
  "number": 10721,
  "title": "[Bug]: all references to metadata(in an Item element inside a Target) always refer to the value prior to evaluating the Item element",
  "body": "### Issue Description\r\n\r\nWhen using item metadata within an Item element contained inside a Target, the value of the metadata always evaluates to its value immediately before entering the Item element. That is, any updates to metadata inside an Item element are not reflected in later references to that metadata inside the same Item element\r\n\r\n### Steps to Reproduce\r\n\r\nA minimal sample project is available at https://github.com/Arthri/msbuild_demo_batching\r\n\r\n1. Include some items into a group\r\n2. Create a target which operates over the items and changes some metadata\r\n3. In the same Item element, update metadata conditionally using the metadata that was changed\r\n\r\nMiminal sample\r\n```xml\r\n<ItemGroup>\r\n  <T Include=\"a;b;c;d\" />\r\n</ItemGroup>\r\n\r\n<Target Name=\"_T\" BeforeTargets=\"Build\">\r\n  <ItemGroup>\r\n    <T>\r\n      <M>default data</M>\r\n      <M Condition=\"'%(T.M)' == 'default data'\">new default</M>\r\n    </T>\r\n  </ItemGroup>\r\n\r\n  <!-- Outputs 'default data' four times -->\r\n  <Warning Text=\"%(T.Identity): %(T.M)\" />\r\n</Target>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe condition should've used the new value of the metadata, and outputted four warnings containing \"new default\"\r\n\r\n### Actual Behavior\r\n\r\nThe condition used the old value of the metadata: the metadata before entering the Item element in the ItemGroup, and outputted four warnings containing \"default data\"\r\n\r\n### Analysis\r\n\r\nI believe that MSBuild is replacing the metadata before entering the Item element, and when the condition runs, it never sees the updated metadata values.\r\n\r\nAssuming the aforementioned is true, it can be concluded that spreading the metadata updates over several Item elements should work. And from my testing, I've observed that this is a working solution\r\n```xml\r\n<ItemGroup>\r\n  <T>\r\n    <M>default data</M>\r\n  </T>\r\n  <T>\r\n    <M Condition=\"'%(T.M)' == 'default data'\">new default</M>\r\n  </T>\r\n</ItemGroup>\r\n```\r\n\r\n### Versions & Configurations\r\n\r\n.NET SDK version `8.0.400`\r\nMSBuild version `17.11.3.35201` / `17.11.3+0c8610977`\r\nMicrosoft Visual Studio version `17.11.3`",
  "state": "OPEN",
  "createdAt": "2024-09-30T05:30:17Z",
  "updatedAt": "2025-01-14T10:49:57Z",
  "closedAt": null,
  "author": {
    "login": "Arthri"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Documentation",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "It seems likely that some projects are relying on the current behaviour already.  Are there easy ways to analyse public source code to measure how common that is?",
        "createdAt": "2024-09-30T05:54:28Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Pardon? Is that a question meant for me?",
        "createdAt": "2024-09-30T06:04:45Z",
        "author": {
          "login": "Arthri"
        }
      },
      {
        "body": "To anyone who knows about tools or services that can be used for such analysis.",
        "createdAt": "2024-09-30T06:34:57Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@rainersigwald It seems like [documentation](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-conditions?view=vs-2022#metadata) concerning expansion in conditions does not mention this situation in detail: \"The value of an %-expression in a target is evaluated at run-time and depends on any state changes during target execution.\".",
        "createdAt": "2024-10-01T16:23:45Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "Yes we should mention this behavior in the docs, it's not the behavior I'd expect but I don't expect it to change in the future either.",
        "createdAt": "2025-01-09T17:44:59Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}