{
  "number": 9891,
  "title": "[Built-in analyzer] Property that starts with an underscore is set",
  "body": "### Background\r\n\r\nThis issue tracks one of the BuildCheck analyzers we would like to ship in-box with MSBuild.\r\n\r\n### Goal\r\n\r\nImplement an analyzer with the following rule: Properties whose name starts with an underscore should not be set in project files that are part of the project (as opposed to SDK project files).\r\n\r\n### Notes\r\n\r\nBy convention, the leading underscore is used to mark properties as internal to common targets or SDK, and not expected to be modified by the user.",
  "state": "OPEN",
  "createdAt": "2024-03-18T14:37:45Z",
  "updatedAt": "2025-05-12T12:11:23Z",
  "closedAt": null,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "BuildCheck Suggestion",
    "triaged",
    "Area: BuildCheck"
  ],
  "comments": {
    "nodes": [
      {
        "body": "How about props/targets files in NuGet packages; are underscores okay in those?  I hope it won't be based on whether the package name starts with \"Microsoft.\"",
        "createdAt": "2024-03-18T16:00:57Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "\"What is the scope of this analysis\" is definitely the key question here. I think initially it should be \"code in the repo doesn't do this\"; eventually a nice extension would be \"don't touch private variables _that don't belong to you_\", with some kind of detection where like paired props/targets or \"within a NuGet package\" are allowed but not touching \"someone else's\".",
        "createdAt": "2024-03-18T16:05:52Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The `MSBuild` prefix might want to be included as well (https://github.com/dotnet/msbuild/pull/10102#discussion_r1598285182)",
        "createdAt": "2024-05-13T11:03:24Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "@JanKrivanek many MSBuild-prefix properties are intended to be set in user code, like `MSBuildTreatWarningsAsErrors`.",
        "createdAt": "2024-05-13T14:21:44Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We might seed this with some initial list of reserved properties (beyond the `'_'` prefix), plus an optional custom configuration key - something like 'forbidden_write_properties_csv'",
        "createdAt": "2024-05-14T13:12:02Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "I think, as a user, that I'd prefer to have that split in three error codes:\r\n\r\n1. \"privates\" (`_` prefix)\r\n2. MSBuild-team reserved properties\r\n3. configurable deny-list\r\n\r\nMostly just so the docs page for the error can be super clear about remediation, especially around 3.",
        "createdAt": "2024-05-14T14:01:17Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I like that idea. (all those rules would still be contained within single executing BuildCheck)",
        "createdAt": "2024-05-15T11:48:54Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Suggestion by @rainersigwald: the configurable deny list would be nice to have it's own code (so different rule in same Check)",
        "createdAt": "2024-10-30T14:35:13Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}