{
  "number": 1927,
  "title": "Circular dependency error when building for docker",
  "body": "Project created with VS2017 for .net core and with docker support contains docker-compose files in the root folder and Dockerfile in the project folder. It's also standard to have Dockerfile in the root, or in the same folder as docker-compose files.\r\nProblem occurs when Dockerfile is moved next to docker-compose files and context of docker-compose is set to \".\".\r\n\r\n```\r\nversion: '2'\r\nservices:\r\n  webapplication1:\r\n    image: webapplication1\r\n    build:\r\n      context: .\r\n      dockerfile: Dockerfile\r\n```\r\n**Output: There is a circular dependency in the target dependency graph involving target \"DockerBuildServiceReferences\"**.",
  "state": "CLOSED",
  "createdAt": "2017-03-30T07:38:43Z",
  "updatedAt": "2024-02-21T17:20:15Z",
  "closedAt": "2020-04-29T16:29:36Z",
  "author": {
    "login": "ondrejtomcik"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Same problem but with the absolute basic settings. Nothing moved or touched which is related to docker.\r\n\r\nI tried to run `dotnet ef migrations add ...`",
        "createdAt": "2018-07-16T09:02:11Z",
        "updatedAt": "2018-07-16T09:02:11Z",
        "author": {
          "login": "Heurazio"
        }
      },
      {
        "body": "@Heurazio (or anyone seeing this problem): can you provide more detailed repro instructions? Docker support has changed since this was originally filed, and I don't see this problem on my machine.",
        "createdAt": "2018-07-16T20:41:38Z",
        "updatedAt": "2018-07-16T20:41:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Create a fresh project with docker support and add one or more other APIs (with Docker support, too). Then try to run any `dotnet ...` command (especially the ones for EF). This will result in a circular dependency error. If you run the corresponding Power-Shell command eg. `Add-Migration ...` instead of `dotnet ef migration add ...` it's working without any problem. ",
        "createdAt": "2018-07-16T23:55:45Z",
        "updatedAt": "2018-07-16T23:55:45Z",
        "author": {
          "login": "Heurazio"
        }
      },
      {
        "body": "Team triage: closing due to age. If you're still seeing this problem, please let us know and we can reactivate it.",
        "createdAt": "2020-04-29T16:29:36Z",
        "updatedAt": "2020-04-29T16:29:36Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}