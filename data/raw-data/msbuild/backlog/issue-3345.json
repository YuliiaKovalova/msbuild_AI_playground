{
  "number": 3345,
  "title": "Build reports success when an AfterTargets errors",
  "body": "### Steps to reproduce\r\n\r\n1.proj\r\n```xml\r\n<Project DefaultTargets=\"Build\">\r\n    <Target Name=\"Build\">\r\n        <MSBuild Projects=\"2.proj\" Targets=\"Build\"/>\r\n    </Target>\r\n</Project>\r\n```\r\n2.proj\r\n```xml\r\n<Project DefaultTargets=\"Build\">\r\n    <Target Name=\"Build\" />\r\n\r\n    <Target Name=\"IndirectBuild\" AfterTargets=\"Build\">\r\n        <Error Text=\"Induce failure\" />\r\n    </Target>\r\n</Project>\r\n```\r\n\r\nbuild with\r\n```\r\nset MSBUILDNOINPROCNODE=1\r\n\r\nmsbuild.exe 1.proj /clp:ShowCommandLine /m:1 /verbosity:n /nr:false /bl /fl /flp:v=diagnostic\r\n```\r\n\r\n### Expected  behavior\r\n\r\nBuild fails because of the `<Error>` task\r\n\r\n### Actual behavior\r\nBuild succeeds:\r\n\r\n```\r\nBuild started 5/24/2018 5:35:56 PM.\r\nProject \"e:\\delete\\repro\\1.proj\" on node 2 (default targets).\r\nProject \"e:\\delete\\repro\\1.proj\" (1) is building \"e:\\delete\\repro\\2.proj\" (2) on node 2 (Build target(s)).\r\ne:\\delete\\repro\\2.proj(5,9): error : Induce failure\r\nDone Building Project \"e:\\delete\\repro\\2.proj\" (Build target(s)) -- FAILED.\r\n\r\nDone Building Project \"e:\\delete\\repro\\1.proj\" (default targets).\r\n\r\nDeferred Messages\r\n\r\n  Detailed Build Summary\r\n  ======================\r\n\r\n\r\n  ============================== Build Hierarchy (IDs represent configurations) =====================================================\r\n  Id                  : Exclusive Time   Total Time   Path (Targets)\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  0                   : 0.101s           0.120s       e:\\delete\\repro\\1.proj ()\r\n  . 1                 : 0.018s           0.018s       e:\\delete\\repro\\2.proj (Build)\r\n\r\n  ============================== Node Utilization (IDs represent configurations) ====================================================\r\n  Timestamp:            2        Duration   Cumulative\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  636628053566714538:   0        0.096s     0.096s #\r\n  636628053567674882:   1        0.018s     0.114s\r\n  636628053567855025:   0        0.007s     0.121s\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  Utilization:          100.0    Average Utilization: 100.0\r\n\r\nBuild succeeded.\r\n\r\n\"e:\\delete\\repro\\1.proj\" (default target) (1) ->\r\n\"e:\\delete\\repro\\2.proj\" (Build target) (2) ->\r\n(IndirectBuild target) ->\r\n  e:\\delete\\repro\\2.proj(5,9): error : Induce failure\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.22\r\n```\r\n",
  "state": "CLOSED",
  "createdAt": "2018-05-25T00:23:39Z",
  "updatedAt": "2024-02-21T17:13:00Z",
  "closedAt": "2020-03-31T07:11:53Z",
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Changing 2.proj to the following makes it work.\r\n\r\n```xml\r\n<Project DefaultTargets=\"Build\">\r\n    <Target Name=\"Build\" DependsOnTargets=\"IndirectBuild\"/>\r\n\r\n    <Target Name=\"IndirectBuild\">\r\n        <Error Text=\"Induce failure\" />\r\n    </Target>\r\n</Project>\r\n```\r\n```\r\nProject \"e:\\delete\\repro\\1.proj\" on node 2 (default targets).\r\nProject \"e:\\delete\\repro\\1.proj\" (1) is building \"e:\\delete\\repro\\2.proj\" (2) on node 2 (Build target(s)).\r\ne:\\delete\\repro\\2.proj(5,9): error : Induce failure\r\nDone Building Project \"e:\\delete\\repro\\2.proj\" (Build target(s)) -- FAILED.\r\n\r\nDone Building Project \"e:\\delete\\repro\\1.proj\" (default targets) -- FAILED.\r\n\r\nDeferred Messages\r\n\r\n  Detailed Build Summary\r\n  ======================\r\n\r\n\r\n  ============================== Build Hierarchy (IDs represent configurations) =====================================================\r\n  Id                  : Exclusive Time   Total Time   Path (Targets)\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  0                   : 0.099s           0.118s       e:\\delete\\repro\\1.proj ()\r\n  . 1                 : 0.018s           0.018s       e:\\delete\\repro\\2.proj (Build)\r\n\r\n  ============================== Node Utilization (IDs represent configurations) ====================================================\r\n  Timestamp:            2        Duration   Cumulative\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  636628059279846253:   0        0.094s     0.094s #\r\n  636628059280786685:   1        0.018s     0.112s\r\n  636628059280966525:   0        0.007s     0.119s\r\n  -----------------------------------------------------------------------------------------------------------------------------------\r\n  Utilization:          100.0    Average Utilization: 100.0\r\n\r\nBuild FAILED.\r\n\r\n\"e:\\delete\\repro\\1.proj\" (default target) (1) ->\r\n\"e:\\delete\\repro\\2.proj\" (Build target) (2) ->\r\n(IndirectBuild target) ->\r\n  e:\\delete\\repro\\2.proj(5,9): error : Induce failure\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.23\r\n```",
        "createdAt": "2018-05-25T00:46:25Z",
        "updatedAt": "2018-05-25T00:46:25Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "I think the reason that this is happening is that from a certain point of view the MSBuild request _is_ succeeding. It's legal to \"partially\" build another project by specifying an entry-point target, and the result of that request should be success if all of the targets that must run before that target and that target itself succeed.\r\n\r\nConsider a small project:\r\n\r\n```\r\nDeploy DependsOn\r\nBuild DependsOn\r\nInitialize\r\n```\r\n\r\nIf you call the target `Build`, `Deploy` won't run, so its success or failure is irrelevant to the result of `Build`.\r\n\r\nIn this situation,\r\n\r\n```\r\nDeploy2 AfterTargets\r\nBuild2 DependsOn\r\nInitialize2\r\n```\r\n\r\nThere's no way to run `Build2` without also running `Deploy2`. But if the entry-point is `Build2`, what should the result be if `Initialize2` and `Build2` pass but `Deploy2` fails? It's arguable that the request succeeded because `Build2` succeeded. But I agree with single-proc MSBuild that that's not the intuitive, reasonable answer.\r\n\r\nNote that this has been this way since MSBuild 4.5:\r\n\r\n```\r\nS:\\repro\\Microsoft\\msbuild\\issues\\3345>C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe 1.proj\r\nMicrosoft (R) Build Engine version 4.7.3056.0\r\n[Microsoft .NET Framework, version 4.0.30319.42000]\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 5/25/2018 10:53:54 AM.\r\nProject \"S:\\repro\\Microsoft\\msbuild\\issues\\3345\\1.proj\" on node 2 (default targets).\r\nProject \"S:\\repro\\Microsoft\\msbuild\\issues\\3345\\1.proj\" (1) is building \"S:\\repro\\Microsoft\\msbuild\\issues\\3345\\2.proj\" (2) on node 2 (Build target(s)).\r\nS:\\repro\\Microsoft\\msbuild\\issues\\3345\\2.proj(5,9): error : Induce failure\r\nDone Building Project \"S:\\repro\\Microsoft\\msbuild\\issues\\3345\\2.proj\" (Build target(s)) -- FAILED.\r\n\r\nDone Building Project \"S:\\repro\\Microsoft\\msbuild\\issues\\3345\\1.proj\" (default targets).\r\n\r\n\r\nBuild succeeded.\r\n\r\n\"S:\\repro\\Microsoft\\msbuild\\issues\\3345\\1.proj\" (default target) (1) ->\r\n\"S:\\repro\\Microsoft\\msbuild\\issues\\3345\\2.proj\" (Build target) (2) ->\r\n(IndirectBuild target) ->\r\n  S:\\repro\\Microsoft\\msbuild\\issues\\3345\\2.proj(5,9): error : Induce failure\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.38\r\n```",
        "createdAt": "2018-05-25T15:54:08Z",
        "updatedAt": "2018-05-25T15:54:08Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "In an internal forum, I got the question\r\n\r\n> Does the bug also affect targets named \u201cAfterBuild\u201d?\r\n\r\nIt does **not**, assuming the standard pattern of targets, which is:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/e7ea68da3ee0929a07cc36e877a32d5e444efefb/src/Tasks/Microsoft.Common.CurrentVersion.targets#L832-L842\r\n\r\nThat creates a [target build order](https://docs.microsoft.com/en-us/visualstudio/msbuild/target-build-order) dependency that requires that `AfterBuild` (and anything that says `AfterTargets=\"AfterBuild\"`) complete successfully before the `Build` target can attempt to run.\r\n\r\nWhen the standard `DefaultTargets=\"Build\"` applies, this bug arises _only_ for targets with `AfterTargets=\"Build\"`.",
        "createdAt": "2018-05-25T16:25:49Z",
        "updatedAt": "2018-05-25T16:25:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We hit this (not failing, but an error occurred in AfterTargets) behavior too today.\r\n\r\nmsbuild binlog analysis did not show initial error, but then if you look with $error search you can find it and it is not obvious why the build was actually not failing (ContinueOnError=\"false\", etc was all set correctly).\r\n\r\nGlad I found this bug to explain what was happening, not sure if this sufficiently clear for everyone though.",
        "createdAt": "2019-09-16T13:47:23Z",
        "updatedAt": "2019-09-16T13:47:23Z",
        "author": {
          "login": "japj"
        }
      },
      {
        "body": "Is there a plan to fix this? It's let a couple bugs through our CI system recently.",
        "createdAt": "2019-11-14T18:16:45Z",
        "updatedAt": "2019-11-14T18:16:45Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "> Changing 2.proj to the following makes it work.\r\n> \r\n> ```\r\n> <Project DefaultTargets=\"Build\">\r\n>     <Target Name=\"Build\" DependsOnTargets=\"IndirectBuild\"/>\r\n> \r\n>     <Target Name=\"IndirectBuild\">\r\n>         <Error Text=\"Induce failure\" />\r\n>     </Target>\r\n> </Project>\r\n> ```\r\n\r\n@rainersigwald \r\n\r\nMaybe I'm misunderstanding this, but wouldn't this change the target order? In the original, you're running:\r\n\r\nBuild then IndirectBuild\r\n\r\nIn the fixed version, you run IndirectBuild before Build.",
        "createdAt": "2019-11-14T18:46:36Z",
        "updatedAt": "2019-11-14T18:48:02Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "@mmitche that's true, but usually not interesting; the `Build` target is generally empty and exists only to aggregate/order other targets.",
        "createdAt": "2019-11-14T19:55:20Z",
        "updatedAt": "2019-11-14T19:55:20Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}