{
  "number": 2343,
  "title": "Directory.Build.targets is not imported when specifying msbuild target",
  "body": "## Setup\r\n\r\nAt the root of my repo I have a `Directory.Build.props` containing:\r\n```xml\r\n<Project>\r\n    <PropertyGroup>\r\n        <CustomMessage>Hello!</CustomMessage>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nI also have a `Directory.Build.targets` containing:\r\n```xml\r\n<Project>\r\n    <Target Name=\"SimpleMessage\" BeforeTargets=\"Build\">\r\n        <Message Text=\"My Message is => $(CustomMessage)\" Importance=\"high\" />\r\n    </Target>\r\n</Project>\r\n```\r\n\r\n## Issue\r\nWhen the target is invoked directly, using `dotnet build /t:SimpleMessage` or `dotnet msbuild /t:SimpleMessage` the target cannot be found\r\n```\r\nC:\\Code\\Example\\src\\Example\\bin\\Debug\\net462\\Example.csproj : error MSB4057: The target \"SimpleMessage\" does not exist in the project.\r\n```\r\n## Expected\r\nI would expect the target to be discovered and invoked.\r\n\r\n## Aside\r\nWhen invoking `dotnet build` the `SimpleMessage` target is fired before a build:\r\n```\r\nMy Message is => Hello!\r\nExample -> C:\\Code\\Example\\src\\Example\\bin\\Debug\\net462\\Example.dll\r\n```\r\n\r\nIf I move the target from the *.targets file to the *.props file, the direct invocation works.\r\n\r\nAfter running `dotnet msbuild .\\src\\Example\\Example.csproj /pp:out.xml` I can see in the out.xml that `Directory.Build.props` was imported but `Directory.Build.targets` was not\r\n\r\nRepro is now attached\r\n[repro.zip](https://github.com/Microsoft/msbuild/files/2985164/repro.zip)\r\n",
  "state": "CLOSED",
  "createdAt": "2017-07-21T10:16:48Z",
  "updatedAt": "2024-02-21T17:17:46Z",
  "closedAt": "2019-03-19T17:33:09Z",
  "author": {
    "login": "Kieranties"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I had this same problem as well, as a workaround I included this:\r\n\r\n```xml\r\n  <Import Project=\"$(MSBuildBinPath)\\Microsoft.Common.targets\"/>  \r\n```",
        "createdAt": "2019-03-15T18:36:47Z",
        "updatedAt": "2019-03-15T19:09:01Z",
        "author": {
          "login": "ltobiasg"
        }
      },
      {
        "body": "Can either of y'all share a repro? I just tried with the file contents @Kieranties described and didn't see any problems:\r\n\r\n```\r\nS:\\repro\\Microsoft\\msbuild\\issues\\2343>dotnet msbuild /t:SimpleMessage\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  My Message is => Hello!\r\n```\r\n\r\n> I had this same problem as well, as a workaround I included this:\r\n> \r\n> ```\r\n>   <Import Project=\"$(MSBuildBinPath)\\Microsoft.Common.targets\"/>  \r\n> ```\r\n\r\nThis is generally not a good idea--that import should be handled for you by an Sdk import.",
        "createdAt": "2019-03-15T19:16:13Z",
        "updatedAt": "2019-03-15T19:18:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I had this issue close to two years ago... It'll be good if it's been fixed through changes since then. I'll double check this weekend.",
        "createdAt": "2019-03-15T20:23:56Z",
        "updatedAt": "2019-03-15T20:23:56Z",
        "author": {
          "login": "Kieranties"
        }
      },
      {
        "body": "My setup is different, but the symptoms are the same. The Directory.Build.props file is being imported, but the Directory.Build.targets file is not. \r\n\r\nI am not referencing an SDK, but importing the Project Microsoft.Common.CurrentVersion.targets directly. Below is the content of my project file. The Publish target is being overwritten in the Directory.Build.targets file and to trigger I am calling `dotnet publish --no-build --no-restore`\r\n\r\nThe Directory.Build.props file is always being imported, but the .targets file wasn't importing unless I did an explicit import of Common.targets\r\n\r\n```\r\n<Project>\r\n  <PropertyGroup>\r\n    <!-- Required until this bug is fixed: https://github.com/dotnet/cli/issues/9477 -->\r\n    <DefaultProjectTypeGuid>FAE04EC0-301F-11D3-BF4B-00C04F79EFBC</DefaultProjectTypeGuid>\r\n    <!-- Required for ResolveReferences target -->\r\n    <OutputPath>.</OutputPath>\r\n  </PropertyGroup>\r\n  <!-- This is required because Directory.Build.targets is not being imported from CurrentVersions    -->\r\n  <Import Project=\"$(MSBuildBinPath)\\Microsoft.Common.targets\"/>  \r\n  \r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(NETCoreSdkVersion)\\Microsoft.Common.CurrentVersion.targets\" />\r\n  <!-- Required by target ResolveReferences -->\r\n  <Target Name=\"CreateManifestResourceNames\"/>\r\n  <Target Name=\"CopyFilesToOutputDirectory\" />\r\n  <Target Name=\"CoreCompile\"/>\r\n  <Target Name=\"_ForceResolveReferences\" DependsOnTargets=\"ResolveReferences\" BeforeTargets=\"Publish\" />\r\n</Project>\r\n```",
        "createdAt": "2019-03-15T20:48:49Z",
        "updatedAt": "2019-03-15T20:48:49Z",
        "author": {
          "login": "ltobiasg"
        }
      },
      {
        "body": "@itobiasg this seems expected to me. Directory.Build.targets is explicitly imported by Microsoft.Common.targets. If you don't have that in your project, then Directory.Build.targets will not be imported. In the case of SDK style projects, that target gets imported by the SDK which leads to Directory.Build.targets then being imported as well.\r\n\r\nBy the way, this is documented here: https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2017.\r\n\r\nGiven that, I am going to close this bug as by design (and fixed in the original filling of the bug).",
        "createdAt": "2019-03-19T17:33:09Z",
        "updatedAt": "2019-03-19T17:33:09Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "Apologies that I took longer to reply.  I'm happy to confirm that I've been unable to replicate the issue now.\r\nI checked with using sdk version 2.0.0 via global.json (msbuild 15.3.409.57025) and could not replicate the issue with there either.\r\n\r\nIn case anyone else comes up against the issue, I've now attached a repro.",
        "createdAt": "2019-03-19T19:04:01Z",
        "updatedAt": "2019-03-19T19:06:49Z",
        "author": {
          "login": "Kieranties"
        }
      }
    ]
  }
}