{
  "number": 6305,
  "title": "Do not log task inputs/outputs when LogTaskInputs is set",
  "body": "RAR attempts to avoid logging task inputs and outputs when LogTaskInputs is set:\r\nhttps://github.com/dotnet/msbuild/blob/38da84d453b14008b148c7eea28df24ab4443bb7/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs#L1317\r\n\r\nHowever I've just realized this may not properly propagate to node processes. We need a way to reliably extract this information from a task.",
  "state": "CLOSED",
  "createdAt": "2021-03-26T19:28:35Z",
  "updatedAt": "2024-02-21T14:14:02Z",
  "closedAt": "2021-09-13T11:44:36Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "needs-design",
    "Area: Tasks",
    "Area: Task: Resolve Assembly References (RAR)",
    "Area: Logging",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "See a prototype here:\r\nhttps://github.com/dotnet/msbuild/commit/1011f1771ff1460bfebb74210de8469339cfca35\r\nIt seems to be working fine.\r\n\r\nCaveat: figure out the story for MSBuildTaskHost net35 and whether we care about it.\r\n\r\nThe design decision to make is how to expose this to tasks. Adding stuff to IBuildEngine seems natural.\r\nLet's wait for Rainer to decide on the approach.\r\n\r\nAdditional approach would be to introduce an internal interface with `bool LogTaskInputs {get; set;}` and have `Task` or `TaskExtension` implement that, then in `TaskExecutionHost` after instantiating the task check for that interface and set `LogTaskInputs` if present.\r\n",
        "createdAt": "2021-03-29T20:12:00Z",
        "updatedAt": "2021-03-29T20:12:00Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@KirillOsenkov #6381 is now merged so we can add the new property to the `EngineServices` class. Please remind me of the intended logic here. We want to expose `LogTaskInputs` as specified in `BuildParameters` to tasks, is that correct? In the commit linked above the flag is hardcoded to true but I guess that's only for testing, it should come from `TaskExecutionHost.LogTaskInputs`.",
        "createdAt": "2021-08-06T08:21:29Z",
        "updatedAt": "2021-08-06T08:21:29Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Yes, exactly. It shouldn't matter which node the task is running in, tasks should be getting correct LogTaskInputs and be able to act based on the value, like here:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/38da84d453b14008b148c7eea28df24ab4443bb7/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs#L1317\r\n\r\nRAR I'm worried about the most because now we log everything twice, and RAR is by far the biggest source of logging. RAR and a few other tasks (mostly NuGet) should then update to turn off custom logging of parameters when LogTaskInputs is true.",
        "createdAt": "2021-08-06T16:05:58Z",
        "updatedAt": "2021-08-06T16:05:58Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}