{
  "number": 3627,
  "title": "Build Failure Since Upgrade to 2.1.400",
  "body": "_From @jamiebrynes7 on August 15, 2018 11:5_\n\n## Steps to reproduce\r\n1. Install dotnet 2.1.400\r\n2. Clone https://github.com/spatialos/UnityGDK\r\n3. Ensure that `global.json` has the version set to `2.1.400`\r\n3. Run `./ci/codegen.sh` or run the following command directly from the root of the project:\r\n```\r\ndotnet run -p code_generator/GdkCodeGenerator/GdkCodeGenerator.csproj -- --schema-compiler-path=tools/schema_compiler/win/schema_compiler.exe --schema-path=schema --schema-path=build/dependencies/schema/standard_library --json-dir=workers/unity/Temp/ImprobableJson --native-output-dir=workers/unity/Assets/Generated/Source --network-types-output-dir=workers/unity/Assets/Improbable.Generated.NetworkTypes/Generated\r\n```\r\n\r\n## Expected  behavior\r\nThe build succeeds and the project is ran.\r\n\r\n## Actual behavior\r\nThe build fails with the following message:\r\n```\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018: The \"TransformAllTask\" task failed unexpectedly.\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018: System.IO.FileLoadException: Could not load file or assembly 'System.CodeDom, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621)\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018: File name: 'System.CodeDom, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018:    at Mono.TextTemplating.TemplateGenerator..ctor()\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018:    at Improbable.TextTemplating.TransformAllTask.Execute()\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask)\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018:\r\nC:\\Workspace\\Develop\\UnityGDK\\code_generator\\GdkCodeGenerator\\GdkCodeGenerator.csproj(51,5): error MSB4018:\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\nWhere `TransformAllTask` is a pre-build step to generate `cs` files from `tt` which are then used at execution time. `TransformAllTask` is in `Improbable.TextTemplating.dll` that is pinned, along with its dependencies in the `GdkCodeGenerator` project. (Rebuilding the dlls and replacing doesn't affect the result).\r\n\r\nThis build succeeds when ran with dotnet 2.1.30x\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n\u03bb dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.400\r\n Commit:    8642e60a0f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.400\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.2\r\n  Commit:  811c3ce6c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#9839_",
  "state": "CLOSED",
  "createdAt": "2018-08-17T02:32:57Z",
  "updatedAt": "2024-02-21T17:11:48Z",
  "closedAt": "2019-06-04T23:34:00Z",
  "author": {
    "login": "nguerrera"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.2"
  },
  "comments": {
    "nodes": [
      {
        "body": "There's a 4.0.0.0 System.CodeDom.dll that comes in from MSBuild to the CLI starting in 15.8/2.1.400 and this seems to prevent a custom task from loading a newer version.\r\n\r\ncc @jeffkl @rainersigwald @AndyGerlicher ",
        "createdAt": "2018-08-17T02:34:12Z",
        "updatedAt": "2018-08-17T02:34:12Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "https://github.com/Microsoft/msbuild/pull/3175/files#diff-4d3fc7780500131817fceb95ddcea3feR957\r\n",
        "createdAt": "2018-08-17T02:36:04Z",
        "updatedAt": "2018-08-17T02:36:04Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "I was hoping that modifying your project to reference the same version of `System.CodeDOM` that MSBuild does (package version `4.4.0`, assembly version `4.0.0.0`) would resolve the problem, but it does not because (checked-in) `Mono.TextTemplating.dll` refers to `System.CodeDom, Version=4.0.1.0`, which is causing the real load problem.\r\n\r\nI think the long-term solution here is #1754, but that's not something that can be worked around easily.\r\n\r\n@jamiebrynes7 I was able to get your repro working in a few steps:\r\n\r\n1. Build Mono.TextTemplating (from https://github.com/mono/t4/commit/630491449f219b3f5e7674e054d92794dd091d74).\r\n1. Copy the `netstandard2.0` output to `code_generator/GdkCodeGenerator/dependencies/Improbable.TextTemplating/Mono.TextTemplating.dll` in your repo.\r\n1. Build\r\n\r\nThis works for .NET Core since Mono.TextTemplating recently added .NET Core support and depends on the same version of the package that we do there.\r\n\r\nUnfortunately it fails with a loader error on full framework `MSBuild.exe`, because Mono.TextTemplating added public key token (https://github.com/mono/t4/commit/1c3ed573badfb76c339206acffbe97dbe156e220), so the .NET loader fails with:\r\n\r\n```\r\nLOG: Attempting download of new URL file:///s:/work/UnityGDK/code_generator/GdkCodeGenerator/dependencies/Improbable.TextTemplating/Mono.TextTemplating.DLL.\r\nWRN: Comparing the assembly name resulted in the mismatch: PUBLIC KEY TOKEN\r\n```\r\n\r\nThat could be resolved by either patching your local build of Mono.TextTemplating to drop the PKT, or rebuilding `Improbable.TextTemplating.dll` against the new assembly.\r\n\r\nOr you could have two copies of the assemblies, one as-is and one for .NET Core that uses all the new stuff.",
        "createdAt": "2018-08-17T15:30:59Z",
        "updatedAt": "2018-08-17T15:30:59Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald \r\n\r\nThanks for the writeup - I've been able to get the project building and running using your workaround listed above.\r\n\r\nStrangely - that version of Mono.TextTemplating was the exact version I pulled in as source when setting up the project (as the NuGet version is slightly outdated).\r\n\r\nWe only expect users to run the project through.NET Core anyway so that works perfectly! \r\n\r\nThanks again! :smile: ",
        "createdAt": "2018-08-24T23:46:42Z",
        "updatedAt": "2018-08-24T23:46:42Z",
        "author": {
          "login": "jamiebrynes7"
        }
      },
      {
        "body": "I just hit this with the port of presentationbuildtasks to .net core",
        "createdAt": "2018-10-10T02:44:59Z",
        "updatedAt": "2018-10-10T02:44:59Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "I have worked around it by using package version 4.4.0 for presentationbuildtasks, but I think we should prioritize #1754. Maybe we don't even need this bug and consider it a dupe of #1754.",
        "createdAt": "2018-10-16T22:17:25Z",
        "updatedAt": "2018-10-16T22:17:25Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "#3991 updates to 4.5.0, I think we can call that good enough for this bug, but the real fix is #1754.",
        "createdAt": "2018-12-07T01:11:02Z",
        "updatedAt": "2018-12-07T01:11:02Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "https://github.com/dotnet/toolset/pull/1127 will fix this for CodeDom and other fx assemblies such that the SDK will always lift codedom up to latest now, but we should still do #1754.",
        "createdAt": "2019-06-04T23:33:59Z",
        "updatedAt": "2019-06-04T23:33:59Z",
        "author": {
          "login": "nguerrera"
        }
      }
    ]
  }
}