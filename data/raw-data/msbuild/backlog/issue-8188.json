{
  "number": 8188,
  "title": "Include Exclude doesn't seem to work Xplat when path separator is `/` (forward slash)",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\n<!--\r\n* Please include a clear and concise description of the problem.\r\n-->\r\nProblem encountered in https://github.com/MudBlazor/MudBlazor/pull/5801\r\n```\r\n  <Target Name=\"IncludeGeneratedStaticFiles\" DependsOnTargets=\"WebCompiler\" BeforeTargets=\"BeforeBuild\">\r\n    <ItemGroup>\r\n      <!--Include without duplication-->\r\n      <_NewCompiledDocsCssFiles Include=\"wwwroot/MudBlazorDocs.min.css\" Exclude=\"@(Content)\" />\r\n      <Content Include=\"@(_NewCompiledDocsCssFiles)\" />\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\nIt seems `Include=\"wwwroot/MudBlazorDocs.min.css\"` pattern with `Exclude=@(Content)` fails to remove duplicates on windows.  I need to use `\\` (backslash) for path separator in order for it to work on Windows and Linux/mac\r\n\r\nIn all our project files we normally use `/ ` (forward slash) for path separators and the problem didn't show up on mac or build servers (Linux).\r\n\r\nHowever windows users local builds started to fail.\r\n\r\nIn the following example `wwwroot/MudBlazorDocs.min.css` as the `Include` pattern fails on Windows platform with duplicate content files.\r\n\r\nIf I change it to  `wwwroot\\MudBlazorDocs.min.css` the Content is correct and the build succeeds with no duplicate Content files\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nRepo\r\n\r\nBuild https://github.com/MudBlazor/MudBlazor/pull/5801 on Windows (fails)\r\nBuild https://github.com/MudBlazor/MudBlazor/pull/5801 on OS with `/` path separator (succeeds)\r\n\r\nAlternatively use HEAD of dev and change the following lines to a forward slash the build will fail on windows but succeed on Linux/mac\r\n\r\nhttps://github.com/MudBlazor/MudBlazor/blob/2f65df6b8d39ddd7109bce58648ad60be606f177/src/MudBlazor/MudBlazor.csproj#L91\r\nhttps://github.com/MudBlazor/MudBlazor/blob/2f65df6b8d39ddd7109bce58648ad60be606f177/src/MudBlazor/MudBlazor.csproj#L92\r\nhttps://github.com/MudBlazor/MudBlazor/blob/2f65df6b8d39ddd7109bce58648ad60be606f177/src/MudBlazor.Docs/MudBlazor.Docs.csproj#L113\r\n\r\n### Expected Behavior\r\nTo be able to use `/` everywhere as the path separator for Xplat builds\r\n\r\n### Actual Behavior\r\nThe Include Exclude pair fails and duplicate files are passed to `Microsoft.NET.Sdk.Razor.StaticWebAssets`\r\n`C:\\Program Files\\dotnet\\sdk\\7.0.100\\Sdks\\Microsoft.NET.Sdk.Razor\\targets\\Microsoft.NET.Sdk.Razor.StaticWebAssets.target\r\ns(419,5): error : Two assets found targeting the same path with incompatible asset kinds: `\r\n\r\n### Analysis\r\n\r\nSomething to do with path separators and string comparisons only when using forward slash as path separator\r\nSeems similar to https://github.com/dotnet/msbuild/issues/724\r\nHowever that looks like it had a fix\r\n\r\n### Versions & Configurations\r\n```\r\ndotnet msbuild --version\r\nMSBuild version 17.4.0+18d5aef85 for .NET\r\n17.4.0.51802\r\n```\r\n* If applicable, include the version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n```\r\ndotnet --version\r\n7.0.100\r\n```\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2022-11-22T20:43:08Z",
  "updatedAt": "2023-01-04T07:14:24Z",
  "closedAt": "2023-01-04T07:14:16Z",
  "author": {
    "login": "mikes-gh"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald I'd like to have a look at issue ",
        "createdAt": "2022-12-07T09:46:41Z",
        "updatedAt": "2022-12-07T09:46:41Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "[msbuild.txt](https://github.com/dotnet/msbuild/files/10192943/msbuild.txt) open this with msbuild binlog.\r\n The .NET SDK default  'Content' items contains wwwroot\\MudBlazor.min.css, <_NewCompiledDocsCssFiles Include=\"wwwroot/MudBlazorDocs.min.css\" Exclude=\"@(Content)\" /> doesn't recognize the wwwroot\\MudBlazor.min.css and wwwroot/MudBlazorDocs.min.css are same, so fail to remove duplicates.\r\n",
        "createdAt": "2022-12-09T08:20:13Z",
        "updatedAt": "2022-12-09T08:20:13Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "@JaynieBai Thanks for looking into this.  This was my suspicions too.  Presumably the comparison should be path separator agnostic though right?",
        "createdAt": "2022-12-09T08:24:42Z",
        "updatedAt": "2022-12-09T08:25:00Z",
        "author": {
          "login": "mikes-gh"
        }
      },
      {
        "body": "MSBuild the following project.  Not sure why the item outside of target works with excluding the specified file correctly. But in the target item exclude doesn't work. Is there any difference when parse  between them?  @rainersigwald \r\n```\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n\t<ItemGroup>\r\n\t\t<!--Include without duplication-->\r\n\t\t<_NewCompiledCssFiles Include=\"File/Program.cs\" Exclude=\"File\\Program.cs\"  />\r\n\t</ItemGroup>\r\n\t<Target Name=\"Message\">\r\n\t\t<ItemGroup>\r\n\t\t\t<!--Include without duplication-->\r\n\t\t\t<_NewCompiledCssFiles Include=\"File/Program.cs\" Exclude=\"File\\Program.cs\"  />\r\n\t\t\t<Content Include=\"@(_NewCompiledCssFiles)\" />\r\n\t\t</ItemGroup>\r\n\t\t<Message Text=\"Current Content is @(_NewCompiledCssFiles)\" Condition=\"'@(_NewCompiledCssFiles)' != '' \"></Message>\r\n\t</Target>\r\n</Project>\r\n\r\n```\r\n![image](https://user-images.githubusercontent.com/26814373/207001290-1ca99b56-3666-457d-a11b-53c3f624e324.png)\r\n",
        "createdAt": "2022-12-12T08:48:28Z",
        "updatedAt": "2022-12-12T08:50:11Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "Not sure why the https://github.com/dotnet/msbuild/blob/9c3057b5af56ef92ffde7d1b37dea8ddee74d8b1/src/Build/Evaluation/LazyItemEvaluator.cs#L555 is not triggered when debug the item under the target.",
        "createdAt": "2022-12-12T09:21:59Z",
        "updatedAt": "2022-12-12T09:21:59Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "@JanKrivanek @rainersigwald   I changed the tests about item with include and exlude under the target and made a draft pr. 16 tests fail.",
        "createdAt": "2022-12-15T07:42:06Z",
        "updatedAt": "2022-12-15T07:42:25Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "This is one of the differences in `Exclude` behavior of global vs traget local items instantiation (example of other difference: https://github.com/dotnet/msbuild/issues/2491). This is caused by the fact that both are handled by a different code (long running epic to address this: https://github.com/dotnet/msbuild/issues/1124).\r\n\r\nIn a scope of this issue only the paths normalization behavior was addressed.",
        "createdAt": "2023-01-04T07:14:24Z",
        "updatedAt": "2023-01-04T07:14:24Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}