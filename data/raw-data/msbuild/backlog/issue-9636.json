{
  "number": 9636,
  "title": "[Bug]: Chained item function isn't respected in item update statement",
  "body": "### Issue Description\r\n\r\nApparently, msbuild ignores chained `->WithMetadataValue('...', '...')` item functions in an item update statement.\r\n\r\n### Steps to Reproduce\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <KnownFrameworkReference Update=\"@(KnownFrameworkReference->WithMetadataValue('Identity', 'Microsoft.NETCore.App')->WithMetadataValue('TargetFramework', 'net8.0'))\"\r\n      RuntimePackRuntimeIdentifiers=\"XXX;%(RuntimePackRuntimeIdentifiers)\" />\r\n    <!-- Test with a separate item... -->\r\n    <_asdf Include=\"@(KnownFrameworkReference->WithMetadataValue('Identity', 'Microsoft.NETCore.App')->WithMetadataValue('TargetFramework', 'net8.0'))\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n`dotnet build /bl`\r\nOpen binary log and search for `KnownFrameworkReference`. Observe that the RuntimePackRuntimeIdentifier metdata is updated on all \"Microsoft.NETCore.App\" items, not just the one with the \"TargetFramework=net8.0\" metadata.\r\n\r\nThe same works with an Include statement. Search for `_asdf` and observe that only one item is listed.\r\n\r\n### Expected Behavior\r\n\r\nOnly one item should be updated instead of all the ones with Identity=Microsoft.NETCore.App.\r\n\r\n### Actual Behavior\r\n\r\nAll Identity=\"Microsoft.NETCore.App\" KnownFrameworkReference items get updated, regardless of the TargetFramework metdata on the item.\r\n\r\n### Analysis\r\n\r\n_No response_\r\n\r\n### Versions & Configurations\r\n\r\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-01-12T08:32:58Z",
  "updatedAt": "2024-10-10T16:01:15Z",
  "closedAt": null,
  "author": {
    "login": "ViktorHofer"
  },
  "labels": [
    "bug",
    "backlog",
    "Area: Language",
    "Priority:3",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Not sure that is a bug.  Consider how it works with `Remove`:\r\n\r\n```XML\r\n<Project>\r\n  <ItemGroup>\r\n    <Person Include=\"Mary\" Profession=\"Teacher\" />\r\n    <Person Include=\"Mary\" Profession=\"Lawyer\" />\r\n    <Person Include=\"Ulrich\" Profession=\"Lawyer\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '1'\">\r\n    <Person Remove=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '1.B'\">\r\n    <Disappear Include=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" />\r\n    <Person Remove=\"@(Disappear)\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '2'\">\r\n    <Person Remove=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" MatchOnMetadata=\"Profession\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '3'\">\r\n    <Person Remove=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" MatchOnMetadata=\"Identity;Profession\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '4'\">\r\n    <Person Remove=\"Mary\" Condition=\"%(Profession) == 'Lawyer'\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"Show\">\r\n    <Message Importance=\"high\" Text=\"Identity='%(Person.Identity)' Profession='%(Person.Profession)'\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nMSBuild version 17.8.3+195e7f5a3 for .NET\r\n\r\n```\r\ndotnet msbuild msbuild9636.proj -nologo -p:Case=1\r\n  Identity='Ulrich' Profession='Lawyer'\r\n\r\ndotnet msbuild msbuild9636.proj -nologo -p:Case=1.B\r\n  Identity='Ulrich' Profession='Lawyer'\r\n\r\ndotnet msbuild msbuild9636.proj -nologo -p:Case=2\r\n  Identity='Mary' Profession='Teacher'\r\n\r\ndotnet msbuild msbuild9636.proj -nologo -p:Case=3\r\n  Identity='Mary' Profession='Teacher'\r\n  Identity='Ulrich' Profession='Lawyer'\r\n\r\ndotnet msbuild msbuild9636.proj -nologo -p:Case=4\r\nmsbuild9636.proj(26,27): error MSB4191: The reference to custom metadata \"Profession\" at position 13 is not allowed in this condition \"%(Profession) == 'Lawyer'\".\r\n```\r\n\r\nThen compare that to `Update`:\r\n\r\n```XML\r\n<Project>\r\n\r\n  <ItemGroup>\r\n    <Person Include=\"Mary\" Profession=\"Teacher\" />\r\n    <Person Include=\"Mary\" Profession=\"Lawyer\" />\r\n    <Person Include=\"Ulrich\" Profession=\"Lawyer\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '1'\">\r\n    <Person Update=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\">\r\n      <Updated>true</Updated>\r\n    </Person>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '1.B'\">\r\n    <Disappear Include=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" />\r\n    <Person Update=\"@(Disappear)\">\r\n      <Updated>true</Updated>\r\n    </Person>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '2'\">\r\n    <!-- According to docs, MatchOnMetadata only works with Remove, but let's try anyway.  -->\r\n    <Person Update=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" MatchOnMetadata=\"Profession\">\r\n      <Updated>true</Updated>\r\n    </Person>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '3'\">\r\n    <!-- According to docs, MatchOnMetadata only works with Remove, but let's try anyway.  -->\r\n    <Person Update=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" MatchOnMetadata=\"Identity;Profession\">\r\n      <Updated>true</Updated>\r\n    </Person>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '4'\">\r\n    <Person Update=\"Mary\" Condition=\"%(Profession) == 'Lawyer'\">\r\n      <Updated>true</Updated>\r\n    </Person>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"$(Case) == '5'\">\r\n    <Person Update=\"Mary\">\r\n      <Updated Condition=\"%(Profession) == 'Lawyer'\">true</Updated>\r\n    </Person>\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"Show\">\r\n    <Message Importance=\"high\" Text=\"Identity='%(Person.Identity)' Profession='%(Person.Profession)' Updated='%(Person.Updated)'\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\n```\r\ndotnet msbuild msbuild9636-update.proj -nologo -p:Case=1\r\n  Identity='Mary' Profession='Teacher' Updated='true'\r\n  Identity='Mary' Profession='Lawyer' Updated='true'\r\n  Identity='Ulrich' Profession='Lawyer' Updated=''\r\n\r\ndotnet msbuild msbuild9636-update.proj -nologo -p:Case=1.B\r\n  Identity='Mary' Profession='Teacher' Updated='true'\r\n  Identity='Mary' Profession='Lawyer' Updated='true'\r\n  Identity='Ulrich' Profession='Lawyer' Updated=''\r\n\r\ndotnet msbuild msbuild9636-update.proj -nologo -p:Case=2\r\n  Identity='Mary' Profession='Teacher' Updated='true'\r\n  Identity='Mary' Profession='Lawyer' Updated='true'\r\n  Identity='Ulrich' Profession='Lawyer' Updated=''\r\n\r\ndotnet msbuild msbuild9636-update.proj -nologo -p:Case=3\r\n  Identity='Mary' Profession='Teacher' Updated='true'\r\n  Identity='Mary' Profession='Lawyer' Updated='true'\r\n  Identity='Ulrich' Profession='Lawyer' Updated=''\r\n\r\ndotnet msbuild msbuild9636-update.proj -nologo -p:Case=4\r\nmsbuild9636-update.proj(37,27): error MSB4191: The reference to custom metadata \"Profession\" at position 13 is not allowed in this condition \"%(Profession) == 'Lawyer'\".\r\n\r\ndotnet msbuild msbuild9636-update.proj -nologo -p:Case=5\r\n  Identity='Mary' Profession='Teacher' Updated=''\r\n  Identity='Mary' Profession='Lawyer' Updated='true'\r\n  Identity='Ulrich' Profession='Lawyer' Updated=''\r\n````\r\n",
        "createdAt": "2024-01-17T08:49:06Z",
        "updatedAt": "2024-01-17T08:49:06Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Doesn't that just express that item remove statements are affected as well? Compare this with an Include statement which works as expected:\r\n\r\n```xml\r\n<Project>\r\n\r\n  <ItemGroup>\r\n    <Person Include=\"Mary\" Profession=\"Teacher\" />\r\n    <Person Include=\"Mary\" Profession=\"Lawyer\" />\r\n    <Person Include=\"Ulrich\" Profession=\"Lawyer\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <_asdf Include=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThe chained item function shouldn't mutate (in an Update or Remove statement) the holder item until the full chain is evaluated.",
        "createdAt": "2024-01-17T08:58:18Z",
        "updatedAt": "2024-01-17T08:58:18Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "I mean Remove and Update compare only the Identity of the items by default, regardless of whether the attribute value contains item functions or refers to an item group or is just a literal string.  And for Remove, one can change that by specifying MatchOnMetadata.\n\nI think the least surprising fix would be to make MatchOnMetadata work with Update too.",
        "createdAt": "2024-01-17T11:24:11Z",
        "updatedAt": "2024-01-17T11:24:11Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "> I mean Remove and Update compare only the Identity of the items by default, regardless of whether the attribute value contains item functions\r\n\r\nAnd exactly that doesn't make any sense to me. I would expect the following to happen:\r\n\r\n```xml\r\n<Project>\r\n\r\n  <ItemGroup>\r\n    <Person Include=\"Mary\" Profession=\"Teacher\" />\r\n    <Person Include=\"Mary\" Profession=\"Lawyer\" />\r\n    <Person Include=\"Ulrich\" Profession=\"Lawyer\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Person Update=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\"\r\n            IsUpdated=\"true\" />\r\n    <!-- Step 1: Evaluate the first part of the chained item function:\r\n                 @(Person->WithMetadataValue('Identity', 'Mary')) and hold the result. -->\r\n    <!-- Step 2: Evaluate the second part of the chained item function and pass the result\r\n                 from step1 in as the input: @(...->WithMetadataValue('Profession', 'Lawyer'))\r\n                 Again, hold the result. -->\r\n    <!-- Step 3: Pass the result from step 2 into the <Person Update=\"...\" /> update statement.\r\n                 Add the IsUpdated=\"true\" metadata to Lawyer Mary only. -->\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```",
        "createdAt": "2024-01-17T11:36:13Z",
        "updatedAt": "2024-01-17T11:37:01Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "@ViktorHofer, what would you expect to happen in case 1.B?\r\n\r\n```XML\r\n  <ItemGroup>\r\n    <Disappear Include=\"@(Person->WithMetadataValue('Identity', 'Mary')->WithMetadataValue('Profession', 'Lawyer'))\" />\r\n    <Person Update=\"@(Disappear)\">\r\n      <Updated>true</Updated>\r\n    </Person>\r\n  </ItemGroup>\r\n```",
        "createdAt": "2024-01-17T12:21:11Z",
        "updatedAt": "2024-01-17T12:21:11Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Oh, now I know what you are getting to. Well when passing an item to an Update statement, I would expect that msbuild really only updates/removes the items that having matching metadata but it doesn't look like that's how msbuild syntax works.",
        "createdAt": "2024-01-17T13:42:39Z",
        "updatedAt": "2024-01-17T13:42:39Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "There is one example.  Should we match this the item specification @(FromPerson) with metadata.  If no, how could I know which function should match metadata or not. \r\n```\r\n<Project>\r\n  <ItemGroup>\r\n    <FromPerson Include=\"Mary\" Profession=\"Teacher1\" />\r\n    <FromPerson Include=\"Mary\" Profession=\"Lawyer1\" />\r\n    <FromPerson Include=\"Ulrich\" Profession=\"Lawyer1\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Person Include=\"Mary\" Profession=\"Teacher\" />\r\n    <Person Include=\"Mary\" Profession=\"Lawyer\" />\r\n    <Person Include=\"Ulrich\" Profession=\"Lawyer\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Person Update=\"@(FromPerson)\" Updated=\"true\"/>\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\nRelated code as bellow. Currently, it only matches with Identity, not with metadata\r\nhttps://github.com/dotnet/msbuild/blob/0ef8a6895f8444e97cca5bf1b1869712d943f297/src/Build/Evaluation/LazyItemEvaluator.UpdateOperation.cs#L106-L149",
        "createdAt": "2024-01-23T10:21:46Z",
        "updatedAt": "2024-01-23T10:21:46Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  }
}