{
  "number": 9695,
  "title": "Add Ability to suppress MSB3270 at the individual assembly for a specific mismatch.",
  "body": "_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Add-Ability-to-suppress-MSB3270-at-the-i/10080397)._\r\n\r\n---\r\nCurrently it is possible to completely suppress the warning \r\n\r\n```xml\r\n <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>\r\n        None\r\n    </ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>\r\n```\r\n\r\nThis is problematic when C++/CLI is referencing Managed (AnyCPU), using platform specific dll's for the managed assemblies is NOT a solution.\r\n\r\nSince this is a non-problem at runtime it would be beneficial to specify\r\n\r\n --- Suppress Warning for My.Special.Selection.cll\" when it is \"AnyCPU\"\r\n\r\nThis would allow other mismatches which may be important to generate warnings but the specific occurances of specific types would be suppressed.\r\n\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Feedback Bot on 6/27/2022, 09:29 AM: \r\n\r\n(private comment, text removed)",
  "state": "OPEN",
  "createdAt": "2024-01-30T16:33:38Z",
  "updatedAt": "2024-05-18T13:24:55Z",
  "closedAt": null,
  "author": {
    "login": "vsfeedback"
  },
  "labels": [
    "backlog",
    "Area: Task: Resolve Assembly References (RAR)",
    "Priority:3",
    "triaged",
    "gathering-feedback"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I have a similar problem: Having a special Hosting-Assembly (AnyCPU) which can load and start either a 32- or 64-bit host process (exe). These two host processes are referenced by the Hosting-Assembly, so they are getting copied and the location can be extracted with e.g. typeof(Program32).Assembly.Location or typeof(Program64).Assembly.Location\r\n\r\nIt would be greatly welcomed to suppress the message for exactly these two host process assemblies.\r\n\r\nThe current warning is also propagated to other assemblies using the Hosting-Assembly, which I want also to suppress.",
        "createdAt": "2024-04-25T10:17:29Z",
        "updatedAt": "2024-04-25T10:17:29Z",
        "author": {
          "login": "gerhard17"
        }
      },
      {
        "body": "@gerhard17 for your specific scenario, does the actual Hosting-Assembly need to directly reference the host process assemblies? In many such cases those would be invisible to `ResolveAssemblyReferences` by using `<ProjectReference Include=\"..\\x86host\\x86host.csproj\" ReferenceOutputAssembly=\"false\" />` or similar.",
        "createdAt": "2024-04-25T14:25:25Z",
        "updatedAt": "2024-04-25T14:25:25Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Thank you for your input! Your idea is good, but i didn't achieve to get the hosting assemblies automatically get copied over into dependent projects. But i will hold that idea in mind! ",
        "createdAt": "2024-05-18T13:24:54Z",
        "updatedAt": "2024-05-18T13:24:54Z",
        "author": {
          "login": "gerhard17"
        }
      }
    ]
  }
}