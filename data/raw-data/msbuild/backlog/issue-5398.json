{
  "number": 5398,
  "title": "Move InitializeSourceRootMappedPaths targets down into common",
  "body": "The targets for initializing `SourceRoot` items for deterministic builds lives in the Managed.core targets today. This means that other languages, like F#, need to copy the targets, which will lead to divergence and issues.\r\n\r\nhttps://github.com/dotnet/roslyn/blob/master/src/Compilers/Core/MSBuildTask/Microsoft.Managed.Core.targets#L158\r\n\r\nWe should move these targets down into the common targets so they're available to all languages as deterministic builds is a desirable, and encouraged, for published libraries and applications.\r\n\r\n@tmat @cartermp @ctaggart",
  "state": "OPEN",
  "createdAt": "2020-06-03T19:15:20Z",
  "updatedAt": "2024-02-21T16:29:18Z",
  "closedAt": null,
  "author": {
    "login": "clairernovotny"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "See also https://github.com/dotnet/fsharp/issues/9379",
        "createdAt": "2020-06-03T19:15:28Z",
        "updatedAt": "2020-06-03T19:15:28Z",
        "author": {
          "login": "clairernovotny"
        }
      },
      {
        "body": "These concepts don't apply to VC++ builds at all, do they? Of course, we have plenty of .NET stuff in common.targets already, but we do try to separate it out. I'd leave it in `.Managed`, except that really seems to mean VB/C# today.",
        "createdAt": "2020-06-03T21:22:19Z",
        "updatedAt": "2020-06-03T21:22:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Do we need another layer of abstraction? (classic solution in computer science \ud83d\ude09)",
        "createdAt": "2020-06-03T21:28:40Z",
        "updatedAt": "2020-06-03T21:28:40Z",
        "author": {
          "login": "clairernovotny"
        }
      },
      {
        "body": "> These concepts don't apply to VC++ builds at all, do they?\r\n\r\n@rainersigwald, actually they do. Here is the documentation in the readme on [Using Source Link in C++ projects](https://github.com/dotnet/sourcelink#using-source-link-in-c-projects). These targets should be moved to common.\r\n",
        "createdAt": "2020-06-04T19:49:47Z",
        "updatedAt": "2020-06-04T19:49:47Z",
        "author": {
          "login": "ctaggart"
        }
      },
      {
        "body": "I'm not sure if VC++ compiler already supports path mapping but if not it is likely going to at some point to allow reproducible builds. So this logic would make sense for C++ project as well. \r\n",
        "createdAt": "2020-06-04T23:39:38Z",
        "updatedAt": "2020-06-04T23:39:38Z",
        "author": {
          "login": "tmat"
        }
      },
      {
        "body": "There's an undocumented `cl.exe` flag to trim file paths that's used internally; I don't know if there's a public face for it yet. @olgaark, do you know if there are plans for path-prefix (repo root) stripping for deterministic builds in C++? Could you use the path map that exists today for .NET, or would it need to be different for some reason?",
        "createdAt": "2020-06-05T12:08:34Z",
        "updatedAt": "2020-06-05T12:08:34Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}