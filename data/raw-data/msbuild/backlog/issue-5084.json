{
  "number": 5084,
  "title": "RegisterTaskObject/GetRegisteredTaskObject should be AssemblyLoadContext aware",
  "body": "Today, RegisterTaskObject/GetRegisteredTaskObject use a string key in a flat namespace that's available to all tasks. Now that tasks get AssemblyLoadContext isolation, that can result in a stored object being retrieved in a different context and failing to cast--like #5080 but across task assemblies (even if they have compatible references).\r\n\r\nI don't know if anyone uses this pattern; it'd be pretty hard to coordinate the store/retrieve/cast types even in the old world (on Core they would have been force-unified; on Framework you could have different versions of a type in the different tasks and have the same cast problem).\r\n\r\nIdeally this would work if the types were compatible, but it would probably be ok to GetRegisteredTaskObject to consider the ALC of its caller (is that even possible?) and return nothing if there's no match.",
  "state": "OPEN",
  "createdAt": "2020-01-28T16:33:11Z",
  "updatedAt": "2024-02-21T16:29:58Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    ".NET Core",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": []
  }
}