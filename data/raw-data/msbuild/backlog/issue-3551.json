{
  "number": 3551,
  "title": "Using ValueTuple with PackageReference on Azure Cloud Services",
  "body": "This is the same problem as described in this closed/abandoned [issue](https://github.com/Azure/azure-sdk-for-net/issues/3699). That got closed as being reported the wrong place, that's why I'm trying here.\r\nPlease let me know if this is also not the right repo.\r\n\r\nI'm trying to convert my C# projects from old to new csproj style, but this breaks my Azure Cloud Service at runtime because the ReferenceAssembly of `System.ValueTuple.dll` is copied instead of the *implementing* assembly.\r\n\r\nMy projects are currently targeting .NET 4.6.1, which doesn't come with `System.ValueTuple` but should be able to get it by consuming the `System.ValueTuple` NuGet package.\r\n\r\nThe problem is \"solvable\" by targeting .NET 4.7+, as that comes with `System.ValueTuple` included and hence does not need to reference it as a NuGet package.\r\n\r\nI would like to avoid upgrading to .NET 4.7+ if possible, as:\r\n\r\nThis requires an additional deploy step to install .net 4.7+ runtimes on the worker roles, as they come with .net 4.6.2 installed. https://docs.microsoft.com/en-us/azure/cloud-services/cloud-services-guestos-update-matrix#family-5-releases\r\nThis seems as \"the easy way out\", and I would like to know if the problem can be solved otherwise.\r\n\r\n### Steps to reproduce\r\n\r\nI'll use:\r\n* refDLL for: `packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll`, and\r\n* libDLL for `packages\\system.valuetuple\\4.5.0\\lib\\net461\\System.ValueTuple.dll`.\r\nThey are easily distinguishable, as refDLL is 40 kb and libDLL is 78 kb.\r\n\r\nThe code and complete build log file is found here: \r\n[AzureCloudService1.zip](https://github.com/Microsoft/msbuild/files/2234894/AzureCloudService1.zip)\r\n\r\n* `WorkerRole1` consumes `System.ValueTuple` via `packages.config`\r\n* `WorkerRole2` consumes `System.ValueTuple` via `PackageReference`\r\n\r\nAfter building the cloud service the\r\n\r\n* `WorkerRole1\\bin\\Debug` has libDLL.\r\n* `WorkerRole2\\bin\\Debug\\net461` has libDLL\r\n* `AzureCloudService1\\obj\\Debug\\WorkerRole1` has libDLL\r\n* but `AzureCloudService1\\obj\\Debug\\WorkerRole2` has *refDLL*\r\n\r\n### Expected  behavior\r\n\r\n`AzureCloudService1\\obj\\Debug\\WorkerRole2` should contain *libDLL*.\r\n\r\n### Actual behavior\r\n\r\n`AzureCloudService1\\obj\\Debug\\WorkerRole2` contains *refDLL*.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 15.7.180.61344 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.7.180.61344\r\n```\r\n\r\n### Addionational info\r\n\r\nFrom the logs, I noticed the following difference between WorkerRole1 and WorkerRole2.\r\n\r\nWorkerRole1:\r\n```\r\nC:\\Users\\jonas\\source\\repos\\AzureCloudService1\\packages\\System.ValueTuple.4.5.0\\lib\\net461\\System.ValueTuple.dll\r\nCopyLocal = true\r\nFusionName = System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nHintPath = ..\\packages\\System.ValueTuple.4.5.0\\lib\\net461\\System.ValueTuple.dll\r\nImageRuntime = v4.0.30319\r\nMSBuildSourceProjectFile = C:\\Users\\jonas\\source\\repos\\AzureCloudService1\\WorkerRole1\\WorkerRole1.csproj\r\nMSBuildSourceTargetName = BuiltProjectOutputGroupDependencies\r\nOriginalItemSpec = System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\r\nReferenceAssembly = C:\\Users\\jonas\\source\\repos\\AzureCloudService1\\packages\\System.ValueTuple.4.5.0\\lib\\net461\\System.ValueTuple.dll\r\nReferenceSourceTarget = ResolveAssemblyReference\r\nResolvedFrom = {HintPathFromItem}\r\nVersion = 4.0.3.0\r\nWorkerRole2:\r\n```\r\n\r\n```\r\nC:\\Users\\jonas\\.nuget\\packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll\r\nCopyLocal = false\r\nExternallyResolved = true\r\nFusionName = System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nHintPath = C:\\Users\\jonas\\.nuget\\packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll\r\nImageRuntime = v4.0.30319\r\nMSBuildSourceProjectFile = C:\\Users\\jonas\\source\\repos\\AzureCloudService1\\WorkerRole2\\WorkerRole2.csproj\r\nMSBuildSourceTargetName = BuiltProjectOutputGroupDependencies\r\nNuGetPackageId = System.ValueTuple\r\nNuGetPackageVersion = 4.5.0\r\nNuGetSourceType = Package\r\nOriginalItemSpec = C:\\Users\\jonas\\.nuget\\packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll\r\nPrivate = false\r\nReferenceAssembly = C:\\Users\\jonas\\.nuget\\packages\\system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll\r\nReferenceSourceTarget = ResolveAssemblyReference\r\nResolvedFrom = {HintPathFromItem}\r\nVersion = 4.0.3.0\r\n```\r\n\r\nAfter searching for other related issues on various Microsoft issue trackers, I found this one, which seems related: https://github.com/dotnet/sdk/issues/1738.",
  "state": "CLOSED",
  "createdAt": "2018-07-27T07:34:42Z",
  "updatedAt": "2024-02-21T17:12:13Z",
  "closedAt": "2019-10-19T19:05:47Z",
  "author": {
    "login": "jnyrup"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "livarcocc"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I got exactly the same issue, but on some other packages like System.Buffers. The dlls under ref folder was copied, instead of lib folder. Is there any workaround except reverting back to Reference? @jnyrup how did you get around it?",
        "createdAt": "2019-03-16T23:05:04Z",
        "updatedAt": "2019-03-16T23:06:31Z",
        "author": {
          "login": "zhaomuzhi"
        }
      },
      {
        "body": "@zhaomuzhi I got around the problem in my toy project by re-targeting the projects to .net 4.7.2.\r\nprobably related to https://twitter.com/terrajobst/status/1031999730320986112?lang=en\r\n\r\nTo get that to run in the Cloud Services you either need to:\r\nUpdate to [Guest OS Family 6](https://docs.microsoft.com/en-us/azure/cloud-services/cloud-services-guestos-update-matrix#family-6-releases) has recently been released, which includes .NET Framework 4.7.2.\r\nI haven't tried it out yet, as I'm waiting for the Azure DevOps Build Agents to get Azure SDK 3.0.\r\nhttps://developercommunity.visualstudio.com/content/problem/443790/the-os-family-6-you-are-trying-to-deploy-is-not-su.html\r\n\r\nFor Guest OS Family 5, you need to install .net 4.7.2 as part of the deployment process.\r\nhttps://docs.microsoft.com/en-us/azure/cloud-services/cloud-services-dotnet-install-dotnet",
        "createdAt": "2019-03-17T14:49:02Z",
        "updatedAt": "2019-03-17T14:49:02Z",
        "author": {
          "login": "jnyrup"
        }
      },
      {
        "body": "Well, this seems to be behaving as expected actually. Besides that, this does not seem to be an MSBuild issue either.\r\n\r\n4.6.2 does not contain the assembly, therefore it needs to be acquired through nuget and distributed with the app. If you want to avoid that, you need to target a TFM where it is supported, net4.7.2, for instance. The system is doing what it is supposed to do.",
        "createdAt": "2019-03-19T18:56:36Z",
        "updatedAt": "2019-03-19T18:56:36Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "@livarcocc I've update the issue description to hopefully be more clear. \r\nShort story, I *am* consuming `System.ValueTuple` as a nuget package from my 4.6.1 project and it works when using `packages.config`.\r\nThe problem happens when switching from `packages.config` to `<PackageReference>` as that causes another dll to be copied to the `obj` folder of the Cloud Service.",
        "createdAt": "2019-03-19T21:31:30Z",
        "updatedAt": "2019-03-19T21:31:30Z",
        "author": {
          "login": "jnyrup"
        }
      },
      {
        "body": "I got the same issue, so I upgraded all projects to target 4.7.2.\r\nAfter upgrading I ran Update-Package -reinstall in Package Manager Console to reinstall all nuget packages in my solution to target 4.7.2.\r\nOn Cloud Services I switched to osfamily = \"6\".\r\nI am still using Azure Authoring Tools 2.9",
        "createdAt": "2019-10-18T13:55:38Z",
        "updatedAt": "2019-10-18T13:55:38Z",
        "author": {
          "login": "dejanberic"
        }
      },
      {
        "body": "This seems like something that NuGet should/could take a look on. I am going to move this issue to NuGet.",
        "createdAt": "2019-10-19T18:51:51Z",
        "updatedAt": "2019-10-19T18:51:51Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "This issue was moved to NuGet/Home#8723",
        "createdAt": "2019-10-19T19:05:46Z",
        "updatedAt": "2019-10-19T19:05:46Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "FYI I think neither MSBuild nor NuGet nor the Azure SDK for .NET project is the right place for this bug.\r\nI've provided an update together with a workaround in https://github.com/Azure/azure-sdk-for-net/issues/3699#issuecomment-612306965",
        "createdAt": "2020-04-11T02:58:10Z",
        "updatedAt": "2020-04-11T02:58:10Z",
        "author": {
          "login": "yirkha"
        }
      }
    ]
  }
}