{
  "number": 4770,
  "title": "Design-time build tasks aren't all available in .NET Core",
  "body": "See https://github.com/dotnet/roslyn/issues/36072#issuecomment-536088468 for a nice repro by @d-dizhevsky.\r\n\r\n> I have created repro project here: https://github.com/d-dizhevsky/owss\r\n> \r\n> It contains:\r\n> \r\n> * `src/OpenWebSecurityScanner` project which targets `netcoreapp2.1` and runs MSBuildWorkspace\r\n> * `testProjects/WebAPI1` which was created with `dotnet new webapi`\r\n> * `testProjects/TestCoreLib` which was created with `dotnet new classlib`\r\n> \r\n> The `WebAPI1` has a project reference on `TestCoreLib`.\r\n> Just do `cd src/OpenWebSecurityScanner/` and then `dotnet run`.\r\n> \r\n> Thats my output on OSx:\r\n> ![image](https://user-images.githubusercontent.com/25821724/65800583-82056a80-e17f-11e9-8b47-89d6df9be873.png)\r\n\r\n----\r\n\r\nThis is happening because some tasks that are used in design-time builds (and design-time-like builds like Roslyn `MSBuildWorkspace`) aren't ported to .NET Core.\r\n\r\nRight know there's only one known failure; I suspect there may be a few more after fixing this one:\r\n\r\n- [ ] [`ResolveNonMSBuildProjectOutput`](https://github.com/microsoft/msbuild/blob/49729650232e1e7c1f7a1016c83c5d6f254cfa04/src/Tasks/ResolveNonMSBuildProjectOutput.cs).",
  "state": "CLOSED",
  "createdAt": "2019-09-30T21:38:16Z",
  "updatedAt": "2024-02-21T17:06:52Z",
  "closedAt": "2020-02-05T18:32:50Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    ".NET Core",
    "Area: Tasks",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 16.5 Preview 3 (Sprint 165)"
  },
  "comments": {
    "nodes": [
      {
        "body": "The .NET Core flavor of `ResolveNonMSBuildProjectOutput` should probably just do nothing; I don't think .NET Core MSBuild needs to support non-MSBuild `ProjectReference`s.",
        "createdAt": "2019-09-30T21:38:36Z",
        "updatedAt": "2019-09-30T21:38:36Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "How this can not affect almost 100% of real world use cases in Linux/MacOSX? Very simple project dependency graphs don't work trying to compile them with `MSBuildWorkspace`, and Linux/MacOSX should support only .NET core/standard projects, if I'm not wrong. Also, projects don't compile even when targeting `.netstandard2.0`, as the [#36072](https://github.com/dotnet/roslyn/issues/36072#issue-450522001) reporter clearly states in the first post. It would be great if there's an attempt fix by implementing an empty `ResolveNonMSBuildProjectOutput`: this should allow to quickly spot other issues, if present. Will fixing this issue require an upgrade of the .NET core sdk?",
        "createdAt": "2019-12-29T19:18:51Z",
        "updatedAt": "2019-12-29T19:19:16Z",
        "author": {
          "login": "ceztko"
        }
      },
      {
        "body": "Fantastic! Any idea of when this will be integrated in VS?",
        "createdAt": "2020-02-05T20:58:06Z",
        "updatedAt": "2020-02-05T20:58:06Z",
        "author": {
          "login": "ceztko"
        }
      },
      {
        "body": "Now I noticed the branch where the commit was merged: microsoft:vs16.5. Thank you.",
        "createdAt": "2020-02-05T21:03:16Z",
        "updatedAt": "2020-02-05T21:03:16Z",
        "author": {
          "login": "ceztko"
        }
      },
      {
        "body": "Following ceztko's reasoning, this, updating VS, and a few other manual twiddles likely fixed loading .net core 3.1 projects with Roslyn for me. Adding a link to my notes for any other unfortunate (now fortunate!) adventurers :) \r\n\r\nhttps://github.com/dotnet/roslyn/issues/36072#issuecomment-610809322",
        "createdAt": "2020-04-08T08:09:13Z",
        "updatedAt": "2020-04-08T08:09:13Z",
        "author": {
          "login": "miyu"
        }
      }
    ]
  }
}