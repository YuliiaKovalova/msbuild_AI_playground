{
  "number": 6281,
  "title": "dotnet restore fails, but reports success",
  "body": "Copied from issue https://github.com/NuGet/Home/issues/10606 per jeffkl's guidance\r\n\r\n<!-- Please read the following information before posting the issue. -->\r\n<!-- If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place. -->\r\n<!-- If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues) -->\r\n\r\n## Details about Problem\r\n\r\nCross posting from dotnet sdk, as it isn't clear if this issue is in the sdk or the nuget client used in that sdk.\r\nRepro posted on https://github.com/dotnet/sdk/issues/16031#issuecomment-786748923\r\n\r\nProduct version: \r\n\r\ndotnetsdk 3.1.406\r\n\r\n## Repro steps and/or sample project\r\n\r\nRepro is simple. Try to restore a package that doesnt exist. E.g. Microsoft.Build.Traversal2\r\n\r\n```\r\naaronla@aaronla-rabbit:MyRepo$ dotnet restore\r\nX:\\MyRepo\\dirs.proj : error : Unable to find package Microsoft.Build.Traversal with version (= 2.999.1)\r\nX:\\MyRepo\\dirs.proj : error :   - Found 24 version(s) in MyCustomFeedOne [ Nearest version: 3.0.0 ]\r\nX:\\MyRepo\\dirs.proj : error :   - Found 0 version(s) in MyCustomFeedTwo\r\n\r\naaronla@aaronla-rabbit:MyRepo$ echo %ERRORLEVEL%\r\n0\r\n```\r\n\r\n### Verbose Logs\r\n\r\n<!-- Please include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...) -->\r\n",
  "state": "CLOSED",
  "createdAt": "2021-03-19T17:48:20Z",
  "updatedAt": "2024-02-21T14:14:16Z",
  "closedAt": "2021-04-08T16:09:41Z",
  "author": {
    "login": "ghost"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "jeffkl"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is currently happening because restore is trying to do a \"best effort\" of loading the project and executing restore.  Sometimes restore itself will pull in build logic from a package but the project can't be evaluated until restore is done.  So we set some special flags during restore to accomplish this:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/main/src/MSBuild/XMake.cs#L1424-L1426\r\n\r\nThe logic to fail gracefully if an SDK isn't found was added in https://github.com/dotnet/msbuild/pull/2991 so that users in Visual Studio would get a better experience.\r\n\r\nFrom the command-line, this logic culminates in a project loaded with no errors and potentially no targets, then nothing is executed and since there are no real errors the build succeeds.  The intention of ignoring invalid imports is more about trying to successfully load a project even if stuff is missing.   However, later on when we build, it should still fail if the project is \"invalid\".  \r\n\r\nWe'll probably need to add a new flag that we specify at the command-line that says an SDK resolution failure is considered fatal.  This will allow Visual Studio to still load the project as intended.  Other missing imports can still be ignored and hopefully they'll show up during build since they could be restored from a package.",
        "createdAt": "2021-03-19T17:55:54Z",
        "updatedAt": "2021-03-19T17:55:54Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Makes sense. Just make sure that flag is set to true when either invoking the `msbuild /t:Restore` or `restore` dotnetcli commands, as it should be fatal for those commands. \r\n\r\nIf I ask dotnet to restore, and it doesn't, that should clearly be considered a failure.",
        "createdAt": "2021-03-19T17:59:00Z",
        "updatedAt": "2021-03-19T17:59:00Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "Team Triage: @jeffkl is this something you wanted to tackle? it sounds like we'll need to catch `restore` as a command line arg and pass it along to account for this.",
        "createdAt": "2021-03-24T15:43:02Z",
        "updatedAt": "2021-03-24T15:43:02Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Yes sorry I couldn\u2019t make it to today\u2019s sync, I\u2019ll attend next week to talk through the options. ",
        "createdAt": "2021-03-24T15:47:48Z",
        "updatedAt": "2021-03-24T15:47:48Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@BenVillalobos please assign this issue to me",
        "createdAt": "2021-03-31T16:18:32Z",
        "updatedAt": "2021-03-31T16:18:32Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl will this be available on either the 3.1 or 5.0 sdks? We're currently on 2.1, but in process of moving to the current LTS (3.1).",
        "createdAt": "2021-04-14T19:51:55Z",
        "updatedAt": "2021-04-14T19:52:23Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "Confirmed fixed in 6.0.100-preview.6.21271.8",
        "createdAt": "2021-05-21T17:25:20Z",
        "updatedAt": "2021-05-21T17:25:20Z",
        "author": {
          "login": "ghost"
        }
      }
    ]
  }
}