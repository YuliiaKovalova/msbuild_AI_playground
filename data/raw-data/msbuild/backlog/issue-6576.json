{
  "number": 6576,
  "title": "Visual Studio Fast Up To Date build not working - CopyComplete marker is touched when no files are copied",
  "body": "**Visual Studio Version**: 16.10.2\r\n\r\n**Summary**:\r\nWith Fast Up To Date builds enabled, a subsequent build should not invoke MSBuild if no inputs have changed.  \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Launch VS command prompt\r\n2. Clone https://github.com/microsoft/CsWinRT/ repo\r\n3. cd into 'src' and run build.cmd\r\n4. After a successful baseline build, run 'devenv cswinrt.sln'\r\n5. Enable verbose build diagnostics \r\n  Tools|Options|Projects and Solutions|Build And Run\r\n  Set \"MSBuild project build output verbosity:\" to Diagnostic\r\n6. Enable verbose Up To Date diagnostics\r\n  Tools|Options|Projects and Solutions|SDK-Style Projects\r\n  Up do Date Checks\r\n  Check \"Don't call MSBuild if a project appearst to be up to date.\"\r\n  Set \"Logging Level:\" to Verbose\r\n7. Right-click the Projections\\Test project node and run several builds\r\n\r\n**Expected Behavior**:\r\nAfter the first build, Fast Up To Date should detect that no inputs are newer than outputs and not invoke MSBuild\r\n\r\n**Actual Behavior**:\r\nMSBuild is invoked every time.  Excerpt of the build spew for target \"_CopyFilesMarkedCopyLocal\" below indicates the cause.  Even though the Copy task reports \"Did not copy from file\" for every file, the WinUI.csproj.CopyComplete marker is still touched, causing the dependent Test project to be reported as \"not up to date\" and triggering an MSBuild.\r\n\r\n**Root Cause**:\r\nThe reason appears to be a bug in the [Copy task implementation](https://devdiv.visualstudio.com/DevDiv/_git/DotNet-msbuild-Trusted?path=%2Fsrc%2FTasks%2FCopy.cs&_a=contents&version=GBmain).  DoCopyIfNecessary initializes success to true, and returns that value when it also reports \"Did not copy from file...\".  Calls to DoCopyIfNecessary set a local copyComplete to true and based on that value, add an entry to destinationFilesSuccessfullyCopied and ultimately the output parameter CopiedFiles.  The _CopyFilesMarkedCopyLocal target in Microsoft.Common.CurrentVersion.targets binds CopiedFiles to the item ReferencesCopiedInThisBuild, which is used to conditionally touch the CopyUpToDateMarker.  So even if no files are copied, the marker is still touched.\r\n\r\n\r\n**Build Spew**:\r\nTarget \"_CopyFilesMarkedCopyLocal\" in file \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets\":\r\n  Set Property: CreateHardLinksForCopyLocalIfPossible=false\r\n  Set Property: CreateSymbolicLinksForCopyLocalIfPossible=false\r\n  Task \"Copy\"\r\n    Task Parameter:UseHardlinksIfPossible=False\r\n    Task Parameter:SkipUnchangedFiles=True\r\n    Task Parameter:\r\n        DestinationFiles=\r\n            bin\\x64\\Release\\net5.0\\Windows.dll\r\n            bin\\x64\\Release\\net5.0\\WinRT.Runtime.dll\r\n            bin\\x64\\Release\\net5.0\\cswinrt.pdb\r\n            bin\\x64\\Release\\net5.0\\WinRT.Runtime.pdb\r\n            bin\\x64\\Release\\net5.0\\Windows.pdb\r\n    Task Parameter:\r\n        SourceFiles=\r\n            d:\\git\\cswinrt2\\src\\Projections\\Windows\\bin\\x64\\Release\\net5.0\\Windows.dll\r\n            d:\\git\\cswinrt2\\src\\WinRT.Runtime\\bin\\Release\\net5.0\\WinRT.Runtime.dll\r\n            d:\\git\\cswinrt2\\src\\_build\\x64\\Release\\cswinrt\\bin\\cswinrt.pdb\r\n            d:\\git\\cswinrt2\\src\\WinRT.Runtime\\bin\\Release\\net5.0\\WinRT.Runtime.pdb\r\n            d:\\git\\cswinrt2\\src\\Projections\\Windows\\bin\\x64\\Release\\net5.0\\Windows.pdb\r\n    Task Parameter:OverwriteReadOnlyFiles=False\r\n    Task Parameter:UseSymboliclinksIfPossible=False\r\n    Did not copy from file \"d:\\git\\cswinrt2\\src\\WinRT.Runtime\\bin\\Release\\net5.0\\WinRT.Runtime.dll\" to file \"bin\\x64\\Release\\net5.0\\WinRT.Runtime.dll\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match.\r\n    Did not copy from file \"d:\\git\\cswinrt2\\src\\_build\\x64\\Release\\cswinrt\\bin\\cswinrt.pdb\" to file \"bin\\x64\\Release\\net5.0\\cswinrt.pdb\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match.\r\n    Did not copy from file \"d:\\git\\cswinrt2\\src\\WinRT.Runtime\\bin\\Release\\net5.0\\WinRT.Runtime.pdb\" to file \"bin\\x64\\Release\\net5.0\\WinRT.Runtime.pdb\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match.\r\n    Did not copy from file \"d:\\git\\cswinrt2\\src\\Projections\\Windows\\bin\\x64\\Release\\net5.0\\Windows.pdb\" to file \"bin\\x64\\Release\\net5.0\\Windows.pdb\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match.\r\n    Did not copy from file \"d:\\git\\cswinrt2\\src\\Projections\\Windows\\bin\\x64\\Release\\net5.0\\Windows.dll\" to file \"bin\\x64\\Release\\net5.0\\Windows.dll\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match.\r\n    Output Item(s): \r\n        FileWritesShareable=\r\n            bin\\x64\\Release\\net5.0\\Windows.dll\r\n            bin\\x64\\Release\\net5.0\\WinRT.Runtime.dll\r\n            bin\\x64\\Release\\net5.0\\cswinrt.pdb\r\n            bin\\x64\\Release\\net5.0\\WinRT.Runtime.pdb\r\n            bin\\x64\\Release\\net5.0\\Windows.pdb\r\n    Output Item(s): \r\n        ReferencesCopiedInThisBuild=\r\n            bin\\x64\\Release\\net5.0\\Windows.dll\r\n            bin\\x64\\Release\\net5.0\\WinRT.Runtime.dll\r\n            bin\\x64\\Release\\net5.0\\cswinrt.pdb\r\n            bin\\x64\\Release\\net5.0\\WinRT.Runtime.pdb\r\n            bin\\x64\\Release\\net5.0\\Windows.pdb\r\n  Done executing task \"Copy\".\r\n  Task \"Touch\"\r\n    Task Parameter:AlwaysCreate=True\r\n    Task Parameter:Files=d:\\git\\cswinrt2\\src\\Projections\\WinUI\\obj\\x64\\Release\\net5.0\\WinUI.csproj.CopyComplete\r\n    Touching \"d:\\git\\cswinrt2\\src\\Projections\\WinUI\\obj\\x64\\Release\\net5.0\\WinUI.csproj.CopyComplete\".\r\n    Output Item(s): FileWrites=d:\\git\\cswinrt2\\src\\Projections\\WinUI\\obj\\x64\\Release\\net5.0\\WinUI.csproj.CopyComplete\r\n  Done executing task \"Touch\".\r\nDone building target \"_CopyFilesMarkedCopyLocal\" in project \"WinUI.csproj\".\r\n\r\n...\r\n\r\nFastUpToDate: Latest write timestamp on input marker is 6/16/2021 10:12:36 AM on 'd:\\git\\cswinrt2\\src\\Projections\\WinUI\\obj\\x64\\Release\\netstandard2.0\\WinUI.csproj.CopyComplete'. (Test)\r\nFastUpToDate: Write timestamp on output marker is 6/16/2021 10:11:52 AM on 'd:\\git\\cswinrt2\\src\\Projections\\Test\\obj\\x64\\Release\\netstandard2.0\\Test.csproj.CopyComplete'. (Test)\r\nFastUpToDate: Input marker is newer than output marker, not up to date. (Test)\r\n",
  "state": "CLOSED",
  "createdAt": "2021-06-16T17:54:26Z",
  "updatedAt": "2024-02-21T14:13:02Z",
  "closedAt": "2021-07-27T18:09:56Z",
  "author": {
    "login": "Scottj1s"
  },
  "labels": [
    "bug",
    "under-investigation",
    "Partner request",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "see also:\r\nhttps://github.com/dotnet/project-system/issues/6356\r\nhttps://stackoverflow.com/questions/59432088/c-sharp-console-app-always-rebuilds-but-ive-already-traced-diagnostic-build-ou",
        "createdAt": "2021-06-16T21:06:29Z",
        "updatedAt": "2021-06-16T21:06:29Z",
        "author": {
          "login": "Scottj1s"
        }
      },
      {
        "body": "@rainersigwald Any idea if this is a known issue in the MSBuild Copy task?",
        "createdAt": "2021-06-16T22:40:29Z",
        "updatedAt": "2021-06-16T22:40:29Z",
        "author": {
          "login": "swesonga"
        }
      },
      {
        "body": "CC @BenVillalobos to include in next triage session.",
        "createdAt": "2021-06-21T20:05:39Z",
        "updatedAt": "2021-06-21T20:05:39Z",
        "author": {
          "login": "marcpopMSFT"
        }
      },
      {
        "body": "I can't get a successful build after running `build.cmd` and `devenv cswinrt.sln` and building the test project:\r\n\r\n![image](https://user-images.githubusercontent.com/4691428/122831914-6b7e3b80-d29f-11eb-89e3-64db85e44ea7.png)\r\n\r\nAm I missing something?",
        "createdAt": "2021-06-21T21:52:47Z",
        "updatedAt": "2021-06-21T21:52:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I don't see a repro in a minimal case (ProjA references ProjB, both console projects): \r\n[6576-repro.zip](https://github.com/dotnet/msbuild/files/6689861/6576-repro.zip)\r\n\r\nOpen ProjA\\ProjA.sln, set all required verbosities. Run build on ProjA multiple times. No repro. Tested on 16.10.2",
        "createdAt": "2021-06-21T22:51:39Z",
        "updatedAt": "2021-06-21T22:52:36Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "This appears to be by design for `CopiedFiles`, and not a bug:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/cdc5faeda066a83b084c96b8a455ad0a5e8713ab/src/Tasks.UnitTests/Copy_Tests.cs#L1013-L1016\r\n\r\nSo we may have to add a new output to `Copy` along the lines of `bool ActuallyDidAtLeastOneCopy` or `ITaskItem[] FilesNotUpToDate` and check _that_ in the Touch task\r\n\r\nhttps://github.com/dotnet/msbuild/blob/cdc5faeda066a83b084c96b8a455ad0a5e8713ab/src/Tasks/Microsoft.Common.CurrentVersion.targets#L4700-L4706\r\n\r\nI'm not sure of the impact of this problem, though, and I don't think it's a major contributor to incremental-build problems in CsWinRT, so I'd still like to investigate that specifically. FUTD should be avoiding this situation pretty much always if I'm understanding it correctly.",
        "createdAt": "2021-07-01T15:27:13Z",
        "updatedAt": "2021-07-01T15:27:13Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "After doing my own investigation,\r\n> This appears to be by design for CopiedFiles, and not a bug:\r\n\r\nUnfortunately this is the case and horribly misleading.\r\n\r\nI did notice that in my simple repro I could get ProjA to consistently build after rebuilding\r\n\r\n![image](https://user-images.githubusercontent.com/4691428/126019519-041bbea3-794d-4f5d-b8e8-1ae703a2bded.png)\r\nIt seems like FUTD in VS doesn't apply on a rebuild->build? @swesonga do you know if this is by design?\r\n\r\nWhen it did run, however, we still hit the issue with `Copy` not actually copying anything but still updating copycomplete:\r\n\r\n![image](https://user-images.githubusercontent.com/4691428/126019569-d6675ec5-7c6b-43ab-8903-fe18c8fa00bd.png)\r\n\r\n> FUTD should be avoiding this situation pretty much always if I'm understanding it correctly.\r\n\r\nLooks like this is a two phase problem.\r\n1. Why is VS calling MSBuild on a project that's up to date?\t\r\n2. Why is MSBuild updating the `.CopyComplete` file when nothing is actually copied?\r\n\t1. The fix here is as Rainer suggested, create some other parameter that tells us _something_ was copied, or contains what was actually copied. The latter sounds more useful.",
        "createdAt": "2021-07-17T00:40:04Z",
        "updatedAt": "2021-07-17T00:40:04Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "> It seems like FUTD in VS doesn't apply on a rebuild->build? @swesonga do you know if this is by design?\n\nIt's by design. The check isn't invoked for rebuild at all. Rebuild should, by definition, build regardless of being up to date or not.",
        "createdAt": "2021-07-17T03:45:31Z",
        "updatedAt": "2021-07-17T03:45:31Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "@drewnoakes That much makes sense for Rebuild, but what about a build _after_ a rebuild? Here's what I think should happen:\r\n\r\n1. Rebuild\r\n2. Build (FUTD kicks in)\r\n\r\nWhat actually happens:\r\n1. Rebuild\r\n2. Build (build actually runs)",
        "createdAt": "2021-07-19T16:01:57Z",
        "updatedAt": "2021-07-19T16:01:57Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos do you have a repro for that scenario? I cannot repro it in the following steps:\r\n\r\n1. Create new .NET Console App\r\n2. Build\r\n3. Rebuild\r\n4. Build (up to date)",
        "createdAt": "2021-07-22T22:44:01Z",
        "updatedAt": "2021-07-22T22:44:01Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "@drewnoakes Should be the project here: https://github.com/dotnet/msbuild/issues/6576#issuecomment-865394702 ",
        "createdAt": "2021-07-22T22:57:21Z",
        "updatedAt": "2021-07-22T22:57:21Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Closing as of https://github.com/dotnet/msbuild/pull/6698",
        "createdAt": "2021-07-27T18:09:52Z",
        "updatedAt": "2021-07-27T18:09:52Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}