{
  "number": 1901,
  "title": "MSBuild commandline seems to ignore publish properties",
  "body": "I'm trying to use msbuild to publish my application to a filesystem location. I've setup a profile from inside VS2017 and from there it works perfectly.\r\nWhen I run msbuild from the commandline: \"_msbuild application.sln /p:DeployOnBuild=true /p:PublishProfile=publishprofile_\" it builds the default \"Debug|x86\" target and nothing else. Nothing is published and the target in the publish profile is set to \"release\".\r\nWhen I specify a non-existing publish profile it still build like above, while I would expect an error telling me I specified a non-existing profile.",
  "state": "CLOSED",
  "createdAt": "2017-03-23T16:03:27Z",
  "updatedAt": "2025-02-04T23:40:45Z",
  "closedAt": "2019-09-11T22:26:18Z",
  "author": {
    "login": "paleocomburo"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "+1 I'm having the same issue. The following command builds correctly, but doesn't output anything to the deploy target. The exact same command works on a machine with VS2015 installed.\r\n\r\n\"C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\msbuild.exe\" /t:Build;Publish TCA.Web\\TCA.Web.csproj /p:DeployOnBuild=true /p:PublishProfile=Deploy.pubxml /p:Configuration=Release\r\n\r\nI see the following in the build output, but unable to extract why it happens.\r\n_DeploymentUnpublishable:\r\n  Skipping unpublishable project.\r\n\r\nIt works from the Visual Studio 2017 UI. I'm running build 15.0.0+26228.10",
        "createdAt": "2017-03-29T09:07:54Z",
        "author": {
          "login": "oexenhave"
        }
      },
      {
        "body": "Same for me.",
        "createdAt": "2017-03-31T15:43:41Z",
        "author": {
          "login": "frbar"
        }
      },
      {
        "body": "Same for me too,",
        "createdAt": "2017-04-11T07:16:22Z",
        "author": {
          "login": "faemm"
        }
      },
      {
        "body": "Same for me",
        "createdAt": "2017-04-21T13:19:57Z",
        "author": {
          "login": "ducseb"
        }
      },
      {
        "body": "Same for me",
        "createdAt": "2017-04-24T09:37:18Z",
        "author": {
          "login": "ewilli"
        }
      },
      {
        "body": "Hi, still no news from Microsoft's guys? MSBuild 14 cannot build C# 7 code.\r\n\r\nIs it possible to build with v15 and do the publish (and only the publish) with 14?",
        "createdAt": "2017-04-24T11:39:05Z",
        "author": {
          "login": "frbar"
        }
      },
      {
        "body": "Same here",
        "createdAt": "2017-04-24T21:30:46Z",
        "author": {
          "login": "tran-barry"
        }
      },
      {
        "body": "Same for me",
        "createdAt": "2017-04-26T14:22:00Z",
        "author": {
          "login": "deadlydog"
        }
      },
      {
        "body": "Same here.",
        "createdAt": "2017-04-26T16:20:06Z",
        "author": {
          "login": "jamest-iqmetrix"
        }
      },
      {
        "body": "Ditto.",
        "createdAt": "2017-04-26T16:24:55Z",
        "author": {
          "login": "vicp-iq"
        }
      },
      {
        "body": "Same here",
        "createdAt": "2017-04-26T16:36:03Z",
        "author": {
          "login": "RyanMarcotte"
        }
      },
      {
        "body": "Me as well",
        "createdAt": "2017-04-26T17:25:51Z",
        "author": {
          "login": "andrewk-iq"
        }
      },
      {
        "body": "Same here.\r\nI try to run publish only (This method worked in previous versions)\r\nMSBuild <PROJECT_PATH> /t:publish /p:PublishProfile=<PUBLISH_PROFILE_PATH> /p:PublishRootDir=<PATH_VARIABLE_FOR_THE_PROFILE> /p:Configuration=Release ",
        "createdAt": "2017-04-27T07:17:33Z",
        "author": {
          "login": "shkup"
        }
      },
      {
        "body": "I'm also encountering the same problem",
        "createdAt": "2017-04-27T14:33:47Z",
        "author": {
          "login": "VincentLangevin"
        }
      },
      {
        "body": "I tried to reproduce this but don't think I did, on a new WebApplication type project created in VS2015 U3 and published on the command line from both VS2015 U3 and VS2017 15.1.\r\n\r\nCan someone affected by this please post repro steps that are excruciatingly clear, for someone who has never used \"publish\" before like me? Ideally with a small repro project I could build in various ways, and explicit descriptions of the behavior you expect and what you see instead.",
        "createdAt": "2017-04-27T22:36:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I'm not the original reporter, but experienced this issue attempting to configure a build agent without Visual Studio - using https://aka.ms/vs/15/release/vs_buildtools.exe - excerpt from PS script: \r\n\r\n```\r\n&.\\vs_buildtools.exe `\r\n  --add Microsoft.VisualStudio.Workload.MSBuildTools `\r\n  --add Microsoft.VisualStudio.Workload.WebBuildTools `\r\n  --includeRecommended --includeOptional `\r\n  --passive `\r\n  --norestart\r\n```\r\n",
        "createdAt": "2017-04-27T23:40:59Z",
        "author": {
          "login": "mattlwilliams"
        }
      },
      {
        "body": "Same here: that's ok with Enterprise VS 2017 on development machine, but nothing is published when running the same build command on a Jenkins box with the build tools (no VS installed).",
        "createdAt": "2017-04-28T06:29:54Z",
        "author": {
          "login": "frbar"
        }
      },
      {
        "body": "Very annoying issue, has anyone found a workaround when using TFS?\r\n\r\nWe have the VS 2017 build tools installed on our build agent and see this issue with publishprofile + DeployOnBuild=true",
        "createdAt": "2017-05-03T13:55:35Z",
        "author": {
          "login": "adam-knights"
        }
      },
      {
        "body": "We can't move forward with **msbuild 15** because of this.",
        "createdAt": "2017-05-10T16:15:05Z",
        "author": {
          "login": "ehaackXceligent"
        }
      },
      {
        "body": "I had this issue even with VS 2017 Enterprise installed. I had to re-run the Enterprise installer and select the component \"ASP.NET and web development tools\" in order to get web publish to work from the build server. Now that I think about it, this seems very similar to a problem I had back around VS 2012/2013 that required the Azure SDK to be installed for web publish to work (even though I didn't need to install any Azure components this time around).",
        "createdAt": "2017-05-12T16:41:48Z",
        "author": {
          "login": "doughless"
        }
      },
      {
        "body": "MSBuild 15.2 (26430.4) fixed the problem for me. (Just start the the installer; the update will then be available for install.)",
        "createdAt": "2017-05-15T11:57:26Z",
        "author": {
          "login": "ewilli"
        }
      },
      {
        "body": "This also fixes the issue (via Chocolatey) for versions prior to 15.2: https://chocolatey.org/packages/visualstudio2017-workload-webbuildtools\r\n\r\n[Edit: clarification]",
        "createdAt": "2017-05-15T15:55:21Z",
        "author": {
          "login": "ehaackXceligent"
        }
      },
      {
        "body": "Same here, latest version of VS update fix the problem for me to.\r\n",
        "createdAt": "2017-05-16T09:19:34Z",
        "author": {
          "login": "ducseb"
        }
      },
      {
        "body": "Glad to hear that updating seems to be working for folks. Please let us know if you're seeing this problem\r\n\r\n* After installing the Web Build Tools workload\r\n* On 15.2\r\n\r\nIf we don't hear a dissenting view, we'll close this as fixed . . .",
        "createdAt": "2017-05-16T14:36:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "It's ok for me with latest VS Build Tools. Just take care of adding Web development build tools by modifying installation.",
        "createdAt": "2017-05-19T14:00:46Z",
        "author": {
          "login": "faemm"
        }
      },
      {
        "body": "Had the same issue, and this worked for me.  Something that confused me for a bit, is that the updater says 15.2 is installed, but the file version on MSBuild.exe is 15.1.1012.6693.  I'm unsure if that's normal or not.",
        "createdAt": "2017-05-25T21:29:16Z",
        "author": {
          "login": "Grandpappy"
        }
      },
      {
        "body": "@Grandpappy yes, that's the MSBuild version that shipped with VS15.2 (unchanged from 15.1).",
        "createdAt": "2017-05-25T21:34:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Hey Guys, I Tested the MSBuild for VS2017 Preview (15.3) and the problem still the same... ",
        "createdAt": "2017-06-01T18:33:09Z",
        "author": {
          "login": "mInternauta"
        }
      },
      {
        "body": "Hi, still have the same issue. :/",
        "createdAt": "2017-06-12T19:20:02Z",
        "author": {
          "login": "emilegg"
        }
      },
      {
        "body": "@mInternauta @emilegg can you please detail _exactly_ how your machine is set up, what you're doing, and how it differs from what you expect?",
        "createdAt": "2017-06-12T19:21:17Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Windows 10, Microsoft Visual Studio Professional 2017 Version 15.2 (26430.13) Release, my command is :\r\n `msbuild C:\\project\\myproject.csproj /p:DeployOnBuild=true /p:PublishProfile=MyPublishProfile` and it seems to ignore the Publication profile. It always takes the default value.",
        "createdAt": "2017-06-12T19:39:32Z",
        "author": {
          "login": "emilegg"
        }
      },
      {
        "body": "Also see this issue still, upgraded from 15.1 to 15.2 using the installer and it did not fix this issue.",
        "createdAt": "2017-06-13T07:26:21Z",
        "author": {
          "login": "adam-knights"
        }
      },
      {
        "body": "@adam-knights @emilegg @mInternauta does your build tools installation contain the web build tools?\r\n```\r\nvs_buildtools.exe --add Microsoft.VisualStudio.Workload.WebBuildTools\r\n```",
        "createdAt": "2017-06-13T07:48:33Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "@dasMulli Yes, it is installed.",
        "createdAt": "2017-06-13T13:32:40Z",
        "author": {
          "login": "emilegg"
        }
      },
      {
        "body": "Here's the output errors (3) :\r\n\r\n> The OutputPath property is not set for project 'MyProject.csproj'. Please check to make sure that you have specified a valid combination of Configuration and Platform for this project. Configuration='Debug' Pl atform='AnyCPU'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.\r\n\r\n> No destination specified for Copy. Please supply either \"DestinationFiles\" or \"Destination Folder\".\r\n\r\n> The \"FindUnderPath\" task was not given a value for the required parameter \"Path\".",
        "createdAt": "2017-06-14T15:37:31Z",
        "author": {
          "login": "emilegg"
        }
      },
      {
        "body": "nvm, it worked with this command : \r\n`bat \"msbuild \\\"C:\\\\Test\\\\MyProject.csproj\\\" /P:DeployOnBuild=true /P:PublishProfile=\\\"Debug - PUBLISH PROFILE\"\\ /P:PublishProfileRootFolder=\\\"C:\\\\Test\\\\Properties\\\\PublishProfiles\\\" /P:AllowUntrustedCertificate=true /P:Platform=x86 /P:Configuration=\\\"Debug - CONFIGURATION PROFILE\"\\\"`\r\n\r\nThx ! :)",
        "createdAt": "2017-06-15T14:22:55Z",
        "author": {
          "login": "emilegg"
        }
      },
      {
        "body": "I am using v15.2 and still having this problem. I get the ...\r\n\r\n_DeploymentUnpublishable:\r\n  Skipping unpublishable project.\r\n\r\nI have not installed the Web Build Tools workload. Is this required if I am just publishing to a folder and not doing a web deploy?\r\n\r\n",
        "createdAt": "2017-07-29T17:23:32Z",
        "author": {
          "login": "whiskytangofoxtrot"
        }
      },
      {
        "body": "I'm figuring out how to build all projects and create a package in the same instruction. Any thoughts?",
        "createdAt": "2017-08-02T14:39:27Z",
        "author": {
          "login": "gandarez"
        }
      },
      {
        "body": "I have tried v15.3 (exactly 15.3.409.57025) and the problem is still there:\r\n_DeploymentUnpublishable:\r\nSkipping unpublishable project.",
        "createdAt": "2017-08-15T13:46:15Z",
        "author": {
          "login": "jiriminx"
        }
      },
      {
        "body": "I have run into that as well when building visual studio project from jenkins build\r\n1. C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\msbuild.exe - Publishing would be ignore\r\n2. C:\\Program Files (x86)\\MSBuild\\12.0\\bin\\msbuild.exe - Published successfuly\r\n\r\nI should mention the project is visual studio 2017 version upgraded from VS2010",
        "createdAt": "2017-08-25T14:28:41Z",
        "author": {
          "login": "michshat"
        }
      },
      {
        "body": "I have run following this; and It's work with deployed\r\n\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin>msbuild.exe \"c:\\MyProject\\AnyProject.csproj\" /P:DeployOnBuild=true /P:PublishProfile=Debug /P:AllowUntrustedCertificate=true /P:Configuration=Debug",
        "createdAt": "2017-08-30T05:34:20Z",
        "author": {
          "login": "MongkonEiadon"
        }
      },
      {
        "body": "Make sure that you use the proper MSBuild.exe. This: \r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\Bin\r\n\r\nOr if IDE (enterprise) installed: \r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\r\n\r\nIf configure an MSBUILD step in a TFS server, set the path of the MSBUILD.exe manualy (Advenced/MSBuild/Specify location)\r\n\r\nUsing this: \r\nC:\\Program Files (x86)\\MSBuild\\15.0\\Bin\r\nwill cause that deployment package creation FAIL.",
        "createdAt": "2017-08-31T08:56:49Z",
        "author": {
          "login": "siposz"
        }
      },
      {
        "body": "We are using MSBuild 15.3 on our TFS build server and still having this problem. Here's the command we are using:\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\MSBuild.exe \"C:\\Builds\\_work\\2\\s\\RQ.Shared\\RQ.Shared.sln\" /m /p:\"DeployOnBuild=true\" /p:\"PublishProfile=C:\\Builds\\_work\\2\\s\\BuildTools\\PublishAppServicesScripts\\Build\\publishProfile-RQ.Shared.pubxml\" /p:\"SkipInvalidConfigurations=true\" /p:\"Configuration=Release\" /p:\"Platform=Any CPU\" /verbosity:\"minimal\" /fileLoggerParameters:\"LogFile=C:\\Builds\\_work\\2\\b\\logs\\RQ.Shared.msbuild.log\" /flp1:\"logfile=C:\\Builds\\_work\\2\\b\\logs\\RQ.Shared.msbuild.error.log;errorsonly\"\r\n```\r\nMSBuild reports that the build completed successfully, but nothing shows up in the expected artifacts directory. We are building/publishing ASP.Net Web Application WCF services. The build servers only have VS 2017 installed on them.\r\n\r\nFor now we are going to revert back to using MSBuild v14 since the exact same command works there.\r\n\r\n@rainersigwald please consider reopening this issue. Many people are still struggling with it, so I don't think the issue has been fully fixed.\r\n\r\nIf you require any other information from us, or would like us to test other parameters/configurations, please let me or @VincentLangevin know.\r\n",
        "createdAt": "2017-09-07T22:59:15Z",
        "author": {
          "login": "deadlydog"
        }
      },
      {
        "body": "@rainersigwald it turns out that using the 64-bit MSBuild works correctly, but the 32-bit MSBuild does not create any artifacts to the output path.\r\n\r\n64-bit path (works):\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\amd64\\MSBuild.exe\r\n```\r\n\r\n32-bit path (does not work):\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\MSBuild.exe\r\n```\r\n\r\nHopefully that will give you guys a hint at the root problem so you can get this fixed in all versions of MSBuild.exe.",
        "createdAt": "2017-09-11T17:39:41Z",
        "author": {
          "login": "deadlydog"
        }
      },
      {
        "body": "I, too, am having this issue.  With both the Bin\\MSBuild.exe and Bin\\amd64\\MSBuild.exe.\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\Bin\\amd64>msbuild /ver\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.3.409.57025\r\n```",
        "createdAt": "2017-09-12T19:28:50Z",
        "author": {
          "login": "jc5577"
        }
      },
      {
        "body": "@andygerlicher",
        "createdAt": "2017-09-12T20:01:46Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "We're also experiencing this issue. Switching between the 32-bit and 64-bit versions of msbuild makes no difference.",
        "createdAt": "2017-09-13T05:02:32Z",
        "author": {
          "login": "alexjustus"
        }
      },
      {
        "body": "I had the same issue.\r\nUsing the build tools version of 2017 on the buildagent.  \r\n(Microsoft (R) Build Engine version 15.3.409.57025 for .NET Framework)\r\nTried both x86 and x64.\r\n\r\nMy Publish profile is created in Visual Studio 2017, and is just a plain Filesystem copy, without any connectionString changes.\r\n\r\nWhen I checked for `Web Deployment Build Tools`, I didn't have that installed.\r\nAfter I ran the installer and selected `Web Deployment Build Tools` from the UI installer  \r\n(also deselected .net core 1.0 dev tools, and selected .net framework 4-4.6 dev tools, .net framework 4.6.2 dev tools, .net framework 4.7 dev tools) it works as expected \ud83d\udc4d  \r\nFiles are being copied to the output dir specified in the publish profile (`bin\\Release\\PublishOutput`)",
        "createdAt": "2017-09-20T08:22:22Z",
        "author": {
          "login": "ruant"
        }
      },
      {
        "body": "We were having this problem, and I can confirm that the solution outlined by @ruant fixed it for us as well.",
        "createdAt": "2017-09-20T17:04:16Z",
        "author": {
          "login": "jadarnel27"
        }
      },
      {
        "body": "for anyone out there that this may help, i was having this issue on a fresh installation of windows that only had VS 2017 installed. I installed VS 2015 on the machine and touched NOTHING else from how I was doing the build, and now it works... I don't get it, but it's suddenly working so i'm going to back away slowly from my machine now...",
        "createdAt": "2017-09-21T23:49:50Z",
        "author": {
          "login": "mrtristan"
        }
      },
      {
        "body": "@mrtristan Might be that VS15 added a bin directory that contains msbuild to your path? (If your not typing in the full path to msbuild in the commandline?)  \r\nSo the command line now uses the VS2015 msbuild instead of msbuild from VS17.\r\n\r\n`cmd /c where msbuild` will tell you where msbuild is located.",
        "createdAt": "2017-09-22T14:47:50Z",
        "author": {
          "login": "ruant"
        }
      },
      {
        "body": "@ruant i confirmed it was using the same msbuild as a machine that was fully functional. it makes no sense.",
        "createdAt": "2017-09-22T16:20:25Z",
        "author": {
          "login": "mrtristan"
        }
      },
      {
        "body": "same here with Build tools v15.3, installed all web/.core\r\nRunning with commandline like this:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\bin\\MSBuild.exe \r\n/flp:PerformanceSummary;Summary;LogFile=log.txt;Encoding=UTF-8 /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=Release /p:VSToolsPath=..\\Build DouTree/DouTree.sln\r\n```\r\n\r\nIf I change Msbuild to C:\\Program Files (x86)\\MSBuild\\14.0\\bin then it works OK",
        "createdAt": "2017-10-02T12:45:32Z",
        "author": {
          "login": "xumix"
        }
      },
      {
        "body": "Going through the same issue with v15.3 (VS2017) on a brand new server.   We first encountered this issue on our old build server, but it had v14 (VS2015) so we hack it to use the older msbuild tool.   The goal of the new server is to completely move to v15.3 (VS2017) and it's been a pain with all of the different tools path.\r\n\r\nWe finally solved it by passing in the MSBuildExtensionsPath32 parameter:\r\n```\r\n/t:Build /p:Configuration=Debug /p:DeployOnBuild=true /p:PublishProfile=bta /p:MSBuildExtensionsPath32=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\"\r\n```\r\n**Note**: Since this is on the build server, we use _BuildTools_.  Your path may differ with _Professional_, _Enterprise_, etc... if execute from your desktop commandline.\r\n\r\nThis is the entire command as output on our Jenkins build:\r\n```\r\nPath To MSBuild.exe: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\amd64\\msbuild.exe\r\nExecuting the command cmd.exe /C \" chcp 1252 && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\amd64\\msbuild.exe\" /t:Build /p:Configuration=Debug /p:DeployOnBuild=true /p:PublishProfile=bta \"/p:MSBuildExtensionsPath32=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\" src\\Gsn.Api.Web\\Gsn.Api.Web.sln \" \r\n```\r\n\r\nNote, this is because our research indicates that the issue is related to Microsoft.WebApplication.targets, which ours csproj file has:\r\n```\r\n  <PropertyGroup>\r\n    <VisualStudioVersion Condition=\"'$(VisualStudioVersion)' == ''\">15.0</VisualStudioVersion>\r\n    <VSToolsPath Condition=\"'$(VSToolsPath)' == ''\">$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)</VSToolsPath>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(MSBuildBinPath)\\Microsoft.CSharp.targets\" />\r\n  <Import Project=\"$(VSToolsPath)\\WebApplications\\Microsoft.WebApplication.targets\" />\r\n```\r\n\r\nNotice we also updated $(VisualStudioVersion) to 15.0 instead of 14.0 in our csproj file.  You may also pass this as a parameter of your MSBuild if you do not want to updated the csproj file.  Hope this help the next person.\r\n",
        "createdAt": "2017-10-03T19:04:09Z",
        "author": {
          "login": "noogen"
        }
      },
      {
        "body": "@noogen So you have _BuildTools_ and _Professional_ installed on your build server? ",
        "createdAt": "2017-10-06T09:29:09Z",
        "author": {
          "login": "ruant"
        }
      },
      {
        "body": "@ruant Opps, look like my MSBuild config is pointing to the _Professional_ version.  I do have both _BuildTools_ and _Professional_, but you don't have to.  In my frustration, I tried many different configurations include installing both _BuildTools_ and _Professional_  on my build server.   Anyway, I just switch and build with BuildTools just fine:\r\n\r\n```\r\nPath To MSBuild.exe: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\Bin\\amd64\\msbuild.exe\r\nExecuting the command cmd.exe /C \" chcp 1252 && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\Bin\\amd64\\msbuild.exe\" /t:Build /p:Configuration=Debug src\\Gsn.Digital.Web\\Gsn.Digital.Web.sln \" && exit %%ERRORLEVEL%% from f:\\workspace\\ci.digitalstore\r\n[ci.digitalstore] $ cmd.exe /C \" chcp 1252 && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\Bin\\amd64\\msbuild.exe\" /t:Build /p:Configuration=Debug src\\Gsn.Digital.Web\\Gsn.Digital.Web.sln \" && exit %%ERRORLEVEL%%\r\nActive code page: 1252\r\n\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n```\r\n\r\nThis new $MSBuildExtensionsPath32 for different Visual Studio version is frustrating.  Why can't they just stick to installing it at the old \"C:\\Program Files (x86)\\MSBuild\" path? \r\n\r\nAlso note that, since I'm only setting $MSBuildExtensionsPath32, it does not affect my developers and the different versions of Visual Studio that they are using.",
        "createdAt": "2017-10-06T15:04:25Z",
        "author": {
          "login": "noogen"
        }
      },
      {
        "body": "We are experiencing the same problem on vsts. Strangely enough we only have the problem with one of the projects in the solution... The other projects are published fine.",
        "createdAt": "2017-11-25T10:14:06Z",
        "author": {
          "login": "ldla"
        }
      },
      {
        "body": "I can see problem still there with VS 2017, update 15.4.5. \r\nI have legacy web site application, which throws a lot of circular reference error, if I precompile it. So decided not to precompile before publish and made a PublishProfile named AUTO_BUILD with Precompile option unchecked.\r\nPublish from IDE of VS2012/2017 is working fine, but not with below command. Still getting circular reference error even after providing PublishProfile attribute to MSBuild.\r\n\r\nAnything wrong with this command?\r\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319>MSBuild <Solutionpath> /p:DeployOnBuild=true /p:PublishProfile=AUTO_BUILD>C:\\buildlog.txt\r\n\r\neven same for\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin>MSBuild <Solutionpath> /p:DeployOnBuild=true /p:PublishProfile=\"AUTO_BUILD\">C:\\buildlog.txt",
        "createdAt": "2017-12-01T12:44:03Z",
        "author": {
          "login": "bhumikadave"
        }
      },
      {
        "body": "@bhumikadave  have you try providing **MSBuildExtensionsPath32** parameter?\r\n\r\nSomething like below with MSBuild Tools installed:\r\n```\r\n/p:MSBuildExtensionsPath32=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\"\r\n```\r\n\r\nCheck my response under xumix.  You may need to modify your csproj file too.\r\n",
        "createdAt": "2017-12-01T13:27:32Z",
        "author": {
          "login": "noogen"
        }
      },
      {
        "body": "Thanks Tom. I'll check that.\nAs I said, it is website project, so no .vbproj file..I have only\npublish.proj\n\nOn 01-Dec-2017 6:57 PM, \"Tom Noogen\" <notifications@github.com> wrote:\n\n@bhumikadave <https://github.com/bhumikadave> have you try providing\n*MSBuildExtensionsPath32* parameter?\n\nSomething like below with MSBuild Tools installed:\n\n/p:MSBuildExtensionsPath32=\"C:\\Program Files (x86)\\Microsoft Visual\nStudio\\2017\\BuildTools\\MSBuild\"\n\nCheck my response under xumix. You may need to modify your csproj file too.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/Microsoft/msbuild/issues/1901#issuecomment-348494376>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AglDTWSFAt9W9Lvam3HOQIvN7icAiqW0ks5s7_7TgaJpZM4Mm-du>\n.\n",
        "createdAt": "2017-12-01T13:55:19Z",
        "author": {
          "login": "bhumikadave"
        }
      },
      {
        "body": "This doesn't work as well.",
        "createdAt": "2017-12-04T05:45:26Z",
        "author": {
          "login": "bhumikadave"
        }
      },
      {
        "body": "https://social.msdn.microsoft.com/Forums/vstudio/en-US/325dd0e9-a033-45b8-89cc-ff1388cd85da/msbuild-doesnt-take-publishprofile-without-precompile?forum=msbuild",
        "createdAt": "2017-12-04T11:27:04Z",
        "author": {
          "login": "bhumikadave"
        }
      },
      {
        "body": "I have WebApplication and DeleteExistingFiles option is ignored. Publish seems to be working, but target directory is not cleaned before publish. Why? How to fix it? Publishing from VS works fine.",
        "createdAt": "2017-12-17T10:11:02Z",
        "author": {
          "login": "RaptorCZ"
        }
      },
      {
        "body": "I can't believe that this issue is not solved by Microsoft. Some issues are marginal, with little hindrance to the overall development process. Yet some issues like this are fatal to an entire organization in upgrades to new technologies. We've encountered this damn error, and we've tried all of the suggestions above (which by the way, when so many ways exist for a problem to be solved, it means that the problem is not a good one) and we haven't succeeded yet. \r\n\r\nWe're truly stuck at this point, and all we can think of is to stop our CI/CD automation and go back to old school for a while for delivery, which of course sucks. But we have no other choice and we see no responsibility/commitment from Microsoft's part.",
        "createdAt": "2017-12-24T09:37:25Z",
        "author": {
          "login": "Nefcanto"
        }
      },
      {
        "body": "I also realized that the latest release of MSBuild is https://github.com/Microsoft/msbuild/releases/tag/v15.4.8.50001, while my installed version that is updated while I updated Visual Studio 2017 to 15.5.2 is 15.5.180.51428.\r\nHow that is possible that a newer version of MSBuild ships with VS, but is not released on the MSBuild github?",
        "createdAt": "2017-12-24T09:54:06Z",
        "author": {
          "login": "Nefcanto"
        }
      },
      {
        "body": "It turns out I had deleted some conditional imports which broke the zip packaging. The fix was to delete this from the csproj:\r\n\r\n```xml\r\n<Import Project=\"$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v14.0\\WebApplications\\Microsoft.WebApplication.targets\" Condition=\"false\" />\r\n```\r\n\r\nAnd replace it with this:\r\n\r\n```xml\r\n<Import Project=\"$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v15.0\\WebApplications\\Microsoft.WebApplication.targets\" Condition=\"true\" />\r\n```\r\n\r\nI had uninstalled VS2015, and we had updated our CI machines to 15, so v14 being a problem was pretty obvious in hindsight, as many problems are.\r\n\r\n<details>\r\n  <summary>Click to expand old post</summary>\r\nI've also hit this issue. None of the solutions/workarounds work for me. So far as I can tell, the upgrade from msbuild 15.3 to 15.5 was the thing that broke things on our CI machines. (AFAIK, 15.4 worked for me locally, but the CI versions of msbuild were a little bit behind.)\r\n\r\nOutput below from the CI machines. In 15.3, this command build a deployable zip:\r\n\r\n```\r\nmsbuild.exe /m /nr:false /verbosity:minimal /p:SemanticVersion=2.0.52 /p:Configuration=Release /p:DeployOnBuild=True /p:DeployTarget=Package /p:DeployIisAppPath=Default Web Site\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  CalendaringService -> C:\\jenkins\\workspace\\MSWPP\\MSWPP.CalendaringService.Master\\src\\CalendaringService\\bin\\CalendaringService.dll\r\n  Transformed Web.config using C:\\jenkins\\workspace\\MSWPP\\MSWPP.CalendaringService.Master\\src\\CalendaringService\\Web.Release.config into obj\\Release\\TransformWebConfig\\transformed\\Web.config.\r\n  Auto ConnectionString Transformed obj\\Release\\TransformWebConfig\\transformed\\Web.config into obj\\Release\\CSAutoParameterize\\transformed\\Web.config.\r\n  Copying all files to temporary location below for package/publish:\r\n  obj\\Release\\Package\\PackageTmp.\r\n  Packaging into C:\\jenkins\\workspace\\MSWPP\\MSWPP.CalendaringService.Master\\src\\CalendaringService\\obj\\Release\\Package\\CalendaringService.zip.\r\n\r\n<snip>\r\n\r\n Adding declared parameter 'IIS Web Application Name'.\r\n  Package \"CalendaringService.zip\" is successfully created as single file at the following location:\r\n  file:///C:/jenkins/workspace/MSWPP/MSWPP.CalendaringService.Master/src/CalendaringService/obj/Release/Package\r\n```\r\n\r\nWith 15.5, no such luck:\r\n\r\n```\r\nmsbuild.exe /m /nr:false /verbosity:minimal /p:SemanticVersion=2.0.66 /p:Configuration=Release /p:DeployOnBuild=True /p:DeployTarget=Package /p:DeployIisAppPath=Default Web Site\r\nMicrosoft (R) Build Engine version 15.5.180.51428 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  CalendaringService -> D:\\Jenkins\\workspace\\MSWPP\\MSWPP.CalendaringService.Pull-Request\\src\\CalendaringService\\bin\\CalendaringService.dll\r\n  PerformanceTests -> D:\\Jenkins\\workspace\\MSWPP\\MSWPP.CalendaringService.Pull-Request\\CalendaringService.PerformanceTests\\bin\\Release\\PerformanceTests.exe\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(2041,5): warning MSB3277: Found conflicts between different versions of \"Microsoft.Owin\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [D:\\Jenkins\\workspace\\MSWPP\\MSWPP.CalendaringService.Pull-Request\\src\\UnitTests\\CalendaringService.UnitTests.csproj]\r\n  CalendaringService.UnitTests -> D:\\Jenkins\\workspace\\MSWPP\\MSWPP.CalendaringService.Pull-Request\\src\\UnitTests\\bin\\Release\\CalendaringService.UnitTests.dll\r\n```\r\n\r\nOn the CI machines, we're using the VS Build Tools, and the output above is taken from there. Rebuilding SHAs that previously created deployable artifacts doesn't work, so it must be something with msbuild 15.5.\r\n\r\nLocally with 2017 Pro, it doesn't work either. I uninstalled and reinstalled, which didn't help, either. I had used versions of VS with msbuild 15.4, and they had worked, so I'm pretty sure it's a change between msbuild 15.4 and 15.5.\r\n\r\nUnfortunately, there are [no release notes pertaining to 15.5](https://github.com/Microsoft/msbuild/releases).\r\n</details>",
        "createdAt": "2018-02-08T19:16:59Z",
        "author": {
          "login": "rianjs"
        }
      },
      {
        "body": "I was having the same issue, and I haven't solved it but I have determined why it's happening.\r\n```\r\n  <!--\r\n    ============================================================\r\n                                        _DeploymentUnpublishable\r\n\r\n    This target is used to block an attempt to ClickOnce publish a non-publishable project, such as a ClassLibrary, when building outside the IDE.\r\n    ============================================================\r\n    -->\r\n  <Target\r\n      Name=\"_DeploymentUnpublishable\">\r\n\r\n    <Message Text=\"Skipping unpublishable project.\"/>\r\n\r\n  </Target>\r\n```\r\n\r\nThis is a target from Microsoft.Common.CurrentVersion.targets. It checks the PublishableProject property on the .csproj file and if it's not set to true, it will trigger the \"Skipping unpublishable project\" message. Web projects are not allowed to have this property set to true, I found. I receive this message from MSBuild: \r\n```\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\amd64\\Microsoft.Common.CurrentVersi\r\non.targets(5134,5): error : Publish is only valid for 'Windows Application' or 'Console Application' project types. [C:\r\n```\r\n\r\n\r\nAccording to https://stackoverflow.com/questions/18485070/publish-web-projects-with-msbuild it seems to be by design that you can't publish web projects with msbuild.",
        "createdAt": "2018-02-09T20:43:02Z",
        "author": {
          "login": "davvves"
        }
      },
      {
        "body": "I got it working in my [custom build tools container](https://docs.microsoft.com/en-us/visualstudio/install/build-tools-container#step-5-create-and-build-the-dockerfile) as mentioned in [this issue](https://github.com/Microsoft/dotnet-framework-docker/issues/91).\r\n\r\n```dockerfile\r\n# Use the latest Windows Server Core image.\r\nFROM microsoft/windowsservercore\r\n\r\n# Download useful tools to C:\\Bin.\r\nADD https://dist.nuget.org/win-x86-commandline/v4.1.0/nuget.exe C:\\\\Bin\\\\nuget.exe\r\n\r\n# Download the Build Tools bootstrapper outside of the PATH.\r\nADD https://aka.ms/vs/15/release/vs_buildtools.exe C:\\\\TEMP\\\\vs_buildtools.exe\r\n\r\n# Add C:\\Bin to PATH and install Build Tools excluding workloads and components with known issues.\r\nRUN setx /m PATH \"%PATH%;C:\\Bin\" \r\nRUN C:\\TEMP\\vs_buildtools.exe --quiet --wait --norestart --nocache --installPath C:\\BuildTool \\\r\n    --add Microsoft.VisualStudio.Workload.WebBuildTools;includeRecommended \\\r\n    --add Microsoft.VisualStudio.Workload.MSBuildTools \\\r\n || IF \"%ERRORLEVEL%\"==\"3010\" EXIT 0\r\n\r\nADD https://download.microsoft.com/download/9/0/1/901B684B-659E-4CBD-BEC8-B3F06967C2E7/NDP471-DevPack-ENU.exe C:\\\\TEMP\\\\NDP471-DevPack-ENU.exe\r\nRUN C:\\TEMP\\NDP471-DevPack-ENU.exe /install /quiet /norestart\r\n\r\n# SHELL [\"C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\", \"-command\"]\r\n\r\n# Start developer command prompt with any other commands specified.\r\n# ENTRYPOINT C:\\BuildTools\\Common7\\Tools\\VsDevCmd.bat &&\r\n\r\n# Default to PowerShell if no other command specified.\r\nCMD [\"powershell.exe\", \"-NoLogo\", \"-ExecutionPolicy\", \"Bypass\"]\r\n```\r\n\r\nAnd the `Dockerfile` for publishing my project in a [multi-stage docker build](https://docs.docker.com/develop/develop-images/multistage-build/):\r\n```Dockerfile\r\nFROM that-custom-build-tools-container:latest AS build-env\r\nWORKDIR /app\r\n\r\nCOPY . ./\r\nRUN nuget restore\r\nRUN C:\\BuildTool\\MSBuild\\15.0\\bin\\msbuild.exe your-project-here.csproj /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=your-profile-here\r\n\r\nFROM microsoft/aspnet:4.7.1-windowsservercore-1709\r\nARG source\r\nWORKDIR /inetpub/wwwroot\r\nCOPY --from=build-env /app/output-folder-of-publish ./\r\n```",
        "createdAt": "2018-02-12T07:55:13Z",
        "author": {
          "login": "riezebosch"
        }
      },
      {
        "body": "same error. vs 2017 last update",
        "createdAt": "2018-03-01T14:44:14Z",
        "author": {
          "login": "RemSoftDev"
        }
      },
      {
        "body": "We're also having this problem which is preventing us from upgrading our build agents to handle mixed projects (.net core + framework 4.5.1). Can I kindly ask someone from Microsoft team to share any details if this is a known bug / new behaviour and if there are other ways to publish Webapp from msbuild in command lines? \r\nThank you!",
        "createdAt": "2018-03-05T15:52:17Z",
        "author": {
          "login": "damtur"
        }
      },
      {
        "body": "Update: \r\nAdding\r\n`<Import Project=\"$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v15.0\\WebApplications\\Microsoft.WebApplication.targets\" />`\r\nTo csproj file made it work.\r\n\r\nMSBuild version: `15.5.180.51428`",
        "createdAt": "2018-03-05T18:36:42Z",
        "author": {
          "login": "damtur"
        }
      },
      {
        "body": "But I got it working *[even inside a docker container](https://github.com/Microsoft/msbuild/issues/1901#issuecomment-364849495)*. For me the trick was installing the **recommended** components from the build tools installer:\r\n\r\n```powershell\r\n& vs_buildtools.exe --quiet --wait --norestart --nocache --installPath C:\\BuildTool `\r\n    --add Microsoft.VisualStudio.Workload.WebBuildTools;includeRecommended `\r\n    --add Microsoft.VisualStudio.Workload.MSBuildTools\r\n```",
        "createdAt": "2018-03-05T19:19:20Z",
        "author": {
          "login": "riezebosch"
        }
      },
      {
        "body": "I'm using Visual Studio 2017 and have the same issue when I execute the following command \r\n\r\n```\r\nmsbuild ./MyProject.csproj /p:DeployOnBuild=true /p:PublishProfile=DeployRelease /p:Configuration=Release\r\n```\r\n\r\nThe problem was fixed when I executed script in the `Developer Command Prompt VS 2017`",
        "createdAt": "2018-03-07T21:21:37Z",
        "author": {
          "login": "aliakseimaniuk"
        }
      },
      {
        "body": "I do have the same issue... Any solutions?",
        "createdAt": "2018-03-09T18:25:12Z",
        "author": {
          "login": "blkrishnan2k"
        }
      },
      {
        "body": "I wish to execute in a build server...",
        "createdAt": "2018-03-09T18:25:51Z",
        "author": {
          "login": "blkrishnan2k"
        }
      },
      {
        "body": "Adding @vijayrkn",
        "createdAt": "2018-03-29T03:58:35Z",
        "author": {
          "login": "mlorbetske"
        }
      },
      {
        "body": "You can find documentation on how to use PublishProfiles from commandline here - https://github.com/aspnet/websdk#folder-publish \r\n\r\nHere is a sample project with a PublishProfile:\r\nhttps://github.com/vijayrkn/dotnetpublishprofilesample/blob/7dac43543173b4ce908921106cc84d810c6dc623/WebPublishCommandlineSample/Properties/PublishProfiles/SampleFolderProfile.pubxml\r\n\r\nMSBuild command to publish to a folder using the above publish profile: https://github.com/vijayrkn/dotnetpublishprofilesample/blob/7dac43543173b4ce908921106cc84d810c6dc623/PublishCommandline.txt\r\n\r\nI would be happy to take a look at the issue if some one can provide me a sample project & msbuild command that is not working.\r\n",
        "createdAt": "2018-03-29T06:55:51Z",
        "author": {
          "login": "vijayrkn"
        }
      },
      {
        "body": "I'm also experiencing this. MSBuild 14 and 15. I used @rianjs's targets change in my process of fixing it, and now it works. But a minor issue: targets I build for the publish process execute during normal building now. Although this isn't a problem for me (it's just a webpack bundle I wanted to execute before publishing) it does slow down my builds that don't need to publish, and it could be a problem for others. I'm not sure why it's being triggered. `BeforeTargets=\"PublishOnly\"` shouldn't really be happening on a normal build.",
        "createdAt": "2018-05-10T19:34:29Z",
        "author": {
          "login": "IronSean"
        }
      },
      {
        "body": "@vijayrkn https://github.com/admin-fsoft/TestMSBuild",
        "createdAt": "2018-06-11T02:29:17Z",
        "author": {
          "login": "admin-fsoft"
        }
      },
      {
        "body": "Using Visual Studio Build Tools 2017 (15.7.4) same problem.  The project Build using Jenkins MsBuild plugin (and create a a file with the bin of the C# programme) but it doesn't publish multiple web-services related. Using Visual Studio IDE to publish works ok but want to automate the process if the publishing is Skipped.\r\nHave some one have news to resolve that problem.",
        "createdAt": "2018-07-06T15:14:33Z",
        "author": {
          "login": "brunoAmado"
        }
      },
      {
        "body": "I'm not sure this is related but when trying to provide the PublishProfile it is ignored when defined within a custom target, specifying the properties directly in the project element is working\r\n\r\n```\r\n<Target Name=\"PublishProperties\">\r\n    <PropertyGroup>\r\n      <PublishProfile>Package</PublishProfile>\r\n      <DeployOnBuild>true</DeployOnBuild>\r\n    </PropertyGroup> \r\n  </Target>\r\n  <Target Name=\"Package\" DependsOnTargets=\"PublishProperties\" >\r\n    <CallTarget Targets=\"Restore;Build\"/> \r\n</Target>\r\n```\r\n\r\nEDIT: Fixed code example, still not working when I run:\r\nmsbuild /t:package\r\n\r\nonly works if I explicitly pass the profile through the command line:\r\nmsbuild /t:package /p:PublishProfile=Package",
        "createdAt": "2018-07-10T08:14:10Z",
        "author": {
          "login": "dejoost"
        }
      },
      {
        "body": "Any movement or news from Microsoft on this or is Microsoft just gonna keep pretending this is not an issue? I provided a sample project & msbuild command that is not working a month ago and have not heard a single word back.\r\n\r\nPretty much until this issue is fixed, automated deployment is dead for anything that needs to transform a web config as a part of that deployment using the latest versions of MSBuild. So thanks guys, great job! ;)\r\n\r\nYou'd think that with all the releases for Visual Studio that MS puts out these days this issue would of been fixed by now. But nah, instead we got useless warnings instead like those ones about Resharper slowing down VS. This makes me wonder if this is nothing more than MS trying to keep people on Visual Studio by making it so you can only publish your applications via Visual Studio.\r\n\r\nP.S. May I suggest that the MSBuild team incorporates some form of regression testing into their development cycle in order to not break existing features when making changes?",
        "createdAt": "2018-07-11T02:25:51Z",
        "author": {
          "login": "admin-fsoft"
        }
      },
      {
        "body": "@admin-fsoft I'm guessing it's probably very low priority as MS probably pushing everyone onto their cloud TFS and build.",
        "createdAt": "2018-07-11T09:38:16Z",
        "author": {
          "login": "noogen"
        }
      },
      {
        "body": "@admin-fsoft - Sorry for not getting back to you sooner. I looked at the repro project that you shared. The issue is that the profile in the repro project only has `'LastUsedBuildConfiguration'` property set (https://github.com/admin-fsoft/TestMSBuild/blob/3a1080e3b9d875083200da3cb592119e101c1b7b/TestMSBuild.Web/Properties/PublishProfiles/Release%20Deploy.pubxml#L10). \r\n\r\nThis property is only used by VS to determine which configuration to change to as part of publish. MSBuild does not know about this property. If you add the following property to the publish profile, then it would work from both VS and commandline.\r\n`     <Configuration>Release</Configuration>`\r\n\r\nor you can pass this in the commandline - `/p:Configuration=Release`\r\n\r\nThe issue here is specific to configuration. You will notice that publish is honoring all other properties in the publish profile from the commandline (for e.g: it publishes to the publish folder specified in the profile).\r\n\r\nHope this helps!",
        "createdAt": "2018-07-11T20:29:19Z",
        "author": {
          "login": "vijayrkn"
        }
      },
      {
        "body": "There are a lot of other issues discussed here. Also the title seems to indicate that commandline publish is not honoring the profile at all. If you look at the repro project provided by @admin-fsoft (Thank you for providing the repro project) you will see that publish does honor the profile properties (for e.g: publishUrl, ExcludeApp_Data etc). \r\n\r\nConfiguration and Platform are a little different. You will have to either set them in the profile as `Configuration `and `Platform` or pass them from the commandline. \r\n\r\n`LastUsedBuildConfiguration `and `LastUsedPlatform` are VS specific properties.\r\n",
        "createdAt": "2018-07-11T20:38:18Z",
        "author": {
          "login": "vijayrkn"
        }
      },
      {
        "body": "Thank you for providing an answer and you are correct as this has resolved the problem with the provided test project. \r\n\r\nI am now going to go and create a stack overflow question regarding exactly this and answer it so nobody else has to wait 1 month to get an answer. Thanks again.",
        "createdAt": "2018-07-12T00:56:45Z",
        "author": {
          "login": "admin-fsoft"
        }
      },
      {
        "body": "@vijayrkn - Visual Studio itself is creating that parameter in the publish profile, when you select the configuration to use.  If this parameter should not be used, then this seems like a bug in VS.\r\n\r\n",
        "createdAt": "2018-10-29T14:01:46Z",
        "author": {
          "login": "efunkenbusch"
        }
      },
      {
        "body": "I was having this problem, and after trying a lot of different things I managed to solve it.\r\n\r\nI'm using Build Tools(MSBuild v14.0) for building my project in a Jenkins job, and in my case the problem was that I was missing some Web Publishing Dlls.\r\n\r\nI was able to get them from here: https://www.nuget.org/packages/MSBuild.Microsoft.VisualStudio.Web.targets/14.0.0.3\r\n\r\nPutting them on the following directories solved my problem:\r\nC:\\Program Files(x86)\\Microsoft\\VisualStudio\\v14.0\\Web\r\nC:\\Program Files(x86)\\Microsoft\\VisualStudio\\v14.0\\WebApplications",
        "createdAt": "2018-12-06T13:27:45Z",
        "author": {
          "login": "rafabaldoni"
        }
      },
      {
        "body": "@rafabaldoni That wasn't it.  For me, the problem was something specific in the csproj file.  It was a very old .csproj and had been converted through several steps (I think it originally dates back to VS 2003).  I ended up just creating a new default projects and copying all the files and settings to the new one.  Then publish started working again.",
        "createdAt": "2018-12-06T15:35:42Z",
        "author": {
          "login": "efunkenbusch"
        }
      },
      {
        "body": "@efunkenbusch Yeah, maybe there are different problems that result in the same error... If someone is   experiencing the same problem I had they might be able to solve it with my comment anyway.",
        "createdAt": "2018-12-06T15:43:58Z",
        "author": {
          "login": "rafabaldoni"
        }
      },
      {
        "body": "I meet the same problem.",
        "createdAt": "2018-12-20T16:26:10Z",
        "author": {
          "login": "qcmiao1998"
        }
      },
      {
        "body": "There really is one core problem with the SDK and msbuild... there's zero accountability of dependencies\r\n\r\nThe csproj file since VS2010 is a mismash of msbuild targets that are yanked in via various ways, with zero dependency management.\r\n\r\nThen when msbuild moves from v14 to v15, it all breaks again, because your csproj file doesnt know to say \"hey, I need the targets file from Microsoft.NET.SDK.v14.xxxx\" with a package manager (I keep hoping nuget will finally figure out how to do proper package dependency management but keep getting disappointed year after year)\r\n\r\n**Your core problem is usually this:** Most of the time, your problem is missing Web.Application.targets file or a Web.Application.targets file that is a different version to what your csproj file is configured for.  Not to mention, project upgrades in VS dont seem to deal with this, and leave the old configurations sitting around to muck up the new targets and again, we've traded DLL hell for TARGETS hell.\r\n\r\nThe answer has always been nuget to some degree, yet has been very slow to get integrated properly due to MS internal emp lack of understanding of whats going on out here, and the opaque nature at how it all worked for a while... with MS finally putting everything up on github, there's a lot more transparency and visibility, and people in the real world able to say \"um, guys... that just doesnt make sense beyond basic assumptions\"",
        "createdAt": "2019-01-07T22:25:25Z",
        "author": {
          "login": "ericnewton76"
        }
      },
      {
        "body": "Found an alternative. Adding a FileSystemPublish task after Publish helps. My command looks something like this.\r\nmsbuild application.sln /t:\"clean;publish;filesystempublish\" /p:PublishProfile=folderprofile",
        "createdAt": "2019-02-15T03:01:38Z",
        "author": {
          "login": "SirMrDexter"
        }
      },
      {
        "body": "In my case I was dealing with an old web app that was created with an old version of VS I am guessing 2010 or 2012. It did not have project file, just a solution file. Same issue msbuild was ignoring the parameters when I passed the solution file as the parameter, so this is what I did....\r\n\r\nmsbuild website.publishproj /p:PublishProfile=OnCUWire_publish  /p:DeployOnBuild=true /p:Configuration=Debug\r\n\r\nwebsite.publishproj is a file that VS created instead of the regular csproj. So by passing it to msbuild was able to publish it as the profile indicated.\r\nI hope this helps",
        "createdAt": "2019-09-10T17:14:09Z",
        "author": {
          "login": "pmauri01"
        }
      },
      {
        "body": "I am going to close this issue as there are many different conversation going on here and I believe the original question has been addressed by Vijay earlier in the thread.",
        "createdAt": "2019-09-11T22:26:18Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "First, thank you @richardszalay\r\nI struggled to find a solution, until I found this answer on Stack Overflow: [How to use MsBuild MsDeployPublish to target local file system?](https://stackoverflow.com/a/20982171/9990676) \r\n\r\nQuoting the answer of the link above:\r\n> As per my answer from [Using MSBuild, how do I build an MVC4 solution from the command line (applying Web.config transformations in the process) and output to a folder?](https://stackoverflow.com/questions/15273551/)\r\n> ```\r\n> msbuild ProjectFile.csproj /p:Configuration=Release ^\r\n>                            /p:Platform=AnyCPU ^\r\n>                            /t:WebPublish ^\r\n>                            /p:WebPublishMethod=FileSystem ^\r\n>                            /p:DeleteExistingFiles=True ^\r\n>                            /p:publishUrl=c:\\output\r\n> ```\r\n> Or if you are building the solution file:\r\n> \r\n> ```\r\n> msbuild Solution.sln /p:Configuration=Release ^ \r\n>                      /p:DeployOnBuild=True ^\r\n>                      /p:DeployDefaultTarget=WebPublish ^\r\n>                      /p:WebPublishMethod=FileSystem ^\r\n>                      /p:DeleteExistingFiles=True ^\r\n>                      /p:publishUrl=c:\\output\r\n> ```\r\n> \r\n> You can also [target the project via the solution](https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-build-specific-targets-in-solutions-by-using-msbuild-exe) using the /t:SolutionFolder/Project:Target syntax:\r\n> \r\n> ```\r\n> msbuild Solution.sln /t:SolutionFolder/ProjectFile:WebPublish ^\r\n>                      /p:Configuration=Release ^ \r\n>                      /p:WebPublishMethod=FileSystem ^\r\n>                      /p:DeleteExistingFiles=True ^\r\n>                      /p:publishUrl=c:\\output\r\n> ```\r\n",
        "createdAt": "2020-06-26T19:54:30Z",
        "author": {
          "login": "RichardsonWTR"
        }
      }
    ]
  }
}