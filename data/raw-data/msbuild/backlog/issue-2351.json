{
  "number": 2351,
  "title": "MSB1003 when *nix system has a /m file or directory",
  "body": "_From @svick on July 23, 2017 8:37_\n\nI'm trying to use the portable Linux release of .Net Core SDK 2.0 Preview 2 on a Gentoo machine and I'm getting some strange behavior from msbuild, which means I can't run `dotnet restore`.\r\n\r\nWhat I did:\r\n\r\n```bash\r\n~$ cat /etc/*-release\r\nGentoo Base System release 2.3\r\nDISTRIB_ID=\"Gentoo\"\r\nNAME=Gentoo\r\nID=gentoo\r\nPRETTY_NAME=\"Gentoo/Linux\"\r\nANSI_COLOR=\"1;32\"\r\nHOME_URL=\"https://www.gentoo.org/\"\r\nSUPPORT_URL=\"https://www.gentoo.org/support/\"\r\nBUG_REPORT_URL=\"https://bugs.gentoo.org/\"\r\n~$ mkdir dotnet\r\n~$ cd dotnet\r\n~/dotnet$ curl -sSL -o dotnet.tar.gz https://aka.ms/dotnet-sdk-2.0.0-preview2-linux-x64-bin\r\n~/dotnet$ tar xf dotnet.tar.gz\r\n~/dotnet$ PATH=$PATH:$HOME/dotnet\r\n~/dotnet$ cd ..\r\n~$ mkdir hwapp\r\n~$ cd hwapp\r\n~/hwapp$ dotnet new console\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /afs/ms.mff.cuni.cz/u/o/ondep7am/hwapp/hwapp.csproj...\r\nMSBUILD : error MSB1008: Only one project can be specified.\r\nSwitch: /afs/ms.mff.cuni.cz/u/o/ondep7am/hwapp/hwapp.csproj\r\n\r\nFor switch syntax, type \"MSBuild /help\"\r\n\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n\r\n~/hwapp$ ls\r\nProgram.cs  hwapp.csproj\r\n~/hwapp$ dotnet restore\r\nMSBUILD : error MSB1003: Specify a project or solution file. The current working directory does not contain a project or solution file.\r\n~/hwapp$ dotnet restore hwapp.csproj\r\nMSBUILD : error MSB1008: Only one project can be specified.\r\nSwitch: hwapp.csproj\r\n\r\nFor switch syntax, type \"MSBuild /help\"\r\n```\r\n\r\nIf I follow the same steps on a brand new AWS Gentoo VM, it works fine. So it looks like an issue specific to that machine, not to Gentoo in general.\r\n\r\nWhat can I do to analyze this issue further?\n\n_Copied from original issue: dotnet/cli#7227_",
  "state": "CLOSED",
  "createdAt": "2017-07-25T15:49:07Z",
  "updatedAt": "2024-10-04T16:20:11Z",
  "closedAt": "2019-04-18T16:46:39Z",
  "author": {
    "login": "rainersigwald"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.6"
  },
  "comments": {
    "nodes": [
      {
        "body": "_From @livarcocc on July 23, 2017 22:39_\n\nCan you do a dotnet restore /v:diag > log.txt and share the log.txt file?\r\n\r\ncc @rainersigwald ",
        "createdAt": "2017-07-25T15:49:08Z",
        "updatedAt": "2017-07-25T15:49:08Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "_From @svick on July 23, 2017 22:43_\n\n@livarcocc That doesn't give any additional information:\r\n\r\n```bash\r\n~/hwapp$ dotnet restore /v:diag\r\nMSBUILD : error MSB1003: Specify a project or solution file. The current working directory does not contain a project or solution file.\r\n```",
        "createdAt": "2017-07-25T15:49:08Z",
        "updatedAt": "2017-07-25T15:49:08Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "_From @livarcocc on July 24, 2017 4:46_\n\n@rainersigwald Any ideas how to debug this or what might be going on here?",
        "createdAt": "2017-07-25T15:49:09Z",
        "updatedAt": "2017-07-25T15:49:09Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I haven't seen anything like this before, unfortunately. If I could reproduce it locally I'd probably try debugging or making private MSBuild bits that spewed more information. But since this is on Linux I bet we can use [wizardry](https://jvns.ca/zines/#strace-zine) instead.\r\n\r\n@svick Could you share an `strace` of the failure? I think\r\n\r\n```sh\r\nstrace -f -o missing_project_file dotnet restore\r\n```\r\n\r\nShould do the trick. Then zip and upload `missing_project_file*`, please.",
        "createdAt": "2017-07-25T15:49:09Z",
        "updatedAt": "2017-07-25T15:49:09Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "_From @svick on July 25, 2017 15:15_\n\n@rainersigwald That command produced only one file: [missing_project_file.zip](https://github.com/dotnet/cli/files/1173834/missing_project_file.zip)\r\n",
        "createdAt": "2017-07-25T15:49:10Z",
        "updatedAt": "2017-07-25T15:49:10Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks!\r\n\r\nI think line 14175 is the problem:\r\n\r\n```\r\n6713  stat(\"/m\", {st_mode=S_IFDIR|0755, st_size=60, ...}) = 0\r\n```\r\n\r\n@svick do you have a directory at the root level named `m`? That is, does `/m` exist on this machine?",
        "createdAt": "2017-07-25T15:49:10Z",
        "updatedAt": "2017-07-25T15:49:10Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "_From @svick on July 25, 2017 15:43_\n\n> @svick do you have a directory at the root level named m? That is, does /m exist on this machine?\r\n\r\nYes, `/m` does exist. It's a symlink to `/run/am`. It's not my machine, so I don't know what is the reason for that.\r\n\r\n Why would that be a problem?",
        "createdAt": "2017-07-25T15:49:11Z",
        "updatedAt": "2017-07-25T15:49:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "It's confusing the MSBuild command line parser into thinking that you're specifying `/m` as the project to build, rather than telling msbuild to build in multiprocess mode.\r\n\r\nWe should do better. I'm going to copy this bug over to MSBuild.",
        "createdAt": "2017-07-25T15:49:11Z",
        "updatedAt": "2017-07-25T15:49:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The problem comes down to [this line](https://github.com/Microsoft/msbuild/blob/073abdb45a78365f310b4b5af13796d63d0cdd60/src/MSBuild/XMake.cs#L1428):\r\n\r\n```c#\r\nif (!unquotedCommandLineArg.StartsWith(\"-\", StringComparison.Ordinal) && (!unquotedCommandLineArg.StartsWith(\"/\", StringComparison.Ordinal) || FileUtilities.LooksLikeUnixFilePath(unquotedCommandLineArg)))\r\n```\r\n\r\nThat decides that `/m` looks like a path so it must be a project argument.\r\n\r\nWe should special case `/m`. It would prevent building a project named `/m`, but that violates convention (doesn't match `*proj`) and should be very rare, compared to merely _having_ a `/m` directory or file.",
        "createdAt": "2017-07-25T16:04:21Z",
        "updatedAt": "2017-07-25T16:04:21Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald I take it there are no other switches that could reasonably exist in `/`? For example, as far as I can tell, `/v:m` and `/NoLogo` also have this issue, but I wouldn't expect anyone to have files or directories with those names in `/`.",
        "createdAt": "2017-07-25T19:37:19Z",
        "updatedAt": "2017-07-25T19:37:19Z",
        "author": {
          "login": "svick"
        }
      },
      {
        "body": "It could happen with an arbitrary MSBuild switch.\r\n\r\n@jeffkl proposed attempting to parse every argument as an MSBuild switch, then falling back to path specifications, which seems to make sense (but may be easier said than done).\r\n\r\n`/m` and `/v:m` are special because they're [hardcoded into the CLI](https://github.com/dotnet/cli/blob/93a4ae7f351160ae93030e2446d32117c85f5515/src/Microsoft.DotNet.Cli.Utils/MSBuildForwardingAppWithoutLogging.cs#L32), so a user can't work around their existence with `-`-prefixed arguments.",
        "createdAt": "2017-07-25T19:44:38Z",
        "updatedAt": "2017-07-25T19:44:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Just ran into this issue myself after pulling my hair out. It works on one machine, but not the other?! Can't get any information from /v:diag. Can't get any information from /fl:whatever. What the heck is going on? COREHOST_TRACE=1 (with 'dotnet build') to look at command line arguments -- seems sane. Finally, after digging through 'strace -f dotnet build' did I have the right keywords to land me at this bug report.\r\n\r\nFor what it's worth, the machine I'm looking at has an /m directory. It is not my machine. This was with .NET Core 2.0.3.",
        "createdAt": "2017-12-18T19:25:45Z",
        "updatedAt": "2017-12-18T19:33:33Z",
        "author": {
          "login": "Imisnew2"
        }
      },
      {
        "body": "Here the same. Please fix this bug!!! Thank you.",
        "createdAt": "2018-03-02T11:29:28Z",
        "updatedAt": "2018-03-02T11:29:28Z",
        "author": {
          "login": "Ka-Mau"
        }
      },
      {
        "body": "`mkdir /m`\r\n`mkdir /restore`\r\n`mkdir /v:m`\r\n`mkdir /fl:whatever`\r\n`mkdir /p:Configuration=Release`\r\n\r\nall create directories at system root on Unix and can break msbuild thereafter. We probably don't want .NET Core docs telling the user to not have directories with those names because it will break msbuild.\r\n\r\nMaybe have a breaking change and introduce Unix-y arguments, for full name: `--switch`, for alias: `-a`.",
        "createdAt": "2018-03-11T10:01:31Z",
        "updatedAt": "2018-03-11T10:01:31Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "All of the switch-based arguments should work on *nix, maybe a more compatible change would be to move to `-m -v:m -flp:xyz -p:Foo=Bar` in at least the CLI and then maybe in documentation (docs for the c# compiler have changed to switches already) ",
        "createdAt": "2018-03-12T12:09:40Z",
        "updatedAt": "2018-03-12T12:09:40Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "https://github.com/dotnet/cli/pull/8969 switched the CLI to use dash arguments everywhere, and if you're adding an argument explicitly, you can use the dash form, so I'm going to close this.",
        "createdAt": "2019-04-18T16:46:38Z",
        "updatedAt": "2019-04-18T16:46:38Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}