{
  "number": 7522,
  "title": "How can I parse `PackageReference` from many `ItemGroup`?",
  "body": "I'm using `Microsoft.Build` on version `17.1.0` as a library inside a .NET 6 simple application. My main goal is to have the attributes of `PackageReference` (`Include` and `Version`) starting at `ProjectRootElement.Open(path)`, but when I loop thou the `ItemGroups`, I'm not able to find any other attribute than `Version`:\r\n\r\n```csharp\r\nproject.ItemGroups\r\n    .SelectMany(rootElement => rootElement.Items)\r\n    .Where(itemElement => itemElement.ElementName == \"PackageReference\")\r\n    .ToList()\r\n    .ForEach(item =>\r\n    {\r\n        var metadata = item.Metadata.ToList();\r\n        metadata.ForEach(d =>\r\n        {\r\n            Console.WriteLine($\"{d.Name}: {d.Value}\");\r\n        });\r\n    });\r\n```\r\n\r\nIf these questions do not fit here, please bring me some direction.\r\n\r\nMany thanks for considering my request.\r\n\r\nInformation about my runtime:\r\n- .NET SDK: 6.0.201 (commit `ef40e6aa06`);\r\n- OS Name: Mac OS X;\r\n- OS Version:  12.2;\r\n- OS Platform: Darwin;\r\n- RID: osx.12-arm64.",
  "state": "CLOSED",
  "createdAt": "2022-04-06T16:07:08Z",
  "updatedAt": "2022-04-06T16:18:59Z",
  "closedAt": "2022-04-06T16:18:58Z",
  "author": {
    "login": "6a6f6a6f"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Are you wanting to do this _as XML_, or _as MSBuild objects_? The latter is preferred, but requires you to think more about the actual item type. Specifically, the `Include` is _expressed in XML as an attribute_, but becomes something more fundamental to the MSBuild type--it's not metadata because it's special and it's available in [`ProjectItemElement.Include`](https://docs.microsoft.com/dotnet/api/microsoft.build.construction.projectitemelement.include?view=msbuild-17-netcore#microsoft-build-construction-projectitemelement-include). `Exclude` and `Remove` are also special.\r\n\r\nWhat specific problem are you trying to solve? There may be a better way to go about it.",
        "createdAt": "2022-04-06T16:18:48Z",
        "updatedAt": "2022-04-06T16:18:48Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}