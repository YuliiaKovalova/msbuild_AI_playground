{
  "number": 9889,
  "title": "[Built-in analyzer] MSBuild task with BuildInParallel is batched",
  "body": "### Background\r\n\r\nThis issue tracks one of the BuildCheck analyzers we would like to ship in-box with MSBuild.\r\n\r\n### Goal\r\n\r\nImplement an analyzer with the following rule: The `MSBuild` task is not executed [batched](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-batching#task-batching) when the `BuildInParallel` parameter is true.\r\n\r\n### Notes\r\n\r\nThe intention of `BuildInParallel = true` is to run child builds in parallel. Batching the task, on the other hand, makes it run in a loop, one invocation at a time, which is likely not desired.",
  "state": "OPEN",
  "createdAt": "2024-03-18T13:27:24Z",
  "updatedAt": "2024-12-17T15:55:05Z",
  "closedAt": null,
  "author": {
    "login": "ladipro"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Area: Performance",
    "BuildCheck Suggestion",
    "triaged",
    "Area: BuildCheck"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Note that this will have to allow _some_ batching, for instance the way RPR does it today (it batches in such a way that each batch could have multiple items in it). The ideal catch would be \"the computed batches are one per item\" or something. That is, batching on `%(Foo.Identity)` is bad but other metadata _may_ be ok.",
        "createdAt": "2024-03-18T13:54:34Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I think the first step here is understanding cases in the wild where this would be a \"true positive\". There are more heuristics involved than I would normally like to see for a deterministic analyzer, so if the number of actual cases where it matters are uncommon, perhaps it would be best to defer this rule?",
        "createdAt": "2024-03-20T22:10:04Z",
        "author": {
          "login": "sharwell"
        }
      },
      {
        "body": "I would ask a generalize feature.  Add feature for task author indicate and error when the Task is batched into two more instances.  In C++ case, Link task should have one call.  But sometimes, due to bad target authoring with metadata, it is divided and it is hard to detect.\r\n\r\nThis could also apply to CSC too.",
        "createdAt": "2024-03-22T19:13:58Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "> In C++ case, Link task should have one call.\n\nDon't you need a Link call for each language when building [MUI](https://learn.microsoft.com/en-us/windows/win32/intl/multilingual-user-interface) resource DLLs?",
        "createdAt": "2024-03-23T09:06:56Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "C++ Resource tooling would have a separate project for resource dll, then use MSBuild project batching to call each one with a different property for language. ",
        "createdAt": "2024-03-25T19:16:17Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "related: we should flag when a single item + batching is used (i.e. in this [per-TFM-walking Target](https://github.com/NuGet/NuGet.Client/blob/c8dccb71268e12579d32b3d5a2f1a26ef892c9c1/src/NuGet.Core/NuGet.Build.Tasks.Pack/NuGet.Build.Tasks.Pack.targets#L352-L419)). The suggestion here should be to move to precomputing the item lists and parallelizing.",
        "createdAt": "2024-09-09T19:54:34Z",
        "author": {
          "login": "baronfel"
        }
      }
    ]
  }
}