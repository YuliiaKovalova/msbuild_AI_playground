{
  "number": 5472,
  "title": "Please add `$(MSBuildThisFile)` implicitly to any Target's `Inputs=\"\"`",
  "body": "### Steps to reproduce\r\n\r\nIn the sample here, I restore NPM based on the filetime of the `.msbuild` file in the `node_modules` folder.  However, if I add additional authentication logic to the target, the target is not re-run.\r\n\r\nProject file\r\n```xml\r\n<Project DefaultTargets=\"...\">\r\n  ...\r\n  <Target Name=\"NpmRestore\" DependsOnTargets=\"EnsureNpm\" Inputs=\"package.json\" Outputs=\"node_modules\\.msbuild\">\r\n    <!-- A change made here, (e.g. to enable certain authentication mechanisms) would not be automatically picked up. -->\r\n    <Exec Command=\"$(NpmCommand) install\" IgnoreStandardErrorWarningFormat=\"true\" />\r\n    <Touch Files=\"node_modules\\.msbuild\" AlwaysCreate=\"true\" />\r\n  </Target>\r\n  ...\r\n</Project>\r\n```\r\n\r\nDirectory contents:\r\n```\r\n/\r\n- package.json\r\n- package-lock.json\r\n- msbuildthistarget.targets\r\n- node_modules/\r\n     - .msbuild\r\n     - wow... uh... 300mb that I don't want to log here.\r\n```\r\n\r\nCommand line\r\n```\r\nmsbuild\r\n```\r\n### Expected behavior\r\n\r\nAfter changing the `msbuildthistarget.targets` file, the `NpmRestore` target would be executed.\r\n\r\n### Actual behavior\r\n\r\nIncremental build detects that no inputs have changed.  When the literal text of the target or the context has changed, the target should be re-run.  If that's too complicated, $(MSBuildThisFile) would be--generally--an efficient stand-in.\r\n\r\n### Environment data\r\n`msbuild /version` output: (all versions)\r\n\r\nOS info: Windows 10\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\ncmd.exe\r\n",
  "state": "CLOSED",
  "createdAt": "2020-07-01T03:00:31Z",
  "updatedAt": "2024-02-21T17:03:15Z",
  "closedAt": "2020-07-29T16:20:16Z",
  "author": {
    "login": "otac0n"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This, in fact, has better incremental behavior than a simple rebuild, and also follows the \"principle of least surprise\" in my opinion.",
        "createdAt": "2020-07-01T03:02:39Z",
        "updatedAt": "2020-07-01T03:02:53Z",
        "author": {
          "login": "otac0n"
        }
      },
      {
        "body": "You can always do this yourself. In fact, you should consider using `$(MSBuildAllProjects)`, instead of `$(MSBuildThisFile)`, so that you pick up changes made in imported files like `Directory.Build.targets`.\r\n\r\nThe engine could do it, but that would be fairly inefficient--for instance, a change you made to your target would cause all other targets to rerun, regardless of whether _their_ inputs changed.\r\n\r\nThis is a weakness of the MSBuild incrementality model. The overall issue for that is #2470.",
        "createdAt": "2020-07-01T15:47:34Z",
        "updatedAt": "2020-07-01T15:47:34Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}