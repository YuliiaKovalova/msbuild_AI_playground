{
  "number": 5316,
  "title": "Consider logging ProjectStarted more sparingly",
  "body": "ProjectStartedEventArgs is usually very heavyweight, with GlobalProperties, Properties and Items.\r\n\r\nFor a 130 MB binlog you get 6844 events totalling ~0.5 GB, where the most massive event starts around 5 MB, with 29 GlobalProperties (including CurrentSolutionConfigurationContents of 40 KB), 8517 items (most with tons of metadata) and 1289 properties.\r\n\r\nWe see projects being called multiple times with the same properties and items. Maybe if those are immutable collections we should see if we've logged this exact snapshot before, and if yes, avoid logging it again? Feels like something along these lines is already in place, since some projects don't get properties and items logged already (and I don't understand when they are or are not logged).\r\n\r\nBasically worth looking into. ProjectStarted is the second most heavy of all args types, topped only by BuildMessage totalling ~ 1 GB.",
  "state": "CLOSED",
  "createdAt": "2020-04-26T04:42:58Z",
  "updatedAt": "2024-02-21T17:04:02Z",
  "closedAt": "2021-04-02T16:52:21Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "Area: Logging",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      },
      {
        "login": "mmitche"
      }
    ]
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "From @mmitche:\r\n\r\n```\r\nhere's a thought on something i noticed. In that huge log there are a TON of project started nodes, with a ton of total properties and itemgroups that get logged. But in quite a few cases, the target that is being invoked doesn't actually exist...\r\n \r\nShould msbuild just be skipping the logging?\r\n```",
        "createdAt": "2020-05-06T19:15:47Z",
        "updatedAt": "2020-05-06T19:15:47Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "See related: https://github.com/microsoft/msbuild/issues/3616",
        "createdAt": "2020-05-12T21:00:35Z",
        "updatedAt": "2020-05-12T21:00:35Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I think I have an idea of how to deduplicate these.\r\n\r\n1. in the BinaryLogger, when we are about to write a list of properties, or a list of items, we first hash. If we saw the hash before, just write a stub with the hash. Otherwise add the hash to the global hashset and write out the full thing, including the hash.\r\n2. in the viewer, when we read a property list or item list, we see if it's a hash or a full thing. If it's the full thing, read it and associate the hash with this list, otherwise we must have seen it before so just retrieve from the cache.\r\n\r\nWe can do it for a list of properties and a list of items.",
        "createdAt": "2020-05-12T21:05:32Z",
        "updatedAt": "2020-05-12T21:05:32Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@mmitche suggests it would be even better if we didn't send the duplicate properties and items across nodes at all. This would cut down on the chattiness for all loggers.",
        "createdAt": "2020-05-12T21:13:42Z",
        "updatedAt": "2020-05-12T21:13:42Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "My experiments indicate that only about 10% of the overall project invocations have unique input item + property sets. Overall these properties are gigantic (e.g. aspnetcore had about 3 gigs of data) so the wins could be significant.",
        "createdAt": "2020-05-12T21:24:42Z",
        "updatedAt": "2020-05-12T21:24:42Z",
        "author": {
          "login": "mmitche"
        }
      },
      {
        "body": "Avoid logging ProjectStarted items and properties if the target doesn't exist or is empty",
        "createdAt": "2020-06-01T21:05:10Z",
        "updatedAt": "2020-06-01T21:05:10Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "I think we should log properties and items at the ProjectEvaluationFinished, not at ProjectStarted. This way they will be logged only once if multiple projects start with the same evaluation. This will reduce the amount of data we log that has to flow through the logging system.\r\n\r\nAnd we can make an escape hatch to only turn on the new mode for BinaryLogger.",
        "createdAt": "2021-01-12T00:41:11Z",
        "updatedAt": "2021-01-12T00:41:11Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "What I've learned is that properties and items on ProjectStartedEventArgs aren't sent across nodes at all. This explains why only some projects have properties and items - they were built on the in-proc node.\r\n\r\nSee here:\r\nhttps://github.com/dotnet/msbuild/blob/f98579d50f8b08c4efe13ca07327e3e5222b50f8/src/Framework/ProjectStartedEventArgs.cs#L303-L310",
        "createdAt": "2021-02-14T02:59:45Z",
        "updatedAt": "2021-02-14T02:59:45Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "LoggingService.SerializeAllProperties is interesting",
        "createdAt": "2021-02-27T05:28:03Z",
        "updatedAt": "2021-02-27T05:28:03Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "MSBUILDFORWARDALLPROPERTIESFROMCHILD if set to one will enable sending all properties from nodes to central node (but not items since there's no logic to serialize items in WriteToStream)",
        "createdAt": "2021-02-28T02:30:14Z",
        "updatedAt": "2021-02-28T02:30:14Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "_buildParameters.LogInitialPropertiesAndItems is equivalent",
        "createdAt": "2021-02-28T02:30:50Z",
        "updatedAt": "2021-02-28T02:30:50Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "LoggingNodeConfiguration.LogTaskInputs is a place where it feels appropriate to configure whether to send properties and items on ProjectEvaluationFinished instead of ProjectStarted",
        "createdAt": "2021-02-28T02:33:20Z",
        "updatedAt": "2021-02-28T02:33:20Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Yes looks like LoggingNodeConfiguration is the proper way to tell the node what to do. Setting a Trait from BinaryLogger will only impact the central node.",
        "createdAt": "2021-02-28T02:34:38Z",
        "updatedAt": "2021-02-28T02:34:38Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}