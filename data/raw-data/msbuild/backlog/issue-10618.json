{
  "number": 10618,
  "title": "Inconsistent BuildCheck warnings promotability to errors",
  "body": "### Context\r\n\r\n`MSBuildTreatWarningsAsErrors` and `MSBuildWarningsAsErrors` seem to apply only to BuildCheck diagnostics produced by the 'in-node' check (BC0201-BC0203). The behavior should be consistent and ideally apply to all Checks - built-in and custom.\r\n\r\n### Sample case\r\n\r\nCase showing some diagnostics are promoted while some are not:\r\n\r\n![image](https://github.com/user-attachments/assets/c3fb1764-79a4-472b-9606-cffa7df2d289)\r\n\r\n\r\n### Repro\r\n\r\ncsproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n\t  <OutputType>Library</OutputType>\r\n\t  <TargetFramework>net8.0</TargetFramework>\r\n\t  <IsPackable>true</IsPackable>\r\n\t  <NoWarn>NU1701</NoWarn>\r\n          <DummyProp>xyz</DummyProp>\r\n\t  <PackageVersion>$(CalculatorVersion)</PackageVersion>\r\n\t  <PackageId>DotUtils.Calculator</PackageId>\r\n\t  <MSBuildTreatWarningsAsErrors>true</MSBuildTreatWarningsAsErrors>\r\n\t  <MSBuildWarningsAsErrors>BC0103</MSBuildWarningsAsErrors>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n.editorconfig:\r\n\r\n```\r\nroot = true\r\n\r\n# Buildcheck rules\r\n[*.csproj]\r\nbuild_check.BC0103.severity=warning\r\nbuild_check.BC0203.severity=warning\r\n```\r\n\r\nRun:\r\n * `$env:CalculatorVersion=1.2.3`\r\n * `dotnet build /check`\r\n\r\n**Expected:** All Diagnostics are promoted to errors (as per `MSBuildTreatWarningsAsErrors`)\r\n**Observed:** `BC0103` remains as warning\r\n\r\n### Notes\r\n * The investigation and fix should apply to custom checks as well\r\n * We should add testcases into our e2e tests - where we use `MSBuildTreatWarningsAsErrors` and verify it works properly. The e2e tests might be easier way of investigating the case for custom checks.\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2024-09-04T08:02:58Z",
  "updatedAt": "2024-09-29T12:56:34Z",
  "closedAt": "2024-09-16T19:46:06Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "Priority:1",
    "triaged",
    "Area: BuildCheck"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "team triage: let's investigate the reason then decide",
        "createdAt": "2024-09-04T14:10:30Z",
        "updatedAt": "2024-09-04T14:10:30Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "One cause is in skipping the check for events that don't have ProjectInstanceId set to invalid values:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/3b9f2e9569db38b34a36154f73e2aaef2f89c796/src/Build/BackEnd/Components/Logging/LoggingService.cs#L1967\r\n\r\nBut that is what happens for Evaluation time events (more details: https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md#meaning-of-various-ids-in-the-buildeventargs)\r\n\r\nSo if the warning is emited during eval - it will skip here",
        "createdAt": "2024-09-12T14:21:57Z",
        "updatedAt": "2024-09-12T14:21:57Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "And more fundametely - it's one of the problems from the huge bucket of 'we need information from evaluation in order to process something earlier in the evaluation for BuildChecks'.",
        "createdAt": "2024-09-12T14:35:41Z",
        "updatedAt": "2024-09-12T14:35:41Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "And it's even more intricate than that - the noWarn/WarnAsError/TreatWarnings as errors are being done during logging in the node that build the project, it's already not set in the main node. But majority of our Checks run in the main node.\n\nWe'll need to set it in the main node as well ",
        "createdAt": "2024-09-13T17:06:37Z",
        "updatedAt": "2024-09-13T17:06:37Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Initial version of deferring: https://github.com/dotnet/msbuild/compare/main...proto/buildcheck-warns-promotability\n\nThe setting of warn to error etc. in the main node will need to be added as well",
        "createdAt": "2024-09-13T17:08:27Z",
        "updatedAt": "2024-09-13T17:08:27Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}