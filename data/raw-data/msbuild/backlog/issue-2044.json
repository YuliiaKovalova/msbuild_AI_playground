{
  "number": 2044,
  "title": "Potential perf optimisations in CompositeGlob",
  "body": "[CompositeGlob](https://github.com/Microsoft/msbuild/blob/master/src/Build/Globbing/CompositeGlob.cs) could have the following potential improvements:\r\n\r\n- Collapse recursive tree to leaves to reduce object count. For example, `CompositeGlob(GlobA, CompositeGlob(GlobB, GlobC))` could be internally rewritten to `CompositeGlob(GlobA, GlobB, GlobC)`. This is doable as long as all Composites in one subtree are the same.\r\n- Merge regular expressions: `CompositeGlob(GlobA, GlobB, GlobC)` could be rewritten to `GlobMerged`, where `GlobMerged`'s regex is the merger of the `GlobA`, `GlobB`, `GlobC ` regexes: `(GlobA.Regex)|(GlobBRegex)|(GlobC.Regex)`. Preliminary tests indicate this is faster by 1-2 orders of magnitude for less than ~50 regexes, but after ~100 regexes it gets exponentially slower.",
  "state": "OPEN",
  "createdAt": "2017-05-02T18:29:28Z",
  "updatedAt": "2024-02-21T16:36:53Z",
  "closedAt": null,
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "backlog",
    "Feature - Globbing",
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}