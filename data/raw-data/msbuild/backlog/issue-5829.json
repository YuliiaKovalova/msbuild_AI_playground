{
  "number": 5829,
  "title": "How to copy metadata attributes from PackageReference to corresponding ReferencePath?",
  "body": "There are `PackageReference` items with some metadata attributes. And there are corresponding `ReferencePath` items.\r\nI need to move those metadata attributes from source `PackageReference` items to corresponding `ReferencePath` items.\r\n\r\nMSBuild do it for `ProjectReference` but doesn't for `PackageReference`.\r\nI'm not sure is it bug or by design. So, I have described it here https://github.com/dotnet/msbuild/issues/5809#issue-724350443",
  "state": "CLOSED",
  "createdAt": "2020-10-22T22:40:30Z",
  "updatedAt": "2020-11-10T00:13:46Z",
  "closedAt": "2020-11-10T00:13:45Z",
  "author": {
    "login": "Denis535"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I did it in the following way:\r\n\r\n    <Target Name=\"CopyMetadataFromPackageReferenceToReferencePath\" Outputs=\"%(PackageReference.Identity)\">\r\n        <PropertyGroup>\r\n            <Local_MyMetadata>%(PackageReference.MyMetadata)</Local_MyMetadata>\r\n            <Local_NugetPackageId>%(PackageReference.Identity)</Local_NugetPackageId>\r\n        </PropertyGroup>\r\n        <ItemGroup Condition=\" $(Local_MyMetadata) != '' \">\r\n            <ReferencePath \r\n                MyMetadata=\"$(Local_MyMetadata)\" \r\n                Condition=\" '%(ReferencePath.NugetPackageId)' == '$(Local_NugetPackageId)' \" />\r\n        </ItemGroup>\r\n    </Target>\r\n\r\nIt works. But it only worked when I've moved/allocated some values into properties. I wonder why?\r\nAlso I'm wondering if there is a better way to do this? Now If I will have many metadata then I will be forced to write ItemGroup for each metadata. So, is it possible to do it better?\r\n",
        "createdAt": "2020-10-22T23:05:34Z",
        "updatedAt": "2020-11-09T23:47:24Z",
        "author": {
          "login": "Denis535"
        }
      },
      {
        "body": "I think the better way is to make new reference items.\r\n\r\n    // get references with MyMetadata == true\r\n    <Target Name=\"MakeReferences_1\" Returns=\"@(MyReferences )\">\r\n        <ItemGroup>\r\n            <MyReferences Include=\"@(ReferencePath -> WithMetadataValue( 'MyMetadata', 'true' ))\" />\r\n        </ItemGroup>\r\n    </Target>\r\n    \r\n    // get references which are pointing on PackageReference with MyMetadata == true\r\n    <Target Name=\"MakeReferences_2\" Outputs=\"%(PackageReference.Identity)\" Returns=\"@(MyReferences )\">\r\n        <PropertyGroup>\r\n            <Local_MyMetadata>%(PackageReference.MyMetadata)</Local_MyMetadata>\r\n            <Local_NuGetPackageId>%(PackageReference.Identity)</Local_NuGetPackageId>\r\n        </PropertyGroup>\r\n        <ItemGroup Condition=\"$(Local_MyMetadata) == 'true'\">\r\n            <MyReferences Include=\"@(ReferencePath -> WithMetadataValue( 'NuGetPackageId', $(Local_NuGetPackageId) ))\" />\r\n        </ItemGroup>\r\n    </Target>\r\n\r\nRelated comment https://github.com/dotnet/msbuild/issues/5847#issuecomment-719945770",
        "createdAt": "2020-11-09T23:44:36Z",
        "updatedAt": "2020-11-10T00:12:16Z",
        "author": {
          "login": "Denis535"
        }
      }
    ]
  }
}