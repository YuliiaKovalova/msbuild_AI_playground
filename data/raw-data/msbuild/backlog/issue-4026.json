{
  "number": 4026,
  "title": "Invalid static method invocation [Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToStandardLibraries",
  "body": "@rainersigwald Same issue when loading a .csproj using MSBuildWorkspace. It was working when i had only VS2015 installed, but since I installed vs2017, I get this error : -- ERROR: Msbuild failed when processing the file 'D:\\DCGF_KillCA\\Externals\\XRoslyn\\MyTypes\\MyTypes.csproj' with message: Invalid static method invocation syntax: \"[Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToStandardLibraries($(TargetFrameworkIdentifier), $(TargetFrameworkVersion), $(TargetFrameworkProfile), $(PlatformTarget), $(TargetFrameworkRootPath), $(TargetFrameworkFallbackSearchPaths))\". M\u00e9thode 'Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries' introuvable. Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(a, b)). C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets\r\n\r\nPreviously, I assume it was doing stuff in C:\\Program Files (x86)\\Microsoft Visual Studio\\2015.... and it was working\r\n\r\nThe code :\r\n     var lBuildConfiguration = new Dictionary<string, string>\r\n     {\r\n     { \"Configuration\", \"Release\" }, // Or \"Debug\", or whatever is known to your projects.\r\n     { \"Platform\", \"x86\" }, // Or x64, AnyCPU, etc...\r\n     { \"CheckForSystemRuntimeDependency\", \"true\" }\r\n     // ... more properties that could influence a build\r\n      };\r\n\r\n        this.mWork = MSBuildWorkspace.Create( lBuildConfiguration );\r\n        this.mWork.LoadMetadataForReferencedProjects = true;\r\n        this.mWork.SkipUnrecognizedProjects = false;\r\n        // Load the project straight.\r\n         this.mProject = this.mWork.OpenProjectAsync( pProjectPath ).Result;\r\n\r\nCan we force a MSbuild version in config strings?\r\n\r\nI suspecte when trying to load a csproj (inducing there is no solution at open time) MSbuildWorkspace create a default one to load my csproj in it. In the case there was only VS2015, the default solution created was VS2015, but now there is vs2017, the default solution MSbuildWorkspace is creating is a VS2017 temp sln which attempt to load a csproj vs2015 formatted that obviously mismatches in matter of (MSBuildExtensionsPath)$(MSBuildToolsVersion) or whatever...",
  "state": "CLOSED",
  "createdAt": "2018-12-21T08:57:02Z",
  "updatedAt": "2024-02-21T17:09:58Z",
  "closedAt": "2019-08-14T14:10:15Z",
  "author": {
    "login": "jlarbi"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "The bad project loading stuff make nothing compiled on this call. Previously working but now no syntaxtree in my compilation object.\r\n\r\nthis.mProject.GetCompilationAsync().Result;",
        "createdAt": "2018-12-21T09:31:30Z",
        "updatedAt": "2018-12-21T09:46:07Z",
        "author": {
          "login": "jlarbi"
        }
      },
      {
        "body": "This sounds like a problem that can be resolved by [using MSBuildLocator](https://docs.microsoft.com/en-us/visualstudio/msbuild/updating-an-existing-application?view=vs-2019).\r\n\r\nSince we let this issue get very stale, I'm going to close it. Please let us know if you see the problem after using Locator and we can reopen and investigate further.",
        "createdAt": "2019-08-14T14:10:15Z",
        "updatedAt": "2019-08-14T14:10:15Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}