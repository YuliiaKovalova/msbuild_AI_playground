{
  "number": 2080,
  "title": "Properties set in targets from referenced packages not always propagated",
  "body": "I've found that if I have a project that references a package with build targets or prop files then if those files contain versioning-related properties then the values set are not available in the importing project.\r\n\r\nFor instance if I have a package called Versioner that contains this Versioning.props file:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n    <VersionPrefix>1.2.3</VersionPrefix>\r\n    <VersionSuffix>alpha-7</VersionSuffix>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\nthen I package this up into Versioner-0.1.0-alpha1.nupkg and reference it in a project called Versionee.csproj:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard1.4</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Versioner\" Version=\"0.1.0-alpha1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nthen the assembly produced for this project by `dotnet build` is versioned as `1.0.0` as is the package produced by `dotnet pack`. If, however, I directly import the props file using\r\n```xml\r\n<Import Project=\"C:\\Users\\j.hickson\\.nuget\\packages\\versioner\\0.1.0-alpha1\\build\\Versioning.props\" />\r\n```\r\nthen the versioning is as expected - i.e. the assembly is `0.1.0` and the package `0.1.0-alpha1`.\r\n\r\nThis is not a problem for all properties: for instance, setting `GenerateAssemblyVersionAttribute` in the props file is propagated to the referencing project.\r\n\r\nI've attached zipped solutions for Versioner and Versionee. Unfortunately I can't attach the nupkg for Versioner.\r\n[Versionee.zip](https://github.com/Microsoft/msbuild/files/987257/Versionee.zip)\r\n\r\n[Versioner.zip](https://github.com/Microsoft/msbuild/files/987258/Versioner.zip)\r\n\r\n```bash\r\n$ dotnet --info\r\n.NET Command Line Tools (1.0.3)\r\n\r\nProduct Information:\r\n Version:            1.0.3\r\n Commit SHA-1 hash:  37224c9917\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\1.0.3\r\n```\r\n\r\n```bash\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise>msbuild /version\r\nMicrosoft (R) Build Engine version 15.1.1012.6693\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.1.1012.6693\r\n```\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2017-05-09T16:23:31Z",
  "updatedAt": "2024-02-21T17:19:14Z",
  "closedAt": "2017-05-09T19:21:38Z",
  "author": {
    "login": "jhickson"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "After restoring using your package, can you run\r\n\r\n```\r\ndotnet msbuild /pp:preprocessed.xml\r\n```\r\n\r\nTo get the full, expanded version of the project file as MSBuild sees it, and share that?",
        "createdAt": "2017-05-09T16:28:05Z",
        "updatedAt": "2017-05-09T16:28:05Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I've attached it as a text file:\r\n\r\n[preprocessed.txt](https://github.com/Microsoft/msbuild/files/987317/preprocessed.txt)\r\n",
        "createdAt": "2017-05-09T16:34:58Z",
        "updatedAt": "2017-05-09T16:34:58Z",
        "author": {
          "login": "jhickson"
        }
      },
      {
        "body": "I think this is a NuGet issue where by default it excluded build assets on dependencies when you create a package. @emgarten",
        "createdAt": "2017-05-09T16:57:54Z",
        "updatedAt": "2017-05-09T16:57:54Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "Doesn't the auto-imported .props file need to be named `Versioner.props`--matching `packageId`?",
        "createdAt": "2017-05-09T16:58:54Z",
        "updatedAt": "2017-05-09T16:58:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald I wasn't aware that was necessary but in the fuller version of this where I am also getting the issue the props file name does match the package id.\r\n\r\n@dsplaisted The package does contain the props file and is referenced. The fact that I can manually add an import line referencing the props file in its nuget cache location shows that.\r\n\r\nIn the fuller version I have mentioned I also set various properties (to False) such as `GenerateAssemblyVersionAttribute` and those are honoured. So I believe that it is being imported.",
        "createdAt": "2017-05-09T17:55:09Z",
        "updatedAt": "2017-05-09T17:55:09Z",
        "author": {
          "login": "jhickson"
        }
      },
      {
        "body": "Pack uses the output from restore to create the nupkg. This ensures that package created will work the same as the project if they are swapped. Restore excludes package imports to ensure that the 1st and 2nd restores give the same result.\r\n\r\nWe're looking at improving this on the NuGet side since this is a common scenario, but the current behavior is that packages cannot contribute to the identity of a project or package. Ideally packages that set the version of a project would be of a different type since they aren't actual dependencies but helper tools that should get to run first before restore.\r\n\r\nYou can work around this by generating a props file outside of the package and importing that into your projects.",
        "createdAt": "2017-05-09T18:25:40Z",
        "updatedAt": "2017-05-09T18:27:12Z",
        "author": {
          "login": "emgarten"
        }
      },
      {
        "body": "OK, so the version settings are ignored because they would contribute to the importing project's identity but other settings such as the Generate*Attribute ones are not? That would explain it.\r\n\r\nI'm already doing what you mention but was hoping to reduce what the consumer needed to do. \r\n\r\nThanks. Q",
        "createdAt": "2017-05-09T18:40:09Z",
        "updatedAt": "2017-05-09T18:40:09Z",
        "author": {
          "login": "jhickson"
        }
      },
      {
        "body": "Please ignore the trailing Q!",
        "createdAt": "2017-05-09T18:41:09Z",
        "updatedAt": "2017-05-09T18:41:09Z",
        "author": {
          "login": "jhickson"
        }
      },
      {
        "body": "GenerateAttribute would be applied during the build, which is after restore.",
        "createdAt": "2017-05-09T18:46:06Z",
        "updatedAt": "2017-05-09T18:46:06Z",
        "author": {
          "login": "emgarten"
        }
      },
      {
        "body": "OK. By the way, are there any docs for this?",
        "createdAt": "2017-05-09T19:04:51Z",
        "updatedAt": "2017-05-09T19:04:51Z",
        "author": {
          "login": "jhickson"
        }
      },
      {
        "body": "Closing MSBuild issue--but links to docs and the NuGet issues you mentioned would be awesome @emgarten.",
        "createdAt": "2017-05-09T19:21:35Z",
        "updatedAt": "2017-05-09T19:21:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Related to nuget issue: https://github.com/NuGet/Home/issues/4790",
        "createdAt": "2017-05-09T19:37:24Z",
        "updatedAt": "2017-05-09T19:37:24Z",
        "author": {
          "login": "emgarten"
        }
      }
    ]
  }
}