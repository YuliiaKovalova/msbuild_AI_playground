{
  "number": 10671,
  "title": "[Bug]: Setting ProjectMetadataElement.Name has weird behavior",
  "body": "### Issue Description\n\nIf you update `ProjectMetadataElement.Name`, the project does not appear to actually change until some other operation happens which causes the model to rebuild. And once it does update, it appears to add a new metadata and leave the old one in place.\n\n### Steps to Reproduce\n\nProject:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Build\" Version=\"17.11.4\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nProgram.cs:\r\n```cs\r\nusing System.Xml;\r\nusing Microsoft.Build.Construction;\r\n\r\nstring originalProjectContent = \"\"\"\r\n    <Project>\r\n      <ItemGroup>\r\n        <SomeItem Include=\"Foo\" SomeMetadata=\"Value\" />\r\n      </ItemGroup>\r\n    </Project>\r\n    \"\"\";\r\n\r\nConsole.WriteLine(\"Original content:\");\r\nConsole.WriteLine(originalProjectContent);\r\nConsole.WriteLine();\r\n\r\nProjectRootElement project;\r\nusing (XmlReader xmlReader = XmlReader.Create(new StringReader(originalProjectContent)))\r\n{\r\n    project = ProjectRootElement.Create(xmlReader);\r\n}\r\n\r\nProjectItemElement item = project.Items.First();\r\nProjectMetadataElement metadata = item.Metadata.First();\r\n\r\nConsole.WriteLine(\"Changing metadata from 'SomeMetadata' to 'SomeOtherMetadata'\");\r\nConsole.WriteLine();\r\n\r\nmetadata.Name = \"SomeOtherMetadata\";\r\n\r\nConsole.WriteLine(\"Updated content:\");\r\nConsole.WriteLine(project.RawXml);\r\nConsole.WriteLine();\r\n\r\n// Shenanigans\r\nmetadata.ExpressedAsAttribute = !metadata.ExpressedAsAttribute;\r\nmetadata.ExpressedAsAttribute = !metadata.ExpressedAsAttribute;\r\n\r\nConsole.WriteLine(\"Updated content 2:\");\r\nConsole.WriteLine(project.RawXml);\r\nConsole.WriteLine();\r\n```\r\n\r\nOutput:\r\n```\r\n>dotnet run\r\nOriginal content:\r\n<Project>\r\n  <ItemGroup>\r\n    <SomeItem Include=\"Foo\" SomeMetadata=\"Value\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\nChanging metadata from 'SomeMetadata' to 'SomeOtherMetadata'\r\n\r\nUpdated content:\r\n<Project>\r\n  <ItemGroup>\r\n    <SomeItem Include=\"Foo\" SomeMetadata=\"Value\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\nUpdated content 2:\r\n<Project>\r\n  <ItemGroup>\r\n    <SomeItem Include=\"Foo\" SomeMetadata=\"Value\" SomeOtherMetadata=\"Value\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\n\n### Expected Behavior\n\nFor the metadata's name to be updated.\n\n### Actual Behavior\n\nNothing happens at first. And then later a new metadata item is added and the existing one stays in place.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-09-17T15:06:53Z",
  "updatedAt": "2024-10-01T18:10:14Z",
  "closedAt": "2024-10-01T18:10:14Z",
  "author": {
    "login": "dfederm"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}