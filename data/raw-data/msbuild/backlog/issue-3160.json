{
  "number": 3160,
  "title": "Importing files in directories above me",
  "body": "When I'm trying to import a file with a path relative to the file which will add the `<Import>` element I've always felt comfortable using relative paths. For example if I want to import the Directory.Build.props file in the directory above the current file I will do the following:\r\n\r\n``` xml\r\n<Import Project=\"..\\Directory.Build.props\" />\r\n```\r\n\r\nThis functions and hasn't had any negative consequences. At least none that I'm aware of. Yet when I see [MSBuild documentation](https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build) or digging through older build files I often see the following pattern:\r\n\r\n``` xml\r\n<Import Project=\"$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))\" />\r\n```\r\n\r\nThis seems needlessly complex. Yet this is done often enough that it must be for a reason. What scenario is this protecting against that I'm missing with my simple import elements? \r\n",
  "state": "OPEN",
  "createdAt": "2018-04-03T04:06:07Z",
  "updatedAt": "2024-02-21T16:34:22Z",
  "closedAt": null,
  "author": {
    "login": "jaredpar"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Both the `GetPathOfFileAbove` and `GetDirectoryNameOfFileAbove` functions are recursive and keep going up the tree until it finds a file. [Property Functions](https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions)\r\nIf you know that your Directory.Build.props file is in the parent directory, then your explicit releative import is fine, but it means you have to go through your project and change them all if you insert a sub-directory lever and/or (re)move the props file (perhaps to solution level rather than a group level).",
        "createdAt": "2018-04-03T10:29:26Z",
        "updatedAt": "2018-04-03T10:29:26Z",
        "author": {
          "login": "CZEMacLeod"
        }
      }
    ]
  }
}