{
  "number": 7936,
  "title": "TFM trimming, and elimination of net4* targeting in Linux source-build",
  "body": "### Description\r\n\r\nTrim away unneeded TFMs, and conditionalize away non-applicable TFMs for Linux source build.\r\n\r\n**Requires** https://github.com/dotnet/source-build/issues/3013. source-build net4* targeting elimination required https://github.com/dotnet/source-build/issues/2974\r\n\r\nThe purpose of this operation is twofold:\r\n- [ ] Reduce the number of TFMs present overall in .NET's build, potentially improving build time.\r\n- [ ] Eliminate framework TFMs, drastically reducing the size of the source build repository size.\r\n\r\nWhen TFMs other than the latest .NET Core TFM are targeted in source-build, the reference assets for that TFM must be provided via a source build reference package. This is a 'text only' package that is assembled from IL at the beginning of the build to satisfy the required reference assets. In Microsoft's build, these would be restored from the internet, but in source build this is not allowed.\r\n\r\nThese SBRPs are large. All told, the total size contribution for just the netframework 4* TFMs is around 3GB. Not only does this have a significant contribution to the source build repo size, but it also affects build time. For Linux source build, we spend large amounts of time building assets that are simply thrown away at the end.\r\n\r\nAn 'ideal' would be a single TFM used throughout all of the .NET build, source build or otherwise. This is not possible. There are legitimate reasons to target older TFMs, especially netstandard. However, we should be able to justify each additional TFM.\r\n\r\nTo complete this work, repositories will use the tooling provided via https://github.com/dotnet/source-build/issues/2901 to identify the TFMs in use in their repository. For each TFM, they should do the following:\r\n- [ ] If the TFM can be eliminated, or upgraded to latest (e.g. target the latest netcore explicitly, or use net472), do so. netframework TFM removal for tools and internal code is likely low hanging fruit.\r\n- [ ] **Requires https://github.com/dotnet/source-build/issues/2974** If the TFM is a framework TFM, it should be conditionalized out in source build for Linux.\r\n\r\nIt is a goal that the form of this conditionalization remain consistent across projects, and used relatively sparingly. How this conditionalization should be done will be designed in https://github.com/dotnet/source-build/issues/2974. Once that is done, this issue will be updated with implementation details.",
  "state": "CLOSED",
  "createdAt": "2022-09-01T18:36:17Z",
  "updatedAt": "2024-02-21T17:00:08Z",
  "closedAt": "2023-03-13T22:46:41Z",
  "author": {
    "login": "mmitche"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": ".NET 8.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "This is .NET 8 work",
        "createdAt": "2022-09-01T18:36:19Z",
        "updatedAt": "2022-09-01T18:36:19Z",
        "author": {
          "login": "mmitche"
        }
      }
    ]
  }
}