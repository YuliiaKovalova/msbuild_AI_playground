{
  "number": 7474,
  "title": "Add an option to force <Link> to be used when user wants it to be used when file exists within the project structure.",
  "body": "Currently I see no (publicly documented) way of forcing a Included File's ``<Link>`` when it is intended to be forced included in the project despite it living in the project structure.\r\n\r\nA problem I face is something along the lines of:\r\n\r\n- EFCore requires Text Templates under ``CodeTemplates/EFCore`` within the project structure.\r\n- User wants to have the templates \"linked\" to display as if they are located wither their scaffolded efcore code is generated into like so:\r\n```xml\r\n  <ItemGroup>\r\n    <None Update=\"CodeTemplates/EFCore/EntityTypeGenerator.t4\">\r\n      <DependentUpon>DbContextGenerator.t4</DependentUpon>\r\n    </None>\r\n    <None Include=\"Model/DbContextGenerator.t4\">\r\n      <Link>CodeTemplates/EFCore/DbContextGenerator.t4</Link>\r\n      <Visible>true</Visible>\r\n    </None>\r\n    <None Include=\"Model/EntityTypeGenerator.t4\">\r\n      <Link>CodeTemplates/EFCore/EntityTypeGenerator.t4</Link>\r\n      <DependentUpon>DbContextGenerator.t4</DependentUpon>\r\n      <Visible>true</Visible>\r\n    </None>\r\n    <Compile Update=\"Model/BotDbContext.cs\">\r\n      <DependentUpon>DbContextGenerator.t4</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n    </Compile>\r\n    <Compile Update=\"Model/BotDbContext.Methods.cs\">\r\n      <DependentUpon>BotDbContext.cs</DependentUpon>\r\n    </Compile>\r\n    <Compile Update=\"Model/DiscordToken.cs\">\r\n      <DependentUpon>EntityTypeGenerator.t4</DependentUpon>\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n    </Compile>\r\n    <Compile Update=\"Model/ExpiringVerification.cs\">\r\n      <DependentUpon>EntityTypeGenerator.t4</DependentUpon>\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n    </Compile>\r\n    <Compile Update=\"Model/Patron.cs\">\r\n      <DependentUpon>EntityTypeGenerator.t4</DependentUpon>\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n    </Compile>\r\n    <Compile Update=\"Model/Role.cs\">\r\n      <DependentUpon>EntityTypeGenerator.t4</DependentUpon>\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n    </Compile>\r\n    <Compile Update=\"Model/Tier.cs\">\r\n      <DependentUpon>EntityTypeGenerator.t4</DependentUpon>\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n    </Compile>\r\n  </ItemGroup>\r\n```\r\n\r\nWith this logic of the user, it expresses intent that they want others who might clone to codebase to know what files depend on other files (or get generated from them) visually within Visual Studio using the above project xml.\r\n\r\nI even tried ``Visible`` with it not working as expected.",
  "state": "CLOSED",
  "createdAt": "2022-03-17T05:21:19Z",
  "updatedAt": "2022-03-17T19:56:14Z",
  "closedAt": "2022-03-17T19:56:14Z",
  "author": {
    "login": "AraHaan"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Turns out I was swapping doing the links wrong.",
        "createdAt": "2022-03-17T19:56:14Z",
        "updatedAt": "2022-03-17T19:56:14Z",
        "author": {
          "login": "AraHaan"
        }
      }
    ]
  }
}