{
  "number": 1915,
  "title": "Solution-Level Project Dependencies require framework compatibility between projects in metaproj",
  "body": "If you build a VS solution that has project dependencies outside of project references from the command line with MSBuild, the metaproj requires that the two projects have compatible frameworks. Sometimes this is not desirable (i.e. building a tool used to codegen before building projects that use the generated code).  I have \r\n[an example](https://github.com/Microsoft/msbuild/files/873625/MetaProjectSolutionDependencies.zip) that has a .NET Core project that has a Project Dependency on a .NET 4.5 project. It builds successfully in VS, but command line MSBuild fails with the following:\r\n\r\n```\r\n\"C:\\Users\\jkori\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\MetaProjectSolutionDependencies\\MetaProjectSolutionDepen\r\ndencies.sln\" (default target) (1) ->\r\n\"C:\\Users\\jkori\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\MetaProjectSolutionDependencies\\NetCore\\NetCore.csproj.m\r\netaproj\" (default target) (2) ->\r\n\"C:\\Users\\jkori\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\MetaProjectSolutionDependencies\\NetCore\\NetCore.csproj\"\r\n(default target) (4) ->\r\n\"C:\\Users\\jkori\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\MetaProjectSolutionDependencies\\NetFramework\\NetFramewor\r\nk.csproj\" (GetTargetFrameworkProperties target) (3:2) ->\r\n(GetTargetFrameworkProperties target) ->\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Sdk.\r\nCommon.targets(73,5): error : Project 'C:\\Users\\jkori\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\MetaProjectSolutio\r\nnDependencies\\NetFramework\\NetFramework.csproj' targets '.NETFramework,Version=v4.5'. It cannot be referenced by a proj\r\nect that targets '.NETCoreApp,Version=v1.1'. [C:\\Users\\jkori\\OneDrive\\Documents\\Visual Studio 2017\\Projects\\MetaProject\r\nSolutionDependencies\\NetFramework\\NetFramework.csproj]\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```",
  "state": "CLOSED",
  "createdAt": "2017-03-27T19:58:38Z",
  "updatedAt": "2024-02-21T17:20:20Z",
  "closedAt": "2018-05-18T18:01:47Z",
  "author": {
    "login": "jkoritzinsky"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.8"
  },
  "comments": {
    "nodes": [
      {
        "body": "I have the same error",
        "createdAt": "2017-05-13T06:38:23Z",
        "updatedAt": "2017-05-13T06:38:23Z",
        "author": {
          "login": "elbertcastaneda"
        }
      },
      {
        "body": "_From @onovotny_\r\n\r\nThis is with 15.3p2 and the .NET Core 2 preview 1 tooling.\r\n\r\nI have a solution where one project, that targets netstandard1.1 and net45 needs the binary output of a project that has a netcoreapp2.0 and net46 exe (for including in a package). \r\n\r\nThere is no project reference dependency in the csproj. In the solution file, I have a build dependency set instead. The build works fine in VS but fails on the command line if I try to build the solution file:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.0.0-preview1-005977\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Sdk.Common.targets(77,5): e\r\nrror : Project 'C:\\dev\\refit\\InterfaceStubGenerator\\InterfaceStubGenerator.csproj' targets '.NETFramework,Version=v4.6;\r\n.NETCoreApp,Version=v2.0'. It cannot be referenced by a project that targets '.NETStandard,Version=v1.4'. [C:\\dev\\refit\\\r\nInterfaceStubGenerator\\InterfaceStubGenerator.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.0-preview1-005977\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Sdk.Common.targets(77,5): e\r\nrror : Project 'C:\\dev\\refit\\InterfaceStubGenerator\\InterfaceStubGenerator.csproj' targets '.NETFramework,Version=v4.6;\r\n.NETCoreApp,Version=v2.0'. It cannot be referenced by a project that targets '.NETFramework,Version=v4.5'. [C:\\dev\\refit\r\n\\InterfaceStubGenerator\\InterfaceStubGenerator.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.0.0-preview1-005977\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Sdk.targets(94,5): error :\r\nCannot find project info for 'C:\\dev\\refit\\InterfaceStubGenerator\\InterfaceStubGenerator.csproj'. This can indicate a mi\r\nssing project reference. [C:\\dev\\refit\\Refit.Tests\\Refit.Tests.csproj]\r\n    116 Warning(s)\r\n    3 Error(s)\r\n```\r\n\r\nIf I build the csproj files directly, it works. The build system should not be evaluating project TFM compatibility based on solution file build dependencies.\r\n\r\nRepro:\r\nClone https://github.com/paulcbetts/\r\ncheckout branch `netcore2` (commit 9a3ef09bf710eb736ec3c924ec00ba8f569577c0)\r\n\r\nFrom cmd line:\r\n1. msbuild /t:restore .\\Refit.sln\r\n2. msbuild /t:build .\\Refit.sln (fails)\r\n3. git clean -xdf\r\n4. msbuild /t:restore .\\Refit.sln\r\n5. msbuild /t:build .\\Refit\\Refit.csproj (succeeds)\r\n\r\n_Copied from original issue: https://github.com/dotnet/sdk/issues/1343_",
        "createdAt": "2017-06-14T14:11:35Z",
        "updatedAt": "2017-06-14T14:11:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Added a simple repro repository https://github.com/mdekrey/MsbuildProjectDependencyIssue.",
        "createdAt": "2018-01-21T19:50:09Z",
        "updatedAt": "2018-01-21T19:50:09Z",
        "author": {
          "login": "mdekrey"
        }
      },
      {
        "body": "@rainersigwald I suppose this should be fixed with https://github.com/Microsoft/msbuild/pull/2867 ?",
        "createdAt": "2018-01-21T20:07:53Z",
        "updatedAt": "2018-01-21T20:07:53Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Yes, it should be fixed with #2867. Confirmed with @mdekrey's repro.",
        "createdAt": "2018-01-22T16:54:21Z",
        "updatedAt": "2018-01-22T16:54:21Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Since #2867 was reverted, should this be reopened? I'm still blocked with my use-case (dependencies such as JSON API files, etc.), but maybe I don't see how to use [the workaround mentioned.](https://github.com/Microsoft/msbuild/pull/2867#issuecomment-361998280)",
        "createdAt": "2018-05-14T12:00:40Z",
        "updatedAt": "2018-05-14T12:00:40Z",
        "author": {
          "login": "mdekrey"
        }
      },
      {
        "body": "Yeah, we can fix this separately from the general fix for #2661.\r\n\r\n@mdekrey Have you tried [this workaround](https://github.com/Microsoft/msbuild/issues/2661#issuecomment-338808156)? That should work today (and hopefully not cause trouble when a real fix comes in). In your example repro it would go in `MsbuildFrameworkProject.csproj`.",
        "createdAt": "2018-05-14T14:47:05Z",
        "updatedAt": "2018-05-14T14:47:05Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks @rainersigwald - I hadn't seen that specific workaround! It looks like it works like a charm. \r\n\r\n*Edit:* Actually, no, unfortunately it doesn't fix my situation. Specifically, as part of some of those projects, I generate additional outputs (JSON API files) that are used, though the ultimate C# DLLs are not directly used by the \"synthetic\" dependencies. This workaround prevents the reference... but it also ignores the build order. I'll either need this one fixed, or continue using msbuild in a few stages.",
        "createdAt": "2018-05-14T22:43:49Z",
        "updatedAt": "2018-05-14T23:06:41Z",
        "author": {
          "login": "mdekrey"
        }
      },
      {
        "body": "@mdekrey I don't think I understand what went wrong when you tried `AddSyntheticProjectReferencesForSolutionDependencies`.\r\n\r\n> This workaround prevents the reference... but it also ignores the build order. \r\n\r\nThat shouldn't be the case. Can you elaborate, or update your example solution to replicate the problem? ",
        "createdAt": "2018-05-15T18:56:45Z",
        "updatedAt": "2018-05-15T18:56:45Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}