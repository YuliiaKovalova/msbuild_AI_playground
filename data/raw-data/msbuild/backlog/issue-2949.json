{
  "number": 2949,
  "title": "How to copy a folder to output directory and keep its root folder?",
  "body": "Came from https://github.com/dotnet/project-system/issues/3203\r\n\r\nFollowing steps in @rainersigwald's post, files did have been copied to output folder, but the root folder (\"config\\\" itself) can not be copy to output path. For example:\r\n```\r\n// Original\r\nconfig\r\n|--- config.json\r\n|--- config.dev.json\r\n\r\n// After build:\r\noutput\r\n|--- config.json\r\n|--- config.dev.json\r\n\r\n// What I want:\r\noutput\r\n|--- config\r\n          |--- config.json\r\n          |--- config.dev.json\r\n```\r\n Is there any way to keep its root folder too?\r\n\r\nHere's the code snippet:\r\n```xml\r\n<ItemGroup>\r\n  <Folder Include=\"$(SolutionDir)config\\\" CopyToOutputDirectory=\"Always\" />\r\n</ItemGroup>\r\n```",
  "state": "CLOSED",
  "createdAt": "2018-02-02T17:05:43Z",
  "updatedAt": "2024-02-21T17:14:40Z",
  "closedAt": "2018-02-04T06:52:49Z",
  "author": {
    "login": "yhvicey"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "The 2.0 version of the .NET SDK (visual studio 15.4+, .NET CLI 2.0.0+) has a feature that can be used for this: the `LinkBase` metadata:\r\n\r\n```xml\r\n<ItemGroup>\r\n  <None Include=\"$(SolutionDir)config\\**\" \r\n        CopyToOutputDirectory=\"PreserveNewest\"\r\n        LinkBase=\"config\\\" />\r\n</ItemGroup>\r\n``` ",
        "createdAt": "2018-02-03T15:38:25Z",
        "updatedAt": "2018-02-03T15:38:25Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Depending on which project type you have, the `None` items may already exist - e.g. for .net standard and .net core projects (non-web projects, web projects would use `Content` for `.json` files) and you could just update their `CopyToOutputDirectory` metadata:\r\n\r\n```xml\r\n<ItemGroup>\r\n  <None Update=\"$(SolutionDir)config\\**\"  CopyToOutputDirectory=\"PreserveNewest\"  />\r\n</ItemGroup>\r\n```\r\n\r\nIf you need to do this in non-.net standard/core projects (non-\"SDK\" projects), you can use the `Link` metadata:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <Content Include=\"..\\sql\\**\" CopyToPublishDirectory=\"PreserveNewest\" Link=\"sql\\%(RecursiveDir)\\%(Filename)%(Extension)\" />\r\n  </ItemGroup>\r\n```\r\n\r\ne.g. see https://stackoverflow.com/questions/43569821/dotnet-core-publish-include-exclude-dir-in-output/43611163#43611163",
        "createdAt": "2018-02-03T15:45:47Z",
        "updatedAt": "2018-02-03T15:45:47Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "It works. Thank you!",
        "createdAt": "2018-02-04T06:52:47Z",
        "updatedAt": "2018-02-04T06:52:47Z",
        "author": {
          "login": "yhvicey"
        }
      },
      {
        "body": "@dasMulli How can we specify the `target folder path` in the output directory ? Like final it should go in `abc/def` folder under output directory. This is for .net core projects.",
        "createdAt": "2018-08-24T13:03:38Z",
        "updatedAt": "2018-08-24T13:03:47Z",
        "author": {
          "login": "ashishnegi"
        }
      },
      {
        "body": "@ashishnegi if you're using [this code](\r\nhttps://github.com/Microsoft/msbuild/issues/2949#issuecomment-362823310), you can put the target folder into the `LinkBase` metadata attribute.",
        "createdAt": "2018-08-25T08:56:32Z",
        "updatedAt": "2018-08-25T08:56:32Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "I had to change `<None Update` to `<None Include` to make the copy work. ",
        "createdAt": "2018-12-10T11:15:25Z",
        "updatedAt": "2018-12-10T11:15:25Z",
        "author": {
          "login": "ashishnegi"
        }
      },
      {
        "body": "@dasMulli I have following structure:\r\n\r\n```\r\nMyProject.csproj\r\n---Components\r\n------A.dll\r\n------B.dll\r\n---------NestedDir\r\n------------X.dll\r\n------------Y.dll\r\n```\r\n\r\nHow to remove the `Components` directory and put its content to output directory?\r\nUsing [this code](https://github.com/Microsoft/msbuild/issues/2949#issuecomment-362823310) copy `Components` folder into output directory.\r\n\r\nI want this (in output directory):\r\n\r\n```\r\nMyProject.dll\r\n---A.dll\r\n---B.dll\r\n------NestedDir\r\n---------X.dll\r\n---------Y.dll\r\n```",
        "createdAt": "2019-05-15T04:51:48Z",
        "updatedAt": "2019-05-15T04:53:29Z",
        "author": {
          "login": "dehghani-mehdi"
        }
      },
      {
        "body": "Use the same code without `LinkBase` (or set it to `\\`) and add\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <DefaultItemExcludes>$(DefaultItemsExclude);Components\\**\\*</DefaultItemExcludes>\r\n</PropertyGroup>\r\n```\r\n\r\nSo there won't be conflicting items with different copy metadata.",
        "createdAt": "2019-05-15T06:52:51Z",
        "updatedAt": "2019-05-15T06:52:51Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "@dasMulli I got same result. I want to copy `Components`'s content into `Output`. I don't want to copy `Components` folder, just its content.",
        "createdAt": "2019-05-16T05:46:12Z",
        "updatedAt": "2019-05-16T05:46:38Z",
        "author": {
          "login": "dehghani-mehdi"
        }
      },
      {
        "body": "from https://stackoverflow.com/a/35065306/492 \r\n\r\n``` xml\r\n<ContentWithTargetPath Include=\"lib\\some_file.dat\">\r\n  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n  <TargetPath>some_file.dat</TargetPath>\r\n</ContentWithTargetPath>\r\n```\r\n\r\nmay be worth trying with wildcards. I haven't tried it with wildcards, works fine for just one file.",
        "createdAt": "2019-07-23T03:34:00Z",
        "updatedAt": "2019-07-23T03:34:00Z",
        "author": {
          "login": "CADbloke"
        }
      },
      {
        "body": "this worked for me\r\n```xml\r\n    <ContentWithTargetPath \r\n       Include=\"$(MSBuildThisFileDirectory)..\\Files\\*.*\"\r\n       CopyToOutputDirectory=\"PreserveNewest\"\r\n       TargetPath=\"Files\\%(Filename)%(Extension)\" />\r\n```",
        "createdAt": "2019-12-03T02:13:05Z",
        "updatedAt": "2019-12-03T02:13:36Z",
        "author": {
          "login": "SimonCropp"
        }
      },
      {
        "body": "Please note that using ContentWithTargetPath currently breaks incremental builds (As in, it will always build the project, even when nothing has changed). \r\n\r\nIt seems to check the default target path for your file, instead of checking the specified TargetPath, and when the file isn't found at the default path, it concludes that the file is missing and the project must be built again.",
        "createdAt": "2019-12-20T13:47:43Z",
        "updatedAt": "2019-12-20T13:47:43Z",
        "author": {
          "login": "MortInfinite"
        }
      },
      {
        "body": "> If you need to do this in non-.net standard/core projects (non-\"SDK\" projects), you can use the `Link` metadata:\r\n> \r\n> ```\r\n>   <ItemGroup>\r\n>     <Content Include=\"..\\sql\\**\" CopyToPublishDirectory=\"PreserveNewest\" Link=\"sql\\%(RecursiveDir)\\%(Filename)%(Extension)\" />\r\n>   </ItemGroup>\r\n> ```\r\n> \r\n> e.g. see https://stackoverflow.com/questions/43569821/dotnet-core-publish-include-exclude-dir-in-output/43611163#43611163\r\n\r\nIt seems that this is not working in razor projects.",
        "createdAt": "2020-10-12T15:10:57Z",
        "updatedAt": "2020-10-12T15:10:57Z",
        "author": {
          "login": "rob-ack"
        }
      },
      {
        "body": "thanks, the content include is work for me.\r\n\r\nI am using .net core 5. please check out the below code if you need it.\r\n\r\nthe startup project is CoreSystemConsole, \r\nI want the puppeteer project to copy a templates folder to the build/debug directory under CoreSystemConsole on the program run.\r\n\r\nkindly take the whole solution from here: [https://github.com/KeithPoonNS/ReportEngine](https://github.com/KeithPoonNS/ReportEngine)\r\n\r\n![image](https://user-images.githubusercontent.com/89375575/140450514-9f6554aa-75f2-4522-8e4c-7694b1ed14c4.png)\r\n\r\nmy startup project\r\n```\r\n  <ItemGroup>\r\n    <None Update=\"ReportTemplate\\**\\*.*\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n    <!--<None Update=\"$(SolutionDir)PuppeteerReport\\**\\*.*\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>-->\r\n    <Content Include=\"$(SolutionDir)PuppeteerReport\\**\\*.*\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </Content>\r\n    <None Update=\"..\\OfficeToPDF-1.9.0.2\\OfficeToPDF.exe\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n  </ItemGroup>\r\n```\r\n\r\nthe puppeteer project\r\n```\r\n  <ItemGroup>\r\n    <None Update=\"ReportTemplate\\**\\*.*\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n    <!--<None Update=\"$(SolutionDir)PuppeteerReport\\**\\*.*\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>-->\r\n    <Content Include=\"$(SolutionDir)PuppeteerReport\\**\\*.*\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </Content>\r\n  </ItemGroup>\r\n```\r\n",
        "createdAt": "2021-11-05T02:55:13Z",
        "updatedAt": "2021-12-23T01:21:28Z",
        "author": {
          "login": "KeithPoonNS"
        }
      },
      {
        "body": "> The 2.0 version of the .NET SDK (visual studio 15.4+, .NET CLI 2.0.0+) has a feature that can be used for this: the `LinkBase` metadata:\r\n> \r\n> ```\r\n> <ItemGroup>\r\n>   <None Include=\"$(SolutionDir)config\\**\" \r\n>         CopyToOutputDirectory=\"PreserveNewest\"\r\n>         LinkBase=\"config\\\" />\r\n> </ItemGroup>\r\n> ```\r\n\r\nSaved my day! Thanks, @dasMulli ! ",
        "createdAt": "2021-12-23T01:14:24Z",
        "updatedAt": "2021-12-23T01:14:24Z",
        "author": {
          "login": "disouzam"
        }
      },
      {
        "body": "@dasMulli \r\nhow to copy output including folders within it to different path ?\r\nwhat i do is copying after build\r\n\r\n``` \r\n<Target Name=\"CopyFiles\" AfterTargets=\"CoreBuild\">\r\n     <ItemGroup>\r\n         <RootItem Include=\"$(ProjectDir)*.addin\" />\r\n         <AddinItem Include=\"$(TargetDir)*/*.*\" />\r\n     </ItemGroup>\r\n\r\n     <PropertyGroup>\r\n         <RootDir>bin\\$(SharingType) $(RevitVersion) $(Configuration)\\</RootDir>\r\n         <AddinDir>$(RootDir)$(AssemblyName)\\</AddinDir>\r\n     </PropertyGroup>\r\n\r\n     <Copy SourceFiles=\"@(RootItem)\" DestinationFolder=\"$(RootDir)\" />\r\n     <Copy SourceFiles=\"@(AddinItem)\" DestinationFolder=\"$(AddinDir)\" />\r\n\r\n     <ItemGroup>\r\n         <AddinFiles Include=\"$(RootDir)**\\*.*\" />\r\n     </ItemGroup>\r\n\r\n     <Copy SourceFiles=\"@(AddinFiles)\"\r\n           DestinationFolder=\"$(AppData)\\Autodesk\\Revit\\Addins\\$(RevitVersion)\\%(RecursiveDir)\" />\r\n </Target>\r\n ``` \r\n so what happens  is my bin is like this\r\n\r\n|-- file1.txt\r\n|-- file2.txt\r\n|-- subfolder1\\\r\n|   |-- subfolder2\\\r\n|   |   |-- file3.txt\r\n|   |   |-- file4.txt\r\n|-- subfolder2\\\r\n    |-- file5.txt\r\n\r\nbut after copying to my path, it copies all files but with no folders ! it will be like this \r\n\r\n|-- file1.txt\r\n|-- file2.txt\r\n|-- file3.txt\r\n|-- file4.txt\r\n |-- file5.txt",
        "createdAt": "2023-11-22T04:51:19Z",
        "updatedAt": "2023-11-22T04:54:45Z",
        "author": {
          "login": "AmeerMansourWSP"
        }
      },
      {
        "body": "@AmeerMansourWSP, [Example 2 in Copy Task documentation](https://learn.microsoft.com/en-us/visualstudio/msbuild/copy-task?view=vs-2022#example-2) shows one way to copy the directory structure, by using `%(RecursiveDir)` in the DestinationFolder parameter.",
        "createdAt": "2023-11-22T08:11:48Z",
        "updatedAt": "2023-11-22T08:12:45Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}