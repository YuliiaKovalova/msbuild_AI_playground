{
  "number": 1627,
  "title": "Nested comments in ItemGroups are removed",
  "body": "Repro steps:\r\n\r\n1. Create a new .NET Core project\r\n2. Add an empty folder to the project. This adds an ItemGroup to the project file like this:\r\n```xml\r\n  <ItemGroup>\r\n    <Folder Include=\"asdf\\\" />\r\n  </ItemGroup>\r\n```\r\n3. Add a comment inside the group.\r\n```xml\r\n  <ItemGroup>\r\n    <!-- Test Comment -->\r\n    <Folder Include=\"asdf\\\" />\r\n  </ItemGroup>\r\n```\r\n4. Either delete the folder, or add a class file to the folder so the item group is removed. The comment is removed as well.",
  "state": "CLOSED",
  "createdAt": "2017-01-30T04:21:06Z",
  "updatedAt": "2024-02-21T17:22:30Z",
  "closedAt": "2018-11-19T23:39:28Z",
  "author": {
    "login": "333fred"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "FYI @wjk @davkean.",
        "createdAt": "2017-01-30T04:21:19Z",
        "updatedAt": "2017-01-30T04:21:28Z",
        "author": {
          "login": "333fred"
        }
      },
      {
        "body": "@wjk Does this correctly describe your issue?",
        "createdAt": "2017-01-30T04:31:35Z",
        "updatedAt": "2017-01-30T04:31:35Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "No, it does not. My issue is that _any_ comments or blank lines, no matter where they are located in the file, are removed whenever Visual Studio writes the file out to disk.",
        "createdAt": "2017-01-30T05:03:17Z",
        "updatedAt": "2017-01-30T05:03:17Z",
        "author": {
          "login": "wjk"
        }
      },
      {
        "body": "Do you have this option turned on? \r\n![image](https://cloud.githubusercontent.com/assets/1103906/22412753/e2557154-e705-11e6-96e6-9aaf4ff18103.png)\r\n\r\nOr do you get a prompt when this behavior occurs?\r\n",
        "createdAt": "2017-01-30T05:05:28Z",
        "updatedAt": "2017-01-30T05:05:28Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Trying to figure out if you're running into: https://github.com/dotnet/roslyn-project-system/issues/1348",
        "createdAt": "2017-01-30T05:06:33Z",
        "updatedAt": "2017-01-30T05:06:33Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "That checkbox is currently turned off in my copy of VS, but regardless I have never seen any reload prompts.",
        "createdAt": "2017-01-30T05:08:49Z",
        "updatedAt": "2017-01-30T05:08:49Z",
        "author": {
          "login": "wjk"
        }
      },
      {
        "body": "Hmm, okay, then I don't what the cause is - you are running the latest VS build right?",
        "createdAt": "2017-01-30T05:12:13Z",
        "updatedAt": "2017-01-30T05:22:43Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "ie https://blogs.msdn.microsoft.com/visualstudio/2017/01/27/update-to-visual-studio-2017-release-candidate/.",
        "createdAt": "2017-01-30T05:12:40Z",
        "updatedAt": "2017-01-30T05:12:40Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@333fred Why do you think the original is a MSBuild bug?\r\n",
        "createdAt": "2017-01-30T05:13:28Z",
        "updatedAt": "2017-01-30T05:13:28Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "As far as I can tell, I am. I have version 15.0.26127.0.",
        "createdAt": "2017-01-30T05:21:51Z",
        "updatedAt": "2017-01-30T05:21:51Z",
        "author": {
          "login": "wjk"
        }
      },
      {
        "body": "Because we don't control how comments are preserved: CPS and the Project System are using the `ProjectRootElement.Reload()` API. Regardless, the behavior in this bug is an issue.",
        "createdAt": "2017-01-30T08:06:27Z",
        "updatedAt": "2017-01-30T08:07:15Z",
        "author": {
          "login": "333fred"
        }
      },
      {
        "body": "The repro you have above shouldn't be going through a Reload path, it should be a direct manipulation of the in-memory project file.",
        "createdAt": "2017-01-30T08:22:06Z",
        "updatedAt": "2017-01-30T08:22:06Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@wjk's issue sounds like something is loading the project without passing the new `PreserveFormatting` flag.\r\n\r\nThe main issue here sounds like we're removing the `ItemGroup` when it's empty (reasonable) without considering comments (broken if `PreserveFormatting`, arguably).",
        "createdAt": "2017-01-30T17:31:45Z",
        "updatedAt": "2017-01-30T17:31:45Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I verified and this bit of code leads to the removal of the comment even when preserve formatting is set to true:\r\n\r\n```c#\r\n            var projectPath = @\"D:\\projects\\tests\\projects\\play\\build.proj\";\r\n            var pre = ProjectRootElement.Open(projectPath, ProjectCollection.GlobalProjectCollection, preserveFormatting: true);\r\n\r\n            var p = new Project(pre);\r\n            var i = p.Items.First();\r\n\r\n            p.RemoveItem(i);\r\n\r\n            var s = p.Xml.RawXml;\r\n```\r\n\r\nwhere the project file is:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n\t<ItemGroup>\r\n\t\t<!--comment-->\r\n\t\t<I Include=\"a\"/>\r\n\t</ItemGroup>\r\n</Project>\r\n```\r\n\r\n@333fred / @davkean \r\nCan you please confirm this is the msbuild code path you are using?",
        "createdAt": "2017-01-30T18:01:05Z",
        "updatedAt": "2017-01-30T18:01:05Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Yep, we're using `RawXml`.",
        "createdAt": "2017-01-30T18:02:50Z",
        "updatedAt": "2017-01-30T18:02:50Z",
        "author": {
          "login": "333fred"
        }
      },
      {
        "body": "The bit that's actually removing the entire ItemGroup in my repro is `Project.RemoveItem`, not `RawXml`. So, in this issue's specific scenario, is VS calling `Project.RemoveItem` on the only remaining item inside an ItemGroup? If yes, then `Project.RemoveItem` is the cause of this issue. If not, there's another cause we need to look into.",
        "createdAt": "2017-01-30T18:33:38Z",
        "updatedAt": "2017-01-30T18:33:38Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@lifengl @jviau, is CPS removing the item node here?",
        "createdAt": "2017-01-30T18:35:56Z",
        "updatedAt": "2017-01-30T18:35:56Z",
        "author": {
          "login": "333fred"
        }
      },
      {
        "body": "@333fred yes CPS will remove the item group here. We remove item groups when it no longer has any children. And since CPS keeps different item types within their own item groups, the transition from Folder to anything else will remove it as well.",
        "createdAt": "2017-01-30T19:43:43Z",
        "updatedAt": "2017-01-30T19:43:43Z",
        "author": {
          "login": "jviau"
        }
      },
      {
        "body": "Removing the item or removing the group?",
        "createdAt": "2017-01-30T21:47:08Z",
        "updatedAt": "2017-01-30T21:47:08Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "In this case including something under the Folder removes the item group, because Folder is removed and that item group is now empty, so we remove it as well.",
        "createdAt": "2017-01-30T21:49:28Z",
        "updatedAt": "2017-01-30T21:49:28Z",
        "author": {
          "login": "jviau"
        }
      },
      {
        "body": "So this would be a CPS issue?",
        "createdAt": "2017-01-30T21:50:32Z",
        "updatedAt": "2017-01-30T21:50:32Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "I don't think we can change this. It matches default MSBuild behavior as @cdmihai pointed out. Can we even tell there is a comment in there at all? We don't have access to the XML document. \r\n\r\nIf we don't remove it you are going to start seeing a lot of empty `<ItemGroup />` elements in the project.",
        "createdAt": "2017-01-30T21:55:13Z",
        "updatedAt": "2017-01-30T21:55:13Z",
        "author": {
          "login": "jviau"
        }
      },
      {
        "body": "And honestly, I'm not sure what the correct behavior is. If I was using automagic refactorers on C# to delete the declaration of `x` here:\r\n\r\n```c#\r\nvar x = y; // Because of the phase of the moon\r\n```\r\n\r\nI'd be pretty surprised if the result was a line with just the comment.\r\n\r\nLikewise, I find it entirely believable that a user removing this item:\r\n\r\n```xml\r\n<ItemGroup>\r\n <!-- Works around bug in package X -->\r\n <Content Include=\"X.file\" />\r\n</ItemGroup>\r\n```\r\n\r\nWould want the whole thing gone in the end. I think our current behavior is ok (not the best imaginable but reasonable).",
        "createdAt": "2017-01-30T22:02:17Z",
        "updatedAt": "2017-01-30T22:02:17Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Now move that comment just above the ItemGroup - notice it doesn't get removed? Trivia is hard...",
        "createdAt": "2017-01-30T22:16:33Z",
        "updatedAt": "2017-01-30T22:16:33Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Reviewing this, I don't see a concrete idea that would make everything better. Closing this, but I'm open to reopening if there is one.",
        "createdAt": "2018-11-19T23:39:26Z",
        "updatedAt": "2018-11-19T23:39:26Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}