{
  "number": 7503,
  "title": "Running a task after clean only if it's not a rebuild",
  "body": "I have a solution with common output directory. Inside this solution I have the following task in the main startup `.csproj` file:\r\n```xml\r\n<Target Name=\"FullClean\" AfterTargets=\"Clean\">\r\n  <RemoveDir Directories=\"$(OutDir);\" />\r\n</Target>\r\n```\r\nThis allows to fully clean the output directory when running \"Clean\" via Visual Studio.\r\nHowever, this breaks the \"Rebuild\" option in Visual Studio, as the directory gets cleaned in the middle of a rebuild.\r\n\r\nWhat I want is to be able to run the `<RemoveDir>` task only when \"Clean\" is invoked, but not when \"Rebuild\".\r\nI was looking for something like `Condition=\"'$(IsRebuild)' != 'true'\"`, but couldn't find anything.\r\n\r\nIs this possible, and if so, how?",
  "state": "CLOSED",
  "createdAt": "2022-03-29T14:48:06Z",
  "updatedAt": "2024-02-21T14:09:11Z",
  "closedAt": "2022-03-31T16:18:59Z",
  "author": {
    "login": "lawrence-laz"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Rebuild depends on these targets\r\nhttps://github.com/dotnet/msbuild/blob/ce7523296d7ddb70fb61a68e84bc2ff38e012e35/src/Tasks/Microsoft.Common.CurrentVersion.targets#L956-L961\r\n\r\nWhat you can do is hook into `BeforeRebuild` and set `SomeProperty` to true. Then condition your `FullClean` target to run only if that property is false.",
        "createdAt": "2022-03-31T16:18:33Z",
        "updatedAt": "2022-03-31T16:18:33Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}