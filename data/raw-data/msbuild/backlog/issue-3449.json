{
  "number": 3449,
  "title": "Bootstrap fails on FreeBSD w/ Mono",
  "body": "# Steps to reproduce\r\n- Checkout msbuild @ branch vs15.8\r\n- On a FreeBSD machine run: `env GIT_COMMIT=45a620cef17cc8258267850366c4711aeb64d6b0 ./build/build.sh -build -hosttype mono -configuration Release -skipTests -dotnetbuildfromsource`\r\n\r\nI suspect the same issue applies to Linux.  If you need more detailed instructions I can prepare a script for a FreeBSD VM.  \r\n\r\n# Build errors\r\nThe following build errors are produced:\r\n\r\n## 1) Incorrect bootstrap target\r\n```\r\n============= MSBuild command =============\r\nmono /home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../artifacts/Release-MONO/bootstrap/net461/MSBuild/15.0/Bin/MSBuild.dll \"/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/packages/roslyntools.repotoolset/1.0.0-beta2-62901-01/tools/Build.proj\" /m /clp:Summary /v:minimal /p:Configuration=Release-MONO /p:RepoRoot=\"/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/..\" /p:Projects=\"/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../MSBuild.SourceBuild.sln\" /p:CIBuild=false /p:DisableNerdbankVersioning=true /nr:false /bl:\"/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../artifacts/Release-MONO/log/BuildWithBootstrap.binlog\" /p:Restore=true /p:Build=true /p:Rebuild=false /p:Test=false /p:Sign=false /p:Pack=false /p:CreateBootstrap=false /p:MSBuildExtensionsPath=/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../artifacts/Release-MONO/bootstrap/net461/MSBuild/\r\n===========================================\r\nCannot open assembly '/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../artifacts/Release-MONO/bootstrap/net461/MSBuild/15.0/Bin/MSBuild.dll': No such file or directory.\r\n```\r\nThe initial error appears to come from\r\nhttps://github.com/Microsoft/msbuild/blob/45a620cef17cc8258267850366c4711aeb64d6b0/build/build.sh#L396\r\nAdding the parameter `/p:Projects=$RepoRoot/src/MSBuild.Bootstrap/MSBuild.Bootstrap.csproj` to the above line progresses the build to the next error.  It appears this issue is only triggered when `-dotnetbuildfromsource` is specified, otherwise `RepoToolsetBuildProj=MSBuild.sln` and that solution file includes `MSBuild.Bootstrap`.  \r\n\r\n## 2) MSB1001: Unknown switch\r\n```\r\n============= MSBuild command =============\r\nmono /home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../artifacts/Release-MONO/bootstrap/net461/MSBuild/15.0/Bin/MSBuild.dll \"/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/packages/roslyntools.repotoolset/1.0.0-beta2-62901-01/tools/Build.proj\" /m /clp:Summary /v:minimal /p:Configuration=Release-MONO /p:RepoRoot=\"/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/..\" /p:Projects=\"/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../MSBuild.SourceBuild.sln\" /p:CIBuild=false /p:DisableNerdbankVersioning=true /nr:false /bl:\"/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../artifacts/Release-MONO/log/BuildWithBootstrap.binlog\" /p:Restore=true /p:Build=true /p:Rebuild=false /p:Test=false /p:Sign=false /p:Pack=false /p:CreateBootstrap=false /p:MSBuildExtensionsPath=/home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/build/../artifacts/Release-MONO/bootstrap/net461/MSBuild/\r\n===========================================\r\nMicrosoft (R) Build Engine version 42.42.42.42 for Mono\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nMSBUILD : error MSB1001: Unknown switch.\r\nSwitch: /home/dbn/ports/ports/devel/msbuild/work/msbuild-45a620c/packages/roslyntools.repotoolset/1.0.0-beta2-62901-01/tools/Build.proj\r\n\r\nFor switch syntax, type \"MSBuild /help\"\r\n```\r\nAfter fixing the bootstrap target the above error is encountered when trying to build with the bootstrapped msbuild.  The strange thing is the above works using the [Mono MSBuild](https://github.com/mono/msbuild/tree/0.06) fork.  Looking at the diff between the two repos I cannot see any changes to the code path in question.  \r\n\r\n# Environment data\r\nOS info:\r\n```\r\n# uname -a\r\nFreeBSD dragon.local 11.1-RELEASE-p10 FreeBSD 11.1-RELEASE-p10 #0: Tue May  8 05:21:56 UTC 2018     root@amd64-builder.daemonology.net:/usr/obj/usr/src/sys/GENERIC  amd64\r\n\r\n# mono --version\r\nMono JIT compiler version 5.10.1.47 (5.10.1.47 Sun Jun 24 08:30:40 UTC 2018)\r\nCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\r\n        TLS:           __thread\r\n        SIGSEGV:       altstack\r\n        Notification:  kqueue\r\n        Architecture:  amd64\r\n        Disabled:      none\r\n        Misc:          softdebug \r\n        Interpreter:   yes\r\n        LLVM:          supported, not enabled.\r\n        GC:            sgen (concurrent by default)\r\n```",
  "state": "OPEN",
  "createdAt": "2018-06-24T20:07:28Z",
  "updatedAt": "2024-07-28T02:33:12Z",
  "closedAt": null,
  "author": {
    "login": "DragonSA"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "main branch is still not building on FreeBSD 15.0-CURRENT I think\r\nand on powerpc64 it tries to get the x86-64 package, not architecture aware?\r\n\r\n```$ ./build.sh \r\nDownloading 'https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh'\r\n  Attempting to install 'sdk v8.0.201' from public_location.\r\ndotnet-install: Attempting to download using primary link https://dotnetcli.azureedge.net/dotnet/Sdk/8.0.201/dotnet-sdk-8.0.201-freebsd-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404\r\ndotnet-install: The resource at primary link 'https://dotnetcli.azureedge.net/dotnet/Sdk/8.0.201/dotnet-sdk-8.0.201-freebsd-x64.tar.gz' is not available.\r\ndotnet-install: Attempting to download using primary link https://dotnetbuilds.azureedge.net/public/Sdk/8.0.201/dotnet-sdk-8.0.201-freebsd-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404\r\ndotnet-install: The resource at primary link 'https://dotnetbuilds.azureedge.net/public/Sdk/8.0.201/dotnet-sdk-8.0.201-freebsd-x64.tar.gz' is not available.\r\ndotnet_install: Error: Could not find `.NET Core SDK` with version = 8.0.201\r\ndotnet_install: Error: Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\n  Failed to install 'sdk v8.0.201' from public_location.\r\n  Attempting to install 'sdk v8.0.201' from dotnetbuilds.\r\ndotnet-install: Attempting to download using primary link https://dotnetbuilds.azureedge.net/public/Sdk/8.0.201/dotnet-sdk-8.0.201-freebsd-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404\r\ndotnet-install: The resource at primary link 'https://dotnetbuilds.azureedge.net/public/Sdk/8.0.201/dotnet-sdk-8.0.201-freebsd-x64.tar.gz' is not available.\r\ndotnet_install: Error: Could not find `.NET Core SDK` with version = 8.0.201\r\ndotnet_install: Error: Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\n  Failed to install 'sdk v8.0.201' from dotnetbuilds.\r\nFailed to install 'sdk v8.0.201' from any of the specified locations.\r\n```",
        "createdAt": "2024-07-28T02:31:40Z",
        "updatedAt": "2024-07-28T02:33:12Z",
        "author": {
          "login": "barf"
        }
      }
    ]
  }
}