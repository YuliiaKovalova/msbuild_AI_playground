{
  "number": 6502,
  "title": "Exclude globs that look like **\\subdir\\** do not exclude files without extensions",
  "body": "### Issue Description\r\n\r\nA regression introduced in #6151.\r\nReported by @ForNeVeR in https://github.com/dotnet/sdk/issues/17976.\r\n\r\n### Steps to Reproduce\r\n\r\nUse an exclude glob that looks like `**\\subdir\\**` and have a file without extension under a `subdir` subdirectory.\r\n\r\nExample:\r\n\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <Test Include=\"dir\\**\" Exclude=\"**\\subdir\\**\" />\r\n  </ItemGroup>\r\n\r\n  <Target Name=\"Build\">\r\n    <Message Text=\"@(Test, ', ')\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nWith a file structure as follows:\r\n\r\n```\r\n\u2502   expand.proj\r\n\u2502\r\n\u2514\u2500\u2500\u2500dir\r\n    \u2514\u2500\u2500\u2500subdir\r\n            file1.ext\r\n            file2\r\n```\r\n\r\n### Expected Behavior\r\n\r\nDoes not print anything. All included `Test` items are immediately excluded.\r\n\r\n### Actual Behavior\r\n\r\nPrints `dir\\subdir\\file2`.\r\n\r\n### Analysis\r\n\r\nThis is another issue with taking `*.*` too literally. In this case the default filespec is added when parsing `**\\subdir\\**` which is understood as `**\\subdir\\**\\*.*` and files are matched against the actual `.` dot.\r\n\r\n### Versions & Configurations\r\n\r\nIntroduced in 16.10.\r\n",
  "state": "CLOSED",
  "createdAt": "2021-05-31T20:39:20Z",
  "updatedAt": "2024-02-21T14:13:12Z",
  "closedAt": "2021-06-10T13:47:39Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "bug",
    "Feature - Globbing",
    "regression",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "ladipro"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "For future visitors, see https://github.com/dotnet/sdk/issues/17976#issuecomment-851586554 for a possible workaround.",
        "createdAt": "2021-06-01T15:22:36Z",
        "updatedAt": "2021-06-01T15:22:36Z",
        "author": {
          "login": "ForNeVeR"
        }
      },
      {
        "body": "@ladipro this issue seems to be back again.\r\nWith the following folder structure\r\n```\r\n\u2502  API.csproj\r\n\u2502\r\n\u2514\u2500\u2500wwwroot\r\n    \u2514\u2500\u2500.well-known\r\n           apple-app-site-association\r\n```\r\nAll except the `.well-known` isn\u00b4t include when published.\r\nIt also shows as hidden in vs explorer as well.\r\nIt looks like it is now not being added by default.\r\n![image](https://user-images.githubusercontent.com/7012074/126782357-156446d1-519b-4a73-ae94-adb1fb0959b3.png)\r\n\r\nI will try adding back\r\n`<Content Include=\"wwwroot\\.well-known\\**\" />`\r\nI removed this initially due to this bug (i.e. #17976)\r\n\r\n### MSBUILD\r\non Azure DevOps agent.\r\n- \u2714`Microsoft (R) Build Engine version 16.10.1+2fd48ab73 for .NET` publish includes `wwwroot/.well-known` folder\r\n- \u274c`Microsoft (R) Build Engine version 16.10.2+857e5a733 for .NET` publish **does not** includes `wwwroot/.well-known` folder",
        "createdAt": "2021-07-23T12:44:20Z",
        "updatedAt": "2021-07-23T14:29:10Z",
        "author": {
          "login": "ahmedalejo"
        }
      },
      {
        "body": "@ahmedalejo thank you for reporting this. The new behavior is actually by design and what you're seeing with `16.10.1+2fd48ab73` was a bug. Apologies for the inconvenience. I've left a comment in #6708.",
        "createdAt": "2021-08-02T12:01:26Z",
        "updatedAt": "2021-08-02T12:01:26Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}