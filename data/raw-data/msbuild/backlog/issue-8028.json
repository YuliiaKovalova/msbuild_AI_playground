{
  "number": 8028,
  "title": "Consider SARIF support for tool output -> MSBuild logs",
  "body": "The Microsoft C++ team is [considering](https://devblogs.microsoft.com/cppblog/the-future-of-c-compiler-diagnostics-in-msvc-and-visual-studio/) adding [SARIF](https://github.com/microsoft/sarif-tutorials/blob/main/docs/1-Introduction.md) support to the MSVC toolchain. That allows capturing much more information about errors/warnings than we currently support, through the [canonical error format](https://learn.microsoft.com/visualstudio/msbuild/msbuild-diagnostic-format-for-tasks).\r\n\r\nMSBuild should consider extending the tool-output-scraping support to include SARIF output, and map the SARIF format to our error/warning structured events.\r\n\r\nThis might also help with issues like #8019 that primarily arise because an error cannot today have supplemental information.",
  "state": "OPEN",
  "createdAt": "2022-10-06T13:54:52Z",
  "updatedAt": "2025-03-28T18:40:42Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Feature Request",
    "Area: Logging",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "One thing that might be important: today's output scanners are line-at-a-time, so this might require tool output SARIF to be in [JSON lines](https://jsonlines.org/).",
        "createdAt": "2022-10-06T13:55:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@yuehuang010 is working on this.",
        "createdAt": "2023-02-22T17:48:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Any updates on this?\n\nWhen using the `RunCodeAnalysis` property when building C/C++ Projects (`.vcxproj`), MSBuild forwards the [`/analyze` flag](https://learn.microsoft.com/en-us/cpp/build/reference/analyze-code-analysis?view=msvc-170) to MSVC. This causes MSVC to output a bunch of XML files for each source file. These files are then merged by the `RunMergeNativeCodeAnalysis` task (from `FxCopTask.dll`). There is no easy way to pass `/analyze:log:format:sarif` as well without breaking the build completely.\n\nUnfortunately, these tasks are provided by the Visual Studio installation and are not open-source. So there's no way to contribute this feature.\n\nThinking of it, the [Microsoft Developer Community > VisualStudio](https://developercommunity.microsoft.com/VisualStudio) might be a better place to request this feature.\n\n",
        "createdAt": "2025-03-28T14:35:07Z",
        "author": {
          "login": "jdoubleu"
        }
      },
      {
        "body": "> Thinking of it, the [Microsoft Developer Community > VisualStudio](https://developercommunity.microsoft.com/VisualStudio) might be a better place to request this feature.\n\nYes, that's best for the VC++ tasks and targets.\n\nHowever for this one, I think you might need to set [`<UseStructuredOutput>true</UseStructuredOutput>`](https://devblogs.microsoft.com/cppblog/structured-diagnostics-in-the-new-problem-details-window/#configuration)--have you tried that?\n\n(We haven't done this in MSBuild proper because vcxproj was able to bypass us to get SARIF from the compiler to the VS process, reducing the priority on our side.)",
        "createdAt": "2025-03-28T14:52:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This didn't work: When running `msbuild My.sln /p:RunCodeAnalysis=true` with the `UseStructuredOutput` option set in the projects, **no** SARIF output was generated whatsoever. I assume it either only affects the \"log\" output or when I manually run Code Analysis in Visual Studio.",
        "createdAt": "2025-03-28T15:15:35Z",
        "author": {
          "login": "jdoubleu"
        }
      },
      {
        "body": "@olgaark \u261d\ufe0f",
        "createdAt": "2025-03-28T15:35:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "UseStructureOutput property controls how cl.exe communicates with the build, not what it logs. To get the sarif log file, use /experimental:log switch\nhttps://learn.microsoft.com/en-us/cpp/build/reference/sarif-output?view=msvc-170\nhttps://learn.microsoft.com/en-us/cpp/build/reference/experimental-log?view=msvc-170",
        "createdAt": "2025-03-28T18:40:41Z",
        "author": {
          "login": "olgaark"
        }
      }
    ]
  }
}