{
  "number": 5680,
  "title": "project.GetPropertyValue(\"TargetPath\") returns string.empty",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\ntried to get \"TargetPath\" of a project programmally.\r\n\r\nproject.GetPropertyValue(\"TargetPath\") \r\n\r\nIn dotnetcore project, it returns the correct path.\r\nIn dotnet standard project, it returns string.empty.\r\n\r\n### Steps to Reproduce\r\ncreate a c# dotnetstandard2.0 project A\r\ncreate a c# dotnetstandard2.0 project B\r\ncreate a c# dotnetcoreapp project C\r\n\r\ncoding in B&C:\r\n`Project project = new Project(pathToA);`\r\n`string assemblyPath = project.GetPropertyValue(\"TargetPath\");`\r\n\r\n### Expected Behavior\r\n\r\nassemblyPath is not string.empty\r\n\r\n### Actual Behavior\r\n(no problem with A, its Taget Assembly is actually generated)\r\n\r\nIn B: assemblyPath is string.empty\r\nIn C: assemblyPath is not string.empty\r\n### Analysis\r\n<!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n-->\r\nNo idea\r\n\r\n### Versions & Configurations\r\n>msbuild -version\r\nMicrosoft (R) Build Engine version 16.6.0+5ff7b0c9e for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n>dotnet --version\r\n3.1.103\r\n",
  "state": "CLOSED",
  "createdAt": "2020-08-27T13:07:44Z",
  "updatedAt": "2020-08-28T05:16:13Z",
  "closedAt": "2020-08-28T05:16:13Z",
  "author": {
    "login": "WenyunZou"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Might using different Microsoft.Build.dll\r\n\r\nFor dotnetstandard project (B): XXXX\\NET_Framework_472_TargetingPack.4.7.03081.00\\tools\\v4.0.30319\\reference_assemblies\\v4.7.2\\Microsoft.Build.dll\r\n\r\nFor dotnetcoreapp project (C):\r\nxxxxx\\.nuget\\packages\\microsoft.build\\16.3.0\\lib\\netcoreapp2.1\\Microsoft.Build.dll\r\n\r\nAs B&C are in the same solution, here's a list:\r\n![image](https://user-images.githubusercontent.com/67304289/91446746-6da78180-e8aa-11ea-85fc-ca2b3d27217a.png)\r\n\r\n\r\n\r\nJust a guess.\r\n\r\n",
        "createdAt": "2020-08-27T13:15:42Z",
        "updatedAt": "2020-08-27T13:15:42Z",
        "author": {
          "login": "WenyunZou"
        }
      },
      {
        "body": "Can you share a complete repro, including the application you're using to do the evaluation? The references in the image you shared look wrong to me, and adjusting your use of MSBuildLocator might help resolve the problem.",
        "createdAt": "2020-08-27T16:29:46Z",
        "updatedAt": "2020-08-27T16:29:46Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "[example.zip](https://github.com/dotnet/msbuild/files/5139824/example.zip)\r\n\r\nThank you for your reply. I can't share the original one but attached is an example. please open demo.csproj in vs and run it. It prints nothing in the console, though the path to B.dll is expected.",
        "createdAt": "2020-08-28T03:17:19Z",
        "updatedAt": "2020-08-28T03:17:19Z",
        "author": {
          "login": "WenyunZou"
        }
      },
      {
        "body": "I don't understand which version of dll I was using, might be an old one. But when I replace the Microsoft.Build.dll with the one in 16.3.0 nuget package, the problem solved.  \r\n\r\nThank you very much!",
        "createdAt": "2020-08-28T05:16:13Z",
        "updatedAt": "2020-08-28T05:16:13Z",
        "author": {
          "login": "WenyunZou"
        }
      }
    ]
  }
}