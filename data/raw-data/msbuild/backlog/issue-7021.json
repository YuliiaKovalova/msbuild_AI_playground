{
  "number": 7021,
  "title": "1-to-1 Inputs and Outputs with matching timestamps are not considered up-to-date",
  "body": "A Target simply copies multiple SourceFiles into DestinationFiles that are also defined as Inputs and Outputs. A Copy task preserves timestamps (undocumented feature). Notice that 1-to-1 pairs will have matching timestamps, which may be different in different pairs. This is not good enough to skip the Target next time despite what [the docs](https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?view=vs-2022) say. \r\n\r\nMatching timestamps equal in pairs but not throughout are not considered up-to-date. Everything works if timestamps are equal everywhere. ",
  "state": "OPEN",
  "createdAt": "2021-11-06T17:29:56Z",
  "updatedAt": "2024-01-31T08:20:04Z",
  "closedAt": null,
  "author": {
    "login": "apodtele"
  },
  "labels": [
    "bug",
    "Area: Documentation",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: Could you provide a minimal project that reproduces this behavior?",
        "createdAt": "2021-11-11T17:33:58Z",
        "updatedAt": "2021-11-11T17:33:58Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I could not attach it so see below. `TouchSrcTogether` creates the same timestamps so that `CopySrcToDst` copies them once and skips next time. `TouchSrcSeparately` creates files with different timestamps and `CopySrcToDst` never skips.\r\n\r\nMSBuild -t:TouchSrcSeparately Test.proj\r\n  Touching \"Src1\".\r\n  Touching \"Src2\".\r\nMSBuild -t:CopySrcToDst Test.proj\r\n  Copying file from \"C:\\Test\\Src1\" to \"C:\\Test\\Dst1\".\r\n  Copying file from \"C:\\Test\\Src2\" to \"C:\\Test\\Dst2\".\r\nMSBuild -t:CopySrcToDst Test.proj\r\n  Copying file from \"C:\\Test\\Src1\" to \"C:\\Test\\Dst1\".\r\n  Copying file from \"C:\\Test\\Src2\" to \"C:\\Test\\Dst2\".\r\n\r\nvs.\r\n\r\nMSBuild -t:TouchSrcTogether Test.proj\r\n  Touching \"Src1\".\r\n  Touching \"Src2\".\r\nMSBuild -t:CopySrcToDst Test.proj\r\n  Copying file from \"C:\\Test\\Src1\" to \"C:\\Test\\Dst1\".\r\n  Copying file from \"C:\\Test\\Src2\" to \"C:\\Test\\Dst2\".\r\nMSBuild -t:CopySrcToDst Test.proj\r\nSkipping target \"CopySrcToDst\" because all output files are up-to-date with respect to the input files.\r\n\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ItemGroup>\r\n    <Src1 Include=\"Src1\" />\r\n    <Src2 Include=\"Src2\" />\r\n    <Src Include=\"@(Src1);@(Src2)\" />\r\n    <Dst Include=\"Dst1;Dst2\" />\r\n  </ItemGroup>\r\n  <Target Name=\"TouchSrcSeparately\">\r\n    <!-- Important: two touches result in different timestamps -->\r\n    <Touch Files=\"@(Src1)\" AlwaysCreate=\"true\" />\r\n    <Touch Files=\"@(Src2)\" AlwaysCreate=\"true\" />\r\n  </Target>\r\n  <Target Name=\"TouchSrcTogether\">\r\n    <!-- Important: one touch results in matching timestamps -->\r\n    <Touch Files=\"@(Src)\" AlwaysCreate=\"true\" />\r\n  </Target>\r\n  <Target Name=\"TouchDst\">\r\n    <Touch Files=\"@(Dst)\" />\r\n  </Target>\r\n  <Target Name=\"CopySrcToDst\" Inputs=\"@(Src)\" Outputs=\"@(Dst)\">\r\n    <Copy SourceFiles=\"@(Src)\" DestinationFiles=\"@(Dst)\" />\r\n  </Target>\r\n</Project>\r\n```",
        "createdAt": "2021-11-12T02:57:57Z",
        "updatedAt": "2021-11-12T02:57:57Z",
        "author": {
          "login": "apodtele"
        }
      },
      {
        "body": "Team Triage: We think the issue is that the inputs and outputs are two separate items that are technically unrelated, so there's not a 1 to 1 mapping.\r\n\r\n> 1-to-1 mappings are typically produced by item transformations\r\n\r\nIf you use item transforms on the _same item_, you should get the desired result. Something similar to what's in the doc you linked: `\"@(Src->'%(Identity).%(Extension)')\"`\r\n\r\nEdit: leaving the issue open for discussion for now",
        "createdAt": "2021-11-18T18:54:39Z",
        "updatedAt": "2021-11-18T18:56:11Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Absolutely not. Even with transformation that impose 1-to-1 relationship technically, the time stamps in pairs are compared incorrectly. Try the project below.\r\n\r\nMSBuild -t:TouchSrcSeparately Test.proj\r\n  Touching \"Src1\".\r\n  Touching \"Src2\".\r\nMSBuild -t:CopySrcToDst Test.proj\r\n  Copying file from \"Src2\" to \"CopyOfSrc2\".\r\n  Copying file from \"Src1\" to \"CopyOfSrc1\".\r\nMSBuild -t:CopySrcToDst Test.proj\r\n  Copying file from \"Src2\" to \"CopyOfSrc2\".\r\n  Copying file from \"Src1\" to \"CopyOfSrc1\".\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ItemGroup>\r\n    <Src1 Include=\"Src1\" />\r\n    <Src2 Include=\"Src2\" />\r\n    <Src Include=\"@(Src1);@(Src2)\" />\r\n    <!-- This is certainly 1-to-1 -->\r\n    <Dst Include=\"@(Src->'CopyOf%(Identity)')\" />\r\n  </ItemGroup>\r\n  <Target Name=\"TouchSrcSeparately\">\r\n    <!-- Important: two touches result in different timestamps -->\r\n    <Touch Files=\"@(Src1)\" AlwaysCreate=\"true\" />\r\n    <Touch Files=\"@(Src2)\" AlwaysCreate=\"true\" />\r\n  </Target>\r\n  <Target Name=\"TouchSrcTogether\">\r\n    <!-- Important: two touches result in different timestamps -->\r\n    <Touch Files=\"@(Src)\" AlwaysCreate=\"true\" />\r\n  </Target>\r\n  <Target Name=\"TouchDst\">\r\n    <Touch Files=\"@(Dst)\" />\r\n  </Target>\r\n  <Target Name=\"CopySrcToDst\" Inputs=\"@(Src)\" Outputs=\"@(Dst)\">\r\n    <Copy SourceFiles=\"@(Src)\" DestinationFiles=\"@(Dst)\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\n",
        "createdAt": "2021-11-18T20:56:24Z",
        "updatedAt": "2021-11-18T20:56:24Z",
        "author": {
          "login": "apodtele"
        }
      },
      {
        "body": "@apodtele You still have two unique items. Can you modify your target such that the outputs is `\"@(Src->'CopyOf%(Identity)')\"`?",
        "createdAt": "2021-11-18T21:06:29Z",
        "updatedAt": "2021-11-18T21:06:29Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos Yes, indeed, with Outputs transformed, the timestamps are paired and checked properly. So the question becomes what \"typically\" really means. Perhaps it should say\r\n\r\n> 1-to-1 mappings are *only* produced by item transformations in Outputs.\r\n\r\nOr, maybe there is a way to declare the items paired?",
        "createdAt": "2021-11-18T21:38:28Z",
        "updatedAt": "2021-11-18T21:38:28Z",
        "author": {
          "login": "apodtele"
        }
      },
      {
        "body": "@apodtele Awesome! One of the first things we realized when looking this over is the docs likely need to be updated. cc @ghogen . \r\n\r\nAlso cc @rainersigwald in case the doc fix is more involved.",
        "createdAt": "2021-11-18T22:35:40Z",
        "updatedAt": "2021-11-18T22:35:40Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}