{
  "number": 5691,
  "title": "add ReferenceOutputAssembly with mixed old/new project file type",
  "body": "### Issue Description\r\nI just want to add a hint reference in old style project (<Project ToolsVersion=\"15.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">) to a new style project of \"Microsoft.NET.Sdk\". This new style project does not contain any files for build, just a copy and clean task with reference BeforeTargets: BeforeBuild and BeforeCompile. I heard that \"ReferenceOutputAssembly\" could be used to get rid of the solution dependency, so I want to give it a try.\r\n\r\nIf I execute \"dotnet clean oldstyle.csproj\" on the old style project, the clean operation is done but with \"msbuild oldstyle.csproj -target:Clean\" not. Same for building it.\r\n\r\nIs project type mixing old/new supported?\r\n\r\nnew style project content:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net48</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"CopyDLL\" BeforeTargets=\"BeforeBuild\">\r\n    <Copy SourceFiles=\"x.dll\" DestinationFolder=\"..\\..\\..\\..\\x\\\" ContinueOnError=\"false\" OverwriteReadOnlyFiles=\"true\" />\r\n  </Target>\r\n  <Target Name=\"CleanDLL\" BeforeTargets=\"BeforeClean\">\r\n    <Delete Files=\"..\\..\\..\\..\\x\\x.dll\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n### Expected Behavior\r\nClean/Build of old style project works, but both do not if reference from old to new project type is done.\r\n\r\n### Actual Behavior\r\nClean and Build is skipped in old style project.\r\n\r\n### Analysis\r\nAdd ReferenceOutputAssembly have here no influence.\r\n\r\n### Versions & Configurations\r\nmsbuild Version 16.7.0+b89cb5fde\r\n.NET Core SDK (5.0.100-preview.8.20417.9)\r\n\r\n### Attach a binlog\r\n",
  "state": "CLOSED",
  "createdAt": "2020-08-28T05:35:57Z",
  "updatedAt": "2020-10-14T16:03:38Z",
  "closedAt": "2020-10-14T16:03:38Z",
  "author": {
    "login": "trivalik"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: Can you include the new and old project as well as a script with what you're doing here?",
        "createdAt": "2020-09-02T15:59:44Z",
        "updatedAt": "2020-09-02T15:59:44Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "I am right now not sure about exact circumstance. I tried to reproduce and it looks like that the issue was related to that in solution file the GUID for project is {9A19103F-16F7-4668-BE54-9A1E7A4F7556}. After remove and readd the project a new GUID was created (FAE04EC0-301F-11D3-BF4B-00C04F79EFBC) and it was then possible to build. It looks like information is in the GUID coded. Here the log what VS2019 reported with the first GUID: \r\n[VsProjectFault_fd0ee92f-3543-4007-8c58-a047776bebba.failure.txt](https://github.com/dotnet/msbuild/files/5186393/VsProjectFault_fd0ee92f-3543-4007-8c58-a047776bebba.failure.txt)\r\n",
        "createdAt": "2020-09-08T06:09:02Z",
        "updatedAt": "2020-09-08T06:09:02Z",
        "author": {
          "login": "trivalik"
        }
      }
    ]
  }
}