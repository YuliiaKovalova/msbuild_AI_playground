{
  "number": 3623,
  "title": "BuildInParallel=true MSBuild task doesn't halt when inner project has an error in an AfterTarget",
  "body": "### Steps to reproduce\r\n\r\n1. Clone https://github.com/dagood/repro-msbuild-task-not-stopping\r\n2. Run `repro.ps1` (it sets up a SDK and runs `dotnet msbuild /v:N /bl`)\r\n\r\n### Expected  behavior\r\n\r\nBuild fails, showing this: (Removing `BuildInParallel=\"true\"` from the MSBuild task makes this happen.)\r\n\r\n```\r\nBuild FAILED.\r\n\r\n       \"...\\build.proj\" (default target) (1) ->\r\n       \"...\\b\\b.pkgproj\" (default target) (3) ->\r\n       (After target) ->\r\n         ...\\b\\b.pkgproj(9,5): error : HI\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\n### Actual behavior\r\n\r\nBuild \"succeeds\", but shows:\r\n\r\n```\r\nBuild succeeded.\r\n\r\n       \"...\\build.proj\" (default target) (1) ->\r\n       \"...\\b\\b.pkgproj\" (default target) (3) ->\r\n       (After target) ->\r\n         ...\\b\\b.pkgproj(9,5): error : HI\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\n### Environment data\r\n`.\\corefx\\Tools\\dotnetcli\\dotnet msbuild /version` output:\r\n\r\n```\r\nMicrosoft (R) Build Engine version 15.5.153.27799 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.5.153.27799\r\n```\r\n\r\n`.\\corefx\\Tools\\dotnetcli\\dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (15.5.0-preview-007044)\r\n\r\nProduct Information:\r\n Version:            15.5.0-preview-007044\r\n Commit SHA-1 hash:  278cbf6c44\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\15.5.0-preview-007044\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.3-servicing-26708-02\r\n  Commit:  cc9cf3686d\r\n```",
  "state": "CLOSED",
  "createdAt": "2018-08-16T22:16:00Z",
  "updatedAt": "2024-02-21T17:11:49Z",
  "closedAt": "2018-08-16T22:30:33Z",
  "author": {
    "login": "dagood"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Duplicate of #3345",
        "createdAt": "2018-08-16T22:27:34Z",
        "updatedAt": "2018-08-16T22:27:34Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This happens when the `AfterTargets` hooks the entry-point target of the project. In your repro there's no real way out, but often in real projects you can hook a different place--the linked bug mentions hooking `AfterBuild` instead of `Build`. I can take a look at your real project to see if there's a similar workaround if you'd like.",
        "createdAt": "2018-08-16T22:30:30Z",
        "updatedAt": "2018-08-16T22:30:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Interesting, thanks. Yeah, there's a lot of stuff here that turns out not to be needed to repro, and the explanation there makes sense. I opened this for https://github.com/dotnet/corefx/issues/31728. @ericstj",
        "createdAt": "2018-08-16T22:32:23Z",
        "updatedAt": "2018-08-16T22:32:23Z",
        "author": {
          "login": "dagood"
        }
      }
    ]
  }
}