{
  "number": 9121,
  "title": "Custom loggers could make default loggers miss information.",
  "body": "During investigation of #9098 we found a following design problem:\r\nIf \r\n- any custom logger would be created without setting `IEventSource4.IncludeEvaluationPropertiesAndItems()`.\r\n- And this logger would be added to use with the build-in MSBuild loggers.\r\n- And MSBuild runs in multiple nodes.\r\n\r\nThen we would miss evaluation items and properties in all the loggers.\r\n\r\nAnalysis:\r\nDespite the name, `IncludeEvaluationPropertiesAndItems` does not control whether to include or not properties and items to log of the particular logger and rather has a meaning of a logger version. In fact, its presence means that properties and items are included in `ProjectEvaluationFinished` event for modern loggers and absence that they are included in `ProjectStarted` event for legacy loggers. So, if one of the attached loggers is legacy ( which is detected by missing IncludeEvaluationPropertiesAndItems), so for backwards compatibility all other modern loggers would not obtain properties in the event they expect, see [this commit](https://github.com/dotnet/msbuild/commit/794abcbb005017cf3a75850a9f001419bb47bd38).\r\n ",
  "state": "OPEN",
  "createdAt": "2023-08-11T14:37:39Z",
  "updatedAt": "2024-01-31T08:13:31Z",
  "closedAt": null,
  "author": {
    "login": "AR-May"
  },
  "labels": [
    "backlog",
    "needs-design",
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team triage: We might consider more proper documentation on writing custom loggers where this would be mentioned. \r\nfyi @ghogen",
        "createdAt": "2023-08-15T14:03:25Z",
        "updatedAt": "2023-08-15T14:03:25Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "Also perhaps if we detect a legacy logger, issue a message at the beginning of the build with some info.",
        "createdAt": "2023-10-12T16:50:24Z",
        "updatedAt": "2023-10-12T16:50:24Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Also this page needs to be expanded:\r\nhttps://learn.microsoft.com/en-us/dotnet/api/microsoft.build.framework.ieventsource4.includeevaluationpropertiesanditems?view=msbuild-17-netcore\r\n\r\nAs well as mention that there's an environment variable `MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION=1` to force the new mode and ignore legacy loggers.\r\n\r\nHere's the relevant code where the flag is read:\r\nhttps://github.com/dotnet/msbuild/blob/c36a54ed3308d1516ffe1a86b9086c42e4ca996f/src/Build/BackEnd/Components/Logging/LoggingService.cs#L547\r\n\r\nAlso with the legacy behavior, there was a bug where properties and items were not logged from other nodes, so you would only get properties and items on `ProjectStartedEventArgs` for projects building in the central node.\r\n\r\nYou can opt in to the new behavior if all loggers call `IEventSource4.IncludeEvaluationPropertiesAndItems()` or the environment variable is set. With the new behavior properties and items are logged at the evaluation of each project at `ProjectEvaluationFinishedEventArgs`. This also works regardless of which node the project is evaluated or built.",
        "createdAt": "2023-10-12T16:51:47Z",
        "updatedAt": "2023-10-12T16:55:42Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}