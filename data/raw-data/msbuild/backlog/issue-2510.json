{
  "number": 2510,
  "title": "dotnet restore fails only on Linux when Sdk=\"Microsoft.Net.Sdk\"",
  "body": "_From @danpere on August 28, 2017 18:9_\n\n## Steps to reproduce\r\n1. Create a `.csproj` file in the new format that starts\r\n```xml\r\n<Project Sdk=\"Microsoft.Net.Sdk\">\r\n```\r\nand has NuGet packages referenced. (Note the casing: [the docs](https://docs.microsoft.com/en-us/dotnet/core/tools/csproj) say the `Sdk` should be \"`Microsoft.NET.Sdk`\" with `NET` in all caps.)\r\n\r\n2. Run `dotnet restore` on Windows.\r\n3. Run `dotnet restore` on Linux.\r\n\r\n## Expected  behavior\r\n`dotnet restore` fails or succeeds on both platforms.\r\n\r\n## Actual behavior\r\n`dotnet restore` successfully restores packages on Windows. On Linux it displays\r\n```\r\nFoo.csproj : error MSB4236: The SDK 'Microsoft.Net.Sdk' specified could not be found.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  14.04\r\n OS Platform: Linux\r\n RID:         ubuntu.14.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\n\n_Copied from original issue: dotnet/cli#7541_",
  "state": "OPEN",
  "createdAt": "2017-09-11T23:28:55Z",
  "updatedAt": "2024-05-14T01:30:00Z",
  "closedAt": null,
  "author": {
    "login": "livarcocc"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "_From @dasMulli on August 28, 2017 18:21_\n\nI'd always expect filesystem-based logic to behave differently on file system with different case sensitivity.\r\n\r\nThe problem now is that it isn't \"really well\" fixable. NuGet worked around similar problems by making all package folder names lowercase for the global packages cache (to support case insensitive `PackageReference`s). Now that there are multiple versions of msbuild with SDK resolvers out (`dotnet` cli, VS msbuild, mono msbuild) this will be hard to change.",
        "createdAt": "2017-09-11T23:28:56Z",
        "updatedAt": "2017-09-11T23:28:56Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "_From @danpere on August 28, 2017 18:26_\n\nThe documentation says \"`Microsoft.NET.Sdk`\", so I'd expect tools to reject \"`Microsoft.Net.Sdk`\", even on case-insensitive file systems. I could see how changing the behavior to make something previously valid be an error could be a problem... perhaps a compromise would be to make it a warning?",
        "createdAt": "2017-09-11T23:28:57Z",
        "updatedAt": "2017-09-11T23:28:57Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "If we decide to do that, it will have to happen in MSBuild, as doing that just in the resolver level does not cover all scenarios, as such, I am moving this bug over there.",
        "createdAt": "2017-09-11T23:28:58Z",
        "updatedAt": "2017-09-11T23:28:58Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "I think I also hit this issue.\r\n\r\n```\r\n/__w/1/s/dirs.proj : error MSB4019: The imported project \"/__w/.nuget/microsoft.build.traversal/4.1.0/Sdk/Sdk.props\" was not found. Confirm that the expression in the Import declaration \"/__w/.nuget/microsoft.build.traversal/4.1.0/Sdk/Sdk.props\" is correct, and that the file exists on disk.\r\n\r\n```",
        "createdAt": "2024-05-14T01:29:59Z",
        "updatedAt": "2024-05-14T01:29:59Z",
        "author": {
          "login": "hcoona"
        }
      }
    ]
  }
}