{
  "number": 3397,
  "title": "PendBuildRequest does not support cancellation",
  "body": "### Steps to reproduce\r\n\r\nManually working around lack of multiple nodes on Mono, I have come to this [solution](https://github.com/mono/monodevelop/blob/5d36aea55cb4174d8f9d94fd4c4d081a4e991348/main/src/core/MonoDevelop.Projects.Formats.MSBuild/MonoDevelop.Projects.Formats.MSBuild/ProjectBuilder.v4.0.cs#L233-L255)\r\n\r\nThis should help with parallel submissions by:\r\na) making a node's evaluation contents be reused\r\nb) having submissions run in parallel\r\n\r\nThe problem is that there is no way to handle cancellation there. Seems like cancellation is built into node level, not submission level.\r\n\r\n### Expected  behavior\r\nThere should be a way to cancel a subsmission, before even running at at queue level.\r\n\r\n### Actual behavior\r\nThere is no way to cancel it\r\n\r\n\r\n### Environment data\r\n```\r\nmsbuild /v\r\nMicrosoft (R) Build Engine version 15.7.222.58015 (xplat-master/9fe25dd0 Fri May 18 12:46:26 EDT 2018) for Mono\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n```\r\n\r\nOS info:\r\n```\r\nmacOS\r\nMono JIT compiler version 5.14.0.105 (2018-04/6d28c8f9621 Fri May 25 04:53:26 EDT 2018)\r\nCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\r\n\tTLS:           normal\r\n\tSIGSEGV:       altstack\r\n\tNotification:  kqueue\r\n\tArchitecture:  amd64\r\n\tDisabled:      none\r\n\tMisc:          softdebug\r\n\tInterpreter:   yes\r\n\tLLVM:          yes(3.6.0svn-mono-master/8b1520c8aae)\r\n\tGC:            sgen (concurrent by default)\r\n```\r\n\r\ncc @cdmihai - this is the thing I was talking about.\r\n",
  "state": "OPEN",
  "createdAt": "2018-06-11T10:56:09Z",
  "updatedAt": "2024-02-21T16:33:46Z",
  "closedAt": null,
  "author": {
    "login": "Therzok"
  },
  "labels": [
    "Area: Engine",
    "Area: API",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@lifengl @jviau \r\nWould CPS also benefit from being able to cancel individual BuildSubmissions as opposed to BuildManager.CancelAllSubmissions, which apparently is the only way to cancel?\r\nImplementation-wise it looks like most of the required machinery is already built in, it's just that it's only used when cancelling everything. Probably the easiest way to do it would be by calling some Cancel method somewhere (BuildSubmission.Cancel, BuildManager.Cancel(BuildSubmission)) as opposed to taking a cancellation token from the API caller for each BuildSubmission.",
        "createdAt": "2018-06-11T18:08:43Z",
        "updatedAt": "2018-06-11T18:13:09Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "I'm willing to implement the above and send a PR if the [proposed API](https://github.com/Microsoft/msbuild/issues/3397#issuecomment-396334282) is fine",
        "createdAt": "2018-07-21T15:19:53Z",
        "updatedAt": "2018-07-21T15:19:53Z",
        "author": {
          "login": "Therzok"
        }
      },
      {
        "body": "I'm OK with it. @Microsoft/msbuild-maintainers, any thoughts?\r\n\r\nOn a quick glance:\r\n- an individually cancelled submission should adhere to the current behaviour of cancelled submissions: https://github.com/Microsoft/msbuild/blob/master/src/Build/BackEnd/BuildManager/BuildManager.cs#L464-L466\r\n- the RequestBuilder already has [cancellation support](https://github.com/Microsoft/msbuild/blob/master/src/Build/BackEnd/Components/RequestBuilder/RequestBuilder.cs#L251), you need to find a way to connect the new APIs to it.\r\n- I do not quite understand what implications this has for multi proc builds. At any point in time, there may be multiple projects belonging to the same build submission (recursive MSBuild task invocations) building on multiple nodes. If you want to really shut everything off, you'll have to go through the Scheduler who maps nodes to build requests to build submissions. Alternatively, as a MVP, you could zombify the requests and just let them finish even if their submission is cancelled. This would negate any benefits you're after, but it may be a good checkpoint to flesh out one side of the APIs. Either way, you'll have to introduce a new [NodePacketType](https://github.com/Microsoft/msbuild/blob/master/src/Shared/INodePacket.cs#L10), and pipe it through the engine.\r\n- Lots of tests: single proc x multi proc x single submission single project x single submission multiple projects x multiple submissions, subset get cancelled, etc :)",
        "createdAt": "2018-07-23T19:06:43Z",
        "updatedAt": "2018-07-23T19:06:43Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  }
}