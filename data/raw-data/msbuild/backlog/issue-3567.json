{
  "number": 3567,
  "title": "How to copy all json file to new folder in Net Core ?",
  "body": "### Steps to reproduce\r\n\r\nOn windows I use this command :\r\n```\r\n<PropertyGroup>\r\n    <SolutionDir Condition=\"$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'\">..\\</SolutionDir>\r\n    <PreBuildEvent>IF NOT EXIST \"$(TargetDir)DataFiles\" MKDIR \"$(TargetDir)DataFiles\"</PreBuildEvent>\r\n    <PostBuildEvent>FOR /R \"$(SolutionDir)\\Api.Tests\\Scenarios\" %25%25f IN (*.json) DO COPY \"%25%25f\" \"$(TargetDir)DataFiles\\\" /Y</PostBuildEvent>\r\n\r\n  </PropertyGroup>\r\n```\r\n\r\nOn linux , I have this kind of error \r\n\r\n```\r\nBuild FAILED.\r\n[12:44:39][Step 1/1] \r\n[12:44:39][Step 1/1] /usr/share/dotnet/sdk/2.1.302/Microsoft.Common.CurrentVersion.targets(1331,5): error MSB3073: The command \"IF NOT EXIST \"DataFiles\" MKDIR \"DataFiles\"\" exited with code 127. [/opt/jetbrains/buildAgent/work/4fc9032bf5656724/Api.Tests/Api.Tests/IApi.Tests.csproj]\r\n[12:44:39][Step 1/1]     0 Warning(s)\r\n[12:44:39][Step 1/1]     1 Error(s)\r\n```",
  "state": "OPEN",
  "createdAt": "2018-07-31T12:59:48Z",
  "updatedAt": "2024-02-21T16:33:25Z",
  "closedAt": null,
  "author": {
    "login": "ValeriiFedorenko"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "`PreBuildEvent` and `PostBuildEvent` are executed using the operating system's shell--`cmd.exe` on Windows and `/bin/sh` on macOS and Linux. Since those shells have different syntax, you'll have to do something different to be cross-platform compatible.\r\n\r\nOptions:\r\n\r\n* Condition the definitions of the scripts based on the current platform (probably [something like](https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions) `$(MSBuild::IsOSUnixLike())`).\r\n* Promote the build logic to an MSBuild target that works on all platforms.\r\n\r\nI strongly prefer the latter. It'd look something like\r\n\r\n```xml\r\n<Target Name=\"CopyScenarios\">\r\n  <ItemGroup>\r\n    <Scenarios Include=\"$(SolutionDir)\\Api.Tests\\Scenarios\\**\\*.*\" />\r\n  </ItemGroup>\r\n\r\n  <Copy SourceFiles=\"@(Scenarios)\"\r\n        DestinationFiles=\"@(Scenarios->'$(TargetDir)DataFiles\\%(RecursiveDir)%(Filename)%(Extension)')\"\r\n        SkipUnchangedFiles=\"true\" />\r\n</Target>\r\n```",
        "createdAt": "2018-07-31T14:52:07Z",
        "updatedAt": "2018-07-31T14:52:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "it is helped. there are no errors\r\nbut Folder still not creates\r\nI have investigated and notice that $(SolutionDir) --> *Undefined*/Api.Tests/Scenarios/",
        "createdAt": "2018-08-01T13:27:30Z",
        "updatedAt": "2018-08-01T13:27:30Z",
        "author": {
          "login": "ValeriiFedorenko"
        }
      },
      {
        "body": "fixid by replace  $(SolutionDir)  to $(ProjectDir)\r\n\r\n```\r\n<Target Name=\"CopyScenarios\" AfterTargets=\"Build\">\r\n    <ItemGroup>  \r\n      <Scenarios Include=\"$(ProjectDir)/Scenarios/**/*.json\" />\r\n    </ItemGroup>\r\n    <Copy SourceFiles=\"@(Scenarios)\" DestinationFiles=\"@(Scenarios->'$(TargetDir)DataFiles/%(Filename)%(Extension)')\" SkipUnchangedFiles=\"false\" />\r\n  </Target>\r\n```",
        "createdAt": "2018-08-01T13:38:58Z",
        "updatedAt": "2018-08-01T13:38:58Z",
        "author": {
          "login": "ValeriiFedorenko"
        }
      },
      {
        "body": "`$(SolutionDir)` is set only when building _in the context of a solution_, so it's generally set in Visual Studio and for command line builds like `msbuild.exe path\\to\\a.sln` but _isn't_ set in command line builds like `msbuild.exe path\\to\\a.csproj`.\r\n\r\nSounds like you found a property that works for you, but there are some other options that may help: https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-reserved-and-well-known-properties",
        "createdAt": "2018-08-01T15:14:21Z",
        "updatedAt": "2018-08-01T15:14:21Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Some more options: You could also do\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <ContentWithTargetPath Include=\"Scenarios/**/*.json\" \r\n      TargetPath=\"DataFiles/%(Filename)%(Extension)\"\r\n      CopyToOutputDirectory=\"PreserveNewest\" />\r\n  </ItemGroup>\r\n```\r\n\r\ndirectly in the project file.\r\n\r\nAnother alternative would be to update the files you already have, presumably `None` items:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <None Update=\"Scenarios/**/*.json\" \r\n      LinkBase=\"DataFiles/\"\r\n      CopyToOutputDirectory=\"PreserveNewest\" />\r\n  </ItemGroup>\r\n```\r\n(if the files aren't in your project directory, use `Include=\"../shared/Scenarios/**/*.json\"` instead)\r\n\r\nwhich however will display the items beneath a `DataFiles` folder in VS' solution explorer and hide the source folder structure if you are using VS.",
        "createdAt": "2018-08-07T14:33:35Z",
        "updatedAt": "2018-08-07T14:33:35Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "@dasMulli Thanks, your approach works moreover  it works with publishing\r\nIn prev variant, I used two Targets for build and for publishing \r\nCan you give a link for documentation where I can read about keywords like \"ContentWithTargetPath\" and so one? ",
        "createdAt": "2018-08-13T10:27:24Z",
        "updatedAt": "2018-08-13T10:28:01Z",
        "author": {
          "login": "ValeriiFedorenko"
        }
      }
    ]
  }
}