{
  "number": 5080,
  "title": "MSBuild inconsistent file path to the same Task assembly load casing cast error",
  "body": "### Steps to reproduce\r\n\r\nFailed to build https://github.com/dotnet-maestro-bot/cli/tree/merge/release/3.1.1xx-to-release/3.1.2xx due to error:\r\n\r\n```\r\nC:\\work\\cli\\src\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.DotNet.MSBuildSdkResolver.csproj]\r\nC:\\work\\cli\\.packages\\microsoft.build.tasks.git\\1.0.0-beta2-19367-01\\buildCrossTargeting\\Microsoft.Build.Tasks.Git.targets(24,5): error MSB4018: System.InvalidCastException: [A]System.Runtime.CompilerServices.StrongBox`1[Microsoft.Build.Tasks.Git.GitRepository] cannot be cast to [B]System.Runtime.CompilerServices.StrongBox`1[Microsoft.Build.Tasks.Git.GitRepository]. Type A originates from 'System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e' in the context 'Default' at location 'C:\\work\\cli\\.dotnet\\shared\\Microsoft.NETCore.App\\3.1.2\\System.Private.CoreLib.dll'. Type B originates from 'System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e' in the context 'Default' at location 'C:\\work\\cli\\.dotnet\\shared\\Microsoft.NETCore.App\\3.1.2\\System.Private.CoreLib.dll'. [C:\\work\\cli\\src\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.DotNet.MSBuildSdkResolver.csproj]\r\nC:\\work\\cli\\.packages\\microsoft.build.tasks.git\\1.0.0-beta2-19367-01\\buildCrossTargeting\\Microsoft.Build.Tasks.Git.targets(24,5): error MSB4018:    at Microsoft.Build.Tasks.Git.RepositoryTask.TryGetCachedRepositoryInstance(String cacheKey, Boolean requireCached, GitRepository& repository) in /_/src/Microsoft.Build.Tasks.Git/RepositoryTask.cs:line 135 [C:\\work\\cli\\src\\Microsoft.DotNet.MSBuildSdkResolver\\Microsoft.DotNet.MSBuildSdkResolver.csproj]\r\n```\r\n\r\nThe same assembly with different path is loaded\r\n![image](https://user-images.githubusercontent.com/6993335/73213652-68f8d000-4105-11ea-93cd-627a1ed6c837.png)\r\n\r\n\r\nIt is caused by path in https://github.com/microsoft/msbuild/blob/86d9494e446de002ea6a4f08d6fbd111b1041059/src/Shared/CoreCLRAssemblyLoader.cs#L32 is not normalized.\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2020-01-27T21:03:46Z",
  "updatedAt": "2024-02-21T17:05:20Z",
  "closedAt": "2020-02-05T18:32:50Z",
  "author": {
    "login": "wli3"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.5 Preview 3 (Sprint 165)"
  },
  "comments": {
    "nodes": [
      {
        "body": "The task in question here uses `RegisterTaskObject`/`GetRegisteredTaskObject` to store and retrieve an object across invocations.\r\n\r\nhttps://github.com/dotnet/sourcelink/blob/39c946a79b0daca4e47ec6d23554fea69f33253d/src/Microsoft.Build.Tasks.Git/RepositoryTask.cs#L153-L160\r\n\r\nThis retrieves an object from an ALC loaded through one path (`build/../foo.dll`) into an ALC loaded through another (`buildCrossTargeting/../foo.dll`), which causes the problems.",
        "createdAt": "2020-01-27T23:32:09Z",
        "updatedAt": "2020-01-27T23:32:09Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald So do you know what we need to do to fix this?  Do keys for task objects need to now be aware of the ALC?",
        "createdAt": "2020-01-28T00:10:51Z",
        "updatedAt": "2020-01-28T00:10:51Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "There's an easy fix here for task objects used _within a single assembly_: normalize the path to that assembly. There's still a conceivable hole if the register/retrieve goes across assemblies (#5084), but I don't know if that actually happens. Since it might I think we should build an escape hatch back to legacy one-ALC behavior (#5086).",
        "createdAt": "2020-01-28T16:35:54Z",
        "updatedAt": "2020-01-28T16:35:54Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "For posterity, this reproed at the commit here: https://github.com/dotnet/cli/pull/13176/commits/cd478822fd59f58b647b36829054c37e5792bac8\r\n\r\n(thanks @sfoslund!)",
        "createdAt": "2020-02-04T22:57:09Z",
        "updatedAt": "2020-02-04T22:57:09Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}