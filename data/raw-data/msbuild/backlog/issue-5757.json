{
  "number": 5757,
  "title": "Add support for NuGet restore / assets file reading to MSBuild",
  "body": "Support for NuGet PackageReference restore and build is currently spread across NuGet.targets and the .NET SDK.  This prevents non .NET projects from supporting NuGet PackageReference.\r\n\r\nWe would like to make NuGet PackageReference available to all MSBuild projects.  That includes the following:\r\n\r\n- Targets required to send data to NuGet (nomination)\r\n  - Mostly works, apart from setting assets file path\r\n- Targets required to make restore work from the command line - these already seem to be imported from common targets\r\n- Targets required to make dependency node work\r\n  - Read data from assets file and return dependencies (now only top-level dependencies)\r\n- Targets required to make build work\r\n  - Reading assets file, create appropriate items (ie Content) from assets file\r\n",
  "state": "OPEN",
  "createdAt": "2020-09-29T01:20:20Z",
  "updatedAt": "2024-01-31T08:22:56Z",
  "closedAt": null,
  "author": {
    "login": "dsplaisted"
  },
  "labels": [
    "needs-design",
    "Partner request",
    "For consideration",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "VSNext"
  },
  "comments": {
    "nodes": [
      {
        "body": "+1. I have an `msbuild` project which uses `ProjectReference` with a NuGet package that includes MSBuild targets/props such as:\r\n\r\n- [Azure.Bicep.MSBuild](https://www.nuget.org/packages/Azure.Bicep.MSBuild)\r\n- Microsoft.TypeSpec.MSBuild\r\n\r\nand which isn't a .NET project, nor produces any binary assets, but JSON. \r\n\r\nCurrently the experience in VS is poor: when the packages are restored, the package isn't included into `project.assets.json`, nor its target/props into the build process. Unlike `dotnet restore` where it works correctly.",
        "createdAt": "2023-05-19T19:23:39Z",
        "updatedAt": "2023-05-19T19:33:08Z",
        "author": {
          "login": "abatishchev"
        }
      }
    ]
  }
}