{
  "number": 1382,
  "title": "Fix mono build: Update msbuild used to bootstrap",
  "body": "The current [build](https://github.com/Microsoft/msbuild/releases/download/mono-hosted-msbuild-v0.2/mono_msbuild_bootstrap_5e01f07.zip) being used to bootstrap does not support `$(MSBuildRuntimeType) == Mono`, which breaks mono builds.\r\n\r\nI have an existing [build](https://github.com/radical/msbuild/releases/tag/v0.03) that works, but that is from April.",
  "state": "CLOSED",
  "createdAt": "2016-11-22T18:39:31Z",
  "updatedAt": "2024-02-21T17:24:05Z",
  "closedAt": "2016-12-14T21:49:08Z",
  "author": {
    "login": "radical"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@rainersigwald @AndyGerlicher ",
        "createdAt": "2016-11-22T18:56:36Z",
        "updatedAt": "2016-11-22T18:56:36Z",
        "author": {
          "login": "Sarabeth-Jaffe-Microsoft"
        }
      },
      {
        "body": "@radical Is the [build](https://github.com/radical/msbuild/releases/tag/v0.03) you mentioned up to date? I can just upload that to our main repo releases and change cibuild.cmd to point to the new address.",
        "createdAt": "2016-12-02T00:06:00Z",
        "updatedAt": "2016-12-02T00:06:23Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "@cdmihai No, it is an old build in fact. The current xplat does not build with mono, but I can build it locally with a hack. So, I will upload a new .zip with it.",
        "createdAt": "2016-12-05T16:28:59Z",
        "updatedAt": "2016-12-05T16:28:59Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "As far as I knew, the xplat branch can build three msbuild flavors, and each flavor requires a different bootstrap msbuild:\r\n- the Full Framework flavor requires VS MSBuild, discovereable via the VS developer command console\r\n- the .Net Core msbuild brings down a .net core bootstrap msbuild via the [build tools](https://github.com/dotnet/buildtools/blob/72f7b5203c81b0cfb63d3fdc60b3351462d1a809/src/Microsoft.DotNet.Build.Tasks/PackageFiles/tool-runtime/project.json#L5-L10) nuget package\r\n- the Mono flavor requires a Mono bootstrapped MSBuild which we currently keep in a [zip file](https://github.com/Microsoft/msbuild/releases/tag/mono-hosted-msbuild-v0.2) in our Github repo\r\n\r\nAre you saying that the Mono flavor no longer requires the Mono bootstrap msbuild?",
        "createdAt": "2016-12-06T00:19:24Z",
        "updatedAt": "2016-12-06T00:20:32Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "I think @radical is saying that the Mono flavor cannot currently be built with the old Mono bootstrapper. Plus I think there's another issue that was being chased down.\r\n\r\nHowever, I can build the Mono flavor with desktop MSBuild--it'd be pretty great if we could get the bootstrap zip built that way and have it be less of a special snowflake! I have a patched private official build that builds Mono and copies the results to a share, but I haven't tried zipping it up and using it as the bootstrapper yet.",
        "createdAt": "2016-12-06T04:19:45Z",
        "updatedAt": "2016-12-06T04:19:45Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Yeah, xplat cannot be built with the current Mono bootstrapper.\r\n\r\nAnd the second issue is when referencing `System.Secuirty.Principal.Windows` in `src/XMakeTasks/UnitTests/project.json`, we end up with two references to the same \"reference\" assembly being passed to the compiler. And mcs seems to fail on that (https://bugzilla.xamarin.com/show_bug.cgi?id=49139), whereas csc works.",
        "createdAt": "2016-12-06T19:13:27Z",
        "updatedAt": "2016-12-06T19:13:27Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "Could we please use the build from my repo [here](https://github.com/radical/msbuild/releases/tag/v0.03) to releases here? This and the PR #1462, would fix the mono build and then we can enable the mono CI. This can be a temporary thing and whenever we have a official build, like Rainer [mentioned](https://github.com/Microsoft/msbuild/issues/1382#issuecomment-265056791), then we can change this.",
        "createdAt": "2016-12-14T17:13:40Z",
        "updatedAt": "2016-12-14T17:13:40Z",
        "author": {
          "login": "radical"
        }
      },
      {
        "body": "Copied it: https://github.com/Microsoft/msbuild/releases/tag/mono-hosted-msbuild-v0.03\r\n\r\nI think you have to update the download URL in the cibuild.sh script right?",
        "createdAt": "2016-12-14T19:29:06Z",
        "updatedAt": "2016-12-14T19:29:06Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "Awesome, thank you! Yes, I have opened PR #1480 to update cibuild.sh .",
        "createdAt": "2016-12-14T20:46:44Z",
        "updatedAt": "2016-12-14T20:46:44Z",
        "author": {
          "login": "radical"
        }
      }
    ]
  }
}