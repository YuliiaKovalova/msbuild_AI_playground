{
  "number": 1984,
  "title": "Resources File in .NET Standard (1.4) with New csproj",
  "body": "I'm developing an application targeting .NET Standard 1.4, using the new csproj style (not project.json), and trying to get a localizable resources file to become available throughout the project.\r\n\r\nI get compiler errors when including a resources file currently, similar to 'Resources' does not contain a definition for 'X'\r\n\r\nThe csproj automatically includes the resources file as follows:\r\n\r\n    <ItemGroup>\r\n        <Compile Update=\"Resources.Designer.cs\">\r\n            <DesignTime>True</DesignTime>\r\n            <AutoGen>True</AutoGen>\r\n            <DependentUpon>Resources.resx</DependentUpon>\r\n        </Compile>\r\n    </ItemGroup>\r\n\r\n    <ItemGroup>\r\n        <EmbeddedResource Update=\"Resources.resx\">\r\n            <Generator>ResXFileCodeGenerator</Generator>\r\n            <LastGenOutput>Resources.Designer.cs</LastGenOutput>\r\n        </EmbeddedResource>\r\n    </ItemGroup>\r\nDid it miss a step in the generation? Why can't I access any of the members of my resources file throughout the assembly?\r\n\r\nhttp://stackoverflow.com/questions/43454441/resources-file-in-net-standard-1-4-with-new-csproj",
  "state": "OPEN",
  "createdAt": "2017-04-17T17:13:08Z",
  "updatedAt": "2024-02-21T16:36:58Z",
  "closedAt": null,
  "author": {
    "login": "tarekgh"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "https://github.com/dotnet/corefx/issues/18490",
        "createdAt": "2017-04-17T17:13:29Z",
        "updatedAt": "2017-04-17T17:13:29Z",
        "author": {
          "login": "tarekgh"
        }
      },
      {
        "body": "CC @dagrooms52",
        "createdAt": "2017-04-17T17:13:44Z",
        "updatedAt": "2017-04-17T17:13:44Z",
        "author": {
          "login": "tarekgh"
        }
      },
      {
        "body": "Thanks for moving this @tarekgh \r\nAs you can see in the [stackoverflow link](http://stackoverflow.com/questions/43454441/resources-file-in-net-standard-1-4-with-new-csproj), I am working around this by using `Resources.ResourceManager.GetString(\"MyResource\")`.\r\n\r\nCreating a new project and recreating this scenario caused an intellisense error, but not a build error, so I was able to run the code; it is a real build error in my main project however, so I'm stuck with the workaround.",
        "createdAt": "2017-04-17T17:19:04Z",
        "updatedAt": "2017-04-17T17:19:17Z",
        "author": {
          "login": "dagrooms52"
        }
      },
      {
        "body": "I just tried it in a sample solution inside Visual Studio 2017 15.1 (26403.3) and it works normally as expected. I first get the intellisense error but after waiting for a few seconds (and maybe also opening the Resource.Designer.cs file) the error disappears. Seems fine",
        "createdAt": "2017-04-17T17:25:38Z",
        "updatedAt": "2017-04-17T17:25:38Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "@dagrooms52 Can you be more specific about what you're doing and the error you see?\r\n\r\nPossibly related: https://github.com/dotnet/sdk/issues/895.",
        "createdAt": "2017-04-17T17:30:48Z",
        "updatedAt": "2017-04-17T17:30:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald \r\nWhen my repo was targeting PCL, we would access resources as a property on the resource class, e.g. `Resources.Resource1`. Since upgrading the repo to .NET Standard, this causes a compiler error. The members of the `Resources.resx` file are not propagated out to the `Resources.Designer.cs` class to be used as compile-time fields or properties. The class itself is accessible, but the resource members in it are only accessible through `Resources.ResourceManager.GetString(\"Resource1\")`. I would prefer the compile-time properties to be available (run-time vs. compile-time errors being the main reason).\r\n\r\nHaving `Resources.Resource1` gives `error CS0117: 'Resources' does not contain a definition for 'Resource1'` as a build error.",
        "createdAt": "2017-04-17T17:42:01Z",
        "updatedAt": "2017-04-17T17:42:15Z",
        "author": {
          "login": "dagrooms52"
        }
      },
      {
        "body": "@dagrooms52 which version of VS17 are you using? As I wrote above, I don't get any errors, the resources are propagated into Resources.Designer.cs. Do you have a repro solution?",
        "createdAt": "2017-04-17T18:45:40Z",
        "updatedAt": "2017-04-17T18:46:15Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "I'm currently using Version 15.1 (26403.3). I have a separate solution giving me an intellisense error but not a build error. So either the repro is fragile, or my main project affects the repro in some mysterious way.",
        "createdAt": "2017-04-17T18:57:12Z",
        "updatedAt": "2017-04-17T18:58:30Z",
        "author": {
          "login": "dagrooms52"
        }
      },
      {
        "body": "Weird behavior. If you create an empty sample solution (see below), are you still facing the error?\r\n\r\n1. Create a netstandard1.4 solution inside Visual Studio 2017\r\n2. Add a new resource via Add New Item --> General --> Resource, e.g. called Resource1.resx\r\n3. Add a string called e.g. test1\r\n4. Verify if Resource1.Designer.resx got updated with the new property.\r\n5. Try to access the string via \"Resource1.test1\".",
        "createdAt": "2017-04-17T20:22:45Z",
        "updatedAt": "2017-04-17T20:22:45Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "That works after refreshing VS, I think my problem may originate from copying xml from a PCL resource file into this new resource file. Looks like I'll be copying them out by hand, maybe I'll write a generator if there are too many.\r\n@tarekgh can close.",
        "createdAt": "2017-04-17T21:10:07Z",
        "updatedAt": "2017-04-17T21:10:07Z",
        "author": {
          "login": "dagrooms52"
        }
      },
      {
        "body": "That's even more obscure. The ResX Schema version 2.0 hasn't changed from PCL to netstandard class libraries. I just created a PCL assembly with a resx and made a diff against that from netstandard and they are completely identical. Maybe your Resx file wasn't a 2.0 file?",
        "createdAt": "2017-04-17T21:24:50Z",
        "updatedAt": "2017-04-17T21:24:50Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "I used the same method of creation in both cases; thought it was weird that you can only make a resources file through `Add New Item` -> `Apple`-> `Resources File`. It works in a fresh solution with new members added to the designer, but not in an existing solution when pasting existing resources xml.",
        "createdAt": "2017-04-17T22:44:37Z",
        "updatedAt": "2017-04-17T22:44:37Z",
        "author": {
          "login": "dagrooms52"
        }
      },
      {
        "body": "Chalk this one up to a noob not knowing how resource files work - the C# file is generated **after editing** the .resx file, not as a build step. Since I pasted all the xml I wanted and didn't do any edits in the actual .resx file, I never got a C# file generated. Once I edit to add a test resource, it generates the full class.",
        "createdAt": "2017-04-18T15:36:34Z",
        "updatedAt": "2017-04-18T15:36:34Z",
        "author": {
          "login": "dagrooms52"
        }
      },
      {
        "body": "closing it as it looks resolved.",
        "createdAt": "2017-04-18T15:41:38Z",
        "updatedAt": "2017-04-18T15:41:38Z",
        "author": {
          "login": "tarekgh"
        }
      },
      {
        "body": "@dagrooms52 that makes sense! Thanks for providing the cause and the solution for your issue. Someone might appreciate it when he/she finds the thread \ud83d\udc4d ",
        "createdAt": "2017-04-19T11:42:28Z",
        "updatedAt": "2017-04-19T11:42:28Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "@tarekgh Does occur in 15.3.0 in a 1.4 .NET standard PCL project. If you add entries to a .resx-file (new project), it sometimes works immediately after using the table and saving, sometimes via Add Resource > Add New String and saving. But most of the times it doesn't work and I have to restart Visual Studio to see the changes in intellisense. This also applies to deleting or modifying entries.",
        "createdAt": "2017-08-24T07:17:49Z",
        "updatedAt": "2017-08-24T07:17:49Z",
        "author": {
          "login": "siebigteroth"
        }
      },
      {
        "body": "@rainersigwald could you please have a look? I'll reopen the issue till we have a resolution. Thanks.",
        "createdAt": "2017-08-24T16:08:50Z",
        "updatedAt": "2017-08-24T16:08:50Z",
        "author": {
          "login": "tarekgh"
        }
      },
      {
        "body": "I _was_ just experiencing this issue in a .NET Standard 1.6 project: I used the Resources Designer UI to add a few new strings to an existing Resources.resx file. The strings were correctly added to the XML, but nothing I tried would cause Visual Studio to regenerate the Resources.Designer.cs file, so I couldn't actually use the resource strings anywhere in my project.\r\n\r\nThen I went back to the UI, and I noticed that the Access Modifier said \"(Custom)\". Changed that to Public, and suddenly I was back in business.",
        "createdAt": "2018-09-28T16:16:56Z",
        "updatedAt": "2018-09-28T16:16:56Z",
        "author": {
          "login": "brianjlacy"
        }
      },
      {
        "body": "Ran into this with a .NET Standard 2.0 project on the latest VS 2k19 preview. I added a new resource file via the standard menus, and then copy+pasted the resources I wanted into the resx designer. Just like with @brianjlacy it said \"(Custom)\" for the access modifier and I had to change it to Internal to make it work. However, the odd bit was the resources did not show up and I had to re-copy+paste them into the resx file.",
        "createdAt": "2020-07-13T16:59:09Z",
        "updatedAt": "2020-07-13T16:59:09Z",
        "author": {
          "login": "watfordgnf"
        }
      }
    ]
  }
}