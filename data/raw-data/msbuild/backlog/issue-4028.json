{
  "number": 4028,
  "title": "Custom property function assembly location",
  "body": "When I will use a property function in a custom assembly, where should I place the assembly that .NET Core and MSBuild will find it?\r\n\r\nThe static class:\r\n```cs\r\nnamespace DotNet.Build.Common\r\n{\r\n    public static class ConfigUtilities\r\n    {\r\n        public static string WriteConfigPropsFile(string filePath)\r\n        {\r\n            return $\"Hello from {nameof(ConfigUtilities)}::{nameof(WriteConfigPropsFile)}: {filePath}\";\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe default .NET Standard project file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <SignAssembly>true</SignAssembly>\r\n    <DelaySign>false</DelaySign>\r\n    <AssemblyOriginatorKeyFile>DotNet.Build.Common.snk</AssemblyOriginatorKeyFile>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nThen register the assembly in the GAC:\r\n> Q: Exists a better, portable, location where the assembly can be stored?\r\n```powershell\r\ngacutil.exe -i DotNet.Build.Common.dll\r\n```\r\n\r\n## Use the new property function:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project DefaultTargets=\"Execute\">\r\n\r\n  <PropertyGroup>\r\n    <_TestVariable>$([DotNet.Build.Common.ConfigUtilities, DotNet.Build.Common, Version=42.42.42.0, Culture=neutral, PublicKeyToken=d6811ab7c1c33a7c]::WriteConfigPropsFile(\"Hallo\"))</_TestVariable>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"Execute\">\r\n    <Error Text=\"_TestVariable: $(_TestVariable)\" />\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n\r\n## Execute\r\n```powershell\r\ndotnet.exe build project.proj\r\nand/or\r\nmsbuild.exe msbuild project.proj\r\n```\r\n\r\n## Result:\r\n```\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.IO.FileLoadException: The given assembly name or codebase was invalid. (Exception from HRESULT: 0x80131047)\r\n   at System.Reflection.AssemblyName.nInit(RuntimeAssembly& assembly, Boolean raiseResolveEvent)\r\n   at System.Reflection.AssemblyName..ctor(String assemblyName)\r\n   at Microsoft.Build.Evaluation.Expander`2.Function`1.GetTypeFromAssembly(String typeName, String candidateAssemblyName)\r\n   at Microsoft.Build.Evaluation.Expander`2.Function`1.GetTypeFromAssemblyUsingNamespace(String typeName)\r\n   at Microsoft.Build.Evaluation.Expander`2.Function`1.GetTypeForStaticMethod(String typeName, String simpleMethodName)\r\n   at Microsoft.Build.Evaluation.Expander`2.Function`1.ExtractPropertyFunction(String expressionFunction, IElementLocation elementLocation, Object propertyValue, UsedUninitializedProperties usedUnInitializedProperties, IFileSystem fileSystem)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertyBody(String propertyBody, Object propertyValue, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties, IFileSystem fileSystem)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertiesLeaveTypedAndEscaped(String expression, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties, IFileSystem fileSystem)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertiesLeaveEscaped(String expression, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties, IFileSystem fileSystem)\r\n   at Microsoft.Build.Evaluation.Expander`2.ExpandIntoStringLeaveEscaped(String expression, ExpanderOptions options, IElementLocation elementLocation)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluatePropertyElement(ProjectPropertyElement propertyElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluatePropertyGroupElement(ProjectPropertyGroupElement propertyGroupElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext)\r\n   at Microsoft.Build.Execution.ProjectInstance.Initialize(ProjectRootElement xml, IDictionary`2 globalProperties, String explicitToolsVersion, String explicitSubToolsetVersion, Int32 visualStudioVersionFromSolution, BuildParameters buildParameters, ILoggingService loggingService, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, Nullable`1 projectLoadSettings)\r\n   at Microsoft.Build.Execution.ProjectInstance..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, BuildParameters buildParameters, ILoggingService loggingService, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, Nullable`1 projectLoadSettings)\r\n   at Microsoft.Build.BackEnd.RequestBuilder.LoadProjectFromFile()\r\n   at Microsoft.Build.BackEnd.BuildRequestConfiguration.InitializeProject(BuildParameters buildParameters, Func`1 loadProjectFromFile)\r\n   at Microsoft.Build.BackEnd.RequestBuilder.LoadProjectIntoConfiguration()\r\n   at Microsoft.Build.BackEnd.RequestBuilder.BuildProject()\r\n   at Microsoft.Build.BackEnd.RequestBuilder.BuildAndReport()\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.IO.FileLoadException: The given assembly name or codebase was invalid. (Exception from HRESULT: 0x80131047)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine)\r\n\r\nUnhandled Exception: System.IO.FileLoadException: The given assembly name or codebase was invalid. (Exception from HRESULT: 0x80131047)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args)\r\n```",
  "state": "CLOSED",
  "createdAt": "2018-12-23T16:49:27Z",
  "updatedAt": "2024-02-21T17:09:57Z",
  "closedAt": "2023-12-19T09:43:16Z",
  "author": {
    "login": "DoCode"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "## Update 1\r\nI found, that after the GAC registration the local installed MSBuild (VS developer prompt) instance found the assembly and the property function worked.\r\n\r\n**So, the question is, why a `dotnet msbuild` doesn't worked!?**  \r\nWhy doesn't pick up the `msbuild.dll` no libraries when I place this in e.g. `C:\\Program Files\\dotnet\\sdk\\2.2.101`?",
        "createdAt": "2018-12-23T22:47:19Z",
        "updatedAt": "2018-12-23T23:03:23Z",
        "author": {
          "login": "DoCode"
        }
      },
      {
        "body": "## Update 2 (msbuild.exe)\r\n**It worked also when I place the assembly to e.g.`C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin` without GAC registration!**",
        "createdAt": "2018-12-23T23:12:03Z",
        "updatedAt": "2018-12-23T23:12:35Z",
        "author": {
          "login": "DoCode"
        }
      },
      {
        "body": "### Update 3 (dotnet.exe msbuild)\r\nSo this worked also, when I place the library inside e.g. `C:\\Program Files\\dotnet\\sdk\\2.2.101` **AND** add the `SDK` tag on the `Project` attribute:\r\n```xml\r\n<Project SDK=\"Microsoft.Build.NoTargets/1.0.40\" DefaultTargets=\"Execute\">\r\n...\r\n```\r\n\r\n**So, what can we do, to deploy this assemblies at a location outside from `C:\\Program Files` or `C:\\Program Files (x86)` that MSBuild could load it?**",
        "createdAt": "2018-12-24T00:38:10Z",
        "updatedAt": "2018-12-24T00:38:10Z",
        "author": {
          "login": "DoCode"
        }
      },
      {
        "body": "Only the [documented property functions](https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2017) are supported; there's no (intentional) extensibility mechanism to add your own. Honestly, I consider it a bug that it works for a GACed type with a fully-qualified name.\r\n\r\nMSBuild is intended to be extended via custom targets and tasks. Can you convert this code to be a task instead?",
        "createdAt": "2019-01-03T17:52:35Z",
        "updatedAt": "2019-01-03T17:52:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "It's not a bug. It's an actual undocumented feature from .NET Framework 4 days. I remember that I have read it older blog when it was introduced. It was God send. I still have some of the snippets and files from those days.",
        "createdAt": "2023-12-19T23:16:45Z",
        "updatedAt": "2023-12-19T23:16:45Z",
        "author": {
          "login": "Nirmal4G"
        }
      },
      {
        "body": "> So, what can we do, to deploy this assemblies at a location outside from\u00a0`C:\\Program Files`\u00a0or\u00a0`C:\\Program Files (x86)`\u00a0that MSBuild could load it?\n\nWe could try Custom App/Assembly config for `MSBuild.exe/dll` to check for assemblies in certain locations. But that's still a stretch.",
        "createdAt": "2023-12-19T23:22:40Z",
        "updatedAt": "2023-12-19T23:22:40Z",
        "author": {
          "login": "Nirmal4G"
        }
      }
    ]
  }
}