{
  "number": 9011,
  "title": "[Bug]: publish copies DLL config files",
  "body": "### Issue Description\n\n`dotnet publish` copies config files from dependent libraries instead of just the config files from the published app.\n\n### Steps to Reproduce\n\n1. Create a class library (ClassLibrary1) and add an `app.config` file (Build Action: \"None\", Copy to Output Directory: \"Do not copy\").\r\n2. Create a console app and reference the class library.\r\n3. Run `dotnet publish -c Release` or `msbuild -t:publish -p:Configuration=Release` on the console project\r\n\n\n### Expected Behavior\n\nOnly config files for the published app are copied.\n\n### Actual Behavior\n\nClassLibrary1.dll.config is published.\n\n### Analysis\n\nAs I understand it, those config files, by default, are ignored. So, why are they there?\n\n### Versions & Configurations\n\n\u276f msbuild --version\r\nMSBuild version 17.6.3+07e294721 for .NET Framework\r\n17.6.3.22601\r\n\r\n\u276f dotnet --version\r\n8.0.100-preview.4.23260.5\r\n\r\n[PublishConfig.zip](https://github.com/dotnet/msbuild/files/12017592/PublishConfig.zip)\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2023-07-11T17:50:57Z",
  "updatedAt": "2024-02-21T14:04:21Z",
  "closedAt": "2023-07-21T15:50:45Z",
  "author": {
    "login": "MisinformedDNA"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team triage: This is by design. If one has some file associated with dll, it is a reasonable default is to bring it along during publish. If some configuration file was created by a developer, it is probably because it is going to be used, so we need to bring it. Also, `app.config` files were important for .NET framework, so there are plenty of libraries that would not work without it.",
        "createdAt": "2023-07-21T15:50:45Z",
        "updatedAt": "2023-07-21T15:50:45Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "> If some configuration file was created by a developer, it is probably because it is going to be used\n\nIIRC, when I add a Windows Communication Foundation (WCF) service reference to a class library project that targets .NET Framework, Visual Studio adds an app.config file with WCF settings \u2014 even though WCF will try to read them from the exe config file only, and ignore the dll config file.  So this is one case in which such an unnecessary file can exist.\n\nFor a NUnit test project on .NET Framework, a dll config file makes sense, as NUnit can create an application domain for the tests and use that file as the config.  However, this use would not require the dll config file to be published with an exe project.",
        "createdAt": "2023-07-26T09:10:42Z",
        "updatedAt": "2023-07-26T09:10:42Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "> even though WCF will try to read them from the exe config file only, and ignore the dll config file\r\n\r\nThis is true for all .NET Framework code I've migrated to .NET (Core); all the extra config files are completely ignored. So, while publishing the config files might make sense for .NET Framework, I still don't see why they are published for .NET.\r\n\r\n\r\n\r\n",
        "createdAt": "2023-07-28T16:19:11Z",
        "updatedAt": "2023-07-28T16:19:11Z",
        "author": {
          "login": "MisinformedDNA"
        }
      }
    ]
  }
}