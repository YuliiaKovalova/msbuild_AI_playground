{
  "number": 2841,
  "title": "Build targets should facilitate assembly versioning without sacrificing incremental build",
  "body": "**Linked Issue**:\r\nhttps://github.com/dotnet/roslyn/issues/24053\r\n\r\n**Version Used**:\r\n15.5.180.51428\r\n\r\n**Existing Related Feature**:\r\n\r\nThe following line at the end of the `CoreCompile` target in the Roslyn repo's `Microsoft.[CSharp|VisualBasic].Core.targets` enables project file authors to configure a target to run if `CoreCompile` runs-- and not run if `CoreCompile` is skipped (e.g. because the output assembly is already up-to-date with respect to the code). This is very helpful for actions that need to be performed only on newly-generated assemblies. And it relieves the project developer of having to mimic the `CoreCompile` target's `Input` and `Output` attributes and cope with their variance between versions.\r\n\r\n    <CallTarget Targets=\"$(TargetsTriggeredByCompilation)\" Condition=\"'$(TargetsTriggeredByCompilation)' != ''\"/>\r\n\r\n**Desired Feature**:\r\n\r\nA comparable `TargetsTriggeredBeforeCompilation` property (or similar mechanism) that is acted on before the `Csc` task runs would be invaluable for use cases such as updating assembly attributes in code.\r\n  ",
  "state": "OPEN",
  "createdAt": "2018-01-04T20:48:34Z",
  "updatedAt": "2024-02-21T16:35:08Z",
  "closedAt": null,
  "author": {
    "login": "Adam-S-Daniel"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Cross-posting PR with proposed additions to address this.\r\n\r\nhttps://github.com/dotnet/roslyn/pull/29671 _Support TargetsTriggeredBeforeCompilation in CSharp and VB_",
        "createdAt": "2018-09-05T20:35:10Z",
        "updatedAt": "2018-09-05T20:35:10Z",
        "author": {
          "login": "Adam-S-Daniel"
        }
      }
    ]
  }
}