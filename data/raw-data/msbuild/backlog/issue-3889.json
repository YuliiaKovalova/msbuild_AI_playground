{
  "number": 3889,
  "title": "Glob Caching should reuse results from multiple relative globs that resolve to the same directory",
  "body": "Given\r\n\r\n```\r\n+---g\r\n|       a.cs\r\n|\r\n\\---proj\r\n    +---a\r\n    |       a.proj\r\n    |\r\n    \\---b\r\n        \\---c\r\n                c.proj\r\n```\r\n\r\nwhere\r\n\r\na.proj=\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <Foo Include=\"..\\..\\g\\*.cs\" />\r\n  </ItemGroup>\r\n  <Target Name=\"Build\">\r\n    <Message Importance=\"High\" Text=\"$(MSBuildThisFile): @(Foo)\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nc.proj=\r\n```xml\r\n<Project>\r\n  <ItemGroup>\r\n    <Foo Include=\"..\\..\\..\\g\\*.cs\" />\r\n  </ItemGroup>\r\n  <Target Name=\"Build\">\r\n    <Message Importance=\"High\" Text=\"$(MSBuildThisFile): @(Foo)\" />\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nWhen glob caching is enabled (either by setting `MsBuildCacheFileEnumerations` to 1 or programatically by using a shared [EvaluationContext](https://github.com/Microsoft/msbuild/blob/master/src/Build/Evaluation/Context/EvaluationContext.cs)), both globs should reuse the same cached value, as they're pointing to same directory.\r\n\r\nThe tricky part is that, as #3890 shows, msbuild glob expansion results are not fully qualified paths, but rather the glob expansion gets prepended with the fixed directory portion from the item string (e.g. globs like `../a/*.cs` expand to `../a/b/c.cs`). This means that if we were to relative globs pointing to the same directory, we need to be able to \"rebase\" the glob expansion to different fixed directory parts.",
  "state": "OPEN",
  "createdAt": "2018-10-29T20:14:46Z",
  "updatedAt": "2025-06-02T08:26:49Z",
  "closedAt": null,
  "author": {
    "login": "cdmihai"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "backlog",
    "Feature - Globbing",
    "Area: Performance",
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "> When glob caching is enabled (either by setting MsBuildCacheFileEnumerations to 1 or programatically by using a shared EvaluationContext)\r\n\r\n@cdmihai, in the current code `MsBuildCacheFileEnumerations` and shared `EvaluationContext` lead to two different cache implementations internally. The cache enabled by `MsBuildCacheFileEnumerations` has a comment saying:\r\n\r\n```C#\r\n// until Cloudbuild switches to EvaluationContext, we need to keep their dependence on global glob caching via an environment variable\r\n```\r\n\r\nDo you know if this is still in use?",
        "createdAt": "2021-06-16T14:37:09Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "CB switched to evaluation contexts, the [repo](https://dev.azure.com/mseng/Domino/_search?text=MSBuildCacheFileEnumerations&type=code&lp=code-Project&filters=ProjectFilters%7BDomino%7DRepositoryFilters%7BCloudBuild%7D&pageSize=25&includeFacets=false) does not contain references to `MsBuildCacheFileEnumerations `.\r\n\r\nThe only other user seems to be [nuget](https://github.com/NuGet/NuGet.Client/blob/f24bad0668193ce21a1db8cabd1ce95ba509c7f0/src/NuGet.Core/NuGet.Build.Tasks.Console/MSBuildFeatureFlags.cs#L26).",
        "createdAt": "2021-06-16T17:37:55Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  }
}