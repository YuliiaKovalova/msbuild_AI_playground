{
  "number": 9346,
  "title": "CopyUpToDateMarker path too long",
  "body": "\r\nreported by @olgaark:\r\n\r\n> We\u2019ve recently had to change the IntDir (IntermediateOutputPath) default value for some vc projects (which made it longer by 17 chars max) and now hitting \u201cCopyUpToDateMarker path too long\u201d problem in some of our tests.\r\n> \r\n> Bug 1900392: Unable to read the project file because the expression exceeds the OS max path limit\r\n> \r\n> The item is added in MSBuild\\Current\\Bin\\amd64\\Microsoft.Common.CurrentVersion.targets\r\n> \r\n>   <ItemGroup>\r\n>     <IntermediateAssembly Include=\"$(IntermediateOutputPath)$(TargetName)$(TargetExt)\"/>\r\n>     <FinalDocFile Include=\"@(DocFileItem->'$(OutDir)%(Filename)%(Extension)')\"/>\r\n>     <CopyUpToDateMarker Include=\"$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', '$(IntermediateOutputPath)', '$(MSBuildProjectFile).CopyComplete'))\" />\r\n>   </ItemGroup>\r\n> \r\n> So two questions:\r\n> 1.\tCan the path be shortened by using short(er) file name? $(MSBuildProjectFile) can be quite long and using it in other paths is often problematic. VC is currently using ShortProjectName in path\u2019s defaults. Can something similar or Windows short 8.3 file name be used in msbuild common targets for paths too?\r\n> 2.\tVC projects override GetTargetPathWithTargetPlatformMoniker target where it is used in the CurrentVersion.targets\u2019 implementation. Do we need to add it in the VC\u2019s override?\r\n> \r\n\r\nThe item in question: https://github.com/dotnet/msbuild/blob/main/src/Tasks/Microsoft.Common.CurrentVersion.targets#L392",
  "state": "CLOSED",
  "createdAt": "2023-10-19T06:58:30Z",
  "updatedAt": "2023-11-30T09:18:29Z",
  "closedAt": "2023-11-30T09:18:29Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "Partner request",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "MSBuild team triage: @drewnoakes Do you know of any reason we could not change this file name?",
        "createdAt": "2023-10-24T14:18:44Z",
        "updatedAt": "2023-10-24T14:18:44Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "I can't think of a technical reason not to change the name. The .NET Project System obtains the name via the `CopyUpToDateMarker` property, so will respond to any changes correctly.\r\n\r\nThat said, that approach is not a real fix. What component is hitting this limit, and can it be changed to support long paths properly?",
        "createdAt": "2023-11-01T22:28:37Z",
        "updatedAt": "2023-11-01T22:28:37Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "@drewnoakes Thank you for confirming.\r\nYes - this is a short/mid term workaround untill devenv onboards onto long path support.\r\nAt least I suppose the scenario where this is happening involves the in-proc MSBuild node in VS - is that correct @olgaark? ",
        "createdAt": "2023-11-02T07:00:25Z",
        "updatedAt": "2023-11-02T07:00:25Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Yes, this happens during evaluation, so project load in the IDE is affected. And yes, the proposed change is just to reduce the probability that people will hit the limit when long path are not supported.",
        "createdAt": "2023-11-02T07:43:52Z",
        "updatedAt": "2023-11-02T07:43:52Z",
        "author": {
          "login": "olgaark"
        }
      },
      {
        "body": "I'm wondering whether we can do this in reasonable and correct way.\r\nVC uses a `$(ProjectGuid)` to generate the short name: ([source](https://devdiv.visualstudio.com/DevDiv/_git/VS?path=/src/vc/projbld/CppTargets/MSVC/Microsoft.Cpp.MSVC.Toolset.Common.props&version=GBmain&line=25&lineEnd=29&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents)):\r\n\r\n```xml\r\n<PropertyGroup Condition =\"'$(ShortProjectName)' == '' and '$(ProjectName)' != '' and '$(ProjectGuid)' != ''\">\r\n    <ShortProjectName>$(ProjectName)</ShortProjectName>\r\n    <ShortProjectName Condition=\"'$(ProjectName.Length)' &gt; '16'\">$(ProjectName.Substring(0,8)).$(ProjectGuid.Substring(1,8))</ShortProjectName>\r\n</PropertyGroup>\r\n```\r\n\r\nHowever `ProjectGuid` is no longer required/generated with the CPS. Relaying only on the shortened filename (or even `MSBuildProjectName` in order to get rid at least of the extension) can lead to collisions - so we'd need something uniquifying. Content hash can come to the rescue, but it's unreasonable (perf impact).\r\n\r\nSo we can possbily shorten the marker in case the `ProjectGuid` exists - to remedy just the non-CPS cases - e.g. like this: https://github.com/dotnet/msbuild/pull/9387 - but it rather feels as a nonsystematic hack (what about CPS? What about `$(CleanFile)`, `$(SuggestedBindingRedirectsCacheFile)`, `@(CustomAdditionalCompileInputs )` etc.?)\r\n\r\nThoughts on this @rainersigwald?",
        "createdAt": "2023-11-02T08:44:46Z",
        "updatedAt": "2023-11-02T08:44:46Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Within a solution, a max length project name prefix cannot be considered unique. Project names are often hierarchical and only differ at the end.",
        "createdAt": "2023-11-02T09:43:46Z",
        "updatedAt": "2023-11-02T09:43:46Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "> That said, that approach is not a real fix. What component is hitting this limit, and can it be changed to support long paths properly?\r\n\r\nIt's VS/`devenv.exe` itself, which is tracked by https://developercommunity.visualstudio.com/idea/351628/allow-building-running-and-debugging-a-net-applica.html",
        "createdAt": "2023-11-02T13:56:02Z",
        "updatedAt": "2023-11-02T13:56:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Within a solution, a max length project name prefix cannot be considered unique. Project names are often hierarchical and only differ at the end.\r\n\r\nCorrect.\r\nIn a presence of ProjectGuid it can be uniquidied by that. Without ProjectGuid it would not be shortened. (#9387)\r\nThat means we can fix the particular problem here (CopyUpToDateMarker path too long for VC project), but other scenarios (CPS, other obj metafiles etc.) are left untouched - so question is whether we want such a 'tactical' change",
        "createdAt": "2023-11-03T08:49:21Z",
        "updatedAt": "2023-11-03T08:49:21Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "It would be possible to generate a GUID by hashing the project name, when ProjectGuid is not defined.",
        "createdAt": "2023-11-03T09:34:40Z",
        "updatedAt": "2023-11-03T09:34:40Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      }
    ]
  }
}