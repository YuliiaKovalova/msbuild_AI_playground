{
  "number": 4912,
  "title": "Duplicate items error if using custom task with file globbing and metadata and culture specific resource file",
  "body": "When using the following combination\r\n\r\n- Custom Task (before PrepareForBuild) with globbing and metadata to include embedded resources\r\n- Additional culture specific resource files (eg `Resource.de.resx`)\r\n\r\nthe build fails with an duplicate items error.\r\n\r\nThe build works though if\r\n\r\n- the file globbing is specified without the custom task or\r\n- if the culture specific resource file (`Resource.de.resx`) is removed or\r\n- if no metadata is used (eg `LogicalFileName=\"a\"` instead of `LogicalFileName=\"%(FileName)%(Extension)\"`)\r\n\r\ndotnet build and Visual Studio are producing the same output.\r\n\r\nDon't know if this is a known limitation or just a bug?\r\n\r\n### Steps to reproduce\r\n\r\n```\r\ngit clone https://github.com/Dresel/FileGlobbingTargetResX.git\r\ndotnet build\r\n```\r\n\r\n### Expected  behavior\r\n\r\nBuild succeeds\r\n\r\n### Actual behavior\r\n\r\nBuild fails\r\n### Environment data\r\n\r\n`msbuild /version` output: Build Engine version 16.3.0+0f4c62fea for .NET Core\r\n\r\nOS info: Windows 10\r\n",
  "state": "CLOSED",
  "createdAt": "2019-11-13T08:39:06Z",
  "updatedAt": "2024-02-21T17:06:05Z",
  "closedAt": "2019-11-14T05:50:42Z",
  "author": {
    "login": "Dresel"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "I think you've hit #1053. I was able to work around it in your project like this:\r\n\r\n```diff\r\ndiff --git a/FileGlobbingTargetResX/FileGlobbingTargetResX.csproj b/FileGlobbingTargetResX/FileGlobbingTargetResX.csproj\r\nindex b8da198..019da32 100644\r\n--- a/FileGlobbingTargetResX/FileGlobbingTargetResX.csproj\r\n+++ b/FileGlobbingTargetResX/FileGlobbingTargetResX.csproj\r\n@@ -6,7 +6,10 @@\r\n \r\n   <Target Name=\"MyTask\" BeforeTargets=\"PrepareForBuild\">\r\n     <ItemGroup>\r\n-      <EmbeddedResource Include=\"..\\assets\\*.*\" LogicalFileName=\"%(FileName)%(Extension)\" />\r\n+      <EmbeddedResource Include=\"..\\assets\\*.*\" />\r\n+      <!-- Work around https://github.com/microsoft/msbuild/issues/1053:\r\n+           set this after item creation. -->\r\n+      <EmbeddedResource LogicalFileName=\"%(FileName)%(Extension)\" />\r\n     </ItemGroup>\r\n   </Target>\r\n \r\n```",
        "createdAt": "2019-11-13T15:31:18Z",
        "updatedAt": "2019-11-13T15:31:18Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Of course it's `LogicalName` but the behaviour is the same anyway.\r\n\r\nThanks for your time and letting me know the workaround, this works now as expected :thumbsup:",
        "createdAt": "2019-11-14T05:50:42Z",
        "updatedAt": "2019-11-14T05:50:42Z",
        "author": {
          "login": "Dresel"
        }
      },
      {
        "body": "Duplicate of #1053 ",
        "createdAt": "2019-11-14T17:02:19Z",
        "updatedAt": "2019-11-14T17:02:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "The workaround\r\n   \r\n    <EmbeddedResource LogicalName=\"%(FileName)%(Extension)\" />\r\n\r\nalso affects all other EmbeddedResource items. Is there an easy way to only modify those added by the include statement (`Include=\"..\\assets\\*.*\"`) above?",
        "createdAt": "2019-11-15T06:01:34Z",
        "updatedAt": "2019-11-15T06:01:34Z",
        "author": {
          "login": "Dresel"
        }
      },
      {
        "body": "Something like\r\n\r\n```xml\r\n      <EmbeddedResource Include=\"..\\assets\\*.*\" UpdateLogicalName=\"true\" />\r\n      <!-- Work around https://github.com/microsoft/msbuild/issues/1053:\r\n           set this after item creation. -->\r\n      <EmbeddedResource LogicalName=\"%(FileName)%(Extension)\"\r\n        Condition=\"'%(UpdateLogicalName)' == 'true'\" />\r\n\r\n```\r\n\r\nshould work for that (but I haven't confirmed it explicitly).",
        "createdAt": "2019-11-15T19:46:51Z",
        "updatedAt": "2019-11-15T19:46:51Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I got a compiler error to use `EmbeddedResource.UpdateLogicalName` but except for that it works now as expected (again) :smile: - thanks again.\r\n\r\nFinal csproj definition:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"MyTask\" BeforeTargets=\"PrepareForBuild\">\r\n    <ItemGroup>\r\n      <EmbeddedResource Include=\"..\\assets\\*.*\" UpdateLogicalName=\"true\" />\r\n      <!-- Work around https://github.com/microsoft/msbuild/issues/1053: set this after item creation. -->\r\n      <EmbeddedResource LogicalName=\"%(FileName)%(Extension)\" Condition=\"'%(EmbeddedResource.UpdateLogicalName)' == 'true'\" />\r\n    </ItemGroup>\r\n  </Target>\r\n\r\n</Project>\r\n```",
        "createdAt": "2019-11-18T07:40:46Z",
        "updatedAt": "2019-11-18T07:40:46Z",
        "author": {
          "login": "Dresel"
        }
      }
    ]
  }
}