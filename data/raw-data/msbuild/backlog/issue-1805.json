{
  "number": 1805,
  "title": "Disambiguate TargetFrameworkVersion and TargetFamework in help",
  "body": "(moved from dotnet/cli#5921)\r\n\r\nThe command line help suggests:\r\n\r\n```cmd\r\n:: v1.6 is .NET Standard TFM\r\ndotnet pack /p:TargetFrameworkVersion=v1.6 .\r\n```\r\n\r\nshould work, however it errors out. Whereas `TargetFramework` switch does work:\r\n\r\n```cmd\r\ndotnet pack /p:TargetFramework=v1.6 .\r\n```\r\n\r\nThe ask is to clarify the difference in help (perhaps with a core-specific example):\r\n\r\n```cmd\r\ndotnet msbuild -h\r\n[snip]\r\n        MSBuild MyApp.csproj /t:Clean\r\n                             /p:Configuration=Debug;TargetFrameworkVersion=v3.5\r\n::                                                   ^^^^^^^^^^  this one\r\n```",
  "state": "OPEN",
  "createdAt": "2017-03-07T06:42:51Z",
  "updatedAt": "2024-02-21T16:37:18Z",
  "closedAt": null,
  "author": {
    "login": "am11"
  },
  "labels": [
    "help wanted",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Oh, that _is_ confusing: one of the command-line examples given in [MSBuild's help](https://github.com/Microsoft/msbuild/blob/af0587665c448143579792638afa55f3499d6993/src/MSBuild/Resources/Strings.resx#L383) uses `TargetFrameworkVersion`, which was fine for non-Core Sdk projects building only for versions of the full framework, but is definitely confusing in the new world (and when passed out through `dotnet msbuild -h`, for example).\r\n\r\nI think the best thing to do is just not use TargetFramework{anything} in the example. It's useful to specify two properties to show the syntax for that, though. Maybe go fully generic and specify something like `EnableFeatureX=true`?",
        "createdAt": "2017-03-07T15:27:58Z",
        "updatedAt": "2017-03-07T15:27:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald, I agree that it should probably be a neutral property such as `EnableFeatureX=true` or perhaps even more templated form:\r\n\r\n```\r\n/p:Configuration=Debug;<key1>=<value1>;<key2>=<value2>\r\n```\r\n\r\nI tried to find some project-type-neutral property besides `Configuration` at https://msdn.microsoft.com/en-us/library/bb629394.aspx, but AFAIK -- as opposed what is documented there, `OutputPath` has no affect in `vcxproj`, whereas `OutDir` works there. Similarly `OutDir` is privately set in case of typical `csproj` and has no affect if we set it later (unless we re-invoke all the targets etc. - jeffkl/MSBuild-NetCore#2). So it's a no go. :(",
        "createdAt": "2017-03-07T16:18:10Z",
        "updatedAt": "2017-03-07T16:18:10Z",
        "author": {
          "login": "am11"
        }
      }
    ]
  }
}