{
  "number": 4070,
  "title": "Msbuild raise an error: The element <Import> beneath element <When> is unrecognized",
  "body": "Environment:\r\nMsbuild version 15.9.21\r\nVisual studio: Vs2017.9.2\r\n\r\nIn C# project using SDK style, I try to import props project based on condition using the following xml fragment:\r\n\r\n        <Project Sdk=\"Microsoft.NET.Sdk\">\r\n           <!-- No  <TargetFramework> element is defined, it's imported with Import Project element-->\r\n\r\n           <PropertyGroup>\r\n             <TargetId>abc</TargetId>\r\n             <OutputType>Exe</OutputType>\r\n            </PropertyGroup>\r\n\r\n      <Choose>\r\n        <When Condition=\"$(TargetId) == 'xyz'\">\r\n         <!-- it has <TargetFramework> element net45 -->\r\n          <Import Project=\"$(MSBuildThisFileDirectory)projectxyz.props\"/>    \r\n        </When>\r\n        <Otherwise>\r\n         <!-- it has <TargetFramework> element netcoreapp2.0-->\r\n          <Import Project=\"$(MSBuildThisFileDirectory)projectAbc.props\"/>\r\n        </Otherwise>\r\n      </Choose>\r\n\r\n      </Project>\r\n\r\nVs2017 fail to load the project with errors:\r\n\r\n    error  : The element <Import> beneath element <When> is unrecognized.   \r\n    error  : The element <Import> beneath element <Otherwise> is unrecognized.  \r\n\r\nThe documentation permit using Import with Choose. See the last line in the [note](https://docs.microsoft.com/en-us/visualstudio/msbuild/import-element-msbuild?view=vs-2017)\r\n\r\nWhat's I missed or wrong with this code?\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2019-01-13T19:16:20Z",
  "updatedAt": "2024-02-21T17:09:43Z",
  "closedAt": "2019-01-15T01:18:52Z",
  "author": {
    "login": "moh-hassan"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Looks like the documentation is wrong and putting an Import under a Choose has never been supported.\r\n\r\n```\r\ns:\\msbuild>C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe choose-import.proj\r\nMicrosoft (R) Build Engine version 4.7.3190.0\r\n[Microsoft .NET Framework, version 4.0.30319.42000]\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 1/14/2019 3:32:59 PM.\r\nProject \"s:\\msbuild\\choose-import.proj\" on node 1 (default targets).\r\ns:\\msbuild\\choose-import.proj(3,5): error MSB4067: The element <Import> beneath element <When> is unrecognized.\r\nDone Building Project \"s:\\msbuild\\choose-import.proj\" (default targets) -- FAILED.\r\n\r\n\r\nBuild FAILED.\r\n\r\n\"s:\\msbuild\\choose-import.proj\" (default target) (1) ->\r\n  s:\\msbuild\\choose-import.proj(3,5): error MSB4067: The element <Import> beneath element <When> is unrecognized.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.11\r\n\r\ns:\\msbuild>C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\MSBuild.exe choose-import.proj\r\nMicrosoft (R) Build Engine Version 2.0.50727.9031\r\n[Microsoft .NET Framework, Version 2.0.50727.9035]\r\nCopyright (C) Microsoft Corporation 2005. All rights reserved.\r\n\r\ns:\\msbuild\\choose-import.proj(5,7): error MSB4067: The element <Import> beneath element <When> is unrecognized.\r\n```\r\n\r\nI can't think of a good reason for this other than \"never got around to it\", but I also don't place a high priority on supporting it, since the alternative is pretty straightforward:\r\n\r\n```xml\r\n     <!-- it has <TargetFramework> element net45 -->\r\n      <Import Condition=\"$(TargetId) == 'xyz'\" Project=\"$(MSBuildThisFileDirectory)projectxyz.props\"/>    \r\n      <Import Condition=\"$(TargetId) != 'xyz'\"  Project=\"$(MSBuildThisFileDirectory)projectAbc.props\"/>\r\n```",
        "createdAt": "2019-01-14T21:39:06Z",
        "updatedAt": "2019-01-14T21:39:06Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for reply.\r\n\r\nI used the alternative\r\n\r\n      <!-- it has <TargetFramework> element net45 -->\r\n      <Import Condition=\"$(TargetId) == 'xyz'\" Project=\"$(MSBuildThisFileDirectory)projectxyz.props\"/>    \r\n      <Import Condition=\"$(TargetId) != 'xyz'\"  Project=\"$(MSBuildThisFileDirectory)projectAbc.props\"/>\r\n\r\nBut this  code is working fine if I run msbuild from commandLine:\r\n\r\n                msbuild myproject.cs  /t:build  /p:TargetId=xyz\r\n\r\nBut it's not working from within vs2017 IDE when  I click build.\r\n\r\nIt's noted in the [documentation](https://docs.microsoft.com/en-us/visualstudio/msbuild/import-element-msbuild?view=vs-2017)\r\n>While conditional import statements work in command-line MSBuilds, they do not work with MSBuild in the Visual Studio integrated development environment (IDE).\r\n\r\n",
        "createdAt": "2019-01-14T21:55:55Z",
        "updatedAt": "2019-01-14T22:28:21Z",
        "author": {
          "login": "moh-hassan"
        }
      },
      {
        "body": "Now it's working  :+1:  in vs 2017 ( i use vs2017.9.5 ) by using conditional import as you described.\r\n\r\nYou are correct, documentation is not valid (at least for vs2017.9.5)\r\n\r\nThanks for help and support.\r\n",
        "createdAt": "2019-01-14T22:28:10Z",
        "updatedAt": "2019-01-14T22:28:10Z",
        "author": {
          "login": "moh-hassan"
        }
      },
      {
        "body": "@moh-hassan would you mind filling an issue on microsoft/docs to fix the documentation?",
        "createdAt": "2019-01-15T01:18:45Z",
        "updatedAt": "2019-01-15T01:18:45Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "@livarcocc , I filled an [issue ](https://github.com/MicrosoftDocs/visualstudio-docs/issues/2210)on microsoft/docs to fix the documentation\r\n",
        "createdAt": "2019-01-15T01:40:40Z",
        "updatedAt": "2019-01-15T01:40:40Z",
        "author": {
          "login": "moh-hassan"
        }
      }
    ]
  }
}