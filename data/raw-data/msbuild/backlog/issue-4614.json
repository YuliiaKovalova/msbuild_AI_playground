{
  "number": 4614,
  "title": "[MONO] Path for external source file in inline task isn't resolved",
  "body": "### Steps to reproduce\r\nCreate an inline task with `UsingTask` and use an external file for the source code like this : \r\n\r\n`<Code Type=\"class\" Language=\"cs\" Source=\"..\\..\\mytasksource.cs\" />`\r\n\r\nThen call the task from MSBuild.exe in windows and MSBuild in linux\r\n\r\n### Expected  behavior\r\nOn `Microsoft (R) Build Engine version 16.2.37902+b5aaefc9f pour .NET Framework` (Win10)\\\r\nThe path to the source file is correctly resolved and everything is fine.\r\n\r\n### Actual behavior\r\nOn `Microsoft (R) Build Engine version 16.0.0.0 for Mono` (Ubuntu 18.04 + Mono 6.0)\r\nThe path to the source file is not resolved, it seems to be added to the current path without any combine operation.\r\nThis is the error I'm getting (edited for readability) :\r\n```\r\n/mnt/c/[...](435,5): error MSB4175: The task factory \"CodeTaskFactory\" could not be loaded \r\nfrom the assembly \"/usr/lib/mono/msbuild/Current/bin/Microsoft.Build.Tasks.Core.dll\". \r\nCould not find file \"/mnt/c/[--path to the csproj folder--]/..\\..\\mytasksource.cs\" \r\n[/mnt/c/[--path to the csproj folder--]/mycsproj.csproj]\r\n```\r\n\r\nEDIT : Note that if I place the \"mytasksource.cs\" file in the same folder as \"mycsproj.csproj\" and change my task definition to : \r\n`<Code Type=\"class\" Language=\"cs\" Source=\"mytasksource.cs\" />`\r\nthe task run fine on the mono MSBuild.\r\n\r\nAnd sorry if this is not the place for issues about the mono version of MSBuild.",
  "state": "CLOSED",
  "createdAt": "2019-08-13T19:52:52Z",
  "updatedAt": "2024-02-21T17:07:33Z",
  "closedAt": "2022-01-20T18:00:23Z",
  "author": {
    "login": "gotmachine"
  },
  "labels": [
    "Mono",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "@radical should this go into the mono/msbuild repo?",
        "createdAt": "2019-08-14T18:32:35Z",
        "updatedAt": "2019-08-14T18:32:35Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "@livarcocc mono/MSBuild doesn't have its own issue tracking at the moment.",
        "createdAt": "2019-08-14T18:39:28Z",
        "updatedAt": "2019-08-14T18:39:28Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@gotmachine One possible workaround to investigate: try using [`RoslynCodeTaskFactory`](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2019) instead of `CodeTaskFactory`.",
        "createdAt": "2019-08-14T18:40:57Z",
        "updatedAt": "2019-08-14T18:40:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks for the answers. I confirm that the problem also happen on OSX with mono.\r\n\r\nI would like to try the `RoslynCodeTaskFactory` workaround but I'm having trouble making it work. It seems the way to use it is by doing :\r\n\r\n`<UsingTask TaskName=\"UploadGitHubRelease\" TaskFactory=\"RoslynCodeTaskFactory\" AssemblyFile=\"$(MSBuildBinPath)\\Microsoft.Build.Tasks.Core.dll\" >`\r\n\r\nHowever (sorry for the unrelated question, but the documentation for all this is kinda sparse) when I do that it seems the references include...\r\n```\r\n<Task>\r\n  <Reference Include=\"System.Net.Http\" />\r\n  [...]\r\n  <Code Type=\"class\" Language=\"cs\" Source=\"$(UtilityPath)\\UploadGitHubRelease.cs\" />\r\n</Task>\r\n```\r\n... doesn't have access to the full framework. I'm getting a bunch of : \r\n\r\n`error MSB3755: cannot found \"System.Net.Http\".`\r\n\r\nHow do I use the RoslynCodeTaskFactory with (cross-platform) references to the full .NET framework ?\r\n\r\nEdit : I'm also getting a : \r\n`error MSB4175: Cannot load task factory \"RoslynCodeTaskFactory\" from [...]\\ Microsoft.Build.Tasks.Core.dll\". The task factory must return a value for the property \"\r\nTaskType\"` \r\n\r\nNote : `$(MSBuildBinPath)\\Microsoft.Build.Tasks.Core.dll` is present on my system.\r\n\r\nEdit2 :  Well I guess it's that issue : https://github.com/microsoft/msbuild/issues/3726\r\n\r\nEdit3 : Err, found the workaround, mentioned in https://github.com/microsoft/msbuild/issues/4390 : \r\n\r\nRemove the `<Reference Include=\"System.[*]\" />` when using RoslynCodeTaskFactory. These things (or at least more examples covering these topics) really should be mentioned here : [RoslynCodeTaskFactory MS docs](https://docs.microsoft.com/fr-fr/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2019)\r\n\r\nEdit4 : So, RoslynCodeTaskFactory works on windows, but not on linux. I'm getting `MSB3755: Could not find reference \"mscorlib\"` and same for error with with `netstandard`\r\n\r\n**tl;dr Can't test right now if using RoslynCodeTaskFactory resolves the initial issue, will update this when I do.**\r\n",
        "createdAt": "2019-08-17T09:40:44Z",
        "updatedAt": "2019-08-17T14:11:10Z",
        "author": {
          "login": "gotmachine"
        }
      },
      {
        "body": "Ok, can't make the class to run with `RoslynCodeTaskFactory` on mono, but anyway the error in my \"edit4\" comes after the path resolution error, so in definitive :  \r\n\r\nThe path specified in `<Code Source=\"..\\mycode.cs\" />` isn't resolved on Linux/OSX with MSBuild 16.0 for Mono 6.0, no matter if I use `RoslynCodeTaskFactory` or `CodeTaskFactory` . \r\n\r\nIt doesn't resolve the `..` and it doesn't convert the `\\` to `/`.",
        "createdAt": "2019-08-17T10:52:28Z",
        "updatedAt": "2019-08-18T17:51:09Z",
        "author": {
          "login": "gotmachine"
        }
      },
      {
        "body": "I just had the same problem. The workaround is to change all your `\\` to `/`  in the source path. Windows will correctly understand it (even if it's a mix of both `\\` and `/` in the same path), and Linux/Mono will see all forward-slashes and be happy.\r\nExample that worked for me:\r\n`<Code Type=\"Class\" Language=\"cs\" Source=\"$(MSBuildThisFileDirectory)..\\BuildTasks\\ConfigureFile\\ConfigureFile.cs\" />`\r\nbecame\r\n`<Code Type=\"Class\" Language=\"cs\" Source=\"$(MSBuildThisFileDirectory)../BuildTasks/ConfigureFile/ConfigureFile.cs\" /> `\r\nand I run this on Windows with Visual Studio 2019 16.5, and on Ubuntu 18.04 with Mono 5.12.\r\n",
        "createdAt": "2020-05-07T15:44:24Z",
        "updatedAt": "2020-05-07T15:44:24Z",
        "author": {
          "login": "RoguePointer80"
        }
      }
    ]
  }
}