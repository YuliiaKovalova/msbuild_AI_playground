{
  "number": 1924,
  "title": "When Directory contains 2 csproject files (a new one and a old one), NuGet thinks it's project.json",
  "body": "I've started to port my Software to NetStandart.\r\n\r\nFor this I've created a new csproj in the same directory. The new netstandart Project builds without problems in VS2017, but the 3 old Project files (wich are not modified), throw the following error:\r\n\r\n(ResolveNuGetPackageAssets target) -> \r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(197,5): error : Your project is not referencing the \".NETFramework,Version=v4.0\" framework. Add a reference to \".NETFramework,Version=v4.0\" in the \"frameworks\" section of your project.json, and then re-run NuGet restore. [C:\\projects\\migrator-net\\src\\Migrator.Framework\\DotNetProjects.Migrator.Framework.csproj]\r\n\r\n\r\nsee: https://ci.appveyor.com/project/jogibear9988/migrator-net/build/5.0.44\r\n\r\n\r\nThere is no project.json in my directory!\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2017-03-29T16:07:51Z",
  "updatedAt": "2024-02-21T17:20:16Z",
  "closedAt": "2017-04-26T15:57:47Z",
  "author": {
    "login": "jogibear9988"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I am having the exact same issue, is there a temporary solution for this?",
        "createdAt": "2017-04-26T04:07:26Z",
        "updatedAt": "2017-04-26T04:07:26Z",
        "author": {
          "login": "eallegretta"
        }
      },
      {
        "body": "I've found none. I removed the old projects and used also new csproj format for the old ones (but i changed target to net4.5)",
        "createdAt": "2017-04-26T05:13:30Z",
        "updatedAt": "2017-04-26T05:13:30Z",
        "author": {
          "login": "jogibear9988"
        }
      },
      {
        "body": "My problem is that the old project is 4.0 and cannot be changed, I'm actually trying to make the SyslogNet.Client project work as a netstandard library, but I was stopped by this random issue.\r\n\r\nI tried modifying the MSBuild path of the old project to a Visual Studio 2013 location but with no luck.",
        "createdAt": "2017-04-26T06:32:20Z",
        "updatedAt": "2017-04-26T06:32:20Z",
        "author": {
          "login": "eallegretta"
        }
      },
      {
        "body": "It looks like the problem is the existence of `obj\\project.assets.json` after the `.core` project builds. I was able to work around in the original repro by moving the new core projects `obj` directory to a distinct location. Since there was a project naming convention, I conditioned the move on that.\r\n\r\nI added a `Directory.Build.props` in the root of the repo that had this contents:\r\n\r\n```xml\r\n<Project>\r\n  <PropertyGroup Condition=\"$(MSBuildProjectName.Contains('.core'))\">\r\n    <BaseIntermediateOutputPath>obj_core\\</BaseIntermediateOutputPath>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n@eallegretta If you have a different convention you might need to alter the condition, but I expect that this would work for you too.\r\n\r\nI'll move this issue to the NuGet repo to see if there's a way to avoid hitting these problems, but in general it's a bit risky to share an intermediate-outputs directory among projects, so doing this split might be wise anyway.\r\n\r\nNote that you might want to add a new pattern to `.gitignore` since this no longer obeys the standard convention.",
        "createdAt": "2017-04-26T15:56:57Z",
        "updatedAt": "2017-04-26T15:56:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "This issue was moved to NuGet/Home#5126",
        "createdAt": "2017-04-26T15:57:46Z",
        "updatedAt": "2017-04-26T15:57:46Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}