{
  "number": 5050,
  "title": "MSBuild failures with Azure DevOps despite this build working locally. ",
  "body": "### Steps to reproduce\r\n\r\nSelecting a build for MSBuild and attempting to run a build as of now does not work as intended, the only thing I need to do is attempt running a build definition, but attempting to browse around there doesn't seem to be any real clear indication of why this would be happening. Browsing around and doing my own digging, the general consensus seems to indicate that this error primarily seems to be the result of having the wrong versions, but I have verified that my version is in fact the same as what I'm selected (unless latest somehow doesn't mean 16 here). \r\n\r\nThe error given clearly indicates that it is unable to see the version, but I can confirm that \r\n![Bug](https://user-images.githubusercontent.com/21269526/72289425-1acdd200-3619-11ea-87d8-2c50178f507c.PNG)\r\n\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Antlr\" version=\"3.5.0.2\" />\r\n    <PackageReference Include=\"bootstrap\" version=\"4.4.1\" />\r\n    <PackageReference Include=\"jQuery\" version=\"3.4.1\" />\r\n    <PackageReference Include=\"jQuery.Validation\" version=\"1.19.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNet.Mvc\" version=\"5.2.7\" />\r\n    <PackageReference Include=\"Microsoft.AspNet.Razor\" version=\"3.2.7\" />\r\n    <PackageReference Include=\"Microsoft.AspNet.TelemetryCorrelation\" version=\"1.0.7\" />\r\n    <PackageReference Include=\"Microsoft.AspNet.Web.Optimization\" version=\"1.1.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNet.WebPages\" version=\"3.2.7\" />\r\n    <PackageReference Include=\"Microsoft.CodeDom.Providers.DotNetCompilerPlatform\" version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.jQuery.Unobtrusive.Validation\" version=\"3.2.11\" />\r\n    <PackageReference Include=\"Microsoft.Net.Http\" version=\"2.2.29\" />\r\n    <PackageReference Include=\"Microsoft.Web.Infrastructure\" version=\"1.0.0.0\" />\r\n    <PackageReference Include=\"Modernizr\" version=\"2.8.3\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" version=\"12.0.3\" />\r\n    <PackageReference Include=\"System.Diagnostics.DiagnosticSource\" version=\"4.7.0\" />\r\n    <PackageReference Include=\"WebGrease\" version=\"1.6.0\" />\r\n  </ItemGroup>\r\n\r\n\r\n### Expected  behavior\r\nThe build to complete correctly as expected, as using Build Tools 2019, I can actually have a successful build run with MSBuild locally, \r\n\r\n### Actual behavior\r\nAn error that claims this isn't recognized. \r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n\r\n 16.4.0.56107 current version\r\n\r\nOS info:\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc): MSBuild. \r\n",
  "state": "CLOSED",
  "createdAt": "2020-01-13T23:01:44Z",
  "updatedAt": "2024-02-21T17:05:28Z",
  "closedAt": "2020-01-17T15:14:32Z",
  "author": {
    "login": "SliceofCheese"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Checking down the line, I tried \"Specify location\" instead of using the \"Version\" selection, and then proceeded to use the MSBuild.Exe (installed from the Build Tools 2019) from the target machine where the self-hosted agent was. From there, I was no longer having claims that \"version\" was no longer recognized. \r\n\r\nWhile I solved my problem, I think it means that the MSBuild : latest option may need to be investigated. ",
        "createdAt": "2020-01-17T15:14:32Z",
        "updatedAt": "2020-01-17T15:14:32Z",
        "author": {
          "login": "SliceofCheese"
        }
      }
    ]
  }
}