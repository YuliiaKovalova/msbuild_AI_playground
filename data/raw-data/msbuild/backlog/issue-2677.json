{
  "number": 2677,
  "title": "Optimize away separate evaluation for /restore when the restore didn't actually pull down new props/targets",
  "body": "We're moving the CLI's implicit restore over to using /restore. I was describing to @DustinCampbell how this will eliminate the need for two processes, but not the need for two evaluations. He pointed out that we don't always need two evaluations. \r\n\r\nCommon cases:\r\n* No nuget packages are referenced that pull in props/targets\r\n* Restore was incremental and did change the props/targets that were pulled down previously\r\n\r\nPerhaps the Restore target could return a value to indicate whether or not it invalidated the evaluation. If it indicates that no props/targets have changed, then we could reuse the same evaluation for build...\r\n\r\ncc @emgarten  @jeffkl @AndyGerlicher @davkean",
  "state": "CLOSED",
  "createdAt": "2017-10-26T22:38:01Z",
  "updatedAt": "2024-02-21T17:16:01Z",
  "closedAt": "2018-05-16T17:56:10Z",
  "author": {
    "login": "nguerrera"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.6"
  },
  "comments": {
    "nodes": [
      {
        "body": "This is a damn good idea. This would immediately save 400ms in our no-changes ~restore~ cli build.\r\n\r\n//cc @jainaashish",
        "createdAt": "2017-10-26T22:46:57Z",
        "updatedAt": "2017-10-27T22:47:58Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "It should be possible to find the last modified date of .nuget.g.props and .nuget.g.targets before restore and compare it to the modified date after restore. If they are the same then there haven't been any changes. \r\n\r\nRestore checks that something actually changed before modifying the props/targets. These files should also always exist, if they aren't there then the project is in a bad state.",
        "createdAt": "2017-10-30T22:36:23Z",
        "updatedAt": "2017-10-30T22:36:23Z",
        "author": {
          "login": "emgarten"
        }
      },
      {
        "body": "To do that we need to evaluate and know about stuff that only NuGet should know about. I'd prefer the restore target returning something.",
        "createdAt": "2017-10-30T22:43:06Z",
        "updatedAt": "2017-10-30T22:43:06Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@davkean that makes sense. Restore could return a RestoreResult item with metadata for the props/targets change status.\r\n\r\nI've opened https://github.com/NuGet/Home/issues/6122 to track the work for adding this to restore.",
        "createdAt": "2017-10-31T00:21:25Z",
        "updatedAt": "2017-10-31T00:21:25Z",
        "author": {
          "login": "emgarten"
        }
      },
      {
        "body": "Seems like fix is pending review from MSBuild team: https://github.com/NuGet/NuGet.Client/pull/1831.\r\n",
        "createdAt": "2017-12-31T20:03:41Z",
        "updatedAt": "2017-12-31T20:03:41Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "This can be closed now as it will not bring us the initially expected benefit, due to the fact that restore evaluation is with ExcludeRestorePackageImports=true.\r\n\r\nFor OrchardCore:\r\n\r\n/t:build /restore\r\nTime Elapsed 00:00:57.75\r\nTime Elapsed 00:00:58.31\r\n\r\n/t:restore,build\r\nTime Elapsed 00:00:57.81\r\nTime Elapsed 00:00:58.82\r\n  ",
        "createdAt": "2018-01-04T19:44:30Z",
        "updatedAt": "2018-01-04T19:44:38Z",
        "author": {
          "login": "nkolev92"
        }
      },
      {
        "body": "Agreed. @nguerrera?",
        "createdAt": "2018-05-16T11:11:21Z",
        "updatedAt": "2018-05-16T11:11:21Z",
        "author": {
          "login": "davkean"
        }
      }
    ]
  }
}