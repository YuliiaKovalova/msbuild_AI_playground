{
  "number": 11373,
  "title": "Investigate the need and impact of GC.Collect calls",
  "body": "### Context\n\nReported by @davkean:\n\n> 50% of builds [show](https://prism.vsdata.io/events/?eventType=CPU&query=tags%3Dttperfscenarios_solutionbuild%20c%3DCleanupcaches) MSBuild nodes [forcing a GC](https://github.com/dotnet/msbuild/blob/c456ec1b4fb865a15d569df5982aae6ae0fd9f82/src/Build/BackEnd/Node/OutOfProcNode.cs#L555) immediately after the build is done. At its worst case, this burned 3 cores for 3 seconds at a time that VS and the user think the build is done and VS is likely launching the app or user back to typing, so not really a good time to consume CPU.\nIn the few traces I looked at, these reduce memory by practically nothing, unnecessarily promotes, yet takes a long time. Those same sessions show they also have plenty of free physical memory. This GC.Collect should just be deleted and let the GC figure this out. I deleted all GC.Collect's from VS during Dev17 for the same reason.\n\n### Goal\n\nEvaluate the impact of keeping versus removing the forced collections (we most likely should not need those, as either the next build call is quickly following, or we'll have the nodes eventually die of anyways).",
  "state": "CLOSED",
  "createdAt": "2025-02-03T11:05:29Z",
  "updatedAt": "2025-05-07T09:04:08Z",
  "closedAt": "2025-05-07T09:04:08Z",
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "SimaTian"
      }
    ]
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "We \"only\" have two somewhat relevant GC calls, one of which is not active in the VS context.\n\nThe non-VS one has a further note, that it is only relevant if the available virtual memory is more than 80% used. This will basically never happen on a 64 bit machine. Since  `Environment.Is64BitOperatingSystem` is now avaliable, I've added it as a check to make sure we only ever enter the method if necessary since it claims to be expensive.\n\nThe VS one happens after every build during `CleanupCaches()`, so I've disabled it for now and I'm doing some basic benchmarking.\nFurthermore, I've set up both exp insertion and perf run - I'm not sure how much these will help, but VS exp insertion perf run does 5 iterations for every test so we might get some data there.\n\nMy local benchmarking was not conclusive, but it hinted at a possibility of a minor improvement or at least not a visible negative impact. I measured this across a combination of 20 warm Clean + Build iterations:\n| | gc disabled |    | gc enabled |    |\n| - |-------------|----|------------|----|\n| | 4.1487781   | 30.6822423 | 3.2581109  | 30.6603877   |\n| | 3.3716842   | 30.3468427 | 3.4254972  | 29.3656945 |\n| | 3.4220839   | 29.0992644 | 3.7310772  | 30.4994633 |\n| | 3.406554    | 29.7737295 | 3.4112107  | 29.5705854 |\n| | 3.405146    | 29.592099  | 5.510941   | 28.6216768   |\n| | 3.3639578   | 29.1226821 | 3.4890392  | 30.6202723 |\n| | 3.4327913   | 31.6590481 | 5.5401183  | 29.5968741 |\n| | 3.3459509   | 29.3844393 | 3.4317166  |30.0819025  |\n| | 3.2822478   | 29.7858807 | 3.4060015  | 30.2356223 |\n| | 3.3975031   | 36.0486432 | 3.5454756  | 29.4347119 |\n| | 3.3038509   | 29.6032158 | 3.5031321  | 29.273055  |\n| | 3.2668619   | 29.50267   | 3.4366552  | 29.3277456 |\n| | 3.3803563   | 29.3046353 | 3.3565061  |  45.5944443 |\n| | 3.311097    | 29.5859297 | 3.1481358  | 30.2630166 |\n| | 7.7700565   | 29.0870668 | 3.3397361  | 30.8623069 |\n| | 5.7358923   | 30.1917105 | 5.076788   | 30.4566219 |\n| | 3.2954268   | 29.1628913 | 4.7989839  | 29.7109536 |\n| | 3.8259684   | 30.9593578 | 3.4056747  | 29.8622837 |\n| | 3.3579713   | 29.4902311 | 3.4723606  | 30.3649512 |\n| | 4.6200064   | 29.357951  | 3.4125971  | 29.7903484 |\n| |-------------|----|------------|----|\n|sum| 76.4441849  | 601.7405306 | 75.6997578 | 614.192918 |\n|median| 3.3889297   | 29.58901435 | 3.4341859  | 29.9720931 |\n|mean| 3.822209245 | 30.08702653 | 3.78498789 | 30.7096459 |\n\nSince this is the case and we were told it causes the issues, I'm inklined to agree with the GC removal.\nI will wait for the perf and exp results and then submit a PR if there are no unexpected results. \n\n",
        "createdAt": "2025-03-18T12:08:47Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "VS perf tests have passed. I'm waiting for the perfstar result interpretation since these changed a bit.\nOverall I think it should be fine to make this change.",
        "createdAt": "2025-03-27T16:36:49Z",
        "author": {
          "login": "SimaTian"
        }
      },
      {
        "body": "No noticeable difference in a new perfstar run as well.",
        "createdAt": "2025-04-03T11:24:36Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "For some reason the tests are failing now. I will look into them.\n",
        "createdAt": "2025-05-02T11:37:36Z",
        "author": {
          "login": "SimaTian"
        }
      }
    ]
  }
}