{
  "number": 708,
  "title": "Support Item Metadata as Attributes",
  "body": "**This issue is in the open design phase and is a part of the [project.json -> csproj ](https://blogs.msdn.microsoft.com/dotnet/2016/05/23/changes-to-project-json/) conversion effort.**\r\n\r\nSupport (optional) terser syntax for specifying metadata on items. This could be useful in a scenario such as specifying a list of NuGet packages (purely as a hypothetical example):\r\n\r\n``` XML\r\n<ItemGroup>\r\n  <PackageReference Include=\"Newtonsoft.Json\">\r\n    <Version>9.0.1-beta1</Version>\r\n  </PackageReference>\r\n</ItemGroup>\r\n```\r\n\r\nWould become:\r\n\r\n``` XML\r\n<ItemGroup>\r\n  <PackageReference Include=\"Newtonsoft.Json\" Version=\"9.0.1-beta1\" />\r\n</ItemGroup>\r\n```\r\n\r\n~For compat reasons this could not be added to an existing file and only written if you opt-in to a new \"schema version\" (or whatever).~\r\n",
  "state": "CLOSED",
  "createdAt": "2016-06-17T23:45:29Z",
  "updatedAt": "2024-02-21T17:27:40Z",
  "closedAt": "2016-10-07T16:59:27Z",
  "author": {
    "login": "AndyGerlicher"
  },
  "labels": [
    "needs-design",
    "Feature - Project File Cleanup",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "dsplaisted"
      }
    ]
  },
  "milestone": {
    "title": "Visual Studio 15 RC"
  },
  "comments": {
    "nodes": [
      {
        "body": "In the construction APIs, metadata elements are are stored in the `Metadata` property of `ProjectItemElement`:\n\n``` C#\npublic ICollection<ProjectMetadataElement> Metadata { get; }\n```\n\nMetadata that comes from attributes on the item element can't really be represented as a `ProjectMetadataElement`, because they're not `XmlElements`.  So to support metadata as attributes, I suggest we add a separate property to `ProjectItemElement`, something like this:\n\n``` C#\npublic ICollection<KeyValuePair<string, string>> MetadataInAttributes { get; }\n```\n",
        "createdAt": "2016-09-22T14:09:45Z",
        "updatedAt": "2016-09-22T14:09:45Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "In contrast to my previous comment, I'm now experimenting with allowing `ProjectElements` to be expressed as attributes in the Xml.  This is accomplished by having a flag on `ProjectElement` for whether it is expressed as an attribute instead of an element in the Xml, and having logic in `ProjectElementContainer` that manipulates the Xml appropriately when a child `ProjectElement` is added or removed.  You can see my work in progress in https://github.com/dsplaisted/msbuild/tree/MetadataAsAttributes.\n",
        "createdAt": "2016-09-26T19:05:36Z",
        "updatedAt": "2016-09-26T19:05:36Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "Today, if you miscapitalize an attribute, you'll get an error such as the following:\n\n```\nMicrosoft.Build.Exceptions.InvalidProjectFileException : The attribute \"exclude\" in element <compile> is unrecognized.\n```\n\nIn order to prevent situations where MSBuild silently accepts miscapitalized attributes as metadata instead of giving an error, I think we should continue to generate this error for attributes which differ only in casing from an attribute we would otherwise recognize.\n",
        "createdAt": "2016-09-26T19:15:32Z",
        "updatedAt": "2016-09-26T19:15:32Z",
        "author": {
          "login": "dsplaisted"
        }
      }
    ]
  }
}