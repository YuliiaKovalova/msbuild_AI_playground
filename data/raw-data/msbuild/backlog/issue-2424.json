{
  "number": 2424,
  "title": "MSBuild incorrectly detects error from ignored error in Makefile .",
  "body": "Hello,\r\n\r\nWe've noticed issue with MSBuild's error detection for Makefile projects that ignore some of the errors. MSBuild **parses console output** for \"errors\". Simply \"echo error :\" will trigger failure. We have Makefile project building FFmpeg and it fails because of that. **Exit code of our build command is 0**, but it still fails due to this output:\r\n\r\n```\r\nstrip.exe : error : the input file 'libavcodec/x86/proresdsp.o' has no sections [{..}.vcxproj]\r\nmake: [{...}/ffmpeg/ffbuild/common.mak:83: libavcodec/x86/proresdsp.o] Error 1 (ignored)\r\n```\r\n\r\nNotice the `(ignored)` part? That's because this error is expected and should be ignored and it indeed is ignored. (see minus sign)\r\n\r\ncommon.mak:83\r\n```\r\n%.o: %.asm\r\n\t$(COMPILE_X86ASM)\r\n\t-$(if $(ASMSTRIPFLAGS), $(STRIP) $(ASMSTRIPFLAGS) $@)\r\n```\r\n\r\nYet MSBuild after parsing first line with error sets build task to fail state.\r\n\r\nI think MSBuild's error parser should be more clever in such cases.\r\n\r\n```\r\nMicrosoft (R) Build Engine 15.1.1012.6693\r\n```\r\nRegards, \r\nKacper",
  "state": "OPEN",
  "createdAt": "2017-08-14T11:16:40Z",
  "updatedAt": "2024-02-21T16:36:08Z",
  "closedAt": null,
  "author": {
    "login": "kasper93"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "You can specify [`IgnoreStandardErrorWarningFormat`](https://docs.microsoft.com/en-us/visualstudio/msbuild/exec-task)\r\n\r\n```xml\r\n<Exec Command=\"make\"\r\n      IgnoreStandardErrorWarningFormat=\"true\" />\r\n```\r\n\r\nto depend only on the exit code of the `Exec`ed process.\r\n\r\nI was going to suggest that you set a `CustomErrorRegularExpression` to teach it about `(ignored)`, maybe something like:\r\n\r\n```xml\r\n<Exec Command=\"make\"\r\n      CustomErrorRegularExpression=\"error :.*(?!\\(ignored\\)$)\" />\r\n```\r\n\r\nbut that won't work in this case, since the tool emits a normal error message which gets piped through unaltered, and then make emits an _additional_ message saying it's ignored. You might be able to do just `^make:.* Error.*(?!\\(ignored\\)$)`, if make always doubles the error.\r\n\r\nI don't see a way to change the default behavior to pick up this case, unfortunately.",
        "createdAt": "2017-08-14T15:43:36Z",
        "updatedAt": "2017-08-14T15:43:36Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks, this may actually work. I think just IgnoreStandardErrorWarningFormat will be enough for our needs. Do I need to specify this options for every `Exec`? We are using `Microsoft.MakeFile.targets` (provided by Visual Studio) which does `Exec` behind our backs, so it is hard to append option there. Can this be disabled in different way?\r\n\r\n> I don't see a way to change the default behavior to pick up this case, unfortunately.\r\n\r\nIt is `make` specific issue. I think it is doable to teach MSBuild about it, if you want to care about `make`.\r\n\r\nIn case of ignored error `make` will emit string in the following format \r\n\r\n`make: [Makefile:{line_number}: {target}] Error {N} (ignored)`\r\nWhen such string is encountered MSBuild could mark all (probably never more than one) previous errors for given target as warnings or non-errors.  This assume that the tool which emits error actually print filename (target), but this is generally the case. As you can see in this `strip`error. MSBuld could easily match `libavcodec/x86/proresdsp.o` and ignore this error.\r\n\r\n\r\n\r\n\r\n\r\n",
        "createdAt": "2017-08-14T19:53:08Z",
        "updatedAt": "2017-08-14T19:53:08Z",
        "author": {
          "login": "kasper93"
        }
      }
    ]
  }
}