{
  "number": 10333,
  "title": "Improve MSB4019 to include unevaluated path",
  "body": "Example -- I got this\r\n```\r\nC:\\git\\aspire-samples\\samples\\AspireWithJavaScript\\AspireJavaScript.Angular\\node_modules\\lmdb\\dependencies\\lz4\\lib\\dll\\example\\fullbench-dll.vcxproj(28,3): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.pr\r\nops\" was not found. Confirm that the expression in the Import declaration \"\\Microsoft.Cpp.Default.props\" is correct, and that the file exists on disk.\r\n```\r\nthis originates from this line in the .vcxproj:\r\n```xml\r\n<Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n```\r\nIt would be useful to know that `$(VCTargetsPath)` is evaluating to empty. It takes me a little closer to the problem. \r\n\r\nAt the point that MSB4019 is emitted, can it access the unevaluated value of the attribute, and include that in the message?",
  "state": "CLOSED",
  "createdAt": "2024-07-03T20:44:22Z",
  "updatedAt": "2024-11-11T13:10:48Z",
  "closedAt": "2024-11-11T13:10:48Z",
  "author": {
    "login": "danmoseley"
  },
  "labels": [
    "help wanted",
    "backlog",
    "Area: Debuggability",
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "jrdodds"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Yes we should definitely do this for the general case.\r\n\r\nFor your specific error (C++), we should extend the special-casing from https://github.com/dotnet/msbuild/issues/8967 to flag it.",
        "createdAt": "2024-07-08T14:20:31Z",
        "updatedAt": "2024-07-08T14:20:31Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We soon should have a build-in analyzer for catching similar situations: #9883. But if we can improve the error here, that will also help. \r\n\r\n@baronfel what you think about it and in case we should improve the error, what would be your idea of the wording?",
        "createdAt": "2024-07-09T13:49:22Z",
        "updatedAt": "2024-07-09T13:54:32Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "My proposed wording is:\r\n\r\n```\r\nConfirm that the expression in the Import declaration \"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\", which evaluated to \"\\Microsoft.Cpp.Default.props\" is correct, and that the file exists on disk.\r\n```\r\n\r\nwhere the first one is the unevaluated value and the second one is the evaluated one we're currently logging.",
        "createdAt": "2024-07-09T15:56:07Z",
        "updatedAt": "2024-07-09T15:56:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> My proposed wording is:\r\n\r\nSounds good to me",
        "createdAt": "2024-07-25T22:37:46Z",
        "updatedAt": "2024-07-25T22:37:46Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "do you label 'help wanted' to things like this? ",
        "createdAt": "2024-07-25T22:38:01Z",
        "updatedAt": "2024-07-25T22:38:01Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "Random internet person wondering if this msbuild related task is going to hopefully make MSB4019 errors less confusing and misleading.\r\n\r\nCurrently I have a project which fails to build with this error:\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\tDetails\r\nError\tMSB4019\tThe imported project \"C:\\cppdev\\wordtsar-mercurial\\QtMsBuild\\Qt.props\" was not found. Confirm that the expression in the Import declaration \"C:\\cppdev\\wordtsar-mercurial\\QtMsBuild\\Qt.props\" is correct, and that the file exists on disk.\twordtsar\tC:\\cppdev\\wordtsar-mercurial\\wordtsar.vcxproj\t159\t\t\r\n\r\n\r\nThe thing that annoys me is that QtMsBuild is not needed for this project to work, and QtMsBuild appears to get installed without my consent and not uninstalled by whatever THIRD PARTY vendor makes the QT Tools for Visual Studio.\r\n\r\nI think that's a valid example case of where things are confusing when msbuild fails. I have no idea how to debug this issue, and am close to \"format drive C and reinstall windows\" as the only possible way to find and fix what's wrong with msbuild, or visual studio.\r\n\r\nThe folder QtMsBuild does not, and should not exist, in the working copy of the above C++ app repo (wordtsar-mercurial).\r\nI suspect that it's being inserted just because msbuild is assuming everything wants to exist must be in a folder in its search path.\r\n\r\nThe vcxproj contains this\r\n\r\n```\r\n<ImportGroup Condition=\"Exists('$(QtMsBuild)\\qt_defaults.props')\">\r\n    <Import Project=\"$(QtMsBuild)\\qt_defaults.props\" />\r\n  </ImportGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)' == 'Debug|x64'\" Label=\"QtSettings\">\r\n    <QtInstall>6.4.3_64</QtInstall>\r\n    <QtModules>core;gui;widgets;printsupport</QtModules>\r\n    <QtBuildConfig>debug</QtBuildConfig>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)' == 'Release|x64'\" Label=\"QtSettings\">\r\n    <QtInstall>6.4.3_64</QtInstall>\r\n    <QtModules>core;gui;widgets;printsupport</QtModules>\r\n    <QtBuildConfig>release</QtBuildConfig>\r\n  </PropertyGroup>\r\n  <Target Name=\"QtMsBuildNotFound\" BeforeTargets=\"CustomBuild;ClCompile\" Condition=\"!Exists('$(QtMsBuild)\\qt.targets') or !Exists('$(QtMsBuild)\\qt.props')\">\r\n    <Message Importance=\"High\" Text=\"QtMsBuild: could not locate qt.targets, qt.props; project may not build correctly.\" />\r\n  </Target>\r\n```\r\n\r\nIt appears that detecting and removing these extension-importgroup from broken projects is very difficult to google. \r\nIf the IDE itself made it possible to inspect and remove broken elements from the .vcxproj without surgery in a text editor, that would be lovely.",
        "createdAt": "2024-08-09T20:40:21Z",
        "updatedAt": "2024-08-09T20:46:19Z",
        "author": {
          "login": "wpostma"
        }
      },
      {
        "body": "Please assign this issue to me. Thanks",
        "createdAt": "2024-10-19T00:17:58Z",
        "updatedAt": "2024-10-19T00:17:58Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "@jrdodds Done! Let us know if you hit any trouble.",
        "createdAt": "2024-10-21T16:16:27Z",
        "updatedAt": "2024-10-21T16:16:27Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}