{
  "number": 7734,
  "title": "XamlTaskFactory fails on arm64 because the dll's aren't present in the arm64 folder",
  "body": "https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1555164\r\n\r\nFrom original bug:\r\n```\r\nRepro steps:\r\n\r\n\r\n\r\ninstall Visual Studio 2022 17.3.0 Preview 2.0 on arm64 Windows\r\n\r\ninstall WDK 10.0.22621.0\r\n\r\ntry to build a project with toolset WindowsApplicationForDrivers10.0\r\n\r\n\r\nI get the following errors, and confirmed that the referenced dlls aren\u2019t present in the arm64 folder.\r\n\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB3686\tUnable to create Xaml task.  Compilation failed.  \r\nMetadata file 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\arm64\\Microsoft.Build.Framework.dll' could not be found\r\nMetadata file 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\arm64\\Microsoft.Build.Utilities.Core.dll' could not be found\r\n\tProjectName\tC:\\Program Files (x86)\\Windows Kits\\10\\build\\10.0.22621.0\\WindowsDriver.common.targets\t1833\t\r\n\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4175\tThe task factory \"XamlTaskFactory\" could not be loaded from the assembly \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\arm64\\Microsoft.Build.Tasks.Core.dll\". Object reference not set to an instance of an object.\tProjectName\tC:\\Program Files (x86)\\Windows Kits\\10\\build\\10.0.22621.0\\WindowsDriver.common.targets\t1833\r\n```\r\n\r\n### Issue Description\r\nWe tried to keep arm64 MSBuild assemblies out of the `arm64/` folder if possible. The reason being that any assembly in `bin/` `arm64/` and `amd64` are `AnyCPU` binaries anyway. Our solution was to set a `BindingRedirect` in `MSBuild.exe.config` so that the assemblies could **primarily** live in `bin/`, and the `arm64` and `amd64` `MSBuild.exe`'s could redirect to the main set.\r\n\r\nRainer Suggested: `We should fix this but I think we should do so by special-casing the thing that's trying to load `amd64\\Microsoft.Build.Tasks.Core.dll` and redirecting it to \"the current tasks assembly\", as we do with some other things.`",
  "state": "CLOSED",
  "createdAt": "2022-06-23T16:20:40Z",
  "updatedAt": "2024-02-21T14:08:22Z",
  "closedAt": "2022-07-17T17:37:31Z",
  "author": {
    "login": "benvillalobos"
  },
  "labels": [
    "bug",
    "Area: Tasks",
    "Architecture: ARM64",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.4"
  },
  "comments": {
    "nodes": [
      {
        "body": "I think it boils down to this line:\r\nhttps://github.com/dotnet/msbuild/blob/486a4599f4a5bb91c2a834745077532ec5268600/src/Tasks/XamlTaskFactory/XamlTaskFactory.cs#L116\r\n\r\nWhich searches for \"current\" all the way down until:\r\n\r\nhttps://github.com/dotnet/msbuild/blob/486a4599f4a5bb91c2a834745077532ec5268600/src/Shared/FrameworkLocationHelper.cs#L1036-L1044\r\n\r\nWhich should default to the current msbuild.exe directory, which is arm64. @rainersigwald we might need to ship the dll's into arm64. The function is generically `GetPathToBuildTools`. \r\n\r\nTo avoid shipping the dll's, I'm thinking of adding a `GetPathToBuildDlls` that would default to `bin/` (basically returns `BuildEnvironmentHelper.MSBuildToolsDirectoryRoot`, and have `XamlTaskFactory` call that.",
        "createdAt": "2022-06-23T18:53:31Z",
        "updatedAt": "2022-06-23T18:53:54Z",
        "author": {
          "login": "benvillalobos"
        }
      }
    ]
  }
}