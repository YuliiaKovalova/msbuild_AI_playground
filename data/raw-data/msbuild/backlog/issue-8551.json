{
  "number": 8551,
  "title": "[Feature Request]: Bitshift MSBuild Property Function",
  "body": "### Issue Description\n\nFor reasons being Android version codes (which must be a single number), I'd like to be able to bitshift various parts of my major/minor/patch numbers together to make a single applicationversion number. There's no msbuild property function for this today, though, so I need to resort to an inline task. We already have some bitwise ops (such as `and` and `or`), but not shifts.\n\n### Steps to Reproduce\n\nN/A\n\n### Expected Behavior\n\nN/A\n\n### Actual Behavior\n\nN/A\n\n### Analysis\n\nhttps://github.com/dotnet/msbuild/blob/main/src/Build/Evaluation/IntrinsicFunctions.cs will need to be updated.\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2023-03-10T05:29:21Z",
  "updatedAt": "2024-02-21T14:05:44Z",
  "closedAt": "2023-04-07T19:17:25Z",
  "author": {
    "login": "333fred"
  },
  "labels": [
    "backlog",
    "Feature Request",
    "Partner request",
    "Priority:3",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "jrdodds"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Could multiply or divide with powers of two instead.",
        "createdAt": "2023-03-10T08:13:32Z",
        "updatedAt": "2023-03-10T08:13:32Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "[Property Functions](https://learn.microsoft.com/visualstudio/msbuild/property-functions?view=vs-2022):\r\n\r\n> In static property functions, you can use any static method or property of these system classes:\r\n\r\nIn .NET 7.0 and later, System.Int32 actually has a private static method named `System.Numerics.IShiftOperators<System.Int32,System.Int32,System.Int32>.op_LeftShift`, but this throws error MSB4186 in MSBuild version 17.6.0-preview-23108-10+51df47643:\r\n\r\n```XML\r\n<Project>\r\n  <Target Name=\"Build\">\r\n    <Message Text=\"value=$([System.Int32]::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_LeftShift(2, 2))\" Importance=\"high\"/>\r\n  </Target>\r\n</Project>\r\n```\r\n\r\nIt seems the documentation is a bit incomplete as it does not say that the static method or property must be public. I don't know whether MSBuild would have a syntax for quoting a method name that contains characters like this, if the method were public.",
        "createdAt": "2023-03-10T08:34:33Z",
        "updatedAt": "2023-03-10T08:34:33Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "I have no objection to adding `$([MSBuild]::LeftShift())` and friends next to `$([MSBuild]::Add())` in `IntrinsicFunctions`.\r\n\r\n> It seems the documentation is a bit incomplete as it does not say that the static method or property must be public.\r\n\r\nhttps://github.com/MicrosoftDocs/visualstudio-docs/pull/9045",
        "createdAt": "2023-03-10T15:18:49Z",
        "updatedAt": "2023-03-10T15:18:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Could multiply or divide with powers of two instead.\n\nI could, yes, but I feel that's more unmaintainable than a code task. ",
        "createdAt": "2023-03-10T16:03:11Z",
        "updatedAt": "2023-03-10T16:03:11Z",
        "author": {
          "login": "333fred"
        }
      },
      {
        "body": "If this issue passes triage, I would be happy to have it assigned to me. Thanks.\r\n\r\nI'm assuming the work would be to add three new methods in `IntrinsicFunctions`:\r\n\r\n- LeftShift\r\n- RightShift\r\n- RightShiftUnsigned",
        "createdAt": "2023-03-13T17:32:07Z",
        "updatedAt": "2023-03-13T17:32:07Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "Are those going to be overloaded for Int32 and Int64?",
        "createdAt": "2023-03-13T18:51:20Z",
        "updatedAt": "2023-03-13T18:51:20Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "The existing bit operator functions are int only.\n\nIs there a use case for long?\n\nThe functions wouldn't be overloaded. They would need to have different names.",
        "createdAt": "2023-03-13T21:16:38Z",
        "updatedAt": "2023-03-13T21:16:38Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "Team triage: We would like to have it. We are assigning it to @jrdodds, thank you for volunteering!\r\n\r\n@333fred, are 32-bit operators sufficient for you?",
        "createdAt": "2023-03-14T14:54:16Z",
        "updatedAt": "2023-03-14T14:54:16Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "32-bit operators would be sufficient, as Android version codes are a single 32-bit int.",
        "createdAt": "2023-03-14T16:21:52Z",
        "updatedAt": "2023-03-14T16:21:52Z",
        "author": {
          "login": "333fred"
        }
      },
      {
        "body": "Thanks @333fred",
        "createdAt": "2023-03-14T18:47:50Z",
        "updatedAt": "2023-03-14T18:47:50Z",
        "author": {
          "login": "jrdodds"
        }
      }
    ]
  }
}