{
  "number": 5765,
  "title": "Question: Is item order guaranteed?",
  "body": "Sorry if this is documented somewhere. I've been searching, but couldn't find it anywhere. I know I can test to find current behaviour, but my question is about understanding if it's safe to depend on the order, across MSBuild versions.\r\n\r\nI have a task where one or more of the parameters is an array of items passed in via the `MyParameter=\"@(MyItem)` syntax. If I have a project file:\r\n```xml\r\n<ItemGroup>\r\n  <MyItem Include=\"one\" MyMetadata=\"Something\" />\r\n  <MyItem Include=\"two\" MyMetadata=\"Another thing\" />\r\n  <MyItem Include=\"one\" MyMetadata=\"New thing\" />\r\n</ItemGroup>\r\n```\r\n\r\nCan my task depend on the order of items in the array being the same as the order they were evaluated? When I enumerate the items, will the \"two\" item come in between the two \"one\" items, in addition to the \"one\" items being enumerated in the order defined?\r\n\r\nHaving a quick look through MSBuild's code, I found something called ItemBucket, which contains a sequence number, but it's not clear to me if ItemBucket is used for items: https://github.com/dotnet/msbuild/blob/7b3a457540ab87cf02f6d41ce6095e6ecbbb6ea7/src/Build/BackEnd/Components/RequestBuilder/ItemBucket.cs#L44-L51\r\n\r\nI've been trying to search the tests to see if there are anything that test the order or items (or even the order of ItemBucket items), but can't find any tests that validate enumeration order.",
  "state": "CLOSED",
  "createdAt": "2020-10-01T18:33:45Z",
  "updatedAt": "2024-02-21T17:02:22Z",
  "closedAt": "2020-10-23T16:39:26Z",
  "author": {
    "login": "zivkan"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "Yes ordering is preserved. Unless there\u2019s a bug. Certainly in all normal cases. Now when it is batching (bucketizing items to pass into a task) if there are groups of items bucketed on several metadata it can get complicated but should at least be deterministic.\r\nThe above from memory.",
        "createdAt": "2020-10-02T04:59:09Z",
        "updatedAt": "2020-10-02T04:59:09Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "@danmosemsft got it right AFAIK. One thing that sometimes happens is people will do a remove-modify-replace operation that changes the order of items, but as far as the engine is concerned that's an explicit thing.",
        "createdAt": "2020-10-22T20:52:46Z",
        "updatedAt": "2020-10-22T20:52:46Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks.\r\n\r\nAs long as I can I can tell customers to change the order of items in their files, that's fine. If customers do the remove, modify, add operation, I can tell them to stop.\r\n\r\nHaving said that, the feature that I might have needed this for is on ice for now, but it's good to know.\r\n\r\nI couldn't find any docs on it. Maybe I just didn't find it, but I suggest adding a quick comment to somewhere like here: https://docs.microsoft.com/en-us/visualstudio/msbuild/task-writing?view=vs-2019#task-parameter-types\r\n\r\nthanks.",
        "createdAt": "2020-10-23T16:39:26Z",
        "updatedAt": "2020-10-23T16:39:26Z",
        "author": {
          "login": "zivkan"
        }
      },
      {
        "body": "@zivkan you can click the pencil button on that doc topic if you like and make the change in a PR.",
        "createdAt": "2020-10-23T16:51:43Z",
        "updatedAt": "2020-10-23T16:51:43Z",
        "author": {
          "login": "danmoseley"
        }
      }
    ]
  }
}