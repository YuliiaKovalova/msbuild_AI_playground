{
  "number": 6114,
  "title": "Legacy-style project referencing duplicate multi-targetting projects don't set the TF on the reference correctly.",
  "body": "### Issue Description\r\nIn certain scenarios, we get a `error MSB4057: The target \"GetTargetPath\" does not exist in the project.` due to the TF not properly being set on a project reference.\r\n\r\n### Steps to Reproduce\r\nProj1\\Proj1.csproj:\r\n```xml\r\n<Project>\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\r\n    <OutputType>Library</OutputType>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"Class1.cs\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\proj2\\proj2.csproj\" />\r\n    <ProjectReference Include=\"..\\Proj2\\Proj2.csproj\" />\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n(Note the project references are differently-cased)\r\n\r\nProj2\\Proj2.csproj:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard2.0;net472</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nCommands:\r\n```\r\nmsbuild /t:Restore Proj1\\Proj1.csproj\r\nmsbuild Proj1\\Proj1.csproj /p:BuildProjectReferences=false /bl\r\n```\r\n\r\n### Expected Behavior\r\nThe build succeeds.\r\n\r\n### Actual Behavior\r\nThe build fails with `proj2\\proj2.csproj : error MSB4057: The target \"GetTargetPath\" does not exist in the project.`\r\n\r\n### Analysis\r\nThe specific piece of logic which is failing to run is:\r\n```xml\r\n      <AnnotatedProjects Condition=\"'@(AnnotatedProjects)' == '%(Identity)' and '%(AnnotatedProjects.NearestTargetFramework)' != '' and '%(AnnotatedProjects.HasSingleTargetFramework)' != 'true'\">\r\n        <SetTargetFramework>TargetFramework=%(AnnotatedProjects.NearestTargetFramework)</SetTargetFramework>\r\n      </AnnotatedProjects>\r\n```\r\n\r\nThat translates the `NearestTargetFramework` computed by `GetReferenceNearestTargetFrameworkTask` to `SetTargetFramework`, which is used when executing on project references.\r\n\r\nOddly, I couldn't seem to get this to repro if:\r\n* Proj1 is an SDK-style project\r\n* The duplicated `ProjectReference` did not differ in case (I guess there's some case-sensitive deduplication somewhere?)\r\n\r\nAlso note that the `/p:BuildProjectReferences=false` just helps show off the error more easily. Without it, the TF is still not properly set so the project refernce is \"fully\" built instead of building only 1 TF. Furthermore, I believe in this case the referenced project's assembly isn't returned so isn't actually given to the referencing project's compiler, an obvious downstream problem.\r\n\r\n### Versions & Configurations\r\n16.9.0-preview-21076-21+8ed151254 (but it repros for earlier versions too.)",
  "state": "OPEN",
  "createdAt": "2021-02-03T16:48:55Z",
  "updatedAt": "2024-11-13T10:02:18Z",
  "closedAt": null,
  "author": {
    "login": "dfederm"
  },
  "labels": [
    "bug",
    "Area: Common Targets",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "@dfederm try adding         <SetTargetFramework>TargetFramework=net472</SetTargetFramework>\r\nto your project reference. That solved the issue for me.",
        "createdAt": "2024-03-02T07:02:26Z",
        "updatedAt": "2024-03-02T07:02:26Z",
        "author": {
          "login": "daniatic"
        }
      },
      {
        "body": "I have a repro when Proj1 is an SDK-style project. \r\nAnd I didn't need case differences in Proj2 references, two duplicate entries was enough to reproduce the bug. ",
        "createdAt": "2024-05-01T21:22:30Z",
        "updatedAt": "2024-05-01T21:22:30Z",
        "author": {
          "login": "vladimir-bukreev"
        }
      },
      {
        "body": "I can also confirm this behavior in an SDK-style project. In my scenario, sub-project 1 targets netstandard2.0 and net481 while sub-project 2, which has sub-project 1 as a dependency,  targets net481.",
        "createdAt": "2024-11-13T09:25:20Z",
        "updatedAt": "2024-11-13T09:25:20Z",
        "author": {
          "login": "ahmad-el-sayed"
        }
      },
      {
        "body": "@ahmad-el-sayed As I stated earlier for me most Problems resolved by using this https://stackoverflow.com/a/53388855 or https://github.com/dotnet/msbuild/issues/6134#issuecomment-786633800 for netframework projects referencing dual target frameworks. \n\nAnd another thing that was important was to put the netframework target in TargetFrameworks first:\n`<TargetFrameworks>net472;net8.0</TargetFrameworks>`\ninstead of the other way around.",
        "createdAt": "2024-11-13T10:00:15Z",
        "updatedAt": "2024-11-13T10:02:18Z",
        "author": {
          "login": "daniatic"
        }
      }
    ]
  }
}