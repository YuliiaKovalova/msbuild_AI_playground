{
  "number": 6364,
  "title": "MSBuild not signing UWP Application correctly from command line",
  "body": "### Issue Description\r\nWe are using MSBuild to build and sign a UWP Application from the command line using a pfx file that was signed by our own root authority. \r\n\r\nThis used to work up until a few weeks ago (the exact point in time is unclear, somewhere between 25. February and 31. March).\r\n\r\nThe problem is, that the application is not signed using the provided pfx file from the MSBuild Arguments, but rather with a disposable one created at build time by the Task \"GenerateDisposableSigningCertificate\".\r\n\r\n### Steps to Reproduce\r\nUsing a UWP Application with `<UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>` set in the csproj file and the following command line invocation:\r\n```\r\nmsbuild *.sln /p:AppxBundlePlatforms=\"x64\" /p:AppxPackageDir=\"C:\\Users\\<user>\\Desktop\\\\\" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint=\"insert-thumbrpint\" /p:PackageCertificateKeyFile=\"C:\\Users\\user\\SomeCertificate.pfx\" /p:PackageCertificatePassword=\"**************\" /p:platform=\"x64\" /p:configuration=\"Release\"\r\n```\r\nSetting the dotnet native toolchain to false fixes the issue, but is not an acceptable solution to us.\r\n\r\n### Analysis\r\nAfter removing the argument `/p:UapAppxPackageBuildMode=StoreUpload`, the supplied pfx file is used to sign the application.\r\nIt seems that setting the above mentioned parameter also causes `/p:BuildAppxUploadPackageForUap=true` to be set, which in turn causes a Disposable Certificate to be used for signing.\r\n\r\nAs previously mentioned, this did not use to be like that in earlier versions of MSBuild as it always worked just fine. What could have been introduced, that causes a store uploadable application to be signed with a disposable certificate by default?\r\n\r\nI already opened an issue on a different repo, as I initially expected the bug to be somewhere else. (see https://github.com/actions/virtual-environments/issues/3183)\r\n\r\n### Versions & Configurations\r\nMSBuild Version: 16.9.0.16703\r\nVisual Studio Version: 16.9.4",
  "state": "CLOSED",
  "createdAt": "2021-04-22T14:17:55Z",
  "updatedAt": "2021-06-09T15:27:04Z",
  "closedAt": "2021-06-09T15:27:04Z",
  "author": {
    "login": "luEbe"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I definitively have the same problem.",
        "createdAt": "2021-05-06T19:58:51Z",
        "updatedAt": "2021-05-06T19:59:13Z",
        "author": {
          "login": "glsorre"
        }
      },
      {
        "body": "Same in our company. Our build process is broken after update to 16.9.4",
        "createdAt": "2021-05-07T07:28:59Z",
        "updatedAt": "2021-05-07T07:28:59Z",
        "author": {
          "login": "xpetrik"
        }
      },
      {
        "body": "Team Triage: @SvetBonev do you know what's going on here? If so, could you help route this?",
        "createdAt": "2021-05-12T15:30:16Z",
        "updatedAt": "2021-05-12T15:30:16Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@japarson ",
        "createdAt": "2021-05-12T17:03:08Z",
        "updatedAt": "2021-05-12T17:03:08Z",
        "author": {
          "login": "SvetBonev"
        }
      },
      {
        "body": "Hi everyone, sorry for the trouble. Updating to 16.9.5 should fix this problem.",
        "createdAt": "2021-05-12T21:25:16Z",
        "updatedAt": "2021-05-12T21:25:16Z",
        "author": {
          "login": "japarson"
        }
      }
    ]
  }
}