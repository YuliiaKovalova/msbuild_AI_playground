{
  "number": 724,
  "title": "Item Exclude syntax doesn't support '/' as a path separator",
  "body": "1. Create a new Console application\n2. Create a new folder called \"Exclude\", copy Program.cs into it\n3. Unload -> Edit\n4. Replace the `<Compile Include` items with `<Compile Include=\"**/*.cs\" Exclude=\"Excluded/**\" />`\n5. Reload project\n\nExpected: For Excluded\\Program.cs to not be included in the project\nActual: Excluded\\Program.cs is included in the project.\n\nIt appears that while '/' is understood in Include, it's not in Exclude. Does this prevent us from writing platform-agnostic paths?\n",
  "state": "CLOSED",
  "createdAt": "2016-06-24T17:55:52Z",
  "updatedAt": "2024-02-21T17:27:34Z",
  "closedAt": "2016-09-19T22:56:09Z",
  "author": {
    "login": "davkean"
  },
  "labels": [
    "help wanted",
    "backlog",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "cdmihai"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I think we'll automagically correct `\\` to `/` when platform-appropriate, but this is definitely a bogus restriction that we should fix.\n",
        "createdAt": "2016-06-24T19:16:26Z",
        "updatedAt": "2016-06-24T19:16:26Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "You'll want to do the other way too anyway, right? What if you start on Linux? It looks like this automatically happens for Include, just not Exclude.\n",
        "createdAt": "2016-06-24T21:34:34Z",
        "updatedAt": "2016-06-24T21:34:34Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Hitting this in CLI repo as well.\n",
        "createdAt": "2016-07-06T19:45:43Z",
        "updatedAt": "2016-07-06T19:45:43Z",
        "author": {
          "login": "TheRealPiotrP"
        }
      },
      {
        "body": "@Sarabeth-Jaffe-Microsoft we need to get this scheduled sooner than later. We're already finding that this bug is causing massive code blowup in CLI builds. We've already defined an internal $(PathSeparator) but even it's usage is not consistent since the paths returned by Include=\"GLOB\" will use a mixture of OS slashes and user-provided slashes from the globbing pattern. In other words, without a fix we basically need to make the literal use of `/` and `\\` unsupported.\n",
        "createdAt": "2016-07-14T22:55:29Z",
        "updatedAt": "2016-07-14T22:55:29Z",
        "author": {
          "login": "TheRealPiotrP"
        }
      },
      {
        "body": "> I think we'll automagically correct \\ to / when platform-appropriate, but this is definitely a bogus restriction that we should fix.\n\n`\\` is a valid file/folder name character on Unix.  Blindly converting all `\\` characters on Unix is not correct.\n\nFor example, I can have a folder named `my\\folder` by running \n\n```\n$ mkdir my\\\\folder\n$ ls\nmy\\folder\n```\n\nAre we saying that with MSBuild this won't be supported?\n",
        "createdAt": "2016-08-08T14:48:22Z",
        "updatedAt": "2016-08-08T14:48:22Z",
        "author": {
          "login": "eerhardt"
        }
      },
      {
        "body": "See #781 \n\nMSBuild's code base has a ton of hard-coded file system assumptions all over the place. At some point we'll need to decide whether to a) switch all of them to Unix (making Windows builds fail), b) keep them as they are, or c) find and put them all behind a file system abstraction that's toggleable at runtime\n",
        "createdAt": "2016-08-08T16:29:04Z",
        "updatedAt": "2016-08-08T16:29:04Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "This issue is making it impossible to create an include exclude set on an item using globs that works cross-plat when using any kind of slash:\n\nAn example:\n\n```\n<Compile Include=\"**\\*.cs\" Exclude=\"bin\\**;obj\\**\" />\n<Compile Include=\"**\\*.cs\" Exclude=\"bin/**;obj/**\" />\n```\n\nNeither of these items will include/exclude things correctly on on unix and is currently blocking migration excludes from working properly on OS X. \n\nIs there a workaround for this?\n",
        "createdAt": "2016-08-26T17:57:43Z",
        "updatedAt": "2016-08-26T17:57:43Z",
        "author": {
          "login": "brthor"
        }
      },
      {
        "body": "@brthor I would expect the former, with backslashes, to work everywhere. Are you not seeing that?\n",
        "createdAt": "2016-08-26T18:36:37Z",
        "updatedAt": "2016-08-26T18:36:37Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald I can't seem to get it working with any combination of slashes between the include and exclude. \n\nThe one with all backslashes results in an include like:\n`obj/Debug/netcoreapp1.0/dotnet-compile.assemblyinfo.cs`\n",
        "createdAt": "2016-08-26T20:13:41Z",
        "updatedAt": "2016-08-26T20:13:41Z",
        "author": {
          "login": "brthor"
        }
      },
      {
        "body": "@brthor Thanks. I repro on my machine as well: I can't get any `Exclude` to work when the `Include` has wildcards. That's much worse than I thought, and might be unrelated to the original issue in this thread. Splitting it out into #970.\n",
        "createdAt": "2016-08-26T22:03:03Z",
        "updatedAt": "2016-08-26T22:03:03Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Current roadmap of bug fixes:\n1) Migrate the fix for #917 over to the xplat branch. Right now only desktop MSBuild has this fix\n2) Fix #931 on master and then port it to xplat\n3) Fix this issue: include and exclude should be able to use slashes and back-slashes as path separators\n",
        "createdAt": "2016-08-29T23:39:57Z",
        "updatedAt": "2016-08-29T23:40:31Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "I tested this on OSX and it seems to work with the latest xplat build. Probably fixing the other exclude bugs also fixed this :)\n\nCan someone else please confirm? In the meantime I am going to augment tests with forward slashes\n",
        "createdAt": "2016-09-10T00:52:01Z",
        "updatedAt": "2016-09-10T00:52:01Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "> You'll want to do the other way too anyway, right? What if you start on Linux? It looks like this automatically happens for Include, just not Exclude.\r\n\r\n@davkean  I just hit this exact problem. See link above",
        "createdAt": "2022-11-23T12:53:52Z",
        "updatedAt": "2022-11-23T12:54:40Z",
        "author": {
          "login": "mikes-gh"
        }
      }
    ]
  }
}