{
  "number": 6659,
  "title": "RAR Cache should be versioned (TranslateDictionary)",
  "body": "I happened to be building under debugger, and saw the serialization exception in DateTime ctor (which usually signals corrupt data) when reading the state file: `obj\\Debug\\TestSolution.csproj.AssemblyReference.cache`\r\n\r\nThe .cache file is attached:\r\n[TestSolution.csproj.AssemblyReference.zip](https://github.com/dotnet/msbuild/files/6787793/TestSolution.csproj.AssemblyReference.zip)\r\n\r\n```\r\nmscorlib\tDateTime..ctor Line 159\r\nMicrosoft.Build.Tasks.Core\tBinaryTranslator.BinaryReadTranslator.Translate Line 330\r\nMicrosoft.Build.Tasks.Core\tSystemState.FileState.Translate Line 164\r\nMicrosoft.Build.Tasks.Core\tSystemState.FileState..ctor Line 154\r\nMicrosoft.Build.Tasks.Core\tSystemState.<>c.<Translate>b__18_0 Line 251\r\nMicrosoft.Build.Tasks.Core\tTranslatorHelpers.Translate Line 38\r\nMicrosoft.Build.Tasks.Core\tTranslatorHelpers.<>c__DisplayClass1_0`1.<AdaptFactory>g__TranslateUsingValueFactory|0 Line 51\r\nMicrosoft.Build.Tasks.Core\tBinaryTranslator.BinaryReadTranslator.TranslateDictionary Line 600\r\nMicrosoft.Build.Tasks.Core\tTranslatorHelpers.TranslateDictionary Line 88\r\nMicrosoft.Build.Tasks.Core\tSystemState.Translate Line 255\r\nMicrosoft.Build.Tasks.Core\tSystemState..ctor Line 223\r\n\t[Internal Frame, 'U-->M']\r\nmscorlib\tRuntimeConstructorInfo.Invoke Line 753\r\nmscorlib\tConstructorInfo.Invoke Line 105\r\nMicrosoft.Build.Tasks.Core\tStateFileBase.DeserializeCache Line 88\r\nMicrosoft.Build.Tasks.Core\tResolveAssemblyReference.ReadStateFile Line 2006\r\nMicrosoft.Build.Tasks.Core\tResolveAssemblyReference.Execute Line 2262\r\nMicrosoft.Build.Tasks.Core\tResolveAssemblyReference.Execute Line 3150\r\n```\r\n\r\nSince there's a try catch around reading the cache, the error is benign (I think?).\r\n\r\nBut I'd be curious what happened, either the format of serialized dictionaries changed across MSBuild versions or something else.\r\n\r\n@Forgind any ideas?",
  "state": "CLOSED",
  "createdAt": "2021-07-08T23:43:10Z",
  "updatedAt": "2024-02-21T14:12:36Z",
  "closedAt": "2021-07-26T06:19:31Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "Area: Task: Resolve Assembly References (RAR)",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "Yeah; we looked into this because it was preventing caches from being read.\r\n\r\nThe cache actually does have a version. What _is_ a bug is that the version is read, then the rest is deserialized, then the version is checked, which is not a rational ordering.\r\n\r\n[Version read](https://github.com/dotnet/msbuild/blob/cdc5faeda066a83b084c96b8a455ad0a5e8713ab/src/Tasks/StateFileBase.cs#L81)\r\n[Rest deserialized](https://github.com/dotnet/msbuild/blob/cdc5faeda066a83b084c96b8a455ad0a5e8713ab/src/Tasks/StateFileBase.cs#L88)\r\n[Version checked](https://github.com/dotnet/msbuild/blob/cdc5faeda066a83b084c96b8a455ad0a5e8713ab/src/Tasks/StateFileBase.cs#L94)\r\n\r\nThis came up with https://github.com/dotnet/msbuild/pull/6350. In addition to removing BF from all other StateFileBases (it had already been removed from SystemState), I combined their serialization code so they'd all go through the same path instead of having essentially just copied code.\r\n\r\nThe temporary fix is just to update the SDK used to build the SDK, since then it serializes it the same way it's expected to be serialized. I did that, and I'm planning to test that momentarily. This issue will recur, however, should the format change again, so it would be good to move the version check up.",
        "createdAt": "2021-07-09T15:52:45Z",
        "updatedAt": "2021-07-09T15:52:45Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}