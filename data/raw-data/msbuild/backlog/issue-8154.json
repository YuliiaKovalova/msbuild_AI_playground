{
  "number": 8154,
  "title": "MSBuild version 17.4.0 getting CS2012 files in use by another process errors",
  "body": "\r\nDevOps on premise server with update of VS2022 to 17.4 no longer builds existing solutions that have multiple projects, including test projects. These are Windows Build Agents both running on the DevOps and on a Docker Server that is running multiple ServerCore build agents. These were all updated to latest buildtools to get 17.4 functionality.\r\n\r\nSame solution built fine on Microsoft (R) Build Engine version 17.2.0+41abc5629 for .NET, and if I take same solution and build on Ubuntu agent, it builds with no issues using MSBuild version 17.3.2+561848881 for .NET.\r\n\r\nIt appears like the main project and test project may be building the main project at the same time in parallel. By default it is not supposed to be running parallel builds according to documentation. \r\n\r\n```\r\n  -maxCpuCount[:n]   Specifies the maximum number of concurrent processes to\r\n                     build with. If the switch is not used, the default\r\n                     value used is 1. If the switch is used without a value\r\n                     MSBuild will use up to the number of processors on the\r\n                     computer. (Short form: -m[:n])\r\n```\r\n\r\nBuild Command:\r\ndotnet.exe build FullPathToSolutionFile.sln --configuration Release --no-restore --self-contained false\r\n\r\nSolution has one project and one xUnit test project in net6.0. the xUnit has a project reference to the main project.\r\n\r\nBuild error:\r\nError CS2012: Cannot open because it is being used by another process.\r\n",
  "state": "OPEN",
  "createdAt": "2022-11-10T21:46:14Z",
  "updatedAt": "2024-01-31T08:15:42Z",
  "closedAt": null,
  "author": {
    "login": "mwmccallum"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Rolled back VS 2022 17.4 on DevOps server, removed the Dotnet 7.0 SDK folder [C:\\Program Files\\dotnet\\sdk]. Installed 6.0.403 SDK. Rebooted server. Same solution noted above builds without issues using: MSBuild version 17.3.2+561848881 for .NET.\r\n\r\nNow my struggle on my Docker agents is to rebuild the images with changes to my Dockerfile that would get me a 17.3.2 build tools. \r\n\r\nMy Dockerfile is based on this: https://learn.microsoft.com/en-us/visualstudio/install/advanced-build-tools-container?view=vs-2022. I would need version specific settings for the following items from my Dockerfile:\r\n\r\n```\r\n# Use the latest release channel. For more control, specify the location of an internal layout.\r\nARG CHANNEL_URL=https://aka.ms/vs/17/release/channel\r\nADD ${CHANNEL_URL} C:\\Central\\VisualStudio.chman\r\n```\r\n\r\n```\r\n    # Download the Build Tools bootstrapper.\r\n    curl -SL --output vs_buildtools.exe https://aka.ms/vs/17/release/vs_buildtools.exe `\r\n\r\n```\r\n\r\n\r\nAny help to request 17.3.2 versions of vs_buildtools.exe in the interim would be greatly appreciated!\r\n\r\nThanks, Mike\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "createdAt": "2022-11-10T22:08:55Z",
        "updatedAt": "2022-11-10T22:09:20Z",
        "author": {
          "login": "mwmccallum"
        }
      },
      {
        "body": "Seen here as well",
        "createdAt": "2022-11-11T10:18:24Z",
        "updatedAt": "2022-11-11T10:18:24Z",
        "author": {
          "login": "woodmeister"
        }
      },
      {
        "body": "> By default it is not supposed to be running parallel builds according to documentation.\r\n\r\nThe default is for `MSBuild.exe`, but `dotnet build` is parallel by default. @baronfel we should probably clarify the docs on this.\r\n\r\nThat's not new, though, so it's not the problem here.\r\n\r\nThe problem here is a new race condition in the build when specifying `--self-contained` for a solution file. This was introduced in #6924. The flow is now:\r\n\r\n```mermaid\r\ngraph TD\r\nsubgraph Library[Race between these]\r\nLibrary1\r\nLibrary2\r\nend\r\nsln[sln<br/>SelfContained=false] -->|direct| Library1[Library<br/>SelfContained=false]\r\nsln -->|direct| Test[Library<br/>SelfContained=false]\r\nTest -->|ProjectReference| Library2[Library<br/>SelfContained=]\r\n```\r\n\r\nTo work around this, **don't specify `--self-contained` for solution builds**.\r\n\r\ncc @dsplaisted",
        "createdAt": "2022-11-14T20:22:00Z",
        "updatedAt": "2022-11-14T20:22:00Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Changing the Build step and removing \"--self-contained $false\" did resolve this issue.\r\nThanks, Mike",
        "createdAt": "2022-11-15T15:45:03Z",
        "updatedAt": "2022-11-15T15:45:03Z",
        "author": {
          "login": "mwmccallum"
        }
      },
      {
        "body": "Glad to hear it! I'm going to reopen this because it'd be nice if we could keep it from happening.",
        "createdAt": "2022-11-15T15:57:05Z",
        "updatedAt": "2022-11-15T15:57:05Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We had talked about having the solution metaproj handle the project reference protocol to each project in the solution.  That would be complicated to implement but I'm not sure there's any other solution.\r\n\r\n@rainersigwald What do you think?\r\n\r\n@nagilson FYI, I was thinking this might be something you could tackle.  Note that it is not small though :-)",
        "createdAt": "2022-11-16T22:30:59Z",
        "updatedAt": "2022-11-16T22:30:59Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "> Changing the Build step and removing \"--self-contained $false\" did resolve this issue. Thanks, Mike\r\n\r\nThis help me ",
        "createdAt": "2022-12-09T17:01:57Z",
        "updatedAt": "2022-12-09T17:01:57Z",
        "author": {
          "login": "dungnh7"
        }
      },
      {
        "body": "Getting same error with no self-contained in my parameters...\r\npublish xxxx.csproj  /p:m=4 /p:nr=false -c Release  --runtime win-x86 --output D:\\Publish\\Publish\\DownloadApplication\\win-x86  -v q\r\nwithout the m:4 and nr:false I am getting this error just trying to do builds too.\r\n\r\nCan I use an older version of MsBuild with Net7.0?",
        "createdAt": "2023-01-09T13:15:17Z",
        "updatedAt": "2023-01-09T13:15:17Z",
        "author": {
          "login": "ekgurney14"
        }
      },
      {
        "body": "To work around this issue, I'd suggest publishing each project file separately rather than publishing the .sln file.  You could also disable parallel builds but that would slow things down.",
        "createdAt": "2023-01-09T21:57:26Z",
        "updatedAt": "2023-01-09T21:57:26Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "If you look at my comment, I'm already only trying to publish the csproj not not sln.  This problem is also happening on just dotnet build as well.",
        "createdAt": "2023-01-12T19:27:40Z",
        "updatedAt": "2023-01-12T19:27:40Z",
        "author": {
          "login": "ekgurney14"
        }
      },
      {
        "body": "@ekgurney14 that sounds like a different thing than is tracked by this issue. Can you please file a new issue with more information, like what file is reported as being in use? Or, ideally, a reproducing example.",
        "createdAt": "2023-01-12T19:43:08Z",
        "updatedAt": "2023-01-12T19:43:08Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I spent two days tracking down this problem. Right now building any .sln with --no-self-contained will fail with a mysterious error message.\r\n\r\nMaybe my expectations are too high, but I don't think .NET should break this badly when you use a documented flag.\r\n\r\nAs I understand, --no-self-contained doesn't make sense on solution files anymore, (since you can\u2019t specify a runtime so they can't be self-contained), so it should reject or ignore that flag entirely.",
        "createdAt": "2024-01-28T16:20:36Z",
        "updatedAt": "2024-01-28T16:20:36Z",
        "author": {
          "login": "piju3"
        }
      }
    ]
  }
}