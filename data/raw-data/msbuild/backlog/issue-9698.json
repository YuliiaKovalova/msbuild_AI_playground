{
  "number": 9698,
  "title": "[Bug]: Harmless warning: The referenced component 'Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter' could not be found ",
  "body": "### Issue Description\n\nFollowing @YuliiaKovalova advice by creating an issue here for a problem reported on MSTest: https://github.com/microsoft/testfx/issues/2173\r\n\r\n**Context**\r\nOn MSTest, we have a dll `Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll` that is copied to user output (to be picked up by vstest.console.exe) that we don't add as reference to ensure the user doesn't access public types declared in that dll.\r\n\r\nWith MSTest 3.2.0+, we introduced a new standalone runner and for this runner to work, we do need the dll to be referenced because the generated file we produce uses some types from this dll. We add this dll through a conditional `Reference` (see https://github.com/microsoft/testfx/blob/main/src/Adapter/Build/Common/MSTest.TestAdapter.targets#L34). There is a problem of declaration (that should be fixed by https://github.com/microsoft/testfx/pull/2220) but even fixing it I can still reproduce the issue.\r\n\r\n**Related issue**\r\nI found the following issue that's similar https://github.com/microsoft/appcenter-sdk-dotnet/issues/543 but their resolution was to remove the reference from the targets. I am wondering if I have any other option.\n\n### Steps to Reproduce\n\nSee https://github.com/microsoft/testfx/issues/2173\n\n### Expected Behavior\n\nDll should not be shown or shown without warning and no warning should be shown in the error list.\n\n### Actual Behavior\n\nAn error appears in the error list.\r\nThe reference always appear and is annotated with a warning.\n\n### Analysis\n\nLooking at the issue with Rainer it seems to be originating from csprojui.dll.\r\n\r\nThere is no warning emited in CLI nor in binlogs (CLI or VS one). I have also looked at the binlog produced using the specific debug environment variables but cannot find the issue either.\r\n\r\nIt would seems to be affecting only VS that seems to be ignoring the condition and seems to not be able to resolve the dll despite its existence. I have tried putting the condition on some `ItemGroup` but it's not working either.\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2024-01-31T16:19:21Z",
  "updatedAt": "2024-02-19T10:59:42Z",
  "closedAt": "2024-02-19T10:59:42Z",
  "author": {
    "login": "Evangelink"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "YuliiaKovalova"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I have done some investigation from my side - it looks like a bug/feature in project system (csproj).\r\nif you flip condition , the reference is still displayed, but without warning. In both cases this reference persists.\r\nPlan to dig more this month.",
        "createdAt": "2024-02-01T11:23:22Z",
        "updatedAt": "2024-02-01T11:23:22Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "This may be an expected behavior in VS due to the flag presence, need to doublecheck.  \r\nhttps://github.com/dotnet/msbuild/blob/299e0514835a1588e6ef21b1da748462dec706b8/src/Build/Definition/ProjectLoadSettings.cs#L52-L56",
        "createdAt": "2024-02-13T14:58:29Z",
        "updatedAt": "2024-02-13T14:58:29Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "Even if that's ignoring the condition, why is it considering that the dll doesn't exist when it actually does?",
        "createdAt": "2024-02-13T17:04:11Z",
        "updatedAt": "2024-02-13T17:04:11Z",
        "author": {
          "login": "Evangelink"
        }
      },
      {
        "body": "Just found this issue in github. Yes, we are struggling with the warning as well for the last maybe 2 weeks. The reference has a yellow exclamation mark. When I remove it manually, the warning goes away, but not forever. After project is unloaded, reloaded, and rebuild, the reference comes back. What's strange is that there is no change in csproj file whatsoever after I remove the reference manually. I guess there is nothing more to do here from my side than wait for a fix.",
        "createdAt": "2024-02-15T08:58:27Z",
        "updatedAt": "2024-02-15T08:58:27Z",
        "author": {
          "login": "Mek7"
        }
      },
      {
        "body": "Hi @Evangelink and @Mek7,\r\n\r\nI have some details for you regarding the <Reference/> condition interpretation in the Project System within VS, particularly the legacy version, which poses compatibility challenges. To address this issue, we can propose a workaround involving the use of <Choose/>, like so:\r\n```\r\n<Project>\r\n....\r\n    <Choose>\r\n      <When Condition=\" '$(EnableMSTestRunner)' == 'true' \">\r\n        <ItemGroup>\r\n          <Reference Include=\"Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter\" HintPath=\"$(MSBuildThisFileDirectory)Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll\" />\r\n        </ItemGroup>\r\n      </When>\r\n    </Choose>\r\n...\r\n</Project>\r\n```\r\nHowever, this solution does not account for situations where you open a clean project, perform a restore, and expect the reference to be immediately visible in the tree.\r\n<img width=\"244\" alt=\"image\" src=\"https://github.com/dotnet/msbuild/assets/95473390/0af71ae5-2437-454e-9514-d9f2b1345f2e\">\r\n Unfortunately, you need to reopen VS or reload the project to trigger additional evaluation in order to see it, as depicted in the images below:\r\n<img width=\"327\" alt=\"image\" src=\"https://github.com/dotnet/msbuild/assets/95473390/1e941ecb-dd25-4c41-876e-7a23d42f853b\">\r\n\r\nIn theory, we could initiate the evaluation round after each restore. However, since the described case is rare and we can provide a workaround, we prefer to avoid the additional performance hit. Naturally, if the same problem is reported by a larger number of customers, we will reconsider this decision.",
        "createdAt": "2024-02-15T10:14:42Z",
        "updatedAt": "2024-02-15T10:14:42Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "@YuliiaKovalova thanks for your proposal, unfortunately it made no difference, the yellow triangle and build warning was still present. I tried multiple variants of the code to no avail. Our nuget packages are stored in Dependencies folders so I amended the path, but that did not help either - yes, the file exists on disk. I also tried the HintPath in a separate element, as other references use this syntax - no dice.\r\n```\r\n  <Choose>\r\n    <!-- Avoid false warning about missing reference (msbuild bug) -->\r\n    <!-- https://github.com/dotnet/msbuild/issues/9698#issuecomment-1945763467 -->\r\n    <When Condition=\" '$(EnableMSTestRunner)' == 'true' \">\r\n      <ItemGroup>\r\n        <Reference Include=\"Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter\">\r\n          <HintPath>..\\..\\Dependencies\\MSTest.TestAdapter.3.2.1\\build\\net462\\Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll</HintPath>\r\n        </Reference>\r\n      </ItemGroup>\r\n    </When>\r\n  </Choose>\r\n\r\n\r\n```\r\nReloading the project and restarting VS did not help.",
        "createdAt": "2024-02-15T10:36:26Z",
        "updatedAt": "2024-02-15T10:37:01Z",
        "author": {
          "login": "Mek7"
        }
      },
      {
        "body": "> @YuliiaKovalova thanks for your proposal, unfortunately it made no difference, the yellow triangle and build warning was still present. I tried multiple variants of the code to no avail. Our nuget packages are stored in Dependencies folders so I amended the path, but that did not help either - yes, the file exists on disk. I also tried the HintPath in a separate element, as other references use this syntax - no dice.\r\n> \r\n> ```\r\n>   <Choose>\r\n>     <!-- Avoid false warning about missing reference (msbuild bug) -->\r\n>     <!-- https://github.com/dotnet/msbuild/issues/9698#issuecomment-1945763467 -->\r\n>     <When Condition=\" '$(EnableMSTestRunner)' == 'true' \">\r\n>       <ItemGroup>\r\n>         <Reference Include=\"Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter\">\r\n>           <HintPath>..\\..\\Dependencies\\MSTest.TestAdapter.3.2.1\\build\\net462\\Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll</HintPath>\r\n>         </Reference>\r\n>       </ItemGroup>\r\n>     </When>\r\n>   </Choose>\r\n> ```\r\n> \r\n> Reloading the project and restarting VS did not help.\r\n\r\nIn order to see the changes, you have to remove bin/obj folder and rebuild your solution.\r\nAlso, you can provide a problematic condition and I will try to help for your case specifically.",
        "createdAt": "2024-02-15T10:39:31Z",
        "updatedAt": "2024-02-15T10:39:31Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "OK, I cleaned solution, removed bin and obj folders from disk in the problematic project. Then I built solution again, and the warning was still there.\r\nForgot to mention that the project still uses packages.config for nuget packages instead of PackageReference, so there is no package restore. The `..\\..\\Dependencies\\MSTest.TestAdapter.3.2.1\\build\\net462\\Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll` file is always on disk, and is also in source control as part of the Dependencies folder. Could this be part of the problem?",
        "createdAt": "2024-02-15T10:47:16Z",
        "updatedAt": "2024-02-15T10:47:16Z",
        "author": {
          "login": "Mek7"
        }
      },
      {
        "body": "> OK, I cleaned solution, removed bin and obj folders from disk in the problematic project. Then I built solution again, and the warning was still there. Forgot to mention that the project still uses packages.config for nuget packages instead of PackageReference, so there is no package restore. The `..\\..\\Dependencies\\MSTest.TestAdapter.3.2.1\\build\\net462\\Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll` file is always on disk, and is also in source control as part of the Dependencies folder. Could this be part of the problem?\r\n\r\nAh, I understand now. Without releasing a new package with the changes implemented by the MSTest team, you won't be able to see the results of the suggested change. \r\n@Evangelink, could you please let us know if you are considering publishing the suggested workaround?",
        "createdAt": "2024-02-15T10:55:24Z",
        "updatedAt": "2024-02-15T10:55:24Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "Let me test out this solution. If that's working nice locally, I will publish a preview package @Mek7 would you be ok to test it? I would then release 3.2.2 with this bug fix if that's fixing it all.\r\n\r\nThanks for the investigation @YuliiaKovalova!!",
        "createdAt": "2024-02-15T12:57:55Z",
        "updatedAt": "2024-02-15T12:57:55Z",
        "author": {
          "login": "Evangelink"
        }
      },
      {
        "body": "Sure, I will test what's needed if possible :) Thanks for your fast reactions, people :)",
        "createdAt": "2024-02-15T12:59:42Z",
        "updatedAt": "2024-02-15T12:59:42Z",
        "author": {
          "login": "Mek7"
        }
      },
      {
        "body": "I confirm this is working well locally.\r\n\r\nWith `EnableMSTestRunner` enabled:\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/11340282/7c60a956-0a0c-471e-93d4-a73d4a7bd276)\r\n\r\nWithout\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/11340282/0b9c7197-d82d-4e67-9f91-120ce3d0c62b)\r\n",
        "createdAt": "2024-02-15T18:03:33Z",
        "updatedAt": "2024-02-15T18:03:33Z",
        "author": {
          "login": "Evangelink"
        }
      },
      {
        "body": "@Mek7 here is the link to the preview adapter https://dnceng.visualstudio.com/public/_artifacts/feed/test-tools/NuGet/MSTest.TestAdapter/overview/3.2.2-preview.24116.10. You should not need it but here is the framework in case you need it too https://dnceng.visualstudio.com/public/_artifacts/feed/test-tools/NuGet/MSTest.TestFramework/overview/3.2.2-preview.24116.10",
        "createdAt": "2024-02-16T19:17:53Z",
        "updatedAt": "2024-02-16T19:17:53Z",
        "author": {
          "login": "Evangelink"
        }
      },
      {
        "body": "@Evangelink Thanks, it looks like the 3.2.2-preview adapter makes the warning go away :)\r\nFYI, the project was migrated to PackageReference in the meantime.\r\nWhat I did was, downlaod the nuget package, open it in 7-zip, enter folder build/net462 and extracted all files under C:\\Users\\<my username>\\.nuget\\packages\\mstest.testadapter\\3.2.1\\build\\net462\r\nI'm not sure that is the correct way to test it, but it worked, it seems :) Can you please publish an official version of this nuget package?",
        "createdAt": "2024-02-19T09:29:19Z",
        "updatedAt": "2024-02-19T09:29:19Z",
        "author": {
          "login": "Mek7"
        }
      },
      {
        "body": "> Can you please publish an official version of this nuget package?\r\n\r\nYes that's planned for this week :) I am waiting for a few more fixes to be done.\r\n\r\n> What I did was, downlaod the nuget package, open it in 7-zip, enter folder build/net462 and extracted all files under C:\\Users<my username>.nuget\\packages\\mstest.testadapter\\3.2.1\\build\\net462\r\n\r\nWeird this should have worked.",
        "createdAt": "2024-02-19T09:55:28Z",
        "updatedAt": "2024-02-19T09:55:28Z",
        "author": {
          "login": "Evangelink"
        }
      },
      {
        "body": "@YuliiaKovalova I don't know if you want to keep the ticket open here for some future bug fix. If not, feel free to close it, I have the working workaround for MSTest so I am good :)\r\n\r\n@Mek7 please follow release on MSTest repo.",
        "createdAt": "2024-02-19T10:54:41Z",
        "updatedAt": "2024-02-19T10:54:41Z",
        "author": {
          "login": "Evangelink"
        }
      },
      {
        "body": "@Evangelink , we have had internal discussion on this bug from ProjectSystem perspective and agreed to close it \"by Design\", since we have a workaround and applying any aggressive changes might cause unexpected consequences due to compatibility challenges.\r\n\r\nThank you for your time and quick responsiveness!",
        "createdAt": "2024-02-19T10:59:42Z",
        "updatedAt": "2024-02-19T10:59:42Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      }
    ]
  }
}