{
  "number": 5063,
  "title": "[msbuild][c++] Mojibakes in log if link.exe fails with error",
  "body": "If I compile any c++ project with linker errors, the LINK output will looks like this:\r\n![image](https://user-images.githubusercontent.com/10153298/72680527-b1cfd980-3ab2-11ea-8e44-12b7851e1ac5.png)\r\n\r\nIt seems that MSBuild uses UTF-16 charset for output, as LINK.EXE from C++ uses OEM charset.\r\nIt would be very cool that msbuild could at least call MultibyteCharToWideChar() API on LINK.EXE output to avoid [mojibakes](https://en.wikipedia.org/wiki/Mojibake) as they are sometimes impossible to decode (as example, if you called msbuild in Python tools like [Conan Package Manager](https://conan.io))\r\n\r\n\r\n### Steps to reproduce\r\nClone the https://github.com/leha-bot/kind-of-magick example repo and follow the \"vcpkg-way\" build instructions in README.md as vcpkg is easier to deploy on Windows hosts (and Conan adds yet another bug layer with rendering msbuild utf-16 text as utf-8 \ud83d\ude02 \ud83d\ude48 ).\r\n\r\n### Expected  behavior\r\n\r\nThe build log will contain proper text w/o mojibakes.\r\n\r\n\r\n### Actual behavior\r\n\r\nSee screenshot above.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n\r\n```bat\r\nMicrosoft (R) Build Engine \u0432\u0435\u0440\u0441\u0438\u0438 16.5.0-preview-19562-03+d72e25031 \u0434\u043b\u044f .NET Framework\r\n(C) \u041a\u043e\u0440\u043f\u043e\u0440\u0430\u0446\u0438\u044f \u041c\u0430\u0439\u043a\u0440\u043e\u0441\u043e\u0444\u0442 (Microsoft Corporation). \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b.\r\n\r\n16.5.0.56203\r\n```\r\nMicrosoft Visual Studio 2019 with Russian language pack.\r\n\r\nOS info:\r\nWindows 8.1 (64-bit)\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n```bat\r\ncmake --version\r\ncmake version 3.16.2\r\n\r\nCMake suite maintained and supported by Kitware (kitware.com/cmake).\r\n```\r\n\r\nThank you for your work and MSBuild itself!",
  "state": "OPEN",
  "createdAt": "2020-01-19T12:05:22Z",
  "updatedAt": "2024-02-21T16:30:02Z",
  "closedAt": null,
  "author": {
    "login": "leha-bot"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is related to #4870 and #4904, but I think it requires that the `Link` task specify its output codepage (that's possible today via `ToolTask.StandardOutputEncoding`). The default for that is the OEM codepage, though\r\n\r\nhttps://github.com/microsoft/msbuild/blob/8aa0b87c00c6f26a565cf5e10975769dad9f378b/src/Utilities/ToolTask.cs#L216-L224\r\n\r\nSo I'm a bit surprised that it looks like Link is emitting OEM text that MSBuild is interpreting as UCS-2.\r\n\r\n@mrtrillian, can you take a look at this and let me know what you think?",
        "createdAt": "2020-01-27T22:00:56Z",
        "updatedAt": "2020-01-27T22:00:56Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@leha-bot is there something that makes you think that msbuild is specifically decoding as UTF16/UCS2? If that was the case, I would expect the resulting string to be shorter than expected and to have characters from all kinds of alphabets.\r\n\r\nIt seems more likely to me that `link.exe` is producing UTF-8 or some under code page (less likely) and MSBuild is decoding it as OEM, which is set to Cyrillic code page 855. Indeed, very recently I was in touch with the `link.exe` team because they were always producing OEM-encoded strings and they updated to follow the current console output code page.\r\n\r\n@leha-bot Could you check what code page `chcp` outputs in your console? And could you provide the version of `link.exe`? Do you see the same issue when calling `link.exe` for `test-magick.obj` manually? Finally, if you can provide the copyable mojibake, we should be able to figure out whether this is misinterpreted UTF-8.",
        "createdAt": "2020-01-28T18:23:35Z",
        "updatedAt": "2020-01-28T18:25:08Z",
        "author": {
          "login": "tristanlabelle"
        }
      },
      {
        "body": "Is Link invoked via VC Link Task?  If so, then it is using pipe channel to communicate between link and the task.  This pipe should support full utf16.",
        "createdAt": "2020-04-02T22:07:29Z",
        "updatedAt": "2020-04-02T22:07:29Z",
        "author": {
          "login": "yuehuang010"
        }
      }
    ]
  }
}