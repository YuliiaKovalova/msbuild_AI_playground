{
  "number": 10182,
  "title": "[Bug]: CI/CD pipeline broken after update from 17.9 to 17.10: no Appx packages generated",
  "body": "### Issue Description\n\nWe're running a Github action for our release branches that builds, signs and uploads our apps to the app center.\r\nYesterday we updated the build tools from 17.9 to 17.10 and now the pipeline is broken.\r\n\r\nAs a build step, the action issues the command:\r\n```\r\nmsbuild [our app name].sln /t:Apps\\[our app identifier] /p:Platform=x64 /p:Configuration=ReleaseDeployment /p:PackageVersion=1.2.0.203 /p:AppxBundlePlatforms=x64 /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxPackageSigningEnabled=False \"/p:AppxPackageDir=E:\\1\\trunk\\trunk/AppxPackages/\" /m\r\n```\r\nthis used to generate the artifacts in the directory `E:\\1\\trunk\\trunk\\AppxPackages\\` with version 17.9, however, with version 17.10 the directory isn't generated at all. So the next steps fail as the files aren't found.\r\n\r\nI've been looking around for a breaking change in 17.10, but found nothing. I've also tried to \"fix\" the inconsistent slashes in the path, but that didn't matter (and 17.9 worked fine). So I guess this is a bug?\r\n\r\n\n\n### Steps to Reproduce\n\n`msbuild [our app name].sln /t:Apps\\[our app identifier] /p:Platform=x64 /p:Configuration=ReleaseDeployment /p:PackageVersion=1.2.0.203 /p:AppxBundlePlatforms=x64 /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxPackageSigningEnabled=False \"/p:AppxPackageDir=E:\\1\\trunk\\trunk/AppxPackages/\" /m`\r\n\r\nI cannot share the code, as it's IP. But if this is actually broken, more people should quickly discover this, right? Seems quite essential.\n\n### Expected Behavior\n\nmsbuild generates the .msix file in the `E:\\1\\trunk\\trunk/AppxPackages/` (sub) directories.\n\n### Actual Behavior\n\nThe `E:\\1\\trunk\\trunk/AppxPackages/` is not being generated _at all_.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\nMSBuild version 17.10.4+10fbfbf2e for .NET Framework\r\n17.10.4.21802",
  "state": "CLOSED",
  "createdAt": "2024-05-28T07:50:38Z",
  "updatedAt": "2024-06-24T11:33:13Z",
  "closedAt": "2024-06-24T11:33:13Z",
  "author": {
    "login": "JochemPalmsens"
  },
  "labels": [
    "bug"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "surayya-MS"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "OK, small update here. I've taken the WinUI3 default template project and ran the same command. I got the following output:\r\n![afbeelding](https://github.com/dotnet/msbuild/assets/106731455/51944675-acd2-40a8-b6a1-6641b2cf91ac)\r\n\r\nNow back to my CI/CD pipeline: it seems that is no longer running these \"_GenerateAppxPackageFile:\" steps:\r\n![afbeelding](https://github.com/dotnet/msbuild/assets/106731455/a65ed060-49ff-42b8-a5e5-5a2dfebed973)\r\n\r\nIt just stops after the `_CreateR2RImages:` step.\r\n\r\nWas there a breaking change in a previous version that I missed, and for which the support was dropped?\r\n",
        "createdAt": "2024-05-28T08:36:16Z",
        "updatedAt": "2024-05-28T08:36:16Z",
        "author": {
          "login": "JochemPalmsens"
        }
      },
      {
        "body": "Never mind: this is probably not a bug (I was \"blamed\" for this, as I had updated the VS version on the build server.)\r\n\r\nTurned out that it was caused by somebody adding MAUI components to out WinUI3 project and updating the csproj file.\r\n\r\n`<Project Sdk=\"Microsoft.NET.Sdk\">` was changed to `<Project Sdk=\"Microsoft.NET.Sdk.Razor\">`\r\nand these lines were added\r\n```xml\r\n\t  <UseMaui>true</UseMaui>\r\n\t  <MauiEnablePlatformUsings>true</MauiEnablePlatformUsings>\r\n\t  <SingleProject>true</SingleProject>\r\n\t  <EnableDefaultCssItems>false</EnableDefaultCssItems>\r\n```\r\n\r\none of these broke the CI/CD pipeline as the msix files aren't generated.\r\nStill, the app runs fine... so why aren't the appx packages generated?",
        "createdAt": "2024-05-28T09:53:12Z",
        "updatedAt": "2024-05-28T09:53:29Z",
        "author": {
          "login": "JochemPalmsens"
        }
      },
      {
        "body": "@JochemPalmsens, I'm happy to hear that you managed to find the problem. Given that this not a MSBuild bug, closing this issue.\r\n\r\nNote: changing the project sdk most likely is the problem a problem. I cannot tell for sure without seing the project file.\r\n`Microsoft.NET.Sdk` fully supports WinUI3 projects, whereas `Microsoft.NET.Sdk.Razor` is not designed for desktop applications like WinUI3. The Razor SDK is meant for web applications and might cause build errors or unexpected behavior when used in a WinUI3 project.",
        "createdAt": "2024-06-24T11:33:13Z",
        "updatedAt": "2024-06-24T11:33:13Z",
        "author": {
          "login": "surayya-MS"
        }
      }
    ]
  }
}