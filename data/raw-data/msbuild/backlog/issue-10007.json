{
  "number": 10007,
  "title": "[Feature Request]: The warning in the WriteCodeFragment task should be changed to report the name of the attribute type whose definition it did not find.",
  "body": "### Issue Description\n\nNot sure if this is a bug as such, but had to pick a template all the same. I set my compiler output to Normal and noticed this output:\r\n\r\n```\r\n1>Target GenerateTargetFrameworkMonikerAttribute:\r\n1>  Skipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\n1>Target CoreGenerateAssemblyInfo:\r\n1>  Could not infer the type of parameter \"#1\" because the attribute type is unknown. The value will be treated as a string.\r\n1>Target _GenerateSourceLinkFile:\r\n1>  Updating Source Link file 'obj\\Release\\net8.0\\MSATools.sourcelink.json'.\r\n```\r\n\r\nWhy does it say:\r\n\r\n> Could not infer the type of parameter \"#1\" because the attribute type is unknown. The value will be treated as a string.\r\n\r\nI have tried to find an explanation, but it is a little over my head. Eg:\r\n\r\nhttps://github.com/dotnet/msbuild/issues/2281\r\n\r\nThis is a C# .NET8.0 Console App build with latest version of Visual Stduio 2022.\n\n### Steps to Reproduce\n\nI can't get this to reproduce with an empty C# console project so I am not sure of the steps to reproduce.\n\n### Expected Behavior\n\nI don't expect to see this warning.\n\n### Actual Behavior\n\nI am getting this warning.\n\n### Analysis\n\nInitially I thought it was because my version numbers for `n.n.n` and I changed them to `n.n.n.n`. It it was not the reason.\n\n### Versions & Configurations\n\nMSBuild version 17.9.8+b34f75857 for .NET Framework\r\n17.9.8.16306\r\n\r\nWindows  11 x64",
  "state": "OPEN",
  "createdAt": "2024-04-14T09:32:27Z",
  "updatedAt": "2024-10-10T16:01:18Z",
  "closedAt": null,
  "author": {
    "login": "ajtruckle"
  },
  "labels": [
    "bug",
    "help wanted",
    "backlog",
    "Feature Request",
    "Priority:3",
    "triaged",
    "internal-team-onboarding"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Get a more detailed MSBuild log and check what is being passed to the AssemblyAttributes parameter of the WriteCodeFragment task.  I think WriteCodeFragment was unable to locate the definition of some attribute type that is listed there, and thus could not check the parameter types of the constructors.  If the type is defined in some assembly that WriteCodeFragment does not search, I don't think there is a way to tell WriteCodeFragment from where to load it; but you can instead add item metadata to specify the type of the parameter so that WriteCodeFragment won't have to find it by reflection.\n\nThis still deserves fixes in .NET:\n\n* If .NET SDK generated the item that was passed in AssemblyAttributes, then it should be changed to set the parameter type.\n* The warning in the WriteCodeFragment task should be changed to report the name of the attribute type whose definition it did not find.",
        "createdAt": "2024-04-14T10:55:35Z",
        "updatedAt": "2024-04-14T10:56:00Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo \r\n> Get a more detailed MSBuild log and check what is being passed to the `AssemblyAttributes `parameter of the `WriteCodeFragment `task.\r\n\r\nI have just set the build mode to **Diagnostic** and this is what I can find that is relevant:\r\n\r\n```\r\n1>  Using \"WriteCodeFragment\" task from assembly \"Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\n1>  Task \"WriteCodeFragment\"\r\n1>    Task Parameter:OutputFile=obj\\Release\\net8.0\\MSATools.AssemblyInfo.cs\r\n1>    Task Parameter:Language=C#\r\n1>    Task Parameter:\r\n1>        AssemblyAttributes=\r\n1>            Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute\r\n1>                    _Parameter1=~~~~~~~~~~~~~~~~~~\r\n1>            System.Reflection.AssemblyCompanyAttribute\r\n1>                    _Parameter1=MSATools\r\n1>            System.Reflection.AssemblyConfigurationAttribute\r\n1>                    _Parameter1=Release\r\n1>            System.Reflection.AssemblyCopyrightAttribute\r\n1>                    _Parameter1=Andrew Truckle \u00a9 2024\r\n1>            System.Reflection.AssemblyDescriptionAttribute\r\n1>                    _Parameter1=MSA Tools Console\r\n1>            System.Reflection.AssemblyFileVersionAttribute\r\n1>                    _Parameter1=2024.4.14.0\r\n1>            System.Reflection.AssemblyInformationalVersionAttribute\r\n1>                    _Parameter1=2024.4.14.0\r\n1>            System.Reflection.AssemblyProductAttribute\r\n1>                    _Parameter1=MSATools\r\n1>            System.Reflection.AssemblyTitleAttribute\r\n1>                    _Parameter1=MSATools\r\n1>            System.Reflection.AssemblyVersionAttribute\r\n1>                    _Parameter1=2024.4.14.0\r\n1>    Could not infer the type of parameter \"#1\" because the attribute type is unknown. The value will be treated as a string.\r\n```\r\n\r\nFrom Package / General in Project Settings:\r\n\r\n![image](https://github.com/dotnet/msbuild/assets/7985331/83288ae2-fb53-488a-a9ad-2ac63accf418)\r\n",
        "createdAt": "2024-04-14T11:00:39Z",
        "updatedAt": "2024-04-14T11:03:54Z",
        "author": {
          "login": "ajtruckle"
        }
      },
      {
        "body": "I'd blame Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute; that seems unlikely to be found by WriteCodeFragment.\n\n<https://github.com/dotnet/runtime/blob/9e6ba1f68c6a9c7206dacdf1e4cac67ea19931eb/src/libraries/Microsoft.Extensions.Configuration.UserSecrets/src/buildTransitive/Microsoft.Extensions.Configuration.UserSecrets.targets#L9-L11>\n\nThis could be changed to set the parameter type metadata if the MSBuild version is high enough that its WriteCodeFragment task supports such metadata and won't treat it as another parameter.",
        "createdAt": "2024-04-14T11:07:37Z",
        "updatedAt": "2024-04-14T11:07:37Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo \r\n> This could be changed to set the parameter type metadata if the MSBuild version is high enough that its `WriteCodeFragment` task supports such metadata and won't treat it as another parameter.\r\n\r\nThis is the version that I have:\r\n\r\n```\r\nMSBuild version 17.9.8+b34f75857 for .NET Framework\r\n17.9.8.16306\r\n```\r\n\r\n> I'd blame `Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute;` that seems unlikely to be found by `WriteCodeFragment`.\r\n\r\nNote that `UserSecretsIdAttribute` value there is not actually `~~~~~~~~~~~~~~~~~~`. I changed it from a GUID value. Was not sure if I should share it publically.",
        "createdAt": "2024-04-14T11:12:07Z",
        "updatedAt": "2024-04-14T11:12:07Z",
        "author": {
          "login": "ajtruckle"
        }
      },
      {
        "body": "I meant, if the targets file in the Microsoft.Extensions.Configuration.UserSecrets package is modified, then that should preferably be done in such a way that compatibility with older versions of MSBuild doesn't break.\n\nThe value of the UserSecretsIdAttribute does not matter for the \"Could not infer\" message; only the attribute type matters.  But the user secrets ID isn't very secret anyway; anybody to whom you distribute the executable can read it from the assembly attributes, or capture it by monitoring the names of opened files (e.g. `strace` on Linux) when the process attempts to load the user secrets from the file system.",
        "createdAt": "2024-04-14T11:21:37Z",
        "updatedAt": "2024-04-14T11:21:37Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo \r\nOk. So, I just leave this until it is fixed?",
        "createdAt": "2024-04-14T11:24:36Z",
        "updatedAt": "2024-04-14T11:24:36Z",
        "author": {
          "login": "ajtruckle"
        }
      },
      {
        "body": "Looking at the message again\n\n```\n1>Target CoreGenerateAssemblyInfo:\n1>  Could not infer the type of parameter \"#1\" because the attribute type is unknown. The value will be treated as a string.\n```\n\nThis doesn't even say \"warning\" so it's just a message.  I don't think you _need_ to do anything to it.\n\nIf you want to get rid of it anyway, then one way would be to set \\<GenerateUserSecretsAttribute\\>false\\</GenerateUserSecretsAttribute\\> in your project to prevent the attribute from being generated, and instead add it yourself, in one of these places:\n\n- in AssemblyInfo.cs: then the WriteCodeFragment task is not involved, and the C# compiler knows where the attribute type is defined.  But if you ever change the user secrets ID then you'd have to change it in two places: in the csproj for `dotnet user-secrets`, and in AssemblyInfo.cs for runtime.\n- as an AssemblyAttribute item in the csproj: the same way as Microsoft.Extensions.Configuration.UserSecrets.targets adds it, but you'd add the parameter type too.\n\nAs a user of MSBuild, I'd like to keep this issue open for the feature request\n\n> The warning in the WriteCodeFragment task should be changed to report the name of the attribute type whose definition it did not find.\n\nbut if you prefer closing this one, then I can file a separate one for that.",
        "createdAt": "2024-04-14T11:35:24Z",
        "updatedAt": "2024-04-14T11:41:15Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo \r\n> As a user of MSBuild, I'd like to keep this issue open for the feature request\r\n\r\nWe can leave it open. \ud83d\udc4d",
        "createdAt": "2024-04-14T11:45:33Z",
        "updatedAt": "2024-04-14T11:45:33Z",
        "author": {
          "login": "ajtruckle"
        }
      },
      {
        "body": "@KalleOlaviNiemitalo \r\nI have changed the **title** of this issue but I can't add the **Feature Request** label.",
        "createdAt": "2024-04-14T18:35:39Z",
        "updatedAt": "2024-04-14T18:35:39Z",
        "author": {
          "login": "ajtruckle"
        }
      }
    ]
  }
}