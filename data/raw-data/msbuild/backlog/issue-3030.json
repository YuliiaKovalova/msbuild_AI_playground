{
  "number": 3030,
  "title": "Loading projects by XML doesn't allow any way to provide location-based reserved props",
  "body": "### Steps to reproduce\r\nMinimal repro here:\r\nhttps://github.com/dfederm/msbuild/tree/xml-load-missing-reserved-props/src/Samples/EmptyReservedProperties\r\n\r\n### Expected  behavior\r\nConsole output:\r\n```\r\nProject loaded\r\n```\r\n\r\n### Actual behavior\r\nConsole output:\r\n```\r\nException!!!\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The expression \"[MSBuild]::GetDirectoryNameOfFileAbove('', Directory.Build.props)\" cannot be evaluated. The path is not of a legal form.\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject[T1,T2](IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1)\r\n   at Microsoft.Build.Evaluation.Expander`2.Function`1.Execute(Object objectInstance, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertyBody(String propertyBody, Object propertyValue, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertiesLeaveTypedAndEscaped(String expression, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties)\r\n   at Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertiesLeaveEscaped(String expression, IPropertyProvider`1 properties, ExpanderOptions options, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties)\r\n   at Microsoft.Build.Evaluation.Expander`2.ExpandIntoStringLeaveEscaped(String expression, ExpanderOptions options, IElementLocation elementLocation)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpression(String directoryOfImportingFile, ProjectImportElement importElement, String unescapedExpression, Boolean throwOnFileNotExistsError, List`1& imports)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext)\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(XmlReader xmlReader)\r\n   at EmptyReservedProperties.Program.Main(String[] args) in C:\\Users\\David\\Code\\msbuild\\src\\Samples\\EmptyReservedProperties\\Program.cs:line 40\r\n```\r\n\r\n### Environment data\r\nUsing the latest version of Microsoft.Build.Runtime (15.5.180.1)\r\n\r\n### Thoughts/Opinion\r\nThis is very likely because when loading from xml directly, there's no \"this file\". There is a `FullPath` property on `Project` which might do the trick if set and re-evaluated (haven't tested), but that assumed you've already loaded the project in the first place, which you can't do.\r\n\r\nPerhaps when providing an xml reader directly there can be an overload which provides a file name which MsBuild pretends \"this\" file is.\r\n\r\nI also tried setting `MSBuildThisFileDirectory` as a global property, but as expected got this:\r\n```\r\nSystem.ArgumentException: The \"MSBuildThisFileDirectory\" property name is reserved.\r\n```\r\n\r\nThis seems to apply to any property that depends on a filename/location, including `MSBuildProjectName`, `MSBuildThisFileDirectory`, `MSBuildThisFile`, etc.",
  "state": "OPEN",
  "createdAt": "2018-02-25T02:13:39Z",
  "updatedAt": "2024-02-21T16:34:45Z",
  "closedAt": null,
  "author": {
    "login": "dfederm"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}