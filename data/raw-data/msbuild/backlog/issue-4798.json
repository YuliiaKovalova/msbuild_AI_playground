{
  "number": 4798,
  "title": "SdkResolvers can be called multiple times for the same SDK",
  "body": "### Steps to reproduce\r\n\r\nBuild a set of projects in an SLN and reference multiple MSBuild project SDKs\r\n\r\nCommand line\r\n```\r\nmsbuild /bl\r\n```\r\n### Expected  behavior\r\nEach SDK is resolved exactly once for the entire build and projects that use the same SDK should get a cached result.\r\n\r\n### Actual behavior\r\nSome SDKs are resolved multiple times",
  "state": "CLOSED",
  "createdAt": "2019-10-09T18:28:26Z",
  "updatedAt": "2024-02-21T17:06:41Z",
  "closedAt": "2019-10-09T21:16:07Z",
  "author": {
    "login": "jeffkl"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "jeffkl"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.4"
  },
  "comments": {
    "nodes": [
      {
        "body": "### Root Cause\r\n\r\nIn the [CachingSdkResolverService](https://github.com/microsoft/msbuild/blob/master/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverService.cs) we use a `ConcurrentDictionary<T>` and call the `GetOrAdd()` method.  However [the documentation](https://docs.microsoft.com/en-us/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd?view=netframework-4.8) for `GetOrAdd()` states:\r\n\r\n> If you call GetOrAdd simultaneously on different threads, valueFactory may be called multiple times, but only one key/value pair will be added to the dictionary.\r\n\r\nSome SDK resolvers might not expect to be called more than once and could fail.  Here is an example failling build because of an SDK resolver that had trouble being called more than once at the same time:\r\n\r\nhttps://dev.azure.com/jeffkl/Public/_build/results?buildId=477\r\n\r\n### Solution\r\nWe need to return a `Lazy<T>` instead of a value because `GetOrAdd()` is guaranteed to return the same value to all threads.  This would ensure that each SDK is only resolved once.",
        "createdAt": "2019-10-09T18:33:07Z",
        "updatedAt": "2019-10-09T18:33:07Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  }
}