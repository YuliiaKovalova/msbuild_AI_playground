{
  "number": 6206,
  "title": "Task returns true and logs error results in successful builds in unit tests",
  "body": "### Issue Description\r\nIn WarningsAsMessagesAndErrors_Tests.cs, you can create a test scenario that has a task return true and log an error, and the build result is a success instead of a failure.\r\n\r\n### Steps to Reproduce\r\nAdd this test class:\r\n```\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\r\n\r\nusing Microsoft.Build.Framework;\r\nusing Microsoft.Build.Utilities;\r\nnamespace Microsoft.Build.UnitTests\r\n{\r\n    public class CustomLogAndReturnTask : Task\r\n    {\r\n        public string WarningCode { get; set; }\r\n\r\n        public string ErrorCode { get; set; }\r\n\r\n        public bool ReturnHasLoggedErrors { get; set; }\r\n\r\n        [Required]\r\n        public bool Return { get; set; }\r\n\r\n        /// <summary>\r\n        /// This task returns and logs what you want based on the running test.\r\n        /// </summary>\r\n        public override bool Execute()\r\n        {\r\n            if(!string.IsNullOrEmpty(WarningCode))\r\n            {\r\n                Log.LogWarning(null, WarningCode, null, null, 0, 0, 0, 0, \"Warning Logged!\", null);\r\n            }\r\n\r\n            if(!string.IsNullOrEmpty(ErrorCode))\r\n            {\r\n                Log.LogError(null, ErrorCode, null, null, 0, 0, 0, 0, \"Error Logged!\", null);\r\n            }\r\n            return ReturnHasLoggedErrors ? !Log.HasLoggedErrors : Return;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAdd this test case:\r\n```\r\n        /// <summary>\r\n        /// This is incredibly confusing and shouldn't work this way. This was also tested\r\n        /// in latest master (6819f7a) and passed. Keeping this test here for visibility.\r\n        /// This specific scenario does not repro when building a standard project with a bootstrapped MSBuild.\r\n        /// </summary>\r\n        [Fact]\r\n        public void TaskReturnsTrueButLogsError_BuildShouldFinishAndFail()\r\n        {\r\n            using (TestEnvironment env = TestEnvironment.Create(_output))\r\n            {\r\n                TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@\"\r\n                <Project>\r\n                    <UsingTask TaskName = \"\"CustomLogAndReturnTask\"\" AssemblyName=\"\"Microsoft.Build.Engine.UnitTests\"\"/>\r\n                    <Target Name='Build'>\r\n                        <CustomLogAndReturnTask Return=\"\"true\"\" ErrorCode=\"\"MSB1235\"\"/>\r\n                        <CustomLogAndReturnTask Return=\"\"true\"\" WarningCode=\"\"MSB1234\"\"/>\r\n                    </Target>\r\n                </Project>\");\r\n\r\n                // What????\r\n                MockLogger logger = proj.BuildProjectExpectSuccess();\r\n\r\n                logger.WarningCount.ShouldBe(1);\r\n                logger.ErrorCount.ShouldBe(1);\r\n\r\n                // The build should CONTINUE when a task returns true.\r\n                logger.AssertLogContains(\"MSB1234\");\r\n            }\r\n        }\r\n```\r\n\r\n### Expected Behavior\r\nThis test will pass, though it should fail.\r\n\r\n### Actual Behavior\r\nHere's the output log:\r\n```\r\nBuild started.\r\nProject \"build.proj\" (default targets):\r\nBuilding with tools version \"Current\".\r\nTarget \"Build\" in project \"C:\\Users\\bevillal\\AppData\\Local\\Temp\\jjik1gim.uf1\\Temporary916c230401364e6faec586e2a834d69e\\build.proj\" (entry point):\r\nUsing \"CustomLogAndReturnTask\" task from assembly \"Microsoft.Build.Engine.UnitTests\".\r\nTask \"CustomLogAndReturnTask\"\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\jjik1gim.uf1\\Temporary916c230401364e6faec586e2a834d69e\\build.proj(5,25):  error MSB1235: Error Logged!\r\nDone executing task \"CustomLogAndReturnTask\".\r\nTask \"CustomLogAndReturnTask\"\r\nC:\\Users\\bevillal\\AppData\\Local\\Temp\\jjik1gim.uf1\\Temporary916c230401364e6faec586e2a834d69e\\build.proj(6,25):  warning MSB1234: Warning Logged!\r\nDone executing task \"CustomLogAndReturnTask\".\r\nDone building target \"Build\" in project \"build.proj\".\r\nDone building project \"build.proj\".\r\nBuild succeeded.\r\n\r\n```\r\n\r\n### Analysis\r\nThis does not happen in live scenarios. Simply build this project that has a task called CustomLogAndReturnTask (same as above).\r\n```\r\n<Project>\r\n  <!-- Expected Results -->\r\n  <!-- Task Returns: true -->\r\n  <!-- Logs: Error -->\r\n  <!-- Build: Continues -->\r\n  <!-- Result: Fail -->\r\n  <!-- Should see: MSB4321;MSB0000 -->\r\n  <Target Name=\"TaskReturnsTrue_LogsError\">\r\n    <CustomLogAndReturnTask Return=\"true\" ErrorCode=\"MSB4321\"/>\r\n    <CustomLogAndReturnTask Return=\"true\" WarningCode=\"MSB0000\"/>\r\n  </Target>\r\n</Project>\r\n```\r\nYou should see that the build failed.\r\n\r\n### Versions & Configurations\r\nHappens in latest master as of 6819f7a.",
  "state": "OPEN",
  "createdAt": "2021-03-01T21:34:15Z",
  "updatedAt": "2024-01-31T08:21:49Z",
  "closedAt": null,
  "author": {
    "login": "benvillalobos"
  },
  "labels": [
    "bug",
    "testing",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}