{
  "number": 2527,
  "title": "ImplicitlyExpandNETStandardFacades option on MSBuild Extensions corrupts build",
  "body": "https://social.msdn.microsoft.com/Forums/en-US/51dc828b-43ca-4177-b68e-7a6a9cf81db5/ms-build-extensions-file-corrupt-my-bin-web-api-folder?forum=msbuild\r\n\r\nHi All,\r\nIt seems that when my .NET 4.7 (or 4.61+) has dependencies to .NEt standard 1.1 or higher, MSBuild merges some Libraries from this path to the bin folder (Web API project)\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Microsoft\\Microsoft.NET.Build.Extensions\\net461\\lib\r\n\r\nThese DLLs however, are OLDER than the ones that Nuget gets for for example, System.Net.Http , System.Runtime, System.Runtime.InteropServices etc\r\nMany assemblies thus, are corrupted with incorrect, older 4.61 assemblies.\r\n\r\nMy projects are set to work for .NEt 4.7. The libraries that require dotnetstandard are not mine, but from MS, to say, OData 6.1 (and 6.0 also). So I cannot get rid of them.\r\n\r\n\r\nPlease somebody has a workaround or a fix?\r\n\r\nThanks\r\n\r\n(My workaround now, is to drop these DLLs into the bin folder, which are the correct DLls that Nuget retrieves)\r\n![drag](https://user-images.githubusercontent.com/3471239/30473873-19643c48-9a02-11e7-8a96-93beceb7aee7.PNG)\r\n\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2017-09-15T08:35:16Z",
  "updatedAt": "2024-02-21T17:16:41Z",
  "closedAt": "2022-10-17T10:36:34Z",
  "author": {
    "login": "egbertn"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "These warning icons in the references section in my Visual STudio 2017 15.3.4 also\r\n![drag](https://user-images.githubusercontent.com/3471239/30478457-6485e0dc-9a11-11e7-9e28-80ea31efaa7c.PNG)\r\nso is indication of the conflicting files. It's quite huge.",
        "createdAt": "2017-09-15T10:29:10Z",
        "updatedAt": "2017-09-15T10:29:10Z",
        "author": {
          "login": "egbertn"
        }
      },
      {
        "body": "The same happens for me though i have 4.6.2 MVC project. It has NuGet reference to `System.Runtime` 4.3, but with VS 2017 15.3.5 it always uses old `System.Runtime` from `C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Microsoft\\Microsoft.NET.Build.Extensions\\net461\\lib` and due that my build fails.\r\n\r\nAnd the same warning icons are displayed for me too.",
        "createdAt": "2017-09-24T20:14:44Z",
        "updatedAt": "2017-09-24T20:14:44Z",
        "author": {
          "login": "sergey-litvinov"
        }
      },
      {
        "body": "And also the same issue is mentioned here - https://dzone.com/articles/net-core-dll-hell-is-here-can-net-core-20-save-us",
        "createdAt": "2017-09-24T20:18:00Z",
        "updatedAt": "2017-09-24T20:18:00Z",
        "author": {
          "login": "sergey-litvinov"
        }
      },
      {
        "body": "You can find an overview of some of what is going on here and what issues there are here: https://github.com/dotnet/standard/issues/481\r\n\r\nWhat makes you think that older DLLs are being chosen in place of newer ones?  Are you looking at the timestamp, assembly version, or what?  Generally we should choose the assembly with the higher version number, and we don't look at the timestamp.",
        "createdAt": "2017-09-25T04:31:53Z",
        "updatedAt": "2017-09-25T04:31:53Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "ok, here is my case. I have a couple of class libraries. They use `Microsoft.CodeAnalysis` 2.0.0-rc5-61501-05 package that has reference to `Microsoft.CodeAnalysis.Common` that has reference to `System.Runtime`. We use Roslyn package from myget feed as we needed VB Script fucntionality that wasn't present in main nuget package.\r\n\r\nThese packages are used in web app that also has web api. \r\n\r\nPart of packages.config for webapp:\r\n\r\n\t<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\t<packages>\r\n\t  <package id=\"Microsoft.AspNet.Mvc\" version=\"4.0.40804.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.Mvc.FixedDisplayModes\" version=\"1.0.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.Providers.Core\" version=\"1.2\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.Providers.LocalDB\" version=\"1.1\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.Razor\" version=\"2.0.20715.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.Web.Optimization\" version=\"1.0.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.WebApi\" version=\"4.0.20710.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.WebApi.Client\" version=\"4.0.30506.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.WebApi.Core\" version=\"4.0.20710.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.WebApi.WebHost\" version=\"4.0.20710.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.AspNet.WebPages\" version=\"2.0.20710.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.Azure.KeyVault.Core\" version=\"1.0.0\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.Bcl\" version=\"1.1.7\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.Bcl.Build\" version=\"1.0.14\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.Bcl.Immutable\" version=\"1.1.20-beta\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.Bcl.Metadata\" version=\"1.0.9-alpha\" targetFramework=\"net45\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.Analyzers\" version=\"1.2.0-beta2\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.Common\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.CSharp\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.CSharp.Scripting\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.Elfie\" version=\"0.10.6-rc2\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.Scripting.Common\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.VisualBasic\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.VisualBasic.Scripting\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.VisualBasic.Workspaces\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.CodeAnalysis.Workspaces.Common\" version=\"2.0.0-rc5-61501-05\" targetFramework=\"net462\" />\r\n\t  <package id=\"Microsoft.Composition\" version=\"1.0.27\" targetFramework=\"net45\" />\r\n\t  <package id=\"System.AppContext\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Console\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.IO\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.IO.Compression\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.IO.Compression.ZipFile\" version=\"4.0.1\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.IO.FileSystem\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.IO.FileSystem.Primitives\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Reflection\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Reflection.Extensions\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Reflection.Metadata\" version=\"1.4.2\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Reflection.Primitives\" version=\"4.0.1\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Resources.ResourceManager\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Runtime\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Runtime.Extensions\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Runtime.Handles\" version=\"4.0.1\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Runtime.InteropServices\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Runtime.InteropServices.RuntimeInformation\" version=\"4.0.0\" targetFramework=\"net462\" />\r\n\t  <package id=\"System.Runtime.Numerics\" version=\"4.3.0\" targetFramework=\"net462\" />\r\n\t</packages>\r\n\r\nSo it references to System.Runtime 4.3.0. Locally it's stored at `packages\\System.Runtime.4.3.0\\lib\\net462\\System.Runtime.dll` and it has size of 29880 bytes. dotPeek shows that actual assembly version is `System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a`.\r\n\r\nMy web app csproj part looks like\r\n\r\n```    \r\n<Reference Include=\"System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\r\n\t<HintPath>..\\packages\\System.Runtime.4.3.0\\lib\\net462\\System.Runtime.dll</HintPath>\r\n\t<Private>True</Private>\r\n</Reference>\r\n```\r\n\r\nAnd i don't have `AutoGenerateBindingRedirects` and `GenerateBindingRedirectsOutputType` there or in other class libraries. I also have such lines in web.config:\r\n\r\n```\r\n<system.web>\r\n\t<httpRuntime maxQueryStringLength=\"8192\" maxUrlLength=\"8192\" enable=\"true\" maxRequestLength=\"1048576\" targetFramework=\"4.6.2\" />\r\n\t<compilation debug=\"true\" targetFramework=\"4.6.2\">\r\n\t\t<assemblies>\r\n\t\t\t<add assembly=\"System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\r\n\t\t</assemblies>\r\n\t</compilation>\r\n...\r\n<dependentAssembly>\r\n\t<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n\t<bindingRedirect oldVersion=\"0.0.0.0-4.1.1.0\" newVersion=\"4.1.1.0\" />\r\n</dependentAssembly>\r\n```\r\n\r\nSo it has redirect to the same 4.1.1.0 version so it looks good.\r\n\r\nWhen i do actual build i got warning ```1>  Consider app.config remapping of assembly \"System.Runtime, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.1.1.0\" [SomeWeb.Web\\bin\\System.Runtime.dll] to Version \"4.1.2.0\" [C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Microsoft\\Microsoft.NET.Build.Extensions\\\\net461\\ref\\System.Runtime.dll] to solve conflict and get rid of warning.```  . It still compiles fine, but when app starts i'm getting\r\n\r\n```\r\nParser Error Message: Could not load file or assembly 'System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n\r\nSource Error: \r\n\r\n\r\nLine 67:     <compilation debug=\"true\" targetFramework=\"4.6.2\">\r\nLine 68:       <assemblies>\r\nLine 69:         <add assembly=\"System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\r\nLine 70:       </assemblies>\r\nLine 71:     </compilation>\r\n```\r\n\r\nAfter the build in web app `bin` folder i'm seeing different `System.Runtime` assembly with size of 29386 bytes. And dotPeek shows such information `System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a`\r\n\r\nSo my project references to System.Runtime 4.3 (actual version 4.1.1.0), but during build it is replaced to 4.1.2.0. \r\n\r\nIf i add `<ImplicitlyExpandNETStandardFacades>false</ImplicitlyExpandNETStandardFacades>` like @egbertn mentions, then it fixes issue and it doesn't replace my assemblies. I'm not totally sure as i don't touch this project too often, but it might be that issue came with VS 2017 update 3. And for latest VS 2017 15.3.5 it still happens.\r\n\r\n\r\n",
        "createdAt": "2017-09-25T10:35:42Z",
        "updatedAt": "2017-09-25T10:35:42Z",
        "author": {
          "login": "sergey-litvinov"
        }
      },
      {
        "body": "I've the same issue as @sergey-litvinov describes. I've found out, the 4.1.2.0 Version of System.Runtime is the one wich is in the NetStandart2.0.1 Nuget Package.",
        "createdAt": "2017-10-17T22:03:49Z",
        "updatedAt": "2017-10-17T22:03:49Z",
        "author": {
          "login": "jogibear9988"
        }
      },
      {
        "body": "In the same boat as people above. Number of libraries from 4.6.1 Extensions overwrite referenced libs and causing some dll hell.\r\nAny update on when it can be properly fixed ?\r\n\r\nGoing to try this `<ImplicitlyExpandNETStandardFacades>false</ImplicitlyExpandNETStandardFacades>` workaround. ",
        "createdAt": "2018-08-20T07:23:00Z",
        "updatedAt": "2018-08-20T07:23:00Z",
        "author": {
          "login": "centur"
        }
      },
      {
        "body": "My own solution (for a .net 4.6.2 winform solution):\r\n- Rename this directory \"Microsoft\\Microsoft.NET.Build.Extensions\\\\net461\"\r\n- Clean and rebuild solution -> there will be errors\r\n- Solve them, most of errors are about:\r\n-- No System.Net.Http > add via nuget\r\n-- No \"net standard\" reference > add `<Reference Include=\"netstandard\" />` to the csproj file\r\n\r\n\r\nQuestion: Is there any way to apply `<ImplicitlyExpandNETStandardFacades>false</ImplicitlyExpandNETStandardFacades>` for solution?",
        "createdAt": "2022-10-17T09:13:11Z",
        "updatedAt": "2022-10-17T10:25:45Z",
        "author": {
          "login": "haiduong87"
        }
      },
      {
        "body": "Obviously not monintored anymore, so close.",
        "createdAt": "2022-10-17T10:36:46Z",
        "updatedAt": "2022-10-17T10:36:46Z",
        "author": {
          "login": "egbertn"
        }
      }
    ]
  }
}