{
  "number": 4410,
  "title": "Question: how to get number of Cores in msbuild proj.",
  "body": "Hello, I need a way to run Xunit controlled by Msbuild project on different machines with different OS and number or Cores. We need to pass the number of threads that Xunit can create and we want it to be `(number_of cores_that_the_machine_has + 1) / 2`. \r\n\r\nSo I want to write something like:\r\n```\r\n    <NUMBER_OF_PROCESSORS>\"a magic code to get what number of cores including hyperthreading\"</NUMBER_OF_PROCESSORS>\r\n    <MaxThreads>$([MSBuild]::Divide([MSBuild]::Add($(NUMBER_OF_PROCESSORS), 1), 2))</MaxThreads>\r\n```\r\n\r\n\r\nCould you please help me to do that? In issue #435 I see that you referenced that it is possible, but not clear how.",
  "state": "CLOSED",
  "createdAt": "2019-05-29T23:32:24Z",
  "updatedAt": "2024-02-21T17:08:16Z",
  "closedAt": "2019-05-31T18:57:02Z",
  "author": {
    "login": "sandreenko"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "Have you considered writing a simple task that returns `Environment.ProcessorCount` and using that to set the MaxThreads? I haven't read the issue you linked, but this might be enough for you.",
        "createdAt": "2019-05-30T00:25:57Z",
        "updatedAt": "2019-05-30T00:25:57Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "This should be enough\r\n```xml\r\n<Project DefaultTarget=\"Run\">\r\n  <Target Name=\"Run\">\r\n    <PropertyGroup>\r\n      <NumberOfProcessors>$([System.Environment]::ProcessorCount)</NumberOfProcessors>\r\n    </PropertyGroup>\r\n    <Message Text=\"$(NumberOfProcessors)\" Importance=\"High\" />\r\n  </Target>\r\n</Project>\r\n```\r\n",
        "createdAt": "2019-05-30T17:35:46Z",
        "updatedAt": "2019-05-30T17:35:46Z",
        "author": {
          "login": "echesakov"
        }
      },
      {
        "body": "> Have you considered writing a simple task that returns Environment.ProcessorCount and using that to set the MaxThreads? I haven't read the issue you linked, but this might be enough for you.\r\n\r\nAccording to the issue, it will give us the wrong result on arm64 machines with 48 cores, we will get 32 instead of 48.\r\n\r\nalso https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2019 [System.Environment]::ProcessorCount is not listed as available member, is it?\r\n\r\n\r\n\r\n",
        "createdAt": "2019-05-30T17:37:08Z",
        "updatedAt": "2019-05-30T17:37:08Z",
        "author": {
          "login": "sandreenko"
        }
      },
      {
        "body": "I think you have to do something lower level to get access to the real processor count when you're in a 32-bit process like MSBuild. I remember when we brainstormed how to fix this for msbuild.exe there wasn't an obvious choice. WMI query would probably work.",
        "createdAt": "2019-05-31T18:33:37Z",
        "updatedAt": "2019-05-31T18:33:37Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "Yeah, if anyone comes up with a good way to get \"real\" processor count from a 32-bit process I'd love to see it.\r\n\r\nYou might be able to exec `cmd.exe /c set NUMBER_OF_PROCESSORS` and capture the output, which should use the 64-bit cmd and thus give you a truthful result (up to 64; I think it fails in the same way for > 64 cores).\r\n\r\nOne thing to consider @sandreenko: it's often dangerous to launch child processes that run multithreaded from MSBuild, because you can get into a situation where you're trying to run NUM_PROCS (msbuild processes) * NUM_PROCS (each child process) threads, which can swamp the OS scheduler and be much slower than ideal.",
        "createdAt": "2019-05-31T18:48:49Z",
        "updatedAt": "2019-05-31T18:48:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Got it, we have checked that `$([System.Environment]::ProcessorCount)` is available from msbuild scripts, I think it suits us for now.\r\nThank you.",
        "createdAt": "2019-05-31T18:57:02Z",
        "updatedAt": "2019-05-31T18:57:02Z",
        "author": {
          "login": "sandreenko"
        }
      }
    ]
  }
}