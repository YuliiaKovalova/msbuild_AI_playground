{
  "number": 2036,
  "title": "Log our own error if a task returned false but didn't log any errors",
  "body": "If a task violates the implicit expectation that it should return false iff it logged any errors MSBuild fails the build, but doesn't indicate why.\r\n\r\nWe should consider at least adding a warning, but ideally failing the build (perhaps in strict mode?)",
  "state": "CLOSED",
  "createdAt": "2017-05-01T03:12:04Z",
  "updatedAt": "2024-02-21T17:19:29Z",
  "closedAt": "2020-04-28T21:20:32Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "help wanted",
    "Area: Debuggability",
    "Feature Request",
    "User Experience",
    "Feature: Warning Waves",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.7 Preview 1"
  },
  "comments": {
    "nodes": [
      {
        "body": "@KirillOsenkov We had discussed overriding a task result if it logged errors but decided it would have too large of an impact.  I haven't actually seen a task that logs an error but doesn't return `false`.  Have you hit this a lot?",
        "createdAt": "2017-05-01T14:15:36Z",
        "updatedAt": "2017-05-01T14:15:36Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Just once, but it hurt enough ;) The symptoms is you get all green/gray output (no red), and a Build failed in the end. Good luck.\r\n\r\nStructured Log Viewer just showed a Build failed at the end with no other errors. Had to painstakingly read everything until I stumbled at a *message* from the task at fault that gave me the hint.\r\n\r\nWe definitely need at least a warning here.",
        "createdAt": "2017-05-01T16:58:13Z",
        "updatedAt": "2017-05-01T16:58:13Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Oh, and its the other case: it returns false, but doesn't log an error.",
        "createdAt": "2017-05-01T16:59:12Z",
        "updatedAt": "2017-05-01T16:59:12Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "We've definitely talked about this before but I couldn't find a bug. It does seem entirely reasonable to inject an \"error MSBXXXX: Task X returned failure but did not log an error\" while still in the logging context of the task. Not sure how easy that would be.",
        "createdAt": "2017-05-01T17:46:19Z",
        "updatedAt": "2017-05-01T17:46:19Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Note that this wouldn't be a breaking change because their build fails anyway, it's just the log doesn't have any errors displayed.",
        "createdAt": "2017-11-25T01:49:47Z",
        "updatedAt": "2017-11-25T01:49:47Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Does the log contain the value of what the task returned? If not, maybe that could be something to consider.",
        "createdAt": "2017-11-27T11:31:53Z",
        "updatedAt": "2017-11-27T11:31:53Z",
        "author": {
          "login": "atanasa"
        }
      },
      {
        "body": "Let's just do this in the first preview of 16.5. YOLO and this keeps biting people. Any objections?",
        "createdAt": "2019-10-02T19:30:25Z",
        "updatedAt": "2019-10-02T19:30:25Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": ":heart:",
        "createdAt": "2019-10-02T20:13:37Z",
        "updatedAt": "2019-10-02T20:13:37Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Sounds good to me.",
        "createdAt": "2019-10-02T21:14:18Z",
        "updatedAt": "2019-10-02T21:14:18Z",
        "author": {
          "login": "livarcocc"
        }
      },
      {
        "body": "We pulled this out of 16.6 because of #5203. Reactivating--we'll aim for 16.7.",
        "createdAt": "2020-04-10T15:44:52Z",
        "updatedAt": "2020-04-10T15:44:52Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}