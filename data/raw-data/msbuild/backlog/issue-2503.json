{
  "number": 2503,
  "title": "SignAssembly seems to always delay-sign regardless of the presence or value of DelaySign",
  "body": "In MSBuild 15.3, specifying `<SignAssembly>True</SignAssembly>` in a .csproj project&mdash;\r\n\r\n- but without DelaySign results in a delay-signed, not strong-named assembly.\r\n- and with `<DelaySign>False</DelaySign>` has the same result.\r\n- and with `<DelaySign>True</DelaySign>` has the same result.\r\n\r\nThus there seems to be no way to strong-name an assembly without running an external tool to do so.\r\n\r\n(Note that in all these cases, `AssemblyOriginatorKeyFile` is present and set to an existing strong name key file.)",
  "state": "CLOSED",
  "createdAt": "2017-09-08T16:43:12Z",
  "updatedAt": "2024-02-21T17:16:49Z",
  "closedAt": "2019-11-19T20:14:47Z",
  "author": {
    "login": "peteroupc"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I'm having the same problem. \r\n\r\nWe are extending RegisterAssembly in the msbuild sln via a new project and  and the result is never strong named. (added on top of 15.3)\r\n\r\nWill try to manually sn.",
        "createdAt": "2017-09-18T20:58:00Z",
        "updatedAt": "2017-09-18T20:58:00Z",
        "author": {
          "login": "iamthegD"
        }
      },
      {
        "body": "I have also reproduced this on MSBuild for Mono/Linux:\r\n\r\n## Version info\r\n```\r\n$ msbuild /ver\r\nMicrosoft (R) Build Engine version 15.4.0.0 ( Wed Nov 29 14:56:11 UTC 2017) for Mono\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.4.0.0\r\n```\r\n\r\n## My project\r\nIn my `.csproj` file I have the following snippet:\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <SignAssembly>true</SignAssembly>\r\n  <AssemblyOriginatorKeyFile>..\\MyKeyfile.snk</AssemblyOriginatorKeyFile>\r\n  <DelaySign>false</DelaySign>\r\n</PropertyGroup>\r\n```\r\n\r\nI have tried this with `DelaySign` set to false or with the element removed altogether.  If I use msbuild to build the project though and then take a look at one of my compiled assemblies, I see this:\r\n\r\n```\r\n$ sn -vf MyAssembly/bin/Debug/MyAssembly.dll \r\nMono StrongName - version 5.10.0.160\r\nStrongName utility for signing assemblies\r\nCopyright 2002, 2003 Motus Technologies. Copyright 2004-2008 Novell. BSD licensed.\r\n\r\nAssembly MyAssembly/bin/Debug/MyAssembly.dll is delay-signed but not strongnamed\r\n```\r\n\r\nAccording to my understanding, msbuild should fully-sign the assembly and not delay-sign it when the delay-sign property is set to false.\r\n\r\n## Workaround: Manually sign the delay-signed assembly via sn.exe\r\nWhen msbuild fails to sign & strong-name my assembly, following a build up with this does get the job done though:\r\n```\r\n$ sn -R MyAssembly/bin/Debug/MyAssembly.dll MyKeyfile.snk && sn -vf MyAssembly/bin/Debug/MyAssembly.dll\r\nMono StrongName - version 5.10.0.160\r\nStrongName utility for signing assemblies\r\nCopyright 2002, 2003 Motus Technologies. Copyright 2004-2008 Novell. BSD licensed.\r\n\r\nAssembly MyAssembly/bin/Debug/MyAssembly.dll signed.\r\nMono StrongName - version 5.10.0.160\r\nStrongName utility for signing assemblies\r\nCopyright 2002, 2003 Motus Technologies. Copyright 2004-2008 Novell. BSD licensed.\r\n\r\nAssembly MyAssembly/bin/Debug/MyAssembly.dll is strongnamed.\r\n```",
        "createdAt": "2018-04-27T18:28:01Z",
        "updatedAt": "2018-04-27T18:28:01Z",
        "author": {
          "login": "craigfowler"
        }
      },
      {
        "body": "@craigfowler You're seeing a mono-specific bug; I'll respond in your mono/mono#8495.\r\n\r\nOther folks: are you also using Mono? If not, my attempts to reproduce this failed. Can you provide more details or a repro project?",
        "createdAt": "2018-04-27T22:04:22Z",
        "updatedAt": "2018-04-27T22:04:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald : I was indeed using Mono when I saw the issue I reported.",
        "createdAt": "2018-04-28T02:02:37Z",
        "updatedAt": "2018-04-28T02:02:37Z",
        "author": {
          "login": "peteroupc"
        }
      },
      {
        "body": "At least from my end then, I'd be happy to call this resolved (\"Can't repro\") in this repo at least.  It's a mono-specific problem which apparently is already fixed in upcoming Mono 5.14.\r\n\r\n@peteroupc - I've opened [this same issue against the mono repo] if you want to track it there, it being a mono-specific problem.  In short though: I'm working around it using `sn -R` manually in my builds for the time being.\r\n\r\n[this same issue against the mono repo]: https://github.com/mono/mono/issues/8495",
        "createdAt": "2018-04-28T12:44:12Z",
        "updatedAt": "2018-04-28T12:44:12Z",
        "author": {
          "login": "craigfowler"
        }
      },
      {
        "body": "my 2 cents:\r\nusing: `<PublicSign>False</PublicSign>` seems to fix the always delay signed issue (ed i'm using the dotnet cli (from the dotnet Core SDK on linux without mono and having the \"same\" issue...)\r\n",
        "createdAt": "2019-11-18T21:53:15Z",
        "updatedAt": "2019-11-18T22:04:15Z",
        "author": {
          "login": "Mizux"
        }
      }
    ]
  }
}