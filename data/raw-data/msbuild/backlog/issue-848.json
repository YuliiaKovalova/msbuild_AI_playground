{
  "number": 848,
  "title": "Immutable Properties",
  "body": "I ran across a bug where I unintentionally defined a property with the same name as another property defined in a target file I included. It would be nice if msbuild had facilities to help detect this type of issue. For instance, if I could have somehow marked my property immutable then msbuild could have issued an error when the property was subsequently overwritten in the imported target file. \n\nOne possible way to mark properties as immutable would be via an `IsReadOnly` attribute applied to `property` and `propertyGroup` elements. Also, it would also be nice to be able to change the default to readonly via, possibly, a `ReadOnlyProperties` attribute applied on the `Project` element.\n\nThere is already a mechanism by which command line properties are treated as immutable. Maybe that same logic could be used to enforce a new readonly property feature. That logic would have to be extended to issue an error instead of silently failing after attempting to update the property as is currently the case for command line properties. I'd like to see an error in that case as well. Possibly enabled via an environment variable ala `MSBuildWarnOnUninitializedProperty` but `MSBuildWarnOnWriteToCommandLineProperty`. \n\nWarm regards,\nChris\n",
  "state": "CLOSED",
  "createdAt": "2016-08-01T00:55:58Z",
  "updatedAt": "2024-02-21T17:26:51Z",
  "closedAt": "2017-02-09T22:09:03Z",
  "author": {
    "login": "kingces95"
  },
  "labels": [
    "Area: Language",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I accidentally duplicated this as #1673, and it appears to have gotten a bit more commentary so I'm going to unify by moving this comment to that thread. Great idea, though!",
        "createdAt": "2017-02-09T22:09:03Z",
        "updatedAt": "2017-02-09T22:09:03Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}