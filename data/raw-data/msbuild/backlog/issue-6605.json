{
  "number": 6605,
  "title": "MSBuild.exe does not have a good native image and is being JITted",
  "body": "### Issue Description\r\n\r\nMSBuild.exe is responsible for ~17% of JITting cost when building a simple app on command line. On my machine it's close to 200 ms per MSbuild process.\r\n\r\n### Steps to Reproduce\r\n\r\nMSBuild helloworld.csproj\r\n\r\n### Data\r\n\r\n<HTML><HEAD></HEAD><BODY><CENTER><TABLE border=\"1\"><TBODY><!--StartFragment--><TR><TH>Name</TH><TH>JitTime<BR>msec</TH><TH>Num Methods</TH><TH>IL Size</TH><TH>Native Size</TH></TR><TR><TD align=\"Left\">TOTAL</TD><TD align=\"Center\">1,116.0</TD><TD align=\"Center\">1,746</TD><TD align=\"Center\">138,520</TD><TD align=\"Center\">523,239</TD></TR><TR><TD align=\"Center\">C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe</TD><TD align=\"Center\">193.4</TD><TD align=\"Center\">151</TD><TD align=\"Center\">17,408</TD><TD align=\"Center\">56,119</TD></TR><!--EndFragment--></TBODY></TABLE></CENTER></BODY></HTML>\r\n\r\n### Analysis\r\n\r\nVS setup compiles MSBuild assemblies using vsn.exe / vsn.exe.config. This picks up VS versions of MSBuild dependencies such as System.Memory, which may be different from those used at run-time on the command line.\r\n\r\n### Versions & Configurations\r\n\r\n17.0.0-preview-21308-06+420c91c69\r\n\r\n### Regression?\r\n\r\nThe problem appears when there is a version mismatch between common VS and MSBuild dependencies. They move forward independently so it is possible that some builds have this problem and other don't.\r\n\r\n### Attach a binlog\r\n\r\nN/A",
  "state": "CLOSED",
  "createdAt": "2021-06-22T05:54:14Z",
  "updatedAt": "2024-02-21T14:12:54Z",
  "closedAt": "2021-07-19T10:54:48Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "Area: Performance",
    "Visual Studio",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "ladipro"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.0"
  },
  "comments": {
    "nodes": [
      {
        "body": "Ideally MSBuild would not carry its own copies/versions of dependencies and would use what comes with VS, even when invoked on the command line. This would have the nice property of in-proc and out-of-proc execution using the exact same versions and have a small positive effect on total working set as well.\r\n\r\nIt however increases the coupling between MSBuild and VS - something we'd like to avoid for architectural reasons. A good fix/workaround for now is to NGEN MSBuild.exe using the right root/exe.config such that our versions of dependencies have a good native image ",
        "createdAt": "2021-06-22T06:00:37Z",
        "updatedAt": "2021-06-22T06:00:37Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "Note that the JITting overhead also applies to MSBuild satellite processes when building in VS and is multiplied by the number of such processes, by default equal to the number of CPU cores. On an 8-core machine, for example, we're paying ~1.5 seconds of CPU time JITting on the first build or design-time build.",
        "createdAt": "2021-06-22T08:11:15Z",
        "updatedAt": "2021-06-22T08:11:15Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}