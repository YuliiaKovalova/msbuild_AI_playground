{
  "number": 6123,
  "title": "Propegate the build order up on a project if a project is PackageReferenced but set on each one to not reference it's outputs",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\n<!--\r\n* Please include a clear and concise description of the problem.\r\n-->\r\nBased on my information I sent on my previous issue #6122, I noted there is an issue where my build tasks get built not first, but almost last in the build tree when invoking the build command for the 1st time when the Task Assemblies do not exist yet. In this case it would make build fail on all of the other projects from before it because of the fact it's not set to reference the assembly of the build task on those projects because I was planning on using the ProjectReferences to boost the build order of the task up to 1st since all of the projects depend on it in my solution.\r\n\r\n### Steps to Reproduce\r\n<!--\r\n* Include as much of the following as possible:\r\n\r\n* A minimal sample project that reproduces the issue.\r\n* Your zipped project.\r\n* IDE / CLI steps to create the project and reproduce the behaviour.\r\n* Your command line invocation\r\n-->\r\n1. Make an simple msbuild task project with c# code that could do anything including printing stuff to msbuild's output handle.\r\n2. add other projects to the solution file that then ProjectReferences that build task imports an props file from the task project on how to find the task assemblies based on the build output directories of the actual task assemblies.\r\n3. build and the task(s) would be built last resulting in every single one of the other projects to fail.\r\n\r\n### Expected Behavior\r\n<!--\r\n* The expected output or behavior.\r\n-->\r\nFor the task assemblies to be built on the TFM's to target.\r\n\r\n### Actual Behavior\r\n<!--\r\n* The actual output or behavior.\r\n-->\r\nThe task assemblies get built last or next to last.\r\n\r\n### Analysis\r\n<!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n-->\r\nNot sure where the issue is.\r\n\r\n### Versions & Configurations\r\n<!--\r\n* In a Visual Studio developer command prompt, run `msbuild -version` and paste the output here.\r\n* If applicable, include the version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\n* Post any other relevant configuration settings here.\r\n*   OS, architecture, etc.\r\n-->\r\nWindows 10 latest insider dev channel build (x64).\r\n.NET SDK 5.0.102 and that version of msbuild.\r\n\r\n### Attach a binlog\r\n<!--\r\n* If providing us a project that reproduces the issue proves difficult, consider including a binlog.\r\n* Click [here](https://aka.ms/msbuild/binlog) for details on sharing binary logs.\r\n* Click [here](https://github.com/microsoft/msbuild/blob/master/documentation/wiki/Binary-Log.md) for more information on binary logs.\r\n    NOTE: Binlogs can contain sensitive information. Don't attach anything you don't want to be public.\r\n\r\n*   To view the contents of the binlogs yourself, you may wish to use a tool like https://msbuildlog.com/.\r\n-->\r\nThis should be easily reproducible by anyone that basically anyone can make a binlog for it.",
  "state": "CLOSED",
  "createdAt": "2021-02-04T14:21:02Z",
  "updatedAt": "2021-07-14T15:47:45Z",
  "closedAt": "2021-07-14T15:47:45Z",
  "author": {
    "login": "AraHaan"
  },
  "labels": [
    "bug",
    "needs-more-info",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Team triage: Can you please attach a simple repro? We're not 100% sure we understand the repro steps. Thank you!",
        "createdAt": "2021-02-24T16:30:57Z",
        "updatedAt": "2021-02-24T16:30:57Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "It should be reproducible with this commit on the the repository I experienced it normally before too.\r\n\r\nhttps://github.com/Elskom/Sdk/tree/aa74e9e2037c834c463d321cd1983fbdc4ddfd26\r\n\r\nI have since moved it to a metapackage, and changed the build task to an inline ``*.targets`` file that then gets invoked to work around this issue and #6122 (however I still get issues sometimes with it failing on the xml docs a lot of times but it happens a lot less now having the build task inline).\r\n\r\nbasically if you just build it right from checking out that commit, it should fail by building most of everything first before it even gets to the build task (if it does not build the build task last) when the build task should have been first since every project on that commit references it, just that it does not list it or even use it as a dependency.",
        "createdAt": "2021-02-25T18:55:54Z",
        "updatedAt": "2021-02-25T18:55:54Z",
        "author": {
          "login": "AraHaan"
        }
      },
      {
        "body": "Team Triage: What is the task that's failing to build in time?",
        "createdAt": "2021-07-07T15:22:18Z",
        "updatedAt": "2021-07-07T15:22:18Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "It was both Tasks that was in that assembly on that commit in that codebase that I have since migrated off of a project being referenced and instead have it provided with a source generator package instead and automatically ran there when they install the source generator package.\r\n\r\nHowever even inside that codebase I have it deploy another package which would be a dependency for the actual code it generates for any project that references it.",
        "createdAt": "2021-07-07T20:59:55Z",
        "updatedAt": "2021-07-07T21:00:39Z",
        "author": {
          "login": "AraHaan"
        }
      },
      {
        "body": "Team triage:\r\nYour task is running before PrepareForBuild. That's also before the ResolveProjectReferences target, which is what causes ProjectReferences to be built. The fix for this is to have your task run after that instead. Alternatively, you can build your repo in graph mode (/graph), since that would cause referenced projects to be built before referencing projects.",
        "createdAt": "2021-07-14T15:47:45Z",
        "updatedAt": "2021-07-14T15:47:45Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}