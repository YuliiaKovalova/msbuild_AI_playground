{
  "number": 4151,
  "title": "Many duplicate strings held by ProjectItemInstance.TaskItem._definingFileEscaped",
  "body": "Analysis of a devenv.exe dump shows the number one duplicated string on the heap (by wasted bytes) is held by `ProjectItemInstance.TaskItem._definingFileEscaped`. \r\n\r\nThis field is populated by deserialisation/translation and not interned, at least in the code path used here.\r\n\r\nOpening `Roslyn.sln` in 28606.22.d16.0stg, building and dumping the process reveals:\r\n\r\n- `_definingFileEscaped` references 73,380 string objects (unique addresses), but only 238 unique string values\r\n- The 73,380 strings occupy ~6.5MB bytes, 99.2% of which is wasted, meaning pooling here will reclaim ~6.5MB (0.6% of the ~1.2GB managed heap)\r\n\r\n//cc: @davkean @lifengl\r\n\r\n---\r\n\r\n## Duplicated strings held by _definingFileEscaped\r\n\r\n| WastedBytes | Count | Length | String |\r\n|------------:|------:|-------:|--------|\r\n| 4,881,282 | 16,604 | 140 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\VisualStudio\\Managed\\Microsoft.Managed.DesignTime.targets |\r\n| 1,015,774 | 3,878 | 124 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets |\r\n| 199,436 | 684 | 139 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\VisualStudio\\Managed\\Microsoft.CSharp.DesignTime.targets |\r\n| 79,910 | 306 | 124 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Current\\Bin\\Microsoft.CSharp.CurrentVersion.targets |\r\n| 72,178 | 240 | 144 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\VisualStudio\\Managed\\Microsoft.VisualBasic.DesignTime.targets |\r\n| 62,328 | 197 | 152 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\Fakes\\Microsoft.QualityTools.Testing.Fakes.targets |\r\n| 35,560 | 141 | 120 | D:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets |\r\n| 19,716 | 63 | 152 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\CodeSharing\\Microsoft.SharedProject.Common.targets |\r\n| 11,152 | 42 | 129 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Current\\Bin\\Microsoft.VisualBasic.CurrentVersion.targets |\r\n| 10,912 | 45 | 117 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\NuGet\\16.0\\Microsoft.NuGet.targets |\r\n| 5,916 | 18 | 167 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\Microsoft.NET.Build.Extensions\\Microsoft.NET.DefaultPackageConflictOverrides.targets |\r\n| 4,082 | 14 | 150 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\CodeSharing\\Microsoft.CodeSharing.CSharp.targets |\r\n| 2,548 | 27 | 42 | D:\\repos\\roslyn\\eng\\targets\\Settings.props |\r\n| 1,824 | 9 | 107 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets |\r\n| 972 | 4 | 155 | D:\\Program Files %28x86%29\\Microsoft Visual Studio\\2019\\Preview2\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\CodeSharing\\Microsoft.CodeSharing.VisualBasic.targets |\r\n| 536 | 3 | 127 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets |\r\n| 464 | 3 | 109 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19064.4\\tools\\RepositoryInfo.targets |\r\n| 460 | 3 | 108 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19064.4\\tools\\ProjectDefaults.props |\r\n| 432 | 3 | 101 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19064.4\\tools\\Compiler.props |\r\n| 298 | 2 | 142 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.visualstudio.threading.analyzers\\15.8.168\\build\\Microsoft.VisualStudio.Threading.Analyzers.targets |\r\n| 284 | 2 | 135 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.DefaultPackageConflictOverrides.targets |\r\n| 278 | 2 | 132 | C:\\Users\\drnoakes\\.nuget\\packages\\xunit.runner.visualstudio\\2.4.1-pre.build.4059\\build\\netcoreapp1.0\\xunit.runner.visualstudio.props |\r\n| 268 | 2 | 127 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.SupportedTargetFrameworks.props |\r\n| 264 | 2 | 125 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.sourcelink.vsts.git\\1.0.0-beta-63401-01\\build\\Microsoft.SourceLink.Vsts.Git.props |\r\n| 256 | 2 | 121 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.sourcelink.github\\1.0.0-beta-63401-01\\build\\Microsoft.SourceLink.GitHub.props |\r\n| 254 | 2 | 120 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.BeforeCommon.targets |\r\n| 254 | 2 | 120 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.DefaultItems.targets |\r\n| 250 | 2 | 118 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.DefaultItems.props |\r\n| 248 | 2 | 117 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.net.test.sdk\\15.9.0-dev2\\build\\netcoreapp1.0\\Microsoft.NET.Test.Sdk.props |\r\n| 244 | 2 | 115 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets |\r\n| 232 | 2 | 109 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.netcore.app\\2.1.0\\build\\netcoreapp2.1\\Microsoft.NETCore.App.props |\r\n| 228 | 2 | 107 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19064.4\\tools\\Localization.targets |\r\n| 226 | 2 | 106 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19064.4\\tools\\XUnit\\XUnit.targets |\r\n| 214 | 2 | 100 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19064.4\\tools\\Tests.targets |\r\n| 214 | 2 | 100 | D:\\repos\\roslyn\\src\\Compilers\\CSharp\\Test\\WinRT\\Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests.csproj |\r\n| 210 | 2 | 98 | C:\\Users\\drnoakes\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19064.4\\tools\\Tests.props |\r\n| 200 | 2 | 93 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Microsoft.NETCoreSdk.BundledVersions.props |\r\n| 200 | 2 | 93 | C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009827\\Microsoft.NETCoreSdk.BundledCliTools.props |\r\n| 190 | 2 | 88 | C:\\Users\\drnoakes\\.nuget\\packages\\xunit.core\\2.4.1-pre.build.4059\\build\\xunit.core.props |\r\n| 188 | 2 | 87 | C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319\\Microsoft.WorkflowBuildExtensions.targets |\r\n| 152 | 2 | 69 | D:\\repos\\roslyn\\src\\Compilers\\Server\\VBCSCompiler\\VBCSCompiler.csproj |\r\n| 150 | 2 | 68 | C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319\\Microsoft.Xaml.targets |\r\n| 106 | 2 | 46 | D:\\repos\\roslyn\\src\\Interactive\\csi\\csi.csproj |\r\n| 106 | 2 | 46 | D:\\repos\\roslyn\\src\\Interactive\\vbi\\vbi.vbproj |\r\n| 100 | 2 | 43 | D:\\repos\\roslyn\\eng\\targets\\Imports.targets |\r\n| 82 | 2 | 34 | D:\\repos\\roslyn\\eng\\Versions.props |\r\n",
  "state": "CLOSED",
  "createdAt": "2019-02-06T23:49:11Z",
  "updatedAt": "2024-02-21T17:09:21Z",
  "closedAt": "2019-07-30T14:07:13Z",
  "author": {
    "login": "drewnoakes"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rainersigwald"
      }
    ]
  },
  "milestone": {
    "title": "MSBuild 16.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "I have a dump of a solution containing all of http://github.com/dotnet/corefx, and above is 2.5% (80MB) of the heap:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/52391563-d75a1200-2af1-11e9-95df-c37667adc151.png)\r\n\r\n",
        "createdAt": "2019-02-07T05:03:07Z",
        "updatedAt": "2019-02-07T07:17:24Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Note that _includeEscaped & _includeBeforeWildcardExpansionEscaped also suffer the same problem.",
        "createdAt": "2019-02-07T06:58:01Z",
        "updatedAt": "2019-02-07T06:58:01Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "It looks like there is some interning going on for the metadata: https://github.com/Microsoft/msbuild/blob/eb3b0a79d52bf2029913ac50ad6fa64f7497d7f0/src/Build/Instance/ProjectItemInstance.cs#L1587-L1624.\r\n\r\nMaybe just need to opt into this for other fields?",
        "createdAt": "2019-02-07T07:01:21Z",
        "updatedAt": "2019-02-07T07:01:21Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Though in saying that there's a path that doesn't get passed an interner where these fields are set:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/eb3b0a79d52bf2029913ac50ad6fa64f7497d7f0/src/Build/Instance/ProjectItemInstance.cs#L1425-L1446\r\n\r\nNo idea when/when not either path are used.",
        "createdAt": "2019-02-07T07:06:25Z",
        "updatedAt": "2019-02-07T07:06:25Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "This analysis performed using [StringTheory](https://github.com/drewnoakes/string-theory). It may be useful in tracking down further interning/pooling opportunities.",
        "createdAt": "2019-02-07T16:02:35Z",
        "updatedAt": "2019-02-07T16:02:35Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "The lookaside interner doesn't help too much here: it only single-instances strings _within a single item_, so for things that are defined in a `.targets` file imported everywhere it hardly helps at all.\r\n\r\nBut I have a theory. Assigning this to me.",
        "createdAt": "2019-04-03T16:12:25Z",
        "updatedAt": "2019-04-03T16:12:25Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I took a deeper look at this, and I think that some of the analysis above is incorrect. The issue here doesn't seem to be related to serialization/deserialization and interning, that's not the codepath that's causing the vast majority of the wasted strings.\r\n\r\nThe telltale sign is the fact that about 97% of the wasted strings start with `D:\\Program Files %28x86%29`. The codepath that's creating those strings is:\r\n\r\n```\r\nMicrosoft.Build.Execution.ProjectItemInstance.TaskItem.TaskItem()\r\nMicrosoft.Build.dll!Microsoft.Build.Execution.ProjectItemInstance.CommonConstructor()\r\nMicrosoft.Build.dll!Microsoft.Build.Execution.ProjectInstance.CreateItemsSnapshot()\r\nMicrosoft.Build.dll!Microsoft.Build.Execution.ProjectInstance.ProjectInstance()\r\nMicrosoft.Build.dll!Microsoft.Build.Evaluation.Project.CreateProjectInstance()\r\nMicrosoft.VisualStudio.ProjectSystem.Implementation.dll!Microsoft.VisualStudio.ProjectSystem.Designers.ProjectSnapshotService.GenerateProjectInstanceAsync()\r\n```\r\n\r\nSo the snapshot service is creating a project instance and we're cloning the items. The offending routine is `CreateItemsSnapshot`. The line is:\r\n\r\n`ProjectItemInstance instance = new ProjectItemInstance(this, item.ItemType, ((IItem)item).EvaluatedIncludeEscaped, item.EvaluatedIncludeBeforeWildcardExpansionEscaped, directMetadata, inheritedItemDefinitions, ProjectCollection.Escape(item.Xml.ContainingProject.FullPath));`\r\n\r\nWhen we copy the item _for each item_ we are escaping the item's XML's containing project's full path, which creates a fresh string for each item if it contains unescaped characters. A simple fix would simply to have item.Xml.ContainingProject expose an EscapedFullPath property which would mean that the items would all share the same escaped path. I've tested this out and it seems like it fixes it. I'm out next week but I can prep a PR when I get back.",
        "createdAt": "2019-07-22T07:23:25Z",
        "updatedAt": "2019-07-22T07:23:25Z",
        "author": {
          "login": "panopticoncentral"
        }
      },
      {
        "body": "Thanks!",
        "createdAt": "2019-07-22T07:25:20Z",
        "updatedAt": "2019-07-22T07:25:20Z",
        "author": {
          "login": "davkean"
        }
      }
    ]
  }
}