{
  "number": 8817,
  "title": "[Feature Request]: Opt-in mechanism for unique default names of binlogs",
  "body": "### Summary\r\n\r\nIf explicit name for binlog is not specified `msbuild.binlog` is being used - which can lead to silent overwrites of pre-existing binlogs. This is especially painfull in more complicated workflows where msbuild is being invoked multipe times.\r\n\r\nThe cases where we heared about this could be useful:\r\n* Failing to build C# project with fakes, due to attempts for concurrent writes to msbuild.binlog (https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1791139) FYI @ocallesp \r\n* Onboard binlogs in AzDO FYI @Json\r\n\r\n### Proposed Feature\r\n\r\nAdd opt-in mechanism (probably commandline switch + environment variable), which would turn on generation of unique default names for binlogs\r\n\r\n### Alternative Designs\r\n\r\n_No response_",
  "state": "CLOSED",
  "createdAt": "2023-05-31T08:25:14Z",
  "updatedAt": "2024-04-24T06:55:28Z",
  "closedAt": "2024-04-23T19:41:38Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "backlog",
    "needs-design",
    "Feature Request",
    "Priority:2",
    "triaged",
    "internal-team-onboarding"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Spitball proposed UX: specify `*` in the binlog file name and we'll expand it with a timestamp + possible disambiguator. So something like\r\n\r\n```\r\nmsbuild -bl:Restore-*.binlog\r\n```\r\n\r\nWould produce `Restore-20230606090832.binlog`.\r\n\r\nDownside to `*` is shell escaping it on non-Windows.",
        "createdAt": "2023-06-06T14:09:47Z",
        "updatedAt": "2023-06-06T14:09:47Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Counter-proposal: the default name for a binlog should be `<entry project>.<timestamp in a lexically-sortable format>.binlog`. For example, `fsautocomplete.202311090108.binlog`. This would mean that binlogs for different projects from the same source directory wouldn't clobber. I'm also guessing that in most cases, folks are building the 'default' targets and so including target names in the default binlog file name would be less-than-useful.",
        "createdAt": "2023-11-09T19:09:49Z",
        "updatedAt": "2023-11-09T19:09:49Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "I like `entryproject.timestamp.binlog`.",
        "createdAt": "2023-11-10T16:14:20Z",
        "updatedAt": "2023-11-10T16:14:20Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Maybe `-bl:*` as the gesture to opt into that pattern? That's easy-ish to type and doesn't change the existing behavior.",
        "createdAt": "2023-11-10T16:18:53Z",
        "updatedAt": "2023-11-10T16:18:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Or should it be `entryproject{.targetifspecified}.timestamp.binlog`? To easily distinguish say between logs for `dotnet restore -bl:* && dotnet build --no-restore -bl:*`?",
        "createdAt": "2023-11-10T16:20:17Z",
        "updatedAt": "2023-11-10T16:21:02Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I'm a little worried about `-bl:*` as a token because shells may expand `*`.",
        "createdAt": "2023-11-10T17:17:46Z",
        "updatedAt": "2023-11-10T17:17:46Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "`-blu`, `-binaryLoggerUnique`[`:`[`ProjectImports=`[`None`,`Embed`,`ZipFile`]]]",
        "createdAt": "2023-11-10T18:24:02Z",
        "updatedAt": "2023-11-10T18:24:02Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "@rainersigwald @baronfel Another approach is to make feature available only using the environment variable let's say env: MSBUILDBinaryLogFilenameFormat, which could have templated value like \"{timestamp}.{target}.binglog\" which will result => \"202311090108.build.binlog\".\r\nThis will allow populate the template with different values with a feature request and the approach will not interact with already configured binlog switch parameter functinality. \r\n\r\nMSBUILDBinaryLogFilenameFormat = \"*\" => 202311090108.binlog\r\nMSBUILDBinaryLogFilenameFormat = \"{timestamp}.{target}.binglog\" => \"202311090108.build.binlog\"\r\nwhat do you think? ",
        "createdAt": "2023-12-04T12:32:57Z",
        "updatedAt": "2023-12-04T12:32:57Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "I like the formatting suggestion! - especially if we'd add a (pseudo-)format specifier as well - e.g. `\"{project:10}.{target:10}.{timestamp:yyyyMMddHHmmssfffffff}.binlog\"` - allowing to truncate the project/target path and to specify timestamp in a format and granularity that makes sense for specific user.\r\n\r\nEnv var sounds interresting as well (handy in CI infra cases, where individual calls might not be as easy to intercept) - as soon as explicit name on commandline gets the precedence.\r\n\r\nWhile curly brackets are allowed as part of path - I'm thinking it might be nice to adopt it in the `-bl` argument as well (is there a sane case where somene would want to name their binlog literaly \"{target}.binlog\"? They could then stick with changewave opt-out)\r\n\r\n\"binlog\" extension should continue to be enforced (error if other used).",
        "createdAt": "2023-12-04T12:58:28Z",
        "updatedAt": "2023-12-04T12:58:28Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Agree that the .binlog extension rule should stay as it is, however the suggestion to use env variable which will run only if there is no switch parameter provided to the command, only to make the approach completely opt-in, basically it will not affect (in case there are existing {timstamp}.{target}.binlog filenames ) existing pipeline configurations. Which will allow gradually to use the templating approach by default in future. I Like the idea of truncating the values, didn't think of it that, thank you! \r\n  ",
        "createdAt": "2023-12-04T13:51:12Z",
        "updatedAt": "2023-12-04T13:51:12Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "There was a offline discussion on the topic. Here are the suggested solution to introducing opt-in mechanism: \r\n1 - Introduce the binlogparameters switch, with all existing parameters exists for binlog.(https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-command-line-reference?view=vs-2022#switches-for-loggers\r\n) {LogFile,  ProjectImports}\r\n2 - Add to the binlogparameters switch the ability to specify 'unique' {true,false} parameter, which will be used to generate unique file name for each build => {project}.{timestamp}.binlog\r\n3 - In case 'unique' parameter and 'LogFile' parameter are specified, report the error that 'unique' parameter is not compatible with 'LogFile' parameter.\r\n\r\nThis approach will allow to populate the parameters with additional information and behavior configuration, without breaking existing scenarios.\r\n\r\nFor now it is also suggested not to introduce the templating mechanism for log file, as it could be done later upon receiving the feedback on existing functionality.\r\n\r\nThank you @rainersigwald , @baronfel for helping with this matter! Anything else should be considered before implementation, or this would be a good start?",
        "createdAt": "2023-12-07T09:31:27Z",
        "updatedAt": "2023-12-07T09:31:27Z",
        "author": {
          "login": "f-alizada"
        }
      },
      {
        "body": "Looping @KirillOsenkov in for awareness.",
        "createdAt": "2023-12-07T15:31:30Z",
        "updatedAt": "2023-12-07T15:31:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I like most of these. I've always wanted for the entry project or solution name to be mentioned, part of me even regrets that <project>.binlog is not the default. A bit more cautious about allowing formatting, but something like -bl:* sounds great (and we may have several such options for a couple formats). Doubt we need a ton of flexibility here. And yes, probably need a different character than *.",
        "createdAt": "2023-12-10T00:53:21Z",
        "updatedAt": "2023-12-10T00:53:21Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Heads up for everyone here, there's now a PR with the proposal: #10051 ",
        "createdAt": "2024-04-23T02:39:34Z",
        "updatedAt": "2024-04-23T02:39:34Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}