{
  "number": 5365,
  "title": "Unconditionally attempting to set process priority fails in some environments",
  "body": "This issue has been reported originally as https://github.com/dotnet/core/issues/4719, and @dagood has done a great job to isolate a potential cause. I'll summarize the original issue and dagood's findings below, in case this is _indeed_ an msbuild issue. If its not related to msbuild, please forgive.\r\n\r\n@emmenlau's original report:\r\nI've been using dotnet on Ubuntu Linux 18.04 x86_64 (installed as in https://docs.microsoft.com/en-us/dotnet/core/install/linux-package-manager-ubuntu-1804) for almost a year successfully to build https://github.com/apache/thrift. Yesterday I've installed system updates (which may have included an update of `dotnet`). Usually I install updates at least once every one or two months.\r\n\r\nSince today, the build of Thrift fails with error:\r\n```\r\n[...]\r\ncd /home/user/thrift/lib/netstd/Thrift && /usr/bin/dotnet msbuild Thrift.csproj /nologo /restore /target:Rebuild /property:Configuration=Debug /property:OutDir=/home/user/Debug/thrift/lib/netstd/Thrift/bin /property:BaseIntermediateOutputPath=/home/user/Debug/thrift/lib/netstd/Thrift/obj/\r\nFAILED: lib/netstd/Thrift/bin/Thrift.dll \r\ncd /home/user/thrift/lib/netstd/Thrift && /usr/bin/dotnet msbuild Thrift.csproj /nologo /restore /target:Rebuild /property:Configuration=Debug /property:OutDir=/home/user/Debug/thrift/lib/netstd/Thrift/bin /property:BaseIntermediateOutputPath=/home/user/Debug/thrift/lib/netstd/Thrift/obj/\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.ComponentModel.Win32Exception (13): Permission denied\r\n   at System.Diagnostics.Process.set_PriorityClassCore(ProcessPriorityClass value)\r\n   at System.Diagnostics.Process.set_PriorityClass(ProcessPriorityClass value)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine)\r\nUnhandled exception. System.ComponentModel.Win32Exception (13): Permission denied\r\n   at System.Diagnostics.Process.set_PriorityClassCore(ProcessPriorityClass value)\r\n   at System.Diagnostics.Process.set_PriorityClass(ProcessPriorityClass value)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args)\r\n```\r\n\r\nI've tried to isolate the cause and could find so far:\r\n - No useful tips or workarounds with Google worked for me, or at least there was nothing that I could understand or map to this problem\r\n - When running `dotnet` with sudo permissions, the build works. This is not a usable workaround for me because it breaks my build environment in various places\r\n - My user account has read permissions on all files in `/usr/share/dotnet`. This was tested with reading all files with `grep -rn \"Win32Exception\" /usr/share/dotnet/ > /dev/zero` which reports no errors\r\n - Trying to upgrade `dotnet` lists no newer packages available as of today\r\n - Downgrading dotnet to the previous latest version 3.1.3 solves the problem and the build works. I've downgraded with:\r\n```\r\nsudo apt-get install dotnet-apphost-pack-3.1=3.1.3-1 dotnet-host=3.1.3-1 \\\r\n    dotnet-hostfxr-3.1=3.1.3-1 dotnet-runtime-3.1=3.1.3-1 dotnet-sdk-3.1=3.1.201-1 \\\r\n    aspnetcore-runtime-3.1=3.1.3-1 aspnetcore-targeting-pack-3.1=3.1.3-1 \\\r\n    dotnet-runtime-deps-3.1=3.1.3-1\r\n```\r\n\r\nThis is an acceptable workaround for me, but sooner or later a fix would be appreciated.\r\n\r\n@emmenlau then adds: One thing that might be related: My default process priority on Linux is not zero (as one would typically assume on Linux). I've set it slightly lower (higher integers give lower priority) to `5`. This gives better overall user experience on a multi-user machine.\r\n\r\n@dagood then adds:\r\nThat stack trace goes (well, appears to go) here in particular:\r\n\r\nhttps://github.com/microsoft/msbuild/blob/7869acfe0be8e983da5de514b896cca6f38fd645/src/MSBuild/XMake.cs#L628-L631\r\n\r\nThe priority values per enum value seem to be here (not sure where in docs):\r\n\r\nhttps://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/src/libraries/Common/src/Interop/Unix/System.Native/Interop.GetSetPriority.cs#L57-L58\r\n\r\nSo it does appear to be relying on that exact assumption you're talking about for default priority. As far as I can tell (I'm not familiar with this change, just found this issue interesting) it's trying to raise it back to \"normal\" 0. I'd suggest raising this issue in the MSBuild repo.",
  "state": "CLOSED",
  "createdAt": "2020-05-22T07:30:58Z",
  "updatedAt": "2024-02-21T17:03:47Z",
  "closedAt": "2020-05-29T18:15:49Z",
  "author": {
    "login": "emmenlau"
  },
  "labels": [
    "bug",
    "regression",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Probably related to #4162.",
        "createdAt": "2020-05-27T15:49:52Z",
        "updatedAt": "2020-05-27T15:49:52Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@Forgind Looks like maybe this commit  https://github.com/microsoft/msbuild/pull/4162/commits/cbf77f57794821e2a89a0c298e641981f01d8a02 in the #4162 PR broke this behavior? I remembered trying to take this into account in the original PR... ",
        "createdAt": "2020-05-27T19:12:21Z",
        "updatedAt": "2020-05-27T19:12:21Z",
        "author": {
          "login": "bgianfo"
        }
      },
      {
        "body": "I agree, specifically https://github.com/microsoft/msbuild/blob/master/src/MSBuild/XMake.cs#L630 Will make a PR soon.",
        "createdAt": "2020-05-27T20:59:36Z",
        "updatedAt": "2020-05-27T20:59:36Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}