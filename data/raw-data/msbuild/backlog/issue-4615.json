{
  "number": 4615,
  "title": "Special case String::Copy to just return the original string instead of calling String.Copy",
  "body": "Calling property functions (such as String.Replace) on item metadata values is tricky.  Generally I've seen people [use String::Copy](https://stackoverflow.com/a/8904902/) to get this to work:\r\n\r\n```\r\n$([System.String]::Copy('%(Filename)').Replace('config',''))\r\n```\r\n\r\nHowever, AFAIK the implementation of String.Copy creates a copy of the string data, which is unnecessary overhead.  It's possible to use `MSBuild::ValueOrDefault` to avoid this, but it's a bit more cumbersome:\r\n\r\n```\r\n$([MSBuild]::ValueOrDefault('%(MetadataName)', '').Replace('foo', 'bar'))\r\n```\r\n\r\nWe should consider special-casing the `String::Copy` call to just return the string directly without the overhead of copying.\r\n\r\nWe could also add a new intrinsic function for this purpose to make it easier to understand or discover how to do this.",
  "state": "CLOSED",
  "createdAt": "2019-08-13T22:39:08Z",
  "updatedAt": "2024-02-21T17:07:32Z",
  "closedAt": "2019-09-17T22:56:11Z",
  "author": {
    "login": "dsplaisted"
  },
  "labels": [
    "help wanted",
    "Area: Performance",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "benvillalobos"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "If we can figure out a fix for #1155, we wouldn't need this. But it's a great quick & easy thing that would make the most popular approach a bit more efficient.",
        "createdAt": "2019-08-13T22:41:45Z",
        "updatedAt": "2019-08-13T22:41:45Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}