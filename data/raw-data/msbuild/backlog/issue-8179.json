{
  "number": 8179,
  "title": "Target `_CopyFilesMarkedCopyLocal` incorrectly skip creation of `*.CopyComplete` causing build reruns",
  "body": "### Issue Description\r\nTarget `_CopyFilesMarkedCopyLocal` should create `.CopyComplete` file after project build but it doesn't.\r\n\r\nIssue was first introduced by PR: Skip Updating CopyComplete Marker When Not Necessary (https://github.com/dotnet/msbuild/pull/6698)\r\n\r\n### Steps to Reproduce\r\n1. Download and extract repro project: [_CopyFilesMarkedCopyLocal_Issue.zip](https://github.com/dotnet/msbuild/files/10035563/_CopyFilesMarkedCopyLocal_Issue.zip)\r\n2. Open solution `_CopyFilesMarkedCopyLocal_Issue.sln`\r\n3. Hit F7 or run 'Build/Build Solution'\r\n4. Project `Bar` is linked first time. Notice `[**Debug**] Bar was linked had run` custom message in Output\r\n5. Hit F7 or run 'Build/Build Solution'\r\n6. Project `Bar` is linked again. Notice `[**Debug**] Bar was linked had run` custom message in Output again\r\n\r\n### Expected Behavior\r\nProject `Bar` should be linked once and subsequent Builds should skip it until something actually change.\r\n\r\n### Actual Behavior\r\nProject `Bar` is linked every time Solution is built.\r\n\r\n### Analysis\r\nSolution is composed from two project:\r\n* Foo - represent dependency\r\n* Bar - is dependent from `Foo`\r\n\r\nSolution happen to be configured in a way that binaries land in `$(SolutionDir)temp` directory.\r\n\r\nBuilding `Bar` cause to `Foo` be built first. `Foo_d.dll` land in `$(SolutionDir)temp\\Foo_d.dll`.\r\nThen 'Bar' is built and target `_CopyFilesMarkedCopyLocal` is executed in the process.\r\nTarget `_CopyFilesMarkedCopyLocal` is trying top copy `Foo_d.dll`, but file is already at target location which cause `WroteAtLeastOneFile` to be evaluated to `false`.\r\n\r\n```\r\nTarget \"_CopyFilesMarkedCopyLocal: (TargetId:155)\" in file \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets\" from project \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\Bar\\Bar.vcxproj\" (target \"CopyFilesToOutputDirectory\" depends on it):\r\nSet Property: CreateHardLinksForCopyLocalIfPossible=false\r\nSet Property: CreateSymbolicLinksForCopyLocalIfPossible=false\r\nUsing \"Copy\" task from assembly \"Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\r\nTask \"Copy\" (TaskId:73)\r\n    Task Parameter:UseHardlinksIfPossible=False (TaskId:73)\r\n    Task Parameter:SkipUnchangedFiles=True (TaskId:73)\r\n    Task Parameter:\r\n        DestinationFiles=\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.winmd\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pdb\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pri\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.dll (TaskId:73)\r\n    Task Parameter:\r\n        SourceFiles=\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.winmd\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pdb\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pri\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.dll (TaskId:73)\r\n    Task Parameter:OverwriteReadOnlyFiles=False (TaskId:73)\r\n    Task Parameter:UseSymboliclinksIfPossible=False (TaskId:73)\r\n    Did not copy from file \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pdb\" to file \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pdb\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match. (TaskId:73)\r\n    Did not copy from file \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.winmd\" to file \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.winmd\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match. (TaskId:73)\r\n    Did not copy from file \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pri\" to file \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pri\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match. (TaskId:73)\r\n    Did not copy from file \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.dll\" to file \"D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.dll\" because the \"SkipUnchangedFiles\" parameter was set to \"true\" in the project and the files' sizes and timestamps match. (TaskId:73)\r\n    Output Item(s): \r\n        FileWritesShareable=\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.winmd\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pdb\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pri\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.dll (TaskId:73)\r\n    Output Item(s): \r\n        ReferencesCopiedInThisBuild=\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.winmd\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pdb\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pri\r\n            D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.dll (TaskId:73)\r\n    Output Property: WroteAtLeastOneFile=False (TaskId:73)\r\nDone executing task \"Copy\". (TaskId:73)\r\nTask \"Touch\" skipped, due to false condition; ('@(ReferencesCopiedInThisBuild)' != '' and '$(WroteAtLeastOneFile)' == 'true') was evaluated as ('D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.winmd;D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pdb;D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\temp\\Debug\\Foo_d.pri;...' != '' and 'False' == 'true').\r\nAdded Item(s): FileWrites=D:\\Projects\\_CopyFilesMarkedCopyLocal_Issue\\Bar\\Bar.dir\\Debug\\Bar.vcxproj.CopyComplete\r\n```\r\n\r\nNotice `Did not copy from file` messages. And then `Output Property: WroteAtLeastOneFile=False`.\r\nFinally: `Task \"Touch\" skipped, due to false condition; ('@(ReferencesCopiedInThisBuild)' != '' and '$(WroteAtLeastOneFile)' == 'true') was evaluated as ('...' != '' and 'False' == 'true').`\r\n\r\n`Bar.vcxproj.CopyComplete` was then added to `FileWrites` but file itself was not generated.\r\n\r\n## Proposed solution\r\n\r\n`Touch` task should run unconditionally if `.CopyComplete` file does not exists, regardless of the value of `WroteAtLeastOneFile`.\r\n\r\nCreating `.CopyComplete` will avoid unconditional build reruns:\r\n* for projects like this, binaries will be copied automatically already as a part of `Foo` linking phase\r\n* for projects with different output directories behavior will not change\r\n\r\n\r\n### Versions & Configurations\r\n```\r\n>msbuild -version\r\nMicrosoft (R) Build Engine version 16.11.2+f32259642 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.11.2.50704\r\n```\r\n\r\nUsing Visual Studio Professional 2019 16.11.21\r\n",
  "state": "CLOSED",
  "createdAt": "2022-11-17T21:30:28Z",
  "updatedAt": "2023-01-06T10:55:41Z",
  "closedAt": "2022-12-02T13:36:40Z",
  "author": {
    "login": "thedmd"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "cc @BenVillalobos @ladipro ",
        "createdAt": "2022-12-01T08:09:45Z",
        "updatedAt": "2022-12-01T08:09:45Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "Build appears to behave correctly on command line:\r\n\r\n![image](https://user-images.githubusercontent.com/12206368/205291377-77f0ffde-fcb3-4e80-acce-cbedf1455b01.png)\r\n\r\nThe absence of `.CopyComplete` should not be a reason for building. @drewnoakes, do you know if we can handle C++ fast up-to-date checks on GitHub or if @thedmd should rather submit Visual Studio feedback?",
        "createdAt": "2022-12-02T13:13:54Z",
        "updatedAt": "2022-12-02T13:13:54Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "C++ doesn't use the .NET FUTDC so it'd take a feedback ticket to get this in front of the right team.",
        "createdAt": "2022-12-02T13:20:49Z",
        "updatedAt": "2022-12-02T13:20:49Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "@thedmd, please report this as a problem at https://developercommunity.visualstudio.com/. While making the change to `_CopyFilesMarkedCopyLocal` as you suggested may work around it, the root cause is very likely in the C++ project system in Visual Studio. Feel free to cross-reference the feedback ticket with this issue for better tracking.",
        "createdAt": "2022-12-02T13:36:40Z",
        "updatedAt": "2022-12-02T13:36:40Z",
        "author": {
          "login": "ladipro"
        }
      },
      {
        "body": "@drewnoakes what is the \".NET FUTDC\"? [Edit: just realized, FUTDC = Fast Up To Date Check]\r\n\r\nI'm trying to track down why my team's solution (all C#) is never up-to-date in VS, and it seems to be the same issue as here, at least in part (may be multiple issues, but having $(WroteAtLeastOneFile)==False is leading to lots of stale .CopyComplete files that never get updated upon repeated building).\r\n",
        "createdAt": "2022-12-22T21:13:14Z",
        "updatedAt": "2022-12-22T21:14:46Z",
        "author": {
          "login": "jimmylewis"
        }
      },
      {
        "body": "@jimmylewis That's the Fast Up To Date Check, a mechanism that the .NET Project System uses to quickly determine if a call to MSBuild is even required. You can read more about it [here](https://github.com/dotnet/project-system/blob/main/docs/up-to-date-check.md).",
        "createdAt": "2022-12-22T21:18:00Z",
        "updatedAt": "2022-12-22T21:18:00Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "@jimmylewis feel free to reach out internally on Teams if you'd like a second pair of eyes on the issue. Also, in case you haven't already, be sure to enable the [verbose FUTDC logging](https://github.com/dotnet/project-system/blob/main/docs/up-to-date-check.md#debugging) to learn why your projects are being considered out-of-date.",
        "createdAt": "2023-01-06T10:55:41Z",
        "updatedAt": "2023-01-06T10:55:41Z",
        "author": {
          "login": "drewnoakes"
        }
      }
    ]
  }
}