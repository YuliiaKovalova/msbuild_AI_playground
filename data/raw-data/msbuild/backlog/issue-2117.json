{
  "number": 2117,
  "title": "Msbuild 15.0 cannot build Coded UI test project from normal command prompt.",
  "body": "With msbuild 15.0 we are seeing that coded ui test projects doesn\u2019t build if we use a normal command prompt. This used to work with msbuild 14.0.\r\n\r\nHere is a repro\r\n\r\n1)\tUnzip attached coded ui test zip on local machine\r\n[CodedUITestProject2.zip](https://github.com/Microsoft/msbuild/files/1018201/CodedUITestProject2.zip)\r\n\r\n2)\tRun c:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe \" CodedUITestProject2.sln\"  or codeduitestproject.csproj (use normal command prompt and not developer command prompt)\r\n\r\nIdeally the project should have been build. We tried same steps with msbuild 14 and it works fine\r\n\r\nAfter investigation we saw that the csproj takes a dependency for \u201cVisualStudioVersion\u201d. We see that this value is null when building with msbuild 15.0. Other point to note is that .sln defines \u201cVisualStudioVersion = 15.0.26228.9\u201d. shouldn\u2019t this just work? ",
  "state": "CLOSED",
  "createdAt": "2017-05-22T08:53:22Z",
  "updatedAt": "2024-02-21T17:19:01Z",
  "closedAt": "2017-07-19T16:26:40Z",
  "author": {
    "login": "acesiddhu"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.5"
  },
  "comments": {
    "nodes": [
      {
        "body": "We are seeing exactly the same problem. Setting VisualStudioVersion property to `15.0` in the msbuild call seems to fix the problem. \r\n\r\nIt seems like for normal csproj or vbproj projects the VisualStudioVersion get's set through the `Microsoft.Common.props`. This is normally imported as first project in csproj or vbproj files by:  `<Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />`\r\n\r\nUnfortunately our csproj which contains the codedui test code doesn't have this imported. Also creating a new coded ui project from the \"Add Project Wizard\" doesn't add this import.\r\n\r\nDoes someone know if this is a bug in the template f\u00fcr coded ui test projects? Importing the `Microsoft.Common.props` for coded ui test projects seems to fix the problem. But I have no clue if this breaks something else.\r\n",
        "createdAt": "2017-06-20T13:55:15Z",
        "updatedAt": "2017-06-20T13:56:02Z",
        "author": {
          "login": "stffabi"
        }
      },
      {
        "body": "@rainersigwald do you know if it would be safe to import `Microsoft.Common.props` for coded ui projects?",
        "createdAt": "2017-06-20T14:01:52Z",
        "updatedAt": "2017-06-20T14:01:52Z",
        "author": {
          "login": "stffabi"
        }
      },
      {
        "body": "@stffabi you can add the import. it wont have any issues.",
        "createdAt": "2017-06-26T13:18:06Z",
        "updatedAt": "2017-06-26T13:18:06Z",
        "author": {
          "login": "acesiddhu"
        }
      },
      {
        "body": "This is a duplicate of #1678 but has more detailed information, so I'm going to leave both open for now.",
        "createdAt": "2017-07-07T16:20:35Z",
        "updatedAt": "2017-07-07T16:20:35Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Fixed by #2258.",
        "createdAt": "2017-07-19T16:26:40Z",
        "updatedAt": "2017-07-19T16:26:40Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "When will this be released?",
        "createdAt": "2017-08-08T19:06:03Z",
        "updatedAt": "2017-08-08T19:06:03Z",
        "author": {
          "login": "mgolois"
        }
      },
      {
        "body": "@mgolois It's in our `master` branch, which is targeted at the next \"big\" update of Visual Studio 2017. No release date has been announced for that yet.",
        "createdAt": "2017-08-08T19:08:58Z",
        "updatedAt": "2017-08-08T19:08:58Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald any workaround other than using Developer Command Prompt for 2017?",
        "createdAt": "2017-08-08T19:37:26Z",
        "updatedAt": "2017-08-08T19:37:41Z",
        "author": {
          "login": "mgolois"
        }
      },
      {
        "body": "## Workarounds\r\n\r\n* Build inside a Developer Command Prompt for VS 2017.\r\n* Import `Microsoft.Common.props` at the top of your projects https://github.com/Microsoft/msbuild/issues/2117#issuecomment-311056514.\r\n* Set the `VisualStudioVersion` property in the MSBuild invocation https://github.com/Microsoft/msbuild/issues/2117#issuecomment-309761170.",
        "createdAt": "2017-08-08T19:45:03Z",
        "updatedAt": "2017-08-08T19:45:03Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald Thank you!",
        "createdAt": "2017-08-08T19:48:45Z",
        "updatedAt": "2017-08-08T19:48:45Z",
        "author": {
          "login": "mgolois"
        }
      },
      {
        "body": "@rainersigwald ,  sorry, I was able to use the command Prompt VS2017 and the VisualStudioVersion property,\r\nbut I was unable to import Microsoft.Common.props \r\nI put this at the top of my proj file:\r\n\r\n> `<Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />`\r\n\r\nI got this error:\r\n\r\n: error MSB4019: The imported project \"C:\\Program Files (x86)\\MSBuild\\4.0\\Microsoft.Common.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.",
        "createdAt": "2017-08-08T20:23:01Z",
        "updatedAt": "2017-08-08T20:32:45Z",
        "author": {
          "login": "mgolois"
        }
      },
      {
        "body": "I am running VS Studio 2015 with MS Build 14.0 . I am successfully building my CodedUI project through MSBuild, but when trying to add my test with TCM so that they can be accessed by MTM, it says 'no tests were found', However when I build the .dll using Visual Studio, TCM can find the Tests. Are there some flags in the build command that are missing?",
        "createdAt": "2017-08-10T15:59:39Z",
        "updatedAt": "2017-08-10T15:59:39Z",
        "author": {
          "login": "reemuluzumaki"
        }
      }
    ]
  }
}