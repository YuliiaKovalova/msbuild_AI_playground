{
  "number": 11108,
  "title": "`Content` project item in `.xproj` when using `CopyToOutputDirectory=Always` does not work in `PackageReference`-based dependencies",
  "body": "### Issue Description\n\nThe `Content` MSBuild item type together with the `CopyToOutputDirectory` option set to `Always` works differently in Project to Project references (expected result) vs `PackageReference`s (unexpected result).\n\n### Steps to Reproduce\n\n## Pre-requisites\n\n```powershell\ngcm -ErrorAction Stop nuget.exe\n```\n\n## Set up workspace\n\n```powerhell\nmkdir CopyToOutputBug | cd\n\nmkdir .nugetfeed > $null\ndotnet nuget add source .nugetfeed -n TestFeed\n\ndotnet new classlib -o A\ndotnet new classlib -o B\n\ndotnet new sln\ndotnet sln add .\\A\\\ndotnet sln add .\\B\\\n\n'CHANGELOG PROJECT A' > .\\A\\CHANGELOG.txt\n\n.\\A\\A.csproj # Starts with Visual Studio\n```\n\nIn visual Studio, set `.\\A\\CHANGELOG.txt` to **Build Action** `Content`, **Copy to Output Directory** `Always`.  Save VS project.\n\n![Image](https://github.com/user-attachments/assets/8a4afbdc-1df4-4b6a-979d-c15c0f1e7ec9)\n\n```\ncat .\\A\\A.csproj\n```\n\nExpected output:\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <None Remove=\"CHANGELOG.txt\" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <Content Include=\"CHANGELOG.txt\">\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\n    </Content>\n  </ItemGroup>\n\n</Project>\n```\n\n## Scenario #1 - Project to Project reference does the expected\n\n```powerhsell\ndotnet add .\\B\\ reference .\\A\\\n\ndotnet build\n\ncat .\\B\\obj\\project.assets.json | sls -Context 10 CHANGELOG # No output, assumed good.\nls .\\B\\bin\\ -Recurse CHANGELOG.txt # Match expected\n```\n\n## Scenario #2 - PackageReference does not work in the same way, unexpected\n\n```powershell\ndotnet clean\n\ndotnet remove .\\B\\ reference .\\A\\A.csproj\n\ndotnet pack .\\A\\ -o .\nnuget init . .\\.nugetfeed\\\n\ndotnet add .\\B\\ package a\n\ndotnet build\n\ncat .\\B\\obj\\project.assets.json | sls -Context 10 CHANGELOG # Matches expected, wrong configuration\n```\n\nThe property `copyToOutput` is set to `false`, while `true` was expected based on `<CopyToOutputDirectory>Always</CopyToOutputDirectory>`.\n\n```powershell\nls .\\B\\bin\\ -Recurse CHANGELOG.txt # No matches, buggy\n```\n\n## Workaraound for Scenario #2\n\nBy editing `nuget.spec` manually in the generated package and adding `file copyToOutput=true` where required, the expected result can be achieved.\n\n\n### Expected Behavior\n\nThe `Content` files should always be copied to the output directory in the consuming project when `CopyToOutputDirectory` is set to a value other than `Never`.\n\n### Actual Behavior\n\nThe `Content` files using `CopyToOutputDirectory=Always` are not copied to the output directory in the consuming proejct when the dependency is declared as a `PackageReference`.\n\nIn this case, the corresponding `nuget.spec` `file` element lacks a `copyToOutput` property set to `true`, so the default `false` applies. It is expected that the `copyToOutput` property is set to `true` in this case.\n\nBy manually editing `nuget.spec` after package creation and adding `copyToOutput=true` for `file` elements, the desired behavior can be achieved using the otherwise exactly same package.\n\n## References\n\n* https://devblogs.microsoft.com/nuget/nuget-contentfiles-demystified/#other-options\n* https://learn.microsoft.com/en-us/nuget/reference/nuspec#using-the-contentfiles-element-for-content-files\n* https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items?view=vs-2022#content\n\n### Analysis\n\n* Lacking documentation does not explain how to obtain the desired result in a NuGet package when using `Content` in a `.xproj` file to always output files to the consuming project's output directory.\n* Bug in `Content` when `CopyToOutputDirectory` is set to a value other than `Never` in `PackageReferece`-based dependency declarations.\n* Missing `CopyToOutput` boolean property in `Content` that mirrors `file>copyToOutput` property in `nuget.spec`. (Seems redundant when `CopyToOutputDirectory` exists.)\n\nHowever, given that the expected result can be obtained when using Project to Project references, this issue appears to be a bug.\n\n### Versions & Configurations\n\n## .NET info\n\n```powershell\ndotnet --info\n```\n\nOutput:\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.c6f19616\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.22631\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100\\\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: x64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.36 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n**Note:** The same problem can be observed in earlier versions of .NET.",
  "state": "CLOSED",
  "createdAt": "2024-12-07T22:45:40Z",
  "updatedAt": "2024-12-10T16:52:34Z",
  "closedAt": "2024-12-10T16:52:34Z",
  "author": {
    "login": "guillermooo"
  },
  "labels": [],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This issue was moved to NuGet/Home#13993",
        "createdAt": "2024-12-10T16:52:33Z",
        "updatedAt": "2024-12-10T16:52:33Z",
        "author": {
          "login": "maridematte"
        }
      }
    ]
  }
}