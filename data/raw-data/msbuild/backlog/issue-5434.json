{
  "number": 5434,
  "title": "ResolveProjectReferences does not execute Targets specified on ProjectReference when building from VS",
  "body": "When building from VS only `GetTargetPath` is executed while building from command line executes targets specified in `ProjectReference.Targets`.\r\n\r\nSeems like an \"optimization\" that changes the behavior of the build and should be removed. \r\n",
  "state": "OPEN",
  "createdAt": "2020-06-16T18:34:21Z",
  "updatedAt": "2024-10-29T15:05:17Z",
  "closedAt": null,
  "author": {
    "login": "tmat"
  },
  "labels": [
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Consider for Next Major Version"
  },
  "comments": {
    "nodes": [
      {
        "body": "(Internal only) context: http://vstfdevdiv:8080/DevDiv2/DevDiv/_versionControl/changeset/852524\r\n\r\n> A change made early in Dev11 changed the behavior of Microsoft.Common.targets w.r.t project reference resolution.  Dev11 was updated in response to this change, but as a result of that change, C++ reference resolution in Dev10 on top of .NET 4.5 does not work as expected, leading to problems such as C++ unit testing failing with a popup error dialog.  \r\n> \r\n> The fix is to quirk the project reference resolution such that when building inside VS 2010, it uses the old behavior, but if building in VS 2012 (or something newer) it still maintains the current new behavior.\r\n\r\nhttp://vstfdevdiv:8080/DevDiv/DevDiv/_versionControl/changeset/1760098\r\n\r\n> Changeset 1760098: Update the common targets so that when resolving a project to project reference within the IDE we do not do anything except for doign a GetTargetPath, this change has already gone through snap been checked into another branch MQPRO as CL 1749525 but I need it in this branch as well immediatly.\r\n\r\nhttp://vstfdevdiv:8080/DevDiv/DevDiv/_versionControl/changeset/1749525\r\n\r\n > Changeset 1749525: Remove %(_MSBuildProjectReferenceExistent.Targets) from the project to project reference msbuild call. This was causing issues where a real build was taking place within the devdiv tree when only a background compile was supposed to happen.\r\n\r\n",
        "createdAt": "2020-06-16T18:56:42Z",
        "updatedAt": "2020-06-16T18:56:42Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Another annoyance is that it will call `GetTargetPath` even when `ReferenceOutputAssembly` is false and `OutputItemType` is empty, which results in throwing away the result.\r\n\r\nhttps://github.com/dotnet/msbuild/blob/d592862edb5896aef3c1e1526c08f3be0285ca98/src/Tasks/Microsoft.Common.CurrentVersion.targets#L1909-L1921",
        "createdAt": "2021-07-28T20:23:36Z",
        "updatedAt": "2021-07-28T20:23:36Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "> Another annoyance is that it will call GetTargetPath even when ReferenceOutputAssembly is false and OutputItemType is empty, which results in throwing away the result.\r\n\r\nShouldn't that be easily fixable by adding to the condition to only run when `ReferenceOutputAssembly` is true?",
        "createdAt": "2021-07-29T11:35:49Z",
        "updatedAt": "2021-07-29T11:35:49Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "> Shouldn't that be easily fixable by adding to the condition to only run when ReferenceOutputAssembly is true?\r\n\r\nWould have to be `'%(ReferenceOutputAssembly)' == 'true' or '%(OutputItemType)' != ''`\r\n\r\nThis whole issue is fixable, however I believe there may be some apprehension to do it as it could be observable or breaking. \r\n Even removing the call to `GetTargetPath` when it is unobserved can have side effects since it is running targets in the referenced project.\r\n\r\nPerhaps a fix could be made that addresses everything, with a switch that let's folks get the old behavior if they want it? ",
        "createdAt": "2021-07-29T16:37:59Z",
        "updatedAt": "2021-07-29T16:37:59Z",
        "author": {
          "login": "ericstj"
        }
      },
      {
        "body": "Just ran into this while adding multi-targeting to my Ardalis.SmartEnum open source project. \r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4057\tThe target \"ResolveProjectReferences\" does not exist in the project.\tSmartEnum\tC:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Microsoft\\VisualStudio\\Managed\\Microsoft.Managed.DesignTime.targets\t397\t\r\n\r\ndotnet build works fine. This issue is pretty old - any resolution yet?\r\n",
        "createdAt": "2024-01-16T20:24:53Z",
        "updatedAt": "2024-01-16T20:24:53Z",
        "author": {
          "login": "ardalis"
        }
      }
    ]
  }
}