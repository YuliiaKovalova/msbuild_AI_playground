{
  "number": 2108,
  "title": "MSBuild build output directory should be able to be used as a valid toolset",
  "body": "Currently when you open the MSBuild.sln solution, set MSBuild project as startup and F5 it can only build the most rudimentary projects, because the layout of the output directory is different than the retail toolset layout.\r\n\r\nWe should strive towards a future where the build output of the MSBuild solution approaches the retail toolset layout as closely as possible, so that it's possible to simply debug using F5.\r\n\r\nI understand that this is a difficult item and longer term, but it'd be nice to track towards it as it would improve our own productivity and empower the contributors.\r\n\r\nAdditionally, if we keep working from the other end - by simplifying the toolset and moving things out to NuGet packages instead of hardcoding in the toolset, we move the goal closer as well.",
  "state": "CLOSED",
  "createdAt": "2017-05-17T23:12:25Z",
  "updatedAt": "2024-02-21T17:19:05Z",
  "closedAt": "2020-05-01T19:04:14Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "Area: Our Own Build",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Agreed. Also FYI if you run `cibuild.cmd --bootstrap-only` it produces a `bin\\Bootstrap` output that is mostly usable.",
        "createdAt": "2017-05-18T19:58:36Z",
        "updatedAt": "2017-05-18T19:58:36Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "I've tried `build -configuration Release /p:CreateBootstrap=true` and it works very nicely. The resulting toolset is almost identical to the actual layout in VS. I was able to successfully build using it on a pristine Azure VM.\r\n\r\nClosing this.",
        "createdAt": "2020-05-01T19:04:14Z",
        "updatedAt": "2020-05-01T19:04:14Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}