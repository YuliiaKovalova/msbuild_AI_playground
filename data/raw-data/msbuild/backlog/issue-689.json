{
  "number": 689,
  "title": "Overwrite Platform and Configuration in ProjectReference",
  "body": "We have a single solution with WIX projects to create our installers. We must create two MSI files for x86 and x64 platform from a single project and use them in a single bootstrapper project that creates one EXE for x86 platform.\n\nI tried to create this reference to MSI projects in the `Bootstrapper.wixproj` file:\n\n```\n<ItemGroup>\n  <ProjectReference Include=\"..\\Installer\\Installer.wixproj\">\n    <Name>Installer_x86</Name>\n    <Project>{fa09964d-5d91-46ca-adc4-fe023cf1bd48}</Project>\n    <Platform>x86</Platform>\n  </ProjectReference>\n  <ProjectReference Include=\"..\\Installer\\Installer.wixproj\">\n    <Name>Installer_x64</Name>\n    <Project>{fa09964d-5d91-46ca-adc4-fe023cf1bd48}</Project>\n    <Platform>x64</Platform>\n  </ProjectReference>\n</ItemGroup>\n```\n\nThe idea is to have two references to a single `Installer.wixproj` file that would reference the x86 and x64 platforms.\n\nUnfortunatelly MSBuild will resolve both references as x86 platform and does not build the one as x64.\n\n```\nSolutionConfigurationContents=<SolutionConfiguration>\n    <ProjectConfiguration Project=\"{fa09964d-5d91-46ca-adc4-fe023cf1bd48}\" AbsolutePath=\"c:\\dev\\Installer\\Installer.wixproj\" BuildProjectInSolution=\"True\">Release|x86</ProjectConfiguration>\n    <ProjectConfiguration Project=\"{d85c3c21-ee88-439d-af12-363939a03b38}\" AbsolutePath=\"c:\\dev\\Bootstrapper\\Bootstrapper.wixproj\" BuildProjectInSolution=\"True\">Release|x86</ProjectConfiguration>\n    </SolutionConfiguration>\n\nAssignProjectConfiguration: (TargetId:15)\n  Output Item(s): \n      _ProjectReferenceWithConfiguration=\n          ..\\Installer\\Installer.wixproj\n                  Configuration=Release\n                  DoNotHarvest=True\n                  FullConfiguration=Release|x86\n                  Name=Installer_x86\n                  Platform=x86\n                  Private=True\n                  Project={fa09964d-5d91-46ca-adc4-fe023cf1bd48}\n                  RefProjectOutputGroups=Binaries;Content;Satellites\n                  RefTargetDir=INSTALLFOLDER\n                  SetConfiguration=Configuration=Release\n                  SetPlatform=Platform=x86\n          ..\\Installer\\Installer.wixproj\n                  Configuration=Release\n                  DoNotHarvest=True\n                  FullConfiguration=Release|x86\n                  Name=Installer_x64\n                  Platform=x86\n                  Private=True\n                  Project={fa09964d-5d91-46ca-adc4-fe023cf1bd48}\n                  RefProjectOutputGroups=Binaries;Content;Satellites\n                  RefTargetDir=INSTALLFOLDER\n                  SetConfiguration=Configuration=Release\n                  SetPlatform=Platform=x86\n```\n\nCan we overwrite the Platform value in the ProjectReference metadata? If not, is there some other solution to building a single project that depends on output from two different platforms?\n",
  "state": "CLOSED",
  "createdAt": "2016-06-14T12:20:38Z",
  "updatedAt": "2024-02-21T17:27:50Z",
  "closedAt": "2016-07-06T22:47:39Z",
  "author": {
    "login": "jozefizso"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Can you share out the parts of the solution that refer to `Installer.wixproj` (including by its GUID which seems to be `fa09964d-5d91-46ca-adc4-fe023cf1bd48`)? I'm curious to see whether the problem is that the `.sln` doesn't know that it can be built multiple ways, or whether MSBuild is misinterpreting that.\n\nWhat happens if you remove `Installer.wixproj` from the solution? Does that work correctly? Also, what happens if you build `Bootstrapper.wixproj` _directly_ from the command line (without building the solution)?\n\nWorst case, you could probably roll your own project references by writing a new target that calls the MSBuild task on `Installer.wixproj`. But hopefully there's a better solution.\n",
        "createdAt": "2016-06-20T15:26:20Z",
        "updatedAt": "2016-06-20T15:26:20Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We're going to close this issue due to lack of response. @jozefizso If you respond with the information listed by @rainersigwald or a small repro solution, we'd be happy to take another look.\n\nThanks!\n- MSBuild Team\n",
        "createdAt": "2016-07-06T22:47:39Z",
        "updatedAt": "2016-07-06T22:47:39Z",
        "author": {
          "login": "Sarabeth-Jaffe-Microsoft"
        }
      }
    ]
  }
}