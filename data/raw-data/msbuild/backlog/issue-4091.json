{
  "number": 4091,
  "title": "Wildcard rooted at a NuGet-package-defined property expands drive root",
  "body": "### Steps to reproduce\r\n\r\nProject file\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup >\r\n    <MyCopyItem Include=\"$(PkgEnterpriseLibrary_TransientFaultHandling_Core)\\**\\*.*\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"EnterpriseLibrary.TransientFaultHandling.Core\" Version=\"1.0.0\" GeneratePathProperty=\"true\"/>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nDirectory contents:\r\n```\r\n/\r\n- foo.csproj\r\n- emptyclass.cs\r\n```\r\n\r\nCommand line\r\n```\r\nmsbuild /t:restore foo.csproj\r\n```\r\n### Expected  behavior\r\npackages restored under a second.  \r\nOr perhaps a warning saying `hey don't be stupid $(PkgEnterpriseLibrary_TransientFaultHandling_Core) is not defined yet and \\** will traverse your hard drive and take forever`.   This of course makes the first nuget restore experience horrible (which in the lab environment is every build).\r\n\r\nBasically I think this scenario will become much more common as people switch to PackageReference items and either warning the user (which they can suppress if they don't want) or making a better decision about the context would be a more desirable user experience.\r\n\r\n### Actual behavior\r\nmsbuild hangs while the ** glob expands across my huge system drive making restore take a very long time.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n15.9.21.664\r\nOS info:\r\nVersion 1809 (OS Build 17763.253)\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\n\r\nThis issue #3642 appears related.",
  "state": "CLOSED",
  "createdAt": "2019-01-23T03:01:03Z",
  "updatedAt": "2024-02-21T17:09:35Z",
  "closedAt": "2020-08-25T19:04:23Z",
  "author": {
    "login": "kingerja"
  },
  "labels": [
    "Area: Debuggability",
    "Area: Engine",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I know we've talked about this before but I also can't find the canonical bug for it. #3204 is also related.",
        "createdAt": "2019-01-23T15:40:14Z",
        "updatedAt": "2019-01-23T15:40:14Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "We've worked around it in a few places by setting the env var `MsBuildSkipEagerWildCardEvaluationRegexes`.  I think we need to make that feature flag a global property so it can be set during restore by NuGet or our `/restore` functionality.",
        "createdAt": "2019-01-23T16:43:29Z",
        "updatedAt": "2019-01-23T16:43:29Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "This workaround MsBuildSkipEagerWildCardEvaluationRegexes was not completely sufficient on our build agents.  Nor was it sufficient to condition the item.  I am not sure of the reason why though but if you want to go with the skip eager solution I will need to dig into why it wasn't sufficient on some agents.  ",
        "createdAt": "2019-01-24T01:31:26Z",
        "updatedAt": "2019-01-24T01:31:26Z",
        "author": {
          "login": "kingerja"
        }
      },
      {
        "body": "Filed NuGet/Home#8871 to make the NuGet property-generation behavior easier to handle \"less incorrectly\".",
        "createdAt": "2019-12-03T15:34:20Z",
        "updatedAt": "2019-12-03T15:34:20Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Related: https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1172403",
        "createdAt": "2020-08-19T17:16:28Z",
        "updatedAt": "2020-08-19T17:16:28Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@kingerja, as of #5669, adding a condition to the item definition prevents the unwanted glob expansion:\r\n\r\n```xml\r\n<MyCopyItem Include=\"$(PkgEnterpriseLibrary_TransientFaultHandling_Core)\\**\\*.*\" Condition=\"'$(PkgEnterpriseLibrary_TransientFaultHandling_Core)' != ''\" />\r\n```",
        "createdAt": "2020-08-25T19:13:35Z",
        "updatedAt": "2020-08-25T19:13:35Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}