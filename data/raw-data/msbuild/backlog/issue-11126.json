{
  "number": 11126,
  "title": "Release 17.13",
  "body": "# MSBuild Release Checklist 17.13\n\n## At any time\n\n- [x] Create a new issue to track the release checklist, with this checklist copied into the issue.\n  - [x] Replace `17.12` with the previous release version, for example `17.9`\n  - [x] Replace `17.13` with the current release version, for example `17.10`\n  - [x] Replace `17.14` with the next release version, for example `17.11`\n- [x]  Create `vs17.13` branch\n- [x]  Create darc channel for `VS 17.14` if it doesn't already exist \\\n`darc add-channel --name \"VS 17.14\"`\n- [x]  Ping internal \"First Responders\" Teams channel to get the new channel made available as a promotion target (e.g. dotnet/arcade#12150): https://github.com/dotnet/arcade/pull/15331\n\n## At release time\nBefore starting the process:\n- [x] If the release is being cut more than a few days before the VS-side snap, run insertions manually OR redirect MSBuild release branch \n  - [x]  Disable scheduled run of [MSBuild VS Insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) (our 17.14 builds don't have a place to go in VS yet) by: Edit -> ... -> Triggers -> add a schedule on a dead branch (this overrides the YAML defined once-per-day schedule for main). Manual pipeline run: select as input resource the to-be-inserted \"MSBuild\" pipeline run on branch `vs17.13` and VS TargetBranch `main`.\nOR\n  - [x]  If the release is being cut more than couple of weeks modify [YAML](https://github.com/dotnet/msbuild/tree/main/azure-pipelines/vs-insertion.yml) (and merge to affected MSBuild branches) of the [VS insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) so that it schedules insertions from MSBuild `vs17.13` to VS `main`. Keep scheduled daily insertions to simplify your workflow and exclude `vs17.13` from triggering insertion on each commit.\n\n### Branching from main\n- [x]  If the new version's branch was created before the Visual Studio fork: fast-forward merge the correct commit (the one that is currently inserted to VS main) to the `vs17.13` branch \\\ne.g.: `git push upstream 2e6f2ff7ea311214255b6b2ca5cc0554fba1b345:refs/heads/vs17.10` \\\n_(This is for the case where we create the branch too early and want it to be based actually on a different commit. If you waited until a good point in time with `main` in a clean state, just branch off and you are done. The branch should point to a good, recent spot, so the final-branding PR goes in on top of the right set of commits.)_\n- [x]  Update the branch merge flow in `.config/git-merge-flow-config.jsonc` file to have the currently-in-servicing branches.\n- [x]  Create 17.14 branding PR (in main) including public API baseline package version change: {{URL_OF_NEXT_VERSION_BRANDING_PR}}. \n  - In the file `eng/Versions.props` Update the `VersionPrefix` to `17.14` and `PackageValidationBaselineVersion` set to a latest internally available 17.13 preview version in the [internal dnceng dotnet-tools feed](https://dev.azure.com/dnceng/internal/_artifacts/feed/dotnet-tools-internal). It might be needed to update `CompatibilitySuppressions.xml` files. See [this documentation](https://learn.microsoft.com/en-us/dotnet/fundamentals/apicompat/overview) for more details. You can update `CompatibilitySuppressions.xml` files by running\n`dotnet pack MSBuild.Dev.slnf /p:ApiCompatGenerateSuppressionFile=true`. \n  - [x]  When VS main snaps to 17.13 and updates its version to 17.14, modify the [MSBuild VS Insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) YAML so that it flows from MSBuild main to VS main.\n    - [x]  Update AutoTargetBranch selection in the [YAML](https://github.com/dotnet/msbuild/tree/main/azure-pipelines/vs-insertion.yml) (add to parameters and make new AutoTargetBranch rule by copying it from existing ones) of the [MSBuild VS Insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) to insert MSBuild `vs17.13` to the corresponding VS branch `rel/d17.13`.\n    - [x] Set scheduled insertion for main and remove exclusion of `vs17.13` triggering on each commit if added earlier.\n- [x] Merge 17.14 branding PR\n\n### Adjust DARC channels and subscriptions\n- [x]  Remove the `main` to old release channel (17.13) default channel \\\n`darc delete-default-channel --repo https://github.com/dotnet/msbuild --branch main --channel \"VS 17.13\"`\n- [x]  Associate the `main` branch with the next release channel \\\n`darc add-default-channel  --channel \"VS 17.13\" --branch main --repo https://github.com/dotnet/msbuild`\n- [x]  Check subscriptions for the forward-looking channel `VS 17.14` and update as necessary (for instance, SDK's `main` branch should usually be updated, whereas release branches often should not be \\\n`darc get-subscriptions --exact --source-repo https://github.com/dotnet/msbuild --channel \"VS 17.13\"`\n- [x]  Update channel VS 17.13 to VS 17.14 for the sdk main subscription and any others from the previous step\n`darc update-subscription --id sdk_main_branch_id`\n- [x]  Ensure that the current release channel `VS 17.13` is associated with the correct release branch\\\n`darc get-default-channels --source-repo https://github.com/dotnet/msbuild --branch vs17.13` \\\nif it is not, `darc add-default-channel  --channel \"VS 17.13\" --branch vs17.13 --repo https://github.com/dotnet/msbuild`\n- [x] Double check subscriptions from our repo `darc get-subscriptions --target-repo dotnet/msbuild` and update subscriptions to `VS17.13` and `main` branches according to [supported versions of VS and SDK](https://learn.microsoft.com/en-us/dotnet/core/porting/versioning-sdk-msbuild-vs#supported-net-versions):\n  - [x] NuGet client\n    - Based on VS version channel\n    - `darc get-subscriptions --exact --target-repo https://github.com/dotnet/msbuild --source-repo https://github.com/nuget/nuget.client`\n  - [x] Source Build Packages\n    - Based on .NET version channel\n    - `darc get-subscriptions --exact --target-repo https://github.com/dotnet/msbuild --source-repo https://github.com/dotnet/source-build-reference-packages`\n  - [x] Roslyn:\n    - Based on VS version channel\n    - `darc get-subscriptions --exact --target-repo https://github.com/dotnet/msbuild --source-repo https://github.com/dotnet/roslyn`\n  - [x] Arcade:\n    - Based on .NET version channel--does not change every MSBuild release\n    - `darc get-subscriptions --exact --target-repo https://github.com/dotnet/msbuild --source-repo https://github.com/dotnet/arcade`\n\n### Adjust pipelines / releases\n- [x]  Fix OptProf data flow for the new vs17.13 branch\n  - [x] Run the [official build](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=9434) for vs17.13 without OptProf (set `SkipApplyOptimizationData` variable in 'Advanced options' section of the 'Run pipeline' menu to `true`) or alternatively with the latest Opt-Prof collected for the main branch (set `Optional OptProfDrop Override` to the drop path of the collected data, which could be found in the logs of the pipeline: Windows_NT -> Build -> search for `OptimizationData`). \n  - [x] Check that the [OptProf data collection](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=17389) pipeline run is triggered for vs17.13. If not, run manually ('Run pipeline' in upper right)\n  - [x] Run the [official build](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=9434) for vs17.13 with no extra customization - OptProf should succeed now\n- [x] Restore [MSBuild VS Insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) to the default [YAML](https://github.com/dotnet/msbuild/tree/main/azure-pipelines/vs-insertion.yml) defined schedule, by removing all triggers from Edit -> ... -> Triggers.\n\n### Configure localization\n- [x]  Create 17.13 localization ticket: https://aka.ms/ceChangeLocConfig (requesting to switch localization from 17.12 to 17.13): https://ceapex.visualstudio.com/CEINTL/_workitems/edit/1018906\n- [x]  Enable 17.13 localization - by setting [`EnableReleaseOneLocBuild`](https://github.com/dotnet/msbuild/blob/vs17.13/.vsts-dotnet.yml) to `true`\n- [x]  Disable 17.12 localization -  by setting [`EnableReleaseOneLocBuild`](https://github.com/dotnet/msbuild/blob/vs17.12/.vsts-dotnet.yml) to `false`. Update the comment on the same line.\n- [x]  Create and merge a PR in main to update a localization version comment in setting [`EnableReleaseOneLocBuild`](https://github.com/dotnet/msbuild/blob/main/.vsts-dotnet.yml) to set up the merge conflict when this line will be updated in the release branch.\n\n### Final branding\n- [x]  Prepare final branding PR for `vs17.13`: https://github.com/dotnet/msbuild/pull/11130\n- [x]  Merge final branding to `vs17.13` branch\n- [x]  Update perfstar MSBuild insertions configuration: [example PR](https://dev.azure.com/devdiv/DevDiv/_git/dotnet-perfstar/pullrequest/522843): https://dev.azure.com/devdiv/DevDiv/_git/dotnet-perfstar/pullrequest/600164\n- [x] Note down the build (will be helpful for requesting nuget packages publishing):\n   build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=10705997&view=results\n   inserted as: https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/598395\n- [x] Get M2 or QB approval as necessary per the VS schedule\n- [x]  Merge to VS (babysit the automatically generated VS insertion PR https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequests for the MSBuild commit noted in above step): https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/598395\n- [x] Respond to the 'VS xyz package stabilization' email - with the merged insertion PR (as nowVS is on stable version).\n- [x] Update the PackageValidationBaselineVersion to the latest released version (17.13.0) - this might require temporary addition of the [build artifacts feed](https://github.com/dotnet/msbuild/blob/29397b577e3ec0fe0c7650c3ab0400909655dc88/NuGet.config#L9) as the new version is not yet added to the official feeds (this is post release). This can trigger a high severity CG error (https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/secure-supply-chain/how-to-securely-configure-package-source-files) - however it should be fine to keep this temporary feed untill the release.\n- [x] Update the requested SDK version for bootstrap folder (the `BootstrapSdkVersion` property in [Versions.props](https://github.com/dotnet/msbuild/blob/main/eng/Versions.props)) and buildToolCommand/_InitializeBuildToolCommand values in cibuild_bootstrapped_msbuild scripts if a fresh sdk was released (released runtimes and associated sdk versions can be checked here - https://dotnet.microsoft.com/download/visual-studio-sdks - make sure to always check the details of the appropriate targeted version of .NET for the matching latest version of SDK).\n\n## ASAP On/After GA:\n\nTiming based on the [(Microsoft-internal) release schedule](https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/10097/Dev17-Release).\n\n- [x]  Push packages to nuget.org (not currently automated, contact dnceng - search \"Publish MSBuild 17.6 to NuGet.org\" email subject for template).\n\n  Following packages should be published (`THIS_RELEASE_EXACT_VERSION` is equal to `VersionPrefix` that comes form the eng\\Version.props, that were part of the build we are trying to get published):\n    - Microsoft.Build.Utilities.Core.{{THIS_RELEASE_EXACT_VERSION}}.nupkg\n    - Microsoft.Build.{{THIS_RELEASE_EXACT_VERSION}}.nupkg\n    - Microsoft.Build.Framework.{{THIS_RELEASE_EXACT_VERSION}}.nupkg\n    - Microsoft.Build.Runtime.{{THIS_RELEASE_EXACT_VERSION}}.nupkg\n    - Microsoft.Build.Tasks.Core.{{THIS_RELEASE_EXACT_VERSION}}.nupkg\n    - Microsoft.NET.StringTools.{{THIS_RELEASE_EXACT_VERSION}}.nupkg\n    - Microsoft.Build.Templates.{{THIS_RELEASE_EXACT_VERSION}}.nupkg\n     \n  **Note:** Microsoft.Build.Conversion.Core and Microsoft.Build.Engine are **not** part of the list. Microsoft.Build.Templates **is** part of the list. Those 3 packages are a difference to the historic publishing list.\n\n- [x]  Publish docs: submit reference request at https://aka.ms/publishondocs\n  - Click on the link labeled *Request \u2013 Reference Publishing*\n  - You can use existing [ticket](https://dev.azure.com/msft-skilling/Content/_workitems/edit/183613) as a reference\n- [x] Remove the temporarily added [build feed from `nuget.config`](https://github.com/dotnet/msbuild/blob/29397b577e3ec0fe0c7650c3ab0400909655dc88/NuGet.config#L9) if it was added in the `Update the PackageValidationBaselineVersion` step\n- [x]  Update `main` subscriptions to the new channel (this can be done before or after release - depending on when the source repos from our previous - VS 17.13 - channle start to publish in the next - VS 17.14 - channel) \\\n`darc get-subscriptions --exact --target-repo https://github.com/dotnet/msbuild --target-branch main`\n- [x]  Create the 17.13 release\n  - [x]  Create tag (can be done upfront)\n  ```\n  git checkout <commit noted above>\n  git tag v17.13.3\n  git push upstream v17.13.3\n  ```\n  - [x]  Create Release in Github with `Create Release from Tag` GH option (https://github.com/dotnet/msbuild/releases/new?tag=v17.9.3) - the release notes can be prepopulated (`Generate Release Notes`)\n",
  "state": "CLOSED",
  "createdAt": "2024-12-12T14:23:51Z",
  "updatedAt": "2025-02-14T12:24:05Z",
  "closedAt": "2025-02-14T12:24:05Z",
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      },
      {
        "login": "SimaTian"
      },
      {
        "login": "JanProvaznik"
      }
    ]
  },
  "labels": [
    "triaged"
  ],
  "comments": {
    "nodes": []
  }
}