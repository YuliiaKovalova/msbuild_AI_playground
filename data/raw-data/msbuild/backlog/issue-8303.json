{
  "number": 8303,
  "title": "Different releases of Microsoft.Build.* assemblies have the same 15.1 version leading to issues",
  "body": "It seems like at some point assemblies Microsoft.Build, Microsoft.Build.Framework, etc. stopped changing their versions after updates, so the versions of actually different Microsoft.Build assemblies became the same (15.1).\r\nIf an application depends on one of these libs and the same version (but different release) is installed in global assemblies cache (GAC), the app uses the version from GAC rather than expected lib placed near the executable. This leads to issues with missing types, members etc.\r\n\r\nCould you please provide any ideas about solving such issues?",
  "state": "CLOSED",
  "createdAt": "2023-01-12T09:53:58Z",
  "updatedAt": "2023-01-13T09:49:36Z",
  "closedAt": "2023-01-13T09:44:20Z",
  "author": {
    "login": "Firensis"
  },
  "labels": [
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is intentional, and allows API client applications to work with multiple versions of MSBuild.\r\n\r\nDo not install MSBuild assemblies in the GAC. They are intended to be within a Visual Studio instance, not global to the machine. Visual Studio has a setup step that should remove any entries that are in place at installation or update time.",
        "createdAt": "2023-01-12T14:53:48Z",
        "updatedAt": "2023-01-12T14:53:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thank you for the answer! :) But that's sad. Our client has this Microsoft.Build.Framework in his GA\u0421 and our analyzer depends on that library. The assembly from GA\u0421 doesn't provide some required types.\r\n\r\nDo you may be know the way to load an assembly explicitly from a specific file? 'Assembly.Load' methods load from GA\u0421.",
        "createdAt": "2023-01-12T15:06:58Z",
        "updatedAt": "2023-01-12T15:11:27Z",
        "author": {
          "login": "Firensis"
        }
      },
      {
        "body": "I do not know of a way to bypass the GAC when loading an assembly on .NET Framework.\r\n\r\nIdeally, your client should unGAC MSBuild assemblies. If that's harmful for them we would love to know exactly why (via Visual Studio Feedback or a bug here).\r\n\r\nIf they absolutely can't do that, they may be able to update the version that is GACed to be the one from the Visual Studio instance that you're trying to load, so it comes from the GAC but is the right version. That's not what we want, but might be a small change to unblock progress.",
        "createdAt": "2023-01-12T15:18:09Z",
        "updatedAt": "2023-01-12T15:18:09Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thank you for the answers, I've sent the information to the client.\r\nIt is very nice you took your time to help me :).",
        "createdAt": "2023-01-13T09:44:20Z",
        "updatedAt": "2023-01-13T09:49:36Z",
        "author": {
          "login": "Firensis"
        }
      }
    ]
  }
}