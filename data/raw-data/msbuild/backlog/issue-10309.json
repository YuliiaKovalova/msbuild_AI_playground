{
  "number": 10309,
  "title": "Duplicate item metadata present in generated editorconfig with CompilerVisibleItemMetadata",
  "body": "### Issue Description\n\nSuppose you have three totally independent packages that provide analyzers that leverage additional files to do some processing. Additionally, all packages consume the same file types (i.e. `.resx` files).\r\n\r\nThe first package might just add the files as `AdditionalFiles` and check for file extension inside the analyzer:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <AdditionalFiles Include=\"@(EmbeddedResource)\" />\r\n  </ItemGroup>\r\n```\r\n\r\nThe second package, however, might use an additional piece of metadata for the embedded resources to distinguish them, and thus has a slightly different version:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <CompilerVisibleItemMetadata Include=\"AdditionalFiles\" MetadataName=\"SourceItemType\" />\r\n    <!-- NOTE: added again, same identity, but with the additional metadata this time -->\r\n    <AdditionalFiles Include=\"@(EmbeddedResource)\" SourceItemType=\"EmbeddedResource\" />\r\n  </ItemGroup>\r\n```\r\n\r\nA third one might even use another totally different metadata annotation on the same items for its own purposes:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <CompilerVisibleItemMetadata Include=\"AdditionalFiles\" MetadataName=\"Foo\" />\r\n    <AdditionalFiles Include=\"@(EmbeddedResource)\" Foo=\"Bar\" />\r\n  </ItemGroup>\r\n```\r\n\r\nThe resulting editorconfig will currently now look like the following:\r\n\r\n```editorconfig\r\n[.../Resources.resx]\r\nbuild_metadata.AdditionalFiles.SourceItemType = \r\nbuild_metadata.AdditionalFiles.SourceItemType = EmbeddedResource\r\nbuild_metadata.AdditionalFiles.SourceItemType = \r\nbuild_metadata.AdditionalFiles.Foo = \r\nbuild_metadata.AdditionalFiles.Foo = \r\nbuild_metadata.AdditionalFiles.Foo = Bar\r\n```\r\n\r\nRegardless of the somewhat unintuitive behavior when retrieving this item's metadata from the analyzer using the `AnalyzerConfigOptionsProvider` for that file (will you get the empty value or `EmbeddedResource` when asking for `SourceItemType` with `.TryGetValue(\"build_metadata.AdditionalFiles.SourceItemType\", out var value)`?), if you have many files and multiple packages leveraging compiler item metadata, this duplication can make the editorconfig unnecessarily large (and potentially impossible to get the right value, depending on whichever behavior Roslyn itself provides for such duplicated entries).\n\n### Steps to Reproduce\n\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n\r\n  <!-- Some nuget package via .targets -->\r\n  <ItemGroup>\r\n    <AdditionalFiles Include=\"@(EmbeddedResource)\" />\r\n  </ItemGroup>\r\n\r\n  <!-- Some other package via .targets -->\r\n  <ItemGroup>\r\n    <CompilerVisibleItemMetadata Include=\"AdditionalFiles\" MetadataName=\"SourceItemType\" />\r\n    <!-- NOTE: added again, same identity, but with the additional metadata this time -->\r\n    <AdditionalFiles Include=\"@(EmbeddedResource)\" SourceItemType=\"EmbeddedResource\" />\r\n  </ItemGroup>\r\n\r\n  <!-- A third package via .targets -->\r\n  <ItemGroup>\r\n    <CompilerVisibleItemMetadata Include=\"AdditionalFiles\" MetadataName=\"Foo\" />\r\n    <!-- NOTE: added again, same identity, but with the additional metadata this time -->\r\n    <AdditionalFiles Include=\"@(EmbeddedResource)\" Foo=\"Bar\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\n\n### Expected Behavior\n\nEmitted editorconfig similar to:\r\n\r\n```editorconfig\r\n[.../Resources.resx]\r\nbuild_metadata.AdditionalFiles.SourceItemType = EmbeddedResource\r\nbuild_metadata.AdditionalFiles.Foo = Bar\r\n```\n\n### Actual Behavior\n\nEmitted editorconfig is actually similar to:\r\n\r\n```editorconfig\r\n[.../Resources.resx]\r\nbuild_metadata.AdditionalFiles.SourceItemType = \r\nbuild_metadata.AdditionalFiles.SourceItemType = EmbeddedResource\r\nbuild_metadata.AdditionalFiles.SourceItemType = \r\nbuild_metadata.AdditionalFiles.Foo = \r\nbuild_metadata.AdditionalFiles.Foo = \r\nbuild_metadata.AdditionalFiles.Foo = Bar\r\n```\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n17.11.0.27902",
  "state": "CLOSED",
  "createdAt": "2024-06-28T17:43:42Z",
  "updatedAt": "2024-07-02T15:27:37Z",
  "closedAt": "2024-07-02T15:27:37Z",
  "author": {
    "login": "kzu"
  },
  "labels": [
    "bug"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "MSBuild team triage: Seems like it is the roslyn team that owns the corresponding target. Moving the issue to their repo.",
        "createdAt": "2024-07-02T15:26:39Z",
        "updatedAt": "2024-07-02T15:26:39Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "This issue was moved to dotnet/roslyn#74234",
        "createdAt": "2024-07-02T15:26:55Z",
        "updatedAt": "2024-07-02T15:26:55Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}