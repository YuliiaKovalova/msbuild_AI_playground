{
  "number": 5898,
  "title": "With static graph enabled, relative path isn't resolved correctly",
  "body": "```\r\nPS C:\\git\\runtime3> dotnet build src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj /bl\r\nMicrosoft (R) Build Engine version 16.8.0+126527ff1 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nSome command line switches were read from the auto-response file \"MSBuild.rsp\". To disable this file, use the \"-noAutoResponse\" switch.\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100\\MSBuild.dll -consoleloggerparameters:Summary -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100\\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100\\dotnet.dll -graph -maxcpucount -restore -verbosity:m /bl src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nC:\\git\\runtime3\\src\\libraries\\System.Runtime\\ref\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj : error MSB4025: The project file could not be loaded. Could not find a part of the path 'C:\\git\\runtime3\\src\\libraries\\System.Runtime\\ref\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj'.\r\n\r\nBuild FAILED.\r\n\r\nC:\\git\\runtime3\\src\\libraries\\System.Runtime\\ref\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj : error MSB4025: The project file could not be loaded. Could not find a part of the path 'C:\\git\\runtime3\\src\\libraries\\System.Runtime\\ref\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj'.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nUsing the 5.0.100 SDK. Looks like msbuild concatenates the relative path passed in with the path that resolves to the project file.\r\n\r\ncc @rainersigwald @cdmihai ",
  "state": "CLOSED",
  "createdAt": "2020-11-19T13:16:59Z",
  "updatedAt": "2024-02-21T14:16:13Z",
  "closedAt": "2022-02-15T17:56:29Z",
  "author": {
    "login": "ViktorHofer"
  },
  "labels": [
    "bug",
    "Partner request",
    "Area: Static Graph",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "AndyGerlicher"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.2"
  },
  "comments": {
    "nodes": [
      {
        "body": "I repro with two interesting tidbits:\r\n\r\n1. Only in `dotnet msbuild`, not `msbuild.exe`\r\n2. Not with a bootstrap debug copy of MSBuild",
        "createdAt": "2020-11-19T21:20:16Z",
        "updatedAt": "2020-11-19T21:20:16Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Same debug copy of MSBuild repros when put in a .NET 5 install.\r\n\r\nProximate cause is here:\r\n\r\n```\r\n \tMicrosoft.Build.dll!Microsoft.Build.Shared.FileUtilities.GetFullPath(string path) Line 411\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Shared.FileUtilities.NormalizePath(string path) Line 372\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Graph.GraphBuilder.AddGraphBuildPropertyToEntryPoints(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints) Line 390\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Graph.GraphBuilder.GraphBuilder(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, Microsoft.Build.Graph.ProjectInterpretation projectInterpretation, int degreeOfParallelism, System.Threading.CancellationToken cancellationToken) Line 61\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, int degreeOfParallelism, System.Threading.CancellationToken cancellationToken) Line 422\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.Graph.ProjectGraph.ProjectGraph(System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory) Line 329\tC#\r\n>\tMicrosoft.Build.dll!Microsoft.Build.Execution.BuildManager.ExecuteGraphBuildScheduler(Microsoft.Build.Graph.GraphBuildSubmission submission) Line 1414\tC#\r\n```\r\n\r\nbecause the CWD is changed to the entry-point's folder. Not sure why yet.",
        "createdAt": "2020-11-19T22:12:07Z",
        "updatedAt": "2020-11-19T22:12:07Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Something in `ExecuteRestore` is changing CWD. So there's a workaround:\r\n\r\n```\r\ndotnet build -graph src\\MSBuild\\MSBuild.csproj -restore:false\r\n```",
        "createdAt": "2020-11-19T22:31:11Z",
        "updatedAt": "2020-11-19T22:31:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "```\r\nI repro with two interesting tidbits:\r\n\r\n1. Only in dotnet msbuild, not msbuild.exe\r\n2. Not with a bootstrap debug copy of MSBuild\r\n```\r\nThat pretty much sums up what I tested things on, and what our CI tests against :)\r\n",
        "createdAt": "2020-11-19T22:37:51Z",
        "updatedAt": "2020-11-19T22:37:51Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "I wonder if this is going to start failing when we update to target .NET 5.",
        "createdAt": "2020-11-19T22:40:30Z",
        "updatedAt": "2020-11-19T22:40:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I was wondering why the static graph tests in the sdk are passing. But when I looked into it I remembered that they got [disabled](https://github.com/dotnet/sdk/pull/13078#issuecomment-679312551) and we didn't follow up into [reenabling them](https://github.com/dotnet/sdk/pull/13171)",
        "createdAt": "2020-11-19T22:50:33Z",
        "updatedAt": "2020-11-19T22:50:33Z",
        "author": {
          "login": "cdmihai"
        }
      },
      {
        "body": "It looks like just _doing a graph build_ changes the working directory--I see it when I disable restore but break in and check after the main call to `ExecuteGraphBuild`.\r\n\r\nI'm going to stop looking at this for the moment but we should definitely chase this down.",
        "createdAt": "2020-11-19T23:00:52Z",
        "updatedAt": "2020-11-19T23:00:52Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "BTW, I think that invalidates my other findings: `msbuild.exe` doesn't have `-restore` by default, and neither does directly calling `dotnet path\\to\\private\\msbuild.dll`. I bet if we added `-restore` there (as `dotnet build` does implicitly) we'd see the problem.",
        "createdAt": "2020-11-19T23:02:44Z",
        "updatedAt": "2020-11-19T23:02:44Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@dfederm Would you be looking into static graph issues going forward?",
        "createdAt": "2022-01-07T18:02:45Z",
        "updatedAt": "2022-01-07T18:02:45Z",
        "author": {
          "login": "marcpopMSFT"
        }
      },
      {
        "body": "@marcpopMSFT  Sure, will take a look.",
        "createdAt": "2022-01-07T18:10:51Z",
        "updatedAt": "2022-01-07T18:10:51Z",
        "author": {
          "login": "dfederm"
        }
      },
      {
        "body": "Looks like the cwd gets changed with non-graph builds too, but paths are resolved to be absolute beforehand so it's not a problem. Likely we just need to do the same with the graph build request",
        "createdAt": "2022-02-02T20:00:56Z",
        "updatedAt": "2022-02-02T20:00:56Z",
        "author": {
          "login": "dfederm"
        }
      }
    ]
  }
}