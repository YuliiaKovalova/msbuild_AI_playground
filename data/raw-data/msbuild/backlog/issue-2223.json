{
  "number": 2223,
  "title": "msbuild isn't setting FinalOutputPath on SatelliteDllsProjectOutputGroup",
  "body": "tracking bug which @rainersigwald  is currently investigating after discussion on chat\r\nlinked to: https://github.com/NuGet/Home/issues/5408",
  "state": "OPEN",
  "createdAt": "2017-06-15T18:07:44Z",
  "updatedAt": "2024-02-21T16:36:37Z",
  "closedAt": null,
  "author": {
    "login": "rohit21agrawal"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@AArnott found the reason in https://github.com/NuGet/Home/issues/5408#issuecomment-308831975: common.targets does the right thing, but `Microsoft.WinFx.targets` does not. That is imported for many common project types, through Microsoft.Common.CurrentVersion.targets -> Microsoft.NETFramework.targets -> Microsoft.NETFramework.CurrentVersion.targets -> Microsoft.WinFX.targets -> (framework installed) Microsoft.WinFX.targets.\r\n\r\nIn the framework's copy there's this comment:\r\n\r\n> SatelliteDllsProjectOutputGroup target is implemented in Microsoft.Common.targets, but it doesn't handle WinFX satellite assembly, since for WinFX, the $(targetname).g.$(UICulture).resx is not set into project file, but is generated at build time after Xaml file is compiled, (for some case, it is generated after the main dll is compiled).\r\n>\r\n> So overwrite this target, copy the content from Microsoft.Common.targets and inject the part for our UICulture support.\r\n\r\nThat reasoning isn't very convincing for something that unconditionally overrides something in common targets in almost all cases.\r\n\r\nWe could potentially work around this by re-overriding the target (with the WinFX behavior but the modern style and correct metadata) in MSBuild's local copy of WinFX.targets.",
        "createdAt": "2017-06-15T19:01:50Z",
        "updatedAt": "2017-06-15T19:01:50Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@AArnott proposed options in https://github.com/NuGet/Home/issues/5408#issuecomment-308831975:\r\n\r\n> Needless to say, this overriding target does not contain the new metadata that you require. And servicing it in .NET Framework, while it may be an option, may be much harder than alternatives, including:\r\n> 1. stop importing the file from .NET Framework. Instead import one that ships with VS so we can service it more frequently.\r\n> 2. stop importing the Microsoft.WinFx.targets file period. I don't know what it buys us.\r\n> 3. Stop depending on the metadata.\r\n\r\nWe can rule out servicing the copy of this file in the framework--there's no way we could get that done in any kind of reasonable time.\r\n\r\nWe already import a copy of the file from VS, but it forwards to the Framework copy. I don't understand the implications of just making it a full copy instead.\r\n\r\nI don't understand enough about what's delivered in winfx.targets to be confident just no longer importing it. We could perhaps condition the import on a property set in the SDK, so it never happens for new-style SDK projects.",
        "createdAt": "2017-06-15T19:08:29Z",
        "updatedAt": "2017-06-15T19:08:29Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}