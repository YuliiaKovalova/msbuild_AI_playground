{
  "number": 6180,
  "title": "CopyOnWriteDictionary in Microsoft.Build.Utilities.v4.0.dll doesn't work with List`1.AddRange",
  "body": "If Microsoft.Build.Utilities.v4.0.dll is loaded from the GAC during the build (e.g. by NuGet.Build.Tasks.dll) and CopyOnWriteDictionary<K,V> is used in `List<T>.AddRange()` to enumerate, you will get a malformed list back full of null elements.\r\n\r\nThis is because AddRange has a special case for `ICollection<T>` that COWDictionary wasn't designed for:\r\nhttps://referencesource.microsoft.com/#mscorlib/system/collections/generic/list.cs,712",
  "state": "CLOSED",
  "createdAt": "2021-02-21T22:19:37Z",
  "updatedAt": "2024-02-21T14:14:48Z",
  "closedAt": "2021-08-28T00:38:36Z",
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "bug",
    "needs-more-info",
    "author-responded",
    "stale",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I don't think there's any way this will meet the bar for servicing .NET Framework 4.8. Is there any way for us to work around in current code, or do we just have to live with this? How did you notice it in the first place?",
        "createdAt": "2021-06-09T15:48:48Z",
        "updatedAt": "2021-06-09T15:48:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I tried AddRange here and it just added all nulls:\r\nhttps://github.com/dotnet/msbuild/blob/18a8ddcb5bdfa16357ae2350b09cafcbc3550f13/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs#L901-L908",
        "createdAt": "2021-06-09T17:37:03Z",
        "updatedAt": "2021-06-09T17:37:03Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "As far as I can tell, there's nothing wrong in the Framework here, it's just our COW needs to properly implement CopyTo (I think)\r\n\r\nThis is certainly very low pri.",
        "createdAt": "2021-06-09T17:39:10Z",
        "updatedAt": "2021-06-09T17:39:10Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "Oh, and I think this bug is not actionable at all because we can't change Microsoft.Build.Utilities.v4.0.dll at all.\r\n\r\nThe best thing to do is move desktop WPF targets out of C:\\Windows and into the MSBuild toolset, and avoid loading anything from the GAC (by XAML markup tooling).",
        "createdAt": "2021-06-09T17:40:52Z",
        "updatedAt": "2021-06-09T17:40:52Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "This issue is marked as stale because feedback has been requested for 30 days with no response. Please respond within 14 days or this issue will be closed due to inactivity.",
        "createdAt": "2021-08-28T00:01:06Z",
        "updatedAt": "2021-08-28T00:01:06Z",
        "author": {
          "login": "ghost"
        }
      }
    ]
  }
}