{
  "number": 1700,
  "title": "Return code for ToolTask.Cancel",
  "body": "What should be the return value for `ToolTask.Execute` when the `ToolTask.Cancel` method is invoked?  Assuming of course that the `ToolTask` was successfully able to cancel the operation?  \r\n\r\nThere doesn't seem to be any documentation here:\r\n\r\n> https://msdn.microsoft.com/en-us/library/microsoft.build.utilities.tooltask.cancel.aspx\r\n",
  "state": "OPEN",
  "createdAt": "2017-02-14T18:52:06Z",
  "updatedAt": "2024-02-21T16:37:30Z",
  "closedAt": null,
  "author": {
    "login": "jaredpar"
  },
  "labels": [
    "question",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "CC @tyoverby, @agocke ",
        "createdAt": "2017-02-14T18:52:16Z",
        "updatedAt": "2017-02-14T18:52:16Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "It looks like if its cancelled, then the return code is the default `-1` and the task fails.\r\n\r\n[Default value](https://github.com/Microsoft/msbuild/blob/xplat/src/Utilities/ToolTask.cs#L858)\r\n[What happens when you cancel](https://github.com/Microsoft/msbuild/blob/xplat/src/Utilities/ToolTask.cs#L1025)\r\n[How the task fails](https://github.com/Microsoft/msbuild/blob/xplat/src/Utilities/ToolTask.cs#L1662)",
        "createdAt": "2017-02-14T19:05:32Z",
        "updatedAt": "2017-02-14T19:05:32Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl \r\n\r\nAh I see a bit more.  Thanks for the links.  \r\n\r\nMy context for asking is that Roslyn today returns 0.  Even looking at those links I still think that can lead to some issues in the MSBuild pipeline.  Consider this order of operations:\r\n\r\n- Thread1: Calls ExecuteTool synchronously and hits ManagedCompiler::ExecuteTool\r\n- Thread2: Calls: `Cancel`.  This cancels both the MSBuild WaitHandle and the Roslyn CancellationToken.  \r\n- Thread1: Notices the cancellation and returns 0 from ExecuteTool.  \r\n\r\nAt this point the `_terminated` flag is never set.  The Roslyn code never calls into the ToolTask::Execute method and hence no process and no waiting on the notifications member.  Hence the task is cancelled but exits with success.  \r\n\r\nSeems like Roslyn has a bug here and in general ExecuteTool should return with an exit code of -1 in the case cancellation is handled in a derived method.  \r\n\r\nAm I understanding the scenario here correctly? \r\n\r\nNote: I'm definitely making some assumptions about the MSBuild threading model which could be wrong here. \r\n",
        "createdAt": "2017-02-14T19:18:59Z",
        "updatedAt": "2017-02-14T19:18:59Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "I think we'll need to set up a test project to see what happens.  I think the `Task.Execute()` will return false and the `ExitCode` will be `-1` but in more advanced scenarios its anybody's guess.\r\n\r\nBy `Ctrl+C`ing from the command-line, I'd expect it to work that way, but in a custom program there might be different results.  Do you have time to code something up?",
        "createdAt": "2017-02-14T20:31:50Z",
        "updatedAt": "2017-02-14T20:31:50Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  }
}