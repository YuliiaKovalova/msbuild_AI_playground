{
  "number": 8844,
  "title": "[Broken Build]: Get stack overflow on a M2 MacBook",
  "body": "### Issue Description\r\n\r\nMy project builds fine on Windows X64 Machines and a M2 Mac when it is just cloned from Github. But when I modified the code(even a single line), the build faild with console  output \"stack overflow\" or just hang there. But the modified code builds fine on Windows X64.\r\n\r\nIt\u2018s wired that after I pushed modified files to Git and re-clone the project, the build worked again. And after modified some files it failed again(and succeed on Windows X64). This trick works and it`s now a temperory workaround for me.\r\n![image](https://github.com/dotnet/msbuild/assets/105622506/73a3f8a3-7358-42a8-b540-6282b0df6b2a)\r\n\r\nSometimes it producs error MSB4166 with noting in the log folder\r\n<img width=\"803\" alt=\"\u622a\u5c4f2023-06-06 17 17 04\" src=\"https://github.com/dotnet/msbuild/assets/105622506/1e7cc90b-f063-4dd8-813d-b6e2d0be8a2e\">\r\n\r\nAfter the first stack overflow or fail, any `dotnet build\\restore\\clean` will hang as it's shown above.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nProject: https://github.com/ProjectRakuen/MoeUC.git\r\n\r\nSteps to reproduce:\r\n1. Clone the project\r\n2. Build the solution\r\n3. Modify some files with VS Mac or Rider\r\n4. Rebuild MoeUC.Api\r\n5. If build success, goto 3\r\n6. Build failed with console output stack overflow or hangs.\r\n\r\n### Expected Behavior\r\n\r\nJust build the project\r\n\r\n### Actual Behavior\r\n\r\n`dotnet build\\restore\\clean` faild with stack overflow or segment fault or hang\r\n\r\n### Ask us questions\r\n\r\n_No response_",
  "state": "OPEN",
  "createdAt": "2023-06-06T09:25:09Z",
  "updatedAt": "2024-01-31T08:14:09Z",
  "closedAt": null,
  "author": {
    "login": "StarPluckerZ"
  },
  "labels": [
    "backlog",
    "Priority:2",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Since it's failing/succeeding/failing/succeeding, I suspect a problem with node reuse.\r\n\r\n1. Can you set the environment variables `MSBUILDDEBUGCOMM=1` and `MSBUILDDEBUGPATH={absolute path to some new empty folder}` and run a few times, then share the text files in that folder? \r\n2. Can you also try adding `-nodereuse:false` to your build command lines? Does that avoid the problem?",
        "createdAt": "2023-06-06T16:48:14Z",
        "updatedAt": "2023-06-06T16:48:14Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Since it's failing/succeeding/failing/succeeding, I suspect a problem with node reuse.\r\n> \r\n> 1. Can you set the environment variables `MSBUILDDEBUGCOMM=1` and `MSBUILDDEBUGPATH={absolute path to some new empty folder}` and run a few times, then share the text files in that folder?\r\n> 2. Can you also try adding `-nodereuse:false` to your build command lines? Does that avoid the problem?\r\n\r\n1. Logs after adding those environment variables and ran builds until  MSB4166 occured.\r\n\r\n[log.zip](https://github.com/dotnet/msbuild/files/11671330/log.zip)\r\n2. Adding `-nodereuse:false` didn't avoid the problem and the build still hang. After a few builds I got error MSB4166. logs are as followed.\r\n[log-nodereuseFalse.zip](https://github.com/dotnet/msbuild/files/11671369/log-nodereuseFalse.zip)\r\n\r\nThanks for your reply.",
        "createdAt": "2023-06-07T00:46:12Z",
        "updatedAt": "2023-06-07T01:20:08Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "I turned to .NET SDK 8 preview, and the problem was the same.\r\n[log-dotnet8.zip](https://github.com/dotnet/msbuild/files/11697825/log-dotnet8.zip)\r\n\r\nUpdate at unix timestamp 1686275970:\r\nThe build works fine on Windows11 Arm.",
        "createdAt": "2023-06-09T00:49:22Z",
        "updatedAt": "2023-06-09T02:00:41Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "Unfortunately I'm stumped. In the `nodereuseFalse` zip I see\r\n\r\n```\r\n.NET ThreadPool Worker (TID 7) 638216952474855180 +     0.129ms: Attempting connect to PID 14965 with pipe /tmp/MSBuild14965 with timeout 30000 ms\r\n.NET ThreadPool Worker (TID 7) 638216952475171850 +    31.667ms: Writing handshake part 0 (16777344) to pipe /tmp/MSBuild14965\r\n.NET ThreadPool Worker (TID 7) 638216952475174200 +     0.235ms: Writing handshake part 1 (568271898) to pipe /tmp/MSBuild14965\r\n.NET ThreadPool Worker (TID 7) 638216952475174710 +     0.051ms: Writing handshake part 2 (17) to pipe /tmp/MSBuild14965\r\n.NET ThreadPool Worker (TID 7) 638216952475175060 +     0.035ms: Writing handshake part 3 (6) to pipe /tmp/MSBuild14965\r\n.NET ThreadPool Worker (TID 7) 638216952475175350 +     0.029ms: Writing handshake part 4 (1) to pipe /tmp/MSBuild14965\r\n.NET ThreadPool Worker (TID 7) 638216952475175640 +     0.029ms: Writing handshake part 5 (21101) to pipe /tmp/MSBuild14965\r\n.NET ThreadPool Worker (TID 7) 638216952475175900 +     0.026ms: Writing handshake part 6 (14920) to pipe /tmp/MSBuild14965\r\n.NET ThreadPool Worker (TID 7) 638216952475176190 +     0.029ms: Reading handshake from pipe /tmp/MSBuild14965\r\n.NET ThreadPool Worker (TID 7) 638216952475234130 +     5.794ms: Successfully connected to pipe /tmp/MSBuild14965...!\r\n.NET ThreadPool Worker (TID 7) 638216952475234790 +     0.066ms: Successfully connected to created node 4 which is PID 14965\r\n```\r\n\r\nbut there's also `MSBuild_CommTrace_PID_14964_node_4.txt`:\r\n\r\n```\r\n.NET ThreadPool Worker (TID 13) 638216952493473680 +  1803.775ms: COMMUNICATIONS ERROR (HRC) Node: 4 Process: 14965 Bytes Read: 0 Expected: 5\r\n.NET ThreadPool Worker (TID 13) 638216952493475300 +     0.162ms:    Child Process 14965 has exited.\r\n```\r\n\r\nAnd no indication of trouble on that PID:\r\n\r\n```\r\nOutOfProc Endpoint Packet Pump (TID 5) 638216952475182140 +     0.882ms: Waiting for connection 900000 ms...\r\nOutOfProc Endpoint Packet Pump (TID 5) 638216952475188000 +     0.586ms: Parent started connecting. Reading handshake from parent\r\nOutOfProc Endpoint Packet Pump (TID 5) 638216952475188970 +     0.097ms: Building handshake for node type Arm64, (version 1): options 16777344.\r\nOutOfProc Endpoint Packet Pump (TID 5) 638216952475189290 +     0.032ms: Handshake salt is \r\nOutOfProc Endpoint Packet Pump (TID 5) 638216952475190990 +      0.17ms: Tools directory root is /usr/local/share/dotnet/sdk/7.0.302\r\nOutOfProc Endpoint Packet Pump (TID 5) 638216952475230210 +     3.922ms: Successfully connected to parent.\r\nOutOfProc Endpoint Packet Pump (TID 5) 638216952475231540 +     0.133ms: Changing link status from Inactive to Active\r\nOutOfProc Endpoint Packet Pump (TID 5) 638216952475235380 +     0.384ms: Entering read loop.\r\n```\r\n\r\nSo definitely seems like 14965 crashed, but I don't see _why_.",
        "createdAt": "2023-06-21T20:15:04Z",
        "updatedAt": "2023-06-21T20:15:04Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I was trying to reproduce the issue on M1 Mac multiple times but was not successful: the build completes as expected.\r\nMSBuild version used: 17.6.3.",
        "createdAt": "2023-06-27T17:04:45Z",
        "updatedAt": "2023-06-27T17:04:45Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "As another possible workaround, @StarPluckerZ, try to build with `/m:1` switch: `dotnet build /m:1`.\r\n",
        "createdAt": "2023-06-27T17:14:17Z",
        "updatedAt": "2023-06-27T17:14:17Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "> As another possible workaround, @StarPluckerZ, try to build with `/m:1` switch: `dotnet build /m:1`.\r\n\r\nThis problem magically disappeared after I update to MacOS 13.4.1(22F82). I'm stil running some test on it and will close this issue if this problem does not occur within 7 days.",
        "createdAt": "2023-06-29T08:20:53Z",
        "updatedAt": "2023-06-29T08:20:53Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "> As another possible workaround, @StarPluckerZ, try to build with `/m:1` switch: `dotnet build /m:1`.\r\n\r\n\r\n@AR-May \r\nUnfortunately the Stack Overflow happened again, here are log files\r\n[log.zip](https://github.com/dotnet/msbuild/files/11911436/log.zip)\r\nThere was also a `bus error` showed on the console output.\r\n\r\n`/m:1` didn't work either.\r\n\r\nWith those info I suspect there's some child process crashed, which caused an Infinite loop?",
        "createdAt": "2023-06-30T01:03:23Z",
        "updatedAt": "2023-06-30T01:04:14Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "More tests:\r\nTest 1:\r\n\r\n[Test1.zip](https://github.com/dotnet/msbuild/files/11911562/Test1.zip)\r\n\r\n`dotnet build` hang with no console output. Process 1035 didn't exit even after I suggested `^C`\r\n`sudo ps -a` output:\r\n`1035 ttys000    0:00.44 /usr/local/share/dotnet/dotnet /usr/local/share/dotnet/sdk/8.0.100-preview.4.23260.5/MSBuild.dll /nologo /nodemo`\r\n\r\nKilled process 1035 with `sudo kill`\r\n\r\nTest 2:\r\nStil hang\r\n[Test2.zip](https://github.com/dotnet/msbuild/files/11911581/Test2.zip)\r\n\r\n`ps -a` output:\r\n>  1625 ttys000    0:00.97 dotnet build\r\n 1626 ttys000    0:00.42 /usr/local/share/dotnet/dotnet /usr/local/share/dotnet/sdk/8.0.100-preview.4.23260.5/MSBuild.dll /nologo /nodemode:1 /nodeReuse:true /low:false\r\n 1627 ttys000    0:00.29 /usr/local/share/dotnet/dotnet /usr/local/share/dotnet/sdk/8.0.100-preview.4.23260.5/MSBuild.dll /nologo /nodemode:1 /nodeReuse:true /low:false\r\n 1628 ttys000    0:00.29 /usr/local/share/dotnet/dotnet /usr/local/share/dotnet/sdk/8.0.100-preview.4.23260.5/MSBuild.dll /nologo /nodemode:1 /nodeReuse:true /low:false\r\n\r\nKilled those process.\r\n\r\nTest 3:\r\n[Test3.zip](https://github.com/dotnet/msbuild/files/11911591/Test3.zip)\r\nhang\r\n\r\nKilled 1628 and 1942.\r\n\r\nTest 4:\r\n[Test4.zip](https://github.com/dotnet/msbuild/files/11911617/Test4.zip)\r\n\r\nRan `dotnet build -nodereuse:false`\r\n`ps -a` output:\r\n>  2060 ttys000    0:00.44 /usr/local/share/dotnet/dotnet /usr/local/share/dotnet/sdk/8.0.100-preview.4.23260.5/MSBuild.dll /nologo /nodemode:1 /nodeReuse:true /low:false\r\n 2128 ttys000    0:00.90 dotnet build -nodereuse:false\r\n 2129 ttys000    0:00.42 /usr/local/share/dotnet/dotnet /usr/local/share/dotnet/sdk/8.0.100-preview.4.23260.5/MSBuild.dll /nologo /nodemode:1 /nodeReuse:false /low:false\r\n 2130 ttys000    0:00.29 /usr/local/share/dotnet/dotnet /usr/local/share/dotnet/sdk/8.0.100-preview.4.23260.5/MSBuild.dll /nologo /nodemode:1 /nodeReuse:false /low:false\r\n 2131 ttys000    0:00.30 /usr/local/share/dotnet/dotnet /usr/local/share/dotnet/sdk/8.0.100-preview.4.23260.5/MSBuild.dll /nologo /nodemode:1 /nodeReuse:false /low:false\r\n\r\nI think I`ve had enough of it. I will try fullly reinstall MacOS and see if this help solve this problem since the build works fine on M1.",
        "createdAt": "2023-06-30T01:36:17Z",
        "updatedAt": "2023-06-30T05:37:42Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "Reinstalling MacOS fail to solve this issue. I'm now trying to use X64 SDK with Rosetta and see if this is a workaround.",
        "createdAt": "2023-06-30T07:08:14Z",
        "updatedAt": "2023-06-30T07:08:14Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "> Reinstalling MacOS fail to solve this issue. I'm now trying to use X64 SDK with Rosetta and see if this is a workaround.\r\n\r\nWell, this didn't work.",
        "createdAt": "2023-06-30T07:16:01Z",
        "updatedAt": "2023-06-30T07:16:01Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "> With those info I suspect there's some child process crashed, which caused an Infinite loop?\r\n\r\nWith /m:1 there should be no child processes. I wanted to simplify the situation, so I guess that the log files you shared stayed there from previous runs. ",
        "createdAt": "2023-07-03T21:33:44Z",
        "updatedAt": "2023-07-03T21:33:44Z",
        "author": {
          "login": "AR-May"
        }
      },
      {
        "body": "<img width=\"481\" alt=\"\u622a\u5c4f2023-07-04 07 24 28\" src=\"https://github.com/dotnet/msbuild/assets/105622506/ae875882-d9dc-4d1d-877d-7c6cd45004b7\">\r\n\r\nTest 1: Consloe output \"Stack Overflow\" and no logfile created in the log folder.\r\n\r\nTest 2: Same as Test 1.\r\n\r\nTest 3  and 4: Same.\r\n\r\nI think something goes wrong before there's any log output. ",
        "createdAt": "2023-07-03T23:34:32Z",
        "updatedAt": "2023-07-03T23:34:32Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "[MoeUC.zip](https://github.com/dotnet/msbuild/files/11941879/MoeUC.zip)\r\n\r\nHere are the project files that fails to build on my Mac but successes on Windows X64 and Arm.",
        "createdAt": "2023-07-03T23:38:24Z",
        "updatedAt": "2023-07-03T23:41:48Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "Update: Build also failed on Github codespace with Debian.",
        "createdAt": "2023-07-24T11:41:30Z",
        "updatedAt": "2023-07-24T11:41:30Z",
        "author": {
          "login": "StarPluckerZ"
        }
      },
      {
        "body": "@StarPluckerZ. thanks for the new info! \r\nI tried to repro in Debian WSL and still was unable to do that. \r\nI am afraid I am out of ideas for debugging this issue at this moment. ",
        "createdAt": "2023-07-25T09:27:53Z",
        "updatedAt": "2023-07-25T09:27:53Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}