{
  "number": 9806,
  "title": "[Feature Request]: Convert Terminal Logger to a ForwardingLogger",
  "body": "### Summary\n\nTerminalLogger needs to have a forwarded logger component and a central logging component so that it can intelligently forward events from multiple build nodes to the central logger that writes to the console stream.\n\n### Background and Motivation\n\nIn https://github.com/dotnet/msbuild/pull/9805 I tried to use TaskParameterEventArgs to read values from Targets over the course of a build. This works for a single-process build, but for multi-process builds the [current configuration](https://github.com/dotnet/msbuild/blob/986f8ec32c74b7425e9ecf313e3a1afdf2d4f672/src/MSBuild/XMake.cs#L3937-L3942) only forwards certain verbosities of events, which means the feature will not work.\n\n### Proposed Feature\n\nTerminalLogger should provide a custom forwarding logger implementation that can forward relevant events back to the central node for performant updates.\n\n### Alternative Designs\n\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-02-29T21:11:37Z",
  "updatedAt": "2025-02-26T13:16:25Z",
  "closedAt": null,
  "author": {
    "login": "baronfel"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "baronfel"
      },
      {
        "login": "MichalPavlik"
      }
    ]
  },
  "labels": [
    "Feature Request",
    "Priority:2",
    "triaged",
    "Area: Terminal Logger"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Note that when we do this, we will need to update the SDK's `dotnet run` implementation. It currently creates an instance of [TL via reflection](https://github.com/dotnet/sdk/blob/main/src/Cli/dotnet/commands/dotnet-run/RunCommand.cs#L334-L337) for use during API-based builds, and once TL is a forwarding logger we'll break that usage.",
        "createdAt": "2024-09-07T17:37:29Z",
        "author": {
          "login": "baronfel"
        }
      }
    ]
  }
}