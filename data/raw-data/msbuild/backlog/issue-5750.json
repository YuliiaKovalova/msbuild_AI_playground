{
  "number": 5750,
  "title": "ToolLocationHelper.GetSupportedTargetFrameworks/GetPathToReferenceAssemblies are not aware of .NET Core",
  "body": "### Issue Description\r\nToolLocationHelper.GetSupportedTargetFrameworks and ToolLocationHelper.GetPathToReferenceAssemblies provide information about installed .NET Framework, UWP, and Silverlight frameworks, but not installed .NET Core frameworks.\r\n\r\n### Steps to Reproduce\r\nOn machine with .NET Core 3.1 installed, call:\r\n\r\n- ToolLocationHelper.GetSupportedTargetFrameworks();\r\n- ToolLocationHelper.GetPathToReferenceAssemblies(new FrameworkName(\".NETCoreApp\", new Version(3, 1)));\r\n\r\n### Expected Behavior\r\nGetSupportedTargetFrameworks() returns a collection that includes .NETCoreApp,Version=v3.1.\r\nGetPathToReferenceAssemblies returns a collection of paths to directories containing ,NET Core 3.1 reference assemblies.\r\n\r\n### Actual Behavior\r\nGetSupportedTargetFrameworks() returns a collection that does not include any .NETCoreApp framework names.\r\nGetPathToReferenceAssemblies returns an empty collection.\r\n\r\n### Versions & Configurations\r\nVisual Studio 16.8.0 Preview 4.0 (main 30515.42)",
  "state": "OPEN",
  "createdAt": "2020-09-23T18:14:42Z",
  "updatedAt": "2024-01-31T08:22:57Z",
  "closedAt": null,
  "author": {
    "login": "debonte"
  },
  "labels": [
    "Partner request",
    "For consideration",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@davkean ",
        "createdAt": "2020-09-23T18:15:01Z",
        "updatedAt": "2020-09-23T18:15:01Z",
        "author": {
          "login": "debonte"
        }
      },
      {
        "body": "What's the use case here? There are a bunch of differences in the build process between .NET (Core) and .NET Framework, and I don't think these APIs make sense in the new world. In particular, there's not really a single \"reference assemblies\" concept any more--things are resolved from targeting packs but also from NuGet packages, and having just \"what's known to the current .NET Core SDK\" returned here is likely insufficient.",
        "createdAt": "2020-09-30T15:41:38Z",
        "updatedAt": "2020-09-30T15:41:38Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I'm looking at updating Visual Studio's Choose Toolbox Items dialog to support WPF and WinForms .NET Core controls. At a high-level, the way it works today is:\r\n1. Enumerate installed frameworks\r\n2. Enumerate reference assemblies for each framework supported by Choose Toolbox Items (ex. Silverlight is ignored)\r\n3. Enumerate control types in those reference assemblies\r\n\r\n@davkean knows of other scenarios where this type of info is needed. I believe https://github.com/dotnet/project-system/issues/4873 covers some of them.",
        "createdAt": "2020-09-30T15:52:21Z",
        "updatedAt": "2020-09-30T15:52:21Z",
        "author": {
          "login": "debonte"
        }
      },
      {
        "body": "We can't even ask a very basic question of \"can I use type X if I target Y?\" where Y is a possible target.  Regardless of whether these types come from packages/references/whatever there should a central place that can answer that question. It shouldn't up to each individual feature to hard code what is, what isn't available in .NET Core and how to add the right reference to add said type.\r\n\r\nI see this no different to UWP where types come from a location different to the reference assemblies, and ToolLocationHelper has full support for it for extension and platform sdks.",
        "createdAt": "2020-10-01T01:55:39Z",
        "updatedAt": "2020-10-01T01:55:39Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Trying to get traction on this. We are seeing increasing customer reports seeking Visual Studio's Choose Toolbox Items dialog support for Winforms (and I assume WPF too) .NET projects.\r\n\r\n@rainersigwald / @BenVillalobos , any updates to this request?",
        "createdAt": "2022-08-22T20:58:34Z",
        "updatedAt": "2022-08-22T20:58:34Z",
        "author": {
          "login": "dreddy-work"
        }
      }
    ]
  }
}