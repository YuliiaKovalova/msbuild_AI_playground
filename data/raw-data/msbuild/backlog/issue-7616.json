{
  "number": 7616,
  "title": "SignFile cannot find signtool.exe with MSBuild v17.1 installed from Visual studio build tools 2022",
  "body": "### Issue Description\r\nMSBuild Version: 17.1.0+ae57d105c for .NET Framework\r\ndotnet version: 6.0.202\r\n\r\nVisual studio build tools 2022 installed with following Components/Workloads\r\n\r\nMicrosoft.VisualStudio.Workload.ManagedDesktopBuildTools\r\nMicrosoft.VisualStudio.Workload.MSBuildTools\r\nMicrosoft.VisualStudio.Workload.WebBuildTools\r\nMicrosoft.VisualStudio.Component.Windows10SDK.20348\r\n\r\n\r\nSigntool.exe exists in the following places\r\n\r\nC:\\Program Files (x86)\\Microsoft SDKs\\ClickOnce\\SignTool\\signtool.exe\r\nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.20348.0\\arm\\signtool.exe\r\nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.20348.0\\arm64\\signtool.exe\r\nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.20348.0\\x64\\signtool.exe\r\nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.20348.0\\x86\\signtool.exe\r\n\r\n\r\nAttempting to Sign a clickonce executable using MSBuild SignFile Task in our build pipeline fails\r\n\r\nerror MSB3482: An error occurred while signing:\r\n SignTool.exe not found\r\n\r\n### Steps to Reproduce\r\n\r\nI can't share too much as I'm working on internal projects. If more info is needed I'm happy to contract directly and share information directly with microsoft (rather than on a public forum)\r\n\r\n### Expected Behavior\r\nThe executable is succesfully signed\r\n\r\n### Actual Behavior\r\nthis error is returned\r\n\r\nerror MSB3482: An error occurred while signing:\r\n SignTool.exe not found\r\n\r\n### Analysis\r\nOn an older server that is running our build pipeline, that has VS Build toos 2017 and 2019 installed this runs fine. it has older Windows Kits installed (that now seem to be unavailable)\r\n\r\n** Old server that work's list of SignTool.exe locations **\r\nC:\\Program Files\\Microsoft SDKs\\Windows\\v6.0A\\Bin\\signtool.exe\r\nC:\\Program Files (x86)\\Microsoft SDKs\\ClickOnce\\SignTool\\signtool.exe\r\nC:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\Bin\\signtool.exe\r\nC:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Bin\\signtool.exe\r\nC:\\Program Files (x86)\\Windows Kits\\8.0\\bin\\x64\\signtool.exe\r\nC:\\Program Files (x86)\\Windows Kits\\8.0\\bin\\x86\\signtool.exe\r\n\r\nI'm wondering if for some reason the task is looking in a 'old' location and maybe shouldn't be? \r\n\r\n### Versions & Configurations\r\nMSBuild Version: 17.1.0+ae57d105c for .NET Framework\r\n\r\nWindows Server 2019 \r\n\r\n-->\r\n",
  "state": "CLOSED",
  "createdAt": "2022-05-11T14:27:29Z",
  "updatedAt": "2022-05-19T10:17:54Z",
  "closedAt": "2022-05-19T10:17:54Z",
  "author": {
    "login": "dqwork"
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@sujitnayak can you take a look at this?",
        "createdAt": "2022-05-12T16:50:56Z",
        "updatedAt": "2022-05-12T16:50:56Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@rainersigwald  Did this PR make it to 17.1? \r\nhttps://github.com/dotnet/msbuild/pull/6463\r\n\r\n@dqwork Does this regkey exist?\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\ClickOnce\\SignTool and does the Path value point to a folder with signtool.exe?\r\n\r\nThanks.",
        "createdAt": "2022-05-12T17:27:50Z",
        "updatedAt": "2022-05-12T17:27:50Z",
        "author": {
          "login": "sujitnayak"
        }
      },
      {
        "body": "The PR was for a bug reported in VS17.1. I believe we patched 17.1 for this bug. I don't know if the customer has a patched VS17.1.",
        "createdAt": "2022-05-12T17:59:07Z",
        "updatedAt": "2022-05-12T17:59:07Z",
        "author": {
          "login": "sujitnayak"
        }
      },
      {
        "body": "@dqwork Please go to Help -> About Visual Studio in VS and paste the full Version info. Thanks. ",
        "createdAt": "2022-05-12T18:47:01Z",
        "updatedAt": "2022-05-12T18:47:01Z",
        "author": {
          "login": "sujitnayak"
        }
      },
      {
        "body": "@sujitnayak - Thanks for the quick repsonses.\r\n\r\nIt response to your first question. The reg Key does exist\r\n![image](https://user-images.githubusercontent.com/77854269/168260696-4e9f69ef-14bc-4910-98c0-6604e888e337.png)\r\nand the folder path does contain signtool.exe\r\n![image](https://user-images.githubusercontent.com/77854269/168260782-c6399372-a53c-4c89-a433-ce4829ab28e1.png)\r\n\r\n\r\nIn terms of getting the full version info - I'm not sure how to do that when we only have build tools installed - theres no UI for me to click 'Help'? In the Visual studio installer is says we have version 17.1.6 of Build tools installed\r\n",
        "createdAt": "2022-05-13T10:01:50Z",
        "updatedAt": "2022-05-13T10:01:50Z",
        "author": {
          "login": "dqwork"
        }
      },
      {
        "body": "I've also tried updating to 17.2.0 of VS Build tools and continue to have the same issue",
        "createdAt": "2022-05-13T17:31:00Z",
        "updatedAt": "2022-05-13T17:31:00Z",
        "author": {
          "login": "dqwork"
        }
      },
      {
        "body": "@dqwork  thanks for that info. Is it possible for you to install the corresponding VS SKU on this machine and try to see if a simple WinForms app can be signed and run on this machine? I am trying to figure out if this issue is isolated to the Build SKU\r\nThanks.",
        "createdAt": "2022-05-13T19:19:02Z",
        "updatedAt": "2022-05-13T19:19:02Z",
        "author": {
          "login": "sujitnayak"
        }
      },
      {
        "body": "Hi @sujitnayak - I installed Visual Studio (full IDE) with the desktop development workload and Clickonce publishing.\r\n\r\nFrom within Visual studio I created a simple winforms app and set the properties up to sign the clickonce manifest and published it to a local folder. This worked fine and when I attempted to install the manifest it was properly sign.\r\n\r\nOn the same machine I used MSBuild from the command line to try and assign the original file I wanted to sign. This still fails with the same error. \r\n\r\nTo summarize: Using Visual Studio 2022 to sign the manifest works fine. Using MSBuild (first installed from VS Build tools 2022) does not work and fails with SignTool.exe not found - even when Full visual studio is installed  ",
        "createdAt": "2022-05-16T10:05:59Z",
        "updatedAt": "2022-05-16T10:05:59Z",
        "author": {
          "login": "dqwork"
        }
      },
      {
        "body": "@dqwork Can you paste the command line you're using that is failing?\r\nthanks.",
        "createdAt": "2022-05-17T00:52:39Z",
        "updatedAt": "2022-05-17T00:52:39Z",
        "author": {
          "login": "sujitnayak"
        }
      },
      {
        "body": "Hi @sujitnayak,\r\n\r\nSo we are using our own MSBuild file that does a couple of things before calling SignFile task.\r\n\r\nIf you'd like to contact me directly via email I can share that file with you, but for now I'll give you a breakdown of what it does and how its calling the SignFile task.\r\n\r\nFirst it loads some MSBuild tasks from a nuget file, and uses one of those Targets to add a pfx file to the certificate store and that returns a thumb print. \r\n\r\nFinally it calls into SignFile like this\r\nwhere CertificateThumbprint is returned from the task to add the cert\r\nSignTargetPath and TimestampUrl are passed in by the caller \r\nTargetFrameworkVersion set to v4.0 to allow SHA1 certificates to support older clients.\r\n\r\n```\r\n<SignFile\r\n            CertificateThumbprint=\"$(CertificateThumbprint)\"\r\n            SigningTarget=\"$(SignTargetPath)\"\r\n            TargetFrameworkVersion=\"v4.0\"\r\n            TimestampUrl=\"$(TimestampUrl)\" />\r\n```\r\n\r\n",
        "createdAt": "2022-05-17T09:20:35Z",
        "updatedAt": "2022-05-17T09:20:35Z",
        "author": {
          "login": "dqwork"
        }
      },
      {
        "body": "Just to add some more information. It appears that something in our build pipeline is setting ToolsVersion=\"4.0\" - its only when this is set that is fails, when ToolsVersion=\"Current\", it has no issues.\r\n\r\n",
        "createdAt": "2022-05-17T15:26:43Z",
        "updatedAt": "2022-05-17T15:26:43Z",
        "author": {
          "login": "dqwork"
        }
      },
      {
        "body": "@sujitnayak  I've been playing around with our build pipeline and it looks like its doing something rather funky. it seems to be doing something that means when its running our custom task to install the cert and sign it, its ends up running MSBuild from here C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe - which may go someway to explaining whats happening. \r\n\r\nI'm going to discuss with the rest of our team to find out why this is, but I wanted to let you know before you spend anymore time investigating. I'll update with more info after I've spoken to them",
        "createdAt": "2022-05-17T16:47:44Z",
        "updatedAt": "2022-05-17T16:47:44Z",
        "author": {
          "login": "dqwork"
        }
      },
      {
        "body": "Thanks, if you task is invoking the SignFile task from the msbuild under C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319, it would explain the issue you're seeing. The fix we have made in in msbuild install inside of VS and VS Build Tools SKU.",
        "createdAt": "2022-05-17T17:59:54Z",
        "updatedAt": "2022-05-17T17:59:54Z",
        "author": {
          "login": "sujitnayak"
        }
      },
      {
        "body": "@sujitnayak  thanks again for taking time to help me out here. I've managed to narrow the issue and it was some odd steps in our build pipeline that were forcing it to use the old msbuild version. I've fixed that and its solved my issue",
        "createdAt": "2022-05-19T10:17:54Z",
        "updatedAt": "2022-05-19T10:17:54Z",
        "author": {
          "login": "dqwork"
        }
      }
    ]
  }
}