{
  "number": 2402,
  "title": "Large allocation via GetEnvironmentVariables",
  "body": "`GetEnvironmentVariables` allocates a lot via new `strings` and `GetEnvironmentCharArray` \r\n\r\ne.g. for a Rosyln restore:\r\n\r\n![](https://aoa.blob.core.windows.net/aspnet/getenv.png)\r\n\r\n![](https://aoa.blob.core.windows.net/aspnet/getenv2.png)\r\n\r\nCould these be cached rather than constantly looked up and reconstructed; with only deltas applied and removed?\r\n\r\n/cc @davkean ",
  "state": "CLOSED",
  "createdAt": "2017-08-07T03:24:03Z",
  "updatedAt": "2024-02-21T17:17:27Z",
  "closedAt": "2017-08-25T18:19:16Z",
  "author": {
    "login": "benaadams"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Unfortunately, I'm not sure how much better we can do here.\r\n\r\nSetting/removing environment variables is [done incrementally](https://github.com/Microsoft/msbuild/blob/27f37c5126cf99f8a86ade04cf48c1535e5e7a28/src/Shared/CommunicationsUtilities.cs#L292-L311), but it depends on knowing \"what is the current, real environment?\"\r\n\r\nThere's no MSBuild environment abstraction (and if there was, we couldn't enforce its use), so we can't know when user code has called `Environment.SetEnvironmentVariable` (or equivalent). I think that means we're forced to assume that the environment has changed without our knowledge, and thus check it any time we want to know the environment or enforce that the environment is what we want it to be (which we do every time a project yields or resumes in a process).",
        "createdAt": "2017-08-07T15:41:30Z",
        "updatedAt": "2017-08-07T15:41:30Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "One possibility: we could maintain a dirty bit for environment state, and set it whenever we're about to call a task, and any time we manipulate the environment in the engine. That could help with overhead, especially in the calling-to-get-cached-results case. But it'd require a fair amount of discipline; I'm not sure it'd be worth it.",
        "createdAt": "2017-08-07T18:19:29Z",
        "updatedAt": "2017-08-07T18:19:29Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Team Triage:\r\nDiscussed the solution that @rainersigwald proposed and given the limitations of the current assumptions and requirements we are closing this (by design). The complexity of doing this partially does not seem worth it. We can reopen if we think of something.",
        "createdAt": "2017-08-08T22:15:45Z",
        "updatedAt": "2017-08-08T22:15:45Z",
        "author": {
          "login": "AndyGerlicher"
        }
      },
      {
        "body": "This is 2% of all allocations in a design-time build: \r\n![image](https://user-images.githubusercontent.com/1103906/29346816-4c26a19a-828b-11e7-9fad-8a7b43e4078e.png)\r\n\r\nAre you sure there's not a better way here? Is there something from Windows that can tell us that the environment has changed? ",
        "createdAt": "2017-08-16T04:01:20Z",
        "updatedAt": "2017-08-16T04:01:20Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Overall GetEnvironmentVariables is 5.4%:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/29346878-c5ff3a40-828b-11e7-89d6-5c33c27daabe.png)\r\n",
        "createdAt": "2017-08-16T04:04:15Z",
        "updatedAt": "2017-08-16T04:04:15Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "I think we should reopen this - I can see that we can avoid half the allocations here by avoiding the char* -> char[] -> string transition and instead go from directly from char* -> string. MSBuild has copied the BCL's implementation so there's nothing that I can see blocking that.\r\n\r\nThis will remove the following:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/29348060-2b0f2e6a-8294-11e7-8c25-b71d17345a39.png)\r\n",
        "createdAt": "2017-08-16T05:04:18Z",
        "updatedAt": "2017-08-16T05:04:56Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Going to reopen this for consideration as I believe there is some possible reduction here.",
        "createdAt": "2017-08-17T06:27:48Z",
        "updatedAt": "2017-08-17T06:27:56Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Yup, that was totally workable . . .",
        "createdAt": "2017-08-21T22:19:09Z",
        "updatedAt": "2017-08-21T22:19:09Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}