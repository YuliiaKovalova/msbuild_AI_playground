{
  "number": 421,
  "title": "MSBuild.exe orders the build incorrectly when using a solution file.",
  "body": "Attached is a test case where MSBuild.exe executes the wrong build order when compiling a solution file with multiple projects.\n\n[TestMSBuildOrder.zip](https://github.com/Microsoft/msbuild/files/83103/TestMSBuildOrder.zip)\n\nRef: http://blogs.msdn.com/b/visualstudio/archive/2010/12/21/incorrect-solution-build-ordering-when-using-msbuild-exe.aspx\n\nFor this test case, I am using the latest MSBuild.exe cloned from the GIT repository and a clean install of Visual Studio 2015 Community Edition.\n\nThe attached solution file has three projects in it.\n\n1) Project ClassA has a normal project-level reference to Project ClassB.\n\n2) Project ClassB has a pre-build event which requires Project ConsoleC to be built first.  It currently has a solution-level project dependency on Project ConsoleC.\n\n3) Project ConsoleC is a stand-alone command line project.\n\nWhen compiled using Visual Studio, this solution can be Clean / Build or Rebuild with no errors.  Visual Studio sees the build order as:  ConsoleC , ClassB , ClassA\n\n(Before launching the next step, adjust the file \"Build.bat\" to point to the most recent MSBuild.exe on your system.)\n\nWhen compiling with the attached batch file \"Build.bat\", MSBuild.exe will always compile the projects in the wrong order (ClassB, ClassA, ConsoleC).  This is true whether Project ClassB has a solution-level dependency (as now) or a direct project reference to Project ConsoleC.  In neither case will MSBuild.exe create Project ConsoleC first.\n\nI have found no solution to this problem which does not involve building the projects separately.\n\nMuch Thanks,\nChris Capon\nRobust Technologies Inc. \n",
  "state": "OPEN",
  "createdAt": "2016-01-08T18:33:17Z",
  "updatedAt": "2024-02-21T16:38:49Z",
  "closedAt": null,
  "author": {
    "login": "cccapon"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I have the same problem. My Project is a WebApp that needs a Console application, to be build first.\n\nRegards\nKai Wesling\nneusta sd\n",
        "createdAt": "2016-05-30T15:30:29Z",
        "updatedAt": "2016-05-30T15:30:29Z",
        "author": {
          "login": "neustakwesling"
        }
      },
      {
        "body": "Hello cccapon,\nyou have to remove the Project Dependency to C for Project B within the solution file.\nPlease re-add it via Project reference, clean your entire solution from VS, purge existing obj folders from A,B and C projects and try again\n",
        "createdAt": "2016-10-25T19:41:11Z",
        "updatedAt": "2016-10-25T19:41:11Z",
        "author": {
          "login": "neobepmat"
        }
      },
      {
        "body": "Thanks, Neobepmat.\nIt is nice to know the workaround you suggest.  While your solution may address the immediate problem, it does force an unnecessary reference in Project-B.\nProject-B, in this case, does not need to include any members of Project-C, it just needs to run Project-C before compiling.  (An example might be if Project-C were a pre-processor for some of Project-B's source code).\n\nBut the real purpose of the report was to show a situation where MSBuild and Visual Studio produce different results.  In this case, Visual Studio respects the solution level project dependency where MSBuild does not.\nCheers, and thanks.\n",
        "createdAt": "2016-10-26T01:24:21Z",
        "updatedAt": "2016-10-26T01:24:21Z",
        "author": {
          "login": "cccapon"
        }
      },
      {
        "body": "Hello cccapon,\nin case you only need to reference another project to specify a build order you can manually edit your project file adding these lines inside an <ItemGroup>:\n\n<ProjectReference Include=\u201d\u2026 foo.csproj\u201d> \n    <ReferenceOutputAssembly>false</ReferenceOutputAssembly> \n</ProjectReference>\n\nMaybe you already know this link but I prefer to suggest it  to you.\nHere you can find all the related information\nhttps://blogs.msdn.microsoft.com/visualstudio/2010/12/21/incorrect-solution-build-ordering-when-using-msbuild-exe/\n\nHave a nice day\nNeobep\n",
        "createdAt": "2016-10-26T07:48:39Z",
        "updatedAt": "2016-10-26T07:48:39Z",
        "author": {
          "login": "neobepmat"
        }
      }
    ]
  }
}