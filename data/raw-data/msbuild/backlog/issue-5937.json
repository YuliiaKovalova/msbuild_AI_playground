{
  "number": 5937,
  "title": "Evaluation order of ItemGroup Batching suddenly changed in 16.8",
  "body": "### Issue Description\r\nAfter installing .NET 5 on our build servers, we noticed that the evaluation order of ItemGroup batching changed, making it a breaking change.\r\nThe .NET 5 installer replaced MSBuild 16.X with 16.8.\r\nWe were able to create a minimalistic repro scenario.\r\n\r\nThis also happens if a developer updates visual studio 2019 with the installer to the newest version.\r\n\r\n### Steps to Reproduce\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n    <ItemGroup>\r\n        <ArchiveBase Include=\"CanBeIgnored1\">\r\n            <Archive>A</Archive>\r\n        </ArchiveBase>\r\n        <ArchiveBase Include=\"CanBeIgnored2\">\r\n            <Archive>B</Archive>\r\n        </ArchiveBase>\r\n        \r\n        <Installer Include=\"CanBeIgnored1\">\r\n            <Archive>B</Archive>\r\n        </Installer>\r\n    </ItemGroup>\r\n\r\n    <Target Name=\"Build\">\r\n        <LogIt\r\n            CreateArchiveName=\"%(Archive)\"\r\n            BaseArchives=\"@(ArchiveBase->'%(Identity)')\"\r\n            Installer=\"@(Installer->'%(Identity)')\" />\r\n    </Target>\r\n\r\n    <UsingTask TaskName=\"LogIt\" TaskFactory=\"CodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.v4.0.dll\" >\r\n        <ParameterGroup>\r\n            <CreateArchiveName Required=\"true\" ParameterType=\"System.String\"/>\r\n            <BaseArchives Required=\"true\" ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\"/>\r\n            <Installer Required=\"true\" ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\"/>\r\n        </ParameterGroup>\r\n        <Task>\r\n            <Code Type=\"Fragment\" Language=\"cs\">\r\n            <![CDATA[\r\n                System.Console.WriteLine(\"CreateArchiveName: \" + CreateArchiveName);\r\n                return true;\r\n            ]]>\r\n            </Code>\r\n        </Task>\r\n    </UsingTask>\r\n</Project>\r\n```\r\n\r\n### Expected Behavior\r\n```\r\nCreateArchiveName: A\r\nCreateArchiveName: B\r\n```\r\nThis is also the behavior of MSBuild 16.7 and below.\r\n\r\n\r\n### Actual Behavior\r\n```\r\nCreateArchiveName: B\r\nCreateArchiveName: A\r\n```\r\n\r\n### Analysis\r\nIn 16.7 and below the batching order seems to be defined by the order of the attributes of `LogIt` in the XML. (the first one defines the order)\r\nIn 16.8 the batching order seems to be defined by the names of the attributes of `LogIt` in the XML alphabetically. (the last one defines the order)\r\n\r\n### Versions & Configurations\r\nMicrosoft (R)-Build-Engine, Version 16.8.2+25e4d540b\r\n\r\n### Attach a binlog\r\n",
  "state": "OPEN",
  "createdAt": "2020-12-07T10:32:55Z",
  "updatedAt": "2024-01-31T08:22:28Z",
  "closedAt": null,
  "author": {
    "login": "acuntex"
  },
  "labels": [
    "bug",
    "has-repro",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "v-zhiyul"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Hi acuntex, for further investigation, could you provide a minimal project to reproduce this issue? Or detailed steps to manually reproduce this ourselves? Thanks!",
        "createdAt": "2021-08-30T07:25:43Z",
        "updatedAt": "2021-08-30T07:25:43Z",
        "author": {
          "login": "v-zhiyul"
        }
      },
      {
        "body": "> Hi acuntex, for further investigation, could you provide a minimal project to reproduce this issue? Or detailed steps to manually reproduce this ourselves? Thanks!\r\n\r\n@v-zhiyul Everything is in the description to reproduce it. ",
        "createdAt": "2021-08-30T07:49:36Z",
        "updatedAt": "2021-08-30T08:03:59Z",
        "author": {
          "login": "Scordo"
        }
      },
      {
        "body": "@v-zhiyul Testet with VS 2017 developer Command prompt and VS 2022 Preview 2 side by side:\r\n\r\n![image](https://user-images.githubusercontent.com/2535846/131306250-8dc02fc2-4340-46ff-ba99-82c195e6039f.png)\r\n",
        "createdAt": "2021-08-30T08:00:18Z",
        "updatedAt": "2021-08-30T08:04:10Z",
        "author": {
          "login": "Scordo"
        }
      },
      {
        "body": "Hi @Scordo thank you for sharing! We can reproduce this issue and contact our engineer in time. Thanks!",
        "createdAt": "2021-08-30T08:47:37Z",
        "updatedAt": "2021-08-30T08:47:37Z",
        "author": {
          "login": "v-zhiyul"
        }
      },
      {
        "body": "@BenVillalobos We verified this issue on VS16.7 and VS16.8. Could you help to take a look?\r\n![Compare](https://user-images.githubusercontent.com/50071077/131313394-36fb9005-d3e4-445e-a4c0-cbac2016ccd1.png)\r\n\r\n",
        "createdAt": "2021-08-30T08:55:31Z",
        "updatedAt": "2021-08-30T08:55:31Z",
        "author": {
          "login": "v-zhiyul"
        }
      },
      {
        "body": "Oh boy, testing this with a similar repro project and `dotnet build` I'm seeing:\r\n\r\n```\r\nC:\\src\\temp\\8-30\\evaluation\\NEW>dotnet build proj\\proj.csproj \r\nMicrosoft (R) Build Engine version 16.11.0+0538acc04 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nCreateArchiveName: B\r\nCreateArchiveName: A\r\n```\r\n\r\nAND\r\n\r\n```\r\nC:\\src\\temp\\8-30\\evaluation\\NEW>dotnet build proj\\proj.csproj \r\nMicrosoft (R) Build Engine version 16.11.0+0538acc04 for .NET\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nCreateArchiveName: A\r\nCreateArchiveName: B\r\n```\r\n\r\n\r\n@acuntex do you see similar inconsistent behavior like I am?",
        "createdAt": "2021-08-31T00:04:40Z",
        "updatedAt": "2021-08-31T00:04:56Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "@BenVillalobos Acuntex is my fellow and we did not have random results. This construct was used to start an external program multiple times and the order did matter. Thats why we detected a change of logic in 16.8. Because the build suddenly failed. We changed the logic because we couldn't wait for you to fix it. :-) We only tried to give you the smallest solution to reproduce the problem and stopped examine the issue. I've ran the script 100 times in 17.0.0-preview-21329-01+1b7661f36 and 16.10.2+857e5a733 and the result is always: B A\r\n",
        "createdAt": "2021-08-31T04:58:14Z",
        "updatedAt": "2021-08-31T04:58:14Z",
        "author": {
          "login": "Scordo"
        }
      },
      {
        "body": "@BenVillalobos I see you're using \"dotnet build\" instead of \"msbuild\". It should not make a difference but maybe it does?",
        "createdAt": "2021-08-31T05:01:07Z",
        "updatedAt": "2021-08-31T05:01:07Z",
        "author": {
          "login": "Scordo"
        }
      },
      {
        "body": "Ok, it's random when using \"dotnet build\" or \"dotnet msbuild\":\r\n\r\n![image](https://user-images.githubusercontent.com/2535846/131445162-09c5f826-31ad-4862-bae8-4deeabdd7d86.png)\r\n![image](https://user-images.githubusercontent.com/2535846/131447679-fc36c7c7-4107-4e64-8acf-a8d52eaab809.png)\r\n\r\nCode:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n    <ItemGroup>\r\n        <ArchiveBase Include=\"CanBeIgnored1\">\r\n            <Archive>A</Archive>\r\n        </ArchiveBase>\r\n        <ArchiveBase Include=\"CanBeIgnored2\">\r\n            <Archive>B</Archive>\r\n        </ArchiveBase>\r\n        \r\n        <Installer Include=\"CanBeIgnored1\">\r\n            <Archive>B</Archive>\r\n        </Installer>\r\n    </ItemGroup>\r\n\r\n    <Target Name=\"Build\">\r\n        <LogIt\r\n            CreateArchiveName=\"%(Archive)\"\r\n            BaseArchives=\"@(ArchiveBase->'%(Identity)')\"\r\n            Installer=\"@(Installer->'%(Identity)')\" />\r\n    </Target>\r\n\r\n    <UsingTask TaskName=\"LogIt\" TaskFactory=\"RoslynCodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\r\n        <ParameterGroup>\r\n            <CreateArchiveName Required=\"true\" ParameterType=\"System.String\"/>\r\n            <BaseArchives Required=\"true\" ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\"/>\r\n            <Installer Required=\"true\" ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\"/>\r\n        </ParameterGroup>\r\n        <Task>\r\n            <Code Type=\"Fragment\" Language=\"cs\">\r\n            <![CDATA[\r\n                System.Console.WriteLine(\"CreateArchiveName: \" + CreateArchiveName);\r\n            ]]>\r\n            </Code>\r\n        </Task>\r\n    </UsingTask>\r\n</Project>\r\n```",
        "createdAt": "2021-08-31T05:07:34Z",
        "updatedAt": "2021-08-31T05:34:31Z",
        "author": {
          "login": "Scordo"
        }
      },
      {
        "body": "@BenVillalobos @rainersigwald  What is the plan to fix this?\r\n\r\nJust hit MSB5029! because of this bug!!!  Super dangerous bug.",
        "createdAt": "2023-03-09T15:41:22Z",
        "updatedAt": "2023-03-09T15:41:22Z",
        "author": {
          "login": "jzabroski"
        }
      }
    ]
  }
}