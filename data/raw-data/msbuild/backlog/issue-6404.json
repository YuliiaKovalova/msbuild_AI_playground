{
  "number": 6404,
  "title": "MSBuild 16.9.0+5e4b48a27 seems unstable/spuriously dies/ TypeLoadException",
  "body": "### Issue Description\r\nWhen running an MSBuild task (most likely Build as a pre-target to another target), MSBuild dies.\r\n\r\n### Steps to Reproduce\r\nRun MSBuild either from within latest VS2019 or from command line:\r\n\r\nHere is a powershell program:\r\n\r\n```powershell\r\n$target = \"build\"\r\n& \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\MsBuild.exe\" build.targets /v:minimal /m /t:$target\r\n```\r\n\r\n\r\n\r\n### Expected Behavior\r\nBuild program successfully.\r\n\r\n### Actual Behavior\r\nWhen running MSBuild.exe, I get the following error:\r\n\r\n```\r\nApplication: MSBuild.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.TypeLoadException\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(System.String)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main()\r\n```\r\n\r\n### Analysis\r\nMSBuild seems to be trying to load some type, and fails.  It would be helpful if MSBuild would specifically catch TypeLoadException in places it dynamically loads types.\r\n\r\n### Versions & Configurations\r\nMSBuild 16.9.0+5e4b48a27\r\nVisual Studio 2019 16.9.4\r\n.NET Framework 4.8.03761\r\nOS: Microsoft Windows Server 2016 Datacenter 10.0.14393 w/ 14393 hotfix (retrieved from `get-ComputerInfo`)\r\n\r\n### Attach a binlog\r\nI have downloaded the Project System Tools extension and should be able to capture a binlog the next time msbuild crashes.\r\n\r\nhttps://docs.microsoft.com/en-us/visualstudio/ide/msbuild-logs?view=vs-2019#create-a-binary-msbuild-log-by-using-the-project-system-tools-extension",
  "state": "CLOSED",
  "createdAt": "2021-05-03T16:39:54Z",
  "updatedAt": "2024-02-21T14:13:38Z",
  "closedAt": "2021-05-20T17:47:23Z",
  "author": {
    "login": "jzabroski"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Hmm... I am experiencing a lot of quality issues with VS 2019 16.9.4 . My Resharper test runner component just died.\r\n\r\nI have generally not had MSBuild or Resharper quality issues since Visual Studio 2017 beta releases.",
        "createdAt": "2021-05-05T13:16:19Z",
        "updatedAt": "2021-05-05T13:16:19Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "See also: https://github.com/microsoft/MSBuildLocator/issues/126",
        "createdAt": "2021-05-05T14:09:26Z",
        "updatedAt": "2021-05-05T14:09:26Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "Team Triage: is that the full output of running msbuild.exe? There is no dynamic loading in that code path. Have you tried running repair on your vs install?\r\n\r\nhttps://docs.microsoft.com/visualstudio/install/repair-visual-studio?view=vs-2019",
        "createdAt": "2021-05-05T15:30:29Z",
        "updatedAt": "2021-05-05T15:32:05Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Yes, that is the full output.\r\n\r\nI have not tried running repair - but what problem would that solve given Event Viewer dumps the associated stack trace?  It's not like this stack trace was just magically created.\r\n\r\nI also see 16.9.5 is now available, and was going to upgrade to that.  It's also worth noting I have team members with the same problem...",
        "createdAt": "2021-05-05T15:33:15Z",
        "updatedAt": "2021-05-05T15:34:18Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "Team Triage: Is there any additional output if you remove `/v:minimal`? Can you download & run https://github.com/dotnet/msbuild/blob/main/scripts/EnumerateMSBuild.ps1 and send the output?",
        "createdAt": "2021-05-05T15:35:35Z",
        "updatedAt": "2021-05-05T15:35:35Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Hmm... that is odd.. the @VisualStudio twitter account [mentions 16.9.5 is available](https://twitter.com/VisualStudio/status/1387198627626504199) but when I \"Check for updates\", 16.9.4 is all I see and my Visual Studio is pronounced up to date.\r\n\r\n![image](https://user-images.githubusercontent.com/447485/117168305-06759180-ad96-11eb-9243-4a7f55ddb72a.png)\r\n",
        "createdAt": "2021-05-05T15:35:51Z",
        "updatedAt": "2021-05-05T15:36:48Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "> Team Triage: Is there any additional output if you remove `/v:minimal`?\r\n\r\nI removed this - didn't even see that. Ha - apologies.  May take a few runs before I can reproduce the issue, as it doesn't happen on every run.  Seems to mostly happen when the project is modified.\r\n\r\n\r\n\r\n> Can you download & run https://github.com/dotnet/msbuild/blob/main/scripts/EnumerateMSBuild.ps1 and send the output?\r\n\r\nI got an error running that script:\r\n\r\n```powershell\r\nPS D:\\Users\\John.Zabroski\\source> .\\EnumerateMSBuild.ps1\r\nUsing vswhere from C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe\r\nFound VS Instance: VisualStudio/16.9.4+31205.134\r\nGet-ChildItem: D:\\Users\\John.Zabroski\\source\\EnumerateMSBuild.ps1:38\r\nLine |\r\n  38 |      ls -File -Recurse -Include ('*.dll', '*.exe') -Path \"$instancePat \u2026\r\n     |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Cannot find path 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\15.0\\Bin'\r\n     | because it does not exist.\r\n\r\n\r\nLooking for legacy MSBuild versions: C:\\Program Files (x86)\\MSBuild\\\r\n\r\nLooking for MSBuild in the GAC: C:\\Windows\\Microsoft.NET\\assembly\r\n\r\nLooking for MSBuild in the GAC: C:\\Windows\\assembly\r\n\r\nOutput saved to D:\\Users\\John.Zabroski\\source\\msbuild_versions.txt\r\n```\r\nAttached is the generated file.\r\n[msbuild_versions.txt](https://github.com/dotnet/msbuild/files/6428365/msbuild_versions.txt)\r\n",
        "createdAt": "2021-05-05T15:41:57Z",
        "updatedAt": "2021-05-05T15:41:57Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "I'm not sure if this is related, but, got this today (again, mysteriously not reproducible):\r\n\r\n```\r\nMicrosoft (R) Build Engine version 16.9.0+5e4b48a27 for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.BadImageFormatException: Bad binary signature. (Exception from HRESULT: 0x80131192)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, TextWriter targetsWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler, Boolean interactive, Boolean isolateProjects, Boolean graphBuild, Boolean lowPriority, String[] inputResultsCaches, String outputResultsCache)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String commandLine)\r\n\r\nUnhandled Exception: System.BadImageFormatException: Bad binary signature. (Exception from HRESULT: 0x80131192)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Boolean needToValidateProject, String schemaFile, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, TextWriter targetsWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler, Boolean interactive, Boolean isolateProjects, Boolean graphBuild, Boolean lowPriority, String[] inputResultsCaches, String outputResultsCache)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(String commandLine)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main()\r\n```",
        "createdAt": "2021-05-12T14:08:26Z",
        "updatedAt": "2021-05-12T14:09:49Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "Repro'd on Visual Studio 16.9.5.  MSBuild.exe didnt appear to have a version change.\r\n\r\n```\r\nFaulting application name: MSBuild.exe, version: 16.9.0.16703, time stamp: 0xda545832\r\nFaulting module name: KERNELBASE.dll, version: 10.0.14393.4350, time stamp: 0x606eb12a\r\nException code: 0xe0434352\r\nFault offset: 0x000dc602\r\nFaulting process id: 0x445c\r\nFaulting application start time: 0x01d74789d81db307\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\MSBuild.exe\r\nFaulting module path: C:\\Windows\\System32\\KERNELBASE.dll\r\nReport Id: 81a79060-e2fd-4c90-9370-33119f8d830c\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```",
        "createdAt": "2021-05-12T23:56:00Z",
        "updatedAt": "2021-05-12T23:56:49Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "> Unhandled Exception: System.BadImageFormatException: Bad binary signature. (Exception from HRESULT: 0x80131192)\r\n\r\nDid you run VS repair? Updating may not have changed your msbuild binaries.",
        "createdAt": "2021-05-19T15:50:46Z",
        "updatedAt": "2021-05-19T15:50:46Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Hi Ben,\n\nI didn't. I thought upgrading was sufficient but see that repair is likely necessary and sufficient to troubleshoot further. \n\nI have not had this issue since last repro. ",
        "createdAt": "2021-05-19T21:03:47Z",
        "updatedAt": "2021-05-19T21:03:47Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "Glad it's no longer an issue! \ud83c\udf89\r\n\r\nFeel free to reopen if you see this again.",
        "createdAt": "2021-05-20T17:47:23Z",
        "updatedAt": "2021-05-20T17:47:23Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Issue happened again.  This time it happened when I took latest from version control.  It seems as if there was a passive MSBuild.exe hanging around.\r\n\r\n@BenVillalobos  Re-open button isn't available - I can only comment.\r\n\r\n```\r\nApplication: MSBuild.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.TypeLoadException\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Execute(System.String)\r\n   at Microsoft.Build.CommandLine.MSBuildApp.Main()\r\n```\r\n```\r\nFaulting application name: MSBuild.exe, version: 16.9.0.16703, time stamp: 0xda545832\r\nFaulting module name: KERNELBASE.dll, version: 10.0.14393.4350, time stamp: 0x606eb12a\r\nException code: 0xe0434352\r\nFault offset: 0x000dc602\r\nFaulting process id: 0x70c\r\nFaulting application start time: 0x01d76db5d660d64d\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\MSBuild.exe\r\nFaulting module path: C:\\Windows\\System32\\KERNELBASE.dll\r\nReport Id: bf0dcd00-ca0d-42a9-80fb-68349b2e777a\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n",
        "createdAt": "2021-06-30T13:46:15Z",
        "updatedAt": "2021-06-30T13:46:15Z",
        "author": {
          "login": "jzabroski"
        }
      }
    ]
  }
}