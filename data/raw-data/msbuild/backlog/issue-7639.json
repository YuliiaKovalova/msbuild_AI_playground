{
  "number": 7639,
  "title": "Memory Leak with MSBuild Server",
  "body": "Observations:\r\nWe [create a BuildManager](https://github.com/dotnet/msbuild/blob/ac305ec92b09385c3e1f656ba47b8389468b4299/src/MSBuild/XMake.cs#L1165) for each build and [dispose of it](https://github.com/dotnet/msbuild/blob/ac305ec92b09385c3e1f656ba47b8389468b4299/src/MSBuild/XMake.cs#L1297) at the end.\r\nYet despite this attempt at disposing of it, we still end up with one BM per build.\r\n\r\nI tried to reuse just the node manager and component factories from the prior build when creating the new BuildManager. (This is a little tricky since it still tries to dispose of it, which can lead to partially-disposed state.) With my changes, it seems to be hanging [here](https://github.com/dotnet/msbuild/blob/ac305ec92b09385c3e1f656ba47b8389468b4299/src/Build/BackEnd/BuildManager/BuildSubmission.cs#L129).\r\n\r\nAs far as why none of this is being GC'd, @AR-May and I noticed that there's one thread that keeps running for each build. The most obvious candidate is _inProcNodeThread. We [start a new thread](https://github.com/dotnet/msbuild/blob/ac305ec92b09385c3e1f656ba47b8389468b4299/src/Build/BackEnd/Components/Communications/NodeProviderInProc.cs#L371) every time we instantiate the node provider, and that thread [runs until the process dies](https://github.com/dotnet/msbuild/blob/ac305ec92b09385c3e1f656ba47b8389468b4299/src/Build/BackEnd/Node/InProcNode.cs#L133). I tried sending it a NodeBuildComplete packet, and I verified that it had received it, but I still saw the leak. I didn't check whether the extra threads were gone.",
  "state": "CLOSED",
  "createdAt": "2022-05-19T19:38:11Z",
  "updatedAt": "2024-02-21T14:08:43Z",
  "closedAt": "2022-06-02T15:03:40Z",
  "author": {
    "login": "Forgind"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "rokonec"
      }
    ]
  },
  "milestone": {
    "title": "VS 17.3"
  },
  "comments": {
    "nodes": []
  }
}