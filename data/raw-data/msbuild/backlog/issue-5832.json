{
  "number": 5832,
  "title": "Allow NuGet MSBuild SDK import in solution metaproj",
  "body": "## Background\r\n\r\nSince 15.0, NuGet restore has been integrated into MSBuild. The way it works is that NuGet.targets is imported by default, which defined the `Restore` target. There's more to it than that, but that's all that's relevant for this request. This happens not only for projects, but also the solution metaproj, allowing restore to run on the solution, not just on projects individually.\r\n\r\n## Use case\r\n\r\nNuGet would like the ability to ship experimental features out-of-band and iterate more quickly than waiting for VS/.NET SDK shipping cycles. We can do this today for individual project restores using a MSBuild SDK, that causes NuGet.targets to be loaded from the package instead of from MSBuild's default location. I'm looking for a solution for solution restore.\r\n\r\n## Feature request/repro\r\n\r\nI'd like to be able to have a `Directory.Solution.props` or `Directory.Solution.targets` with `<Sdk Name=\"NuGet.Experimental.Feature.Sdk\" Version=\"0.0.1\" />`, so that a `dotnet restore my.sln` will load the props/targets from my package in the solution metaproj.\r\n\r\n## Actual\r\n\r\nIf I try this today, the `<Sdk` element seems to be silently ignored. It doesn't import anything, but also no error.\r\n\r\n",
  "state": "OPEN",
  "createdAt": "2020-10-23T21:03:59Z",
  "updatedAt": "2024-02-21T16:28:55Z",
  "closedAt": null,
  "author": {
    "login": "zivkan"
  },
  "labels": [
    "Area: Solution (.sln)",
    "Partner request",
    "For consideration",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}