{
  "number": 10946,
  "title": "Define + implement initial metric to collect",
  "body": "### Motivation\n\nFor our initial investigation of exposing and collecting data in VS we need some meaningfull data, that are available in the main node, not expensive not complicate to obtain and not of a high volume or size.\n\n### Proposal\n * build request duration \n * maybe type? - full/incremental\n * some flags around SAC/CI/AVs\n\n### Goal\nMetrics defined and exposed in MSBuild",
  "state": "CLOSED",
  "createdAt": "2024-11-07T16:12:56Z",
  "updatedAt": "2025-02-20T15:51:51Z",
  "closedAt": "2025-02-20T15:51:51Z",
  "author": {
    "login": "JanKrivanek"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "labels": [
    "Priority:1",
    "triaged",
    "Area: Telemetry"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Is this intended only for sending telemetry to Microsoft, or would another company be able to set up its own OpenTelemetry collector and configure MSBuild to send the telemetry there?",
        "createdAt": "2024-11-07T16:21:52Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Current thinking is to instrument with pure OTel and sensibly initialize our collector, without preventing other collector.\n\nWe need to experiment to see downs/ups. We might possibly end up with internal proprietary data collection within msbuild (would distributed tracing prove as perf hit as compared to our current telemetry BuildEventArgs and logger), translated to OTel metrics in the main node. So still collectable by 3rd pties, but possibly some context data might not have exact fidelity.",
        "createdAt": "2024-11-07T16:37:57Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "When MSBuild replays a binlog, will it publish the original timestamps and durations as telemetry, or generate new ones from the system clock?",
        "createdAt": "2024-11-07T17:07:34Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "> When MSBuild replays a binlog, will it publish the original timestamps and durations as telemetry, or generate new ones from the system clock?\n\nThis is a great question - though this is currently not a core scenario that we'd need to figure now.\nSynthetizing might be nice, but can skew data when not deduplicated in backend. We might possibly skip emiting alltogether.\n\n\nBtw. the TelemetryEventArgs are not part of the binlog (nor are they raised via `IEventSource.AnyEvent`) - they only go to the dedicated handler (and only during live run).",
        "createdAt": "2024-11-08T09:18:15Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "please include it in the initial set\nhttps://github.com/dotnet/msbuild/issues/11075",
        "createdAt": "2024-12-03T16:24:59Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "Prototype of querying AV: https://github.com/dotnet/msbuild/compare/main...proto/get-av\nBit complicated due to need to use WMI",
        "createdAt": "2024-12-19T18:35:43Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Tasks/Targets data collecting proto: https://github.com/dotnet/msbuild/pull/11257",
        "createdAt": "2025-01-10T17:47:13Z",
        "author": {
          "login": "JanKrivanek"
        }
      }
    ]
  }
}