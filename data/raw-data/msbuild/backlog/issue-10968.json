{
  "number": 10968,
  "title": "GenerateMSBuildEditorConfig task breaks incremental build on Windows when using different casing paths",
  "body": "**Version Used**: 17.10.4+10fbfbf2e\n\n**Steps to Reproduce**:\n\n1. Have a dummy under X\\x.csproj (sdk)\n2. Build from some y\\dirs.proj with ProjectReference=\"..\\X\\x.csproj\" -> full build\n3. Build from another z\\dirs.proj with ProjectReference=..\\x\\x.csproj\" -> will trigger full build because path is invoked with lower case \"x\\\"\n\n**Diagnostic Id**:\nUsing \"GenerateMSBuildEditorConfig\" task from assembly \"Current\\bin\\Roslyn\\Microsoft.Build.Tasks.CodeAnalysis.dll\"\n\nInput file \"x\\obj\\amd64\\LegacyUri.UnitTests.Core.GeneratedMSBuildEditorConfig.editorconfig\" is newer than output file\n\n**Expected Behavior**:\nNo recompilton CoreCompile should happen on Windows because the paths are identical, just casing is different.\n",
  "state": "OPEN",
  "createdAt": "2024-11-08T20:46:39Z",
  "updatedAt": "2025-06-02T08:36:35Z",
  "closedAt": null,
  "author": {
    "login": "vaboca"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "untriaged",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Tagging @rainersigwald ",
        "createdAt": "2024-11-08T20:49:24Z",
        "author": {
          "login": "vaboca"
        }
      },
      {
        "body": "> No recompilton CoreCompile should happen on Windows because the paths are identical, just casing is different.\n\nPath case sensitivity is not strictly tied to operating systems. It is possible to have case sensitive paths on Windows. It is also possible to have paths where parts are case sensitive, and parts are case insensitive on Linux. At a tooling level we have to assume the worst case which is paths are case sensitive and act accordingly. This can lead to situations where we overbuild but won't lead to incorrect builds. \n\nFor this particular case I believe we should consider a build check flag in MSBuild. Essentially a check that fires when a path in `Include` for a value in `ItemGroup` differs from the normalized path on disk. That should alert the developer to correct this mistake. ",
        "createdAt": "2024-11-11T16:24:45Z",
        "author": {
          "login": "jaredpar"
        }
      }
    ]
  }
}