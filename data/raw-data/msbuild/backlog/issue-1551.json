{
  "number": 1551,
  "title": "How to build .NET Core project with locally built xplat msbuild?",
  "body": "After building locally the `xplat` branch (on the Win10 Linux subsystem), I'm trying to build a .NET Core project with the following:\r\n```\r\n../msbuild/Tools/dotnetcli/dotnet ../msbuild/bin/Bootstrap-NetCore/MSBuild.dll ./My.sln\r\n```\r\n\r\nThe build fails with the following issue:\r\n```\r\n\"/mnt/c/dev/temp/hwapp/My.sln\" (default target) (1) ->\r\n\"/mnt/c/dev/temp/hwapp/My.csproj\" (default target) (2) ->\r\n(RunResolvePackageDependencies target) ->\r\n  /mnt/c/dev/temp/msbuild/bin/Bootstrap-NetCore/Sdks/Microsoft.NET.Sdk/build/Microsoft.PackageDependencyResolution.targets(140,5): error MSB4062: The \"Microsoft.NET.Build.Tasks.ResolvePackageDependencies\" task could not be loaded from the assembly /mnt/c/dev/temp/msbuild/bin/Bootstrap-NetCore/Sdks/Microsoft.NET.Sdk/build/../tools/netcoreapp1.0/Microsoft.NET.Build.Tasks.dll. Could not load file or assembly 'NuGet.ProjectModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621) Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [/mnt/c/dev/temp/hwapp/My.csproj]\r\n```\r\n\r\n**How should I get the Sdks?**\r\n\r\nThe build is working in VS2017, so I though copying the Sdks folder from `c:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\` would solve the issue. It turned out that the `15.0` folder is also required, so I copied that too.\r\n\r\nHaving copied both folders results in the following error:\r\n```\r\n\"/mnt/c/dev/temp/hwapp/My.sln\" (default target) (1) ->\r\n\"/mnt/c/dev/temp/hwapp/My.csproj\" (default target) (2) ->\r\n(GenerateBuildDependencyFile target) ->\r\n  /mnt/c/dev/temp/msbuild/bin/Bootstrap-NetCore/Sdks/Microsoft.NET.Sdk/build/Microsoft.NET.Sdk.targets(82,5): error MSB4062: The \"GenerateDepsFile\" task could not be loaded from the assembly /mnt/c/dev/temp/msbuild/bin/Bootstrap-NetCore/Sdks/Microsoft.NET.Sdk/build/../tools/netcoreapp1.0/Microsoft.NET.Build.Tasks.dll. Could not load file or assembly 'NuGet.ProjectModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621) Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [/mnt/c/dev/temp/hwapp/My.csproj]\r\n```\r\n\r\n**Can you tell what I am missing?** ",
  "state": "CLOSED",
  "createdAt": "2017-01-12T14:43:10Z",
  "updatedAt": "2024-02-21T17:22:53Z",
  "closedAt": "2017-01-13T07:32:18Z",
  "author": {
    "login": "ghost"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "This is quite difficult, unfortunately. We should try to figure out a better experience.\r\n\r\nThe SDK is built from its own repo https://github.com/dotnet/sdk, and we don't currently use it to build ourselves.\r\n\r\n\ud83d\udcdd Don't follow the MSBuild repo's example. We plan to overhaul our own build to use the Sdk and avoid special cases soon. We are this way because the Sdk didn't exist when we started.\r\n\r\nMSBuild + the Sdk are assembled together for the dotnet CLI and for Visual Studio. The process is fairly complicated in both cases.\r\n\r\nWhat I would recommend if you want to use the very latest MSBuild is to unzip a recent CLI and overwrite its copies of the MSBuild binaries with your just-built ones. That way, the Sdk and other support files are all as things expect them.",
        "createdAt": "2017-01-12T15:09:25Z",
        "updatedAt": "2017-01-12T15:09:25Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}