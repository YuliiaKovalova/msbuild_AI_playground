{
  "number": 3793,
  "title": "Handle sln files in the ProjectGraph",
  "body": "Need to be able to take sln files as input.\r\n\r\nSome open questions:\r\n* Is the sln just converted to a metaproj?\r\n* Does the sln have its own node?",
  "state": "OPEN",
  "createdAt": "2018-09-26T15:40:50Z",
  "updatedAt": "2024-02-21T16:32:50Z",
  "closedAt": null,
  "author": {
    "login": "dfederm"
  },
  "labels": [
    "Area: Static Graph",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "My educated guess is:\r\n\r\n* Use the metaproject\r\n* Yes, create a node for the metaproj\r\n* After loading the metaproject, just use the existing `ProjectReference` magic. It _may_ require some tweaking since the `<MSBuild` call in the metaproj differs from the one in common.targets.",
        "createdAt": "2018-09-26T15:53:52Z",
        "updatedAt": "2018-09-26T15:53:52Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "That's what I was thinking as well. It does imply that in general \"traversal\" projects are part of the graph though. That's probably the correct behavior anyway, as consumers (like QuickBuild) can just filter those nodes out if they don't want them. Generally speaking, traversal projects *could* have arbitrary logic in custom targets though, so need to be built in the pure MSBuild case. MSBuild can't make the same assumptions/require the same restrictions QuickBuild can.",
        "createdAt": "2018-09-26T16:10:22Z",
        "updatedAt": "2018-09-26T16:10:22Z",
        "author": {
          "login": "dfederm"
        }
      },
      {
        "body": "Yeah, I think traversal projects are in the graph; they should just execute quickly.",
        "createdAt": "2018-09-26T16:21:18Z",
        "updatedAt": "2018-09-26T16:21:18Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}