{
  "number": 10931,
  "title": "[Broken Build]: Native DLL output deleted on IncrementalClean",
  "body": "### Issue Description\n\nI have a `WPF` exe project referencing a `Library` project which in turn references a `Native DLL` project. See attached sample project.\n\nWhen rebuilding the solution, the output folder of the exe project contains all binaries:\n```\nMyLib.dll\nNativeLib.dll\nWpfApp2.dll\nWpfApp2.exe\n```\nThen, perform any code change in the `WpfApp2` project and **Build** it (`F7` on my setup). The `NativeLib.dll` gets deleted. Using verbose logging, I can see that it incorrectly gets picked up in `_CleanOrphanFileWritesInOutput` processed by the `IncrementalClean` target.\n\n### Steps to Reproduce\n\nSee attached sample project.\n\n[SimpleApp.zip](https://github.com/user-attachments/files/17620929/SimpleApp.zip)\n\n\n### Expected Behavior\n\nNative DLL output should not be deleted when building solution.\n\n### Actual Behavior\n\nNative DLL output is deleted when building solution.\n\nIn real-world solutions, this causes runtime errors. We have spent many days trying to debug issues that weren't real issues; the build is in fact broken.\n\n### Ask us questions\n\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-11-04T16:18:04Z",
  "updatedAt": "2025-03-11T14:48:40Z",
  "closedAt": null,
  "author": {
    "login": "znakeeye"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Repro it and binlog [msbuild.binlog.txt](https://github.com/user-attachments/files/17644135/msbuild.binlog.txt)\n",
        "createdAt": "2024-11-06T08:41:13Z",
        "author": {
          "login": "JaynieBai"
        }
      },
      {
        "body": "Generally, the task/target that copies the NativeLib.dll to the output directory should also append to the \"FileWrite\" ItemGroup so that the Incremental Clean step won't delete it.\n\nI wonder if this is the bug where building from the IDE and command line has different behavior.",
        "createdAt": "2024-11-13T18:42:54Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "It's \"FileWrites\", plural.\n\nWhich is not consistent with item types like \"Compile\" having been named with the singular form, but too late to change now.",
        "createdAt": "2024-11-14T04:09:00Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Note, this is not necessarily the same issue as the one linked above just now.\n\nIn this issue, the problem is a Native DLL project.\n\nIn my issue, the problem is with nuget package Microsoft.Data.SqlClient.SNI copying Native DLLs from its buildTransitive folder to the build output directory, but subsequently gets deleted by IncrementalClean.\n\nIf a member of the nuget team can explain how does nuget normally handle this, I can try to pitch in and fix this. I tried to find the nuget targets that control restore but no success yet. I plan to search everywhere FileWrites is mentioned in my sdk path.\n\nIt does seem like there should be a simple item collection that automatically gets added to FileWrites by the Build step, or similar.  As a simple thought, the item collection could be called `<Runtimes>` as we have a `<Content>` folder already that maps to the nupkg top-level folder `\\content\\`. Perhaps this already exists in some other form and I'm simply unaware. ",
        "createdAt": "2024-11-25T13:26:50Z",
        "author": {
          "login": "jzabroski"
        }
      },
      {
        "body": "Just to share on my progress on this topic and hopefully hear from you on possible ideas.\n\nFor the similarities between first and second build:\n![Image](https://github.com/user-attachments/assets/b080129f-8865-4db5-83d9-5728ea201bf6)\n![Image](https://github.com/user-attachments/assets/ecd33edb-1769-4fc8-bb6c-9cb99051e1d9)\n\n\nIdeally, based on `_IsNativeEnvironment `property presence, I would add it either to `FieWrites ` or exclude from collection in `InrementalClean`.\nI managed to add C:\\Users\\ykovalova\\Downloads\\SimpleApp\\SimpleApp\\x64\\Debug\\NativeLib.dll to `FileWrites` since it's visible in scope of `GetCopyToOutputDirectoryItems` execution, but I need preserve this path:  **\\WpfApp2\\bin\\Debug\\net6.0-windows\\NativeLib.dll** , that isn't available when I need it (inside of MSBuild task execution).\n\nNow I am thinking about the ways on either passing \\WpfApp2\\bin\\Debug\\net6.0-windows to `GetCopyToOutputDirectoryItems`  target or saving all project info with `_IsNativeEnvironment =true` and handle it in IncrementalClean.\n",
        "createdAt": "2024-11-29T11:20:00Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "This looks similar to #9841.  As a difference between IDE and cmd line when resolving outputs from the Project Reference.  In the IDE, it calls `GetTargetsPath` target while the cmd line calls `Build` target.  The `GetTargetsPath` target returns `Returns=\"$(TargetPath)\"` which includes both managed and native.  The `Build` target returns `@(ManagedTargetPath)` managed only, in this case, empty.\n\nA simple change to `Build` target in `Microsoft Visual Studio\\2022\\Preview\\MSBuild\\Microsoft\\VC\\v170\\Microsoft.BuildSteps.Targets` to `Returns=\"$(TargetPath)\"` to return NativeLib.dll.  But there might unforeseen consequences.  \n\n\n\n",
        "createdAt": "2024-12-12T00:55:30Z",
        "author": {
          "login": "yuehuang010"
        }
      },
      {
        "body": "As a temproary workaround, I would suggest neutering the in the box `<Target Name=\"IncrementalClean\" />` by putting the empty target to yours `Directory.Build.targets `.",
        "createdAt": "2024-12-16T10:02:42Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "@YuliiaKovalova  I tried with the workaround and this does not solve the visual studio build (but seems to solve the one in command line) (from issue #9841 )\n",
        "createdAt": "2024-12-16T15:56:09Z",
        "author": {
          "login": "fforjan"
        }
      }
    ]
  }
}