{
  "number": 11680,
  "title": "ctrl+c is not respected when --framework is passed to 'dotnet build'",
  "body": "### Issue Description\n\nctrl+c normally cancels the build, but it doesn't do that when `--framework <target-framework>` is passed to the CLI. You have to just sit there until the build finishes.\n\n### Steps to Reproduce\n\n- Get yourself a chunky project, like, I dunno, one of the projects in this repo, or `dotnet/sdk` repo, or `dotnet/roslyn`.\n- Run a command similar to one of the following examples\n    - `dotnet build ./test/dotnet.Tests/ --framework net10.0` in `dotnet/sdk`\n    - `dotnet build ./src/Compilers/CSharp/Portable --framework net9.0 -t:rebuild` in `dotnet/roslyn`.\n- Wait for the restore step to finish and the actual build to begin. Also, I think this won't repro if everything is up to date and rebuild is not specified, difficult to be certain though.\n- Hit ctrl+c while the build is underway.\n\n\n### Expected Behavior\n\nBuild is cancelled.\n\n### Actual Behavior\n\nBuild does not cancel, you either have to terminate the terminal process and its children, or sit there and wait.\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\nIn Roslyn I am using dotnet 9.0.104\nIn SDK I am using dotnet 10.0.100-preview.3.25125.5",
  "state": "CLOSED",
  "createdAt": "2025-04-03T23:21:31Z",
  "updatedAt": "2025-05-26T14:38:03Z",
  "closedAt": "2025-05-26T14:38:03Z",
  "author": {
    "login": "RikkiGibson"
  },
  "milestone": null,
  "assignees": {
    "nodes": [
      {
        "login": "JaynieBai"
      }
    ]
  },
  "labels": [
    "Priority:1",
    "triaged",
    "Area: Terminal Logger"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Note that this behavior can occur using both ordinary `dotnet build` as well as similar `dotnet test` commands which implicitly run the build.",
        "createdAt": "2025-04-03T23:33:21Z",
        "author": {
          "login": "RikkiGibson"
        }
      },
      {
        "body": "@RikkiGibson I am just bad at reading and didn't realize this was against the MSBuild repo - I've deleted my tag as a result! ",
        "createdAt": "2025-04-03T23:34:53Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "Other notes:\n* this happens only in TL, not console logger.\n* ~the abort message isn't written at all - this suggests that the `BuildCanceledEventArgs` fired by `LogBuildCanceled` (which is called by `CancelAllSubmissions`) isn't being fired or processed?~ The abort message _is_ written, it's just swallowed by the other in-progress builds continuing to write.",
        "createdAt": "2025-04-04T14:01:32Z",
        "author": {
          "login": "baronfel"
        }
      },
      {
        "body": "**This also reproes when /tl:off, the issue is related with --framework.**   @rainersigwald  should we fix this issue in the dotnet. since the args are from dotnet.\n\nWhen --framework, the msbuild args are with /target:Restore.  so, it will restore only at first https://github.com/dotnet/msbuild/blob/f5b4822ee5fdbb9001e38fc324c43fd1d1b090c9/src/MSBuild/XMake.cs#L1577, after restore successfully, it will set static property s_buildComplete. When build and ctrl+c, the s_buildComplete has been set and s_cancelComplete.Set();\nhttps://github.com/dotnet/msbuild/blob/f5b4822ee5fdbb9001e38fc324c43fd1d1b090c9/src/MSBuild/XMake.cs#L1188-L1193\n\n\n**Generate the binlog folders with --framework and without --framework** \n[NoFramework.zip](https://github.com/user-attachments/files/20241401/NoFramework.zip)\n\n[withFramework.zip](https://github.com/user-attachments/files/20241414/withFramework.zip)",
        "createdAt": "2025-05-16T09:18:35Z",
        "author": {
          "login": "JaynieBai"
        }
      }
    ]
  }
}