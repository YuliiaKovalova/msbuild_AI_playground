{
  "number": 2782,
  "title": "SettingsSingleFileGenerator with new csproj format",
  "body": "### Steps to reproduce\r\nNot sure this is the right repo, but this seems similar to #1688 . \r\n\r\nI want to use the new csproj format for .NET 4.5.2 in Visual Studio 2017. The problem is that the SettingsSingleFileGenerator does not work. \r\n\r\nProject file\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net452</TargetFramework>\r\n    <RootNamespace>TestProject</RootNamespace>\r\n    <AssemblyName>TestProject</AssemblyName>\r\n    <OutputType>Exe</OutputType>\r\n    <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>\r\n    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>\r\n    <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>\r\n    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>\r\n    <GenerateAssemblyCopyrightAttribute>false</GenerateAssemblyCopyrightAttribute>\r\n    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>\r\n    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>\r\n    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>\r\n    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <Optimize>false</Optimize>\r\n    <OutputPath>bin\\Debug\\</OutputPath>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\Release\\</OutputPath>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System.Configuration\" />\r\n    <Reference Include=\"System.Data.DataSetExtensions\" />\r\n    <Reference Include=\"Microsoft.CSharp\" />\r\n    <Reference Include=\"System.Net.Http\" />\r\n    <Reference Include=\"System.ServiceProcess\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Update=\"Properties\\ApplicationSettings.settings\" Generator=\"SettingsSingleFileGenerator\" LastGenOutput=\"ApplicationSettings.Designer.cs\" />\r\n    <Compile Update=\"Properties\\ApplicationSettings.Designer.cs\" AutoGen=\"True\" DependentUpon=\"ApplicationSettings.settings\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nDirectory contents:\r\n```\r\n/\r\n   - Test.csproj\r\n/Properties\r\n   - ApplicationSettings.settings\r\n   - ApplicationSettings.Designer.cs\r\n```\r\n\r\nApplicationSettings.settings\r\n```xml\r\n<?xml version='1.0' encoding='utf-8'?>\r\n<SettingsFile xmlns=\"http://schemas.microsoft.com/VisualStudio/2004/01/settings\" CurrentProfile=\"(Default)\" GeneratedClassNamespace=\"Test.Properties\" GeneratedClassName=\"ApplicationSettings\">\r\n  <Profiles />\r\n  <Settings>\r\n    <Setting Name=\"Protocol\" Type=\"System.String\" Scope=\"User\">\r\n      <Value Profile=\"(Default)\">HTTPS</Value>\r\n    </Setting>\r\n  </Settings>\r\n</SettingsFile>\r\n```\r\n\r\nIn Visual Studio rightclick ApplicationSettings.settings and choose \"Run Custom Tool\"\r\n\r\n### Expected  behavior\r\nThe ApplicationSettings.Designer.cs is updated with the tool output.\r\n\r\n### Actual behavior\r\nNothing happens. No error message or similar is generated, but the ApplicationSettings.Designer.cs file is not changed. When copying the ApplicationSettings.settings into an old csproj library and running the custom tool there the output is generated as expected, so the file itself is correct.\r\n\r\n### Environment data\r\nVisual Studio 2017 15.4.3\r\nOS info:\r\nWindows 10 1703\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2017-12-07T13:29:23Z",
  "updatedAt": "2024-02-21T17:15:22Z",
  "closedAt": "2018-05-24T14:39:52Z",
  "author": {
    "login": "danstur"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Same thing here. Can anyone confirm this is the right place to ask?",
        "createdAt": "2018-01-19T17:05:33Z",
        "updatedAt": "2018-01-19T17:05:33Z",
        "author": {
          "login": "jeremyVignelles"
        }
      },
      {
        "body": "I'm also running into this issue and can't seem to find a solution",
        "createdAt": "2018-02-17T05:54:17Z",
        "updatedAt": "2018-02-17T05:54:17Z",
        "author": {
          "login": "alexreinking"
        }
      },
      {
        "body": "+1",
        "createdAt": "2018-02-17T13:34:15Z",
        "updatedAt": "2018-02-17T13:34:15Z",
        "author": {
          "login": "magol"
        }
      },
      {
        "body": "I suspect that this is related to https://github.com/dotnet/project-system/issues/218 -- @panopticoncentral, does that sound right to you?",
        "createdAt": "2018-02-21T16:53:55Z",
        "updatedAt": "2018-02-21T16:53:55Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Yes, I believe so.",
        "createdAt": "2018-02-21T17:01:46Z",
        "updatedAt": "2018-02-21T17:01:46Z",
        "author": {
          "login": "panopticoncentral"
        }
      },
      {
        "body": "It looks like the bug is fixed, check.\r\nVisual Studio 15.7.2.",
        "createdAt": "2018-05-23T08:57:16Z",
        "updatedAt": "2018-05-23T08:57:16Z",
        "author": {
          "login": "FixFever"
        }
      },
      {
        "body": "Sorry to say, but it's not fixed... I just tested it in a new netcore app project (so that I have a bootstrap Sdk style project) that I targeted to net471.  The **ResXFileCodeGenerator** works just fine, but the **SettingsSingleFileGenerator** produces no output.\r\n\r\nFor the records here is my csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net471</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System\">\r\n      <HintPath>System</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Compile Update=\"Properties\\Resources.Designer.cs\">\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n      <DependentUpon>Resources.resx</DependentUpon>\r\n    </Compile>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <EmbeddedResource Update=\"Properties\\Resources.resx\">\r\n      <Generator>ResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Compile Update=\"Properties\\Settings.Designer.cs\">\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n      <DependentUpon>Settings.settings</DependentUpon>\r\n    </Compile>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Update=\"Properties\\Settings.settings\">\r\n      <Generator>SettingsSingleFileGenerator</Generator>\r\n      <LastGenOutput>Settings.Designer.cs</LastGenOutput>\r\n    </None>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAnd my settings file:\r\n\r\n```xml\r\n<?xml version='1.0' encoding='utf-8'?>\r\n<SettingsFile xmlns=\"http://schemas.microsoft.com/VisualStudio/2004/01/settings\" CurrentProfile=\"(Default)\" GeneratedClassNamespace=\"ConsoleApp1.Properties\" GeneratedClassName=\"Settings\">\r\n  <Profiles />\r\n  <Settings>\r\n    <Setting Name=\"Setting1\" Type=\"System.String\" Scope=\"User\">\r\n      <Value Profile=\"(Default)\">Foo</Value>\r\n    </Setting>\r\n  </Settings>\r\n</SettingsFile>\r\n```\r\n\r\nPS: to me, the expected behavior should be a Settings.Designer.cs **and updates to App.config**...",
        "createdAt": "2018-05-24T07:31:51Z",
        "updatedAt": "2018-05-24T07:31:51Z",
        "author": {
          "login": "odalet"
        }
      },
      {
        "body": "If https://github.com/dotnet/project-system/issues/218#issuecomment-232178054 is up to date, I don't think `SettingsSingleFileGenerator` is expected to work yet.\r\n\r\nSince this is a Visual Studio project system feature, rather than core MSBuild, I'm going to close this in favor of that bug.",
        "createdAt": "2018-05-24T14:39:32Z",
        "updatedAt": "2018-05-24T14:39:32Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "~Duplicate of dotnet/project-system#218~\r\n\r\nThis bug is closed as a duplicate.",
        "createdAt": "2018-05-24T14:39:52Z",
        "updatedAt": "2018-05-24T14:40:49Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Duplicate of dotnet/project-system#3535",
        "createdAt": "2018-05-24T14:41:22Z",
        "updatedAt": "2018-05-24T14:41:22Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}