{
  "number": 304,
  "title": "Enable in-line tasks in xplat",
  "body": "This feature was disabled as support for our current implementation is missing in .NET Core. This feature should be enabled.\n",
  "state": "CLOSED",
  "createdAt": "2015-10-20T17:53:31Z",
  "updatedAt": "2024-02-21T17:30:11Z",
  "closedAt": "2017-09-26T20:15:20Z",
  "author": {
    "login": "AndyGerlicher"
  },
  "labels": [
    ".NET Core",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "jeffkl"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Just making a note: everyone involved with this has been making some level of assumption that the fix will involve using Roslyn for compilation. If an eventual solution is created that _doesn't_ do that, we should revisit other issues that are now marked as duplicates.",
        "createdAt": "2017-07-17T17:49:10Z",
        "updatedAt": "2017-07-17T17:49:10Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I have released a package that can do this: https://www.nuget.org/packages/RoslynCodeTaskFactory\r\n\r\nhttps://github.com/jeffkl/RoslynCodeTaskFactory",
        "createdAt": "2017-09-20T18:10:02Z",
        "updatedAt": "2017-09-20T18:10:02Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl awesome. any chance this could be integrated into msbuild itself? (or maybe roslyn where the compiler targets come from)\r\nSo that `RoslynCodeTaskFactory` could be a replacement for / phase out the traditional `CodeTaskFactory`.",
        "createdAt": "2017-09-27T09:32:12Z",
        "updatedAt": "2017-09-27T09:32:12Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "I had it working in Roslyn here: https://github.com/jeffkl/roslyn/commit/0996471fcebe2d08b9ba749f4eab67ca4bec3e3e\r\n\r\nThere were two problems that the MSBuild and Roslyn team couldn't agree upon.\r\n\r\n 1. In order for full framework MSBuild.exe to run the .NET Standard tasks, it would need to have the full closure of facade assemblies.  Right now full framework MSBuild only ships with the 3 facades that it needs.  The MSBuild team didn't want to ship more than they had to.\r\n 2. The code task factory needs to have reference assemblies to pass to the compiler.  The Rolsyn team wanted MSBuild to ship them, but we felt that since the code task factory is the only thing that needed them that they should come with Roslyn.\r\n\r\nSo I just shipped my own package for now...",
        "createdAt": "2017-09-27T14:58:33Z",
        "updatedAt": "2017-09-27T14:58:33Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "Thanks for the explanation!\r\n\r\nSome thoughts:\r\nad 1.: If I understand it correctly, this should be irrelevant if run on .NET 4.7.1 since that has all the necessary assemblies inbox. And if I want all the latest and greatest features, I should use the latest versions of everything.\r\nad 2.: Well.. \ud83d\udca9 I raised a similar concern at https://github.com/dotnet/cli/issues/7689 (Being able to directly invoke `csc` doesn't make any sense if there aren't any ref assemblies). Maybe just adding a `netstandard.dll` ref assembly and msbuild assemblies could be enough.. (or just directly use the platform-specific `netstandard.dll` of the current runtime?)\r\n\r\nI really do appreciate your `RoslynCodeTaskFactory`, I just hope that at some point it may be available without the need for a nuget package - e.g. for build \"projects\" that aren't projects but just msbuild scripts that don't have nuget integration.",
        "createdAt": "2017-09-30T17:36:52Z",
        "updatedAt": "2017-09-30T17:36:52Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Once MSBuild and Roslyn both target `netstandard2.0` and there's a single reference assembly, then I'll resume talks with the Roslyn team to ship this with the compiler's build task assembly.",
        "createdAt": "2017-09-30T19:09:13Z",
        "updatedAt": "2017-09-30T19:09:13Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "@jeffkl, is there any issue tracking for in Roslyn / MSBuild in the open? It's quite hard to find the in-progress tasks in the closed issue perhaps reopen this one? Found some related discussion by @terrajobst here: https://github.com/dotnet/roslyn/issues/16211 (another closed issue)",
        "createdAt": "2017-12-31T19:35:15Z",
        "updatedAt": "2017-12-31T19:35:15Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "No, I discussed the work with the Roslyn team in person and have not opened an issue.",
        "createdAt": "2018-01-02T14:46:02Z",
        "updatedAt": "2018-01-02T14:46:02Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  }
}