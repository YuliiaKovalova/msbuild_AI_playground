{
  "number": 11945,
  "title": "Consider removing custom TaskFactory support",
  "body": "It is a very niche feature with unclear use-case https://github.com/search?q=%22%3A+ITaskFactory%22+language%3AC%23+Microsoft.Build.Framework&type=code, that assumes runtime of it's tasks in-process, which is dangerous when we're refactoring MSBuild to multithreaded execution https://github.com/dotnet/msbuild/issues/11914\n\nThe model now is that Initialize creates an in memory assembly of an ITask and TaskExecutionHost can instantiate it. An in-memory assembly can't travel to an TaskHost node process.\n\nAlternative: breaking change of assumption that it must produce temporary assets/dll in `<someplace>`, the task can be loaded from that dll in another process and `<someplace>` will be purged after build.",
  "state": "OPEN",
  "createdAt": "2025-06-03T15:33:13Z",
  "updatedAt": "2025-06-03T15:48:28Z",
  "closedAt": null,
  "author": {
    "login": "JanProvaznik"
  },
  "labels": [
    "Area: Engine"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}