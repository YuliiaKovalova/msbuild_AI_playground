{
  "number": 6774,
  "title": "Update package dependencies to a more recent version",
  "body": "Microsoft.Build* packages reference quite old dependencies (runtime packages with a 4.* version). It would be great if msbuild would update their package dependencies to target the latest released 5.0.* runtime packages. The net benefit of doing so is a simplified dependency graph which results in not bringing in quite old packages which are hardly supported by dotnet/runtime (or corefx).\r\n\r\ncc @rainersigwald @ericstj ",
  "state": "CLOSED",
  "createdAt": "2021-08-19T18:58:20Z",
  "updatedAt": "2024-02-21T14:11:52Z",
  "closedAt": "2021-10-04T20:51:35Z",
  "author": {
    "login": "ViktorHofer"
  },
  "labels": [
    "blocked",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "VS 17.1"
  },
  "comments": {
    "nodes": [
      {
        "body": "In general, this is nontrivial for us because we try to match the Visual Studio versions of the runtime packages. We looked at updating (https://github.com/dotnet/msbuild/pull/5910) and ran into several roadblocks (though honestly \"we didn't have a super strong reason to do it\" was probably the most salient factor).\r\n\r\nIs the difference in package graph between the 4.x and 5.0 packages that significant? I don't see a way for us to get to the 6.0 ones since we'll need to ship simultaneously with 6.0 and don't want to add ourselves to the coherency problems.",
        "createdAt": "2021-08-19T20:26:03Z",
        "updatedAt": "2021-08-19T20:26:03Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> Is the difference in package graph between the 4.x and 5.0 packages that significant? I don't see a way for us to get to the 6.0 ones since we'll need to ship simultaneously with 6.0 and don't want to add ourselves to the coherency problems.\r\n\r\nLet's take https://www.nuget.org/packages/System.Text.Encoding.CodePages/4.0.1 as an example which is referenced by msbuild. It doesn't provide a netstandard2.0 asset and hence pulls in all these old packages which we don't ship anymore for ages:\r\n\r\n![image](https://user-images.githubusercontent.com/7412651/130247938-852d6752-3464-4a24-90f8-0c9648d11e9f.png)\r\n\r\nThere are many of such packages. Upgrading everything to 5.0.* guarantees that you use a coherent set of packages as they all shipped together in a single release.\r\n\r\n>  I don't see a way for us to get to the 6.0 ones since we'll need to ship simultaneously with 6.0 and don't want to add ourselves to the coherency problems.\r\n\r\nRight, if you don't want to be part of the coherency problem then you probably want to wait until 6.0.0 packages shipped. The 6.0.0 packages are again superior over the 5.0.* ones in many ways (much smaller, only include supported assets, trimmed dependencies, etc.).",
        "createdAt": "2021-08-20T14:25:27Z",
        "updatedAt": "2021-08-20T14:25:27Z",
        "author": {
          "login": "ViktorHofer"
        }
      },
      {
        "body": "This is blocked on https://github.com/dotnet/msbuild/issues/6807 and should be done soon after that issue, while it's fresh in our minds.",
        "createdAt": "2021-09-02T18:49:27Z",
        "updatedAt": "2021-09-02T18:49:27Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Duplicate of #5852",
        "createdAt": "2021-10-04T20:51:35Z",
        "updatedAt": "2021-10-04T20:51:35Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}