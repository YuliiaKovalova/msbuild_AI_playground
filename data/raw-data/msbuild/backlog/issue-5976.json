{
  "number": 5976,
  "title": "VS and dotnet build behaves diffrent on missing projects in solutions",
  "body": "<!-- This is a template that helps us provide quicker feedback. Please use any relevant sections and delete anything you don't need. -->\r\n\r\n### Issue Description\r\nIf you have multiple Solutions on the same projects. Some only contains subsets of all projects and one with all Projects. If someone add in project A a reference to a project B in the full solution it can happen, that other solutions that not contains B break. The problem is that VS and dotnet cli behaves different. With dotnet cli everything can be build. But in VS it fails. Because in dotnet build everything is fine it can pass CI gates and developers later have to fix the subsolutions because VS cant handle this.\r\n\r\n\r\n### Steps to Reproduce\r\nUse the following structure to reproduce the issue or download the zip file.\r\n[AB.zip](https://github.com/dotnet/msbuild/files/5715990/AB.zip)\r\n\r\nC:.\r\n\u2502   A.sln\r\n\u2502   AB.sln\r\n\u2502\r\n\u251c\u2500\u2500\u2500A\r\n\u2502       A.cs\r\n\u2502       A.csproj\r\n\u2502\r\n\u2514\u2500\u2500\u2500B\r\n        B.cs\r\n        B.csproj\r\n\r\nAB.sln\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"B\", \"B\\B.csproj\", \"{3C50BE2E-9F33-4B3A-AB0E-17E8B5DDE678}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"A\", \"A\\A.csproj\", \"{4897A731-C11F-4F0D-8D54-131CD74D27B5}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{3C50BE2E-9F33-4B3A-AB0E-17E8B5DDE678}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{3C50BE2E-9F33-4B3A-AB0E-17E8B5DDE678}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{3C50BE2E-9F33-4B3A-AB0E-17E8B5DDE678}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{3C50BE2E-9F33-4B3A-AB0E-17E8B5DDE678}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{4897A731-C11F-4F0D-8D54-131CD74D27B5}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{4897A731-C11F-4F0D-8D54-131CD74D27B5}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{4897A731-C11F-4F0D-8D54-131CD74D27B5}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{4897A731-C11F-4F0D-8D54-131CD74D27B5}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\nEndGlobal\r\n```\r\n\r\nA.sln\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"A\", \".\\A\\A.csproj\", \"{E00D4674-C975-4774-BA72-CB15A30A657E}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{E00D4674-C975-4774-BA72-CB15A30A657E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{E00D4674-C975-4774-BA72-CB15A30A657E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{E00D4674-C975-4774-BA72-CB15A30A657E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{E00D4674-C975-4774-BA72-CB15A30A657E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\nEndGlobal\r\n```\r\n\r\nA.csproj\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>net5.0</TargetFramework>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n      <ProjectReference Include=\"..\\B\\B.csproj\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\nB.csproj\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>net5.0</TargetFramework>\r\n    </PropertyGroup>\r\n</Project>\r\n```\r\nA.cs\r\n```c#\r\nnamespace A\r\n{\r\n    public class A {B.B b = new B.B(); }\r\n}\r\n```\r\n\r\nB.cs\r\n\r\n```c#\r\nnamespace B\r\n{\r\n    public class B   { }\r\n}\r\n```\r\n\r\n### Expected Behavior\r\nVS and dotnet build behave the same.\r\n\r\n### Actual Behavior\r\ndotnet build builds A.sln and VS doesn't\r\n\r\n### Versions & Configurations\r\ndotnet version 5.0.100\r\nvisual studio version 16.8.1",
  "state": "CLOSED",
  "createdAt": "2020-12-18T13:47:50Z",
  "updatedAt": "2025-04-08T18:11:58Z",
  "closedAt": "2021-01-20T16:54:47Z",
  "author": {
    "login": "lippinio"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "bug",
    "needs-triage"
  ],
  "comments": {
    "nodes": [
      {
        "body": "Team Triage: A [solution filter](https://docs.microsoft.com/visualstudio/msbuild/solution-filters) would fix the issue you're having here. If you really care about VS building a solution like this, you can open VS on the cmd line using `devenv /build`, though it's not an ideal experience.\r\n\r\nWhen building in VS, projects are built without building their references. A solution here is to manually build the project that lives outside of the solution first.",
        "createdAt": "2021-01-13T17:10:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "Team Triage: Closing after a week due to a solution being provided. Feel free to re-open if this doesn't fix your issue.",
        "createdAt": "2021-01-20T16:54:47Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "the above is not a fix",
        "createdAt": "2025-04-08T18:11:57Z",
        "author": {
          "login": "robsonj"
        }
      }
    ]
  }
}