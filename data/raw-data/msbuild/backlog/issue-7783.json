{
  "number": 7783,
  "title": "ProjectRootElement.Open always uses cache",
  "body": "If I create 2 objects of `Microsoft.Build.Construction.ProjectRootElement` using `Open(string path)` method, where the file path is same but the content is altered in between the calls, the 2nd `Open` call returns content from in memory cache and not file.\r\n\r\n```c#\r\nvar filePath = @\"C:\\temp\\AProject.csproj\";\r\nvar projectRootElement1 = Microsoft.Build.Construction.ProjectRootElement.Open(filePath)\r\n// pause the debugger\r\n// alter the file content slightly on disk\r\n// resume debugger\r\nvar projectRootElement2 = Microsoft.Build.Construction.ProjectRootElement.Open(filePath)\r\n```\r\n\r\n**Result**: The value of `projectRootElement1.OuterElement` is same as `projectRootElement2.OuterElement`, which should not be.\r\n\r\n___Reasoning:___\r\nCache is good for performance, but there should be a flag available in Open method which forces the algorithm to read from disk and not from cache.\r\n\r\n___Workaround:___\r\nThis problem has been worked around by using `XmlReader`, which is in our control and not cache.\r\n\r\n```c#\r\nusing (XmlReader reader = XmlReader.Create(filePath))\r\n{\r\n    projectRootElement1 = Microsoft.Build.Construction.ProjectRootElement.Create(reader);\r\n}\r\n// pause the debugger\r\n// alter the file content slightly on disk\r\n// resume debugger\r\nusing (XmlReader reader = XmlReader.Create(filePath))\r\n{\r\n    projectRootElement2 = ProjectRootElement.Create(reader);\r\n}\r\n```\r\n\r\n**Result**: The value of `projectRootElement1.OuterElement` is **not** same as `projectRootElement2.OuterElement`, as expected.\r\n\r\n\r\n___Tested on___:\r\nOS: Windows\r\n.NET Version: .NET 4.7.2 Framework\r\n",
  "state": "OPEN",
  "createdAt": "2022-07-03T16:45:58Z",
  "updatedAt": "2024-01-31T08:16:39Z",
  "closedAt": null,
  "author": {
    "login": "cnayan"
  },
  "labels": [
    "Area: Documentation",
    "Area: API",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "Perhaps you can use [ProjectCollection.UnloadProject(ProjectRootElement)](https://docs.microsoft.com/dotnet/api/microsoft.build.evaluation.projectcollection.unloadproject?view=msbuild-17#microsoft-build-evaluation-projectcollection-unloadproject(microsoft-build-construction-projectrootelement)) to remove from the cache.",
        "createdAt": "2022-07-03T17:37:32Z",
        "updatedAt": "2022-07-03T17:37:32Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Perhaps.\r\nI am not looking for a workaround, because I already have one. I am asking to either document the Open function stating that it reads from cache first..... or give developers a way to bypass cache.",
        "createdAt": "2022-07-04T08:01:30Z",
        "updatedAt": "2022-07-04T08:01:30Z",
        "author": {
          "login": "cnayan"
        }
      },
      {
        "body": "The cache behavior is required in some scenarios for consistency. Consider a build that updates one of its imports--you want the whole build to see the same version. This has been an important requirement for some Live Unit Testing scenario builds.\r\n\r\nSo I think we should make sure to clarify this behavior in the docs.",
        "createdAt": "2022-07-05T14:09:54Z",
        "updatedAt": "2022-07-05T14:09:54Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}