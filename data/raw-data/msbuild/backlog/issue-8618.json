{
  "number": 8618,
  "title": "Consider adding 'dotnet format --verify-no-changes' to the build.cmd",
  "body": "(originaly reported by @rokonec)\r\n\r\n### Issue Description\r\n\r\nIn case we want to keep `IDE0055`\r\n\r\nThe formating analyzer warning can be pretty generic and hardly actionable - e.g.:\r\n\r\n```\r\nC:\\src\\msbuild\\src\\Build.UnitTests\\BackEnd\\MSBuild_Tests.cs(839,35): error IDE0055: Fix formatting [C:\\src\\msbuild\\src\\\r\nBuild.UnitTests\\Microsoft.Build.Engine.UnitTests.csproj::TargetFramework=net472]\r\n```\r\n\r\nWherease `dotnet format` gives clue quickly:\r\n\r\n```\r\n>dotnet format whitespace MSBuild.sln --verify-no-changes\r\nC:\\src\\msbuild\\src\\Build.UnitTests\\BackEnd\\MSBuild_Tests.cs(839,35): error WHITESPACE: Fix whitespace formatting. Delete 1 characters. [C:\\src\\msbuild\\src\\Build.UnitTests\\Microsoft.Build.Engine.UnitTests.csproj]\r\n```\r\n\r\n\r\n\r\nWe can have extra step in build.cmd running the `dotnet format whitespace MSBuild.sln --verify-no-changes` failing the dev build for nonzero exit code. Plus it should suggest to simply run `dotnet format whitespace MSBuild.sln` to resolve the warnings without the need for manual complicated investigation of the problem.\r\n\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nInsert double space anywhere into the code and run `build.cmd`\r\n\r\n### Priority\r\n\r\nNice-to-have, only relates to our infra (no customer impact)\r\nThough - it should be super quick to add\r\n\r\n### Alternative\r\n\r\nadd following to `.editorconfig`:\r\n```\r\n# Fix formatting\r\ndotnet_diagnostic.IDE0055.severity = suggestion\r\n```",
  "state": "CLOSED",
  "createdAt": "2023-03-31T12:13:59Z",
  "updatedAt": "2023-04-05T19:35:12Z",
  "closedAt": "2023-04-05T19:35:12Z",
  "author": {
    "login": "JanKrivanek"
  },
  "labels": [
    "bug",
    "Area: Our Own Build",
    "needs-triage"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "JanKrivanek"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "There should be parity or equivalence maintained with `build.sh`.",
        "createdAt": "2023-03-31T13:06:20Z",
        "updatedAt": "2023-03-31T13:06:20Z",
        "author": {
          "login": "jrdodds"
        }
      },
      {
        "body": "I would prefer to disable the rule. Failing builds for formatting changes sounds very unpleasant.\r\n\r\n> Plus it should suggest to simply run dotnet format whitespace MSBuild.sln to resolve the warnings without the need for manual complicated investigation of the problem.\r\n\r\nA nice dream, but alas:\r\n\r\n```sh-session\r\n\u276f dotnet format whitespace MSBuild.sln\r\nWarnings were encountered while loading the workspace. Set the verbosity option to the 'diagnostic' level to log warnings.\r\n```",
        "createdAt": "2023-03-31T13:54:11Z",
        "updatedAt": "2023-03-31T13:54:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Fwiw Roslyn uses the \"@jaredpar  system\" ... formatting issues are only warnings on dev machines; in PR validation they are errors but the validation continues to ensure you get build and test results.",
        "createdAt": "2023-03-31T14:21:33Z",
        "updatedAt": "2023-03-31T14:21:33Z",
        "author": {
          "login": "danmoseley"
        }
      },
      {
        "body": "That's my preferred approach for most things--but the low actionability of this one makes me prefer to just nix the rule.",
        "createdAt": "2023-03-31T14:23:53Z",
        "updatedAt": "2023-03-31T14:23:53Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> I would prefer to disable the rule. Failing builds for formatting changes sounds very unpleasant.\r\n\r\nFailing builds for formatting changes on developer machines is the fastest way to anger your developer team. No one wants to be in the middle of debugging a tricky issue, think they found the fix, build and get an error because they included a white space after a `}`. \r\n\r\nDevelopers who truly want the \"error every developer build on formatting differences\" are in the minority. It is completely reasonable to have this as an option, but it shoudl be off by default. ",
        "createdAt": "2023-03-31T16:05:06Z",
        "updatedAt": "2023-03-31T16:05:06Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "To make the intention clear here - the `dotnet format` step is suggested to get more actionable message (plus offering a command for a quicker resolution) for a case where the analyzer error is already set to *fail* the build. That's our current situation.\r\n\r\nBy no means is this meant to cause build error that wouldn't otherwise occur.\r\n\r\nShould we decide to demote or disable the formatting rules - then this work doesn't apply (or should only produce information output - that would anyways be lost in the other build log spew, so useless).\r\n\r\nI'll update the description accordingly",
        "createdAt": "2023-03-31T16:54:35Z",
        "updatedAt": "2023-03-31T16:54:35Z",
        "author": {
          "login": "JanKrivanek"
        }
      },
      {
        "body": "Team triage: we inclined to disable this non-specific error.",
        "createdAt": "2023-04-04T14:03:33Z",
        "updatedAt": "2023-04-04T14:03:33Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}