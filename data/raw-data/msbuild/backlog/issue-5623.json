{
  "number": 5623,
  "title": "-performanceTest and -integrationTest flags aren't used",
  "body": "### Issue Description\r\n\r\nIt seems the following flags\r\n```\r\n/p:IntegrationTest=$integrationTest `\r\n/p:PerformanceTest=$performanceTest `\r\n```\r\nare not being used in the build scripts (anymore?).\r\n\r\nShould they be removed? Should the script be fixed to be able to run these specific tests only? \r\n\r\nThe CI just uses `-test`.\r\n\r\n### Steps to Reproduce\r\n```\r\n.\\build.cmd -performanceTest\r\n```\r\n\r\n### Expected Behavior\r\n\r\nPerformance tests only are run.\r\n\r\n### Actual Behavior\r\n\r\nA build is made, no tests are run.\r\n\r\n### Versions & Configurations\r\n\r\nCurrent master.",
  "state": "CLOSED",
  "createdAt": "2020-08-07T10:48:11Z",
  "updatedAt": "2024-02-21T14:17:51Z",
  "closedAt": "2020-08-21T13:27:53Z",
  "author": {
    "login": "mfkl"
  },
  "labels": [
    "bug",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Backlog"
  },
  "comments": {
    "nodes": [
      {
        "body": "- Are there no performance tests specific to MSBuild code (not dotnet/runtime)?\r\n- Is there no way to run them locally (not on helix/msft infra)?",
        "createdAt": "2020-08-07T12:41:11Z",
        "updatedAt": "2020-08-07T12:41:28Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "We run performance tests (RPS) when we insert into Visual Studio. I'm not aware of any performance tests we run with every CI build, and I imagine that it would be better, if we were to add any, to add them to RPS instead. Robust performance tests can take a lot of time, and since I (and others) run tests locally, it's good for them to be reasonably fast. I don't think it's bad to have the flags in case that changes, but I don't foresee adding them in the immediate future.\r\n\r\nWe do consider performance when reviewing PRs, and we'll catch them later if we miss something. If you're wondering whether a particular change is good or bad for performance, I might recommend Benchmark.NET\u2014it's a very clean interface for working with performance!",
        "createdAt": "2020-08-20T17:15:12Z",
        "updatedAt": "2020-08-20T17:15:12Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "> I don't think it's bad to have the flags in case that changes\r\n\r\nOk, just making sure I understood well these flags were not actually used.\r\n\r\n> I might recommend Benchmark.NET\u2014it's a very clean interface for working with performance!\r\n\r\nI agree. Will follow up with an issue, thanks.",
        "createdAt": "2020-08-21T13:27:53Z",
        "updatedAt": "2020-08-21T13:27:53Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "@Forgind curious how hard it is to run these RPS tests. Any thing you can point me at?\r\n\r\nAlso I take it these must run an msbuild hosted on full framework, so there may not be any perf tests available for .Net Core?",
        "createdAt": "2020-10-19T21:11:05Z",
        "updatedAt": "2020-10-19T21:11:05Z",
        "author": {
          "login": "AndyAyersMS"
        }
      },
      {
        "body": "> @Forgind curious how hard it is to run these RPS tests. Any thing you can point me at?\r\n> \r\nThey get run automatically when someone merges into an exp/ branch or twice per week after someone has merged into master. You can see an example from a completed PR [here](https://dev.azure.com/devdiv/DevDiv/_git/VS/pullrequest/281176) (internal link, sorry). In this case, RPS ran on Tuesday. I wouldn't say there's anything hard about it; they just take a while.\r\n\r\n> Also I take it these must run an msbuild hosted on full framework, so there may not be any perf tests available for .Net Core?\r\n\r\nI kinda think RPS tests some Core scenarios, too? If not, maybe the SDK does, since I know they do some integration tests? @rainersigwald would know.",
        "createdAt": "2020-10-20T00:53:04Z",
        "updatedAt": "2020-10-20T00:53:04Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "The difficulty in running RPS tests is that they're Visual Studio scenario tests, so we have to do a full build of MSBuild and \"insert\" it into VS to get our bits tested.\r\n\r\n> I kinda think RPS tests some Core scenarios, too?\r\n\r\nNo current RPS tests run MSBuild on .NET Core or `dotnet` CLI, because you can't do that from Visual Studio.\r\n\r\nI'm not aware of any regularly-run perf tests for MSBuild/.NET Core. I would expect some effort spent on those scenarios in .NET 6, since we expect inner-loop build perf to be a significant scenario for that release.",
        "createdAt": "2020-10-20T14:14:55Z",
        "updatedAt": "2020-10-20T14:14:55Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "So say I have some experimental runtime/jit changes that might impact MSBuild performance. Is there some way to measure what the impact might be?\r\n\r\nInitially I'd be happy with very simple things, say just running MSBuild against a runtime I build myself on some interesting input set.",
        "createdAt": "2020-10-20T16:53:58Z",
        "updatedAt": "2020-10-20T16:53:58Z",
        "author": {
          "login": "AndyAyersMS"
        }
      },
      {
        "body": "[This](https://github.com/dotnet/msbuild/blob/master/documentation/specs/event-source.md) might help.\r\n\r\nWe have ETW traces at various points in our build, so if you have the interesting input set, you can turn on tracing using that and see what happens. If the current events don't capture the information you want, I'd be happy to help you add new events, too.",
        "createdAt": "2020-10-20T17:20:30Z",
        "updatedAt": "2020-10-20T17:20:30Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@AndyAyersMS We don't have anything that would be great for that right now. @brianrob did some work on simple scenarios like `dotnet new; dotnet build` but I don't know if it generalizes.",
        "createdAt": "2020-10-20T20:37:11Z",
        "updatedAt": "2020-10-20T20:37:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> So say I have some experimental runtime/jit changes that might impact MSBuild performance. Is there some way to measure what the impact might be?\r\n\r\nI have started looking at something that might help with this https://github.com/dotnet/msbuild/issues/5746 but it's not quite done yet.",
        "createdAt": "2020-10-21T03:38:08Z",
        "updatedAt": "2020-10-21T03:38:08Z",
        "author": {
          "login": "mfkl"
        }
      },
      {
        "body": "@AndyAyersMS, I think it might be useful to test your changes on the SDK perf tests.  Much of what is tested there is msbuild.  @billwert can probably help here.",
        "createdAt": "2020-10-23T03:54:28Z",
        "updatedAt": "2020-10-23T03:54:28Z",
        "author": {
          "login": "brianrob"
        }
      },
      {
        "body": "@AndyAyersMS Check out https://github.com/dotnet/performance/blob/master/docs/sdk-scenarios.md. Let me know if you need help.\r\n\r\nThese are ports of perf tests that were used in dotnet/sdk. ",
        "createdAt": "2020-10-23T18:14:52Z",
        "updatedAt": "2020-10-23T18:14:52Z",
        "author": {
          "login": "billwert"
        }
      },
      {
        "body": "Thanks... not working for me though.\r\n```\r\n \u26a1 andya@ANDYA-SB \ue0b0 C:\\..\\performance\\..\\..\\emptyconsoletemplate \ue0b0 \ue0a0 master \u2263 +8 ~0 -0 ! \ue0b0 python test.py sdk clean_build\r\n[2020/10/23 11:30:56][INFO] ----------------------------------------------\r\n[2020/10/23 11:30:56][INFO] Initializing logger 2020-10-23 11:30:56.492246\r\n[2020/10/23 11:30:56][INFO] ----------------------------------------------\r\n[2020/10/23 11:30:56][INFO] $ C:\\repos\\performance\\artifacts\\startup\\Startup.exe --app-exe dotnet --metric-type ProcessTime --trace-name emptycsconsoletemplate_SDK_clean_build_startup --gui-app false --process-will-exit true --iterations 5 --timeout 50 --warmup true --working-dir app --report-json-path traces\\perf-lab-report.json --trace-directory traces --app-args build --environment-variables MSBUILDDISABLENODEREUSE=1;DOTNET_MULTILEVEL_LOOKUP=0 --iteration-setup py --setup-args \"-3 C:\\repos\\performance\\src\\scenarios\\shared\\sdk_iteration_setup.py setup_build\" --iteration-cleanup py --cleanup-args \"-3 C:\\repos\\performance\\src\\scenarios\\shared\\sdk_iteration_setup.py cleanup\"\r\n[2020/10/23 11:30:57][INFO] Unrecognized command or argument '--trace-name'\r\n[2020/10/23 11:30:57][INFO] Unrecognized command or argument 'emptycsconsoletemplate_SDK_clean_build_startup'\r\n\r\n \u26a1 andya@ANDYA-SB \ue0b0 C:\\..\\performance\\..\\..\\emptyconsoletemplate \ue0b0 \ue0a0 master \u2263 +8 ~0 -0 ! \ue0b0 python --version\r\nPython 3.7.4\r\n```",
        "createdAt": "2020-10-23T18:34:32Z",
        "updatedAt": "2020-10-23T18:34:32Z",
        "author": {
          "login": "AndyAyersMS"
        }
      },
      {
        "body": "I moved this comment to a new [issue](https://github.com/dotnet/performance/issues/1557) and we can talk about it there.",
        "createdAt": "2020-10-23T18:39:37Z",
        "updatedAt": "2020-10-23T18:39:37Z",
        "author": {
          "login": "billwert"
        }
      }
    ]
  }
}