{
  "number": 11011,
  "title": "Silent glob expansion failure on `**.ext`",
  "body": "### Issue Description\n\nWhen a recursive-directory glob `**` is used directly with an extension, like `**.cs` instead of `**\\*.cs`, it can silently fail to expand.\n\n### Steps to Reproduce\n\n```xml\n<Project>\n  <ItemGroup>\n    <I Include=\"**.proj\" />\n  </ItemGroup>\n\n  <Target Name=\"Printer\">\n    <Message Importance=\"High\" Text=\"I: @(I)\" />\n  </Target>\n</Project>\n```\n\nIn a file named `GlobDoesNotExpand.proj`\n\n\n### Expected Behavior\n\n```sh-session\n\u276f msbuild .\\GlobDoesNotExpand.proj -v:m\nMSBuild version 17.13.0-preview-24563-01+c49eee220 for .NET Framework\n\n  OnlyDirectoryGlob: GlobDoesNotExpand.proj\n  DirectoryAndFile: GlobDoesNotExpand.proj\n```\n\n### Actual Behavior\n\n```sh-session\n\u276f msbuild .\\GlobDoesNotExpand.proj -v:m\nMSBuild version 17.13.0-preview-24563-01+c49eee220 for .NET Framework\n\n  OnlyDirectoryGlob: **.proj\n  DirectoryAndFile: GlobDoesNotExpand.proj\n```\n\n### Analysis\n\nThis can be hard to find because it looks like the C# compiler will accept `..\\OtherDirectory\\**.cs` on the command line and expand it. A Microsoft internal team hit it due to a failure in SourceLink's `GetUntrackedFiles` task, which didn't expand the glob itself (and shouldn't be expected to IMO).\n\n### Versions & Configurations\n\n_No response_",
  "state": "OPEN",
  "createdAt": "2024-11-20T16:10:22Z",
  "updatedAt": "2025-02-11T06:30:55Z",
  "closedAt": null,
  "author": {
    "login": "rainersigwald"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [
    "Priority:2",
    "triaged"
  ],
  "comments": {
    "nodes": []
  }
}