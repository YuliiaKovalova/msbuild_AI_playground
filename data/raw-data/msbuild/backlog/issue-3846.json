{
  "number": 3846,
  "title": "Unexpected assembly version in assembly manifest",
  "body": "## Summary\r\nMSBuild is generating assemblies with unexpected assembly versions in their manifests.\r\n\r\n### Steps to reproduce\r\nI've created a [minimal reproduction repository](https://github.com/JeremyTCD/IssueReproduction.AssemblyManifestTest) for this issue. The following are its contents:\r\n\r\n- AssemblyManifestTest.csproj:\r\n  ```xml\r\n  <Project Sdk=\"Microsoft.NET.Sdk\">\r\n      <PropertyGroup>\r\n          <TargetFramework>netstandard2.0</TargetFramework>\r\n      </PropertyGroup>\r\n      <ItemGroup>\r\n        <PackageReference Include=\"System.Buffers\" Version=\"4.5.0\" />\r\n      </ItemGroup>\r\n  </Project>\r\n  ```\r\n\r\n- Test.cs:\r\n  ```\r\n  using System.Buffers;\r\n\r\n  namespace AssemblyManifestTest\r\n  {\r\n      class Test\r\n      {\r\n          public void DoSomething()\r\n         {\r\n              byte[] test = ArrayPool<byte>.Shared.Rent(10);\r\n          }\r\n      }\r\n  }\r\n  ```\r\n  Simple class that utilizes types from the `System.Buffers` assembly.\r\n\r\nI build the project using:\r\n```\r\ndotnet msbuild\r\n```\r\nwhere `dotnet msbuild -version` prints:\r\n```\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n15.7.179.6572\r\n```\r\n\r\n### Expected  behavior\r\nThe `System.Buffers` Nuget package (v4.5.0) multi-targets `netstandard2.0` and `netstandard1.0`. Its `netstandard2.0` folder contains the version `4.0.3` assembly whilst its `netstandard1.0` folder contains the `4.0.2` assembly.  \r\n\r\nTherefore, the generated assembly, \"bin/release/**netstandard2.0**/AssemblyManifestTest.dll\", should have the following dependency in its manifest:\r\n```\r\n.assembly extern System.Buffers\r\n{\r\n  .publickeytoken = (CC 7B 13 FF CD 2D DD 51 )\r\n  .ver 4:0:3:0\r\n}\r\n```\r\nNote the expected assembly version, `4:0:3:0`.\r\n\r\n### Actual behavior\r\nThe generated assembly, \"bin/release/**netstandard2.0**/AssemblyManifestTest.dll\", has the following dependency in its manifest:\r\n```\r\n.assembly extern System.Buffers\r\n{\r\n  .publickeytoken = (CC 7B 13 FF CD 2D DD 51 )\r\n  .ver 4:0:2:0\r\n}\r\n```\r\nNote the actual assembly version, `4:0:2:0`.\r\n\r\n### Why this is a problem\r\nWhen I reference the `AssemblyManifestTest` library from a `net462` console application, the following happens:\r\n- MSBuild grabs the version `4.0.3` assembly from the `netstandard2.0` folder.\r\n- The runtime throws a ` System.IO.FileLoadException` exception:\r\n  ```\r\n  System.IO.FileLoadException: Could not load file or assembly 'System.Buffers, Version=4.0.2.0, \r\n  Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located \r\n  assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: \r\n  0x80131040)\r\n  ```\r\nThe exception is thrown because the `System.Buffers` assembly version in `AssemblyManifestTest.dll` is unexpectedly `4.0.2` (and `System.Buffers` is strongly named).  \r\n\r\n### Notes \r\nThe generated `.deps` file, \"bin/release/**netstandard2.0**/AssemblyManifestTest.deps.json\", has the following depedency:\r\n```\r\n\"System.Buffers/4.5.0\": {\r\n        \"runtime\": {\r\n          \"lib/netstandard2.0/System.Buffers.dll\": {\r\n            \"assemblyVersion\": \"4.0.3.0\",\r\n            \"fileVersion\": \"4.6.26515.6\"\r\n        }\r\n    }\r\n}\r\n```\r\nIt correctly lists the \"assemblyVersion\" as \"4.0.3.0\", so it seems like just the assembly manifest that is off.\r\n\r\nEdit: Simplified example",
  "state": "CLOSED",
  "createdAt": "2018-10-10T07:51:48Z",
  "updatedAt": "2024-02-21T17:10:55Z",
  "closedAt": "2018-10-11T15:26:31Z",
  "author": {
    "login": "JeremyTCD"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I think the problem is that the package is slightly wrong:\r\n\r\n```\r\nildasm C:\\Users\\raines\\.nuget\\packages\\system.buffers\\4.5.0\\ref\\netstandard2.0\\System.Buffers.dll\r\n\r\n.assembly noplatform System.Buffers\r\n{\r\n  .ver 4:0:2:0\r\n}\r\n```\r\n\r\n```\r\nildasm C:\\Users\\raines\\.nuget\\packages\\system.buffers\\4.5.0\\lib\\netstandard2.0\\System.Buffers.dll\r\n\r\n.assembly System.Buffers\r\n{\r\n  .ver 4:0:3:0\r\n}\r\n```\r\n\r\nThe former (the reference assembly) is what is provided to the compiler and thus what gets baked into your assembly's manifest, but the latter is what's copied for use at runtime. Since the versions don't match, you get an error at runtime.\r\n\r\n@safern, I see you've made some changes to the `System.Buffers` package recently. Are you the right person to look into this? Should we move this issue to corefx?",
        "createdAt": "2018-10-10T15:45:11Z",
        "updatedAt": "2018-10-10T15:45:11Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "> @safern, I see you've made some changes to the System.Buffers package recently. Are you the right person to look into this? Should we move this issue to corefx?\r\n\r\nFrom the package version it is coming from release/2.1 and I did some work to harvest the reference assembly for netstandard2.0 -- so I think that is the issue. We might need to force the lib assembly version for ns2.0 to be 4.0.2.0 as we already do that for the ref: https://github.com/dotnet/corefx/blob/release/2.1/src/System.Buffers/ref/System.Buffers.csproj#L8\r\n\r\nSo yes, it seems like the harvesting could be the root cause here: https://github.com/dotnet/corefx/commit/f14366baaa80a893e53934b98e9786dac54c136f#diff-2205f80ba40246edf2098e04523def5aR8\r\n\r\n@weshaggard should we make the src assembly version 4.0.2.0 as well? https://github.com/dotnet/corefx/blob/release/2.1/src/System.Buffers/dir.props#L5\r\n\r\n",
        "createdAt": "2018-10-10T17:12:42Z",
        "updatedAt": "2018-10-10T17:12:42Z",
        "author": {
          "login": "safern"
        }
      },
      {
        "body": "Thanks for looking into this! Wasn't aware that reference assembly versions are used when generating the manifest.  \r\n\r\nThought I'd include the binding redirect I'm using in case anyone else encounters this issue:\r\n```xml\r\n<dependentAssembly>\r\n    <assemblyIdentity name=\"System.Buffers\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n    <bindingRedirect oldVersion=\"0.0.0.0-4.0.2.0\" newVersion=\"4.0.3.0\" />\r\n</dependentAssembly>\r\n```\r\n\r\nPlease feel free to move to corefx and close.",
        "createdAt": "2018-10-11T10:40:20Z",
        "updatedAt": "2018-10-11T10:40:20Z",
        "author": {
          "login": "JeremyTCD"
        }
      },
      {
        "body": "This issue was moved to dotnet/corefx#32767",
        "createdAt": "2018-10-11T15:26:30Z",
        "updatedAt": "2018-10-11T15:26:30Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}