{
  "number": 400,
  "title": "LogTaskInputs Property not being set on BuildParameters object within ProjectInstance",
  "body": "I've been working on implementing a UI shell for the Project object within a WinForm application in order to allow for the MSBuild process to be utilized through the UI of the WinForm application and expose logging realtime within the UI. \n\nAs part of this process I noticed a difference whilst running a test deployment where the commandline call to MSBuild.exe would generate a logfile containing Task input parameter log entries (on Diagnostic verbosity) but not when running the test deployment through the UI; an example as to what I mean is as below:\n\nTask \"Message\" (TaskId:4)\n  Task Parameter:Text=Please be patient, I need to sleep for a while whilst the old cache settles down... (TaskId:4)). \n\nIn order to investigate further I downloaded the code and found the following:\n\nWithin XMake.cs on line 820 the implementation of the BuildProject method goes at great lengths to ensure the logTaskInputs variable is set one way or another (I appreciate that a lot of work parsing the command line arguments also happen in the code before this method gets called, the results of which get passed into BuildProject). Eventually, on line 990 the BuildParameters object gets its LogTaskInputs property set and this then goes on through the code to eventually allow the logging of a Message comment in TaskExecutionHost, line 1340 within the InternalSetTaskParameter method where the If statement controlling this is prepended by a comment indicating \u201cLogging currently enabled only by an env var.\u201d. This led me to check the TaskExecutionHost constructor at line 156 which shows that if the BuidParameters instantiation that is past as part of the IBuildComponentHost passed into the constructor doesn\u2019t have LogTaskInputs set it\u2019ll try to load it from the MSBUILDLOGTASKINPUTS environment variable. \n\nTracking through further, I then found that from the Project object into the ProjectInstance object at line 1801 of ProjectInstance.cs the Build method call goes in to initialize a BuildParameters object which then gets fed parameters based on all the information passed to the Project object and gathered downstream of the initial call. What doesn\u2019t happen here however is the setting of the LogTaskInputs property which means it\u2019s left at its default of false. This is what I believe causes my custom ILogger implementations to skip logging the task input parameter log message in TaskExecutionHost and which means that effectively the verbosity setting passed into the custom logger is ignored. \n\nIn xmake.cs on line 887 a loop is initiated that goes through all the loggers passed to the code and the parameters from the command line get checked for the \u201cV=DIAG\u201d setting. Would it make sense to have this same loop run when the BuildParameters object gets set within the ProjectInstance code and use the Verbosity property of the ILogger interface to determine whether any logger has been set to LoggerVerbosity.Diagnostic? \n",
  "state": "CLOSED",
  "createdAt": "2015-12-11T17:07:04Z",
  "updatedAt": "2024-02-21T17:29:33Z",
  "closedAt": "2020-01-03T05:59:52Z",
  "author": {
    "login": "JeanPierreDeTiege"
  },
  "labels": [
    "help wanted",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I think code around logging could be cleaned up after the changes that went in for v14. Being able to control these options from the object model and custom loggers sounds like an entirely reasonable request.\n",
        "createdAt": "2015-12-15T23:03:40Z",
        "updatedAt": "2015-12-15T23:03:40Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I believe this was fixed by https://github.com/microsoft/msbuild/pull/3253.\r\n\r\nI'm going to close the issue but please feel free to reactivate or open a new one if you feel like something is still not right.",
        "createdAt": "2020-01-03T05:59:52Z",
        "updatedAt": "2020-01-03T05:59:52Z",
        "author": {
          "login": "KirillOsenkov"
        }
      }
    ]
  }
}