{
  "number": 8422,
  "title": "Developers get faster inner loop via optimized RAR in MS BUILD ",
  "body": "# Background\r\n\r\nResolveAssemblyReferences (RAR) remains to be one of the most expensive targets in incremental builds. It runs on each build, by design, and while there have been several improvements in the past, we believe that it can be optimized further. For example, thanks to the MSBuild server feature, we can look at the target and the underlying task through the prism of a long-running process and investigate the potential use of file watchers to catch dependent file updates. It is also likely that many RAR features are no longer relevant for building modern .NET apps and can be by default disabled, yielding a measurable perf boost.\r\n\r\n## Tasks\r\n\r\n- [x] #8432\r\n- [x] #8441\r\n- [x] Implement new RAR design\r\n    - [x] #8634\r\n    - [x] #8635\r\n    - [x] #8636\r\n- [x] #8916\r\n- [x] #9044 \r\n\r\n# Justification\r\n1.  Faster incremental build leading to faster inner loop.\r\n2.  Particularly relevant to command line where incremental builds are not optimized at project level.\r\n3. Alings to OKR \"Generate 8 1P 'perf gains/COGS reduction' endorsements from moving to .NET 5+\" \r\n",
  "state": "CLOSED",
  "createdAt": "2023-02-08T12:26:25Z",
  "updatedAt": "2024-06-26T11:40:50Z",
  "closedAt": "2023-07-10T12:52:51Z",
  "author": {
    "login": "ladipro"
  },
  "labels": [
    "Area: Task: Resolve Assembly References (RAR)",
    "Priority:1",
    "triaged",
    "8.0"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "8.0P4"
  },
  "comments": {
    "nodes": [
      {
        "body": "This is now complete. Most of the changes shipped in .NET 8 Preview 6, CPU optimizations will ship in Preview 7.",
        "createdAt": "2023-07-10T12:52:51Z",
        "updatedAt": "2023-07-10T12:52:51Z",
        "author": {
          "login": "ladipro"
        }
      }
    ]
  }
}