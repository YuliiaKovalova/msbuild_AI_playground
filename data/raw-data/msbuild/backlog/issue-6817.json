{
  "number": 6817,
  "title": "`_projectDirectory` is not set on `ProjectItemInstance.TaskItems` returned by the build",
  "body": "When you run a build via the API and then inspect the `ResultsByTarget`, items in `TargetResult` won't have their `_projectDirectory` set, because `TaskItemFactory` calls this constructor on `ProjectItemInstance.TaskItem`:\r\nhttps://github.com/dotnet/msbuild/blob/e923c2b80f00ec373b1f35108d4aaa45b280aa8c/src/Build/Instance/ProjectItemInstance.cs#L2070-L2073\r\n\r\nhttps://github.com/dotnet/msbuild/blob/e923c2b80f00ec373b1f35108d4aaa45b280aa8c/src/Build/Instance/ProjectItemInstance.cs#L798\r\n\r\nCPS could have read the `FullPath` built-in metadata on the items, but it can't because since the `_projectDirectory` is not set on the items, it would use the current directory and produce wrong results. Instead CPS has its own logic to get the full path of items returned:\r\nhttps://github.com/dotnet/project-system/blob/6dcc31fa39ad6c922bfd73af553e37e7cdfd8b80/src/Microsoft.VisualStudio.ProjectSystem.Managed/ProjectSystem/LanguageServices/Handlers/AbstractEvaluationCommandLineHandler.cs#L204\r\n\r\nSince all the existing consumers seem to be fine with the current behavior, this is a low-pri bug that needs design. It may very well be that storing the project directory on the items may increase the memory pressure, or the project directory may get lost in translation across nodes (?) or not stored in the cache (?). I decided to still log the issue because a na\u00efve usage of the MSBuild API will result in incorrect results when getting the `FullPath` metadata value on the items.",
  "state": "OPEN",
  "createdAt": "2021-09-05T00:29:52Z",
  "updatedAt": "2024-02-21T16:28:24Z",
  "closedAt": null,
  "author": {
    "login": "KirillOsenkov"
  },
  "labels": [
    "needs-design",
    "Area: API",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}