{
  "number": 5849,
  "title": "Unify filtering of unnecessary analyzer nodes with the Roslyn logic",
  "body": "For the legacy project system, Roslyn has logic to avoid showing analyzer nodes in certain cases to keep the list smaller. In our CPS project system, these nodes are made by this code in this repo but there is no equivalent filtering.\r\n\r\nThe current Roslyn code (warning: it's being tweaked a bit for generators) is visible here: https://github.com/dotnet/roslyn/blob/d8eb54d3c56f3b8415eb713b94759bce085e13c7/src/VisualStudio/Core/Impl/SolutionExplorer/AnalyzerItem/AnalyzerItemSource.cs#L209",
  "state": "OPEN",
  "createdAt": "2020-10-29T22:21:31Z",
  "updatedAt": "2024-02-21T16:28:53Z",
  "closedAt": null,
  "author": {
    "login": "jasonmalinowski"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "(filed per the comment on https://github.com/dotnet/roslyn/pull/49050/files/4c15723d73ae5558f1d724d511ba5411b5c72157#r514497891)",
        "createdAt": "2020-10-29T22:24:08Z",
        "updatedAt": "2020-10-29T22:24:08Z",
        "author": {
          "login": "jasonmalinowski"
        }
      },
      {
        "body": "We attempted to do this in past, but I thought we were missing the right APIs and ended up needing to duplicate the logic of loading/finding analyzers, which is a bit problematic. Is there now an API that we can consume?",
        "createdAt": "2020-10-29T22:34:23Z",
        "updatedAt": "2020-10-29T22:34:23Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "It's unclear to me; it looks like the only internal bit is the dealing with analyzers with load errors, which is also conveniently commented out. So... \u00af\\_(\u30c4)_/\u00af",
        "createdAt": "2020-10-29T22:38:40Z",
        "updatedAt": "2020-10-29T22:38:40Z",
        "author": {
          "login": "jasonmalinowski"
        }
      },
      {
        "body": "Currently the top-level analyzer nodes are populated based on the results of target `CollectAnalyzersDesignTime` defined here:\r\n\r\nhttps://github.com/dotnet/project-system/blob/841f24f5ed628f5d32c88a030b9ce21f6225b589/src/Microsoft.VisualStudio.ProjectSystem.Managed/ProjectSystem/DesignTimeTargets/Microsoft.Managed.DesignTime.targets#L370-L371\r\n\r\nThe dependencies tree shouldn't have logic about specific types of dependency. Can we move any filtering logic to the SDK or MSBuild?",
        "createdAt": "2020-10-30T00:15:28Z",
        "updatedAt": "2020-10-30T00:15:28Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "We could move it to MSBuild, although I think we'd have to write another build task for that.",
        "createdAt": "2020-10-30T20:05:37Z",
        "updatedAt": "2020-10-30T20:05:37Z",
        "author": {
          "login": "jasonmalinowski"
        }
      },
      {
        "body": "MSBuild seems like the right place for this.\r\n\r\nNo Project System changes would be required. Should this issue be transferred, and if so to whom?",
        "createdAt": "2020-11-02T02:17:58Z",
        "updatedAt": "2020-11-02T02:17:58Z",
        "author": {
          "login": "drewnoakes"
        }
      },
      {
        "body": "What would the filtering logic have to look like? Are we adding metadata to the items or doing something else?",
        "createdAt": "2020-11-02T18:16:02Z",
        "updatedAt": "2020-11-02T18:16:02Z",
        "author": {
          "login": "jasonmalinowski"
        }
      },
      {
        "body": "Also, which MSBuild targets files would the changes have to go in?",
        "createdAt": "2020-11-02T18:17:04Z",
        "updatedAt": "2020-11-02T18:17:04Z",
        "author": {
          "login": "jasonmalinowski"
        }
      }
    ]
  }
}