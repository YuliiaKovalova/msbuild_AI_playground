{
  "number": 2441,
  "title": "Should GenerateBindingRedirects be running in a design-time build?",
  "body": "When running CompileDesignTime, GenerateBindingRedirects is running. Why?\r\n\r\nhttps://github.com/dotnet/sdk/issues/1496",
  "state": "CLOSED",
  "createdAt": "2017-08-16T09:14:26Z",
  "updatedAt": "2024-02-21T17:17:11Z",
  "closedAt": "2017-08-23T23:55:02Z",
  "author": {
    "login": "davkean"
  },
  "labels": [
    "Area: Performance",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Because `ResolveReferences` depends on it, and `CoreCompile` depends on that. I don't see a reason to avoid conditioning it on `DesignTimeBuild`.\r\n\r\nWhat I really want to know is why this isn't trivial to tell from the design-time build log. MSBuild should be (and apparently is) emitting logs of the format\r\n\r\n```\r\nTarget \"{0}\" in file \"{1}\" from project \"{2}\" (target \"{3}\" depends on it):\r\n```\r\n\r\nBut what I see in logs is\r\n\r\n```\r\n29>Target \"GenerateBindingRedirects\" in file \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\EntInt\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets\":\r\n```\r\n\r\nI can't see MSBuild ever forming that message in the debugger.",
        "createdAt": "2017-08-16T22:32:01Z",
        "updatedAt": "2017-08-16T22:32:01Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I suppose my question is not why is it scheduled, but rather what data is it producing that is interesting for a design-time build - by default projects turn off the warnings, etc around version conflicts that come from Csc- so what is Csc doing with this config that is interesting from a IntelliSense perspective?",
        "createdAt": "2017-08-17T00:17:58Z",
        "updatedAt": "2017-08-17T00:17:58Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@jaredpar Says that Csc doesn't read the binding redirects. Hmm, I was thinking it was scheduled before ResolveReferences because it was CoreCompile that had a dependency on it, but it sounds like something else is depending on it.",
        "createdAt": "2017-08-17T06:26:35Z",
        "updatedAt": "2017-08-17T06:26:48Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "Just ran across this: RAR accepts an app config as an input:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/b179f6fd5295b9a56a94c6feb29e06259a3b779c/src/Tasks/Microsoft.Common.CurrentVersion.targets#L1964-L1967\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/b179f6fd5295b9a56a94c6feb29e06259a3b779c/src/Tasks/Microsoft.Common.CurrentVersion.targets#L1999\r\n\r\nNot sure what it does with it.",
        "createdAt": "2017-08-23T19:37:08Z",
        "updatedAt": "2017-08-23T19:37:08Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "@jasonmalinoski pointed out to me that the compiler does accept app.config as input. There is a section in app.config which tells the compiler whether or not it should compare assembly identities while taking into Silverlight quirks.\r\n\r\nBut that's the app.config which is provided in the project file (to my understanding). Not the one which gets generated at the end which includes binding redirects. \r\n\r\n",
        "createdAt": "2017-08-23T19:43:24Z",
        "updatedAt": "2017-08-23T19:43:24Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "@rainersigwald RAR is probably using it as indicator on whether it should issue conflicts or not. What it should really do is \"always issue conflicts\" -> something later decides if we warn about said conflicts based on project type, app.config, etc. Don't think bug is really actionable at this time.",
        "createdAt": "2017-08-23T23:55:02Z",
        "updatedAt": "2017-08-23T23:55:02Z",
        "author": {
          "login": "davkean"
        }
      }
    ]
  }
}