{
  "number": 9152,
  "title": "EmbeddedResource is non-deterministic based on culture",
  "body": "### Describe the bug\r\nThe behavior of `<EmbeddedResource>` will change based on the culture settings of the current environment. By default it attempts to do culture specific resource handling. This is accomplished by taking the last portion of the file name, checking if it's a valid culture, if so then treat it like a culture specific resource. There is no way to override this behavior. \r\n\r\nThat means though if the final portion of your file name is a culture name on the current environment then it will be treated differently  than other resources. Different OS / runtimes can have different cultures which altogether makes for non-deterministic behavior. \r\n\r\n### To Reproduce\r\n\r\n1. Create a simple console app\r\n2. Create a file called _bin\\System.Reflection.Metadata.dll_. \r\n3. Include the following in your build file: \r\n\r\n```xml\r\n       <EmbeddedResource Include=\"bin\\System.Reflection.Metadata.dll\">\r\n          <LogicalName>net.Metadata</LogicalName>\r\n        </EmbeddedResource>\r\n```\r\n\r\n4. Build\r\n\r\nOn Windows using `dotnet build` or `msbuild` this will produce a binary that has an embedded resource named `net.Metadata`. On Linux it will not because `\"metadata\"` is a valid culture name. ",
  "state": "OPEN",
  "createdAt": "2023-08-22T20:17:50Z",
  "updatedAt": "2024-01-31T08:13:27Z",
  "closedAt": null,
  "author": {
    "login": "jaredpar"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I couldn't figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one area label.",
        "createdAt": "2023-08-22T20:17:55Z",
        "updatedAt": "2023-08-22T20:17:55Z",
        "author": {
          "login": "ghost"
        }
      },
      {
        "body": "This is blocking our ability to complete collection literals as we can't update to new reference assemblies that have the necessary type definitions\r\n\r\nhttps://github.com/dotnet/roslyn/pull/69614",
        "createdAt": "2023-08-22T20:18:50Z",
        "updatedAt": "2023-08-22T20:18:50Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "The target itself does not have this documentation but if you look into the underlying task you'll find [the work around](https://github.com/dotnet/msbuild/blob/2faecf202a13961b5c13bc5322bfa164e1bb7ddc/src/Tasks/AssignCulture.cs#L140). \r\n\r\n```xml\r\n<EmbeddedResource Include=\"bin\\System.Reflection.Metadata.dll\" WithCulture=\"false\">\r\n```\r\n\r\nThis does solve the problem but feels very undiscoverable. Seems like commenting the target itself would help immensely here. \r\n\r\nNote: the value must be `false` it cannot be other falsy values for MSBuild ",
        "createdAt": "2023-08-22T20:34:38Z",
        "updatedAt": "2023-08-22T20:35:00Z",
        "author": {
          "login": "jaredpar"
        }
      },
      {
        "body": "> Note: the value must be false it cannot be other falsy values for MSBuild\r\n\r\nThis is fixed for 17.8, thankfully, via https://github.com/dotnet/msbuild/pull/9156.",
        "createdAt": "2023-11-09T16:07:51Z",
        "updatedAt": "2023-11-09T16:09:07Z",
        "author": {
          "login": "baronfel"
        }
      }
    ]
  }
}