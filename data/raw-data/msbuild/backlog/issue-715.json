{
  "number": 715,
  "title": "MSB3243 warning is issued when project references two assemblies with same simple name, but with different strong names.",
  "body": "If you have a project referencing two assemblies with different strong names, but same simple name:\n\n```\nLibrary, Version=2.0.0.0, Culture=neutral, PublicKeyToken=63dc4c2e4fb85cbb\nLibrary, Version=1.0.0.0, Culture=neutral, PublicKeyToken=282ebfd59330c047\n```\n\n...MSBuild issues bogus warning MSB3243:\n\n```\n3>  There was a conflict between \"Library, Version=2.0.0.0, Culture=neutral, PublicKeyToken=63dc4c2e4fb85cbb\" and \"Library, Version=1.0.0.0, Culture=neutral, PublicKeyToken=282ebfd59330c047\".\n3>C:\\Program Files (x86)\\MSBuild\\15.0\\bin\\Microsoft.Common.CurrentVersion.targets(1820,5): warning MSB3243: No way to resolve conflict between \"Library, Version=2.0.0.0, Culture=neutral, PublicKeyToken=63dc4c2e4fb85cbb\" and \"Library, Version=1.0.0.0, Culture=neutral, PublicKeyToken=282ebfd59330c047\". Choosing \"Library, Version=2.0.0.0, Culture=neutral, PublicKeyToken=63dc4c2e4fb85cbb\" arbitrarily.\n```\n\nIn reality, both assemblies are given different aliases in project file:\n\n```\n    <ProjectReference Include=\"..\\Library1\\Library1.csproj\">\n      <Project>{5effb800-ff22-4fdd-a0b0-bdc04cd2862e}</Project>\n      <Name>Library1</Name>\n      <Aliases>Library1</Aliases>\n    </ProjectReference>\n    <ProjectReference Include=\"..\\Library2\\Library2.csproj\">\n      <Project>{1a61b570-2451-4632-94fe-4a467e7c339c}</Project>\n      <Name>Library2</Name>\n      <Aliases>Library2</Aliases>\n    </ProjectReference>\n```\n\n...and code uses extern alias directives to distinguish them:\n\n```\nextern alias Library1;\nextern alias Library2;\n\n```\n\nTake [repro solution](https://1drv.ms/u/s!AugYigYwj-wfzPU1edw6WZUgM8l3aQ) compile it, and add both Library.dll's to the GAC. Repro.exe works just fine.\n",
  "state": "OPEN",
  "createdAt": "2016-06-21T17:15:18Z",
  "updatedAt": "2024-02-21T16:38:33Z",
  "closedAt": null,
  "author": {
    "login": "srdjanjovcic"
  },
  "labels": [
    "help wanted",
    "backlog",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Did both get resolved to the GAC during build? I think that it's basically complaining that it doesn't know which one to copy.\n",
        "createdAt": "2016-06-24T17:41:40Z",
        "updatedAt": "2016-06-24T17:41:40Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "What if you mark them both `<Private>true</Private>`?\n",
        "createdAt": "2016-06-24T17:42:30Z",
        "updatedAt": "2016-06-24T17:42:35Z",
        "author": {
          "login": "davkean"
        }
      },
      {
        "body": "@davkean > What if you mark them both <Private>true</Private>?\n\nDoes not help. Warning is actually coming from task ResolveAssemblyReference.\n",
        "createdAt": "2016-06-24T18:42:22Z",
        "updatedAt": "2016-06-24T18:42:22Z",
        "author": {
          "login": "srdjanjovcic"
        }
      },
      {
        "body": "@davkean > Did both get resolved to the GAC during build? \n\nWarning exists with or without assemblies in the GAC. They have to be in GAC to be able to run Repro.exe.\n\nHere is how they got resolved (when they are in GAC, but I think it is same if they are not):\n\n```\n3>      References=\n3>          D:\\Projects\\Repro\\Library1\\bin\\Debug\\Library.dll\n3>                  Aliases=Library1\n3>                  BuildReference=true\n3>                  Configuration=Debug\n3>                  CopyLocal=false\n3>                  FullConfiguration=Debug|AnyCPU\n3>                  FusionName=Library, Version=1.0.0.0, Culture=neutral, PublicKeyToken=282ebfd59330c047\n3>                  ImageRuntime=v4.0.30319\n3>                  MSBuildSourceProjectFile=D:\\Projects\\Repro\\Library1\\Library1.csproj\n3>                  MSBuildSourceTargetName=GetTargetPath\n3>                  Name=Library1\n3>                  OriginalItemSpec=D:\\Projects\\Repro\\Library1\\bin\\Debug\\Library.dll\n3>                  OriginalProjectReferenceItemSpec=..\\Library1\\Library1.csproj\n3>                  OutputItemType=\n3>                  Platform=AnyCPU\n3>                  Private=true\n3>                  Project={5effb800-ff22-4fdd-a0b0-bdc04cd2862e}\n3>                  ProjectReferenceOriginalItemSpec=..\\Library1\\Library1.csproj\n3>                  ReferenceOutputAssembly=true\n3>                  ReferenceSourceTarget=ProjectReference\n3>                  ResolvedFrom=D:\\Projects\\Repro\\Library1\\bin\\Debug\\Library.dll\n3>                  SetConfiguration=Configuration=Debug\n3>                  SetPlatform=Platform=AnyCPU\n3>                  TargetPlatformIdentifier=Windows\n3>                  TargetPlatformMoniker=Windows,Version=7.0\n3>                  Targets=\n3>                  Version=1.0.0.0\n```\n",
        "createdAt": "2016-06-24T18:45:33Z",
        "updatedAt": "2016-06-24T18:45:33Z",
        "author": {
          "login": "srdjanjovcic"
        }
      },
      {
        "body": "I accidentally closed the issue...\n\n_P.R. GitHub annoyance: Why is there 'Close & Comment' button at all?_\n",
        "createdAt": "2016-06-24T18:46:38Z",
        "updatedAt": "2016-06-24T18:46:38Z",
        "author": {
          "login": "srdjanjovcic"
        }
      },
      {
        "body": "This warning does seem to mean that it can't pick which one to copy, but it triggers even if 0 or 1 of them are copy local.",
        "createdAt": "2018-11-20T01:08:36Z",
        "updatedAt": "2018-11-20T01:08:36Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "The issue also exists if the PublicKeyToken are the same and the binding redirection is done by hand (with of course different name for the different versions of the dll).\r\nThe assemblies are not both copied to the destination, only the latest one is and the MSB3243 warning is triggered.\r\nA work around is to mark the referenced assembly as private (Copy Local : false) and add the dll as item project and enable local copy for both.\r\nThe warning is still triggered but at least both assembly are present in the destination directory.\r\n\r\nThe expected behavior is:\r\n - no warning\r\n - both assembly copied to the destination directory\r\n\r\nMore details about the workaround [here](https://stackoverflow.com/questions/11550981/need-a-way-to-reference-2-different-versions-of-the-same-3rd-party-dll/58951998?noredirect=1#comment110005669_58951998).\r\nAnd a sample project [here](https://github.com/Orace/Hacks.NET/tree/master/OneLibraryTwoVersions)",
        "createdAt": "2020-06-04T17:26:37Z",
        "updatedAt": "2020-06-04T17:31:39Z",
        "author": {
          "login": "Orace"
        }
      }
    ]
  }
}