{
  "number": 2483,
  "title": "How can I apply a custom locale patch for dotnet cli?",
  "body": "Look at issue https://github.com/Microsoft/msbuild/issues/2349, I can check that a patch for custom locale will be supported from MSBuild 15.5.\r\nUntil official release of 15.5, I need to build with this feature. So, I tried to do as below.\r\n\r\nFirstly, I cloned the code(15.3.409.57025 version of MSBuild) in my local repository.\r\nAnd, I added custom locales in ```src/Tasks/CultureInfoCache.cs```.\r\n\r\n```\r\n #if !FEATURE_CULTUREINFO_GETCULTURES\r\n         // copied from https://github.com/aspnet/Localization/blob/5e1fb16071affd15f15b9c732833f3ae2ac46e10/src/Microsoft.Framework.Globalization.CultureInfoCache/CultureInfoList.cs\r\n         // removed the empty string from the list\r\n         private static readonly HashSet<string> HardcodedCultureNames = new HashSet<string>(StringComparer.OrdinalIgnoreCase)\r\n         {\r\n             \"af\",\r\n             \"af-ZA\",\r\n             \"am\",\r\n             \"bhb-IN\", // added\r\n             \"ckb-IQ\", // added\r\n```\r\n\r\nThen, after building msbuild I overwrote ```Microsoft.Build.Tasks.Core.dll``` to my dotnet cli.\r\nWhen checking the result of build, I can check above custom locales were added in resources. \r\nHowever, I have a couple of questions as below.\r\n\r\n#### 1. File size of ```Microsoft.Build.Tasks.Core.dll```\r\n    * dotnet cli 2.0.0 official version : 1.2MB\r\n    * local build with Visual Studio 2017 : 1.2MB\r\n    * local build with dotnet cli : 659KB\r\n#### Question : If I will use dotnet cli in linux, can I use this library which I built in dotnet cli of ubuntu? There is a difference in file size, though.\r\n\r\n#### 2. File which I have to replace\r\n#### Question : ```CultureInfoCache.cs``` is a file of Build.Tasks project. If so, can I replace only ```Microsoft.Build.Tasks.Core.dll``` file based on dotnet cli 2.0.0 official version? Isn't there any unexpected compatibility issue?\r\n\r\nWhich way would be better for my case?",
  "state": "CLOSED",
  "createdAt": "2017-08-30T10:17:35Z",
  "updatedAt": "2024-02-21T17:16:56Z",
  "closedAt": "2022-01-21T19:41:05Z",
  "author": {
    "login": "yhshin217"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "cc/ @lemmaa",
        "createdAt": "2017-08-30T10:27:39Z",
        "updatedAt": "2017-08-30T10:27:39Z",
        "author": {
          "login": "yhshin217"
        }
      },
      {
        "body": "@cdmihai Could you leave a comment?",
        "createdAt": "2017-09-08T10:10:47Z",
        "updatedAt": "2017-09-08T10:10:47Z",
        "author": {
          "login": "yhshin217"
        }
      },
      {
        "body": "> If I will use dotnet cli in linux, can I use this library which I built in dotnet cli of ubuntu? There is a difference in file size, though.\r\n\r\nThe dll is AnyCPU targetting netstandard1.3. Should be pretty portable. I am not quite sure what causes the difference in size though. Maybe the dotnet CLI dll is crossgened and maybe the VS compiled one is actually full framework (I am seeing 1.2mb size for full framework and ~600kb for .net core)\r\n\r\n> CultureInfoCache.cs is a file of Build.Tasks project. If so, can I replace only Microsoft.Build.Tasks.Core.dll file based on dotnet cli 2.0.0 official version? Isn't there any unexpected compatibility issue?\r\n\r\nIf your assembly is not signed, or its version does not match the version the other msbuild dlls depend upon, the CoreCLR might not load it and error out. You can experiment and see what works.",
        "createdAt": "2017-09-11T22:35:17Z",
        "updatedAt": "2017-09-11T22:37:00Z",
        "author": {
          "login": "cdmihai"
        }
      }
    ]
  }
}