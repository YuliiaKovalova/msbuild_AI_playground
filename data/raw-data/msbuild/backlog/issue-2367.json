{
  "number": 2367,
  "title": "Incorrect value for MSBuildExtensionsPath when using Microsoft.Build.dll in 64bits",
  "body": "Using the following project:\r\nhttps://github.com/emmanuelguerin/dotnet-builder/tree/bug64bits\r\n\r\nWhen running the project in 32 bits mode using MsBuild inside Visual Studio 2017 Entreprise 15.2 (build configuration Debug32), the build script returns correct `MSBuildExtensionsPath` value:\r\n```\r\nExtension Path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\r\n```\r\n\r\nWhen running the project in 64 bits mode (build configuration Debug) and using the DLL inside:\r\n`C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\amd64`, the `MSBuildExtensionsPath` variable is incorrectly initialized to:\r\n\r\n```\r\nExtension Path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\MSBuild\r\n```\r\n",
  "state": "CLOSED",
  "createdAt": "2017-07-31T12:53:30Z",
  "updatedAt": "2024-02-21T17:17:38Z",
  "closedAt": "2017-08-03T20:20:31Z",
  "author": {
    "login": "emmanuelguerin"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Please find a proposed patch (#2368) to solve the problem.\r\n\r\nAlso, as a workaround, one can create a valid instance of the `BuildEnvironment` singleton using the following code:\r\n\r\n```csharp\r\npublic static void Init() {\r\n   var assembly = Assembly.Load(new AssemblyName(\"Microsoft.Build\"));\r\n   if (!Environment.Is64BitProcess)\r\n     return;\r\n\r\n  // This code is a workaround so that MSBuild works in 64 bits mode\r\n  var singletonClass = assembly.GetType(\"Microsoft.Build.Shared.BuildEnvironmentHelper+BuildEnvironmentHelperSingleton\");\r\n  singletonClass.TypeInitializer.Invoke(null, null);\r\n  var singletonField = singletonClass.GetField(\"s_instance\");\r\n  var buildEnvironmentClass = assembly.GetType(\"Microsoft.Build.Shared.BuildEnvironment\");\r\n  var visualStudioMode = Enum.Parse(assembly.GetType(\"Microsoft.Build.Shared.BuildEnvironmentMode\"),\r\n                \"VisualStudio\");\r\n  var constructor = buildEnvironmentClass.GetConstructors()[0];\r\n  var newEnvironment = constructor.Invoke(new[]\r\n  {\r\n    visualStudioMode,\r\n    Path.Combine(@\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\msbuild.exe\"),\r\n    false, false, @\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\"\r\n  });\r\n  singletonField.SetValue(null, newEnvironment);\r\n}\r\n```",
        "createdAt": "2017-07-31T13:04:41Z",
        "updatedAt": "2017-07-31T13:05:42Z",
        "author": {
          "login": "emmanuelguerin"
        }
      }
    ]
  }
}