{
  "number": 6934,
  "title": "Question: How does one debug custom SDKs with NuGet resolver?",
  "body": "### Description\r\n\r\nI am creating a custom SDK which includes custom build tasks I would like to debug.\r\n\r\nThe SDK is referenced in the project file with:\r\n`<Project Sdk=\"My.Sdk/1.0.0\">`\r\nand can be built properly with either `dotnet build`  `msbuild -t:Build` or `VisualStudio 2019`\r\n\r\nFor debugging the custom tasks of `My.Sdk` I have tried to pack the SDK by specifying in the project file:\r\n`    <IncludeSymbols>true</IncludeSymbols>\r\n    <SymbolPackageFormat>snupkg</SymbolPackageFormat>`\r\nbut also \r\n`\r\n\t  <DebugType>embedded</DebugType>\r\n`\r\nto include debug symbols in the nuget package. \r\nAfter which, I published the primary and symbol packages to my local source.\r\n\r\nIn order to debug the build process, I configured the VS debugger to start `dotnet.exe` as an external executable and passed the:\r\n- `build` and \r\n- project file which references the custom SDK\r\n\r\nas parameters, hoping that the debugger would load necessary symbols and stop at the breakpoint. \r\nHowever, it fails to do so. \r\nIt builds the project correctly, but does not enter the debug session.\r\n\r\n### Question\r\n\r\n1. What is the proper way of debugging custom SDKs with the NuGet resolver?\r\n2. Is there a step in my process I am doing wrong, or am I missing something?\r\n\r\n### Workaround\r\n\r\nThe only way I have managed to debug my custom build tasks was to insert \r\n`System.Diagnostics.Debugger.Launch();` in the source code of the build tasks, which did not really seem to me as a proper way to do it.\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2021-10-11T20:53:30Z",
  "updatedAt": "2024-02-21T14:11:24Z",
  "closedAt": "2021-11-16T09:49:42Z",
  "author": {
    "login": "ivanpovazan"
  },
  "labels": [
    "needs-more-info",
    "author-responded",
    "needs-attention",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "> What is the proper way of debugging custom SDKs\r\n\r\nTo be clear, do you mean debugging specific tasks in an SDK? Or do you mean displaying information as the targets/tasks in the SDK are running?\r\n\r\n@dsplaisted might know more, does this issue belong in the sdk?",
        "createdAt": "2021-11-11T17:57:52Z",
        "updatedAt": "2021-11-11T17:57:52Z",
        "author": {
          "login": "benvillalobos"
        }
      },
      {
        "body": "There may be some process hops from the original `dotnet.exe` to the one that ends up running MSBuild.  Try setting `MSBUILDDEBUGONSTART=1` in your environment variables, then you should get a just in time debugger prompt when MSBuild starts up.\r\n\r\nSee https://github.com/dotnet/msbuild/blob/main/documentation/wiki/MSBuild-Tips-&-Tricks.md",
        "createdAt": "2021-11-11T21:28:43Z",
        "updatedAt": "2021-11-11T21:28:43Z",
        "author": {
          "login": "dsplaisted"
        }
      },
      {
        "body": "@dsplaisted Thank you very much env variable did the trick!",
        "createdAt": "2021-11-16T09:49:42Z",
        "updatedAt": "2021-11-16T09:49:42Z",
        "author": {
          "login": "ivanpovazan"
        }
      }
    ]
  }
}