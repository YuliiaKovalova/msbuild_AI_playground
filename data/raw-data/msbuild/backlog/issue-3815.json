{
  "number": 3815,
  "title": "Killed build .binlogs are empty",
  "body": "### **<u>Problem:</u> When I forcefully finish the execution of MSBuild.exe it doesn't flush any information to .binlog**\r\n\r\n\r\n\r\n#### Scenario to repro it:\r\n\r\nI have a custom task like so:\r\n\r\n```c#\r\npublic class TaskTeste : Task, ICancelableTask\r\n{\r\n    private readonly CancellationTokenSource cts = new CancellationTokenSource();\r\n\r\n    public void Cancel() => cts.Cancel();\r\n\r\n    public override bool Execute()\r\n    {\r\n        return cts.Token.WaitHandle.WaitOne(TimeSpan.FromSeconds(5));\r\n    }\r\n}\r\n```\r\n\r\nand I've a `.proj` file that uses it, like so:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project>\r\n     <UsingTask TaskName=\"TaskTeste\" AssemblyFile=\"C:\\task-path\\TaskTest.dll\" />\r\n      <Target Name=\"MyTarget\">\r\n              <TaskTeste />\r\n      </Target>\r\n</Project>\r\n```\r\n\r\nand I execute the project like this:\r\n\r\n```powershell\r\nmsbuild Testing.proj /bl:InnerCall.binlog\r\n```\r\n\r\nand after a few seconds I kill the `msbuild.exe` process using:\r\n\r\n```\r\ntaskkill /F /IM msbuild.exe\r\n```\r\n\r\nAfter this, I expected the `innerCall.binlog` file to contain some information about the project execution. But it turns out the file is always empty. By the way, an `InnerCall.ProjectImports.zip` file is created, however that file isn't created when I let the process successfully finish.\r\n\r\nCc: @rainersigwald ",
  "state": "OPEN",
  "createdAt": "2018-10-01T18:45:04Z",
  "updatedAt": "2024-02-21T16:32:42Z",
  "closedAt": null,
  "author": {
    "login": "JohnTortugo"
  },
  "labels": [
    "Area: Logging",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "KirillOsenkov"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@JohnTortugo the reason InnerCall.ProjectImports.zip is not created in the normal case is because it is embedded directly into the .binlog and then deleted. The fact that the file stays there means the .binlog finalizer didn't run.",
        "createdAt": "2018-10-01T23:50:27Z",
        "updatedAt": "2018-10-01T23:50:27Z",
        "author": {
          "login": "KirillOsenkov"
        }
      },
      {
        "body": "@JohnTortugo have you tried without /f? \r\nI have seen that if you let msbuild handle the cancel gracefully (not forcing immediate exit/kill) then it has time to cancel running tasks and finalize things.",
        "createdAt": "2019-04-06T16:53:29Z",
        "updatedAt": "2019-04-06T16:53:29Z",
        "author": {
          "login": "japj"
        }
      }
    ]
  }
}