{
  "number": 4229,
  "title": "Error MSB4216 when building a project that holds a reference to an x86 project with a resource file",
  "body": "The attached solution contains three projects:\r\n- TestRandom, a simple .Net app that holds a reference to\r\n- TestX86: a .Net app that has Platform Target set to x86 and has a resources file (with a single string resource)\r\n- TestBuildProject: another simple .Net app that uses Microsoft.Build.Evaluation.Project.Build() to build TestRandom.\r\n\r\nThe full exception message is:\r\nC:\\Program Files (x86)\\MSBuild\\12.0\\bin\\amd64\\Microsoft.Common.CurrentVersion.targets(2554,5): error MSB4216: Could not run the \"GenerateResource\" task because MSBuild could not create or connect to a task host with runtime \"CLR4\" and architecture \"x86\".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\MSBuild.exe\" exists and can be run.\r\nC:\\Program Files (x86)\\MSBuild\\12.0\\bin\\amd64\\Microsoft.Common.CurrentVersion.targets(2575,7): error MSB4028: The \"GenerateResource\" task's outputs could not be retrieved from the \"FilesWritten\" parameter. Object does not match target type.\r\n\r\nThis is an example project cut down from the full project that I use to build a large number of utility dlls.\r\n\r\nIf the resource is removed from TestX86, TestBuildProject runs fine.\r\nIf TestX86's Platform Target is set to 'any' or 'x64', TestBuildProject runs fine.\r\n\r\nMy test machine is running 64-bit Windows 10, Version 10.0.17134 Build 17134\r\n\r\n\r\n[TestRandom.zip](https://github.com/Microsoft/msbuild/files/2958154/TestRandom.zip)\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2019-03-12T18:00:58Z",
  "updatedAt": "2024-02-21T17:08:56Z",
  "closedAt": "2019-03-13T19:41:08Z",
  "author": {
    "login": "dockell"
  },
  "labels": [
    "Area: API",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "This is a symptom of an incomplete copy of MSBuild, which is arising because you reference some of the MSBuild packages but don't fully reconstruct an MSBuild environment.\r\n\r\nBut you don't want to have to do that! Instead, you can use the existing MSBuild environment on the machine. See the docs on [using MSBuildLocator to load MSBuild](https://docs.microsoft.com/en-us/visualstudio/msbuild/updating-an-existing-application) instead of directly referencing it in your application.",
        "createdAt": "2019-03-12T18:19:48Z",
        "updatedAt": "2019-03-12T18:19:48Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Thanks, Rainer, your suggestion worked. I'll try and close this now. Thanks for your help!",
        "createdAt": "2019-03-13T19:41:08Z",
        "updatedAt": "2019-03-13T19:41:08Z",
        "author": {
          "login": "dockell"
        }
      },
      {
        "body": "@rainersigwald In my project, I use a legacy DLL for which I don't have any further build files available so it is only `<Reference>`d in my `csproj` file using a `<HintPath>` to the plain DLL file. Is there any option to build the project anyway?",
        "createdAt": "2021-01-22T11:27:56Z",
        "updatedAt": "2021-01-22T11:27:56Z",
        "author": {
          "login": "LinqLover"
        }
      }
    ]
  }
}