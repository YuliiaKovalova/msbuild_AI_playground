{
  "number": 735,
  "title": "Enhance OM: Project.GetAllGlobs",
  "body": "Parent issue: #700 \n\nGoal: Add ability to introspect what globs exist in a project\n\nDesign so far:\n- Inputs\n  - itemType\n    - Scope for the specified item type\n- Return\n  - A project evaluation order sorted list of globs that resulted from Item Includes\n  - Each glob result also provides the ProjectItemElement and the exclude expression\n\nRemarks:\n- includes globs from referenced properties\n- Ignores indirect item references both in includes and excludes\n  - This means GlobResult.Excludes is incorrect when item references are present\n\n```\nList<GlobResult> GetAllGlobs()\nList<GlobResult> GetAllGlobs(string itemType)\n\nstruct GlobResult\n{\n    string glob\n    List<string> excludes\n    ProjectItemElement\n}\n```\n\n```\n<P>*.txt</P>\n1.     <Zar Include=\"C:\\**\\*.foo\"> (both outside and inside project cone)\n2.     <Foo Include=\"*.a\" Exclude=\"3.a\"/>\n4.     <Foo Include=\"**\\*.b\" Exclude=\"1.b;**\\obj\\*.b\";**\\bar\\*.b\"/>\n5.     <Foo Include=\"$(P)\"/> \n6.     <Foo Include=\"*.a;@(Bar);3.a\"/> (If Bar has globs, they will have been included when querying Bar ProjectItems for globs)\n8.      <Foo Include=\"*.cs\"/ Exclude=\"@(Bar)\"> (out of project cone glob)\n\nExample result: \n[\nGlobResult(glob: \"C:\\**\\*.foo\", exclude: []),\nGlobResult(glob: \"*.a\", exclude=[\"3.a\"]),\nGlobResult(glob: \"**\\*.b\", exclude=[\"1.b, **\\obj\\*.b\", **\\bar\\*.b\"]),\nGlobResult(glob: \"*.txt\", exclude=[]),\nGlobResult(glob: \"*.a\", exclude=[]),\nGlobResult(glob: \"*.cs\", exclude=[])\n]\n```\n\nAlternative:\n\nInstead of having this method, we could store this information in the OM. Potentially introduce more typing for item attrbutes: GlobFragment, LiteralFragment, ItemReferenceFragment, PropertyFragment.\nA projectitemelement would store these for each item referencing attribute (include, exclude, update, remove)\n",
  "state": "CLOSED",
  "createdAt": "2016-06-27T22:21:54Z",
  "updatedAt": "2024-02-21T17:27:27Z",
  "closedAt": "2016-08-26T21:02:12Z",
  "author": {
    "login": "cdmihai"
  },
  "labels": [
    "Feature - Globbing",
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "cdmihai"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": []
  }
}