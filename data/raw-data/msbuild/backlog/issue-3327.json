{
  "number": 3327,
  "title": "reproducible-builds; bit-for-bit identical binary",
  "body": "Currently msbuild will produce binaries, that are not bit-for-bit identical, even if the source code is identical.\r\n* same source code build on a different day will produce different binaries\r\n* same source code build on a different machine with same compiler and same tools will produce different binaries\r\n\r\nIt would be very helpful tool for error diagnosis, and build system verification if the binaries would be identical (for the same version of the compiler). \r\n\r\nadvantages (listed on https://github.com/jasonwhite/ducible):\r\n* confidence that two parties built a binary with the same environment,\r\n* recreating a release bit-for-bit from source code,\r\n* recreating debug symbols for a particular version of source code,\r\n* verifiable and correct distributed builds,\r\n* better caching of builds,\r\n* no spurious changes in binaries under version control.\r\n\r\nThere is another github project concering this issue:\r\nhttps://github.com/jasonwhite/ducible\r\nhttps://reproducible-builds.org/ \r\n",
  "state": "OPEN",
  "createdAt": "2018-05-18T12:33:55Z",
  "updatedAt": "2024-02-21T16:34:00Z",
  "closedAt": null,
  "author": {
    "login": "uliversum"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "MSBuild the engine only interprets your build script and executes other programs to produce a build.  The compilers are responsible for generating assemblies from source code.  The managed compilers (csc.exe and vb.exe) have `/deterministic` which I believe [does what you're talking about](http://blog.paranoidcoding.com/2016/04/05/deterministic-builds-in-roslyn.html).  I'm not sure if the native compiler has the same functionality.\r\n\r\nEither way, we'll probably want to move this issue to the respective compilers for consideration.",
        "createdAt": "2018-05-18T14:04:21Z",
        "updatedAt": "2018-05-18T14:04:21Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  }
}