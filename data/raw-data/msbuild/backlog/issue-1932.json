{
  "number": 1932,
  "title": "[REGRESSION] Metadata reference in a property function doesn't get expanded",
  "body": "```\r\n<Project>\r\n        <ItemGroup>\r\n            <ResxCode Include=\"Resources\\Translation.resx\">\r\n              <WithNew>$([System.String]::new('%(RelativeDir)').TrimEnd('\\'))</WithNew>\r\n            </ResxCode>\r\n        </ItemGroup>\r\n        <Target Name=\"Main\">\r\n                <Message Text=\"WithNew: %(ResxCode.WithNew)\"/>\r\n        </Target>\r\n</Project>\r\n```\r\n\r\nExpected result:\r\n`WithNew: Resources/`\r\n\r\nActual result:\r\n`WithNew: %(RelativeDir)`\r\n\r\nReverting `816d37362bc34a6dd754607cad8c601ae8f13000` fixes the issue:\r\n\r\n```\r\ncommit 816d37362bc34a6dd754607cad8c601ae8f13000\r\nAuthor: Mihai Codoban <micodoba@microsoft.com>\r\nDate:   Thu Mar 23 13:09:56 2017 -0700\r\n\r\n    Expand metadata properties earlier (#1896)\r\n\r\n    * Expand metadata properties at operation construction instead of operation application\r\n\r\n    Fixes #1359\r\n\r\n    If properties are not expanded at operation construction, potential indirect item references via those properties will get missed, and thus evaluate to empty during operation application.\r\n\r\n    Side effect change: if metadata properties are evalauted early, there's no use for operation application to expand them yet again, so cache the property expansion during operation construction and use the cached values during operation application. This should also be a perf improvement when metadata references are present within metadata, as that triggers the re-evaluation of all metadata elements for each item instance.\r\n\r\n    * Add ItemSpec ToString\r\n\r\n    Better debugging info\r\n```\r\n\r\nThis breaks `netfx-System.StringResources.3.0.13` also.",
  "state": "CLOSED",
  "createdAt": "2017-04-03T17:47:10Z",
  "updatedAt": "2024-02-21T17:20:14Z",
  "closedAt": "2017-04-05T21:03:43Z",
  "author": {
    "login": "radical"
  },
  "labels": [
    "bug",
    "regression",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "MSBuild 15.3"
  },
  "comments": {
    "nodes": [
      {
        "body": "Fix in PR #1933 works for me. It essentially just reverts the optimization from the earlier commit. Does it look sane?",
        "createdAt": "2017-04-03T20:45:10Z",
        "updatedAt": "2017-04-03T20:45:10Z",
        "author": {
          "login": "radical"
        }
      }
    ]
  }
}