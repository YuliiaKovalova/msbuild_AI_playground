{
  "number": 1515,
  "title": "MsBuild15 copying package reference assemblies to output for .NET Standard libraries",
  "body": "Hi,\r\nI am using VS2017RC to create a .NET Standard library.\r\nWhen I do that and build the binaries, the package reference assemblies (System.Linq.dll, System.Net.dll etc etc) are not copied to the output path.\r\nWhen I create a UWP application, however, all the dependencies are copied.\r\nI can't seem to find any configurations for whether or not to copy the dependencies to output neither in VS2017RC nor via the .csproj file directly.\r\n\r\nIs there any way to achieve copying of all the package references to output?",
  "state": "CLOSED",
  "createdAt": "2017-01-06T13:03:07Z",
  "updatedAt": "2024-02-21T17:23:03Z",
  "closedAt": "2017-01-06T17:06:29Z",
  "author": {
    "login": "Snipx"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I think this is by design at the moment.  Class libraries are not runnable so when you build it there is no point in placing dependencies in the output folder.  However, when you build a runnable application like a Windows or Console app, then you need the full closure of dependencies.  It might work if you do a publish but I'm not sure if that really gets you anything.  The biggest issue I've seen with this is for unit tests which are usually class libraries, are runnable, and need all dependencies.  The advice I've seen is to target `netcoreapp1.0` and build an executable.  \r\n\r\nTechnically MSBuild doesn't own this logic as the .NET Core team owns the SDK for building .NET Core apps, the UWP team owns their SDK, etc.  If you're trying to build a .NET Core app, I'd recommend you look over at https://github.com/dotnet/sdk.  If you can't get any more clarification on your issue, feel free to re-open and I'll see if I can track someone down.",
        "createdAt": "2017-01-06T17:06:29Z",
        "updatedAt": "2017-01-06T17:06:29Z",
        "author": {
          "login": "jeffkl"
        }
      }
    ]
  }
}