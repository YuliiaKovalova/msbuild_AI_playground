{
  "number": 11565,
  "title": "Microsoft.Build.Framework not working on Arm64",
  "body": "### Issue Description\n\nOur project depends on slngen, which seems to rely on the Microsoft.Build.Framework package.\n\nHowever, when running on an Arm64 device, it fails with the following stack:\n\n```\nSlnGen version 12.0.13+38918ad651 for .NET Framework\nCopyright (c) Microsoft Corporation.  Licensed under the MIT license.\n\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\nFile name: 'Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\n   at Microsoft.VisualStudio.SlnGen.Program.Execute(ProgramArguments arguments, IConsole console)\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at McMaster.Extensions.CommandLineUtils.Conventions.ExecuteMethodConvention.Invoke(MethodInfo method, Object instance, Object[] arguments)\n   at McMaster.Extensions.CommandLineUtils.Conventions.ExecuteMethodConvention.<OnExecute>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at McMaster.Extensions.CommandLineUtils.Conventions.ExecuteMethodConvention.<>c__DisplayClass0_0.<<Apply>b__0>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at McMaster.Extensions.CommandLineUtils.CommandLineApplication.<ExecuteAsync>d__154.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at McMaster.Extensions.CommandLineUtils.CommandLineApplication.<ExecuteAsync>d__183`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at McMaster.Extensions.CommandLineUtils.CommandLineApplication.Execute[TApp](CommandLineContext context)\n   at Microsoft.VisualStudio.SlnGen.Program.Execute(String[] args, IConsole console)\n\n=== Pre-bind state information ===\nLOG: DisplayName = Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\n (Fully-specified)\nLOG: Appbase = file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/arm64/amd64\nLOG: Initial PrivatePath = NULL\nCalling assembly : slngen, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.\n===\nLOG: This bind starts in LoadFrom load context.\nWRN: Native image will not be probed in LoadFrom context. Native image will only be probed in default load context, like with Assembly.Load().\nLOG: No application configuration file found.\nLOG: Using host configuration file:\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\config\\machine.config.\nLOG: Post-policy reference: Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/arm64/amd64/Microsoft.Build.Framework.DLL.\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/arm64/amd64/Microsoft.Build.Framework/Microsoft.Build.Framework.DLL.\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/arm64/amd64/Microsoft.Build.Framework.EXE.\nLOG: Attempting download of new URL file:///C:/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin/arm64/amd64/Microsoft.Build.Framework/Microsoft.Build.Framework.EXE.\nLOG: Attempting download of new URL file:///i:/packages/nuget/microsoft.visualstudio.slngen.tool/12.0.13/tools/slngen/net472/Microsoft.Build.Framework.DLL.\nLOG: Attempting download of new URL file:///i:/packages/nuget/microsoft.visualstudio.slngen.tool/12.0.13/tools/slngen/net472/Microsoft.Build.Framework/Microsoft.Build.Framework.DLL.\nLOG: Attempting download of new URL file:///i:/packages/nuget/microsoft.visualstudio.slngen.tool/12.0.13/tools/slngen/net472/Microsoft.Build.Framework.EXE.\nLOG: Attempting download of new URL file:///i:/packages/nuget/microsoft.visualstudio.slngen.tool/12.0.13/tools/slngen/net472/Microsoft.Build.Framework/Microsoft.Build.Framework.EXE.\n```\n\nThere appears to be a couple of issues here:\n1. The path where it's looking has both arm64 and amd64 in it: `MSBuild/Current/Bin/arm64/amd64/Microsoft.Build.Framework`.\n2. If you look in `C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\arm64` where you'd expect the dll to be (akin to its amd64 version), there is no `Microsoft.Build.Framework.dll`\n\n![Image](https://github.com/user-attachments/assets/e68e1dc3-11fa-43f8-8695-45c27651a12e)\n\n![Image](https://github.com/user-attachments/assets/9ee6d646-2992-44bb-8c34-a549624fc6d2)\n\n### Steps to Reproduce\n\n1. Clone repo `git clone --recurse-submodules https://github.com/CommunityToolkit/Windows.git`\n2. Turn on assembling binding logging:\n```\nWRN: Assembly binding logging is turned OFF.\nTo enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\nNote: There is some performance penalty associated with assembly bind failure logging.\nTo turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\n```\n3. Run `GenerateAllSolution.bat` from repo root (which runs slngen)\n4. See stack provided above\n\n### Expected Behavior\n\nslngen runs without issue as it can use Arm64 version of Microsoft.Build.Framework.\n\n### Actual Behavior\n\nUnable to find/load Arm64 version of Microsoft.Build.Framework\n\n### Analysis\n\n_No response_\n\n### Versions & Configurations\n\n_No response_",
  "state": "CLOSED",
  "createdAt": "2025-03-11T00:12:39Z",
  "updatedAt": "2025-03-27T14:22:46Z",
  "closedAt": "2025-03-25T13:05:15Z",
  "author": {
    "login": "michael-hawker"
  },
  "milestone": null,
  "assignees": {
    "nodes": []
  },
  "labels": [],
  "comments": {
    "nodes": [
      {
        "body": "Hi @jeffkl ,\n\nCould you please check if it should be transferred to to https://github.com/microsoft/slngen repo?",
        "createdAt": "2025-03-17T12:04:10Z",
        "author": {
          "login": "YuliiaKovalova"
        }
      },
      {
        "body": "This issue has been transferred to https://github.com/microsoft/slngen/issues/676",
        "createdAt": "2025-03-25T13:05:15Z",
        "author": {
          "login": "maridematte"
        }
      },
      {
        "body": "@maridematte I'm not sure if this is an issue with slngen, shouldn't there be an `Microsoft.Build.Framework.dll` in the arm64 folder `C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\arm64`? (That then slngen would find/use? Or maybe there's an issue both here and there?)",
        "createdAt": "2025-03-25T18:29:06Z",
        "author": {
          "login": "michael-hawker"
        }
      },
      {
        "body": "> shouldn't there be an `Microsoft.Build.Framework.dll` in the arm64 folder `C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\arm64`?\n\nNo--MSBuild assemblies are AnyCPU and should be loaded from the `MSBuild\\Bin` directory regardless of the architecture of the calling application. Attempting to load from an architecture-specific subdirectory is a bug in the calling app.\n\n(It's a bug that's been fairly common because we have copies of many assemblies in the `amd64` folder, though, so some tools have had the bug for a long time unknowingly. Slngen is able to release quickly so I would prefer to fix this there.)",
        "createdAt": "2025-03-27T14:22:45Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}