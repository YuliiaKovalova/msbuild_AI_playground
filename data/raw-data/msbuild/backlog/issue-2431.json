{
  "number": 2431,
  "title": "ProduceReferenceAssembly causes stale assemblies in legacy C# project system",
  "body": "**Version used**: VS15.3\r\n\r\n**Reproduction steps:**\r\n1. Create a new .NET 4.7 console application\r\n1. Add a class library project\r\n1. Add a project reference from the console application to the class library\r\n1. Unload the class library and add this to the first unconditional property group\r\n    ```xml\r\n    <Deterministic>true</Deterministic>\r\n    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>\r\n    ```\r\n1. Reload the class library\r\n1. (optional, doesn't change the outcome) Close VS and remove the .vs, obj and bin folder and reopen VS\r\n1. In the class library project, add a class like the following:\r\n    ```csharp\r\n    using System;\r\n\r\n    namespace Lib\r\n    {\r\n        public static class Tester\r\n        {\r\n            public static void Test()\r\n            {\r\n                Console.WriteLine(\"Hello you\");\r\n            }\r\n        }\r\n    }\r\n    ```\r\n1. Call this method from the console application\r\n    ```csharp\r\n    using Lib;\r\n\r\n    namespace Startup\r\n    {\r\n        class Program\r\n        {\r\n            static void Main(string[] args)\r\n            {\r\n                Tester.Test();\r\n            }\r\n        }\r\n    }\r\n    ```\r\n1. Ensure that the console application is the startup project\r\n1. Start debugging by pressing F11\r\n1. Step through the entire program once to confirm everything is working as expected\r\n1. Stop debugging\r\n1. In the class library, modify `Console.WriteLine(\"Hello you\");` to `Console.WriteLine(\"Hello World\");`\r\n1. Save\r\n1. Start debugging again using F11\r\n1. Step into `Tester.Test();`\r\n\r\n**Expected Result**\r\nWorks the same as the first time\r\n\r\n**Actual Result**\r\n`the source file is different from when the module was built`",
  "state": "OPEN",
  "createdAt": "2017-08-15T21:13:37Z",
  "updatedAt": "2024-02-21T16:36:06Z",
  "closedAt": null,
  "author": {
    "login": "Suchiman"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "@jcouv, did we get the reference-assembly-as-project-input fix into the legacy project system for 15.3? I remember it being tight for the new project system . . .",
        "createdAt": "2017-08-15T21:14:57Z",
        "updatedAt": "2017-08-15T21:14:57Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Only the new project system works, and still the feature is not finalized (consider beta). \r\nThe Roslyn team just started dogfooding. The plan is to announce for general availability in version 15.5, assuming we can iron out sufficiently. \r\n\r\n@srivatsn @pilchie can you triage/assign while I'm away? Thanks",
        "createdAt": "2017-08-15T23:24:50Z",
        "updatedAt": "2017-08-15T23:24:50Z",
        "author": {
          "login": "jcouv"
        }
      },
      {
        "body": ">  The plan is to announce for general availability in version 15.5, assuming we can iron out sufficiently.\r\n\r\nAny update on how well the feature works now that 15.5 is out?",
        "createdAt": "2017-12-10T02:54:33Z",
        "updatedAt": "2017-12-10T02:54:33Z",
        "author": {
          "login": "dasMulli"
        }
      },
      {
        "body": "Is this a duplicate of https://github.com/dotnet/project-system/issues/4079, which was closed \"won't fix\"? @tmeschter ",
        "createdAt": "2019-07-17T21:14:10Z",
        "updatedAt": "2019-07-17T21:14:10Z",
        "author": {
          "login": "nguerrera"
        }
      },
      {
        "body": "@nguerrera Related to https://github.com/dotnet/project-system/issues/4079, but this goes beyond the issues listed there. That is, fixing https://github.com/dotnet/project-system/issues/4079 is probably required but not sufficient to fix this.",
        "createdAt": "2019-07-18T16:41:09Z",
        "updatedAt": "2019-07-18T16:41:09Z",
        "author": {
          "login": "tmeschter"
        }
      },
      {
        "body": "@drewnoakes @donJoseLuis is there a better tracking item for this `csproj.dll` work? It's been lost here for years but we also keep talking about it internally.",
        "createdAt": "2021-10-22T19:58:36Z",
        "updatedAt": "2021-10-22T19:58:36Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}