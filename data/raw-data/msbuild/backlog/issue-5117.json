{
  "number": 5117,
  "title": "Document if CodeTaskFactory is deprecated",
  "body": "From RoslynCodeTaskFactory created by [malkia](https://github.com/malkia): jeffkl/RoslynCodeTaskFactory#41  \n\nToday, one of our teams experienced issues with CodeTaskFactory. Replacing it with RoslynCodeTaskFactory fixed the issue, but it was rather unexpected - no other code change was done, and the only other visible change was the Windows Update.\r\n\r\nSo I'm getting conflicting information whether CodeTaskFactory is deprecated, or not. Also not very straightforward answers.\r\n\r\nWe are not first-class users of it, but simply by reusing another .targets/.props file from the Qt Projec t (QtMsBuild) it actually used CodeTaskFactory and that's how it broke us.\r\n\r\nRef: https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2019\r\n\r\nAnd here is the message that we had today:\r\n\r\n```\r\n6>------ Build started: Project: SomeProject, Configuration: Release x64 ------\r\n6>...\\sdk\\qt\\qtmsbuild\\qt.targets(705,5): error MSB4175: The task factory \"CodeTaskFactory\" could not be loaded from the assembly \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\Microsoft.Build.Tasks.Core.dll\". A required privilege is not held by the client\r\n```\r\n\r\nAccording to some, this might've caused the change: \"KB4534132 Cumulative Update for .NET Framework 3.5 and 4.8 for Windows 10 Version 1903\"\r\n",
  "state": "CLOSED",
  "createdAt": "2020-02-10T16:11:40Z",
  "updatedAt": "2024-02-21T17:05:04Z",
  "closedAt": "2020-02-14T15:49:15Z",
  "author": {
    "login": "jeffkl"
  },
  "labels": [
    "Area: Documentation",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": {
    "title": "Discussion"
  },
  "comments": {
    "nodes": [
      {
        "body": "I've moved this issue to MSBuild, since the `CodeTaskFactory` is owned by it and the `RoslynCodeTaskFactory` is now built it.\r\n\r\nAs far as I know, `CodeTaskFactory` is not deprecated entirely, only for .NET Core.  If your build only runs on Windows .NET Framework, then `CodeTaskFactory` will work just fine.  If your build needs to run on cross platform Linux, Mac, or Windows .NET Core, you have to use `RoslynCodeTaskFactory`.  In my opinion, this is documented well.\r\n\r\nThe error you're getting is:\r\n\r\n> A required privilege is not held by the client\r\n\r\nThat seems like you're trying to do something in your task that requires running as elevated but your process is not running as Administrator.",
        "createdAt": "2020-02-10T16:15:31Z",
        "updatedAt": "2020-02-10T16:15:31Z",
        "author": {
          "login": "jeffkl"
        }
      },
      {
        "body": "I think [the docs on inline tasks](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-inline-tasks?view=vs-2019) are fairly clear:\r\n\r\n> Starting in .NET Framework version 4, you can create tasks inline in the project file. You do not have to create a separate assembly to host the task. This makes it easier to keep track of source code and easier to deploy the task. The source code is integrated into the script.\r\n> \r\n> In MSBuild 15.8, the RoslynCodeTaskFactory was added which can create .NET Standard cross-platform inline tasks. If you need to use inline tasks on .NET Core, you must use the RoslynCodeTaskFactory.\r\n\r\nIs there wording that would have \"CodeTaskFactory is not deprecated but only works on MSBuild.exe on .NET Framework\", @malkia?",
        "createdAt": "2020-02-10T21:23:22Z",
        "updatedAt": "2020-02-10T21:23:22Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "I need to investigate more. I think I'm missing details on what went with that update. We are on .NET Framework (or I would thinks so, e.g. we call msbuild.exe, and this should be .NET Framework, not .NET Core). I'll try go get more info as the week goes by, and update. You can close this, and thanks for looking and explaining it!",
        "createdAt": "2020-02-10T21:29:03Z",
        "updatedAt": "2020-02-10T21:29:03Z",
        "author": {
          "login": "malkia"
        }
      },
      {
        "body": "@rainersigwald - re: deprecation - I think it was a post/message written about it, and I prematurely drew my conclusions (not checking with the docs in first place), but since we've experienced it, I thought it was so. Sorry!",
        "createdAt": "2020-02-12T18:15:50Z",
        "updatedAt": "2020-02-12T18:15:50Z",
        "author": {
          "login": "malkia"
        }
      },
      {
        "body": "No problem, there are plenty of places where we're not clear and we'd rather know about them than not! I'm going to go ahead and close this, though.",
        "createdAt": "2020-02-14T15:49:15Z",
        "updatedAt": "2020-02-14T15:49:15Z",
        "author": {
          "login": "rainersigwald"
        }
      }
    ]
  }
}