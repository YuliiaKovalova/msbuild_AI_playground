{
  "number": 10664,
  "title": "[Bug]: Can't instantiate an unnamed object if it's constructor takes exactly one parameter?",
  "body": "### Issue Description\n\nConstructor Calls Get Incorrectly Interpreted As Variable Declarations.\r\n\r\nMore Specifically One-line Single-Parameter Constructor-Calls get Incorrectly-Interpreted as attempts to redefine the type of a named parameter.\n\n### Steps to Reproduce\n\n\r\nclass myThing\r\n{\r\npublic:\r\n  myThing(int a) {}\r\n};\r\n\r\nvoid main()\r\n{\r\n  int mz = 5;\r\n  myThing(mz);\r\n}\n\n### Expected Behavior\n\nCalls constructor\n\n### Actual Behavior\n\nRedefines identifier\n\n### Analysis\n\n\r\nThe issue here is the existence of the second line in main which looks like <Type Identifier> and triggers a variable definition path somewhere early in the compiler, in this case the existence of a type with a name is not sufficient to determine the line type, it is also necessary to consider the presence of \"(\" bra-kets and possibly more \n\n### Versions & Configurations\n\nAll Versions Of msBuild AFAIK",
  "state": "CLOSED",
  "createdAt": "2024-09-16T09:26:45Z",
  "updatedAt": "2024-09-17T13:33:39Z",
  "closedAt": "2024-09-17T13:33:38Z",
  "author": {
    "login": "LukeSchoen"
  },
  "labels": [
    "bug"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "Because the C++ compiler is not part of MSBuild, I think this would be better filed in Visual Studio Developer Community.\r\nHowever, the behaviour is by design; see <http://eel.is/c++draft/stmt.ambig#example-2> and [Most vexing parse (Wikipedia)](https://en.wikipedia.org/w/index.php?title=Most_vexing_parse&oldid=1227575851).\r\nTo disambiguate, you could use `myThing(+mz)` or `myThing{mz}`.",
        "createdAt": "2024-09-16T09:39:47Z",
        "updatedAt": "2024-09-16T09:39:47Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "\"by design\" here means the C++ standard requires the compiler to behave this way, so I don't think Microsoft will be willing to change the compiler to violate the standard by accepting the source code.  However, it might be possible to change the compiler to give an error message that describes how to fix the source code.",
        "createdAt": "2024-09-16T09:57:54Z",
        "updatedAt": "2024-09-16T09:57:54Z",
        "author": {
          "login": "KalleOlaviNiemitalo"
        }
      },
      {
        "body": "Team Triage: We believe that this is an issue with c++ compiler, not MSBuild. Can you [open a Visual Studio feedback ticket instead](https://docs.microsoft.com/visualstudio/ide/feedback-options)?\r\n\r\nAfter it's created, that will open an internal bug which will be routed to the right team. If you post the link here, we may be able to help that process, go faster.",
        "createdAt": "2024-09-17T13:33:39Z",
        "updatedAt": "2024-09-17T13:33:39Z",
        "author": {
          "login": "AR-May"
        }
      }
    ]
  }
}