{
  "number": 6194,
  "title": "Unable to run 'for /f' loop command in 'Exec' task ",
  "body": "I'm trying to run 'Exec' task without success, not sure if there's something wrong or this is not provided.\r\n\r\n```\r\n<Exec WorkingDirectory=\"$(NuGetPackageRoot)talxis.sdk.tooling.cds\" ConsoleToMSBuild=\"true\" Command=\"set &quot;NewestPackageVersion=&quot; &amp;&amp; for /f &quot;tokens=5 delims= &quot; %G in ('dir ^| sort /r') do if not defined NewestPackageVersion set &quot;NewestPackageVersion=%G&quot;^\r\n      echo %NewestPackageVersion%\" />\r\n```\r\n\r\nThe command property is escaped, but when we unescape it, this is what you'll get:\r\n```\r\nset \"NewestPackageVersion=\" && for /f \"tokens=5 delims= \" %G in ('dir ^| sort /r') do if not defined NewestPackageVersion set \"NewestPackageVersion=%G\"^\r\n      echo %NewestPackageVersion%\r\n```\r\n['for /f' loop](https://ss64.com/nt/for_r.html)\r\n\r\nIf I run this in my cmd from the same path, I'll get the result I need:\r\n![image](https://user-images.githubusercontent.com/32060653/109002298-51906b80-76a6-11eb-832c-733254b3a853.png)\r\n\r\nIf I run the command in exec as a part of build target, I'm getting this error:\r\n`G\"^ was unexpected at this time`\r\n\r\nOkay, let's say we won't use the parameter `%G` for the time being and replace it with some test value:\r\n```\r\nset \"NewestPackageVersion=\" && for /f \"tokens=5 delims= \" %G in ('dir ^| sort /r') do if not defined NewestPackageVersion set \"NewestPackageVersion=TEST_VALUE\"^\r\n      echo %NewestPackageVersion%\r\n```\r\n\r\nThis acts as expected:\r\n![image](https://user-images.githubusercontent.com/32060653/109002865-0e82c800-76a7-11eb-8477-eb80a31f3876.png)\r\n\r\nSo now my 'Exec' looks like this:\r\n```\r\n<Exec WorkingDirectory=\"$(NuGetPackageRoot)talxis.sdk.tooling.cds\" ConsoleToMSBuild=\"true\" Command=\"set &quot;NewestPackageVersion=&quot; &amp;&amp; for /f &quot;tokens=5 delims= &quot; %G in ('dir ^| sort /r') do if not defined NewestPackageVersion set &quot;NewestPackageVersion=TEST_VALUE&quot;^\r\n      echo %NewestPackageVersion%\" />\r\n```\r\n\r\nIf I run the build target, this is what I get:\r\n`G was unexpected at this time.`\r\nSo it seems like you can't use the for loop parameter, I've also tried replacing `%G` with `%%G` like in scripts. When I change the letter to `X`, I get `The system cannot find the path specified.` from the last echo, which confirms that there's something happening sooner.\r\n\r\nAm I doing something wrong, or this is not supported? I'm switching to PowerShell inside the exec command, since that will work for me right now, but I'm still curious. Thanks.",
  "state": "CLOSED",
  "createdAt": "2021-02-24T12:59:49Z",
  "updatedAt": "2024-02-21T14:14:41Z",
  "closedAt": "2021-05-21T16:18:44Z",
  "author": {
    "login": "honzakostejn"
  },
  "labels": [
    "triaged"
  ],
  "assignees": {
    "nodes": [
      {
        "login": "Forgind"
      }
    ]
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "I think you have to replace `%` with `&percnt;`.",
        "createdAt": "2021-02-24T17:33:47Z",
        "updatedAt": "2021-02-24T17:33:47Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "![image](https://user-images.githubusercontent.com/32060653/109635283-7a06e280-7b4a-11eb-99a6-c34590959925.png)\r\n\r\nno luck here. I even tried using \"%25\"\r\nhttps://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-special-characters?view=vs-2019",
        "createdAt": "2021-03-02T11:01:31Z",
        "updatedAt": "2021-03-02T11:01:31Z",
        "author": {
          "login": "honzakostejn"
        }
      },
      {
        "body": "With your repro, I was able to get it to fail how you said it would, and when I double percent signs indicating variables, it stopped failing. I don't know if it was doing what was expected, but maybe? So:\r\n`<Exec WorkingDirectory=\"$(NuGetPackageRoot)talxis.sdk.tooling.cds\" ConsoleToMSBuild=\"true\" Command=\"set &quot;NewestPackageVersion=&quot; &amp;&amp; for /f &quot;tokens=5 delims= &quot; %%G in ('dir ^| sort /r') do if not defined NewestPackageVersion set &quot;NewestPackageVersion=%%G&quot;^\r\n      echo %NewestPackageVersion%\" />`\r\n\r\nAlso not entirely sure why that made it work, but I noticed that if I paused mid-execution and copied what Exec had written into the batch file into a command prompt, it failed. I'm guessing it needed two levels of escaping, and that was the second level.",
        "createdAt": "2021-04-30T19:43:57Z",
        "updatedAt": "2021-04-30T19:43:57Z",
        "author": {
          "login": "Forgind"
        }
      },
      {
        "body": "@rainersigwald said that because the Exec task writes a batch file and executes it, we needed to use the script form of variable references, so %%G instead of %G.",
        "createdAt": "2021-05-21T16:18:44Z",
        "updatedAt": "2021-05-21T16:18:44Z",
        "author": {
          "login": "Forgind"
        }
      }
    ]
  }
}