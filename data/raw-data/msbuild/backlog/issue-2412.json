{
  "number": 2412,
  "title": "Multiple msbuild.exe files and Environmental Variables",
  "body": "Hello,\r\nI have multiple msbuild.exe located in different folder. What's the difference between them and which one of them should be set as my Path environmental variable for building my projects:\r\n\r\n`C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe`\r\n`C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe`\r\n`C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe`\r\n\r\n",
  "state": "CLOSED",
  "createdAt": "2017-08-09T17:57:29Z",
  "updatedAt": "2024-02-21T17:17:24Z",
  "closedAt": "2017-08-10T00:39:11Z",
  "author": {
    "login": "mgolois"
  },
  "labels": [
    "question",
    "triaged"
  ],
  "assignees": {
    "nodes": []
  },
  "milestone": null,
  "comments": {
    "nodes": [
      {
        "body": "> What's the difference between them\r\n\r\n- `C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe`\r\n  * This is the copy delivered with **Visual Studio 2017**. That's the current distribution model, so this is probably the most up-to-date copy.\r\n- `C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe`\r\n  * This is the copy delivered with **Visual Studio 2015**. It's slightly older and can't be used for, for example, .NET Core projects.\r\n- `C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe`\r\n  * This is a copy of MSBuild that's really old. Initially, MSBuild was part of the .NET Framework. Now that it's a standalone component closely tied to the Visual Studio release cycle, it would be a breaking change to remove it from the framework. So the framework copy continues to exist but never gets updated. You probably shouldn't use this.\r\n\r\n> which one of them should be set as my Path environmental variable for building my projects\r\n\r\nIt depends on the nature of your projects, and how you want them to build. Use the copy that corresponds to the version of Visual Studio you'd use to open the projects in question.\r\n\r\nIn general, you want to use the latest copy, so the VS2017 one.\r\n\r\nNote that the `Developer Command Prompt for VS2017` that Visual Studio installs will set up a `PATH` that includes MSBuild automatically.\r\n\r\nIf you're writing automation to find MSBuild, you need to consider that there may be multiple different Visual Studio installations with different workloads installed, and you should use something like VSWhere to [find the one you need](https://github.com/Microsoft/vswhere/wiki/Find-MSBuild).",
        "createdAt": "2017-08-09T21:24:45Z",
        "updatedAt": "2017-08-09T21:24:45Z",
        "author": {
          "login": "rainersigwald"
        }
      },
      {
        "body": "Makes sense! Thanks",
        "createdAt": "2017-08-10T00:39:11Z",
        "updatedAt": "2018-05-16T14:42:54Z",
        "author": {
          "login": "mgolois"
        }
      }
    ]
  }
}