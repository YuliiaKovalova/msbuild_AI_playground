diff --git a/MSBuild.sln b/MSBuild.sln
index 4d49703cc27..d2ea4b2bb5f 100644
--- a/MSBuild.sln
+++ b/MSBuild.sln
@@ -54,8 +54,6 @@ Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "MSBuild.VSSetup", "src\Pack
 EndProject
 Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = "Deprecated", "Deprecated", "{0AC7F677-AD87-48C8-A51C-008A68136929}"
 EndProject
-Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "Microsoft.Build.Conversion", "src\Deprecated\Conversion\Microsoft.Build.Conversion.csproj", "{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}"
-EndProject
 Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "Localization", "src\Package\Localization\Localization.csproj", "{16DBDF17-3E0E-4140-989A-B42638126A40}"
 EndProject
 Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "DevDivPackage", "src\Package\DevDivPackage\DevDivPackage.csproj", "{EDBFE32E-F264-4F01-97C3-B58F8B9165C9}"
@@ -860,46 +858,6 @@ Global
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|x64.Build.0 = Release-MONO|x64
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
 		{136C8713-3103-4AF9-B7CB-9619E87249C1}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|ARM64.ActiveCfg = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|ARM64.Build.0 = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|x64.ActiveCfg = Debug|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|x64.Build.0 = Debug|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|x86.ActiveCfg = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug|x86.Build.0 = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|Any CPU.ActiveCfg = Debug-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|Any CPU.Build.0 = Debug-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|ARM64.ActiveCfg = Debug-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|ARM64.Build.0 = Debug-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|x64.ActiveCfg = Debug|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|x64.Build.0 = Debug|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|x86.ActiveCfg = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Debug-MONO|x86.Build.0 = Debug|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|Any CPU.ActiveCfg = MachineIndependent|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|Any CPU.Build.0 = MachineIndependent|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|ARM64.ActiveCfg = MachineIndependent|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|ARM64.Build.0 = MachineIndependent|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|x64.ActiveCfg = MachineIndependent|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|x64.Build.0 = MachineIndependent|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|x86.ActiveCfg = MachineIndependent|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.MachineIndependent|x86.Build.0 = MachineIndependent|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|Any CPU.Build.0 = Release|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|ARM64.ActiveCfg = Release|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|ARM64.Build.0 = Release|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|x64.ActiveCfg = Release|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|x64.Build.0 = Release|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|x86.ActiveCfg = Release|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release|x86.Build.0 = Release|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|Any CPU.ActiveCfg = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|Any CPU.Build.0 = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|ARM64.ActiveCfg = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|ARM64.Build.0 = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|x64.ActiveCfg = Release-MONO|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|x64.Build.0 = Release-MONO|x64
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|x86.ActiveCfg = Release-MONO|Any CPU
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA}.Release-MONO|x86.Build.0 = Release-MONO|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{16DBDF17-3E0E-4140-989A-B42638126A40}.Debug|ARM64.ActiveCfg = Debug|Any CPU
@@ -1311,7 +1269,6 @@ Global
 		{F45DBA88-C833-434A-8F68-087124540303} = {760FF85D-8BEB-4992-8095-A9678F88FD47}
 		{523E1555-DB60-4FD4-8CDF-3C159710CAED} = {760FF85D-8BEB-4992-8095-A9678F88FD47}
 		{136C8713-3103-4AF9-B7CB-9619E87249C1} = {9BAD9352-DEFB-45E5-B8A4-4816B9B22A33}
-		{8AE12A8B-D64C-48CF-AD00-9A0C35884DFA} = {0AC7F677-AD87-48C8-A51C-008A68136929}
 		{16DBDF17-3E0E-4140-989A-B42638126A40} = {9BAD9352-DEFB-45E5-B8A4-4816B9B22A33}
 		{EDBFE32E-F264-4F01-97C3-B58F8B9165C9} = {9BAD9352-DEFB-45E5-B8A4-4816B9B22A33}
 		{B60173F0-F9F0-4688-9DF8-9ADDD57BD45F} = {9BAD9352-DEFB-45E5-B8A4-4816B9B22A33}
diff --git a/src/Deprecated/Conversion/AdditionalOptionsParser.cs b/src/Deprecated/Conversion/AdditionalOptionsParser.cs
deleted file mode 100644
index b1460c62f46..00000000000
--- a/src/Deprecated/Conversion/AdditionalOptionsParser.cs
+++ /dev/null
@@ -1,443 +0,0 @@
-// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-// THE ASSEMBLY BUILT FROM THIS SOURCE FILE HAS BEEN DEPRECATED FOR YEARS. IT IS BUILT ONLY TO PROVIDE
-// BACKWARD COMPATIBILITY FOR API USERS WHO HAVE NOT YET MOVED TO UPDATED APIS. PLEASE DO NOT SEND PULL
-// REQUESTS THAT CHANGE THIS FILE WITHOUT FIRST CHECKING WITH THE MAINTAINERS THAT THE FIX IS REQUIRED.
-
-using System;
-using System.Collections;
-using System.Text;
-using System.Diagnostics;
-using System.Globalization;
-using Microsoft.Build.Construction;
-
-namespace Microsoft.Build.Conversion
-{
-    /// <summary>
-    /// Only these switches will be migrated.
-    /// This enum doesnt have any use, except to explicitly list the compiler
-    /// options in AdditionalOptions project property that will be migrated
-    /// </summary>
-    internal enum SwitchesToMigrate
-    {
-        STM_CodePage,
-        STM_DisableLangExtensions,
-        STM_Jcpa,
-        STM_LinkResource,
-        STM_SecureScoping,
-        STM_Win32Resource,
-    };
-
-    /// <summary>
-    /// These are types of values associated with the switches
-    /// </summary>
-    internal enum SwitchValueType
-    {
-        /// <summary>
-        /// Boolean value
-        /// </summary>
-        SVT_Boolean,
-
-        /// <summary>
-        /// String value
-        /// </summary>
-        SVT_String,
-
-        /// <summary>
-        /// This switch can occur multiple times and the
-        /// final value is the ';' delimeted concat of all the
-        /// individual occurrences
-        /// </summary>
-        SVT_MultiString,
-    }
-
-    /// <summary>
-    /// This class contains the migration info for a switch
-    /// that we want to migrate
-    /// </summary>
-    internal sealed class CompSwitchInfo
-    {
-        /// <summary>
-        /// This is the internal switch identifier
-        /// Examples:
-        /// 1. STM_SecureScoping
-        /// </summary>
-        internal SwitchesToMigrate Switch;
-
-        /// <summary>
-        /// This is the string passed to the compiler
-        /// Examples:
-        /// 1. /ss, /securescoping
-        /// 2. @
-        /// </summary>
-        internal string[] SwitchIDs;
-
-        /// <summary>
-        /// This is the type of the value associated with the switch
-        /// Examples:
-        /// 1. SVT_Boolean
-        /// 2. SVT_MultiString
-        /// </summary>
-        internal SwitchValueType SwitchValueType;
-
-        /// <summary>
-        /// This is the final value of the switch
-        /// 1. true
-        /// 2. "path-a;path-b\\file-b"
-        /// </summary>
-        internal object SwitchValue;
-
-        /// <summary>
-        /// This is the name of property in the project file in which the
-        /// value of this switch is stored
-        /// </summary>
-        internal string SwitchProjectPropertyName;
-
-        /// <summary>
-        /// The constructor
-        /// </summary>
-        internal CompSwitchInfo(
-            SwitchesToMigrate switchStr,
-            string[] switchIDs,
-            SwitchValueType switchValueType,
-            object switchValue,
-            string switchProjectPropertyName
-        )
-        {
-            this.Switch = switchStr;
-            this.SwitchIDs = switchIDs;
-            this.SwitchValueType = switchValueType;
-            this.SwitchValue = switchValue;
-            this.SwitchProjectPropertyName = switchProjectPropertyName;
-        }
-    }
-
-    /// <summary>
-    ///
-    /// Class:       AdditionalOptionsParser
-    /// Owner:       ParthaD
-    ///
-    /// This class contains the logic to parse the AdditionalOptions project
-    /// property of v7.x J# projects and add the individual options as project
-    /// properties of the upgraded projects.
-    ///
-    /// AdditionalOptions project property in v7.x was basically a string that
-    /// was passed ditto to the compiler.
-    /// It was used to hold J# compiler options that didnt have an 1-1 equivalent
-    /// project property.
-    /// For v8.0 and beyond, each J# compiler option has a corresponding project
-    /// property.
-    ///
-    /// AdditionalOptions property string is broken down into list of options.
-    /// White space (only ' ' and '\t') are considered as delimiters if not wrapped
-    /// inside double quotes (").
-    /// NOTE:
-    ///  1. Other unicode spaces or double quotes sequences not considered
-    ///  2. Backslash (\) not considered as possible escape char for ".
-    ///
-    /// Once broken down into individual options, only a few compiler options are
-    /// seached for (viz. the options for which v8.0 has new project properties)
-    /// Everything else is ignored.
-    ///
-    /// Refer to SwitchesToMigrade enum for the switches that are migrated.
-    /// </summary>
-    internal sealed class AdditionalOptionsParser
-    {
-        // These are all that we recognize in the AdditionalOptions    
-        private CompSwitchInfo[] validCompilerSwitches = new CompSwitchInfo[] {
-            #region Info on the compiler switches to be parsed from AdditionalOptions
-            // /codepage:<n>
-            new CompSwitchInfo(
-                SwitchesToMigrate.STM_CodePage,
-                new string[] { "/codepage:" },
-                SwitchValueType.SVT_String,
-                null,
-                "CodePage"
-            ),
-
-            // /x:[all | net]
-            new CompSwitchInfo(
-                SwitchesToMigrate.STM_DisableLangExtensions,
-                new string[] { "/x:" },
-                SwitchValueType.SVT_String,
-                null,
-                "DisableLangXtns"
-            ),
-
-            // /jcpa:[package=namespace | @filename]
-            new CompSwitchInfo(
-                SwitchesToMigrate.STM_Jcpa,
-                new string[] { "/jcpa:" },
-                SwitchValueType.SVT_MultiString,
-                new StringBuilder(),
-                "JCPA"
-            ),
-
-            // /linkres[ource]:<resinfo>
-            new CompSwitchInfo(
-                SwitchesToMigrate.STM_LinkResource,
-                new string[] { "/linkres:", "/linkresource:" },
-                SwitchValueType.SVT_MultiString,
-                new StringBuilder(),
-                "LinkResource"
-            ),
-
-            // /securescoping[+|-], /ss[+|-]
-            new CompSwitchInfo(
-                SwitchesToMigrate.STM_SecureScoping,
-                new string[] { "/securescoping", "/ss" },
-                SwitchValueType.SVT_Boolean,
-                null,
-                "SecureScoping"
-            ),
-
-            // /win32res:<file>
-            new CompSwitchInfo(
-                SwitchesToMigrate.STM_Win32Resource,
-                new string[] { "/win32res:" },
-                SwitchValueType.SVT_String,
-                null,
-                "Win32Resource"
-            )
-            #endregion
-        };
-
-        /// <summary>
-        /// One and only entry point to the functionality offered by this class
-        /// </summary>
-        public void ProcessAdditionalOptions(
-            string additionalOptionsValue,
-            ProjectPropertyGroupElement configPropertyGroup
-        )
-        {
-            // Trivial case
-            if (additionalOptionsValue == null)
-            {
-                return;
-            }
-
-            // Tokenize the additional options first
-            string[] compSwitchList = TokenizeAdditionalOptionsValue(additionalOptionsValue);
-
-            // Extract the switch arguments
-            foreach (string compSwitch in compSwitchList)
-            {
-                foreach (CompSwitchInfo compSwitchInfo in validCompilerSwitches)
-                {
-                    if (ExtractSwitchInfo(compSwitchInfo, compSwitch))
-                    {
-                        break;
-                    }
-                }
-            }
-
-            // Finally populate the project file and we'r done!
-            PopulatePropertyGroup(configPropertyGroup);
-        }
-
-        /// <summary>
-        /// This will tokenize the given string using ' ' and '\t' as delimiters
-        /// The delimiters are escaped inside a pair of quotes
-        /// If there is an unbalanced quote, EOL is treated as the closing quotes
-        /// </summary>
-        private string[] TokenizeAdditionalOptionsValue(string additionalOptionsValue)
-        {
-            ArrayList tokens = new ArrayList();
-
-            bool inQuotes = false;
-            StringBuilder option = new StringBuilder();
-            foreach (char c in additionalOptionsValue)
-            {
-                switch (c)
-                {
-                    case '\t':
-                    case ' ':
-                        if (inQuotes)
-                        {
-                            option.Append(c);
-                        }
-                        else
-                        {
-                            if (0 != option.Length)
-                            {
-                                tokens.Add(option.ToString());
-                                option.Length = 0;
-                            }
-                        }
-                        break;
-
-                    case '"':
-                        inQuotes = !inQuotes;
-                        break;
-
-                    default:
-                        option.Append(c);
-                        break;
-                }
-            }
-
-            // Ignore everything unbalanced quotes
-            if (!inQuotes)
-            {
-                tokens.Add(option.ToString());
-            }
-
-            return (string[])tokens.ToArray(typeof(string));
-        }
-
-        /// <summary>
-        /// If compSwitch is the compSwitchInfo compiler switch, then extract the switch args
-        /// Return
-        /// - true: if this is the switch (even if the switch args have error)
-        /// - false: this is not the switch
-        /// </summary>
-        private bool ExtractSwitchInfo(CompSwitchInfo compSwitchInfo, string compSwitch)
-        {
-            string matchedID = null;
-            // First see if we have a match...
-            for (int i = 0; i < compSwitchInfo.SwitchIDs.Length; i++)
-            {
-                if (compSwitch.StartsWith(compSwitchInfo.SwitchIDs[i], StringComparison.Ordinal))
-                {
-                    matchedID = compSwitchInfo.SwitchIDs[i];
-                    break;
-                }
-            }
-            // No no... we arent dealing with the correct switchInfo
-            if (matchedID == null)
-            {
-                return false;
-            }
-
-            // Now we can get to extracting the switch arguments
-            object switchVal = null;
-            switch (compSwitchInfo.SwitchValueType)
-            {
-                case SwitchValueType.SVT_Boolean:
-                    if (matchedID.Length == compSwitch.Length)
-                    {
-                        switchVal = true;
-                    }
-                    else if ((matchedID.Length + 1) == compSwitch.Length)
-                    {
-                        if ('+' == compSwitch[matchedID.Length])
-                        {
-                            switchVal = true;
-                        }
-                        else if ('-' == compSwitch[matchedID.Length])
-                        {
-                            switchVal = false;
-                        }
-                    }
-                    if (switchVal != null)
-                    {
-                        compSwitchInfo.SwitchValue = switchVal;
-                    }
-                    else
-                    {
-                        Debug.Assert(false, "Cannot parse boolean switch: " + compSwitch);
-                    }
-                    break;
-
-                case SwitchValueType.SVT_String:
-                    if (matchedID.Length < compSwitch.Length)
-                    {
-                        switchVal = compSwitch.Substring(matchedID.Length);
-                    }
-                    if (switchVal != null)
-                    {
-                        compSwitchInfo.SwitchValue = switchVal;
-                    }
-                    else
-                    {
-                        Debug.Assert(false, "Cannot parse string switch: " + compSwitch);
-                    }
-                    break;
-
-                case SwitchValueType.SVT_MultiString:
-                    Debug.Assert(
-                        compSwitchInfo.SwitchValue != null,
-                        "Non null switch value expected for a multistring switch: " + matchedID
-                    );
-
-                    if (matchedID.Length < compSwitch.Length)
-                    {
-                        switchVal = compSwitch.Substring(matchedID.Length);
-                    }
-                    if (switchVal != null)
-                    {
-                        ((StringBuilder)(compSwitchInfo.SwitchValue)).Append(switchVal);
-                        ((StringBuilder)(compSwitchInfo.SwitchValue)).Append(";");
-                    }
-                    else
-                    {
-                        Debug.Assert(false, "Cannot parse multistring switch: " + compSwitch);
-                    }
-                    break;
-
-                default:
-                    Debug.Assert(false, "Unknown switch value type");
-                    break;
-            }
-
-            return true;
-        }
-
-        /// <summary>
-        /// Populate the property group with the individual options
-        /// </summary>
-        private void PopulatePropertyGroup(ProjectPropertyGroupElement configPropertyGroup)
-        {
-            string propertyName;
-
-            foreach (CompSwitchInfo compSwitchInfo in validCompilerSwitches)
-            {
-                propertyName = compSwitchInfo.SwitchProjectPropertyName;
-
-                // No need to remove the already existing property node
-                // since the switches we are dealing with couldnt have been
-                // set anywhere else in the property pages except the additional
-                // options
-
-                switch (compSwitchInfo.SwitchValueType)
-                {
-                    case SwitchValueType.SVT_Boolean:
-                        if (compSwitchInfo.SwitchValue != null)
-                        {
-                            configPropertyGroup.AddProperty(
-                                propertyName,
-                                compSwitchInfo.SwitchValue.ToString().ToLower(CultureInfo.InvariantCulture)
-                            );
-                        }
-                        break;
-
-                    case SwitchValueType.SVT_String:
-                        if (compSwitchInfo.SwitchValue != null)
-                        {
-                            configPropertyGroup.AddProperty(
-                                propertyName,
-                                compSwitchInfo.SwitchValue.ToString()
-                            );
-                        }
-                        break;
-
-                    case SwitchValueType.SVT_MultiString:
-                        Debug.Assert(compSwitchInfo.SwitchValue != null, "Expected non null value for multistring switch");
-                        if (0 != ((StringBuilder)(compSwitchInfo.SwitchValue)).Length)
-                        {
-                            configPropertyGroup.AddProperty(
-                                propertyName,
-                                compSwitchInfo.SwitchValue.ToString()
-                            );
-                        }
-                        break;
-
-                    default:
-                        Debug.Assert(false, "Unknown switch value type");
-                        break;
-                }
-            }
-        }
-    }
-}
diff --git a/src/Deprecated/Conversion/AssemblyInfo.cs b/src/Deprecated/Conversion/AssemblyInfo.cs
deleted file mode 100644
index 9f260a4bf6f..00000000000
--- a/src/Deprecated/Conversion/AssemblyInfo.cs
+++ /dev/null
@@ -1,30 +0,0 @@
-﻿// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-// THE ASSEMBLY BUILT FROM THIS SOURCE FILE HAS BEEN DEPRECATED FOR YEARS. IT IS BUILT ONLY TO PROVIDE
-// BACKWARD COMPATIBILITY FOR API USERS WHO HAVE NOT YET MOVED TO UPDATED APIS. PLEASE DO NOT SEND PULL
-// REQUESTS THAT CHANGE THIS FILE WITHOUT FIRST CHECKING WITH THE MAINTAINERS THAT THE FIX IS REQUIRED.
-
-using System;
-using System.Security.Permissions;
-using System.Resources;
-using System.Runtime.InteropServices;
-using System.Runtime.CompilerServices;
-
-#pragma warning disable 618
-[assembly: SecurityPermission(SecurityAction.RequestMinimum, Flags = SecurityPermissionFlag.Execution)]
-#pragma warning restore 618
-
-// This is the assembly-level GUID, and the GUID for the TypeLib associated with
-// this assembly.  We should specify this explicitly, as opposed to letting 
-// tlbexp just pick whatever it wants.
-[assembly: GuidAttribute("634AFA8F-4271-4e2c-9525-D0B75DAA821A")]
-[assembly: InternalsVisibleTo("Microsoft.Build.Conversion.Unittest, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293")]
-
-// This will enable passing the SafeDirectories flag to any P/Invoke calls/implementations within the assembly, 
-// so that we don't run into known security issues with loading libraries from unsafe locations 
-[assembly: DefaultDllImportSearchPaths(DllImportSearchPath.SafeDirectories)]
-
-[assembly: CLSCompliant(true)]
-
-[assembly: NeutralResourcesLanguage("en")]
diff --git a/src/Deprecated/Conversion/AssemblyResources.cs b/src/Deprecated/Conversion/AssemblyResources.cs
deleted file mode 100644
index ccdba65a922..00000000000
--- a/src/Deprecated/Conversion/AssemblyResources.cs
+++ /dev/null
@@ -1,45 +0,0 @@
-// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-// THE ASSEMBLY BUILT FROM THIS SOURCE FILE HAS BEEN DEPRECATED FOR YEARS. IT IS BUILT ONLY TO PROVIDE
-// BACKWARD COMPATIBILITY FOR API USERS WHO HAVE NOT YET MOVED TO UPDATED APIS. PLEASE DO NOT SEND PULL
-// REQUESTS THAT CHANGE THIS FILE WITHOUT FIRST CHECKING WITH THE MAINTAINERS THAT THE FIX IS REQUIRED.
-
-using System.Resources;
-using System.Reflection;
-using System.Globalization;
-
-namespace Microsoft.Build.Conversion
-{
-    /// <summary>
-    /// This class provides access to the assembly's resources.
-    /// </summary>
-    /// <owner>SumedhK</owner>
-    internal static class AssemblyResources
-    {
-        /// <summary>
-        /// Loads the specified resource string, either from the assembly's primary resources, or its shared resources.
-        /// </summary>
-        /// <remarks>This method is thread-safe.</remarks>
-        /// <owner>SumedhK</owner>
-        /// <param name="name"></param>
-        /// <returns>The resource string, or null if not found.</returns>
-        internal static string GetString(string name)
-        {
-            // NOTE: the ResourceManager.GetString() method is thread-safe
-            string resource = resources.GetString(name, CultureInfo.CurrentUICulture);
-
-            if (resource == null)
-            {
-                resource = sharedResources.GetString(name, CultureInfo.CurrentUICulture);
-            }
-
-            return resource;
-        }
-
-        // assembly resources
-        private static readonly ResourceManager resources = new ResourceManager("Microsoft.Build.Conversion.Core.Strings", Assembly.GetExecutingAssembly());
-        // shared resources
-        private static readonly ResourceManager sharedResources = new ResourceManager("Microsoft.Build.Conversion.Core.Strings.shared", Assembly.GetExecutingAssembly());
-    }
-}
diff --git a/src/Deprecated/Conversion/Constants.cs b/src/Deprecated/Conversion/Constants.cs
deleted file mode 100644
index 05ffc70b443..00000000000
--- a/src/Deprecated/Conversion/Constants.cs
+++ /dev/null
@@ -1,208 +0,0 @@
-// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-// THE ASSEMBLY BUILT FROM THIS SOURCE FILE HAS BEEN DEPRECATED FOR YEARS. IT IS BUILT ONLY TO PROVIDE
-// BACKWARD COMPATIBILITY FOR API USERS WHO HAVE NOT YET MOVED TO UPDATED APIS. PLEASE DO NOT SEND PULL
-// REQUESTS THAT CHANGE THIS FILE WITHOUT FIRST CHECKING WITH THE MAINTAINERS THAT THE FIX IS REQUIRED.
-
-using Microsoft.Build.Shared;
-
-namespace Microsoft.Build.Conversion
-{
-    /// <summary>
-    /// Contains strings identifying hint paths that we should remove
-    /// </summary>
-    /// <owner>AJenner</owner>
-    internal static class LegacyFrameworkPaths
-    {
-        internal const string RTMFrameworkPath = "MICROSOFT.NET\\FRAMEWORK\\V1.0.3705";
-        internal const string EverettFrameworkPath = "MICROSOFT.NET\\FRAMEWORK\\V1.1.4322";
-        internal const string JSharpRTMFrameworkPath = "MICROSOFT VISUAL JSHARP .NET\\FRAMEWORK\\V1.0.4205";
-    }
-
-    /// <summary>
-    /// Contains the names of the known elements in the VS.NET project file.
-    /// </summary>
-    /// <owner>RGoel</owner>
-    internal static class VSProjectElements
-    {
-        internal const string visualStudioProject = "VisualStudioProject";
-        internal const string visualJSharp = "VISUALJSHARP";
-        internal const string cSharp = "CSHARP";
-        internal const string visualBasic = "VisualBasic";
-        internal const string ECSharp = "ECSHARP";
-        internal const string EVisualBasic = "EVisualBasic";
-        internal const string build = "Build";
-        internal const string settings = "Settings";
-        internal const string config = "Config";
-        internal const string platform = "Platform";
-        internal const string interopRegistration = "InteropRegistration";
-        internal const string references = "References";
-        internal const string reference = "Reference";
-        internal const string files = "Files";
-        internal const string imports = "Imports";
-        internal const string import = "Import";
-        internal const string include = "Include";
-        internal const string exclude = "Exclude";
-        internal const string file = "File";
-        internal const string folder = "Folder";
-        internal const string startupServices = "StartupServices";
-        internal const string service = "Service";
-        internal const string userProperties = "UserProperties";
-        internal const string otherProjectSettings = "OtherProjectSettings";
-        internal const string PocketPC = "Pocket PC";
-        internal const string WindowsCE = "Windows CE";
-        internal const string Smartphone = "Smartphone";
-        internal const string SystemDataCommon = "System.Data.Common";
-        internal const string SystemSR = "System.SR";
-        internal const string MSCorLib = "MSCorLib";
-    }
-
-    /// <summary>
-    /// Contains the names of the known elements in the VS.NET project file.
-    /// </summary>
-    /// <owner>RGoel</owner>
-    internal static class VSProjectAttributes
-    {
-        internal const string relPath = "RelPath";
-        internal const string name = "Name";
-        internal const string guid = "Guid";
-        internal const string project = "Project";
-        internal const string projectType = "ProjectType";
-        internal const string local = "Local";
-        internal const string assemblyName = "AssemblyName";
-        internal const string importNamespace = "Namespace";
-        internal const string id = "ID";
-        internal const string link = "Link";
-        internal const string buildAction = "BuildAction";
-        internal const string buildActionNone = "None";
-        internal const string buildActionResource = "EmbeddedResource";
-        internal const string webReferences = "WebReferences";
-        internal const string webReferenceUrl = "WebReferenceUrl";
-        internal const string projectGuid = "ProjectGuid";
-        internal const string preBuildEvent = "PreBuildEvent";
-        internal const string postBuildEvent = "PostBuildEvent";
-        internal const string productVersion = "ProductVersion";
-        internal const string schemaVersion = "SchemaVersion";
-        internal const string outputPath = "OutputPath";
-        internal const string officeDocumentPath = "OfficeDocumentPath";
-        internal const string officeDocumentType = "OfficeProjectType";
-        internal const string officeProject = "OfficeProject";
-        internal const string additionalOptions = "AdditionalOptions";
-        internal const string platform = "Platform";
-        internal const string selectedDevice = "SelectedDevice";
-        internal const string deploymentPlatform = "DeploymentPlatform";
-        internal const string incrementalBuild = "IncrementalBuild";
-        internal const string hintPath = "HintPath";
-        internal const string documentationFile = "DocumentationFile";
-        internal const string debugType = "DebugType";
-        internal const string debugTypeNone = "none";
-        internal const string debugTypeFull = "full";
-        internal const string errorReport = "ErrorReport";
-        internal const string errorReportPrompt = "prompt";
-    }
-
-    /// <summary>
-    /// Contains the names of some of the hard-coded strings we'll be inserting into the newly converted MSBuild project file.
-    /// </summary>
-    /// <owner>RGoel</owner>
-    internal static class XMakeProjectStrings
-    {
-        internal const string project = "Project";
-        internal const string defaultTargets = "Build";
-        internal const string msbuildVersion = "MSBuildVersion";
-        internal const string xmlns = "xmlns";
-        internal const string importPrefix = "$(MSBuildToolsPath)\\";
-        internal const string importSuffix = ".targets";
-        internal const string targetsFilenamePrefix = "Microsoft.";
-        internal const string csharpTargets = "CSharp";
-        internal const string visualBasicTargets = "VisualBasic";
-        internal const string visualJSharpTargets = "VisualJSharp";
-        internal const string triumphImport = "$(MSBuildExtensionsPath)\\Microsoft\\VisualStudio\\v9.0\\OfficeTools\\Microsoft.VisualStudio.OfficeTools.targets";
-        internal const string officeTargetsVS2005Import = @"$(MSBuildExtensionsPath)\Microsoft.VisualStudio.OfficeTools.targets";
-        internal const string officeTargetsVS2005Import2 = @"$(MSBuildExtensionsPath)\Microsoft.VisualStudio.OfficeTools2.targets";
-        internal const string officeTargetsVS2005Repair = @"OfficeTools\Microsoft.VisualStudio.Tools.Office.targets";
-        internal const string configurationPrefix = " '$(Configuration)' == '";
-        internal const string configurationSuffix = "' ";
-        internal const string configuration = "Configuration";
-        internal const string platformPrefix = " '$(Platform)' == '";
-        internal const string platformSuffix = "' ";
-        internal const string platform = "Platform";
-        internal const string configplatformPrefix = " '$(Configuration)|$(Platform)' == '";
-        internal const string configplatformSeparator = "|";
-        internal const string configplatformSuffix = "' ";
-        internal const string defaultConfiguration = "Debug";
-        internal const string defaultPlatform = "AnyCPU";
-        internal const string x86Platform = "x86";
-        internal const string debugSymbols = "DebugSymbols";
-        internal const string reference = "Reference";
-        internal const string comReference = "COMReference";
-        internal const string projectReference = "ProjectReference";
-        internal const string import = "Import";
-        internal const string service = "Service";
-        internal const string folder = "Folder";
-        internal const string link = "Link";
-        internal const string autogen = "AutoGen";
-        internal const string webReferences = "WebReferences";
-        internal const string webReferenceUrl = "WebReferenceUrl";
-        internal const string relPath = "RelPath";
-        internal const string visualStudio = "VisualStudio";
-        internal const string webRefEnableProperties = "WebReference_EnableProperties";
-        internal const string webRefEnableSqlTypes = "WebReference_EnableSQLTypes";
-        internal const string webRefEnableLegacyEventing = "WebReference_EnableLegacyEventingModel";
-        internal const string xmlNamespace = "http://schemas.microsoft.com/developer/msbuild/2003";
-
-        internal const string cSharpGuid = "FAE04EC0-301F-11D3-BF4B-00C04F79EFBC";
-        internal const string visualBasicGuid = "F184B08F-C81C-45F6-A57F-5ABD9991F28F";
-        internal const string visualJSharpGuid = "E6FDF86B-F3D1-11D4-8576-0002A516ECE8";
-        internal const string triumphProjectTypeGuid = "BAA0C2D2-18E2-41B9-852F-F413020CAA33";
-        internal const string VSDCSProjectTypeGuid = "4D628B5B-2FBC-4AA6-8C16-197242AEB884";
-        internal const string VSDVBProjectTypeGuid = "68B1623D-7FB9-47D8-8664-7ECEA3297D4F";
-        internal const string wpfFlavorGuid = "60dc8134-eba5-43b8-bcc9-bb4bc16c2548";
-        internal const string projectTypeGuids = "ProjectTypeGuids";
-        internal const string platformID = "PlatformID";
-        internal const string platformFamilyName = "PlatformFamilyName";
-        internal const string deployTargetSuffix = "DeployDirSuffix";
-        internal const string disableCSHostProc = "<FlavorProperties GUID=\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\">\n<HostingProcess disable=\"1\" />\n</FlavorProperties>";
-        internal const string disableVBHostProc = "<FlavorProperties GUID=\"{F184B08F-C81C-45F6-A57F-5ABD9991F28F}\">\n<HostingProcess disable=\"1\" />\n</FlavorProperties>";
-        internal const string SDECSTargets = "Microsoft.CompactFramework.CSharp.targets";
-        internal const string SDEVBTargets = "Microsoft.CompactFramework.VisualBasic.targets";
-        internal const string TargetFrameworkVersion = "TargetFrameworkVersion";
-        internal const string TargetFrameworkSubset = "TargetFrameworkSubset";
-        internal const string TargetFrameworkProfile = "TargetFrameworkProfile";
-        internal const string ClientProfile = "Client";
-        internal const string vOne = "v1.0";
-        internal const string vTwo = "v2.0";
-        internal const string noWarn = "NoWarn";
-        internal const string disabledVBWarnings = "42016,42017,42018,42019,42032,42353,42354,42355";
-        internal const string xmlFileExtension = ".xml";
-        internal const string csdprojFileExtension = ".csdproj";
-        internal const string vbdprojFileExtension = ".vbdproj";
-        internal const string csprojFileExtension = ".csproj";
-        internal const string vbprojFileExtension = ".vbproj";
-        internal const string myType = "MyType";
-        internal const string web = "Web";
-        internal const string windowsFormsWithCustomSubMain = "WindowsFormsWithCustomSubMain";
-        internal const string windows = "Windows";
-        internal const string codeAnalysisRuleAssemblies = "CodeAnalysisRuleAssemblies";
-        internal const string console = "Console";
-        internal const string empty = "Empty";
-        internal const string exe = "Exe";
-        internal const string library = "Library";
-        internal const string winExe = "WinExe";
-        internal const string outputType = "OutputType";
-        internal const string fileUpgradeFlags = "FileUpgradeFlags";
-        internal const string content = "Content";
-        internal const string copytooutput = "CopyToOutputDirectory";
-        internal const string preservenewest = "PreserveNewest";
-        internal const string toolsVersion = MSBuildConstants.CurrentToolsVersion;
-        internal const string vbTargetsVS2008 = @"$(MSBuildToolsPath)\Microsoft.VisualBasic.targets";
-        internal const string vbTargetsVS2005 = @"$(MSBuildBinPath)\Microsoft.VisualBasic.targets";
-        internal const string vsToolsPath = @"VSToolsPath";
-        internal const string visualStudioVersion = @"VisualStudioVersion";
-        internal const string toRepairPatternForAssetCompat = @"$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\";
-        internal const string toRepairPatternForAssetCompatBeforeV10 = @"$(MSBuildExtensionsPath)\Microsoft\VisualStudio\";
-        internal const string toRepairPatternForAssetCompatV10 = @"$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\";
-        internal const string repairHardCodedPathPattern = @"^v\d{1,2}\.\d\\";
-    }
-}
diff --git a/src/Deprecated/Conversion/Microsoft.Build.Conversion.Core.pkgdef b/src/Deprecated/Conversion/Microsoft.Build.Conversion.Core.pkgdef
deleted file mode 100644
index bef750a882f..00000000000
--- a/src/Deprecated/Conversion/Microsoft.Build.Conversion.Core.pkgdef
+++ /dev/null
@@ -1,7 +0,0 @@
-[$RootKey$\RuntimeConfiguration\dependentAssembly\bindingRedirection\{69CFFD1A-343F-46C5-81B3-8437CD1272CD}]
-"name"="Microsoft.Build.Conversion.Core"
-"codeBase"="$BaseInstallDir$\MSBuild\Current\Bin\Microsoft.Build.Conversion.Core.dll"
-"publicKeyToken"="b03f5f7f11d50a3a"
-"culture"="neutral"
-"oldVersion"="0.0.0.0-99.9.9.9"
-"newVersion"="15.1.0.0"
diff --git a/src/Deprecated/Conversion/Microsoft.Build.Conversion.csproj b/src/Deprecated/Conversion/Microsoft.Build.Conversion.csproj
deleted file mode 100644
index 743ae9160ed..00000000000
--- a/src/Deprecated/Conversion/Microsoft.Build.Conversion.csproj
+++ /dev/null
@@ -1,42 +0,0 @@
-<Project Sdk="Microsoft.NET.Sdk">
-  <PropertyGroup>
-    <AssemblyName>Microsoft.Build.Conversion.Core</AssemblyName>
-    <TargetFramework>$(FullFrameworkTFM)</TargetFramework>
-    <GenerateReferenceAssemblySource>true</GenerateReferenceAssemblySource>
-    <EnableDefaultItems>false</EnableDefaultItems>
-    <IsPackable>true</IsPackable>
-    <PackageDescription>This package contains the $(MSBuildProjectName) assembly which contains logic for converting projects.  NOTE: This assembly is deprecated.</PackageDescription>
-    <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
-    <NoWarn>$(NoWarn);1570;1572;1573;1587</NoWarn>
-    <Nullable>disable</Nullable>
-    <EnablePackageValidation>true</EnablePackageValidation>
-  </PropertyGroup>
-  <ItemGroup>
-    <!-- Source Files -->
-    <Compile Include="AdditionalOptionsParser.cs" />
-    <Compile Include="AssemblyInfo.cs" />
-    <Compile Include="AssemblyResources.cs" />
-    <Compile Include="Constants.cs" />
-    <Compile Include="OldVSProjectFileReader.cs" />
-    <Compile Include="ProjectFileConverter.cs" />
-
-    <!-- Resource Files -->
-
-    <EmbeddedResource Include="Resources\Strings.resx">
-      <LogicalName>$(AssemblyName).Strings.resources</LogicalName>
-      <SubType>Designer</SubType>
-    </EmbeddedResource>
-
-    <EmbeddedResource Include="..\..\Shared\Resources\Strings.shared.resx">
-      <Link>Resources\Strings.shared.resx</Link>
-      <LogicalName>$(AssemblyName).Strings.shared.resources</LogicalName>
-      <SubType>Designer</SubType>
-    </EmbeddedResource>
-
-    <!-- Assemblies Files we depend on -->
-    <Reference Include="System.Configuration" />
-    <ProjectReference Include="..\..\Build\Microsoft.Build.csproj" />
-  </ItemGroup>
-
-  <Import Project="$(RepoRoot)eng\ProducesNoOutput.Settings.props" Condition="! $([MSBuild]::IsOSPlatform('windows'))" />
-</Project>
diff --git a/src/Deprecated/Conversion/OldVSProjectFileReader.cs b/src/Deprecated/Conversion/OldVSProjectFileReader.cs
deleted file mode 100644
index a0f8f164e17..00000000000
--- a/src/Deprecated/Conversion/OldVSProjectFileReader.cs
+++ /dev/null
@@ -1,825 +0,0 @@
-// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-// THE ASSEMBLY BUILT FROM THIS SOURCE FILE HAS BEEN DEPRECATED FOR YEARS. IT IS BUILT ONLY TO PROVIDE
-// BACKWARD COMPATIBILITY FOR API USERS WHO HAVE NOT YET MOVED TO UPDATED APIS. PLEASE DO NOT SEND PULL
-// REQUESTS THAT CHANGE THIS FILE WITHOUT FIRST CHECKING WITH THE MAINTAINERS THAT THE FIX IS REQUIRED.
-
-using System;
-using System.IO;
-using System.Text;
-using System.Text.RegularExpressions;
-
-using error = Microsoft.Build.Shared.ErrorUtilities;
-
-namespace Microsoft.Build.Conversion
-{
-    /// <summary>
-    /// This class implements a custom text reader for the old VS7/Everett 
-    /// project file format.  The old format allowed certain XML special 
-    /// characters to be present within an XML attribute value.  For example,
-    ///
-    ///     &lt;MyElement MyAttribute="My --> Value" /&gt;
-    ///
-    /// However, the System.Xml classes are more strict, and do not allow
-    /// the &lt; or &gt; characters to exist within an attribute value.  But 
-    /// the conversion utility still needs to be able to convert all old
-    /// project files.  So the OldVSProjectFileReader class implements
-    /// the TextReader interface, thereby effectively intercepting all of
-    /// the calls which are used by the XmlTextReader to actually read the
-    /// raw text out of the file.  As we are reading the text out of the 
-    /// file, we replace all &gt; (less-than) characters inside attribute values with "&gt;",
-    /// etc.  The XmlTextReader has no idea that this is going on, but 
-    /// no longer complains about invalid characters.
-    /// </summary>
-    /// <owner>rgoel</owner>
-    internal sealed class OldVSProjectFileReader : TextReader
-    {
-        // This is the underlying text file where we will be reading the raw text
-        // from.
-        private StreamReader oldVSProjectFile;
-
-        // We will be reading one line at a time out of the text file, and caching
-        // it here.
-        private StringBuilder singleLine;
-
-        // The "TextReader" interface that we are implementing only allows
-        // forward access through the file.  You cannot seek to a random location
-        // or read backwards.  This variable is the index into the "singleLine"
-        // string above, which indicates how far the caller has read.  Once we
-        // reach the end of "singleLine", we'll go read a new line from the file.
-        private int currentReadPositionWithinSingleLine;
-
-        /// <summary>
-        /// Constructor, initialized using the filename of an existing old format
-        /// project file on disk.
-        /// </summary>
-        /// <owner>rgoel</owner>
-        /// <param name="filename"></param>
-        internal OldVSProjectFileReader
-            (
-            string filename
-            )
-        {
-            this.oldVSProjectFile = new StreamReader(filename, Encoding.Default); // HIGHCHAR: Default means ANSI, ANSI is what VS .NET 2003 wrote. Without this, the project would be read as ASCII.
-
-            this.singleLine = new StringBuilder();
-            this.currentReadPositionWithinSingleLine = 0;
-        }
-
-        /// <summary>
-        /// Releases all locks and closes all handles on the underlying file.
-        /// </summary>
-        /// <owner>rgoel</owner>
-        public override void Close
-            (
-            )
-        {
-            oldVSProjectFile.Close();
-        }
-
-        /// <summary>
-        /// Returns the next character in the file, without actually advancing
-        /// the read pointer.  Returns -1 if we're already at the end of the file.  
-        /// </summary>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        public override int Peek
-            (
-            )
-        {
-            // If necessary, read a new line of text into our internal buffer 
-            // (this.singleLine).
-            if (!this.ReadLineIntoInternalBuffer())
-            {
-                // If we've reached the end of the file, return -1.
-                return -1;
-            }
-
-            // Return the next character, but don't advance the current position.
-            return this.singleLine[this.currentReadPositionWithinSingleLine];
-        }
-
-        /// <summary>
-        /// Returns the next character in the file, and advances the read pointer.  
-        /// Returns -1 if we're already at the end of the file.
-        /// </summary>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        public override int Read
-            (
-            )
-        {
-            // Use our "Peek" functionality above.
-            int returnCharacter = this.Peek();
-
-            // If there's a character there, advance the read pointer by one.
-            if (returnCharacter != -1)
-            {
-                this.currentReadPositionWithinSingleLine++;
-            }
-
-            return returnCharacter;
-        }
-
-        /// <summary>
-        /// Reads the specified number of characters into the caller's buffer, 
-        /// starting at the specified index into the caller's buffer.  Returns
-        /// the number of characters read, or 0 if we're already at the end of
-        /// the file.
-        /// </summary>
-        /// <param name="bufferToReadInto"></param>
-        /// <param name="startIndexIntoBuffer"></param>
-        /// <param name="charactersToRead"></param>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        public override int Read
-            (
-            char[] bufferToReadInto,       // The buffer to read the data into.
-            int startIndexIntoBuffer,   // The index into "bufferToReadInto"
-            int charactersToRead        // The number of characters to read.
-            )
-        {
-            // Make sure there's enough room in the caller's buffer for what he's
-            // asking us to do.
-            if ((startIndexIntoBuffer + charactersToRead) > bufferToReadInto.Length)
-            {
-                // End-user should never see this message, so it doesn't need to be localized.
-                throw new ArgumentException("Cannot write past end of user's buffer.", nameof(charactersToRead));
-            }
-
-            int charactersCopied = 0;
-
-            // Keep looping until we've read in the number of characters requested.
-            // If we reach the end of file, we'll break out early.
-            while (0 < charactersToRead)
-            {
-                // Read more data from the underlying file if necessary.
-                if (!this.ReadLineIntoInternalBuffer())
-                {
-                    // If we've reached the end of the underlying file, exit the 
-                    // loop.
-                    break;
-                }
-
-                // We're going to copy characters from our cached singleLine to the caller's
-                // buffer.  The number of characters to copy is the lesser of (the remaining
-                // characters in our cached singleLine) and (the number of characters remaining
-                // before we've fulfilled the caller's request).
-                int charactersToCopy = (this.singleLine.Length - currentReadPositionWithinSingleLine);
-                if (charactersToCopy > charactersToRead)
-                {
-                    charactersToCopy = charactersToRead;
-                }
-
-                // Copy characters from our cached "singleLine" to the caller's buffer.
-                this.singleLine.ToString().CopyTo(this.currentReadPositionWithinSingleLine, bufferToReadInto,
-                    startIndexIntoBuffer, charactersToCopy);
-
-                // Update all counts and indices.
-                startIndexIntoBuffer += charactersToCopy;
-                this.currentReadPositionWithinSingleLine += charactersToCopy;
-                charactersCopied += charactersToCopy;
-                charactersToRead -= charactersToCopy;
-            }
-
-            return charactersCopied;
-        }
-
-        /// <summary>
-        /// Not implemented.  Our class only supports reading from a file, which
-        /// can't change beneath the covers while we're reading from it.  Therefore,
-        /// a blocking read doesn't make sense for our scenario.  (A blocking read
-        /// is where you wait until the requested number of characters actually
-        /// become available ... which is never going to happen if you've already
-        /// reached the end of a file.)
-        /// </summary>
-        /// <param name="bufferToReadInto"></param>
-        /// <param name="startIndexIntoBuffer"></param>
-        /// <param name="charactersToRead"></param>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        public override int ReadBlock
-            (
-            char[] bufferToReadInto,
-            int startIndexIntoBuffer,
-            int charactersToRead
-            )
-        {
-            throw new NotImplementedException();
-        }
-
-        /// <summary>
-        /// Reads a single line of text, and returns it as a string, not including the
-        /// terminating line-ending characters.  If we were at the end of the file,
-        /// return null.
-        /// </summary>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        public override string ReadLine
-            (
-            )
-        {
-            // Read a new line from the underlying file if necessary (that is, only
-            // if our currently cached singleLine has already been used up).
-            if (!this.ReadLineIntoInternalBuffer())
-            {
-                // If we reached the end of the underlying file, return null.
-                return null;
-            }
-
-            // We now have a single line of text cached in our "singleLine" variable.
-            // Just return that, or the portion of that which hasn't been already read
-            // by the caller).
-            string result = this.singleLine.ToString(this.currentReadPositionWithinSingleLine,
-                this.singleLine.Length - this.currentReadPositionWithinSingleLine);
-
-            // The caller has read the entirety of our cached "singleLine", so update
-            // our read pointer accordingly.
-            this.currentReadPositionWithinSingleLine = this.singleLine.Length;
-
-            // Strip off the line endings before returning to caller.
-            char[] lineEndingCharacters = new char[] { '\r', '\n' };
-            return result.Trim(lineEndingCharacters);
-        }
-
-        /// <summary>
-        /// Reads the remainder of the file, and returns it as a string.  Returns
-        /// an empty string if we've already reached the end of the file.
-        /// </summary>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        public override string ReadToEnd
-            (
-            )
-        {
-            // This is what we're going to return to the caller.
-            StringBuilder result = new StringBuilder();
-
-            // Keep reading lines of text out of the underlying file, one line at
-            // a time.
-            while (true)
-            {
-                if (!this.ReadLineIntoInternalBuffer())
-                {
-                    // Exit the loop when we've reached the end of the underlying
-                    // file.
-                    break;
-                }
-
-                // Append the line of text to the resulting output.
-                result.Append(this.singleLine.ToString(this.currentReadPositionWithinSingleLine,
-                    this.singleLine.Length - this.currentReadPositionWithinSingleLine));
-
-                this.currentReadPositionWithinSingleLine = this.singleLine.Length;
-            }
-
-            return result.ToString();
-        }
-
-        /// <summary>
-        /// And this is where the real magic happens.  If our currently cached
-        /// "singleLine" has been used up, we read a new line of text from the 
-        /// underlying text file.  But as we read the line of text from the file,
-        /// we immediately replace all instances of special characters that occur
-        /// within double-quotes with the corresponding XML-friendly equivalents.
-        /// For example, if the underlying text file contained this:
-        ///
-        ///     &lt;MyElement MyAttribute="My --&gt; Value" /&gt;
-        ///
-        /// then we would read it in and immediately convert it to this:
-        ///
-        ///     &lt;MyElement MyAttribute="My --&gt; Value" /&gt;
-        ///
-        /// and we would store it this way in our "singleLine", so that the callers
-        /// never know the difference.
-        /// 
-        /// This method returns true on success, and false if we were unable to
-        /// read a new line (due to end of file).
-        /// </summary>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        private bool ReadLineIntoInternalBuffer
-            (
-            )
-        {
-            // Only do the work if we've already used up the data in the currently
-            // cached "singleLine".
-            if (this.currentReadPositionWithinSingleLine >= this.singleLine.Length)
-            {
-                // Read a line of text from the underlying file.
-                string lineFromProjectFile = this.oldVSProjectFile.ReadLine();
-                if (lineFromProjectFile == null)
-                {
-                    // If we've reached the end of the file, return false.
-                    return false;
-                }
-
-                // Take the line of text just read, and replace all special characters
-                // with the escaped XML-friendly string equivalents.
-                this.singleLine = new StringBuilder(this.ReplaceSpecialCharacters(lineFromProjectFile));
-
-                // The underlying StreamReader.ReadLine method doesn't give us the 
-                // trailing line endings, so add them back ourselves.
-                this.singleLine.Append(Environment.NewLine);
-
-                // So now we have a new cached "singleLine".  Reset the read pointer
-                // to the beginning of the new line just read.
-                this.currentReadPositionWithinSingleLine = 0;
-            }
-
-            return true;
-        }
-
-        /// <summary>
-        /// This method uses a regular expression to search for the stuff in
-        /// between double-quotes.  We obviously don't want to touch the stuff
-        /// OUTSIDE of double-quotes, because then we would be mucking with the 
-        /// real angle-brackets that delimit the XML element names, etc.
-        /// </summary>
-        /// <param name="originalLine"></param>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        private string ReplaceSpecialCharacters
-            (
-            string originalLine
-            )
-        {
-            // Find the stuff within double-quotes, and send it off to the 
-            // "ReplaceSpecialCharactersInXmlAttribute" for proper replacement of
-            // the special characters.
-            Regex attributeValueInsideDoubleQuotesPattern = new Regex("= *\"[^\"]*\"");
-
-            string replacedStuffInsideDoubleQuotes = attributeValueInsideDoubleQuotesPattern.Replace(originalLine,
-                new MatchEvaluator(this.ReplaceSpecialCharactersInXmlAttribute));
-
-            // Find the stuff within single-quotes, and send it off to the 
-            // "ReplaceSpecialCharactersInXmlAttribute" for proper replacement of
-            // the special characters.
-            Regex attributeValueInsideSingleQuotesPattern = new Regex("= *'[^']*'");
-
-            string replacedStuffInsideSingleQuotes = attributeValueInsideSingleQuotesPattern.Replace(replacedStuffInsideDoubleQuotes,
-                new MatchEvaluator(this.ReplaceSpecialCharactersInXmlAttribute));
-
-            return replacedStuffInsideSingleQuotes;
-        }
-
-        /// <summary>
-        /// This method is used as the delegate that is passed into Regex.Replace.
-        /// It a regular expression to search for the stuff in
-        /// between double-quotes.  We obviously don't want to touch the stuff
-        /// OUTSIDE of double-quotes, because then we would be mucking with the 
-        /// real angle-brackets that delimit the XML element names, etc.
-        /// </summary>
-        /// <param name="xmlAttribute"></param>
-        /// <returns></returns>
-        /// <owner>RGoel</owner>
-        private string ReplaceSpecialCharactersInXmlAttribute
-            (
-            Match xmlAttribute
-            )
-        {
-            // We've been given the string for the attribute value (i.e., all the stuff
-            // within double-quotes, including the double-quotes).  Replace all the special characters
-            // within it, and return the new string.
-            return ReplaceSpecialCharactersInXmlAttributeString(xmlAttribute.Value);
-        }
-
-        /// <summary>
-        /// This method actually does the replacement of special characters within the 
-        /// text of the XML attribute.
-        /// </summary>
-        /// <param name="xmlAttributeText">Input string</param>
-        /// <returns>New string with all the replacements (e.g. "&amp;" becomes "&amp;amp;", etc.)</returns>
-        /// <owner>RGoel</owner>
-        internal static string ReplaceSpecialCharactersInXmlAttributeString
-            (
-            string xmlAttributeText
-            )
-        {
-            // Replace the special characters with their XML-friendly escaped equivalents.  The
-            // "<" and ">" signs are easy, because if they exist at all within the value of an
-            // XML attribute, we know that they need to be replaced with "&lt;" and "&gt;" 
-            // respectively.
-            xmlAttributeText = xmlAttributeText.Replace("<", "&lt;");
-            xmlAttributeText = xmlAttributeText.Replace(">", "&gt;");
-            xmlAttributeText = ReplaceNonEscapingAmpersands(xmlAttributeText);
-
-            return xmlAttributeText;
-        }
-
-        // Note -- the comment below is rendered a little confusing by escaping for XML doc compiler. Read "&amp;" as "&"
-        // and "&amp;amp;" as "&amp;". Or just look at the intellisense tooltip.
-        /// <summary>
-        /// This method scans the strings for "&amp;" characters, and based on what follows
-        /// the "&amp;" character, it determines whether the "&amp;" character needs to be replaced
-        /// with "&amp;amp;".  The old XML parser used in the VS.NET 2002/2003 project system
-        /// was quite inconsistent in its treatment of escaped characters in XML, so here
-        /// we're having to make up for those bugs.  The new XML parser (System.Xml) 
-        /// is much more strict in enforcing proper XML syntax, and therefore doesn't 
-        /// tolerate "&amp;" characters in the XML attribute value, unless the "&amp;" is being
-        /// used to escape some special character.
-        /// </summary>
-        /// <param name="xmlAttributeText">Input string</param>
-        /// <returns>New string with all the replacements (e.g. "&amp;" becomes "&amp;amp;", etc.)</returns>
-        /// <owner>RGoel</owner>
-        private static string ReplaceNonEscapingAmpersands
-            (
-            string xmlAttributeText
-            )
-        {
-            // Ampersands are a little trickier, because some instances of "&" we need to leave
-            // untouched, and some we need to replace with "&amp;".  For example, 
-            //      aaa&bbb         should be replaced with         aaa&amp;bbb
-            // But:
-            //      aaa&lt;bbb      should not be touched.
-
-            // Loop through each instance of "&"
-            int indexOfAmpersand = xmlAttributeText.IndexOf('&');
-            while (indexOfAmpersand != -1)
-            {
-                // If an "&" was found, search for the next ";" following the "&".
-                int indexOfNextSemicolon = xmlAttributeText.IndexOf(';', indexOfAmpersand);
-                if (indexOfNextSemicolon == -1)
-                {
-                    // No semicolon means that the ampersand was really intended to be a literal
-                    // ampersand and therefore we need to replace it with "&amp;".  For example,
-                    //
-                    //     aaa&bbb          should get replaced with        aaa&amp;bbb
-                    xmlAttributeText = ReplaceAmpersandWithLiteral(xmlAttributeText, indexOfAmpersand);
-                }
-                else
-                {
-                    // We found the semicolon.  Capture the characters between (but not
-                    // including) the "&" and ";".
-                    string entityName = xmlAttributeText.Substring(indexOfAmpersand + 1,
-                        indexOfNextSemicolon - indexOfAmpersand - 1);
-
-                    // Perf note: Here we are walking through the entire list of entities, and
-                    // doing a string comparison for each.  This is expensive, but this code
-                    // should only get executed in fairly rare circumstances.  It's not very 
-                    // common for people to have these embedded into their project files.
-                    bool foundEntity = false;
-                    for (int i = 0; i < entities.Length; i++)
-                    {
-                        // Case-sensitive comparison to see if the entity name matches any of
-                        // the well-known ones that were emitted by the XML writer in the VS.NET
-                        // 2002/2003 project system.
-                        if (String.Equals(entityName, entities[i], StringComparison.Ordinal))
-                        {
-                            foundEntity = true;
-                            break;
-                        }
-                    }
-
-                    // If it didn't match a well-known entity name, then the next thing to 
-                    // check is if it represents an ASCII code.  For example, in an XML
-                    // attribute, if I wanted to represent the "+" sign, I could do this:
-                    //
-                    //          &#43;
-                    //
-                    if (!foundEntity && (entityName.Length > 0) && (entityName[0] == '#'))
-                    {
-                        // At this point, we know entityName is something like "#1234" or "#x1234abcd"
-                        bool isNumber = false;
-
-                        // A lower-case "x" in the second position indicates a hexadecimal value.
-                        if ((entityName.Length > 2) && (entityName[1] == 'x'))
-                        {
-                            isNumber = true;
-
-                            // It's a hexadecimal number.  Make sure every character of the entity
-                            // is in fact a valid hexadecimal character.
-                            for (int i = 2; i < entityName.Length; i++)
-                            {
-                                if (!Uri.IsHexDigit(entityName[i]))
-                                {
-                                    isNumber = false;
-                                    break;
-                                }
-                            }
-                        }
-                        else if (entityName.Length > 1)
-                        {
-                            // Otherwise it's a decimal value.
-                            isNumber = true;
-
-                            // ake sure every character of the entity is in fact a valid decimal number.
-                            for (int i = 1; i < entityName.Length; i++)
-                            {
-                                if (!Char.IsNumber(entityName[i]))
-                                {
-                                    isNumber = false;
-                                    break;
-                                }
-                            }
-                        }
-
-                        if (isNumber)
-                        {
-                            foundEntity = true;
-                        }
-                    }
-
-                    // If the ampersand did not precede an actual well-known entity, then we DO want to 
-                    // replace the "&" with a "&amp;".  Otherwise we don't.
-                    if (!foundEntity)
-                    {
-                        xmlAttributeText = ReplaceAmpersandWithLiteral(xmlAttributeText, indexOfAmpersand);
-                    }
-                }
-
-                // We're done process that particular "&".  Now find the next one.
-                indexOfAmpersand = xmlAttributeText.IndexOf('&', indexOfAmpersand + 1);
-            }
-
-            return xmlAttributeText;
-        }
-
-        // Note -- the comment below is rendered a little confusing by escaping for XML doc compiler. Read "&amp;" as "&"
-        // and "&amp;amp;" as "&amp;". Or just look at the intellisense tooltip.
-        /// <summary>
-        /// Replaces a single instance of an "&amp;" character in a string with "&amp;amp;" and returns the new string.
-        /// </summary>
-        /// <param name="originalString">Original string where we should find an "&amp;" character.</param>
-        /// <param name="indexOfAmpersand">The index of the "&amp;" which we want to replace.</param>
-        /// <returns>The new string with the "&amp;" replaced with "&amp;amp;".</returns>
-        /// <owner>RGoel</owner>
-        internal static string ReplaceAmpersandWithLiteral
-            (
-            string originalString,
-            int indexOfAmpersand
-            )
-        {
-            error.VerifyThrow(originalString[indexOfAmpersand] == '&',
-                "Caller passed in a string that doesn't have an '&' character in the specified location.");
-
-            StringBuilder replacedString = new StringBuilder();
-
-            replacedString.Append(originalString, 0, indexOfAmpersand);
-            replacedString.Append("&amp;");
-            replacedString.Append(originalString, indexOfAmpersand + 1, originalString.Length - indexOfAmpersand + 1);
-
-            return replacedString.ToString();
-        }
-
-        // This is the complete list of well-known entity names that were written out
-        // by the XML writer in the VS.NET 2002/2003 project system.  This list was
-        // taken directly from the source code.
-        private static readonly string[] entities =
-        {
-            "quot",          // 
-            "amp",           // & - ampersand
-            "apos",          // ' - apostrophe //// not part of HTML!
-            "lt",            // < less than
-            "gt",            // > greater than
-            "nbsp",         // Non breaking space
-            "iexcl",        //
-            "cent",         // cent
-            "pound",        // pound
-            "curren",       // currency
-            "yen",          // yen
-            "brvbar",       // vertical bar
-            "sect",         // section
-            "uml",          //
-            "copy",         // Copyright
-            "ordf",         //
-            "laquo",        //
-            "not",          //
-            "shy",          //
-            "reg",          // Registered TradeMark
-            "macr",         //
-            "deg",          //
-            "plusmn",       //
-            "sup2",         //
-            "sup3",         //
-            "acute",        //
-            "micro",        //
-            "para",         //
-            "middot",       //
-            "cedil",        //
-            "sup1",         //
-            "ordm",         //
-            "raquo",        //
-            "frac14",       // 1/4
-            "frac12",       // 1/2
-            "frac34",       // 3/4
-            "iquest",       // Inverse question mark
-            "Agrave",       // Capital A grave accent
-            "Aacute",       // Capital A acute accent
-            "Acirc",        // Capital A circumflex accent
-            "Atilde",       // Capital A tilde
-            "Auml",         // Capital A dieresis or umlaut mark
-            "Aring",        // Capital A ring
-            "AElig",        // Capital AE dipthong (ligature)
-            "Ccedil",       // Capital C cedilla
-            "Egrave",       // Capital E grave accent
-            "Eacute",       // Capital E acute accent
-            "Ecirc",        // Capital E circumflex accent
-            "Euml",         // Capital E dieresis or umlaut mark
-            "Igrave",       // Capital I grave accent
-            "Iacute",       // Capital I acute accent
-            "Icirc",        // Capital I circumflex accent
-            "Iuml",         // Capital I dieresis or umlaut mark
-            "ETH",          // Capital Eth Icelandic
-            "Ntilde",       // Capital N tilde
-            "Ograve",       // Capital O grave accent
-            "Oacute",       // Capital O acute accent
-            "Ocirc",        // Capital O circumflex accent
-            "Otilde",       // Capital O tilde
-            "Ouml",         // Capital O dieresis or umlaut mark
-            "times",        // multiply or times
-            "Oslash",       // Capital O slash
-            "Ugrave",       // Capital U grave accent
-            "Uacute",       // Capital U acute accent
-            "Ucirc",        // Capital U circumflex accent
-            "Uuml",         // Capital U dieresis or umlaut mark;
-            "Yacute",       // Capital Y acute accent
-            "THORN",        // Capital THORN Icelandic
-            "szlig",        // Small sharp s German (sz ligature)
-            "agrave",       // Small a grave accent
-            "aacute",       // Small a acute accent
-            "acirc",        // Small a circumflex accent
-            "atilde",       // Small a tilde
-            "auml",         // Small a dieresis or umlaut mark
-            "aring",        // Small a ring
-            "aelig",        // Small ae dipthong (ligature)
-            "ccedil",       // Small c cedilla
-            "egrave",       // Small e grave accent
-            "eacute",       // Small e acute accent
-            "ecirc",        // Small e circumflex accent
-            "euml",         // Small e dieresis or umlaut mark
-            "igrave",       // Small i grave accent
-            "iacute",       // Small i acute accent
-            "icirc",        // Small i circumflex accent
-            "iuml",         // Small i dieresis or umlaut mark
-            "eth",          // Small eth Icelandic
-            "ntilde",       // Small n tilde
-            "ograve",       // Small o grave accent
-            "oacute",       // Small o acute accent
-            "ocirc",        // Small o circumflex accent
-            "otilde",       // Small o tilde
-            "ouml",         // Small o dieresis or umlaut mark
-            "divide",       // divide
-            "oslash",       // Small o slash
-            "ugrave",       // Small u grave accent
-            "uacute",       // Small u acute accent
-            "ucirc",        // Small u circumflex accent
-            "uuml",         // Small u dieresis or umlaut mark
-            "yacute",       // Small y acute accent
-            "thorn",        // Small thorn Icelandic
-            "yuml",         // Small y dieresis or umlaut mark
-            "OElig",        // latin capital ligature oe, U0152 ISOlat2
-            "oelig",        // latin small ligature oe, U0153 ISOlat2
-            "Scaron",       // latin capital letter s with caron, U0160 ISOlat2
-            "scaron",       // latin small letter s with caron, U0161 ISOlat2
-            "Yuml",         // latin capital letter y with diaeresis, U0178 ISOlat2
-            "fnof",         // latin small f with hook, =function, =florin, U0192 ISOtech
-            "circ",         // modifier letter circumflex accent, U02C6 ISOpub
-            "tilde",        // small tilde, U02DC ISOdia
-            "Alpha",        // greek capital letter alpha
-            "Beta",         // greek capital letter beta
-            "Gamma",        // greek capital letter gamma
-            "Delta",        // greek capital letter delta
-            "Epsilon",      // greek capital letter epsilon
-            "Zeta",         // greek capital letter zeta
-            "Eta",          // greek capital letter eta
-            "Theta",        // greek capital letter theta
-            "Iota",         // greek capital letter iota 
-            "Kappa",        // greek capital letter kappa
-            "Lambda",       // greek capital letter lambda
-            "Mu",           // greek capital letter mu
-            "Nu",           // greek capital letter nu
-            "Xi",           // greek capital letter xi
-            "Omicron",      // greek capital letter omicron
-            "Pi",           // greek capital letter pi
-            "Rho",          // greek capital letter rho
-            "Sigma",        // greek capital letter sigma
-            "Tau",          // greek capital letter tau
-            "Upsilon",      // greek capital letter upsilon
-            "Phi",          // greek capital letter phi
-            "Chi",          // greek capital letter chi
-            "Psi",          // greek capital letter psi   
-            "Omega",        // greek capital letter omega
-            "alpha",        // greek small letter alpha
-            "beta",         // greek small letter beta
-            "gamma",        // greek small letter gamma
-            "delta",        // greek small letter delta
-            "epsilon",      // greek small letter epsilon
-            "zeta",         // greek small letter zeta
-            "eta",          // greek small letter eta
-            "theta",        // greek small letter theta
-            "iota",         // greek small letter iota 
-            "kappa",        // greek small letter kappa
-            "lambda",       // greek small letter lambda
-            "mu",           // greek small letter mu
-            "nu",           // greek small letter nu
-            "xi",           // greek small letter xi
-            "omicron",      // greek small letter omicron
-            "pi",           // greek small letter pi
-            "rho",          // greek small letter rho
-            "sigmaf",       // greek small final sigma
-            "sigma",        // greek small letter sigma
-            "tau",          // greek small letter tau
-            "upsilon",      // greek small letter upsilon
-            "phi",          // greek small letter phi
-            "chi",          // greek small letter chi
-            "psi",          // greek small letter psi   
-            "omega",        // greek small letter omega
-            "thetasym",     // greek small letter theta symbol, U03D1 NEW
-            "upsih",        // greek upsilon with hook symbol
-            "piv",          // greek pi symbol
-            "ensp",        // en space, U2002 ISOpub
-            "emsp",        // em space, U2003 ISOpub
-            "thinsp",      // thin space, U2009 ISOpub
-            "zwnj",        // zero width non-joiner, U200C NEW RFC 2070
-            "zwj",         // zero width joiner, U200D NEW RFC 2070
-            "lrm",         // left-to-right mark, U200E NEW RFC 2070
-            "rlm",         // right-to-left mark, U200F NEW RFC 2070
-            "ndash",       // en dash, U2013 ISOpub
-            "mdash",       // em dash, U2014 ISOpub
-            "lsquo",       // left single quotation mark, U2018 ISOnum
-            "rsquo",       // right single quotation mark, U2019 ISOnum
-            "sbquo",       // single low-9 quotation mark, U201A NEW
-            "ldquo",       // left double quotation mark, U201C ISOnum
-            "rdquo",       // right double quotation mark, U201D ISOnum
-            "bdquo",       // double low-9 quotation mark, U201E NEW
-            "dagger",      // dagger, U2020 ISOpub
-            "Dagger",      // double dagger, U2021 ISOpub
-            "bull",        // bullet, =black small circle, U2022 ISOpub
-            "hellip",      // horizontal ellipsis, =three dot leader, U2026 ISOpub
-            "permil",      // per mille sign, U2030 ISOtech
-            "prime",       // prime, =minutes, =feet, U2032 ISOtech
-            "Prime",       // double prime, =seconds, =inches, U2033 ISOtech
-            "lsaquo",      // single left-pointing angle quotation mark, U2039 ISO proposed
-            "rsaquo",      // single right-pointing angle quotation mark, U203A ISO proposed
-            "oline",       // overline, spacing overscore
-            "frasl",       // fraction slash
-            "image",       // blackletter capital I, =imaginary part, U2111 ISOamso 
-            "weierp",      // script capital P, =power set, =Weierstrass p, U2118 ISOamso 
-            "real",        // blackletter capital R, =real part symbol, U211C ISOamso 
-            "trade",       // trade mark sign, U2122 ISOnum 
-            "alefsym",     // alef symbol, =first transfinite cardinal, U2135 NEW 
-            "larr",        // leftwards arrow, U2190 ISOnum 
-            "uarr",        // upwards arrow, U2191 ISOnum
-            "rarr",        // rightwards arrow, U2192 ISOnum 
-            "darr",        // downwards arrow, U2193 ISOnum 
-            "harr",        // left right arrow, U2194 ISOamsa 
-            "crarr",       // downwards arrow with corner leftwards, =carriage return, U21B5 NEW 
-            "lArr",        // leftwards double arrow, U21D0 ISOtech 
-            "uArr",        // upwards double arrow, U21D1 ISOamsa 
-            "rArr",        // rightwards double arrow, U21D2 ISOtech 
-            "dArr",        // downwards double arrow, U21D3 ISOamsa 
-            "hArr",        // left right double arrow, U21D4 ISOamsa 
-            "forall",      // for all, U2200 ISOtech 
-            "part",        // partial differential, U2202 ISOtech  
-            "exist",       // there exists, U2203 ISOtech 
-            "empty",       // empty set, =null set, =diameter, U2205 ISOamso 
-            "nabla",       // nabla, =backward difference, U2207 ISOtech 
-            "isin",        // element of, U2208 ISOtech 
-            "notin",       // not an element of, U2209 ISOtech 
-            "ni",          // contains as member, U220B ISOtech 
-            "prod",        // n-ary product, =product sign, U220F ISOamsb 
-            "sum",         // n-ary sumation, U2211 ISOamsb 
-            "minus",       // minus sign, U2212 ISOtech 
-            "lowast",      // asterisk operator, U2217 ISOtech 
-            "radic",       // square root, =radical sign, U221A ISOtech 
-            "prop",        // proportional to, U221D ISOtech 
-            "infin",       // infinity, U221E ISOtech 
-            "ang",         // angle, U2220 ISOamso 
-            "and",         // logical and, =wedge, U2227 ISOtech 
-            "or",          // logical or, =vee, U2228 ISOtech 
-            "cap",         // intersection, =cap, U2229 ISOtech 
-            "cup",         // union, =cup, U222A ISOtech 
-            "int",         // integral, U222B ISOtech 
-            "there4",      // therefore, U2234 ISOtech 
-            "sim",         // tilde operator, =varies with, =similar to, U223C ISOtech 
-            "cong",        // approximately equal to, U2245 ISOtech 
-            "asymp",       // almost equal to, =asymptotic to, U2248 ISOamsr 
-            "ne",          // not equal to, U2260 ISOtech 
-            "equiv",       // identical to, U2261 ISOtech 
-            "le",          // less-than or equal to, U2264 ISOtech 
-            "ge",          // greater-than or equal to, U2265 ISOtech 
-            "sub",         // subset of, U2282 ISOtech 
-            "sup",         // superset of, U2283 ISOtech 
-            "nsub",        // not a subset of, U2284 ISOamsn 
-            "sube",        // subset of or equal to, U2286 ISOtech 
-            "supe",        // superset of or equal to, U2287 ISOtech 
-            "oplus",       // circled plus, =direct sum, U2295 ISOamsb 
-            "otimes",      // circled times, =vector product, U2297 ISOamsb 
-            "perp",        // up tack, =orthogonal to, =perpendicular, U22A5 ISOtech 
-            "sdot",        // dot operator, U22C5 ISOamsb 
-            "lceil",       // left ceiling, =apl upstile, U2308, ISOamsc  
-            "rceil",       // right ceiling, U2309, ISOamsc  
-            "lfloor",      // left floor, =apl downstile, U230A, ISOamsc  
-            "rfloor",      // right floor, U230B, ISOamsc  
-            "lang",        // left-pointing angle bracket, =bra, U2329 ISOtech 
-            "rang",        // right-pointing angle bracket, =ket, U232A ISOtech 
-            "loz",         // lozenge, U25CA ISOpub 
-            "spades",      // black spade suit, U2660 ISOpub 
-            "clubs",       // black club suit, =shamrock, U2663 ISOpub 
-            "hearts",      // black heart suit, =valentine, U2665 ISOpub 
-            "diams"        // black diamond suit, U2666 ISOpub 
-        };
-    }
-}
diff --git a/src/Deprecated/Conversion/ProjectFileConverter.cs b/src/Deprecated/Conversion/ProjectFileConverter.cs
deleted file mode 100644
index 808ea0749a1..00000000000
--- a/src/Deprecated/Conversion/ProjectFileConverter.cs
+++ /dev/null
@@ -1,3930 +0,0 @@
-// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-// THE ASSEMBLY BUILT FROM THIS SOURCE FILE HAS BEEN DEPRECATED FOR YEARS. IT IS BUILT ONLY TO PROVIDE
-// BACKWARD COMPATIBILITY FOR API USERS WHO HAVE NOT YET MOVED TO UPDATED APIS. PLEASE DO NOT SEND PULL
-// REQUESTS THAT CHANGE THIS FILE WITHOUT FIRST CHECKING WITH THE MAINTAINERS THAT THE FIX IS REQUIRED.
-
-using System;
-using System.Collections;
-using System.IO;
-using System.Globalization;
-using System.Reflection;
-using System.Xml;
-using System.Collections.Generic;
-using System.Diagnostics.CodeAnalysis;
-using System.Text.RegularExpressions;
-using System.Linq;
-
-using Microsoft.Build.Construction;
-using Microsoft.Build.Shared;
-using ProjectLoadSettings = Microsoft.Build.BuildEngine.ProjectLoadSettings;
-using OldProject = Microsoft.Build.BuildEngine.Project;
-using OldEngine = Microsoft.Build.BuildEngine.Engine;
-
-using InvalidProjectFileException = Microsoft.Build.Exceptions.InvalidProjectFileException;
-using ProjectXmlUtilities = Microsoft.Build.Internal.ProjectXmlUtilities;
-
-using error = Microsoft.Build.Shared.ErrorUtilities;
-using Microsoft.Build.Evaluation;
-
-namespace Microsoft.Build.Conversion
-{
-    /***************************************************************************
-     *
-     * An outline of the structure of a VS.NET 2002/2003 project file is shown
-     * below:
-     *
-     * <VisualStudioProject>
-     *    <CSHARP, VisualBasic, or VISUALJSHARP attributes>
-     *      <Build>
-     *          <Settings attributes>
-     *              <Config Name="..." attributes>
-     *                  <InteropRegistration attributes /> (.USER file only)
-     *              </Config>
-     *              <Config Name="..." attributes>
-     *                  <InteropRegistration attributes /> (.USER file only)
-     *              </Config>
-     *              ...
-     *          </Settings>
-     *
-     *          <References>
-     *              <Reference
-     *                  Name="alias"                    (required)
-     *                  Private="True/False"
-     *                  Guid="guid"                     (COM2 references only)
-     *                  VersionMinor="minorversion"     (COM2 references only)
-     *                  VersionMajor="majorversion"     (COM2 references only)
-     *                  Lcid="lcid"                     (COM2 references only)
-     *                  WrapperTool="wrappertool"       (COM2 references only)
-     *                  Project="projectguid"           (Project references only)
-     *                  Package="packageguid"           (Project references only)
-     *                  AssemblyName="assembly"         (.NET references only)
-     *                  HintPath="hintpath"             (.NET references only)
-     *                  AssemblyFolderKey="asmfolder"   (.NET references only)
-     *                  />
-     *              <Reference .../>
-     *              ...
-     *          </References>
-     *
-     *          <Imports>
-     *              <Import Namespace="namespace" />
-     *              <Import Namespace="namespace" />
-     *              ...
-     *          </Imports>
-     *      </Build>
-     *
-     *      <Files>
-     *          <Include>
-     *              <File
-     *                  RelPath="project-relative path"
-     *                  Link="path to actual file"      (Linked files only)
-     *                  SubType="subtype"
-     *                  BuildAction="buildaction"
-     *                  DesignTime="true/false"
-     *                  AutoGen="true/false"
-     *                  Generator="generator"
-     *                  CustomToolNamespace="customtoolns"
-     *                  LastGenOutputs="lastgenoutputs"
-     *                  DependentUpon="dependentfile"
-     *                  />
-     *              <Folder
-     *                  RelPath="relpath"
-     *                  WebReferences="true"        (Web reference folders only)
-     *                  WebReferenceURL="url"       (Web references only)
-     *                  UrlBehavior="urlbehavior"   (Web references only)
-     *                  />
-     *              ...
-     *          </Include>
-     *      </Files>
-     *
-     *      <StartupServices>
-     *          <Service ID="id"/>
-     *          <Service ID="id"/>
-     *          ...
-     *      </StartupServices>
-     *
-     *      <UserProperties attributes>
-     *          random goop?
-     *      </UserProperties>
-     *
-     *      <OtherProjectSettings attributes /> (.USER file only)
-     *
-     *    </CSHARP, /VisualBasic, or /VISUALJSHARP>
-     *
-     * </VisualStudioProject>
-     *
-     **************************************************************************/
-    /// <summary>
-    /// This class performs a project file format conversion from Visual Studio
-    /// .NET 2002 or 2003 to MSBuild format (for Whidbey).
-    /// </summary>
-    /// <owner>rgoel</owner>
-    public sealed class ProjectFileConverter
-    {
-        // The filename of the old VS7/Everett project file.
-        private string oldProjectFile = null;
-
-        // The target Whidbey project file for the conversion.
-        private string newProjectFile = null;
-
-        // Is the project file we're converting a .USER file?
-        private bool isUserFile = false;
-
-        // Is the conversion a minor upgrade operation?
-        // Minor upgrade also means the converted project file can be opened in old VS as well, so we won't update the tools version.
-        private bool isMinorUpgrade = false;
-
-        // The object representing the destination XMake project.
-        private ProjectRootElement xmakeProject = null;
-
-        // This is the XMake object representing the global property group
-        // in the destination project file.
-        private ProjectPropertyGroupElement globalPropertyGroup = null;
-
-        // The language for the project we're converting -- CSHARP, VisualBasic, VISUALJSHARP
-        private string language = null;
-
-        // This is the project instance GUID for the project we're converting
-        // (only if it's the main project file -- this doesn't apply for .USER
-        // files).
-        private string projectGuid = null;
-
-        // This is the fullpath to the solution file that contains this project
-        // being converted.  When conversion is done from the IDE in-proc, this
-        // information can be given to us unambiguously.  However, in the command-
-        // line case, we may have to use a heuristic to search for the containing
-        // SLN ourselves.
-        private string solutionFile = null;
-
-        // This is the object representing the VS solution named above.
-        private SolutionFile solution = null;
-
-        // The PreBuildEvent and PostBuildEvent properties are handled specially.
-        private string preBuildEvent = null;
-        private string postBuildEvent = null;
-
-        // If we see any web references in the project, we must add some new properties to the
-        // Whidbey project file, in order to force the proxy generation code to mimic the
-        // Everett behavior.
-        private bool newWebReferencePropertiesAdded = false;
-
-        // If this is a VSD ( devices ) project, this is the platform retrieved.  It's needed in two places...
-        private string platformForVSD = null;
-        private string frameworkVersionForVSD = null;
-
-        // Cache the assembly name (used for converting DocumentationFile property for VB)
-        private string assemblyName = null;
-
-        // Cache the output type (used for choosing the correct MyType for VB projects).
-        private string outputType = null;
-
-        // Whether or not System.Windows.Forms is present as a reference.
-        private bool hasWindowsFormsReference = false;
-
-        private bool isMyTypeAlreadySetInOriginalProject = false;
-
-        // Internal collecction that collects the conversion warnings,
-        // to be exposed through the ConversionWarnings property
-        private ArrayList conversionWarnings = null;
-
-        // A list of property names whose values we need to escape when converting to Whidbey.
-        private Dictionary<string, string> propertiesToEscape = null;
-
-        /// <summary>
-        /// Default constructor.  We need a constructor that takes zero parameters,
-        /// because this class needs to be instantiated from COM.
-        /// </summary>
-        /// <owner>rgoel</owner>
-        public ProjectFileConverter
-            (
-            )
-        {
-            this.oldProjectFile = null;
-            this.newProjectFile = null;
-            this.isUserFile = false;
-            this.solutionFile = null;
-
-            Initialize();
-        }
-
-        /// <summary>
-        /// The read/write accessor for the old project filename.  This must be
-        /// set by the consumer before calling Convert().
-        /// </summary>
-        /// <owner>rgoel</owner>
-        public string OldProjectFile
-        {
-            get
-            {
-                return oldProjectFile;
-            }
-            set
-            {
-                oldProjectFile = value;
-            }
-        }
-
-        /// <summary>
-        /// The read/write accessor for the new project filename.  This must be
-        /// set by the consumer before calling Convert().
-        /// </summary>
-        /// <owner>rgoel</owner>
-        public string NewProjectFile
-        {
-            get
-            {
-                return newProjectFile;
-            }
-            set
-            {
-                newProjectFile = value;
-            }
-        }
-
-        /// <summary>
-        /// The read/write accessor for the boolean which tells the converter
-        /// whether the project file we're converting is a "main" project file
-        /// or a .USER file.  Most of the conversion logic is identical for
-        /// both types of files, but for example, one difference is that the
-        /// "main" project file gets an &lt;Import&gt; tag inserted at the end.
-        /// </summary>
-        /// <owner>rgoel</owner>
-        public bool IsUserFile
-        {
-            get
-            {
-                return isUserFile;
-            }
-            set
-            {
-                isUserFile = value;
-            }
-        }
-
-        /// <summary>
-        /// The read/write accessor for the solution file which contains this
-        /// project being converted.  This is used to look up information about the
-        /// project-to-project references.
-        /// </summary>
-        /// <owner>rgoel</owner>
-        public string SolutionFile
-        {
-            get
-            {
-                return solutionFile;
-            }
-            set
-            {
-                solutionFile = Path.GetFullPath(value);
-            }
-        }
-
-        /// <summary>
-        /// Indicates if the last attempted conversion was skipped because the project is already in the latest format.
-        /// This will always return false;
-        /// </summary>
-        /// <owner>SumedhK</owner>
-        /// <value>true, if conversion was skipped</value>
-        public bool ConversionSkippedBecauseProjectAlreadyConverted
-        {
-            get
-            {
-                return false;
-            }
-        }
-
-        /// <summary>
-        /// This property returns the list of warnings that were generated during the conversion
-        /// </summary>
-        /// <owner>faisalmo</owner>
-        /// <value>true, if conversion was skipped</value>
-        [SuppressMessage("Microsoft.Performance", "CA1819:PropertiesShouldNotReturnArrays", Justification = "Public interface that has shipped previously. ")]
-        public string[] ConversionWarnings
-        {
-            get
-            {
-                return (string[])conversionWarnings.ToArray(typeof(string));
-            }
-        }
-
-        /// <summary>
-        /// Is the conversion a minor upgrade operation?
-        /// Minor upgrade also means the converted project file can be opened in old VS as well, so we won't update the tools version.
-        /// </summary>
-        public bool IsMinorUpgrade
-        {
-            get
-            {
-                return this.isMinorUpgrade;
-            }
-
-            set
-            {
-                this.isMinorUpgrade = value;
-            }
-        }
-
-        /// <summary>
-        /// This is the entry point method, which performs the project file format
-        /// conversion.  This method will overwrite "newProjectFile" if it already
-        /// exists, so the caller of this method should confirm with the user
-        /// that that's what he really wants to do.
-        /// </summary>
-        /// <owner>rgoel</owner>
-        public void Convert()
-        {
-            DoConvert();
-        }
-
-        /// <summary>
-        /// This is the entry point method, which performs the project file format
-        /// conversion.  This method will overwrite "newProjectFile" if it already
-        /// exists, so the caller of this method should confirm with the user
-        /// that that's what he really wants to do.
-        /// </summary>
-        /// <owner>rgoel</owner>
-        [Obsolete("Use parameterless overload instead")]
-        public void Convert(ProjectLoadSettings projectLoadSettings)
-        {
-            DoConvert();
-        }
-
-        /// <summary>
-        /// This is the entry point method, which performs the project file format
-        /// conversion.  This method will overwrite "newProjectFile" if it already
-        /// exists, so the caller of this method should confirm with the user
-        /// that that's what he really wants to do.
-        /// </summary>
-        /// <owner>rgoel</owner>
-        [Obsolete("Use parameterless overload instead.")]
-        public void Convert
-            (
-            string msbuildBinPath
-            )
-        {
-            DoConvert();
-        }
-
-        /// <summary>
-        /// Helper method to convert given an engine
-        /// </summary>
-        private void DoConvert()
-        {
-            // Make sure we were passed in non-empty source and destination project
-            // file names.
-            error.VerifyThrowArgument(!string.IsNullOrEmpty(this.oldProjectFile),
-                "MissingOldProjectFile");
-            error.VerifyThrowArgument(!string.IsNullOrEmpty(this.newProjectFile),
-                "MissingNewProjectFile");
-
-            ConvertInMemoryToMSBuildProject();
-
-            this.xmakeProject.Save(newProjectFile);
-        }
-
-        /// <summary>
-        /// Initialize all member variables to get ready for a conversion.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void Initialize()
-        {
-            this.xmakeProject = null;
-            this.globalPropertyGroup = null;
-            this.language = null;
-            this.projectGuid = null;
-            this.preBuildEvent = null;
-            this.postBuildEvent = null;
-            this.solution = null;
-            this.newWebReferencePropertiesAdded = false;
-            this.platformForVSD = null;
-            this.assemblyName = null;
-            this.outputType = null;
-            this.hasWindowsFormsReference = false;
-            this.isMyTypeAlreadySetInOriginalProject = false;
-            this.conversionWarnings = new ArrayList();
-
-            this.propertiesToEscape = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase);
-            this.propertiesToEscape.Add("ApplicationIcon", null);
-            this.propertiesToEscape.Add("AssemblyKeyContainerName", null);
-            this.propertiesToEscape.Add("AssemblyName", null);
-            this.propertiesToEscape.Add("AssemblyOriginatorKeyFile", null);
-            this.propertiesToEscape.Add("RootNamespace", null);
-            this.propertiesToEscape.Add("StartupObject", null);
-            this.propertiesToEscape.Add("ConfigurationOverrideFile", null);
-            this.propertiesToEscape.Add("DocumentationFile", null);
-            this.propertiesToEscape.Add("OutputPath", null);
-        }
-
-        /// <summary>
-        /// This is the entry point method, which performs the project file format
-        /// conversion.  This method will simply create a new XmlDocument
-        /// in memory, instead of trying to write it to disk.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ConvertInMemoryToMSBuildProject()
-        {
-            // Make sure we were passed in non-empty source and destination project
-            // file names.
-            error.VerifyThrowArgument(!string.IsNullOrEmpty(this.oldProjectFile),
-                "MissingOldProjectFile");
-
-            // Make sure the source project file exists.
-            error.VerifyThrowArgument(File.Exists(oldProjectFile), "ProjectFileNotFound",
-                oldProjectFile);
-
-            Initialize();
-
-            // Load the old project file as an XML document.
-            XmlDocumentWithLocation oldProjectDocument = new XmlDocumentWithLocation();
-            oldProjectDocument.PreserveWhitespace = true;
-            TextReader oldProjectFileReader = new OldVSProjectFileReader(oldProjectFile);
-            try
-            {
-                // We have our own custom XML reader to read in the old VS7/Everett project
-                // file.  This is because the VS7/Everett project file format supported
-                // having characters like <, >, &, etc. embedded inside XML attribute
-                // values, but the default XmlTextReader won't handle this.
-                using (XmlTextReader xmlReader = new XmlTextReader(oldProjectFileReader))
-                {
-                    xmlReader.DtdProcessing = DtdProcessing.Ignore;
-                    oldProjectDocument.Load(xmlReader);
-                }
-            }
-            catch (Exception e)
-            {
-                throw new InvalidProjectFileException(e.Message);
-            }
-            finally
-            {
-                oldProjectFileReader.Close();
-            }
-
-            // Get the top-level nodes from the XML.
-            XmlNodeList rootNodes = oldProjectDocument.ChildNodes;
-            XmlElementWithLocation visualStudioProjectElement = null;
-
-            // The XML parser will guarantee that we only have one real root element,
-            // but since XML comments may appear outside of the <VisualStudioProject> scope,
-            // it's possible to get more than one child node.  Just find the first
-            // non-comment node.  That should be the <VisualStudioProject> element.
-            foreach (XmlNode childNode in rootNodes)
-            {
-                if ((childNode.NodeType != XmlNodeType.Comment) &&
-                    (childNode.NodeType != XmlNodeType.XmlDeclaration) &&
-                    (childNode.NodeType != XmlNodeType.Whitespace))
-                {
-                    visualStudioProjectElement = (XmlElementWithLocation)childNode;
-                    break;
-                }
-            }
-
-            IElementLocation oldProjectDocumentLocation = ElementLocation.Create(oldProjectDocument.FullPath, 1, 1);
-
-            // Verify that we found a non-comment root node.
-            ProjectErrorUtilities.VerifyThrowInvalidProject(visualStudioProjectElement != null,
-                oldProjectDocumentLocation,
-                "NoRootProjectElement", VSProjectElements.visualStudioProject);
-
-            // If the root element is <Project>, then assume that this project is
-            // already in XMake format.
-            if (visualStudioProjectElement.Name == XMakeProjectStrings.project)
-            {
-                this.xmakeProject = ProjectRootElement.Open(oldProjectFile);
-
-                // For Whidbey project just need to set the "ToolsVersion" attribute for the main project file
-                // and remove imports like <Import Project="$(MSBuildBinPath)\Microsoft.WinFX.targets" />
-                // because the Fidalgo stuff is part of .NET Framework 3.5
-
-                // For upgraded workflow projects, the workflow targets need to reference the new v3.5 targets instead of v3.0 targets
-                // this change is required to fix the msbuild break when building workflow rules.
-                // e.g. before upgrade :<Import Project="$(MSBuildExtensionsPath)\Microsoft\Windows Workflow Foundation\v3.0\Workflow.Targets" />
-                // after upgrade  <Import Project="$(MSBuildExtensionsPath)\Microsoft\Windows Workflow Foundation\v3.5\Workflow.Targets" />
-
-                string oldToolsVersion = xmakeProject.ToolsVersion;
-
-                xmakeProject.ToolsVersion = XMakeProjectStrings.toolsVersion;
-                List<ProjectImportElement> listOfImportsToBeDeleted = new List<ProjectImportElement>();
-                List<ProjectImportElement> listOfWFImportsToBeDeleted = new List<ProjectImportElement>();
-                List<string> workflowImportsToAdd = new List<string>();
-                string workflowTargetsBasePath = @"$(MSBuildExtensionsPath)\Microsoft\Windows Workflow Foundation\";
-                string workflowOldWhidbeyTargetsPath = workflowTargetsBasePath + @"v3.0\";
-                string workflowOldOrcasTargetsPath = workflowTargetsBasePath + @"v3.5\";
-                string workflowNewTargetsPath = @"$(MSBuildToolsPath)\";
-                bool removedWFWhidbeyTargets = false;
-                bool changedProject = false;
-
-                // Find matching imports but don't delete whilst enumerating else it will throw an error
-                foreach (ProjectImportElement nextImport in xmakeProject.Imports)
-                {
-                    if (String.Equals(nextImport.Project, @"$(MSBuildBinPath)\Microsoft.WinFX.targets", StringComparison.OrdinalIgnoreCase))
-                    {
-                        listOfImportsToBeDeleted.Add(nextImport);
-                    }
-
-                    if (nextImport.Project.Contains(workflowOldWhidbeyTargetsPath))
-                    {
-                        listOfWFImportsToBeDeleted.Add(nextImport);
-                        workflowImportsToAdd.Add(nextImport.Project.Replace(workflowOldWhidbeyTargetsPath, workflowNewTargetsPath));
-                        removedWFWhidbeyTargets = true;
-                    }
-                    if (nextImport.Project.Contains(workflowOldOrcasTargetsPath))
-                    {
-                        listOfWFImportsToBeDeleted.Add(nextImport);
-                        workflowImportsToAdd.Add(nextImport.Project.Replace(workflowOldOrcasTargetsPath, workflowNewTargetsPath));
-                    }
-                }
-
-                // Now delete any matching imports
-                foreach (ProjectImportElement importToDelete in listOfWFImportsToBeDeleted)
-                {
-                    this.xmakeProject.RemoveChild(importToDelete);
-                    changedProject = true;
-                }
-
-                bool removedWinFXTargets = false;
-                foreach (ProjectImportElement importToDelete in listOfImportsToBeDeleted)
-                {
-                    this.xmakeProject.RemoveChild(importToDelete);
-                    removedWinFXTargets = true;
-                    changedProject = true;
-                }
-
-                // If we removed WinFX targets this is a sparkle project and should use v3.0
-                if (removedWinFXTargets)
-                {
-                    xmakeProject.AddProperty(XMakeProjectStrings.TargetFrameworkVersion, "v3.0");
-                    changedProject = true;
-                }
-
-                //If we removed WFWhidbey imports, we should target this project to v3.0
-                if (removedWFWhidbeyTargets)
-                {
-                    xmakeProject.AddProperty(XMakeProjectStrings.TargetFrameworkVersion, "v3.0");
-                    changedProject = true;
-                }
-
-                // Re-add the workflow imports with the v4.0 targets.
-                foreach (string workflowImportToAdd in workflowImportsToAdd)
-                {
-                    this.xmakeProject.AddImport(workflowImportToAdd);
-                    changedProject = true;
-                }
-
-                // Find all the XAML files in the project and give them the custom attributes
-                //   <Generator>MSBuild:Compile</Generator> (DevDiv Bugs bug 81222)
-                //   <SubType>Designer</SubType> (DevDiv Bugs bug 82748)
-
-                // Find all references to old VC project files (.vcproj extension) and change the
-                // extension to .vcxproj instead.  NOTE: we assume that the actual .vcproj -> .vcxproj
-                // conversion has already been / is being / will be done elsewhere.
-                // Dev10 Bug 557388
-
-                foreach (ProjectItemElement nextItem in xmakeProject.Items)
-                {
-                    if ((!nextItem.ItemType.Equals("Reference", StringComparison.OrdinalIgnoreCase)) &&
-                        (nextItem.Include.Trim().EndsWith(".xaml", StringComparison.OrdinalIgnoreCase)))
-
-                    {
-                        if (!nextItem.Metadata.Any(m => String.Equals(m.Name, "Generator", StringComparison.OrdinalIgnoreCase)))
-                        {
-                            nextItem.AddMetadata("Generator", "MSBuild:Compile");
-                            changedProject = true;
-                        }
-
-                        if (!nextItem.Metadata.Any(m => String.Equals(m.Name, "SubType", StringComparison.OrdinalIgnoreCase)))
-                        {
-                            nextItem.AddMetadata("SubType", "Designer");
-                            changedProject = true;
-                        }
-                    }
-
-                    if (String.Equals(nextItem.ItemType, "ProjectReference", StringComparison.OrdinalIgnoreCase) &&
-                        nextItem.Include.Trim().EndsWith(".vcproj", StringComparison.OrdinalIgnoreCase))
-                    {
-                        nextItem.Include = Path.ChangeExtension(nextItem.Include, ".vcxproj");
-                        changedProject = true;
-                    }
-                }
-
-                // DevDiv Bugs bug 100701: if we removed the Microsoft.WinFX.targets import,
-                // and if there is no ProjectTypeGuids property, add the WPF flavor GUID
-                if (removedWinFXTargets)
-                {
-                    ProjectPropertyElement currentGuidsProperty = FindPropertyIfPresent(this.xmakeProject, XMakeProjectStrings.projectTypeGuids);
-                    string newGuids = "{" + XMakeProjectStrings.wpfFlavorGuid + "}";
-                    if (currentGuidsProperty == null || currentGuidsProperty.Value.Length == 0)
-                    {
-                        string currentGuids = String.Empty;
-
-                        // To have a flavor GUID we need a base GUID.
-                        if (oldProjectFile.EndsWith(".csproj", StringComparison.OrdinalIgnoreCase))
-                        {
-                            currentGuids = "{" + XMakeProjectStrings.cSharpGuid + "}";
-                        }
-                        if (oldProjectFile.EndsWith(".vbproj", StringComparison.OrdinalIgnoreCase))
-                        {
-                            currentGuids = "{" + XMakeProjectStrings.visualBasicGuid + "}";
-                        }
-                        xmakeProject.AddProperty(XMakeProjectStrings.projectTypeGuids, newGuids + ";" + currentGuids);
-                        changedProject = true;
-                    }
-                }
-
-                // Fix up TargetFrameworkSubset
-                changedProject = FixTargetFrameworkSubset() || changedProject;
-
-                var hasFSharpSpecificConversions = FSharpSpecificConversions(true);
-
-                changedProject = hasFSharpSpecificConversions || changedProject;
-                changedProject = VBSpecificConversions() || changedProject;
-
-                // Do asset compat repair for any project that was previously a TV < 12.0
-                if (
-                        String.IsNullOrEmpty(oldToolsVersion) ||
-                        String.Equals(oldToolsVersion, "3.5", StringComparison.OrdinalIgnoreCase) ||
-                        String.Equals(oldToolsVersion, "4.0", StringComparison.OrdinalIgnoreCase)
-                    )
-                {
-                    changedProject = DoRepairForAssetCompat() || changedProject;
-                }
-
-                // Remove any default fully qualified Code Analysis paths.
-                // DevDiv bug 63415
-                changedProject = FixCodeAnalysisPaths() || changedProject;
-
-                if (hasFSharpSpecificConversions && !String.IsNullOrEmpty(oldToolsVersion))
-                {
-                    // for Bug 609702:A ToolsVersion=12.0 F# project fails to load in VS 2012
-                    // for F# project after upgrade we restore previous value of ToolsVersion so Dev11 still can load upgraded project
-                    // however if old ToolsVersion as 3.5 - it will be upgraded to 4.0 to avoid any unexpected behavior in Dev10\Dev11
-                    xmakeProject.ToolsVersion = String.Equals(oldToolsVersion, "3.5", StringComparison.OrdinalIgnoreCase) ? "4.0" : oldToolsVersion;
-                }
-                else if (this.isMinorUpgrade ||
-                        (!changedProject &&
-                         !String.IsNullOrEmpty(oldToolsVersion) &&
-                         !String.Equals(oldToolsVersion, "3.5", StringComparison.OrdinalIgnoreCase))
-                    )
-                {
-                    // If it's minor upgrade, or nothing changed and the project was already TV 4.0 or higher,
-                    // set the ToolsVersion back to its old value. 
-                    xmakeProject.ToolsVersion = oldToolsVersion;
-                }
-            }
-            else
-            {
-                // OK, we have to start with a fresh project and assemble it
-                this.xmakeProject = ProjectRootElement.Create();
-
-                // This root node must be a <VisualStudioProject> node.
-                ProjectErrorUtilities.VerifyThrowInvalidProject(visualStudioProjectElement.Name ==
-                    VSProjectElements.visualStudioProject,
-                    visualStudioProjectElement.Location, "UnrecognizedElement", visualStudioProjectElement.Name);
-
-                // Set the "DefaultTargets" attribute for the main project file.
-                if (!isUserFile)
-                {
-                    xmakeProject.DefaultTargets = XMakeProjectStrings.defaultTargets;
-                }
-
-                // Set the "ToolsVersion" attribute for the main project file.
-                if (!isUserFile)
-                {
-                    xmakeProject.ToolsVersion = XMakeProjectStrings.toolsVersion;
-                }
-
-                // Process the <VisualStudioProject> element in the source project file,
-                // adding the necessary stuff to the XMake project.
-                this.ProcessVisualStudioProjectElement(visualStudioProjectElement);
-            }
-        }
-
-        /// <summary>
-        /// returns 'false' if there was no repair required
-        /// else does a repair and returns 'true'
-        /// </summary>
-        /// <returns>bool</returns>
-        private bool DoRepairForAssetCompat()
-        {
-            var toRepairImports = RequiresRepairForAssetCompat();
-
-            if (toRepairImports == null || toRepairImports.Count() == 0)
-            {
-                // no need to repair
-                return false;
-            }
-
-            foreach (var toRepairImport in toRepairImports)
-            {
-                RepairImportForAssetCompat(toRepairImport);
-            }
-
-            //
-            // Add PropertyGroup with Conditions right before where the Imports occur
-            //   <PropertyGroup>
-            //     <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
-            //     <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
-            //   </PropertyGroup>
-            //
-            var vsToolsPathPropGroup = this.xmakeProject.CreatePropertyGroupElement();
-            var firstAmongImports = this.xmakeProject.Imports.First();
-            firstAmongImports.Parent.InsertBeforeChild(vsToolsPathPropGroup, firstAmongImports);
-
-            var vsVersionProperty = this.xmakeProject.CreatePropertyElement(XMakeProjectStrings.visualStudioVersion);
-            vsVersionProperty.Value = @"10.0";
-            vsVersionProperty.Condition = @"'$(VisualStudioVersion)' == ''";
-            vsToolsPathPropGroup.AppendChild(vsVersionProperty);
-
-            var vsToolsPathProperty = this.xmakeProject.CreatePropertyElement(XMakeProjectStrings.vsToolsPath);
-            vsToolsPathProperty.Value = @"$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)";
-            vsToolsPathProperty.Condition = @"'$(VSToolsPath)' == ''";
-            vsToolsPathPropGroup.AppendChild(vsToolsPathProperty);
-
-            //
-            // Add a conditional import to Microsoft.Common.props at the beginning of project
-            // <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"/>
-            //
-            var newImportElement = this.xmakeProject.CreateImportElement(@"$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props");
-            newImportElement.Condition = @"Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')";
-            this.xmakeProject.InsertBeforeChild(newImportElement, this.xmakeProject.FirstChild);
-
-            return true;
-        }
-
-        /// <summary>
-        /// Repairs the given import element
-        /// Change Import to use $(VSToolsPath), with Condition using $(VSToolsPath)
-        /// e.g. From: Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\WebApplications\Microsoft.WebApplication.targets"
-        ///        To: Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\WebApplications\Microsoft.WebApplication.targets" Condition="false"
-        ///            Import Project="$(VSToolsPath)\WebApplications\Microsoft.WebApplication.targets"
-        /// $(VSToolsPath) will be defined elsewhere in this upgrade to be: $(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)
-        /// </summary>
-        /// <param name="toRepairImport"></param>
-        private void RepairImportForAssetCompat(ProjectImportElement toRepairImport)
-        {
-            // We shouldn't have this happen but check anyway:
-            ErrorUtilities.VerifyThrowInternalNull(toRepairImport, nameof(toRepairImport));
-            ErrorUtilities.VerifyThrow(!toRepairImport.Condition.Equals("false", StringComparison.OrdinalIgnoreCase), "RepairImportForAssetCompat should not receive imports with condition=false already");
-
-            var newImportElement = this.xmakeProject.CreateImportElement(toRepairImport.Project);
-            newImportElement.Condition = "false";
-            newImportElement.Project = XMakeProjectStrings.toRepairPatternForAssetCompatV10 + ExtractImportTargetsString(newImportElement.Project);
-            toRepairImport.Parent.InsertAfterChild(newImportElement, toRepairImport);
-
-            toRepairImport.Project = @"$(VSToolsPath)\" + ExtractImportTargetsString(toRepairImport.Project);
-            toRepairImport.Condition = @"'$(VSToolsPath)' != ''";
-        }
-
-        /// <summary>
-        /// Extracts the actual targets imported without the repair -pattern path
-        /// e.g. from: $(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\WebApplications\Microsoft.WebApplication.targets
-        /// we will extract: WebApplications\Microsoft.WebApplication.targets
-        /// </summary>
-        /// <param name="importProjectValue"></param>
-        /// <returns></returns>
-        private string ExtractImportTargetsString(string importProjectValue)
-        {
-            // For VS2005 Office Targets return: OfficeTools\Microsoft.VisualStudio.Tools.Office.targets
-            if (importProjectValue.Equals(XMakeProjectStrings.officeTargetsVS2005Import, StringComparison.OrdinalIgnoreCase)
-                || importProjectValue.Equals(XMakeProjectStrings.officeTargetsVS2005Import2, StringComparison.OrdinalIgnoreCase))
-            {
-                return XMakeProjectStrings.officeTargetsVS2005Repair;
-            }
-
-            string startString;
-
-            if (importProjectValue.StartsWith(XMakeProjectStrings.toRepairPatternForAssetCompat, StringComparison.OrdinalIgnoreCase))
-            {
-                startString = XMakeProjectStrings.toRepairPatternForAssetCompat;
-            }
-            else
-            {
-                startString = XMakeProjectStrings.toRepairPatternForAssetCompatBeforeV10;
-            }
-
-            string result = importProjectValue.Remove(0, startString.Length);
-
-            // Extract the version string
-            Match m = Regex.Match(result, XMakeProjectStrings.repairHardCodedPathPattern);
-
-            return result.Remove(0, m.Length);
-        }
-
-        /// <summary>
-        /// Checks if repair is required
-        /// </summary>
-        /// <returns>bool</returns>
-        private IEnumerable<ProjectImportElement> RequiresRepairForAssetCompat()
-        {
-            // check if the project has the to-repair pattern in the Imports
-            // pattern: $(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\
-            var toRepairImports = from import in xmakeProject.Imports
-                                  where HasRepairPattern(import)
-                                  select import;
-
-            return toRepairImports;
-        }
-
-        /// <summary>
-        /// Check if the Import element has a repair pattern:
-        /// $(MSBuildExtensionsPath)\Microsoft\VisualStudio\vX.X
-        /// or $(MSBuildExtensionsPath)\Microsoft.VisualStudio.OfficeTools.targets
-        /// </summary>
-        /// <param name="importElement"></param>
-        /// <returns></returns>
-        private bool HasRepairPattern(ProjectImportElement importElement)
-        {
-            bool bHasRepairPattern = false;
-
-            // in case of an already repaired project the repair pattern will exist with Condition="false"
-            if (!String.Equals(importElement.Condition, "false", StringComparison.OrdinalIgnoreCase))
-            {
-                if ((importElement.Project.StartsWith(XMakeProjectStrings.toRepairPatternForAssetCompat, StringComparison.OrdinalIgnoreCase))
-                    || (importElement.Project.StartsWith(XMakeProjectStrings.toRepairPatternForAssetCompatBeforeV10, StringComparison.OrdinalIgnoreCase)))
-                {
-                    string startString;
-                    if (importElement.Project.StartsWith(XMakeProjectStrings.toRepairPatternForAssetCompat, StringComparison.OrdinalIgnoreCase))
-                    {
-                        startString = XMakeProjectStrings.toRepairPatternForAssetCompat;
-                    }
-                    else
-                    {
-                        startString = XMakeProjectStrings.toRepairPatternForAssetCompatBeforeV10;
-                    }
-
-                    Match m = Regex.Match(importElement.Project.Substring(startString.Length), XMakeProjectStrings.repairHardCodedPathPattern);
-
-                    if (m.Success)
-                    {
-                        bHasRepairPattern = true;
-                    }
-                }
-                else
-                {
-                    // Check for VS2003/2005 Office Targets
-                    // $(MSBuildExtensionsPath)\Microsoft.VisualStudio.OfficeTools.targets
-                    if (importElement.Project.Equals(XMakeProjectStrings.officeTargetsVS2005Import, StringComparison.OrdinalIgnoreCase)
-                        || importElement.Project.Equals(XMakeProjectStrings.officeTargetsVS2005Import2, StringComparison.OrdinalIgnoreCase))
-                    {
-                        bHasRepairPattern = true;
-                    }
-                }
-            }
-
-            return bHasRepairPattern;
-        }
-
-        /// <summary>
-        /// Fixes <TargetFrameworkSubset/> properties in the project file.  This was the Orcas SP1 way of
-        /// handling framework profiles, and that way is now incompatible with the VS 2010 way of handling
-        /// profiles.
-        /// </summary>
-        /// <returns>true if changes were required, false otherwise</returns>
-        private bool FixTargetFrameworkSubset()
-        {
-            bool changedProject = false;
-
-            foreach (ProjectPropertyElement propertyElement in xmakeProject.Properties)
-            {
-                if (String.Equals(propertyElement.Name, XMakeProjectStrings.TargetFrameworkSubset, StringComparison.OrdinalIgnoreCase))
-                {
-                    // For the Client profile, which was the only profile supported in Orcas SP1, we want to replace 
-                    // <TargetFrameworkSubset/> with <TargetFrameworkProfile/>.
-                    if (String.Equals(propertyElement.Value, XMakeProjectStrings.ClientProfile, StringComparison.OrdinalIgnoreCase))
-                    {
-                        ProjectPropertyGroupElement parentGroup = (ProjectPropertyGroupElement)propertyElement.Parent;
-                        parentGroup.SetProperty(XMakeProjectStrings.TargetFrameworkProfile, XMakeProjectStrings.ClientProfile);
-                        changedProject = true;
-                    }
-
-                    // In all cases, <TargetFrameworkSubset/> is no longer supported.  If it comes from the project
-                    // that we're converting, then we forcibly remove it.  If it comes from some import... the user is
-                    // on their own.  
-                    if (propertyElement.ContainingProject == xmakeProject)
-                    {
-                        propertyElement.Parent.RemoveChild(propertyElement);
-                        changedProject = true;
-                    }
-
-                    break;
-                }
-            }
-
-            return changedProject;
-        }
-
-        /// <summary>
-        /// Performs conversions specific to F# projects (VS2008 CTP -> VS2012) and (VS2010 -> VS2012).
-        /// This involves: changing the location of FSharp targets,
-        /// and for 2008CTP, adding explicit mscorlib and FSharp.Core references.
-        /// </summary>
-        /// <param name="actuallyMakeChanges">if true, make the changes, otherwise, don't actually make any changes, but do report the return boolean as to whether you would make changes</param>
-        /// <returns>true if anything was (would be) changed, false otherwise</returns>
-        public bool FSharpSpecificConversions(bool actuallyMakeChanges)
-        {
-            // For FSharp projects, should import different location of FSharp targets
-            const string fsharpFS10TargetsPath = @"$(MSBuildExtensionsPath)\FSharp\1.0\Microsoft.FSharp.Targets";
-            const string fsharpFS10TargetsPath32 = @"$(MSBuildExtensionsPath32)\FSharp\1.0\Microsoft.FSharp.Targets";
-            const string fsharpFS40TargetsPath = @"$(MSBuildExtensionsPath32)\..\Microsoft F#\v4.0\Microsoft.FSharp.Targets";
-            const string fsharpFS45TargetsPath = @"$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets";
-            const string fsharpPortableDev11TargetsPath = @"$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.Portable.FSharp.Targets";
-
-            const string fsharpDev12PlusProperty = "FSharpTargetsPath";
-
-            // Dev12+ projects import *.targets files using property
-            const string fsharpDev12PlusImportsValue = @"$(" + fsharpDev12PlusProperty + ")";
-            // Q: do we need to distinguish between different versions of F# for the same version of VS
-            const string fsharpDev12PlusTargetsPath = @"$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets";
-            const string fsharpDev12PlusPortableTargetsPath = @"$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.Portable.FSharp.Targets";
-
-            bool isAtLeastDev10Project = false;
-
-            ProjectImportElement fsharpTargetsFS10Import = null;
-            ProjectImportElement fsharpTargetsFS40Import = null;
-            ProjectImportElement fsharpTargetsFS45Import = null;
-            ProjectImportElement fsharpTargetsDev12PlusImport = null;
-            ProjectImportElement fsharpTargetsDev11PortableImport = null;
-
-            if (!actuallyMakeChanges && this.xmakeProject == null)
-            {
-                // when coming down the actuallyMakeChanges==false code path (from the F# project system's UpgradeProject_CheckOnly method), we may not have loaded the Xml yet, so do that now
-                this.xmakeProject = ProjectRootElement.Open(oldProjectFile);
-            }
-
-            // local function: string equality check using OrdinalIgnoreCase comparison
-            Func<string, string, bool> equals = (s1, s2) => String.Equals(s1, s2, StringComparison.OrdinalIgnoreCase);
-
-            // local function: wraps specified string value into Exists('value')
-            Func<string, string> exists = s => string.Format(CultureInfo.InvariantCulture, "Exists('{0}')", s);
-
-            // local function: 
-            // Creates property group element containing one property fsharpDev12PlusProperty with value 'path'. 
-            // If addCondition is true, property group will have Exists(path) condition
-            Action<string, ProjectElementContainer> appendPropertyGroupForDev12PlusTargetsPath =
-                (path, parent) =>
-                {
-                    var propGroup = xmakeProject.CreatePropertyGroupElement();
-                    parent.AppendChild(propGroup);
-                    var prop = xmakeProject.CreatePropertyElement(fsharpDev12PlusProperty);
-                    prop.Value = path;
-                    propGroup.AppendChild(prop);
-                };
-
-            foreach (ProjectImportElement importElement in xmakeProject.Imports)
-            {
-                if (equals(importElement.Project, fsharpFS10TargetsPath) || equals(importElement.Project, fsharpFS10TargetsPath32))
-                {
-                    fsharpTargetsFS10Import = importElement;
-                    if (equals(@"!Exists('$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll')", fsharpTargetsFS10Import.Condition)
-                        || equals(@"!Exists('$(MSBuildBinPath)\Microsoft.Build.Tasks.v4.0.dll')", fsharpTargetsFS10Import.Condition))
-                    {
-                        isAtLeastDev10Project = true;
-                    }
-                }
-                else if (equals(importElement.Project, fsharpFS40TargetsPath))
-                {
-                    fsharpTargetsFS40Import = importElement;
-                    isAtLeastDev10Project = true;
-                }
-                else if (equals(importElement.Project, fsharpFS45TargetsPath))
-                {
-                    fsharpTargetsFS45Import = importElement;
-                    isAtLeastDev10Project = true;
-                }
-                else if (equals(importElement.Project, fsharpDev12PlusImportsValue))
-                {
-                    fsharpTargetsDev12PlusImport = importElement;
-                    isAtLeastDev10Project = true;
-                }
-                else if (equals(importElement.Project, fsharpPortableDev11TargetsPath))
-                {
-                    fsharpTargetsDev11PortableImport = importElement;
-                    isAtLeastDev10Project = true;
-                }
-            }
-
-            if (fsharpTargetsDev12PlusImport != null)
-            {
-                // if project already contains version independent import - then assume it is already at least dev12 - do nothing
-                return false;
-            }
-
-            // no other F# imports - do nothing
-            if (fsharpTargetsFS10Import == null && fsharpTargetsFS40Import == null && fsharpTargetsFS45Import == null && fsharpTargetsDev11PortableImport == null)
-            {
-                return false;
-            }
-
-            if (!actuallyMakeChanges)
-            {
-                return true;
-            }
-
-            // both branches adds this elements to the project
-            var chooseElement = xmakeProject.CreateChooseElement(); // (1)
-
-            if (fsharpTargetsDev11PortableImport != null)
-            {
-                // Dev11 portable library
-                // Expected fragment of the project file after upgrade
-                //<Choose>
-                //  <When Condition="'$(VisualStudioVersion)' == '11.0'"> (2)
-                //    <PropertyGroup>
-                //      <FSharpTargetsPath>$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.Portable.FSharp.Targets</FSharpTargetsPath>
-                //    </PropertyGroup>
-                //  </When>
-                //  <Otherwise> (3)
-                //    <PropertyGroup>
-                //      <FSharpTargetsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.Portable.FSharp.Targets</FSharpTargetsPath>
-                //    </PropertyGroup>
-                //  </Otherwise>
-                //</Choose>
-                //<Import Project=""$(FSharpTargetsPath)"" Condition="Exists('$(FSharpTargetsPath)')"/>
-                fsharpTargetsDev11PortableImport.Parent.InsertBeforeChild(chooseElement, fsharpTargetsDev11PortableImport);
-
-                // portable libraries are supported since Dev11
-                var whenVsVersionIsDev11 = xmakeProject.CreateWhenElement("'$(VisualStudioVersion)' == '11.0'"); // (2)
-                chooseElement.AppendChild(whenVsVersionIsDev11);
-
-                appendPropertyGroupForDev12PlusTargetsPath(fsharpPortableDev11TargetsPath, whenVsVersionIsDev11);
-
-                var otherwiseIfVsVersionIsDev12Plus = xmakeProject.CreateOtherwiseElement(); // (3)
-                chooseElement.AppendChild(otherwiseIfVsVersionIsDev12Plus);
-
-                appendPropertyGroupForDev12PlusTargetsPath(fsharpDev12PlusPortableTargetsPath, otherwiseIfVsVersionIsDev12Plus);
-            }
-            else
-            {
-                // This is an FSharp project, and it does not already have a 4.5 import, and thus it needs repair.
-                // one of these elements should be non-null, otherwise we'll exit based on the check above
-                var someNonNullImportElement = fsharpTargetsFS10Import ?? fsharpTargetsFS40Import ?? fsharpTargetsFS45Import;
-
-                someNonNullImportElement.Parent.InsertBeforeChild(chooseElement, someNonNullImportElement);
-
-                // Expected fragment of the project file after upgrade 
-                //<Choose>
-                //  <When Condition="'$(VisualStudioVersion)' == '11.0'">
-                //    <PropertyGroup>
-                //      <FSharpTargetsPath>$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets</FSharpTargetsPath>
-                //    </PropertyGroup>
-                //  </When>
-                //  <Otherwise>
-                //    <PropertyGroup>
-                //      <FSharpTargetsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets</FSharpTargetsPath>
-                //    </PropertyGroup>
-                //  </Otherwise>
-                //</Choose>
-                //<Import Project="$(FSharpTargetsPath)" Condition="Exists('$(FSharpTargetsPath)')" />           
-
-                var whenVsVersionIsDev11 = xmakeProject.CreateWhenElement("'$(VisualStudioVersion)' == '11.0'");
-                chooseElement.AppendChild(whenVsVersionIsDev11);
-                {
-                    appendPropertyGroupForDev12PlusTargetsPath(fsharpFS45TargetsPath, whenVsVersionIsDev11);
-                }
-
-                var otherwiseIfVsVersionIsDev12Plus = xmakeProject.CreateOtherwiseElement();
-                chooseElement.AppendChild(otherwiseIfVsVersionIsDev12Plus);
-                {
-                    // Dev12+ projects - import target file based on property 'fsharpDev12PlusProperty'
-                    appendPropertyGroupForDev12PlusTargetsPath(fsharpDev12PlusTargetsPath, otherwiseIfVsVersionIsDev12Plus);
-                }
-            }
-            // add Dev12 specific Imports element
-            var dev12PlusImportElement = xmakeProject.CreateImportElement(fsharpDev12PlusImportsValue);
-            dev12PlusImportElement.Condition = exists(fsharpDev12PlusImportsValue);
-            chooseElement.Parent.InsertAfterChild(dev12PlusImportElement, chooseElement);
-
-            if (fsharpTargetsFS10Import != null)
-            {
-                xmakeProject.RemoveChild(fsharpTargetsFS10Import);
-            }
-
-            if (fsharpTargetsFS40Import != null)
-            {
-                xmakeProject.RemoveChild(fsharpTargetsFS40Import);
-            }
-
-            if (fsharpTargetsFS45Import != null)
-            {
-                xmakeProject.RemoveChild(fsharpTargetsFS45Import);
-            }
-
-            if (fsharpTargetsDev11PortableImport != null)
-            {
-                xmakeProject.RemoveChild(fsharpTargetsDev11PortableImport);
-            }
-
-            const string ReferenceItemType = "Reference";
-
-            // find ItemGroup for Reference items
-            ProjectItemGroupElement referencesItemGroup = xmakeProject.Items
-                .Where(projectItem => projectItem.ItemType == ReferenceItemType && projectItem.Parent is ProjectItemGroupElement)
-                .Select(projectItem => (ProjectItemGroupElement)projectItem.Parent)
-                .FirstOrDefault();
-
-            if (referencesItemGroup == null)
-            {
-                referencesItemGroup = this.xmakeProject.AddItemGroup();
-            }
-
-            var targetFrameworkVersionProperty = xmakeProject.Properties.FirstOrDefault(p => equals(p.Name, "TargetFrameworkVersion"));
-
-            // fix FSharp.Core reference
-            const string TargetFSharpCoreVersionProperty = "TargetFSharpCoreVersion";
-
-            // by default import with minimal possible version
-            const string DefaultFSharpCoreVersionFor40 = "4.3.0.0";
-            const string DefaultFSharpCoreVersionFor20 = "2.3.0.0";
-            const string DefaultPortableFSharpCoreVersion = "2.3.5.0";
-            const string FSharpCoreName = "FSharp.Core";
-
-            if (!isAtLeastDev10Project)
-            {
-                bool hasMscorlibReference = xmakeProject.Items.Any(projectItem => projectItem.ItemType == ReferenceItemType && equals(projectItem.Include, "mscorlib"));
-                // It appears pre-dev10, so add explicit references to mscorlib
-                if (!hasMscorlibReference)
-                {
-                    referencesItemGroup.AddItem(ReferenceItemType, "mscorlib");
-                }
-            }
-
-            // try to find reference to FSharp.Core 
-            ProjectItemElement fsharpCoreItem = null;
-            foreach (var item in xmakeProject.Items.Where(x => x.ItemType == ReferenceItemType))
-            {
-                try
-                {
-                    var name = new AssemblyName(item.Include);
-                    if (name.Name == FSharpCoreName)
-                    {
-                        fsharpCoreItem = item;
-                        break;
-                    }
-                }
-                catch (FileLoadException)
-                {
-                    // Include contains not AssemblyName but rather something else - not the case for F# projects
-                }
-            }
-
-            const string Dev11PortableFSharpCoreLocation = @"$(MSBuildExtensionsPath32)\..\Reference Assemblies\Microsoft\FSharp\3.0\Runtime\.NETPortable\FSharp.Core.dll";
-            const string Dev12PortableFSharpCoreLocationForDev11Projects = @"$(MSBuildExtensionsPath32)\..\Reference Assemblies\Microsoft\FSharp\.NETPortable\$(" + TargetFSharpCoreVersionProperty + @")\FSharp.Core.dll";
-            const string HintPath = "HintPath";
-
-            ProjectItemElement newFSharpCoreItem = null;
-            string targetFSharpCoreVersionValue = null;
-
-            var hintPathValue = fsharpCoreItem?.Metadata.FirstOrDefault(metadata => metadata.Name == HintPath);
-            if (hintPathValue != null)
-            {
-                if (equals(hintPathValue.Value, Dev11PortableFSharpCoreLocation))
-                {
-                    // Reference to Dev11 portable library
-                    newFSharpCoreItem = referencesItemGroup.AddItem(ReferenceItemType, FSharpCoreName);
-                    newFSharpCoreItem.AddMetadata(HintPath, Dev12PortableFSharpCoreLocationForDev11Projects);
-
-                    targetFSharpCoreVersionValue = DefaultPortableFSharpCoreVersion;
-                }
-            }
-            else if (!isAtLeastDev10Project || fsharpCoreItem != null)
-            {
-                newFSharpCoreItem = referencesItemGroup.AddItem(ReferenceItemType, string.Format("FSharp.Core, Version=$({0}), Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", TargetFSharpCoreVersionProperty));
-                if (targetFrameworkVersionProperty == null || string.IsNullOrEmpty(targetFrameworkVersionProperty.Value) || !targetFrameworkVersionProperty.Value.StartsWith("v"))
-                {
-                    targetFSharpCoreVersionValue = DefaultFSharpCoreVersionFor40;
-                }
-                else
-                {
-                    var versionStr = targetFrameworkVersionProperty.Value.Substring(1); // strip 'v'
-                    Version version;
-                    targetFSharpCoreVersionValue =
-                        Version.TryParse(versionStr, out version)
-                        ? version.Major < 4 ? DefaultFSharpCoreVersionFor20 : DefaultFSharpCoreVersionFor40
-                        : DefaultFSharpCoreVersionFor40;
-                }
-            }
-
-            newFSharpCoreItem?.AddMetadata("Private", "True");
-
-            const string MinimumVisualStudioVersionProperty = "MinimumVisualStudioVersion";
-            var hasMinimumVSVersion = xmakeProject.Properties.Any(prop => prop.Name == MinimumVisualStudioVersionProperty);
-
-            foreach (var group in xmakeProject.PropertyGroups)
-            {
-                // find first non-conditional property group to add TargetFSharpCoreVersion property
-                if (string.IsNullOrEmpty(group.Condition))
-                {
-                    if (targetFSharpCoreVersionValue != null)
-                    {
-                        group.AddProperty(TargetFSharpCoreVersionProperty, targetFSharpCoreVersionValue);
-                    }
-
-                    if (!hasMinimumVSVersion)
-                    {
-                        var prop = group.AddProperty(MinimumVisualStudioVersionProperty, "11");
-                        prop.Condition = "'$(" + MinimumVisualStudioVersionProperty + ")' == ''";
-                    }
-
-                    break;
-                }
-            }
-
-            // new FSharp.Core was added - can delete the old reference
-            if (newFSharpCoreItem != null && fsharpCoreItem != null)
-            {
-                fsharpCoreItem.Parent.RemoveChild(fsharpCoreItem);
-            }
-
-            return true;
-        }
-
-        /// <summary>
-        /// Performs conversions specific to VB projects (VS2008 and VS2008 -> VS2010).
-        /// This involves: Adding a set of nowarn settings to disable warnings added
-        /// in VS2010 that break customers upgrading from previous releases.
-        /// </summary>
-        /// <returns>true if changes were required, false otherwise</returns>
-        private bool VBSpecificConversions()
-        {
-            // Are we upgrading a VB project?
-            // We are if the project file imports:
-            //     "$(MSBuildToolsPath)\Microsoft.VisualBasic.targets" (VS2008)
-            //     "$(MSBuildBinPath)\Microsoft.VisualBasic.targets"   (VS2005)
-
-            bool vbProject = false;
-            bool changedProject = false;
-
-            foreach (var import in xmakeProject.Imports)
-            {
-                if (String.Equals(import.Project, XMakeProjectStrings.vbTargetsVS2008, StringComparison.OrdinalIgnoreCase) ||
-                    String.Equals(import.Project, XMakeProjectStrings.vbTargetsVS2005, StringComparison.OrdinalIgnoreCase))
-                {
-                    vbProject = true;
-                    break;
-                }
-            }
-
-            // Not a VB project -> no work to do.
-            if (!vbProject)
-            {
-                return changedProject;
-            }
-
-            // Any property group with a condition is of interest.
-            // If we find it and it has "NoWarn" property, we add our warnings into it.
-            // If it doesn't, we create new NoWarn property with the initial value
-            foreach (var group in xmakeProject.PropertyGroups)
-            {
-                if (String.IsNullOrEmpty(group.Condition))
-                {
-                    continue;
-                }
-
-                string noWarn = null;
-                foreach (var property in group.Properties)
-                {
-                    if (String.Equals(property.Name, XMakeProjectStrings.noWarn, StringComparison.OrdinalIgnoreCase))
-                    {
-                        noWarn = property.Value;
-                        break;
-                    }
-                }
-
-                if (String.IsNullOrWhiteSpace(noWarn))
-                {
-                    noWarn = String.Empty;
-                }
-                else
-                {
-                    noWarn = noWarn.Trim();
-                }
-
-                string originalNoWarnValue = noWarn;
-                //
-                // Split the no warning string and trim the results
-                //
-                string[] oldWarnings = noWarn.Split(',');
-                for (var oi = 0; oi < oldWarnings.Length; oi++)
-                {
-                    oldWarnings[oi] = oldWarnings[oi].Trim();
-                }
-
-                //
-                // Add the new warnings specific to Dev10: 42353,42354,42355
-                // (if we don't have them already)
-                //
-                string[] newWarnings = new[] { "42353", "42354", "42355" };
-
-                foreach (var newWarn in newWarnings)
-                {
-                    bool found = false;
-                    foreach (var oldWarn in oldWarnings)
-                    {
-                        if (String.Equals(newWarn, oldWarn, StringComparison.OrdinalIgnoreCase))
-                        {
-                            found = true;
-                            break;
-                        }
-                    }
-
-                    if (!found)
-                    {
-                        // append the new warning
-                        if (!String.IsNullOrEmpty(noWarn) && !noWarn.EndsWith(",", StringComparison.OrdinalIgnoreCase))
-                        {
-                            noWarn += ",";
-                        }
-                        noWarn += newWarn;
-                    }
-                }
-
-                // Set the property value. If it doesn't exist, it will be added.
-                if (!String.Equals(originalNoWarnValue, noWarn, StringComparison.OrdinalIgnoreCase))
-                {
-                    group.SetProperty(XMakeProjectStrings.noWarn, noWarn);
-                    changedProject = true;
-                }
-            }
-
-            return changedProject;
-        }
-
-        /// <summary>
-        /// This is the entry point method, which performs the project file format
-        /// conversion.  This method will simply create a new MSBuild Project object
-        /// in memory, instead of trying to write it to disk.
-        /// </summary>
-        public ProjectRootElement ConvertInMemory()
-        {
-            ConvertInMemoryToMSBuildProject();
-
-            return xmakeProject;
-        }
-
-        /// <summary>
-        /// This is the entry point method, which performs the project file format
-        /// conversion.  This method will simply create a new MSBuild Project object
-        /// in memory, instead of trying to write it to disk.
-        /// </summary>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        [Obsolete("Use parameterless ConvertInMemory() method instead")]
-        public OldProject ConvertInMemory
-            (
-                OldEngine engine
-            )
-        {
-            return ConvertInMemory(engine, ProjectLoadSettings.None);
-        }
-
-        /// <summary>
-        /// This is the entry point method, which performs the project file format
-        /// conversion.  This method will simply create a new MSBuild Project object
-        /// in memory, instead of trying to write it to disk.
-        /// </summary>
-        /// <returns></returns>
-        /// <owner>rgoel</owner>
-        [Obsolete("Use parameterless ConvertInMemory() method instead")]
-        public OldProject ConvertInMemory
-            (
-                OldEngine engine,
-                ProjectLoadSettings projectLoadSettings
-            )
-        {
-            this.ConvertInMemoryToMSBuildProject();
-
-            OldProject oldProject = new OldProject(engine);
-
-            using (StringReader reader = new StringReader(xmakeProject.RawXml))
-            {
-                oldProject.Load(reader);
-            }
-
-            return oldProject;
-        }
-
-        /// <summary>
-        /// Takes an XML element from an Everett project file, and loops through
-        /// all its attributes.  For each attribute, it adds a new XMake property
-        /// to the destination project file in the property group passed in.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void AddXMakePropertiesFromXMLAttributes
-            (
-            ProjectPropertyGroupElement propertyGroup,
-            XmlElement xmlElement
-            )
-        {
-            error.VerifyThrow(propertyGroup != null, "Expected valid ProjectPropertyElementGroup to add properties to.");
-
-            foreach (XmlAttribute xmlAttribute in xmlElement.Attributes)
-            {
-                // Add this as a property to the MSBuild project file.  If the property is one of those
-                // that contains an identifier or a path, we must escape it to treat it as a literal.
-                string value = xmlAttribute.Value;
-                if (this.propertiesToEscape.ContainsKey(xmlAttribute.Name))
-                {
-                    value = ProjectCollection.Escape(value);
-                }
-
-                propertyGroup.AddProperty(xmlAttribute.Name, value);
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;VisualStudioProject&gt; XML element, and everything
-        /// within it.  As it is doing this, it will add stuff to the xmakeProject.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessVisualStudioProjectElement
-            (
-            XmlElementWithLocation visualStudioProjectElement
-            )
-        {
-            // Make sure this is the <VisualStudioProject> element.
-            error.VerifyThrow((visualStudioProjectElement?.Name == VSProjectElements.visualStudioProject),
-                "Expected <VisualStudioProject> element.");
-
-            // Make sure the caller has given us a valid xmakeProject object.
-            error.VerifyThrow(xmakeProject != null, "Expected valid XMake project object.");
-
-            // This is just about better error reporting.  Detect if the user tried
-            // to convert a VC++ or some other type of project, and give a more friendly
-            // error message.
-            string projectType = visualStudioProjectElement.GetAttribute(VSProjectAttributes.projectType);
-            ProjectErrorUtilities.VerifyThrowInvalidProject(string.IsNullOrEmpty(projectType),
-                visualStudioProjectElement.Location, "ProjectTypeCannotBeConverted", projectType);
-
-            // Make sure the <VisualStudioProject> tag doesn't have any attributes.
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!visualStudioProjectElement.HasAttributes,
-                visualStudioProjectElement.Location, "NoAttributesExpected",
-                VSProjectElements.visualStudioProject);
-
-            bool languageFound = false;
-
-            // Loop through all the direct children of the <VisualStudioProject> element.
-            foreach (XmlNode visualStudioProjectChildNode in visualStudioProjectElement)
-            {
-                // Handle XML comments under the <VisualStudioProject> node (just ignore them)
-                if ((visualStudioProjectChildNode.NodeType == XmlNodeType.Comment) ||
-                    (visualStudioProjectChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (visualStudioProjectChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation visualStudioProjectChildElement = (XmlElementWithLocation)visualStudioProjectChildNode;
-
-                    switch (visualStudioProjectChildElement.Name)
-                    {
-                        // See if we have a <CSHARP>, <VisualBasic>, or <VISUALJSHARP> element.
-                        case VSProjectElements.cSharp:
-                        case VSProjectElements.visualJSharp:
-                        case VSProjectElements.visualBasic:
-                        case VSProjectElements.ECSharp:
-                        case VSProjectElements.EVisualBasic:
-                            // Make sure this is the first language node we're encountering.
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(!languageFound, visualStudioProjectChildElement.Location,
-                                "MultipleLanguageNodesNotAllowed", VSProjectElements.visualStudioProject);
-
-                            languageFound = true;
-                            this.language = visualStudioProjectChildNode.Name;
-                            this.ProcessLanguageElement((XmlElementWithLocation)visualStudioProjectChildElement);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, visualStudioProjectChildElement.Location,
-                                "UnrecognizedChildElement", visualStudioProjectChildElement.Name,
-                                VSProjectElements.visualStudioProject);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(visualStudioProjectChildNode.Name, visualStudioProjectElement.Name, visualStudioProjectElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the language (e.g. &lt;CSHARP&gt;) XML element, and everything
-        /// within it.  As it is doing this, it will add stuff to the xmakeProject.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessLanguageElement
-            (
-            XmlElementWithLocation languageElement
-            )
-        {
-            // Make sure we have a valid XML element to process.
-            error.VerifyThrow(languageElement != null, "Expected valid XML language element.");
-
-            // Make sure the caller has given us a valid xmakeProject object.
-            error.VerifyThrow(xmakeProject != null, "Expected valid XMake project object.");
-
-            // Get the project instance GUID for this project file.  It is required for
-            // the main project file, but not for the .USER file.
-            this.projectGuid = languageElement.GetAttribute(VSProjectAttributes.projectGuid);
-            ProjectErrorUtilities.VerifyThrowInvalidProject((this.projectGuid != null) || (this.isUserFile),
-                languageElement.Location, "MissingAttribute", languageElement.Name, VSProjectAttributes.projectGuid);
-
-            // Get the project type for this project file.  We only support "Local".  We do not
-            // convert web projects -- that's Venus's job.
-            string projectType = languageElement.GetAttribute(VSProjectAttributes.projectType);
-            ProjectErrorUtilities.VerifyThrowInvalidProject(string.IsNullOrEmpty(projectType) ||
-                (String.Compare(projectType, VSProjectAttributes.local, StringComparison.OrdinalIgnoreCase) == 0),
-                languageElement.Location, "ProjectTypeCannotBeConverted", projectType);
-
-            // All of the attributes on the language tag get converted to XMake
-            // properties.  A couple exceptions ... for the "ProductVersion"
-            // and "SchemaVersion" properties, we don't just copy the previous
-            // value; we actually set it to 8.0.##### and 2.0 respectively.
-            // In addition, we also add a default value for the "Configuration"
-            // property.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <CSHARP
-            //        ProjectType = "Local"
-            //        ProductVersion = "7.10.2284"
-            //        SchemaVersion = "1.0"
-            //        ProjectGuid = "{71F4C768-901B-4027-BD9D-378665D6C0B2}"
-            //    >
-            //        ...
-            //        ...
-            //        ...
-            //    </CSHARP>
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <PropertyGroup>
-            //        <ProjectType>Local</ProjectType>
-            //        <ProductVersion>8.0.31031</ProductVersion>
-            //        <SchemaVersion>2.0</SchemaVersion>
-            //        <ProjectGuid>{71F4C768-901B-4027-BD9D-378665D6C0B2}</ProjectGuid>
-            //        <Configuration Condition = " '$(Configuration)' == '' ">Debug</Configuration>
-            //    </PropertyGroup>
-            // -----------------------------------------------------------------------
-            // For Dev11, we are removing "ProductVersion" and "SchemaVersion" from all
-            // project templates. Thus, eliminated writing these tags from this method.
-            // -----------------------------------------------------------------------
-
-            string originalMyType = languageElement.GetAttribute(XMakeProjectStrings.myType);
-            if (!string.IsNullOrEmpty(originalMyType))
-            {
-                // Flag the fact that the Everett project already had a MyType property in there,
-                // so we don't try to override it later.
-                this.isMyTypeAlreadySetInOriginalProject = true;
-            }
-
-            // Copy over all the other properties.
-            this.globalPropertyGroup = xmakeProject.AddPropertyGroup();
-            this.AddXMakePropertiesFromXMLAttributes(this.globalPropertyGroup, languageElement);
-
-            // Add the "Configuration" property.  Put a condition on it so it only gets
-            // set to the default if the user doesn't have an environment variable called
-            // "Configuration".  The final XML looks something like this:
-            //        <Configuration Condition = " '$(Configuration)' == '' ">Debug</Configuration>
-            ProjectPropertyElement configurationProperty = this.globalPropertyGroup.AddProperty(
-                XMakeProjectStrings.configuration, XMakeProjectStrings.defaultConfiguration);
-            configurationProperty.Condition = XMakeProjectStrings.configurationPrefix +
-                XMakeProjectStrings.configurationSuffix;
-
-            // Add the "Platform" property.  Put a condition on it so it only gets
-            // set to the default if the user doesn't have an environment variable called
-            // "Platform".  The final XML looks something like this:
-            //        <Property Platform = "AnyCPU" Condition = " '$(Platform)' == '' " />
-            // Platform of course depends on the language we are dealing with - J# in whidbey supports only x86
-            string platform = (this.language != VSProjectElements.visualJSharp)
-                ? XMakeProjectStrings.defaultPlatform
-                : XMakeProjectStrings.x86Platform;
-            ProjectPropertyElement platformProperty = this.globalPropertyGroup.AddProperty(
-                XMakeProjectStrings.platform, platform);
-            platformProperty.Condition = XMakeProjectStrings.platformPrefix +
-                XMakeProjectStrings.platformSuffix;
-
-            bool isTriumphProject = false;
-
-            // For SDE projects, we need to add a special <ProjectTypeGuids> property to
-            // the project file.  This will contain the project types for both the
-            // flavor and the main language project type.  In addition, SDE projects
-            // need to have the host process disabled.
-            if (!this.isUserFile)
-            {
-                if (languageElement.Name == VSProjectElements.ECSharp)
-                {
-                    this.globalPropertyGroup.AddProperty(XMakeProjectStrings.projectTypeGuids,
-                                                              "{" +
-                                                              XMakeProjectStrings.VSDCSProjectTypeGuid +
-                                                              "};{" +
-                                                              XMakeProjectStrings.cSharpGuid +
-                                                              "}");
-                    string visualStudioProjectExtensions = GetProjectExtensionsString(XMakeProjectStrings.visualStudio);
-                    visualStudioProjectExtensions += XMakeProjectStrings.disableCSHostProc;
-                    SetProjectExtensionsString(XMakeProjectStrings.visualStudio, visualStudioProjectExtensions);
-                }
-                else if (languageElement.Name == VSProjectElements.EVisualBasic)
-                {
-                    this.globalPropertyGroup.AddProperty(XMakeProjectStrings.projectTypeGuids,
-                                                              "{" +
-                                                              XMakeProjectStrings.VSDVBProjectTypeGuid +
-                                                              "};{" +
-                                                              XMakeProjectStrings.visualBasicGuid +
-                                                              "}");
-                    string visualStudioProjectExtensions = GetProjectExtensionsString(XMakeProjectStrings.visualStudio);
-                    visualStudioProjectExtensions += XMakeProjectStrings.disableVBHostProc;
-                    SetProjectExtensionsString(XMakeProjectStrings.visualStudio, visualStudioProjectExtensions);
-                }
-            }
-
-            // Loop through all the direct child elements of the language element.
-            foreach (XmlNode languageChildNode in languageElement)
-            {
-                // Handle XML comments under the the language node (just ignore them).
-                if ((languageChildNode.NodeType == XmlNodeType.Comment) ||
-                    (languageChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (languageChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation languageChildElement = (XmlElementWithLocation)languageChildNode;
-
-                    switch (languageChildElement.Name)
-                    {
-                        // The <Build> element.
-                        case VSProjectElements.build:
-                            this.ProcessBuildElement((XmlElementWithLocation)languageChildElement);
-                            break;
-
-                        case VSProjectElements.files:
-                            this.ProcessFilesElement((XmlElementWithLocation)languageChildElement);
-                            break;
-
-                        case VSProjectElements.startupServices:
-                            this.ProcessStartupServicesElement((XmlElementWithLocation)languageChildElement);
-                            break;
-
-                        case VSProjectElements.userProperties:
-                            this.ProcessUserPropertiesElement((XmlElementWithLocation)languageChildElement, out isTriumphProject);
-                            break;
-
-                        case VSProjectElements.otherProjectSettings:
-                            this.ProcessOtherProjectSettingsElement((XmlElementWithLocation)languageChildElement);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, languageChildElement.Location,
-                                "UnrecognizedChildElement", languageChildNode.Name,
-                                languageElement.Name);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(languageChildNode.Name, languageElement.Name, languageElement.Location);
-                }
-            }
-
-            AddFinalPropertiesAndImports(languageElement, isTriumphProject);
-        }
-
-        /// <summary>
-        /// Adds any last-minute additional properties such as FileUpgradeFlags and MyType,
-        /// and also adds in the necessary Import tags.
-        /// </summary>
-        /// <param name="languageElement"></param>
-        /// <param name="isTriumphProject"></param>
-        private void AddFinalPropertiesAndImports(XmlElementWithLocation languageElement, bool isTriumphProject)
-        {
-            // For the main project file only, add a line at the end of the new XMake
-            // project file to import the appropriate .TARGETS file.
-            if (!this.isUserFile)
-            {
-                // We set a property called "FileUpgradeFlags", so that for command-line conversions,
-                // if this project is ever loaded into the IDE, the file upgrade (.VB code, etc.) will kick in.
-                // The "20" means SxS upgrade.  For IDE conversions, the project system will itself set
-                // this property immediately after the MSBuild conversion returns, so this value will
-                // be overwritten.
-                this.globalPropertyGroup.AddProperty(XMakeProjectStrings.fileUpgradeFlags, "20");
-
-                // VisualBasic projects need MyType set.
-                if
-                (
-                    (
-                        (this.language == VSProjectElements.visualBasic) ||
-                        (
-                            (this.language == VSProjectElements.EVisualBasic) &&
-                            (this.frameworkVersionForVSD == XMakeProjectStrings.vTwo)
-                        )
-                    ) &&
-                    (!this.isMyTypeAlreadySetInOriginalProject) &&
-                    !isTriumphProject        // Doesn't apply to Triumph->Trinity conversions.
-                )
-                {
-                    if (!string.IsNullOrEmpty(this.outputType))
-                    {
-                        if (String.Equals(this.outputType, XMakeProjectStrings.winExe, StringComparison.OrdinalIgnoreCase))
-                        {
-                            if (this.hasWindowsFormsReference)
-                            {
-                                // Only applies if there's a System.Windows.Forms reference.
-                                this.globalPropertyGroup.AddProperty(XMakeProjectStrings.myType, XMakeProjectStrings.windowsFormsWithCustomSubMain);
-                            }
-                            else
-                            {
-                                this.globalPropertyGroup.AddProperty(XMakeProjectStrings.myType, XMakeProjectStrings.console);
-                            }
-                        }
-                        else if (String.Equals(this.outputType, XMakeProjectStrings.exe, StringComparison.OrdinalIgnoreCase))
-                        {
-                            this.globalPropertyGroup.AddProperty(XMakeProjectStrings.myType, XMakeProjectStrings.console);
-                        }
-                        else if (String.Equals(this.outputType, XMakeProjectStrings.library, StringComparison.OrdinalIgnoreCase))
-                        {
-                            this.globalPropertyGroup.AddProperty(XMakeProjectStrings.myType, XMakeProjectStrings.windows);
-                        }
-                    }
-                }
-                else if (this.language == VSProjectElements.EVisualBasic)
-                {
-                    // For Devices, we always want a MyType of "Empty," as projects
-                    //   are converted into v1 .NETCF, which doesn't support My.NET
-                    this.globalPropertyGroup.AddProperty(XMakeProjectStrings.myType, XMakeProjectStrings.empty);
-                }
-
-                // We need to handle the SDE scenarios for C# and VB
-                if (languageElement.Name == VSProjectElements.ECSharp)
-                {
-                    xmakeProject.AddImport(XMakeProjectStrings.importPrefix + XMakeProjectStrings.SDECSTargets);
-                }
-                else if (languageElement.Name == VSProjectElements.EVisualBasic)
-                {
-                    xmakeProject.AddImport(XMakeProjectStrings.importPrefix + XMakeProjectStrings.SDEVBTargets);
-                }
-                else if (languageElement.Name == VSProjectElements.cSharp)
-                {
-                    xmakeProject.AddImport(XMakeProjectStrings.importPrefix + XMakeProjectStrings.targetsFilenamePrefix + XMakeProjectStrings.csharpTargets + XMakeProjectStrings.importSuffix);
-                }
-                else if (languageElement.Name == VSProjectElements.visualBasic)
-                {
-                    xmakeProject.AddImport(XMakeProjectStrings.importPrefix + XMakeProjectStrings.targetsFilenamePrefix + XMakeProjectStrings.visualBasicTargets + XMakeProjectStrings.importSuffix);
-                }
-                else if (languageElement.Name == VSProjectElements.visualJSharp)
-                {
-                    xmakeProject.AddImport(XMakeProjectStrings.importPrefix + XMakeProjectStrings.targetsFilenamePrefix + XMakeProjectStrings.visualJSharpTargets + XMakeProjectStrings.importSuffix);
-                }
-                else
-                {
-                    xmakeProject.AddImport(XMakeProjectStrings.importPrefix + XMakeProjectStrings.targetsFilenamePrefix + languageElement.Name + XMakeProjectStrings.importSuffix);
-                }
-
-                // [ancrider] VSTO project migration will handle the import target changes.
-                //if (isTriumphProject)
-                //{
-                //    xmakeProject.AddImport(XMakeProjectStrings.triumphImport, null);
-                //}
-
-                // Also add the PreBuildEvent and PostBuildEvent properties to the end
-                // of the project file.  The reason is that they can contain embedded
-                // macros that are defined in the .TARGETS file that was imported
-                // above.
-                if ((this.preBuildEvent != null) || (this.postBuildEvent != null))
-                {
-                    // In this case, we specifically need the property group at the end, so we can't just call AddPropertyGroup(..),
-                    // but instead must do it ourselves
-                    ProjectPropertyGroupElement preAndPostBuildEvents = xmakeProject.CreatePropertyGroupElement();
-                    xmakeProject.AppendChild(preAndPostBuildEvents);
-
-                    // Add the "PreBuildEvent" property.
-                    if (this.preBuildEvent != null)
-                    {
-                        // We must escape the percent-sign in order to handle cases like
-                        // "echo %DEBUGGER%".  We don't want MSBuild to treat the "%DE" as
-                        // an escaped character.
-                        preAndPostBuildEvents.AddProperty(VSProjectAttributes.preBuildEvent,
-                            this.preBuildEvent.Replace("%", "%25"));
-                    }
-
-                    // Add the "PostBuildEvent" property.
-                    if (this.postBuildEvent != null)
-                    {
-                        // We must escape the percent-sign in order to handle cases like
-                        // "echo %DEBUGGER%".  We don't want MSBuild to treat the "%DE" as
-                        // an escaped character.
-                        preAndPostBuildEvents.AddProperty(VSProjectAttributes.postBuildEvent,
-                            this.postBuildEvent.Replace("%", "%25"));
-                    }
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;Build&gt; element, and everything within it.  As it is
-        /// doing this, it will add stuff to the xmakeProject.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessBuildElement
-            (
-            XmlElementWithLocation buildElement
-            )
-        {
-            // Make sure this is the <Build> element.
-            error.VerifyThrow((buildElement?.Name == VSProjectElements.build), "Expected <Build> element.");
-
-            // Make sure the caller has given us a valid xmakeProject object.
-            error.VerifyThrow(xmakeProject != null, "Expected valid XMake project object.");
-
-            // Make sure the caller has given us a valid globalPropertyGroup object.
-            error.VerifyThrow(globalPropertyGroup != null, "Expected valid global ProjectPropertyElementGroup.");
-
-            // The <Build> element should not have any attributes on it.
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!buildElement.HasAttributes, buildElement.Location,
-                "NoAttributesExpected", VSProjectElements.build);
-
-            // Loop through all the direct child elements of the <Build> element.
-            foreach (XmlNode buildChildNode in buildElement)
-            {
-                // Handle XML comments under the the <Build> node (just ignore them).
-                if ((buildChildNode.NodeType == XmlNodeType.Comment) ||
-                    (buildChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (buildChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation buildChildElement = (XmlElementWithLocation)buildChildNode;
-                    switch (buildChildElement.Name)
-                    {
-                        // The <Settings> element.
-                        case VSProjectElements.settings:
-                            this.ProcessSettingsElement((XmlElementWithLocation)buildChildElement);
-                            break;
-
-                        // The <References> element.
-                        case VSProjectElements.references:
-                            this.ProcessReferencesElement((XmlElementWithLocation)buildChildElement);
-                            break;
-
-                        // The <Imports> element.
-                        case VSProjectElements.imports:
-                            this.ProcessImportsElement((XmlElementWithLocation)buildChildElement);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, buildChildElement.Location,
-                                "UnrecognizedChildElement", buildChildNode.Name,
-                                VSProjectElements.build);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(buildChildNode.Name, buildElement.Name, buildElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;Settings&gt; element, and everything within it.  As it is
-        /// doing this, it will add stuff to the xmakeProject.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessSettingsElement
-            (
-            XmlElementWithLocation settingsElement
-            )
-        {
-            // Make sure this is the <Settings> element.
-            error.VerifyThrow((settingsElement?.Name == VSProjectElements.settings),
-                "Expected <Settings> element.");
-
-            // Make sure the caller has given us a valid xmakeProject object.
-            error.VerifyThrow(xmakeProject != null, "Expected valid XMake project object.");
-
-            // Make sure the caller has given us a valid globalPropertyGroup object.
-            error.VerifyThrow(globalPropertyGroup != null, "Expected valid global ProjectPropertyElementGroup.");
-
-            // All of the attributes on the <Settings> tag get converted to XMake
-            // properties, except for PreBuildEvent and PostBuildEvent.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //      <Settings
-            //          ApplicationIcon = ""
-            //          AssemblyKeyContainerName = ""
-            //          AssemblyName = "XMakeBuildEngine"
-            //          AssemblyOriginatorKeyFile = ""
-            //          DefaultClientScript = "JScript"
-            //          DefaultHTMLPageLayout = "Grid"
-            //          DefaultTargetSchema = "IE50"
-            //          DelaySign = "false"
-            //          OutputType = "Library"
-            //          PreBuildEvent = ""
-            //          PostBuildEvent = "..\..\PostBuildEvent.bat"
-            //          RootNamespace = "XMakeBuildEngine"
-            //          RunPostBuildEvent = "OnBuildSuccess"
-            //          StartupObject = ""
-            //      >
-            //          ...
-            //          ...
-            //          ...
-            //      </Settings>
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <PropertyGroup>
-            //        <ApplicationIcon></ApplicationIcon>
-            //        <AssemblyKeyContainerName></AssemblyKeyContainerName>
-            //        <AssemblyName>XMakeBuildEngine</AssemblyName>
-            //        <AssemblyOriginatorKeyFile></AssemblyOriginatorKeyFile>
-            //        <DefaultClientScript>JScript</DefaultClientScript>
-            //        <DefaultHTMLPageLayout>Grid</DefaultHTMLPageLayout>
-            //        <DefaultTargetSchema>IE50</DefaultTargetSchema>
-            //        <DelaySign>false</DelaySign>
-            //        <OutputType>Library</OutputType>
-            //        <RootNamespace>XMakeBuildEngine</RootNamespace>
-            //        <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
-            //        <StartupObject></StartupObject>
-            //    </PropertyGroup>
-            // -----------------------------------------------------------------------
-
-            // The "PreBuildEvent" and "PostBuildEvent" properties need to be handled
-            // specially.  These can contain references to predefined macros, such
-            // as "$(ProjectDir)".  But these get defined in Microsoft.CSharp.targets, so the
-            // "PreBuildEvent" and "PostBuildEvent" properties need to get added to
-            // the project file *after* the <Import> for Microsoft.CSharp.targets.  For now,
-            // just save the values of these two properties.
-            this.preBuildEvent = settingsElement.GetAttribute(VSProjectAttributes.preBuildEvent);
-            settingsElement.RemoveAttribute(VSProjectAttributes.preBuildEvent);
-            this.postBuildEvent = settingsElement.GetAttribute(VSProjectAttributes.postBuildEvent);
-            settingsElement.RemoveAttribute(VSProjectAttributes.postBuildEvent);
-
-            // cache the assembly name in case its needed to upgrade the
-            // documentation file property)
-            this.assemblyName = settingsElement.GetAttribute(VSProjectAttributes.assemblyName);
-
-            // cache the output type.
-            this.outputType = settingsElement.GetAttribute(XMakeProjectStrings.outputType);
-
-            // Take care of copying all the other normal properties.
-            this.AddXMakePropertiesFromXMLAttributes(this.globalPropertyGroup, settingsElement);
-
-            // Loop through all the direct child elements of the <Build> element.
-            foreach (XmlNode settingsChildNode in settingsElement)
-            {
-                // Handle XML comments under the the <Settings> node (just ignore them).
-                if ((settingsChildNode.NodeType == XmlNodeType.Comment) ||
-                    (settingsChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (settingsChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation settingsChildElement = (XmlElementWithLocation)settingsChildNode;
-                    switch (settingsChildElement.Name)
-                    {
-                        // The <Config> element.
-                        case VSProjectElements.config:
-                            this.ProcessConfigElement(settingsChildElement);
-                            break;
-
-                        // In the case of a VSD project, the <Platform> element
-                        case VSProjectElements.platform:
-                            this.ProcessPlatformElement(settingsChildElement);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, settingsChildElement.Location,
-                                "UnrecognizedChildElement", settingsChildElement.Name,
-                                VSProjectElements.settings);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(settingsChildNode.Name, settingsElement.Name, settingsElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;Config&gt; element, and everything within it.  As it is
-        /// doing this, it will add stuff to the xmakeProject, including new
-        /// configuration-specific property groups.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessConfigElement
-            (
-            XmlElementWithLocation configElement
-            )
-        {
-            // Make sure this is the <Config> element.
-            error.VerifyThrow((configElement?.Name == VSProjectElements.config),
-                "Expected <Config> element.");
-
-            // Make sure the caller has given us a valid xmakeProject object.
-            error.VerifyThrow(xmakeProject != null, "Expected valid XMake project object.");
-
-            // All of the attributes on the <Config> tag get converted to XMake
-            // properties, except for the "Name" attribute which becomes part of
-            // the "Condition" on the <PropertyGroup>.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <Config
-            //        Name = "Debug"
-            //        AllowUnsafeBlocks = "false"
-            //        BaseAddress = "285212672"
-            //        CheckForOverflowUnderflow = "false"
-            //        ConfigurationOverrideFile = ""
-            //        DefineConstants = "DEBUG;TRACE"
-            //        DocumentationFile = ""
-            //        DebugSymbols = "true"
-            //        FileAlignment = "4096"
-            //        IncrementalBuild = "true"
-            //        NoStdLib = "false"
-            //        NoWarn = ""
-            //        Optimize = "false"
-            //        OutputPath = "bin\Debug\"
-            //        RegisterForComInterop = "false"
-            //        RemoveIntegerChecks = "false"
-            //        TreatWarningsAsErrors = "true"
-            //        WarningLevel = "4"
-            //    />
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
-            //        <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
-            //        <BaseAddress>285212672</BaseAddress>
-            //        <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
-            //        <ConfigurationOverrideFile></ConfigurationOverrideFile>
-            //        <DefineConstants>DEBUG;TRACE</DefineConstants>
-            //        <DocumentationFile></DocumentationFile>
-            //        <DebugSymbols>true</DebugSymbols>
-            //        <FileAlignment>4096</FileAlignment>
-            //        <NoStdLib>false</NoStdLib>
-            //        <NoWarn></NoWarn>
-            //        <Optimize>false</Optimize>
-            //        <OutputPath>bin\Debug\</OutputPath>
-            //        <RegisterForComInterop>false</RegisterForComInterop>
-            //        <RemoveIntegerChecks>false</RemoveIntegerChecks>
-            //        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
-            //        <WarningLevel>4</WarningLevel>
-            //    </PropertyGroup>
-            // -----------------------------------------------------------------------
-
-            // Get the "Name" attribute of the <Config> element.
-            string configName = configElement.GetAttribute(VSProjectAttributes.name);
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!string.IsNullOrEmpty(configName),
-                configElement.Location, "MissingAttribute", VSProjectElements.config, VSProjectAttributes.name);
-
-            // In the case of VSD projects, the "Name" attribute will have a pipe in it,
-            // followed by the device platform.  This last part needs to be removed,
-            // leaving just the config name.
-            if ((this.language == VSProjectElements.ECSharp) ||
-                 (this.language == VSProjectElements.EVisualBasic))
-            {
-                int pipeLocation = configName.IndexOf('|');
-                if (pipeLocation != -1)
-                {
-                    configName = configName.Remove(pipeLocation,
-                                                     configName.Length - pipeLocation);
-                }
-            }
-
-            // Remove the "Name" attribute from the <Config> element, so it doesn't get
-            // added as an XMake property.
-            configElement.RemoveAttribute(VSProjectAttributes.name);
-
-            // PPD@31111: J# Only: We need to remove the AdditionalOptions attribute
-            // (and note it down) before we create the property group out of the configElement
-            string additionalOptionsValue = null;
-            if (VSProjectElements.visualJSharp == this.language)
-            {
-                additionalOptionsValue = configElement.GetAttribute(VSProjectAttributes.additionalOptions);
-                // Dont bother about getting a null value for additionalOptionsValue
-                // GetAttribute return String.Empty if the attribute is not present
-                configElement.RemoveAttribute(VSProjectAttributes.additionalOptions);
-            }
-
-            // Create a new property group, and add all of the XML attributes as XMake
-            // properties.
-            ProjectPropertyGroupElement configPropertyGroup = xmakeProject.AddPropertyGroup();
-
-            // Process OutputPath attribute separately to ensure it contains trailing backslash
-            string outputPath = configElement.GetAttribute(VSProjectAttributes.outputPath);
-            if (!string.IsNullOrEmpty(outputPath))
-            {
-                if (outputPath[outputPath.Length - 1] != Path.DirectorySeparatorChar)
-                {
-                    outputPath += Path.DirectorySeparatorChar;
-                }
-
-                configElement.RemoveAttribute(VSProjectAttributes.outputPath);
-                configPropertyGroup.AddProperty(VSProjectAttributes.outputPath, ProjectCollection.Escape(outputPath));
-            }
-
-            // If the "SelectedDevice" or "DeploymentPlatform" attributes exist in the per-user
-            //   project file, we should get rid of them.
-            string selectedDevice = configElement.GetAttribute(VSProjectAttributes.selectedDevice);
-            if (isUserFile && (selectedDevice?.Length > 0))
-            {
-                configElement.RemoveAttribute(VSProjectAttributes.selectedDevice);
-            }
-
-            string deploymentPlatform = configElement.GetAttribute(VSProjectAttributes.deploymentPlatform);
-            if (isUserFile && (deploymentPlatform?.Length > 0))
-            {
-                configElement.RemoveAttribute(VSProjectAttributes.deploymentPlatform);
-            }
-
-            // Get rid of the "IncrementalBuild" attribute
-            string incrementalBuild = configElement.GetAttribute(VSProjectAttributes.incrementalBuild);
-            if (!string.IsNullOrEmpty(incrementalBuild))
-            {
-                configElement.RemoveAttribute(VSProjectAttributes.incrementalBuild);
-            }
-
-            // VSWhidbey bug 261464.  For VB projects migrated from VS7/Everett, the VB team would
-            // like to enable XML documentation by default (this feature was unavailable to VB users
-            // in VS7/Everett. To enable for VB, set the DocumentationFile property to <assemblyname>.xml
-            if ((!this.isUserFile) && (VSProjectElements.visualBasic == this.language))
-            {
-                string documentationFile = this.assemblyName + XMakeProjectStrings.xmlFileExtension;
-                configPropertyGroup.AddProperty(VSProjectAttributes.documentationFile, ProjectCollection.Escape(documentationFile));
-            }
-
-            // process the rest of Config attributes
-            this.AddXMakePropertiesFromXMLAttributes(configPropertyGroup, configElement);
-
-            // PPD@31111: J# Only: We now need to parse the additionalOptionsValue for properties and
-            // add the individual properties to configPropertyGroup.
-            // This needs to be done after the AddXMakePropertiesFromXMLAttributes call above since
-            // an property defined in the AdditionalOptions takes precedence.
-            if (VSProjectElements.visualJSharp == this.language)
-            {
-                AdditionalOptionsParser addnlOptParser = new AdditionalOptionsParser();
-                addnlOptParser.ProcessAdditionalOptions(additionalOptionsValue, configPropertyGroup);
-            }
-
-            // VSWhidbey bug 302946.  For VB projects migrated from VS7/Everett, the VB team would
-            // like to disable the following new warnings for Whidbey:  42016,42017,42018,42019,42032
-            // New projects created in Whidbey already have these warnings disabled by default.
-            if ((!this.isUserFile) && (VSProjectElements.visualBasic == this.language))
-            {
-                configPropertyGroup.AddProperty(XMakeProjectStrings.noWarn, XMakeProjectStrings.disabledVBWarnings);
-            }
-
-            // VSWhidbey bug 472064.  For all projects that are converted, if "DebugSymbols" is set for a
-            // particular platform/configuration, we set a "DebugType" property if and only if "DebugType" property
-            // is not already there.  DebugType is set to "full" for DebugSymbols=true, DebugType is set to "none"
-            // if DebugSymbols=false, and we don't do anything if DebugSymbols is not present in the source project.
-            if (!this.isUserFile)
-            {
-                string debugType = configElement.GetAttribute(VSProjectAttributes.debugType);
-                if (String.IsNullOrEmpty(debugType))
-                {
-                    string debugSymbols = configElement.GetAttribute(XMakeProjectStrings.debugSymbols);
-                    if (String.Equals(debugSymbols, "true", StringComparison.OrdinalIgnoreCase))
-                    {
-                        configPropertyGroup.AddProperty(VSProjectAttributes.debugType, VSProjectAttributes.debugTypeFull);
-                    }
-                    else if (String.Equals(debugSymbols, "false", StringComparison.OrdinalIgnoreCase))
-                    {
-                        configPropertyGroup.AddProperty(VSProjectAttributes.debugType, VSProjectAttributes.debugTypeNone);
-                    }
-                }
-            }
-
-            // VSWhidbey bug 472064.  For all VC# projects that are converted, we add an ErrorReport
-            // property, always set to "prompt"
-            if (!this.isUserFile && this.language == VSProjectElements.cSharp)
-            {
-                configPropertyGroup.AddProperty(VSProjectAttributes.errorReport, VSProjectAttributes.errorReportPrompt);
-            }
-
-            // Platform of course depends on the language we are dealing with - J# in whidbey supports only x86
-            string platform = (this.language != VSProjectElements.visualJSharp)
-                ? XMakeProjectStrings.defaultPlatform
-                : XMakeProjectStrings.x86Platform;
-
-            // Add the "Condition" to the new <PropertyGroup>.
-            configPropertyGroup.Condition = XMakeProjectStrings.configplatformPrefix +
-                ProjectCollection.Escape(configName) + XMakeProjectStrings.configplatformSeparator +
-                ProjectCollection.Escape(platform) + XMakeProjectStrings.configplatformSuffix;
-
-            // Loop through all the direct child elements of the <Config> element.
-            foreach (XmlNode configChildNode in configElement)
-            {
-                // Handle XML comments under the the <Config> node (just ignore them).
-                if ((configChildNode.NodeType == XmlNodeType.Comment) ||
-                    (configChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (configChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation configChildElement = (XmlElementWithLocation)configChildNode;
-                    switch (configChildElement.Name)
-                    {
-                        // The <InteropRegistration> element.
-                        case VSProjectElements.interopRegistration:
-                            this.ProcessInteropRegistrationElement((XmlElementWithLocation)configChildElement, configPropertyGroup);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, configChildElement.Location,
-                                "UnrecognizedChildElement", configChildElement.Name,
-                                VSProjectElements.config);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(configChildNode.Name, configElement.Name, configElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;Platform&gt; element, and everything within it.  As it is
-        /// doing this, it will add stuff to the xmakeProject, including new
-        /// configuration-specific property groups.
-        /// </summary>
-        /// <owner>BCham</owner>
-        private void ProcessPlatformElement
-            (
-            XmlElementWithLocation platformElement
-            )
-        {
-            if (!IsUserFile)
-            {
-                // Make sure this is the <Platform> element.
-                error.VerifyThrow((platformElement?.Name == VSProjectElements.platform),
-                    "Expected <Platform> element.");
-
-                // Make sure the caller has given us a valid xmakeProject object.
-                error.VerifyThrow(xmakeProject != null, "Expected valid XMake project object.");
-
-                // The platform listed in the <Platform> element will be the platform
-                // used for the Whidbey project.
-                // -----------------------------------------------------------------------
-                // Everett format:
-                // ===============
-                //    <Platform Name = "Pocket PC" />
-                // -----------------------------------------------------------------------
-                // XMake format:
-                // =============
-                //    <PropertyGroup>
-                //      <Property PlatformFamilyName="PocketPC"/>
-                //      <Property PlatformID="3C41C503-53EF-4c2a-8DD4-A8217CAD115E"/>
-                //    </PropertyGroup>
-                // -----------------------------------------------------------------------
-
-                // Get the "Name" attribute of the <Platform> element.
-                platformForVSD = platformElement.GetAttribute(VSProjectAttributes.name);
-                ProjectErrorUtilities.VerifyThrowInvalidProject(!string.IsNullOrEmpty(platformForVSD),
-                    platformElement.Location, "MissingAttribute", VSProjectElements.platform, VSProjectAttributes.name);
-
-                // Create a new property group, and add all of the XML attributes as XMake
-                // properties.
-                ProjectPropertyGroupElement platformPropertyGroup = xmakeProject.AddPropertyGroup();
-
-                string platformID;
-                string platformFamily;
-
-                frameworkVersionForVSD = XMakeProjectStrings.vOne;
-
-                switch (platformForVSD)
-                {
-                    case VSProjectElements.PocketPC:
-                        platformID = "3C41C503-53EF-4c2a-8DD4-A8217CAD115E";
-                        platformFamily = "PocketPC";
-                        break;
-
-                    case VSProjectElements.Smartphone:
-                        platformID = "4DE813A2-67E0-4a00-945C-3188240A8243";
-                        platformFamily = "Smartphone";
-                        break;
-
-                    case VSProjectElements.WindowsCE:
-                    default:
-
-                        // If we're dealing with a platform other than the three that Everett ships with, we'll assign it as Windows CE
-
-                        platformID = "E2BECB1F-8C8C-41ba-B736-9BE7D946A398";
-                        platformFamily = "WindowsCE";
-
-                        // We don't ship with a v1.0 WindowsCE platform.  Default to v2.0 instead.
-
-                        frameworkVersionForVSD = XMakeProjectStrings.vTwo;
-                        break;
-                }
-
-                // Add the properties for PlatformID and PlatformFamilyName
-
-                platformPropertyGroup.AddProperty(XMakeProjectStrings.platformID, platformID);
-                platformPropertyGroup.AddProperty(XMakeProjectStrings.platformFamilyName, platformFamily);
-
-                // Since we're here, we know this is a VSD project.  Therefore, let's
-                //   add a property for the deployment target path.  Note, we only need a suffix.
-                //   The prefix will be defaulted to based on the selected device.
-
-                platformPropertyGroup.AddProperty(XMakeProjectStrings.deployTargetSuffix, "$(AssemblyName)");
-
-                // And, we should also set the Target Framework version.  For
-                //   VSD projects, we want to stay with v1.0
-
-                platformPropertyGroup.AddProperty(XMakeProjectStrings.TargetFrameworkVersion, frameworkVersionForVSD);
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;InteropRegistration&gt; element, and everything within it.
-        /// As it is doing this, it will add extra properties to the configuration's
-        /// property group.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessInteropRegistrationElement
-            (
-            XmlElementWithLocation interopRegistrationElement,
-            ProjectPropertyGroupElement configPropertyGroup
-            )
-        {
-            // Make sure this is the <InteropRegistration> element.
-            error.VerifyThrow((interopRegistrationElement?.Name == VSProjectElements.interopRegistration),
-                "Expected <InteropRegistration> element.");
-
-            // Make sure we've been given a valid configuration property group.
-            error.VerifyThrow(configPropertyGroup != null,
-                "Expected configuration's property group.");
-
-            // All of the attributes on the <InteropRegistration> tag get converted to XMake
-            // properties.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <Config
-            //        ...
-            //        ...
-            //        ... <all other configuration properties>
-            //        ...
-            //        ...
-            //    >
-            //        <InteropRegistration
-            //            RegisteredComClassic = "true"
-            //            RegisteredOutput = "Project1.dll"
-            //            RegisteredTypeLib = "Project1.tlb"
-            //        />
-            //    </Config>
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
-            //        ...
-            //        ...
-            //        ... <all other configuration properties>
-            //        ...
-            //        ...
-            //        <RegisteredComClassic>true</RegisteredComClassic>
-            //        <RegisteredOutput>Project1.dll</RegisteredOutput>
-            //        <RegisteredTypeLib>Project1.tlb</RegisteredTypeLib>
-            //    </PropertyGroup>
-            // -----------------------------------------------------------------------
-            this.AddXMakePropertiesFromXMLAttributes(configPropertyGroup, interopRegistrationElement);
-
-            // There should be no children of the <InteropRegistration> element.
-            ProjectXmlUtilities.VerifyThrowProjectNoChildElements(interopRegistrationElement);
-        }
-
-        /// <summary>
-        /// Processes the &lt;References&gt; element, and everything within it.  As it is
-        /// doing this, it will add reference items to a new ProjectItemGroupElement.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessReferencesElement
-            (
-            XmlElementWithLocation referencesElement
-            )
-        {
-            // Make sure this is the <References> element.
-            error.VerifyThrow((referencesElement?.Name == VSProjectElements.references),
-                "Expected <References> element.");
-
-            // Make sure the caller has given us a valid xmakeProject object.
-            error.VerifyThrow(xmakeProject != null, "Expected valid XMake project object.");
-
-            // The <References> tag should have no attributes.
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!referencesElement.HasAttributes, referencesElement.Location,
-                "NoAttributesExpected", VSProjectElements.references);
-
-            // Before we begin processing the individual references, let's make sure
-            // we have an SLN file, so we can go look up the project-to-project references.
-            // If the caller has not provided us with an SLN file, or if the SLN provided
-            // doesn't actually exist on disk yet (which can happen in VS IDE scenarios because
-            // the SLN is only in-memory and hasn't been saved yet), then we search for the
-            // SLN using a heuristic.
-            if (this.solutionFile == null || !File.Exists(this.solutionFile))
-            {
-                this.solutionFile = null;
-                this.SearchForSolutionFile();
-            }
-            else
-            {
-                // We've been given a valid SLN file that exists on disk, so just parse
-                // it.
-                this.solution = new SolutionFile();
-                this.solution.FullPath = this.solutionFile;
-                this.solution.ParseSolutionFileForConversion();
-                this.conversionWarnings.AddRange(this.solution.SolutionParserWarnings);
-            }
-
-            ProjectItemGroupElement referencesItemGroup = null;
-
-            // Loop through all the direct child elements of the <References> element.
-            foreach (XmlNode referencesChildNode in referencesElement)
-            {
-                // Handle XML comments under the the <References> node (just ignore them).
-                if ((referencesChildNode.NodeType == XmlNodeType.Comment) ||
-                    (referencesChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (referencesChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation referencesChildElement = (XmlElementWithLocation)referencesChildNode;
-                    switch (referencesChildElement.Name)
-                    {
-                        // The <Reference> element.
-                        case VSProjectElements.reference:
-                            if (referencesItemGroup == null)
-                            {
-                                referencesItemGroup = xmakeProject.AddItemGroup();
-                            }
-
-                            this.ProcessReferenceElement(referencesChildElement, referencesItemGroup);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, referencesChildElement.Location,
-                                "UnrecognizedChildElement", referencesChildElement.Name,
-                                VSProjectElements.references);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(referencesChildNode.Name, referencesElement.Name, referencesElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;Reference&gt; element, and add an appropriate reference
-        /// items to the referencesItemGroup.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessReferenceElement
-            (
-            XmlElementWithLocation referenceElement,
-            ProjectItemGroupElement referencesItemGroup
-            )
-        {
-            // Make sure this is the <Reference> element.
-            error.VerifyThrow((referenceElement?.Name == VSProjectElements.reference),
-                "Expected <Reference> element.");
-
-            // Make sure the caller has already created an ProjectItemGroupElement for us to
-            // put the new items in.
-            error.VerifyThrow(referencesItemGroup != null, "Received null ProjectItemGroupElement");
-
-            // Before we do anything else, look for the "Platform" attribute.
-            //   If it's available, we need to remove it, and if it ends in
-            //   "-Designer", we need to disregard this reference entirely.
-
-            string platform = referenceElement.GetAttribute(VSProjectAttributes.platform);
-            if (!string.IsNullOrEmpty(platform))
-            {
-                if (platform.IndexOf("-Designer", 0, platform.Length, StringComparison.Ordinal) != -1)
-                {
-                    return;
-                }
-
-                referenceElement.RemoveAttribute(VSProjectAttributes.platform);
-            }
-
-            ProjectItemElement newReferenceItem;
-
-            // Get the "Name" attribute.  This is a required attribute in the VS7/
-            // Everett format.
-            string referenceName = referenceElement.GetAttribute(VSProjectAttributes.name);
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!string.IsNullOrEmpty(referenceName),
-                referenceElement.Location, "MissingAttribute", VSProjectAttributes.name, VSProjectElements.reference);
-
-            // Before we go any further, we must special-case some assemblies for VSD projects.
-
-            if ((this.language == VSProjectElements.ECSharp) ||
-                   (this.language == VSProjectElements.EVisualBasic))
-            {
-                if ((this.frameworkVersionForVSD == XMakeProjectStrings.vTwo) &&
-                     (String.Equals(referenceName, VSProjectElements.SystemDataCommon, StringComparison.OrdinalIgnoreCase)))
-                {
-                    // We need to remove all references to "System.Data.Common" for VSD projects only.
-                    //   Note : We only want to do this for projects that will be updated to v2.0
-                    //          System.Data.Common is still valid for v1.0 upgraded projects.
-                    return;
-                }
-                else if (String.Equals(referenceName, VSProjectElements.SystemSR, StringComparison.OrdinalIgnoreCase))
-                {
-                    // We always want to remove all references to "System.SR"
-                    return;
-                }
-            }
-
-            if ((this.language == VSProjectElements.EVisualBasic) &&
-                 (String.Equals(referenceName, VSProjectElements.MSCorLib, StringComparison.OrdinalIgnoreCase)))
-            {
-                // We also want to get rid of all 'mscorlib' references for VB projects only.
-                return;
-            }
-
-            // We need to find out what type of reference this is -- a .NET assembly
-            // reference, a COM reference, or a project reference.  In the XMake format,
-            // we use separate item types for each of these.
-
-            // See if there's a "Guid" attribute on the <Reference> element.  If so,
-            // it's a classic COM reference.
-            string comReferenceGuid = referenceElement.GetAttribute(VSProjectAttributes.guid);
-
-            // See if there's a "Project" guid attribute.  If so, it's a project
-            // reference.
-            string referencedProjectGuid = referenceElement.GetAttribute(VSProjectAttributes.project);
-
-            if (!string.IsNullOrEmpty(comReferenceGuid) &&
-                (comReferenceGuid != "{00000000-0000-0000-0000-000000000000}"))
-            {
-                newReferenceItem = ConvertClassicComReference(referenceElement, referencesItemGroup, referenceName);
-            }
-            else if (!string.IsNullOrEmpty(referencedProjectGuid))
-            {
-                newReferenceItem = ConvertProjectToProjectReference(referenceElement, referencesItemGroup, referenceName, ref referencedProjectGuid);
-            }
-            else
-            {
-                newReferenceItem = ConvertAssemblyReference(referenceElement, referencesItemGroup, referenceName);
-            }
-
-            // Add all the rest of the attributes on the <Reference> element to the new
-            // XMake item.
-            foreach (XmlAttribute referenceAttribute in referenceElement.Attributes)
-            {
-                newReferenceItem.AddMetadata(referenceAttribute.Name, ProjectCollection.Escape(referenceAttribute.Value));
-            }
-
-            // There should be no children of the <Reference> element.
-            ProjectXmlUtilities.VerifyThrowProjectNoChildElements(referenceElement);
-        }
-
-        /// <summary>
-        /// Given an element corresponding to a COM reference, create the appropriate element in the new project
-        /// </summary>
-        /// <param name="referenceElement"></param>
-        /// <param name="referencesItemGroup"></param>
-        /// <param name="referenceName"></param>
-        /// <returns></returns>
-        private static ProjectItemElement ConvertClassicComReference(XmlElementWithLocation referenceElement, ProjectItemGroupElement referencesItemGroup, string referenceName)
-        {
-            // This is a classic COM reference.
-
-            // This gets added as a new XMake item of type "COMReference".
-            // The "Include" attribute will contain the reference name,
-            // and all the other attributes remain the same.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <Reference
-            //        Name = "UTILITIESLib"
-            //        Guid = "{0EF79DA1-6555-11D2-A889-00AA006C2A9A}"
-            //        VersionMajor = "1"
-            //        VersionMinor = "0"
-            //        Lcid = "0"
-            //        WrapperTool = "tlbimp"
-            //    />
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <COMReference Include = "UTILITIESLib">
-            //          <Guid>{0EF79DA1-6555-11D2-A889-00AA006C2A9A}</Guid>
-            //          <VersionMajor>1</VersionMajor>
-            //          <VersionMinor>0</VersionMinor>
-            //          <Lcid>0</Lcid>
-            //          <WrapperTool>tlbimp</WrapperTool>
-            //    </COMReference>
-            // -----------------------------------------------------------------------
-
-            // Remove the "Name" attribute so we don't add it again at the end.
-            referenceElement.RemoveAttribute(VSProjectAttributes.name);
-
-            // Add a new item to XMake of type "COMReference".
-            return referencesItemGroup.AddItem(XMakeProjectStrings.comReference, ProjectCollection.Escape(referenceName));
-        }
-
-        /// <summary>
-        /// Given an element corresponding to a P2P reference, create the appropriate element in the new project
-        /// </summary>
-        /// <param name="referenceElement"></param>
-        /// <param name="referencesItemGroup"></param>
-        /// <param name="referenceName"></param>
-        /// <param name="referencedProjectGuid"></param>
-        /// <returns></returns>
-        private ProjectItemElement ConvertProjectToProjectReference(XmlElementWithLocation referenceElement, ProjectItemGroupElement referencesItemGroup, string referenceName, ref string referencedProjectGuid)
-        {
-            // This is a project-to-project reference.
-            // This gets added as a new XMake item of type "ProjectReference".
-            // The "Include" attribute should be the relative path from the
-            // current project to the referenced project file.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <Reference
-            //        Name = "XMakeTasks"
-            //        Project = "{44342961-78F4-4F98-AFD6-720DA6E648A2}"
-            //        Package = "{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"
-            //    />
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <ProjectReference Include = "..\XMakeTasks\XMakeTasks.csproj">
-            //          <Name>XMakeTasks</Name>
-            //          <Project>{44342961-78F4-4F98-AFD6-720DA6E648A2}</Project>
-            //          <Package>{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</Package>
-            //    </ProjectReference>
-            // -----------------------------------------------------------------------
-
-            // Apparently, sometimes project reference guids contain additional goo with relative project path.
-            // Just strip it off. The project system does the same thing, and by doing this early we make
-            // sure that we have the correct guid attribute in the project file and ResolveNonMSBuildReferences
-            // does not complain about invalid characters there which causes all the references to fail to resolve.
-            int barIndex = referencedProjectGuid.IndexOf('|');
-            if (barIndex != -1)
-            {
-                referencedProjectGuid = referencedProjectGuid.Remove(barIndex);
-                referenceElement.SetAttribute(VSProjectAttributes.project, referencedProjectGuid);
-            }
-
-            string pathToReferencedProject = this.GetRelativePathToReferencedProject(referencedProjectGuid);
-
-            if (pathToReferencedProject != null)
-            {
-                // For VSD Projects, we want to transform all Everett ( .csdproj & .vbdproj ) project 2 project references into
-                // Whidbey ( .csproj & .vbproj ) references.
-                if (String.Equals(Path.GetExtension(pathToReferencedProject),
-                                        XMakeProjectStrings.csdprojFileExtension,
-                                        StringComparison.OrdinalIgnoreCase))
-                {
-                    pathToReferencedProject = Path.ChangeExtension(pathToReferencedProject, XMakeProjectStrings.csprojFileExtension);
-                }
-                else if (String.Equals(Path.GetExtension(pathToReferencedProject),
-                                             XMakeProjectStrings.vbdprojFileExtension,
-                                             StringComparison.OrdinalIgnoreCase))
-                {
-                    pathToReferencedProject = Path.ChangeExtension(pathToReferencedProject, XMakeProjectStrings.vbprojFileExtension);
-                }
-            }
-
-            // Add a new item to XMake of type "ProjectReference".  If we were able to find
-            // the relative path to the project, use it for the "Include", otherwise just use
-            // the project name.
-            string value = pathToReferencedProject ?? referenceName;
-            return referencesItemGroup.AddItem(XMakeProjectStrings.projectReference, ProjectCollection.Escape(value));
-        }
-
-        /// <summary>
-        /// Given an element corresponding to a .NET Assembly reference, create the appropriate element in the new project
-        /// </summary>
-        /// <param name="referenceElement"></param>
-        /// <param name="referencesItemGroup"></param>
-        /// <param name="referenceName"></param>
-        /// <returns></returns>
-        private ProjectItemElement ConvertAssemblyReference(XmlElementWithLocation referenceElement, ProjectItemGroupElement referencesItemGroup, string referenceName)
-        {
-            // This is a regular .NET assembly reference.
-
-            // This gets added as a new XMake item of type "Reference".  The "Include"
-            // attribute is the assembly name, and all the other attributes remain
-            // the same.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <Reference
-            //        Name = "System.Xml"
-            //        AssemblyName = "System.Xml"
-            //        HintPath = "..\..\binaries\x86chk\bin\i386\System.Xml.dll"
-            //    />
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <Reference Include="System.Xml">
-            //          <Name>System.Xml</Name>
-            //          <HintPath>..\..\binaries\x86chk\bin\i386\System.Xml.dll</HintPath>
-            //    </Reference>
-            // -----------------------------------------------------------------------
-
-            // Get the "AssemblyName" attribute.  If not found, just use the value from the
-            // "Name" attribute.  This is what the project loading code does in VS.
-            string assemblyName = referenceElement.GetAttribute(VSProjectAttributes.assemblyName);
-            if (string.IsNullOrEmpty(assemblyName))
-            {
-                assemblyName = referenceName;
-            }
-            else
-            {
-                // Remove the "AssemblyName" attribute so we don't add it again at
-                // the end.
-                referenceElement.RemoveAttribute(VSProjectAttributes.assemblyName);
-            }
-
-            // MyType should only be added when System.Windows.Forms is present. If this
-            // reference is seen, then set a flag so we can later add MyType.
-            if (String.Equals("System.Windows.Forms", assemblyName, StringComparison.OrdinalIgnoreCase))
-            {
-                hasWindowsFormsReference = true;
-            }
-
-            // Remove hint paths that we think are to RTM or Everett framework assemblies
-            string hintPath = referenceElement.GetAttribute(VSProjectAttributes.hintPath);
-            if (hintPath != null)
-            {
-                hintPath = hintPath.ToUpper(CultureInfo.InvariantCulture);
-                if (hintPath.IndexOf(LegacyFrameworkPaths.RTMFrameworkPath, StringComparison.Ordinal) != -1 ||
-                    hintPath.IndexOf(LegacyFrameworkPaths.EverettFrameworkPath, StringComparison.Ordinal) != -1 ||
-                    hintPath.IndexOf(LegacyFrameworkPaths.JSharpRTMFrameworkPath, StringComparison.Ordinal) != -1)
-                {
-                    referenceElement.RemoveAttribute(VSProjectAttributes.hintPath);
-                }
-            }
-
-            return referencesItemGroup.AddItem(XMakeProjectStrings.reference, ProjectCollection.Escape(assemblyName));
-        }
-
-        /// <summary>
-        /// To convert project-to-project references correctly, we need some data
-        /// out of the solution file.  If we weren't given a solution file, then
-        /// we search the project's directory and every parent directory all the
-        /// way up to the root for the corresponding SLN file.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void SearchForSolutionFile
-            (
-            )
-        {
-            error.VerifyThrow(this.solutionFile == null, "Solution file already passed in!");
-            error.VerifyThrow(this.projectGuid != null, "Need project Guid to find solution file.");
-
-            // Start by looking for a solution file in the directory of the original project file.
-            DirectoryInfo searchDirectory = new DirectoryInfo(Path.GetDirectoryName(Path.GetFullPath(this.oldProjectFile)));
-
-            while (searchDirectory != null)
-            {
-                // Get a list of all the .SLN files in the current search directory.
-                FileInfo[] slnFiles = searchDirectory.GetFiles("*.sln");
-
-                // Open each .SLN file and parse it.  We're searching for a .SLN
-                // file that contains the current project that we're converting.
-                foreach (FileInfo slnFile in slnFiles)
-                {
-                    // Check that the extension really is ".SLN", because the above call to
-                    // GetFiles will also return files such as blah.SLN1 and bloo.SLN2.
-                    if (String.Equals(".sln", slnFile.Extension, StringComparison.OrdinalIgnoreCase))
-                    {
-                        // Parse the .SLN file.
-                        SolutionFile solutionParser = new SolutionFile();
-                        solutionParser.FullPath = slnFile.FullName;
-
-                        try
-                        {
-                            solutionParser.ParseSolutionFile();
-                            this.conversionWarnings.AddRange(solutionParser.SolutionParserWarnings);
-
-                            // Determine if our current project guid (for the project we're converting)
-                            // is listed in the .SLN file.
-                            if (solutionParser.GetProjectUniqueNameByGuid(this.projectGuid) != null)
-                            {
-                                // If we found our project listed, then this is the solution we will
-                                // use to help us convert the project-to-project references.
-                                this.solutionFile = slnFile.FullName;
-                                this.solution = solutionParser;
-                                return;
-                            }
-                        }
-                        catch (InvalidProjectFileException)
-                        {
-                            // If the SLN wasn't valid, that's fine ... just skip it, and
-                            // move on to the next one.
-                        }
-                    }
-                }
-
-                // Go up one directory, and search there.  Stop when we hit the root.
-                searchDirectory = searchDirectory.Parent;
-            }
-
-            // If we don't find a solution file that contains our project, that's okay...
-            // we can still proceed.  It just means that the converted project-to-project
-            // references won't have the relative path to the referenced project.  This
-            // may prevent command-line builds from being fully functional, but it's
-            // not the end of the world.
-        }
-
-        /// <summary>
-        /// Given a 'from' path and a 'to' path, compose a relative path from 'from'
-        /// to 'to'.
-        /// </summary>
-        /// <owner>jomof</owner>
-        internal static string RelativePathTo(string from, string to)
-        {
-            error.VerifyThrow(from.IndexOf("*", StringComparison.Ordinal) == -1, "Bug: RelativePathTo can't handle wild cards.");
-            error.VerifyThrow(to.IndexOf("*", StringComparison.Ordinal) == -1, "Bug: RelativePathTo can't handle wild cards.");
-            from = Path.GetFullPath(from);
-            to = Path.GetFullPath(to);
-
-            Uri uriFrom = new Uri(from);
-            Uri uriTo = new Uri(to);
-            Uri relative = uriFrom.MakeRelativeUri(uriTo);
-            string result = Uri.UnescapeDataString(relative.ToString());
-
-            // The URI class returns forward slashes instead of backslashes.  Replace
-            // them now, and return the final path.
-            return result.Replace(Path.AltDirectorySeparatorChar, Path.DirectorySeparatorChar);
-        }
-
-        /// <summary>
-        /// Given a project guid for a referenced project, this method computes
-        /// the relative path to that referenced project file from the current
-        /// project file that is being converted.  In order to do this, we need
-        /// some information out of the SLN file.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private string GetRelativePathToReferencedProject
-            (
-            string referencedProjectGuid
-            )
-        {
-            error.VerifyThrow(referencedProjectGuid != null, "Need valid project guid.");
-
-            // If we don't have a pointer to the SLN file that contains this project,
-            // then we really have no hope of finding the relative path to the
-            // referenced project.
-            if (this.solution == null)
-            {
-                // Log a warning that indicates that the complete solution file was not used
-                string warning = ResourceUtilities.FormatString(
-                    AssemblyResources.GetString("CouldNotFindCompleteSolutionFile"),
-                    referencedProjectGuid);
-                conversionWarnings.Add(warning);
-                return null;
-            }
-
-            // Find the referenced project guid in the SLN file.
-            string relativePathFromSolutionToReferencedProject =
-                this.solution.GetProjectRelativePathByGuid(referencedProjectGuid);
-
-            if (relativePathFromSolutionToReferencedProject == null)
-            {
-                // If the referenced project does not exist in the solution, we can't
-                // get its relative path.  This is not a conversion error; it just means
-                // the converted project file won't have the relative path to the
-                // referenced project.  This may prevent some command-line build
-                // scenarios from working completely.
-                string warning = ResourceUtilities.FormatString(
-                    AssemblyResources.GetString("ProjectNotListingInSolutionFile"),
-                    referencedProjectGuid, this.solution.FullPath);
-                conversionWarnings.Add(warning);
-                return null;
-            }
-
-            if (relativePathFromSolutionToReferencedProject.StartsWith("http", StringComparison.OrdinalIgnoreCase))
-            {
-                // We've discovered a P2P reference to a web project. This feature is no
-                // longer supported in Whidbey.  We will remove the
-                // P2P reference to the web project and issue a warning into the upgrade log
-                // telling the user he needs to fix this up himself.
-                string warning = ResourceUtilities.FormatString(
-                    AssemblyResources.GetString("UnsupportedProjectToProjectWebReference"),
-                    relativePathFromSolutionToReferencedProject);
-                conversionWarnings.Add(warning);
-                return null;
-            }
-
-            // Get the full path to the referenced project.  Compute this by combining
-            // the full path to the SLN file with the relative path specified within
-            // the SLN file.
-            string fullPathToReferencedProject = Path.Combine(
-                Path.GetDirectoryName(this.solutionFile),
-                relativePathFromSolutionToReferencedProject);
-
-            // Now compute the relative path from the current project to the referenced
-            // project.
-            return RelativePathTo(this.oldProjectFile, fullPathToReferencedProject);
-        }
-
-        /// <summary>
-        /// Processes the &lt;Imports&gt; element, and everything within it.  As it is
-        /// doing this, it will add "Import" items to a new ProjectItemGroupElement.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessImportsElement
-            (
-            XmlElementWithLocation importsElement
-            )
-        {
-            // Make sure this is the <Imports> element.
-            error.VerifyThrow((importsElement?.Name == VSProjectElements.imports),
-                "Expected <Imports> element.");
-
-            // Make sure the caller gave us a valid xmakeProject to stuff
-            // our new items into.
-            error.VerifyThrow(xmakeProject != null, "Expected valid xmake project object.");
-
-            // The <Imports> tag should have no attributes.
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!importsElement.HasAttributes, importsElement.Location,
-                "NoAttributesExpected", VSProjectElements.imports);
-
-            ProjectItemGroupElement importsItemGroup = null;
-
-            // Loop through all the direct child elements of the <Imports> element.
-            foreach (XmlNode importsChildNode in importsElement)
-            {
-                // Handle XML comments under the the <Imports> node (just ignore them).
-                if ((importsChildNode.NodeType == XmlNodeType.Comment) ||
-                    (importsChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (importsChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation importsChildElement = (XmlElementWithLocation)importsChildNode;
-                    switch (importsChildNode.Name)
-                    {
-                        // The <Import> element.
-                        case VSProjectElements.import:
-                            if (importsItemGroup == null)
-                            {
-                                importsItemGroup = xmakeProject.AddItemGroup();
-                            }
-
-                            this.ProcessImportElement((XmlElementWithLocation)importsChildElement, importsItemGroup);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, importsChildElement.Location,
-                                "UnrecognizedChildElement", importsChildElement.Name,
-                                VSProjectElements.imports);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(importsChildNode.Name, importsElement.Name, importsElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;Import&gt; element, and add an appropriate reference
-        /// items to the importsItemGroup.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessImportElement
-            (
-            XmlElementWithLocation importElement,
-            ProjectItemGroupElement importsItemGroup
-            )
-        {
-            // Make sure this is the <Import> element.
-            error.VerifyThrow((importElement?.Name == VSProjectElements.import),
-                "Expected <Import> element.");
-
-            // Make sure the caller has already created an ProjectItemGroupElement for us to
-            // put the new items in.
-            error.VerifyThrow(importsItemGroup != null, "Received null ProjectItemGroupElement");
-
-            // Get the required "Namespace" attribute.
-            string importNamespace = importElement.GetAttribute(VSProjectAttributes.importNamespace);
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!string.IsNullOrEmpty(importNamespace),
-                importElement.Location, "MissingAttribute", VSProjectAttributes.importNamespace, VSProjectElements.import);
-            // Remove the "Namespace" attribute, so it doesn't show up in our loop later.
-            importElement.RemoveAttribute(VSProjectAttributes.importNamespace);
-
-            // The <Import> element gets converted to XMake as an item of type "Import".
-            // The "Namespace" attribute becomes the "Include" for the new item.  For
-            // example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <Import Namespace = "System.Collections" />
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <Import Include="System.Collections" />
-            // -----------------------------------------------------------------------
-            importsItemGroup.AddItem(XMakeProjectStrings.import, ProjectCollection.Escape(importNamespace));
-
-            // There should be no other attributes on the <Import> element (besides
-            // "Namespace" which we already took care of).  But loop through them
-            // anyway, so we can emit a useful error message.
-            foreach (XmlAttributeWithLocation importAttribute in importElement.Attributes)
-            {
-                ProjectErrorUtilities.VerifyThrowInvalidProject(false, importAttribute.Location, "UnrecognizedAttribute",
-                    importAttribute.Name, VSProjectElements.import);
-            }
-
-            // There should be no children of the <Import> element.
-            ProjectXmlUtilities.VerifyThrowProjectNoChildElements(importElement);
-        }
-
-        /// <summary>
-        /// Processes the &lt;Files&gt; element, and everything within it.  As it is
-        /// doing this, it will add the appropriate items to a new ProjectItemGroupElement.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessFilesElement
-            (
-            XmlElementWithLocation filesElement
-            )
-        {
-            // Make sure this is the <Files> element.
-            error.VerifyThrow((filesElement?.Name == VSProjectElements.files),
-                "Expected <Files> element.");
-
-            // Make sure the caller gave us a valid xmakeProject to stuff
-            // our new items into.
-            error.VerifyThrow(xmakeProject != null, "Expected valid xmake project object.");
-
-            // The <Files> tag should have no attributes.
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!filesElement.HasAttributes, filesElement.Location,
-                "NoAttributesExpected", VSProjectElements.files);
-
-            // Loop through all the direct child elements of the <Files> element.
-            foreach (XmlNode filesChildNode in filesElement)
-            {
-                // Handle XML comments under the the <Files> node (just ignore them).
-                if ((filesChildNode.NodeType == XmlNodeType.Comment) ||
-                    (filesChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (filesChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation filesChildElement = (XmlElementWithLocation)filesChildNode;
-                    switch (filesChildNode.Name)
-                    {
-                        // The <Include> element.
-                        case VSProjectElements.include:
-                            this.ProcessIncludeElement(filesChildElement);
-                            break;
-
-                        // The <Exclude> element.  Actually, the <Exclude> element is not supported
-                        // by VS.  That is, VS completely ignores anything under the <Exclude>
-                        // element.  Yet, some really old project files have this tag in there,
-                        // even though it doesn't do anything.  So let's at least not fail if
-                        // the project file contains this.
-                        case VSProjectElements.exclude:
-                            string warning = AssemblyResources.GetString("ExcludeFoundInProject");
-                            conversionWarnings.Add(warning);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, filesChildElement.Location,
-                                "UnrecognizedChildElement", filesChildNode.Name,
-                                VSProjectElements.files);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(filesChildNode.Name, filesElement.Name, filesElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;Include&gt; element, and everything within it.  As it is
-        /// doing this, it will add the appropriate items to a new ProjectItemGroupElement.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessIncludeElement
-            (
-            XmlElementWithLocation includeElement
-            )
-        {
-            // Make sure this is the <Include> element.
-            error.VerifyThrow((includeElement?.Name == VSProjectElements.include),
-                "Expected <Include> element.");
-
-            // Make sure the caller gave us a valid xmakeProject to stuff
-            // our new items into.
-            error.VerifyThrow(xmakeProject != null, "Expected valid xmake project object.");
-
-            // The <Include> tag should have no attributes.
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!includeElement.HasAttributes, includeElement.Location,
-                "NoAttributesExpected", VSProjectElements.include);
-
-            ProjectItemGroupElement filesItemGroup = null;
-
-            // Loop through all the direct child elements of the <Include> element.
-            foreach (XmlNode includeChildNode in includeElement)
-            {
-                // Handle XML comments under the the <Include> node (just ignore them).
-                if ((includeChildNode.NodeType == XmlNodeType.Comment) ||
-                    (includeChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (includeChildNode.NodeType == XmlNodeType.Element)
-                {
-                    if (filesItemGroup == null)
-                    {
-                        filesItemGroup = xmakeProject.AddItemGroup();
-                    }
-
-                    XmlElementWithLocation includeChildElement = (XmlElementWithLocation)includeChildNode;
-                    switch (includeChildElement.Name)
-                    {
-                        // The <File> element.
-                        case VSProjectElements.file:
-                            this.ProcessFileElement(includeChildElement, filesItemGroup);
-                            break;
-
-                        // The <Folder> element.
-                        case VSProjectElements.folder:
-                            this.ProcessFolderElement(includeChildElement, filesItemGroup);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, includeChildElement.Location,
-                                "UnrecognizedChildElement", includeChildNode.Name,
-                                VSProjectElements.include);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(includeChildNode.Name, includeElement.Name, includeElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;File&gt; element, and adds an appropriate item to the
-        /// filesItemGroup.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessFileElement
-            (
-            XmlElementWithLocation fileElement,
-            ProjectItemGroupElement filesItemGroup
-            )
-        {
-            // Make sure this is the <File> element.
-            error.VerifyThrow((fileElement?.Name == VSProjectElements.file),
-                "Expected <File> element.");
-
-            // Make sure the caller has already created an ProjectItemGroupElement for us to
-            // put the new items in.
-            error.VerifyThrow(filesItemGroup != null, "Received null ProjectItemGroupElement");
-
-            // Get the required "RelPath" attribute.
-            string relPath = fileElement.GetAttribute(VSProjectAttributes.relPath);
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!string.IsNullOrEmpty(relPath),
-                fileElement.Location, "MissingAttribute", VSProjectAttributes.relPath, VSProjectElements.file);
-            // Remove the "RelPath" attribute, so we don't end up adding it twice.
-            fileElement.RemoveAttribute(VSProjectAttributes.relPath);
-
-            // Get the "Link" attribute.  This is for linked items only.
-            string linkPath = fileElement.GetAttribute(VSProjectAttributes.link);
-            // Remove the "Link" attribute, so we don't end up adding it twice.
-            fileElement.RemoveAttribute(VSProjectAttributes.link);
-
-            // Get the "BuildAction" attribute.  If it doesn't exist, figure out
-            // what the build action is based on the file extension.  This is
-            // what the project loading code does in VS.
-            string buildAction = fileElement.GetAttribute(VSProjectAttributes.buildAction);
-            if (string.IsNullOrEmpty(buildAction))
-            {
-                buildAction = VSProjectAttributes.buildActionNone;
-            }
-            // Remove the "BuildAction" attribute, so we don't end up adding it twice.
-            fileElement.RemoveAttribute(VSProjectAttributes.buildAction);
-
-            ProjectItemElement newFileItem;
-
-            // Bug Whidbey #248965. If a .resx file is completely empty, do not include a reference
-            // to it in the upgraded project file.
-            if (!
-                (String.Equals(Path.GetExtension(relPath), ".resx", StringComparison.OrdinalIgnoreCase)
-                 && IsFilePresentButEmpty(relPath, linkPath))
-               )
-            {
-                // Add the new item to XMake.
-                if (string.IsNullOrEmpty(linkPath))
-                {
-                    // Normal item.
-
-                    // The <File> element gets converted to XMake as a new item, where
-                    // the item type is the BuildAction, and the "Include" contains
-                    // the relative path to the item.  For
-                    // example,
-                    // -----------------------------------------------------------------------
-                    // Everett format:
-                    // ===============
-                    //    <File
-                    //        RelPath = "Properties\PropertyGroupCollection.cs"
-                    //        SubType = "Code"
-                    //        BuildAction = "Compile"
-                    //    />
-                    // -----------------------------------------------------------------------
-                    // XMake format:
-                    // =============
-                    //    <Compile Include = "Properties\PropertyGroupCollection.cs">
-                    //          <SubType>Code</SubType>
-                    //    </Compile>
-                    // -----------------------------------------------------------------------
-                    newFileItem = filesItemGroup.AddItem(buildAction, ProjectCollection.Escape(relPath));
-                }
-                else
-                {
-                    // Linked item.
-
-                    // The <File> element gets converted to XMake as a new item, where
-                    // the item type is the BuildAction, the "Include" contains
-                    // the physical relative path to the item, and the non-XMake "Link"
-                    // attribute contains the project-relative path for item (for display
-                    // purposes in the Solution Explorer).  For example,
-                    // -----------------------------------------------------------------------
-                    // Everett format:
-                    // ===============
-                    //    <File
-                    //        RelPath = "Properties\PropertyGroupCollection.cs"
-                    //        Link = "c:\Rajeev\External\PropertyGroupCollection.cs"
-                    //        SubType = "Code"
-                    //        BuildAction = "Compile"
-                    //    />
-                    // -----------------------------------------------------------------------
-                    // XMake format:
-                    // =============
-                    //    <Compile Include = "c:\Rajeev\External\PropertyGroupCollection.cs">
-                    //          <Link>Properties\PropertyGroupCollection.cs</Link>
-                    //          <SubType>Code</SubType>
-                    //    </Compile>
-                    // -----------------------------------------------------------------------
-                    newFileItem = filesItemGroup.AddItem(buildAction, ProjectCollection.Escape(linkPath));
-                    newFileItem.AddMetadata(XMakeProjectStrings.link, ProjectCollection.Escape(relPath));
-                }
-
-                // Add all the rest of the attributes on the <File> element to the new
-                // XMake item.
-                foreach (XmlAttribute fileAttribute in fileElement.Attributes)
-                {
-                    newFileItem.AddMetadata(fileAttribute.Name, ProjectCollection.Escape(fileAttribute.Value));
-                }
-
-                // If this is a VSD(devices) project and we're dealing with a content file,
-                // mark it to copy if newer.
-                if (((this.language == VSProjectElements.ECSharp) ||
-                         (this.language == VSProjectElements.EVisualBasic)) &&
-                     (String.Equals(buildAction, XMakeProjectStrings.content, StringComparison.OrdinalIgnoreCase)))
-                {
-                    newFileItem.AddMetadata(XMakeProjectStrings.copytooutput,
-                                              XMakeProjectStrings.preservenewest);
-                }
-            }
-            else
-            {
-                string warning = ResourceUtilities.FormatString(
-                    AssemblyResources.GetString("EmptyResxRemoved"),
-                    relPath);
-                conversionWarnings.Add(warning);
-            }
-
-            // There should be no children of the <File> element.
-            ProjectXmlUtilities.VerifyThrowProjectNoChildElements(fileElement);
-        }
-
-        /// <summary>
-        /// Checks whether a file has content. If it is empty, returns true.
-        /// If file does not exist we may be waiting for it to download asynchronously
-        /// via source control so return false to leave it in the project
-        /// </summary>
-        /// <owner>danmose</owner>
-        private bool IsFilePresentButEmpty(string relPath, string linkPath)
-        {
-            // relpath is the filename
-            // linkPath, if it exists, is the relative path from the project, or the absolute full path
-            string path;
-            if (string.IsNullOrEmpty(linkPath))
-            {
-                path = Path.Combine(Path.GetDirectoryName(oldProjectFile), relPath);
-            }
-            else
-            {
-                if (Path.IsPathRooted(linkPath)) // absolute
-                {
-                    path = linkPath;
-                }
-                else // relative
-                {
-                    path = Path.Combine(Path.GetDirectoryName(oldProjectFile), linkPath);
-                }
-            }
-
-            if (!File.Exists(path))
-            {
-                // File does not exist - may be waiting to be download asynchronously via source control
-                // so return false to leave it in the project
-                return false;
-            }
-
-            long length;
-            try
-            {
-                FileInfo fi = new FileInfo(path);
-                length = fi.Length;
-            }
-            catch (Exception e) // Catching Exception, but rethrowing unless it's a well-known exception.
-            {
-                if (ExceptionHandling.NotExpectedException(e))
-                {
-                    throw;
-                }
-                // if we can't say for sure it's empty, play safe and return false
-                return false;
-            }
-
-            return length == 0;
-        }
-
-        /// <summary>
-        /// Processes the &lt;Folder&gt; element, and adds an appropriate item to the
-        /// filesItemGroup.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessFolderElement
-            (
-            XmlElementWithLocation folderElement,
-            ProjectItemGroupElement filesItemGroup
-            )
-        {
-            // Make sure this is the <Folder> element.
-            error.VerifyThrow((folderElement?.Name == VSProjectElements.folder),
-                "Expected <Folder> element.");
-
-            // Make sure the caller has already created an ProjectItemGroupElement for us to
-            // put the new items in.
-            error.VerifyThrow(filesItemGroup != null, "Received null ProjectItemGroupElement");
-
-            // Get the required "RelPath" attribute.
-            string relPath = folderElement.GetAttribute(VSProjectAttributes.relPath);
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!string.IsNullOrEmpty(relPath),
-                folderElement.Location, "MissingAttribute", VSProjectAttributes.relPath, VSProjectElements.folder);
-            // Remove the "RelPath" attribute, so we don't end up adding it twice.
-            folderElement.RemoveAttribute(VSProjectAttributes.relPath);
-
-            // We need to find out what type of folder this is -- a web references
-            // folder, a web reference URL, or just an empty project folder.
-
-            // See if there's a "WebReferences" attribute on the <Folder> element.  If so,
-            // and the value is set to "True", then it's a web reference folder.
-            string webReferences = folderElement.GetAttribute(VSProjectAttributes.webReferences);
-            // Remove the "WebReferences" attribute, so we don't end up adding it twice.
-            folderElement.RemoveAttribute(VSProjectAttributes.webReferences);
-
-            // See if there's a "WebReferenceURL" attribute.  If so, it's a web reference
-            // URL.
-            string webReferenceUrl = folderElement.GetAttribute(VSProjectAttributes.webReferenceUrl);
-            // Remove the "WebReferenceURL" attribute, so we don't end up adding it twice.
-            folderElement.RemoveAttribute(VSProjectAttributes.webReferenceUrl);
-
-            ProjectItemElement newFolderItem;
-
-            if ((webReferences != null) && (String.Equals(webReferences, "true", StringComparison.OrdinalIgnoreCase)))
-            {
-                // This is a web reference folder.
-
-                // The <Folder> element gets converted to XMake as an item of type
-                // "WebReferences".  The "Include" will contain the relative path.
-                // For example,
-                // -----------------------------------------------------------------------
-                // Everett format:
-                // ===============
-                //    <Folder
-                //        RelPath = "Web References\"
-                //        WebReferences = "TRUE"
-                //    />
-                // -----------------------------------------------------------------------
-                // XMake format:
-                // =============
-                //    <WebReferences Include = "Web References\" />
-                // -----------------------------------------------------------------------
-                newFolderItem = filesItemGroup.AddItem(XMakeProjectStrings.webReferences,
-                    ProjectCollection.Escape(relPath));
-            }
-            else if (!string.IsNullOrEmpty(webReferenceUrl))
-            {
-                // This is an actual web reference URL.
-
-                // The <Folder> element gets converted to XMake as an item of type
-                // "WebReferenceURL".  The "Include" will contain the URL.
-                // For example,
-                // -----------------------------------------------------------------------
-                // Everett format:
-                // ===============
-                //    <Folder
-                //        RelPath = "Web References\mobileakipman\"
-                //        WebReferenceUrl = "http://mobileakipman/HelloName/service1.asmx"
-                //        UrlBehavior = "Static"
-                //    />
-                // -----------------------------------------------------------------------
-                // XMake format:
-                // =============
-                //    <WebReferenceUrl Include="http://mobileakipman/HelloName/service1.asmx">
-                //          <RelPath>Web References\mobileakipman\</RelPath>
-                //          <UrlBehavior>Static</UrlBehavior>
-                //    </WebReferenceUrl>
-                // -----------------------------------------------------------------------
-                newFolderItem = filesItemGroup.AddItem(XMakeProjectStrings.webReferenceUrl,
-                    ProjectCollection.Escape(webReferenceUrl));
-                newFolderItem.AddMetadata(XMakeProjectStrings.relPath, ProjectCollection.Escape(relPath));
-
-                // Whidbey projects have some new properties to control the behavior of the
-                // proxy generation.  For projects migrated from Everett, we want to force
-                // the proxy generation to mimic the Everett behavior, so that people's projects
-                // still work the same as they did in Everett.  (These properties did not
-                // exist in Everett.)  See spec at:
-                // http://devdiv/SpecTool/Documents/Whidbey/VSCore/Solution%20Project%20Build/FeatureSpecs/Project-WebReferences.doc
-                if (!this.newWebReferencePropertiesAdded)
-                {
-                    this.globalPropertyGroup.AddProperty(XMakeProjectStrings.webRefEnableProperties,
-                        (this.language == VSProjectElements.visualJSharp) ? "false" : "true");
-                    this.globalPropertyGroup.AddProperty(XMakeProjectStrings.webRefEnableSqlTypes, "false");
-                    this.globalPropertyGroup.AddProperty(XMakeProjectStrings.webRefEnableLegacyEventing, "true");
-
-                    this.newWebReferencePropertiesAdded = true;
-                }
-            }
-            else
-            {
-                // This is just a project folder that happens not to have any files in it.
-
-                // The <Folder> element gets converted to XMake as an item of type "Folder".
-                // However, we do need to remove the trailing backslash, because XMake
-                // interprets that as a recursion (bug # 58591).  For example,
-                // -----------------------------------------------------------------------
-                // Everett format:
-                // ===============
-                //    <Folder
-                //        RelPath = "MyEmptyProjectFolder\"
-                //    />
-                // -----------------------------------------------------------------------
-                // XMake format:
-                // =============
-                //    <Folder Include="MyEmptyProjectFolder" />
-                // -----------------------------------------------------------------------
-
-                // Remove the trailing backslash.  XMake interprets trailing backslashes
-                // as a recursive wildcard.  This will be fixed in M2 -- bug # 58591
-                if (relPath.EndsWith("\\", StringComparison.Ordinal))
-                {
-                    relPath = relPath.Remove(relPath.Length - 1, 1);
-                }
-
-                newFolderItem = filesItemGroup.AddItem(XMakeProjectStrings.folder,
-                    ProjectCollection.Escape(relPath));
-            }
-
-            // Add all the rest of the attributes on the <Folder> element to the new
-            // XMake item.
-            foreach (XmlAttribute folderAttribute in folderElement.Attributes)
-            {
-                newFolderItem.AddMetadata(folderAttribute.Name, ProjectCollection.Escape(folderAttribute.Value));
-            }
-
-            // There should be no children of the <Folder> element.
-            ProjectXmlUtilities.VerifyThrowProjectNoChildElements(folderElement);
-        }
-
-        /// <summary>
-        /// Processes the &lt;StartupServices&gt; element, and everything within it.  As
-        /// it is doing this, it will add new "StartupService" items to a new ProjectItemGroupElement.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessStartupServicesElement
-            (
-            XmlElementWithLocation startupServicesElement
-            )
-        {
-            // Make sure this is the <StartupServices> element.
-            error.VerifyThrow((startupServicesElement?.Name == VSProjectElements.startupServices),
-                "Expected <StartupServices> element.");
-
-            // Make sure the caller gave us a valid xmakeProject to stuff
-            // our new items into.
-            error.VerifyThrow(xmakeProject != null, "Expected valid xmake project object.");
-
-            // The <StartupServices> tag should have no attributes.
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!startupServicesElement.HasAttributes, startupServicesElement.Location,
-                "NoAttributesExpected", VSProjectElements.startupServices);
-
-            ProjectItemGroupElement startupServicesItemGroup = null;
-
-            // Loop through all the direct child elements of the <StartupServices> element.
-            foreach (XmlNode startupServicesChildNode in startupServicesElement)
-            {
-                // Handle XML comments under the the <StartupServices> node (just ignore them).
-                if ((startupServicesChildNode.NodeType == XmlNodeType.Comment) ||
-                    (startupServicesChildNode.NodeType == XmlNodeType.Whitespace))
-                {
-                    continue;
-                }
-
-                if (startupServicesChildNode.NodeType == XmlNodeType.Element)
-                {
-                    XmlElementWithLocation startupServicesChildElement = (XmlElementWithLocation)startupServicesChildNode;
-                    switch (startupServicesChildElement.Name)
-                    {
-                        // The <Service> element.
-                        case VSProjectElements.service:
-                            if (startupServicesItemGroup == null)
-                            {
-                                startupServicesItemGroup = xmakeProject.AddItemGroup();
-                            }
-
-                            this.ProcessServiceElement(startupServicesChildElement, startupServicesItemGroup);
-                            break;
-
-                        default:
-                            ProjectErrorUtilities.VerifyThrowInvalidProject(false, startupServicesChildElement.Location,
-                                "UnrecognizedChildElement", startupServicesChildNode.Name,
-                                VSProjectElements.startupServices);
-                            break;
-                    }
-                }
-                else
-                {
-                    ProjectXmlUtilities.ThrowProjectInvalidChildElement(startupServicesChildNode.Name, startupServicesElement.Name, startupServicesElement.Location);
-                }
-            }
-        }
-
-        /// <summary>
-        /// Processes the &lt;Service&gt; element, and add an appropriate reference
-        /// items to the startupServicesItemGroup.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessServiceElement
-            (
-            XmlElementWithLocation serviceElement,
-            ProjectItemGroupElement startupServicesItemGroup
-            )
-        {
-            // Make sure this is the <Service> element.
-            error.VerifyThrow((serviceElement?.Name == VSProjectElements.service),
-                "Expected <Service> element.");
-
-            // Make sure the caller has already created an ProjectItemGroupElement for us to
-            // put the new items in.
-            error.VerifyThrow(startupServicesItemGroup != null, "Received null ProjectItemGroupElement");
-
-            // Get the required "ID" attribute.
-            string id = serviceElement.GetAttribute(VSProjectAttributes.id);
-            ProjectErrorUtilities.VerifyThrowInvalidProject(!string.IsNullOrEmpty(id), serviceElement.Location,
-                "MissingAttribute", VSProjectAttributes.id, VSProjectElements.service);
-            // Remove the "ID" attribute, so it doesn't show up in our loop later.
-            serviceElement.RemoveAttribute(VSProjectAttributes.id);
-
-            // The <Service> element gets converted to XMake as an item of type "Service".
-            // The "ID" attribute becomes the "Include" for the new item.  For
-            // example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <Service ID = "ABCD1234-78F4-4F98-AFD6-720DA6E648A2" />
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <Service Include="ABCD1234-78F4-4F98-AFD6-720DA6E648A2" />
-            // -----------------------------------------------------------------------
-            startupServicesItemGroup.AddItem(XMakeProjectStrings.service, ProjectCollection.Escape(id));
-
-            // There should be no other attributes on the <Service> element (besides
-            // "ID" which we already took care of).  But loop through them
-            // anyway, so we can emit a useful error message.
-            foreach (XmlAttributeWithLocation serviceAttribute in serviceElement.Attributes)
-            {
-                ProjectErrorUtilities.VerifyThrowInvalidProject(false, serviceAttribute.Location, "UnrecognizedAttribute",
-                    serviceAttribute.Name, VSProjectElements.service);
-            }
-
-            // There should be no children of the <Service> element.
-            ProjectXmlUtilities.VerifyThrowProjectNoChildElements(serviceElement);
-        }
-
-        /// <summary>
-        /// Processes the &lt;OtherProjectSettings&gt; element, and everything within it.
-        /// As it is doing this, it will add stuff to the globalPropertyGroup.
-        /// </summary>
-        /// <owner>RGoel</owner>
-        private void ProcessOtherProjectSettingsElement
-            (
-            XmlElementWithLocation otherProjectSettingsElement
-            )
-        {
-            // Make sure this is the <OtherProjectSettings> element.
-            error.VerifyThrow((otherProjectSettingsElement?.Name == VSProjectElements.otherProjectSettings),
-                "Expected <Settings> element.");
-
-            // Make sure the caller gave us a valid globalPropertyGroup to stuff
-            // our properties into.
-            error.VerifyThrow(globalPropertyGroup != null, "Expected valid global ProjectPropertyElementGroup.");
-
-            // All of the attributes on the <Settings> tag get converted to XMake
-            // properties.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <OtherProjectSettings
-            //        CopyProjectDestinationFolder = ""
-            //        CopyProjectUncPath = ""
-            //        CopyProjectOption = "0"
-            //        ProjectView = "ProjectFiles"
-            //        ProjectTrust = "0"
-            //    />
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //    <PropertyGroup>
-            //        <CopyProjectDestinationFolder></CopyProjectDestinationFolder>
-            //        <CopyProjectUncPath></CopyProjectUncPath>
-            //        <CopyProjectOption>0</CopyProjectOption>
-            //        <ProjectView>ProjectFiles</ProjectView>
-            //        <ProjectTrust>0</ProjectTrust>
-            //    </PropertyGroup>
-            // -----------------------------------------------------------------------
-            this.AddXMakePropertiesFromXMLAttributes(this.globalPropertyGroup, otherProjectSettingsElement);
-
-            // There should be no children of the <OtherProjectSettings> element.
-            ProjectXmlUtilities.VerifyThrowProjectNoChildElements(otherProjectSettingsElement);
-        }
-
-        /// <summary>
-        /// Processes the &lt;UserProperties&gt; element, and everything within it.
-        /// Basically, this element and its contents end up going verbatim into
-        /// the &lt;ProjectExtensions&gt; section of the newly converted MSBuild project
-        /// file.
-        ///
-        /// The one slight exception is that we do something special for Trinity
-        /// conversion.  Specifically, if we detect that this is a White Rabbit
-        /// project, we add the flavor GUID for Triumph.
-        /// </summary>
-        /// <param name="userPropertiesElement"></param>
-        /// <param name="isTriumphProject"></param>
-        /// <owner>rgoel</owner>
-        private void ProcessUserPropertiesElement
-            (
-            XmlElementWithLocation userPropertiesElement,
-            out bool isTriumphProject
-            )
-        {
-            // Make sure this is the <UserProperties> element.
-            error.VerifyThrow((userPropertiesElement?.Name == VSProjectElements.userProperties),
-                "Expected <UserProperties> element.");
-
-            isTriumphProject = false;
-
-            // All of the <UserProperties> node goes into the <ProjectExtensions> section
-            // verbatim.  The one exception is that if we detect a White Rabbit project,
-            // then we add the flavor GUID for Triumph.  For example,
-            // -----------------------------------------------------------------------
-            // Everett format:
-            // ===============
-            //    <UserProperties
-            //        OfficeDocumentPath = ".\ExcelProject41.xls"
-            //        OfficeDocumentType = "XLS"
-            //        OfficeProject = "true"
-            //        blun="1"
-            //        bloo="2"
-            //        blee="3"
-            //    />
-            // -----------------------------------------------------------------------
-            // XMake format:
-            // =============
-            //  <Project>
-            //
-            //      <PropertyGroup>
-            //          ...
-            //          <ProjectTypeGuids>{BAA0C2D2-18E2-41B9-852F-F413020CAA33};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
-            //          ...
-            //      </PropertyGroup>
-            //      ...
-            //      <ProjectExtensions>
-            //
-            //          <VisualStudio>
-            //
-            //              <UserProperties
-            //                  OfficeDocumentPath = ".\ExcelProject41.xls"
-            //                  OfficeDocumentType = "XLS"
-            //                  OfficeProject = "true"
-            //                  blun="1"
-            //                  bloo="2"
-            //                  blee="3"
-            //              />
-            //
-            //              <CommonProperties>
-            //                  <FL_B3B1084D_C66C_4F4C_B279_5C1BA6092AFB>
-            //                      <FL_FAE04EC0_301F_11D3_BF4B_00C04F79EFBC />
-            //                  </FL_B3B1084D_C66C_4F4C_B279_5C1BA6092AFB>
-            //              </CommonProperties>
-            //
-            //          </VisualStudio>
-            //
-            //      </ProjectExtensions>
-            //
-            //  </Project>
-            // -----------------------------------------------------------------------
-
-            string visualStudioProjectExtensions = GetProjectExtensionsString(XMakeProjectStrings.visualStudio);
-            visualStudioProjectExtensions += userPropertiesElement.OuterXml;
-
-            // If there are any attributes on the <UserProperties> element that indicate that
-            // this was a White Rabbit project, add the Triumph flavor GUID.
-            if (
-                (userPropertiesElement.Attributes[VSProjectAttributes.officeDocumentPath] != null) ||
-                (userPropertiesElement.Attributes[VSProjectAttributes.officeDocumentType] != null) ||
-                (userPropertiesElement.Attributes[VSProjectAttributes.officeProject] != null)
-               )
-            {
-                isTriumphProject = true;
-
-                // We need the language-specific Guid as well.
-                string languageGuid = String.Empty;
-
-                if (this.language == VSProjectElements.cSharp)
-                {
-                    languageGuid = XMakeProjectStrings.cSharpGuid;
-                }
-                else if (this.language == VSProjectElements.visualBasic)
-                {
-                    languageGuid = XMakeProjectStrings.visualBasicGuid;
-                }
-                else if (this.language == VSProjectElements.visualJSharp)
-                {
-                    languageGuid = XMakeProjectStrings.visualJSharpGuid;
-                }
-                else
-                {
-                    error.VerifyThrow(false, "This project is not recognized as one of the following 3 languages:  C#, VB, VJ#");
-                }
-
-                // Add a new global property called ProjectTypeGuids.
-                this.globalPropertyGroup.AddProperty(XMakeProjectStrings.projectTypeGuids,
-                    "{" + XMakeProjectStrings.triumphProjectTypeGuid + "};{" + languageGuid + "}");
-
-                // Add the Office document as a "None" item in the converted project file.
-                XmlAttribute officeDocumentPathAttribute = userPropertiesElement.Attributes[VSProjectAttributes.officeDocumentPath];
-                if (officeDocumentPathAttribute != null)
-                {
-                    string officeDocumentPath = officeDocumentPathAttribute.Value;
-                    if (!string.IsNullOrEmpty(officeDocumentPath))
-                    {
-                        string projectFileDirectory = Path.GetDirectoryName(Path.GetFullPath(this.oldProjectFile));
-                        string officeDocumentFullPath = Path.GetFullPath(Path.Combine(projectFileDirectory, officeDocumentPath));
-
-                        // If the office document is in the project directory ...
-                        if (String.Equals(projectFileDirectory, Path.GetDirectoryName(officeDocumentFullPath), StringComparison.OrdinalIgnoreCase))
-                        {
-                            // If the office document actually exists on disk ...
-                            if (File.Exists(officeDocumentFullPath))
-                            {
-                                // Add the office document as a "None" item to the converted project.
-                                ProjectItemGroupElement officeDocumentItemGroup = this.xmakeProject.AddItemGroup();
-                                officeDocumentItemGroup.AddItem("None", ProjectCollection.Escape(officeDocumentPath));
-                            }
-                        }
-                    }
-                }
-            }
-
-            SetProjectExtensionsString(XMakeProjectStrings.visualStudio, visualStudioProjectExtensions);
-        }
-
-        /// <summary>
-        /// Fix hard-coded fully qualified paths in Code Analysis properties.
-        ///
-        /// Due to a bug in Whidbey configuration cloning, some Code Analysis
-        /// properties in Whidbey project files contain fully qualified paths.
-        /// They need to be detected and removed during project conversion so
-        /// that Code Analysis will work on converted Whidbey projects.
-        /// </summary>
-        /// <owner>duanek</owner>
-        /// <returns>true if changes were required, false otherwise</returns>
-        // -----------------------------------------------------------------------
-        // XMake format:
-        // =============
-        //  <Project>
-        //      ...
-        //      <PropertyGroup>
-        //          ...
-        //          <CodeAnalysisRuleAssemblies>C:\Program Files\Microsoft Visual Studio 8\Team Tools\Static Analysis Tools\FxCop\\rules</CodeAnalysisRuleAssemblies>
-        //          ...
-        //      </PropertyGroup>
-        //      ...
-        //  </Project>
-        // -----------------------------------------------------------------------
-        private bool FixCodeAnalysisPaths()
-        {
-            bool changedProject = false;
-
-            // Iterate over all <PropertyGroup> nodes
-            // Look for a <CodeAnalysisRuleAssemblies> node
-            foreach (ProjectPropertyElement ProjectPropertyElement in xmakeProject.Properties)
-            {
-                if (ProjectPropertyElement.Name == XMakeProjectStrings.codeAnalysisRuleAssemblies)
-                {
-                    // We do not want to blindly remove this property since it
-                    // is valid for the user to modify it in the project file.
-
-                    // The default value in Microsoft.CodeAnalysis.Targets
-                    // is a rooted path ending in "FxCop\\rules".
-                    if (Path.IsPathRooted(ProjectPropertyElement.Value))
-                    {
-                        if (ProjectPropertyElement.Value.EndsWith(@"FxCop\\rules", StringComparison.Ordinal))
-                        {
-                            ProjectPropertyElement.Parent.RemoveChild(ProjectPropertyElement);
-                            changedProject = true;
-                        }
-                    }
-
-                    break;
-                }
-            }
-
-            return changedProject;
-        }
-
-        /// <summary>
-        /// Find the first property with the provided name in the ProjectRootElement.
-        /// If none is found, returns null.
-        /// </summary>
-        private ProjectPropertyElement FindPropertyIfPresent(ProjectRootElement project, string name)
-        {
-            foreach (ProjectPropertyElement property in project.Properties)
-            {
-                if (String.Equals(property.Name, name, StringComparison.OrdinalIgnoreCase))
-                {
-                    return property;
-                }
-            }
-
-            return null;
-        }
-
-        /// <summary>
-        /// Get the project extensions string with a particular ID,
-        /// or empty string if it does not exist or there is no project extensions at all
-        /// </summary>
-        private string GetProjectExtensionsString(string id)
-        {
-            ProjectExtensionsElement element = xmakeProject.ProjectExtensions;
-
-            return (element == null) ? String.Empty : element[id];
-        }
-
-        /// <summary>
-        /// Set a project extensions string with the provided Id,
-        /// even if there is no project extensions tag at present
-        /// </summary>
-        private void SetProjectExtensionsString(string id, string content)
-        {
-            ProjectExtensionsElement element = xmakeProject.ProjectExtensions;
-
-            if (element == null)
-            {
-                element = xmakeProject.CreateProjectExtensionsElement();
-                xmakeProject.AppendChild(element);
-            }
-
-            element[id] = content;
-        }
-    }
-}
diff --git a/src/Deprecated/Conversion/README.md b/src/Deprecated/Conversion/README.md
deleted file mode 100644
index 3e39338920b..00000000000
--- a/src/Deprecated/Conversion/README.md
+++ /dev/null
@@ -1,5 +0,0 @@
-# Microsoft.Build.Conversion.Core
-
-⚠️ This package is **deprecated** and should not be referenced. It will be removed in a future version of MSBuild.
-
-Contains `Microsoft.Build.Conversion.Core.dll`, which is provided with MSBuild for compatibility purposes.
diff --git a/src/Deprecated/Conversion/Resources/Strings.resx b/src/Deprecated/Conversion/Resources/Strings.resx
deleted file mode 100644
index 7aa5726a4f8..00000000000
--- a/src/Deprecated/Conversion/Resources/Strings.resx
+++ /dev/null
@@ -1,190 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<root>
-  <!--
-    Microsoft ResX Schema
-
-    Version 2.0
-
-    The primary goals of this format is to allow a simple XML format
-    that is mostly human readable. The generation and parsing of the
-    various data types are done through the TypeConverter classes
-    associated with the data types.
-
-    Example:
-
-    ... ado.net/XML headers & schema ...
-    <resheader name="resmimetype">text/microsoft-resx</resheader>
-    <resheader name="version">2.0</resheader>
-    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
-    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
-    <data name="Name1">this is my long string</data>
-    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
-    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
-        [base64 mime encoded serialized .NET Framework object]
-    </data>
-    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-        [base64 mime encoded string representing a byte array form of the .NET Framework object]
-    </data>
-
-    There are any number of "resheader" rows that contain simple
-    name/value pairs.
-
-    Each data row contains a name, and value. The row also contains a
-    type or mimetype. Type corresponds to a .NET class that support
-    text/value conversion through the TypeConverter architecture.
-    Classes that don't support this are serialized and stored with the
-    mimetype set.
-
-    The mimetype is used for serialized objects, and tells the
-    ResXResourceReader how to depersist the object. This is currently not
-    extensible. For a given mimetype the value must be set accordingly:
-
-    Note - application/x-microsoft.net.object.binary.base64 is the format
-    that the ResXResourceWriter will generate, however the reader can
-    read any of the formats listed below.
-
-    mimetype: application/x-microsoft.net.object.binary.base64
-    value   : The object must be serialized with
-            : System.Serialization.Formatters.Binary.BinaryFormatter
-            : and then encoded with base64 encoding.
-
-    mimetype: application/x-microsoft.net.object.soap.base64
-    value   : The object must be serialized with
-            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
-            : and then encoded with base64 encoding.
-
-    mimetype: application/x-microsoft.net.object.bytearray.base64
-    value   : The object must be serialized into a byte array
-            : using a System.ComponentModel.TypeConverter
-            : and then encoded with base64 encoding.
-    -->
-  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
-    <xsd:element name="root" msdata:IsDataSet="true">
-      <xsd:complexType>
-        <xsd:choice maxOccurs="unbounded">
-          <xsd:element name="metadata">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" />
-              <xsd:attribute name="type" type="xsd:string" />
-              <xsd:attribute name="mimetype" type="xsd:string" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="data">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
-                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
-              <xsd:attribute name="UESanitized" type="xsd:boolean" msdata:Ordinal="3" />
-              <xsd:attribute name="Visibility" type="Visibility_Type" msdata:Ordinal="4" />
-              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="5" />
-              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="6" />
-            </xsd:complexType>
-          </xsd:element>
-          <xsd:element name="resheader">
-            <xsd:complexType>
-              <xsd:sequence>
-                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
-              </xsd:sequence>
-              <xsd:attribute name="name" type="xsd:string" use="required" />
-            </xsd:complexType>
-          </xsd:element>
-        </xsd:choice>
-      </xsd:complexType>
-    </xsd:element>
-    <xsd:simpleType name="Visibility_Type">
-      <xsd:restriction base="xsd:string">
-        <xsd:enumeration value="Public" />
-        <xsd:enumeration value="Obsolete" />
-        <xsd:enumeration value="Private_OM" />
-      </xsd:restriction>
-    </xsd:simpleType>
-  </xsd:schema>
-  <resheader name="resmimetype">
-    <value>text/microsoft-resx</value>
-  </resheader>
-  <resheader name="version">
-    <value>2.0</value>
-  </resheader>
-  <resheader name="reader">
-    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
-  </resheader>
-  <resheader name="writer">
-    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
-  </resheader>
-  <data name="CouldNotFindCompleteSolutionFile" UESanitized="false" Visibility="Public">
-    <value>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</value>
-    <comment>{StrBegin="MSB2013: "}</comment>
-  </data>
-  <data name="EmptyResxRemoved" UESanitized="false" Visibility="Public">
-    <value>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</value>
-    <comment>{StrBegin="MSB2016: "}</comment>
-  </data>
-  <data name="ExcludeFoundInProject" UESanitized="false" Visibility="Public">
-    <value>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</value>
-    <comment>{StrBegin="MSB2015: "}</comment>
-  </data>
-  <data name="MissingAttribute" UESanitized="true" Visibility="Public">
-    <value>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</value>
-    <comment>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</comment>
-  </data>
-  <data name="MissingNewProjectFile" UESanitized="true" Visibility="Public">
-    <value>MSB2002: The file name of the new project must be specified.</value>
-    <comment>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</comment>
-  </data>
-  <data name="MissingOldProjectFile" UESanitized="true" Visibility="Public">
-    <value>MSB2003: The file name of the old project must be specified.</value>
-    <comment>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</comment>
-  </data>
-  <data name="MultipleLanguageNodesNotAllowed" UESanitized="true" Visibility="Public">
-    <value>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</value>
-    <comment>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</comment>
-  </data>
-  <data name="NoAttributesExpected" UESanitized="true" Visibility="Public">
-    <value>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</value>
-    <comment>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</comment>
-  </data>
-  <data name="NoRootProjectElement" UESanitized="true" Visibility="Public">
-    <value>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</value>
-    <comment>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</comment>
-  </data>
-  <data name="ProjectFileNotFound" UESanitized="false" Visibility="Public">
-    <value>MSB2007: Visual Studio cannot find the project file "{0}".</value>
-    <comment>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</comment>
-  </data>
-  <data name="ProjectNotListingInSolutionFile" UESanitized="false" Visibility="Public">
-    <value>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</value>
-    <comment>{StrBegin="MSB2014: "}</comment>
-  </data>
-  <data name="ProjectTypeCannotBeConverted" UESanitized="false" Visibility="Public">
-    <value>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</value>
-    <comment>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</comment>
-  </data>
-  <data name="UnrecognizedAttribute" UESanitized="true" Visibility="Public">
-    <value>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</value>
-    <comment>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</comment>
-  </data>
-  <data name="UnrecognizedChildElement" UESanitized="true" Visibility="Public">
-    <value>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</value>
-    <comment>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</comment>
-  </data>
-  <data name="UnrecognizedElement" UESanitized="true" Visibility="Public">
-    <value>MSB2011: Element &lt;{0}&gt; is not valid.</value>
-    <comment>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</comment>
-  </data>
-  <data name="UnsupportedProjectToProjectWebReference" UESanitized="false" Visibility="Public">
-    <value>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</value>
-    <comment>{StrBegin="MSB2012: "}</comment>
-  </data>
-  <!--
-        The conversion message bucket is: MSB2001 - MSB2999
-
-        Next error code should be MSB2017.
-
-        Don't forget to update this comment after using the new code.
-  -->
-</root>
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.cs.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.cs.xlf
deleted file mode 100644
index 71cedc89897..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.cs.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="cs" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: Meziprojektový odkaz s identifikací GUID {0} nebylo možno převést, protože nebyl nalezen platný soubor SLN obsahující všechny projekty.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: V projektu byl nalezen prázdný soubor RESX ({0}). Soubor bude z převedeného projektu odebrán.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: V původním souboru projektu byl nalezen element &lt;Exclude&gt;. Tento element nelze převést do formátu aplikace Visual Studio .NET, a proto bude ignorován.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: Element &lt;{0}&gt; neobsahuje požadovaný atribut {1}.</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: Je nutné zadat název souboru nového projektu.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: Je nutné zadat název souboru starého projektu.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: Element &lt;{0}&gt; nemůže obsahovat více než jeden uzel jazyka.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: Element &lt;{0}&gt; nemůže obsahovat atributy.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: Soubor projektu neobsahuje kořenový element &lt;{0}&gt;.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Aplikaci Visual Studio se nepodařilo nalézt soubor projektu {0}.</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: Meziprojektový odkaz s identifikací GUID {0} nebylo možno převést, protože není uveden v souboru {1}.</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: Tento systém projektů Visual Studio nemůže převést projekty {0}. Lze jej použít pouze k převodu klientských projektů v jazycích C#, Visual Basic a Visual J#.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: Atribut {0} elementu &lt;{1}&gt; není platný.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: Podřízený element &lt;{0}&gt; elementu &lt;{1}&gt; není platný.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: Element &lt;{0}&gt; není platný.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: Meziprojektové odkazy na webové projekty již nejsou podporovány, a proto nemohou být převedeny. Odeberte odkaz na projekt {0} a přidejte jej znovu.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.de.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.de.xlf
deleted file mode 100644
index 06d47da226f..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.de.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="de" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: Ein &lt;Exclude&gt;-Element wurde in der ursprünglichen Projektdatei gefunden. Dieses Element kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: Das &lt;{0}&gt;-Element enthält nicht das erforderliche {1}-Attribut.</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: Das &lt;{0}&gt;-Element darf nur einen Sprachknoten enthalten.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: Das &lt;{0}&gt;-Element darf keine Attribute enthalten.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: In der Projektdatei ist das &lt;{0}&gt;-Stammelement nicht enthalten.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: Das {0}-Attribut des &lt;{1}&gt;-Elements ist ungültig.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: Das untergeordnete &lt;{0}&gt;-Element des &lt;{1}&gt;-Elements ist ungültig.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: Das &lt;{0}&gt;-Element ist ungültig.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.es.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.es.xlf
deleted file mode 100644
index 89d087f8822..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.es.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="es" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: La referencia entre proyectos con GUID {0} no se pudo convertir porque no se encuentra un archivo .SLN válido con todos los proyectos.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: Se encontró un archivo .RESX vacío en el proyecto ({0}). Se quitará del proyecto convertido.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: Se encontró un elemento &lt;Exclude&gt; en el archivo del proyecto original. No se puede convertir a Visual Studio .NET y se omitirá.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: El elemento &lt;{0}&gt; no contiene el atributo necesario "{1}".</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: Debe especificarse el nombre de archivo del nuevo proyecto.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: Debe especificarse el nombre de archivo del proyecto anterior.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: El elemento &lt;{0}&gt; no puede contener más de un nodo de lenguaje.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: El elemento &lt;{0}&gt; no puede contener atributos.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: El archivo del proyecto no contiene el elemento raíz &lt;{0}&gt;.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Visual Studio no encuentra el archivo del proyecto "{0}".</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: La referencia entre proyectos con GUID {0} no se puede convertir porque no aparece en el archivo '{1}'.</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: Este sistema de proyectos de Visual Studio no puede convertir proyectos de "{0}". Solo se puede usar para convertir proyectos de cliente C#, VB y VJ#.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: El atributo "{0}" del elemento &lt;{1}&gt; no es válido.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: El elemento secundario &lt;{0}&gt; del elemento &lt;{1}&gt; no es válido.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: El elemento &lt;{0}&gt; no es válido.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: La referencia entre proyectos a los proyectos web ya no se admite y, en consecuencia, no se puede convertir. Quite la referencia al proyecto {0} y agréguela de nuevo.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.fr.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.fr.xlf
deleted file mode 100644
index dac7ff2b947..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.fr.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="fr" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: Impossible de convertir la référence entre projets avec le GUID {0} car le fichier .SLN valide qui contient tous les projets est introuvable.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: Fichier .RESX vide trouvé dans le projet ({0}). Suppression de ce fichier dans le projet converti.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: Élément &lt;Exclude&gt; trouvé dans le fichier projet d'origine. Sa conversion à Visual Studio .NET étant impossible, il est ignoré.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: L'élément &lt;{0}&gt; ne contient pas l'attribut "{1}" requis.</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: Le nom de fichier du nouveau projet doit être spécifié.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: Le nom de fichier de l'ancien projet doit être spécifié.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: L'élément &lt;{0}&gt; ne peut pas contenir plusieurs nœuds de langage.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: L'élément &lt;{0}&gt; ne peut pas contenir d'attributs.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: Le fichier projet ne contient pas l'élément racine &lt;{0}&gt;.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Visual Studio ne peut pas trouver le fichier projet "{0}".</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: Impossible de convertir la référence entre projets avec le GUID {0}, car elle n'est pas listée dans le fichier '{1}'.</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: Ce système de projet Visual Studio ne peut pas convertir les projets "{0}". Il ne permet de convertir que les projets clients C#, VB et VJ#.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: L'attribut "{0}" de l'élément &lt;{1}&gt; n'est pas valide.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: L'élément enfant &lt;{0}&gt; de l'élément &lt;{1}&gt; n'est pas valide.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: L'élément &lt;{0}&gt; n'est pas valide.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: Les références entre projets aux projets Web ne sont plus prises en charge et ne peuvent donc pas être converties. Supprimez la référence au projet {0}, puis ajoutez-la à nouveau.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.it.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.it.xlf
deleted file mode 100644
index 4e8cb64f37f..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.it.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="it" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: non è stato possibile convertire il riferimento da progetto a progetto con GUID {0} perché non è stato trovato un file con estensione sln valido contenente tutti i progetti.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: nel progetto ({0}) è stato trovato un file con estensione resx vuoto. Tale file verrà rimosso dal progetto convertito.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: nel file di progetto originale è stato trovato un elemento &lt;Exclude&gt;. Tale elemento non può essere convertito in Visual Studio .NET e verrà ignorato.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: l'elemento &lt;{0}&gt; non contiene l'attributo obbligatorio "{1}".</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: è necessario specificare il nome file del nuovo progetto.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: è necessario specificare il nome file del vecchio progetto.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: l'elemento &lt;{0}&gt; non può contenere più di un nodo lingua.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: l'elemento &lt;{0}&gt; non può contenere attributi.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: il file di progetto non contiene l'elemento radice &lt;{0}&gt;.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: il file di progetto "{0}" non è stato trovato.</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: non è possibile convertire il riferimento da progetto a progetto con GUID {0} perché non è elencato nel file '{1}'.</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: non è possibile convertire "{0}" progetti con il sistema del progetto Visual Studio. Tale sistema può essere usato solo per convertire progetti client C#, VB e VJ#.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: l'attributo "{0}" dell'elemento &lt;{1}&gt; non è valido.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: l'elemento figlio &lt;{0}&gt; dell'elemento &lt;{1}&gt; non è valido.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: elemento &lt;{0}&gt; non valido.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: i riferimenti da progetto a progetto a progetti Web non sono più supportati e pertanto non possono essere convertiti. Rimuovere il riferimento al progetto {0} e aggiungerlo di nuovo.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.ja.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.ja.xlf
deleted file mode 100644
index e3355e3c588..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.ja.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="ja" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: すべてのプロジェクトを含む有効な .SLN ファイルが見つからなかったため、GUID {0} を伴うプロジェクト間参照を変換できませんでした。</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: プロジェクト ({0}) で空の .RESX ファイルが見つかりました。変換されたプロジェクトからそのファイルを削除しています。</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: 元のプロジェクト ファイルで &lt;Exclude&gt; 要素が見つかりました。これは Visual Studio .NET に変換することはできないため、無視されます。</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: 要素 &lt;{0}&gt; には必要な属性 "{1}" が含まれていません。</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: 新しいプロジェクトの名前を指定してください。</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: 古いプロジェクトの名前を指定してください。</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: 要素 &lt;{0}&gt; には 1 つ以上の言語ノードを含めることはできません。</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: 要素 &lt;{0}&gt; には属性を含めることはできません。</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: プロジェクト ファイルにはルート要素 &lt;{0}&gt; がありません。</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Visual Studio では、プロジェクト ファイル "{0}" が見つかりませんでした。</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: ファイル '{1}' のリストにないため、GUID {0} を伴うプロジェクト間参照を変換できません。</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: この Visual Studio プロジェクト システムでは、"{0}" プロジェクトを変換できません。C#、VB、および VJ# クライアント プロジェクト以外はこのシステムを使って変換できません。</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: 要素 &lt;{1}&gt; の属性 "{0}" は有効ではありません。</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: 要素 &lt;{1}&gt; の子要素 &lt;{0}&gt; は有効ではありません。</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: 要素 &lt;{0}&gt; は有効ではありません。</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: Web プロジェクトへのプロジェクト間参照は、現在サポートされていないため、変換することができません。プロジェクト {0} への参照を削除してから、再度追加してください。</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.ko.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.ko.xlf
deleted file mode 100644
index 17379a48e22..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.ko.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="ko" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: 모든 프로젝트를 포함하는 올바른 .SLN 파일을 찾을 수 없으므로 GUID가 {0}인 프로젝트 간 참조를 변환할 수 없습니다.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: 프로젝트({0})에 빈 .RESX 파일이 있습니다.  변환된 프로젝트에서 이 파일을 제거합니다.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: 원래 프로젝트 파일에 &lt;Exclude&gt; 요소가 있습니다.  이 요소는 Visual Studio .NET으로 변환할 수 없으므로 무시됩니다.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: &lt;{0}&gt; 요소에 필요한 "{1}" 특성이 없습니다.</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: 새 프로젝트의 파일 이름을 지정해야 합니다.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: 이전 프로젝트의 파일 이름을 지정해야 합니다.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: &lt;{0}&gt; 요소는 언어 노드를 둘 이상 포함할 수 없습니다.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: &lt;{0}&gt; 요소는 특성을 포함할 수 없습니다.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: 프로젝트 파일에 &lt;{0}&gt; 루트 요소가 없습니다.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Visual Studio에서 프로젝트 파일 "{0}"을(를) 찾을 수 없습니다.</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: GUID가 {0}인 프로젝트 간 참조는 '{1}' 파일에 나열되어 있지 않으므로 변환할 수 없습니다.</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: 이 Visual Studio 프로젝트 시스템에서 "{0}" 프로젝트를 변환할 수 없습니다. C#, VB 및 VJ# 클라이언트 프로젝트만 변환할 수 있습니다.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: &lt;{1}&gt; 요소의 "{0}" 특성이 잘못되었습니다.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: &lt;{1}&gt; 요소의 &lt;{0}&gt; 자식 요소가 잘못되었습니다.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: &lt;{0}&gt; 요소가 잘못되었습니다.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: 웹 프로젝트에 대한 프로젝트 간 참조는 더 이상 지원되지 않으므로 변환할 수 없습니다. {0} 프로젝트에 대한 참조를 제거한 후 다시 추가하십시오.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.pl.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.pl.xlf
deleted file mode 100644
index 7a064c4613b..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.pl.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="pl" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: Nie można przekonwertować odwołania między projektami o identyfikatorze GUID {0}, ponieważ nie odnaleziono prawidłowego pliku SLN zawierającego wszystkie projekty.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: Odnaleziono pusty plik RESX w projekcie ({0}). Zostanie on usunięty z przekonwertowanego projektu.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: Znaleziono element &lt;Exclude&gt; w oryginalnym pliku projektu. Nie można go przekonwertować na format Visual Studio .NET i zostanie on zignorowany.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: Element &lt;{0}&gt; nie zawiera wymaganego atrybutu „{1}”.</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: Należy określić nazwę pliku nowego projektu.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: Należy określić nazwę pliku starego projektu.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: Element &lt;{0}&gt; nie może zawierać więcej niż jeden węzeł języka.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: Element &lt;{0}&gt; nie może zawierać atrybutów.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: Plik projektu nie zawiera elementu głównego &lt;{0}&gt;.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Program Visual Studio nie może odnaleźć pliku projektu „{0}”.</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: Nie można przekonwertować odwołania między projektami o identyfikatorze GUID {0}, ponieważ nie jest ono wymienione w pliku „{1}”.</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: Ten system projektów programu Visual Studio nie może konwertować projektów „{0}”. Można go używać tylko do konwertowania projektów klienckich C#, VB i VJ#.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: Atrybut „{0}” elementu &lt;{1}&gt; jest nieprawidłowy.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: Element podrzędny &lt;{0}&gt; elementu &lt;{1}&gt; jest nieprawidłowy.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: Element &lt;{0}&gt; jest nieprawidłowy.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: Odwołania między projektami do projektów sieci Web nie są już obsługiwane i dlatego nie można ich konwertować. Usuń odwołanie do projektu {0} i dodaj je ponownie.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.pt-BR.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.pt-BR.xlf
deleted file mode 100644
index 7f50ac9166c..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.pt-BR.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="pt-BR" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: A referência de projeto-a-projeto com GUID {0} não foi convertida porque um arquivo .SLN válido contendo todos os projetos não foi encontrado.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: Foi encontrado um arquivo .RESX vazio no projeto ({0}). Removendo-o do projeto convertido.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: Foi encontrado um elemento &lt;Exclude&gt; no arquivo de projeto original. Ele não pode ser convertido para o Visual Studio .NET e será ignorado.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: O elemento &lt;{0}&gt; não contém o atributo "{1}" necessário.</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: É necessário especificar o nome de arquivo do projeto novo.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: É necessário especificar o nome de arquivo do projeto antigo.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: O elemento &lt;{0}&gt; não pode conter mais de um nó de idioma.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: O elemento &lt;{0}&gt; não pode conter atributos.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: O arquivo de projeto não contém o elemento raiz &lt;{0}&gt;.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: O Visual Studio não pode localizar o arquivo de projeto "{0}".</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: A referência de projeto-a-projeto com GUID {0} não foi convertida porque ela não está na lista do arquivo "{1}".</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: Esse sistema de projeto do Visual Studio não pode converter projetos "{0}". Ele só pode ser usado para converter projetos de cliente C#, VB e VJ#.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: O atributo "{0}" do elemento &lt;{1}&gt; não é válido.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: O elemento filho &lt;{0}&gt; do elemento &lt;{1}&gt; não é válido.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: O elemento &lt;{0}&gt; não é válido.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: Não há mais suporte para as referências projeto-a-projeto a projetos da Web e por isso não é possível convertê-las. Remova a referência ao projeto {0} e adicione-a novamente.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.ru.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.ru.xlf
deleted file mode 100644
index 57f064b07e7..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.ru.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="ru" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: не удалось преобразовать ссылку с проекта на проект с GUID {0}, поскольку не удалось найти допустимый файл .SLN, содержащий все проекты.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: в проекте ({0}) обнаружен пустой файл .RESX.  Идет его удаление из преобразованного проекта.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: обнаружен элемент &lt;Exclude&gt; в исходном файле проекта.  Не удается выполнить преобразование в формат Visual Studio .NET.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: элемент &lt;{0}&gt; не содержит обязательного атрибута "{1}".</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: необходимо указать имя файла нового проекта.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: необходимо указать имя файла старого проекта.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: элемент &lt;{0}&gt; не может содержать более одного узла language.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: элемент &lt;{0}&gt; не может содержать атрибуты.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: файл проекта не содержит корневой элемент &lt;{0}&gt;.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Visual Studio не удалось найти файл проекта "{0}".</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: нельзя преобразовать ссылку одного проекта на другой с GUID {0}, поскольку она отсутствует в файле "{1}".</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: эта система проектов Visual Studio не может выполнять преобразование проектов "{0}".  Она может использоваться только для преобразования клиентских проектов C#, VB и VJ#.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: недопустимый атрибут "{0}" для элемента "{1}".</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: недопустимый дочерний элемент &lt;{0}&gt; элемента &lt;{1}&gt;.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: недопустимый элемент &lt;{0}&gt;.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: ссылки одного проекта на другой в веб-проектах больше не поддерживаются, и таким образом, не могут быть преобразованы.  Удалите ссылку на проект {0} и добавьте ее повторно.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.tr.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.tr.xlf
deleted file mode 100644
index 46398f68e02..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.tr.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="tr" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: Tüm projeleri içeren geçerli bir .SLN dosyası bulunamadığından, GUID değeri {0} olan projeden projeye başvuru dönüştürülemedi.</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: Projede boş bir .RESX dosyası bulundu ({0}). Bu dosya dönüştürülen projeden kaldırılıyor.</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: Özgün proje dosyasında &lt;Exclude&gt; öğesi bulundu. Bu, Visual Studio .NET'e dönüştürülemez; yoksayılıyor.</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: &lt;{0}&gt; öğesi gereken "{1}" özniteliğini içermiyor.</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: Yeni projenin dosya adı belirtilmelidir.</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: Eski projenin dosya adı belirtilmelidir.</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: &lt;{0}&gt; öğesi birden çok dil düğümü içeremez.</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: &lt;{0}&gt; öğesi öznitelik içeremez.</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: Proje dosyası &lt;{0}&gt; kök öğesini içermiyor.</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Visual Studio "{0}" proje dosyasını bulamıyor.</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: GUID değeri {0} olan projeden projeye başvuru '{1}' dosyasında listelenmediğinden dönüştürülemiyor.</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: Bu Visual Studio proje sistemi "{0}" projelerini dönüştüremez. Bu yalnızca C#, VB ve VJ# istemci projelerini dönüştürmek için kullanılabilir.</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: &lt;{1}&gt; öğesinin "{0}" özniteliği geçerli değil.</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: &lt;{1}&gt; öğesinin &lt;{0}&gt; alt öğesi geçerli değil.</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: &lt;{0}&gt; öğesi geçerli değil.</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: Web projelerine yönelik projeden projeye yapılan başvurular artık desteklenmiyor ve bu nedenle dönüştürülemez. Lütfen {0} projesine yönelik başvuruyu kaldırın ve sonra yeniden ekleyin.</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.xlf
deleted file mode 100644
index b0867aebae9..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.xlf
+++ /dev/null
@@ -1,122 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" original="../Strings.resx" build-num="951173053">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <group id="XMAKECONVERSION/RESOURCES/STRINGS.RESX" datatype="resx" />
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT" />
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.zh-Hans.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.zh-Hans.xlf
deleted file mode 100644
index e49ab19ee4d..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.zh-Hans.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="zh-Hans" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: 未能转换 GUID 为 {0} 的项目到项目引用，因为找不到包含所有项目的有效 .SLN 文件。</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: 在项目({0})中找到一个空的 .RESX 文件。 将从转换后的项目中将它移除。</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015: 在原始项目文件中找到一个 &lt;Exclude&gt; 元素。 无法将它转换为 Visual Studio .NET，因此将它忽略。</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: 元素 &lt;{0}&gt; 未包含必需的特性“{1}”。</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: 必须指定新项目的文件名。</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: 必须指定旧项目的文件名。</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: 元素 &lt;{0}&gt; 不能包含多个语言节点。</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: 元素 &lt;{0}&gt; 不能包含特性。</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: 项目文件未包含根元素 &lt;{0}&gt;。</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Visual Studio 找不到项目文件“{0}”。</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: 无法转换 GUID 为 {0} 的项目到项目引用，因为文件“{1}”中没有列出该引用。</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008: 此 Visual Studio 项目系统无法转换“{0}”项目。 它只能用于转换 C#、VB 和 VJ# 客户端项目。</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: 元素 &lt;{1}&gt; 的特性“{0}”无效。</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: 元素 &lt;{1}&gt; 的子元素 &lt;{0}&gt; 无效。</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: 元素 &lt;{0}&gt; 无效。</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012: 不再支持对 Web 项目的项目到项目引用，因此无法转换此类引用。 请移除对项目 {0} 的引用，然后重新添加它。</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Deprecated/Conversion/Resources/xlf/Strings.zh-Hant.xlf b/src/Deprecated/Conversion/Resources/xlf/Strings.zh-Hant.xlf
deleted file mode 100644
index e99a3a187a1..00000000000
--- a/src/Deprecated/Conversion/Resources/xlf/Strings.zh-Hant.xlf
+++ /dev/null
@@ -1,169 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
-  <file datatype="xml" source-language="en" target-language="zh-Hant" original="../Strings.resx" build-num="-1522637684">
-    <header>
-      <count-group name="BlackBox wordcount">
-        <count count-type="x-wordCount">231</count>
-        <count count-type="x-adjWordCount">107.05</count>
-        <count count-type="x-curAdjWordCount">107.05</count>
-        <count count-type="x-repeatAdjWordCount">0</count>
-        <count count-type="x-termWordCount">0</count>
-      </count-group>
-      <count-group name="BlackBox wordcount analysis">
-        <count count-type="x-match102%">0</count>
-        <count count-type="x-match101%">26</count>
-        <count count-type="x-match100%">112</count>
-        <count count-type="x-match99-90%">0</count>
-        <count count-type="x-match89-75%">0</count>
-        <count count-type="x-mt">93</count>
-        <count count-type="repetition">0</count>
-      </count-group>
-    </header>
-    <body>
-      <trans-unit id="CouldNotFindCompleteSolutionFile">
-        <source>MSB2013: The project-to-project reference with GUID {0} could not be converted because a valid .SLN file containing all projects could not be found.</source>
-        <target state="translated">MSB2013: 無法轉換 GUID 為 {0} 的專案對專案間參考，因為找不到包含所有專案的有效 .SLN 檔。</target>
-        <note>{StrBegin="MSB2013: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2013: Der Interprojektverweis mit der GUID {0} konnte nicht konvertiert werden, da keine gültige SLN-Datei mit allen Projekten gefunden wurde.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="EmptyResxRemoved">
-        <source>MSB2016: Found an empty .RESX file in the project ({0}).  Removing it from the converted project.</source>
-        <target state="translated">MSB2016: 在專案 ({0}) 中找到空的 .RESX 檔。</target>
-        <note>{StrBegin="MSB2016: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2016: Eine leere RESX-Datei wurde im Projekt "({0})" gefunden. Die Datei wird aus dem konvertierten Projekt entfernt.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="16" adjWordcount="4" curWordcount="4" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ExcludeFoundInProject">
-        <source>MSB2015: Found an &lt;Exclude&gt; element in the original project file.  This cannot be converted to Visual Studio .NET and is being ignored.</source>
-        <target state="translated">MSB2015:  在原始專案檔中找到 &lt;Exclude&gt; 項目。無法將它轉換為 Visual Studio .NET，已忽略。</target>
-        <note>{StrBegin="MSB2015: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2015: Gefunden Sie ein &lt; Exclude &gt; Element in der Projektdatei.  Dies kann nicht in Visual Studio .NET konvertiert werden und wird ignoriert.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="23" adjWordcount="19.55" curWordcount="19.55"</note>
-      </trans-unit>
-      <trans-unit id="MissingAttribute">
-        <source>MSB2001: Element &lt;{0}&gt; does not contain the required attribute "{1}".</source>
-        <target state="translated">MSB2001: 項目 &lt;{0}&gt; 未包含必要的屬性 "{1}"。</target>
-        <note>{StrBegin="MSB2001: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2001: Element &lt;{0}&gt; enthält nicht das erforderliche Attribut "{1}".</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="MissingNewProjectFile">
-        <source>MSB2002: The file name of the new project must be specified.</source>
-        <target state="translated">MSB2002: 必須指定新專案的檔名。</target>
-        <note>{StrBegin="MSB2002: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2002: Der Dateiname des neuen Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MissingOldProjectFile">
-        <source>MSB2003: The file name of the old project must be specified.</source>
-        <target state="translated">MSB2003: 必須指定舊專案的檔名。</target>
-        <note>{StrBegin="MSB2003: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2003: Der Dateiname des alten Projekts muss angegeben werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="11" adjWordcount="2.75" curWordcount="2.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="MultipleLanguageNodesNotAllowed">
-        <source>MSB2004: Element &lt;{0}&gt; cannot contain more than one language node.</source>
-        <target state="translated">MSB2004: 項目 &lt;{0}&gt; 不可以包含一個以上的語言節點。</target>
-        <note>{StrBegin="MSB2004: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.  The {0} in this case is going to be "VisualStudioProject".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2004: Element &lt;{0}&gt; darf nicht mehr als einen Sprachknoten enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="11" adjWordcount="9.35" curWordcount="9.35"</note>
-      </trans-unit>
-      <trans-unit id="NoAttributesExpected">
-        <source>MSB2005: Element &lt;{0}&gt; cannot contain attributes.</source>
-        <target state="translated">MSB2005: 項目 &lt;{0}&gt; 不可以包含屬性。</target>
-        <note>{StrBegin="MSB2005: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2005: Element &lt;{0}&gt; darf keine Attribute enthalten.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="NoRootProjectElement">
-        <source>MSB2006: The project file does not contain the root element &lt;{0}&gt;.</source>
-        <target state="translated">MSB2006: 專案檔未包含根項目 &lt;{0}&gt;。</target>
-        <note>{StrBegin="MSB2006: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2006: Die Projektdatei enthält kein Stammelement &lt;{0}&gt;.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="ProjectFileNotFound">
-        <source>MSB2007: Visual Studio cannot find the project file "{0}".</source>
-        <target state="translated">MSB2007: Visual Studio 找不到專案檔 "{0}"。</target>
-        <note>{StrBegin="MSB2007: "}This error shouldn't be possible when converting through Visual Studio, but we have it just in case.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2007: Die Projektdatei "{0}" wurde nicht gefunden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="9" adjWordcount="2.25" curWordcount="2.25" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectNotListingInSolutionFile">
-        <source>MSB2014: The project-to-project reference with GUID {0} cannot be converted because it is not listed in the file '{1}'.</source>
-        <target state="translated">MSB2014: 無法轉換 GUID 為 {0} 的專案對專案間參考，因為它未列在檔案 '{1}' 中。</target>
-        <note>{StrBegin="MSB2014: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2014: Der Interprojektverweis mit der GUID {0} kann nicht konvertiert werden, da er nicht in der Datei "{1}" enthalten ist.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="19" adjWordcount="4.75" curWordcount="4.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="ProjectTypeCannotBeConverted">
-        <source>MSB2008: This Visual Studio project system cannot convert "{0}" projects.  It can only be used to convert C#, VB, and VJ# client projects.</source>
-        <target state="translated">MSB2008:  這個 Visual Studio 專案系統無法轉換 "{0}" 專案。它只能用來轉換 C#、Visual Basic 和 Visual J# 用戶端專案。</target>
-        <note>{StrBegin="MSB2008: "}It appears we've been asked to convert a project that either wasn't created by the Visual Studio managed client project system (C#, VB, J#), or that has been hand-modified or corrupted.  You would get this error if this conversion utility was invoked on a VC++ project (.VCPROJ) for example.  In this case, the {0} would be replaced with "Visual C++".</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="tm-suggestion">MSB2008: Mit diesem Visual Studio-Projektsystem können keine {0}-Projekte konvertiert werden. Mit diesem System können nur C#-, VB- und VJ#-Clientprojekte konvertiert werden.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="100" wordcount="23" adjWordcount="5.75" curWordcount="5.75" tmLabel="N''"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedAttribute">
-        <source>MSB2009: Attribute "{0}" of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2009: 項目 &lt;{1}&gt; 的屬性 "{0}" 無效。</target>
-        <note>{StrBegin="MSB2009: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2009: Das Attribut "{0}" des Elements &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="10" adjWordcount="8.5" curWordcount="8.5"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedChildElement">
-        <source>MSB2010: Child element &lt;{0}&gt; of element &lt;{1}&gt; is not valid.</source>
-        <target state="translated">MSB2010: 項目 &lt;{1}&gt; 的子項目 &lt;{0}&gt; 無效。</target>
-        <note>{StrBegin="MSB2010: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2010: Untergeordnete Element &lt;{0}&gt; Element &lt;{1}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="12" adjWordcount="10.2" curWordcount="10.2"</note>
-      </trans-unit>
-      <trans-unit id="UnrecognizedElement">
-        <source>MSB2011: Element &lt;{0}&gt; is not valid.</source>
-        <target state="translated">MSB2011: 項目 &lt;{0}&gt; 無效。</target>
-        <note>{StrBegin="MSB2011: "}It appears we've been asked to convert a project that either wasn't created by Visual Studio, or that has been hand-modified or corrupted.</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="mt-suggestion">MSB2011: Element &lt;{0}&gt; ist ungültig.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="15" wordcount="7" adjWordcount="5.95" curWordcount="5.95"</note>
-      </trans-unit>
-      <trans-unit id="UnsupportedProjectToProjectWebReference">
-        <source>MSB2012: Project-to-project references to web projects are no longer supported and therefore cannot be converted.  Please remove the reference to project {0} and add it again.</source>
-        <target state="translated">MSB2012:  已不再支援 Web 專案的專案對專案間參考，所以無法轉換。請移除專案 {0} 的參考，然後再將它加入。</target>
-        <note>{StrBegin="MSB2012: "}</note>
-        <alt-trans match-quality="100%" tool="BlackBox/MSR MT">
-          <target state-qualifier="leveraged-tm">MSB2012: Interprojektverweise auf Webprojekte werden nicht mehr unterstützt und können daher nicht konvertiert werden. Entfernen Sie den Verweis auf das Projekt "{0}", und fügen Sie es erneut hinzu.</target>
-        </alt-trans>
-        <note from="bb-metadata">fuzzyMatch="101" wordcount="26" adjWordcount="0" curWordcount="0" tmLabel="N''"</note>
-      </trans-unit>
-    </body>
-  </file>
-</xliff>
\ No newline at end of file
diff --git a/src/Package/DevDivPackage/DevDivPackage.csproj b/src/Package/DevDivPackage/DevDivPackage.csproj
index 85515b16d4e..ca942d61dbc 100644
--- a/src/Package/DevDivPackage/DevDivPackage.csproj
+++ b/src/Package/DevDivPackage/DevDivPackage.csproj
@@ -12,7 +12,6 @@
   <ItemGroup>
     <ProjectReference Include="..\..\MSBuild\MSBuild.csproj" />
     <ProjectReference Include="..\..\Framework\Microsoft.Build.Framework.csproj" />
-    <ProjectReference Include="..\..\Deprecated\Conversion\Microsoft.Build.Conversion.csproj" />
   </ItemGroup>
 
   <Import Project="..\NuspecProject.targets" />
diff --git a/src/Package/GetBinPaths.targets b/src/Package/GetBinPaths.targets
index dc99cabb70d..8fb7dd323de 100644
--- a/src/Package/GetBinPaths.targets
+++ b/src/Package/GetBinPaths.targets
@@ -19,11 +19,6 @@
                       ReferenceOutputAssembly="false"
                       OutputItemType="MSBuildTaskHostResolvedProjectReferencePath" />
 
-    <ProjectReference Include="$(MSBuildThisFileDirectory)\..\Deprecated\Conversion\Microsoft.Build.Conversion.csproj"
-                      Private="false"
-                      ReferenceOutputAssembly="false"
-                      OutputItemType="MSBuildConversionResolvedProjectReferencePath" />
-
     <!-- Set up items to build projects where the Platform is set to x64, when we need the x64 versions of the files.
          We have to treat these separately from normal project references, as the AssignProjectConfiguration task would overwrite
          the SetPlatform item metadata if they were ProjectReferences.
