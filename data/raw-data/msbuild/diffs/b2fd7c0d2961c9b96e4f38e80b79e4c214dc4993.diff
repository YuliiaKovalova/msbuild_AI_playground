diff --git a/src/Build/BackEnd/Node/OutOfProcNode.cs b/src/Build/BackEnd/Node/OutOfProcNode.cs
index 38494bcc8ac..435a5405453 100644
--- a/src/Build/BackEnd/Node/OutOfProcNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcNode.cs
@@ -572,9 +572,10 @@ private void SendPacket(INodePacket packet)
             if (_nodeEndpoint.LinkStatus == LinkStatus.Active)
             {
                 _nodeEndpoint.SendData(packet);
+#if RUNTIME_TYPE_NETCORE
                 if (packet is LogMessagePacketBase logMessage)
                 {
-                    if (logMessage.EventType == LoggingEventType.CustomEvent)
+                    if (logMessage.EventType == LoggingEventType.CustomEvent && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_8))
                     {
                         BuildEventArgs buildEvent = logMessage.NodeBuildEvent.Value.Value;
 
@@ -586,6 +587,7 @@ private void SendPacket(INodePacket packet)
                             buildEvent?.GetType().Name ?? string.Empty);
                     }
                 }
+#endif
             }
         }
 
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index 1171b5b5329..75d7c682f52 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -1159,7 +1159,8 @@ private void SendBuildEvent(BuildEventArgs e)
                 LogMessagePacket logMessage = new LogMessagePacket(new KeyValuePair<int, BuildEventArgs>(_currentConfiguration.NodeId, e));
                 _nodeEndpoint.SendData(logMessage);
 
-                if (logMessage.EventType == LoggingEventType.CustomEvent)
+#if RUNTIME_TYPE_NETCORE
+                if (logMessage.EventType == LoggingEventType.CustomEvent && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_8))
                 {
                     BuildEventArgs buildEvent = logMessage.NodeBuildEvent.Value.Value;
 
@@ -1170,6 +1171,7 @@ private void SendBuildEvent(BuildEventArgs e)
                         "DeprecatedEventSerialization",
                         buildEvent?.GetType().Name ?? string.Empty);
                 }
+#endif
             }
         }
 
