diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 0771dd9ede0..29a3a3aa931 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1129,7 +1129,7 @@ void SerializeCaches()
             }
         }
 
-        [MethodImpl(MethodImplOptions.NoInlining)] // avoid assembly loads
+        [MethodImpl(MethodImplOptions.NoInlining)] // avoid assembly loads of System.Diagnostics.DiagnosticSource, TODO: when this is agreed to perf-wise enable instrumenting using activities anywhere...
         private void EndBuildTelemetry()
         {
             OpenTelemetryManager.Instance.DefaultActivitySource?
diff --git a/src/Framework/Telemetry/OpenTelemetryManager.cs b/src/Framework/Telemetry/OpenTelemetryManager.cs
index c789cf2b9d0..5b8edf24d20 100644
--- a/src/Framework/Telemetry/OpenTelemetryManager.cs
+++ b/src/Framework/Telemetry/OpenTelemetryManager.cs
@@ -69,6 +69,13 @@ public void Initialize(bool isStandalone)
                     return;
                 }
 
+                // TODO: temporary until we have green light to enable telemetry perf-wise
+                if (!IsOptIn())
+                {
+                    _telemetryState = TelemetryState.Unsampled;
+                    return;
+                }
+
                 if (!IsSampled())
                 {
                     _telemetryState = TelemetryState.Unsampled;
@@ -196,6 +203,11 @@ public void Shutdown()
         /// </summary>
         private bool IsOptOut() => Traits.Instance.FrameworkTelemetryOptOut || Traits.Instance.SdkTelemetryOptOut || !ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14);
 
+        /// <summary>
+        /// TODO: Temporary until perf of loading OTel is agreed to in VS.
+        /// </summary>
+        private bool IsOptIn() => !IsOptOut() && Traits.Instance.TelemetrySampleRateOverride.HasValue;
+
         /// <summary>
         /// Determines if telemetry should be initialized based on sampling and environment variable overrides.
         /// </summary>
