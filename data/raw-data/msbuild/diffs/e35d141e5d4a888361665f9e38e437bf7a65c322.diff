diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index 13289e3233a..39afe1bd185 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -4385,14 +4385,7 @@ public void PropertyFunctionCheckFeatureAvailability(string featureName, string
         [Theory]
         [InlineData("\u3407\ud840\udc60\ud86a\ude30\ud86e\udc0a\ud86e\udda0\ud879\udeae\u2fd5\u0023", 0, 3, "\u3407\ud840\udc60\ud86a\ude30")]
         [InlineData("\u3407\ud840\udc60\ud86a\ude30\ud86e\udc0a\ud86e\udda0\ud879\udeae\u2fd5\u0023", 2, 5, "\ud86a\ude30\ud86e\udc0a\ud86e\udda0\ud879\udeae\u2fd5")]
-// in net742 parts of one emoji are treated as separate graphemes (text elements) while for newer .net they are one grapheme, see doc with change log:
-// https://learn.microsoft.com/en-us/dotnet/core/compatibility/globalization/5.0/uax29-compliant-grapheme-enumeration?WT.mc_id=DOP-MVP-5002735#change-description
-#if NET5_0_OR_GREATER
-        [InlineData("\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\u002e\u0070\u0072\u006f\u006a", 0, 8, "\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\u002e\u0070\u0072\u006f\u006a")]
-#else
         [InlineData("\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\u002e\u0070\u0072\u006f\u006a", 0, 8, "\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\ud83d\udc68")]
-#endif
-
         public void SubstringByTextElements(string featureName, int start, int length, string expected)
         {
             var expander = new Expander<ProjectPropertyInstance, ProjectItemInstance>(new PropertyDictionary<ProjectPropertyInstance>(), FileSystems.Default);
diff --git a/src/Build/Evaluation/IntrinsicFunctions.cs b/src/Build/Evaluation/IntrinsicFunctions.cs
index a4704893a68..4fe706309ad 100644
--- a/src/Build/Evaluation/IntrinsicFunctions.cs
+++ b/src/Build/Evaluation/IntrinsicFunctions.cs
@@ -631,12 +631,33 @@ internal static bool AreFeaturesEnabled(Version wave)
 
         internal static string SubstringByTextElements(string input, int start, int length)
         {
+            if (start < 0)
+                throw new ArgumentException("Start index of the substring cannot be less than 0.");
+
+// in .net framework parts of one emoji are treated as separate graphemes (text elements) while for .net 5.0+ they are one grapheme, see doc with change log:
+// https://learn.microsoft.com/en-us/dotnet/core/compatibility/globalization/5.0/uax29-compliant-grapheme-enumeration?WT.mc_id=DOP-MVP-5002735#change-description
+// Runes in .net core behave same as StringInfo grapheme segmentation in .net framework
+#if NETFRAMEWORK
             StringInfo stringInfo = new StringInfo(input);
             if (stringInfo.LengthInTextElements > length + start)
             {
                 return stringInfo.SubstringByTextElements(start, length);
             }
             return input;
+#else
+            StringBuilder sb = new StringBuilder();
+            int i = 0;
+            foreach (Rune rune in input.EnumerateRunes())
+            {
+                if (i >= start + length)
+                {
+                    break;
+                }
+                sb.Append(rune.ToString());
+                i++;
+            }
+            return sb.Length > 0 ? sb.ToString() : input;
+#endif
         }
 
         internal static string CheckFeatureAvailability(string featureName)
