diff --git a/src/Tasks/AssemblyDependency/Node/OutOfProcRarClient.cs b/src/Tasks/AssemblyDependency/Node/OutOfProcRarClient.cs
index c5f988781ae..4cfd2f053ee 100644
--- a/src/Tasks/AssemblyDependency/Node/OutOfProcRarClient.cs
+++ b/src/Tasks/AssemblyDependency/Node/OutOfProcRarClient.cs
@@ -13,7 +13,7 @@ namespace Microsoft.Build.Tasks.AssemblyDependency
     /// Implements a client for sending the ResolveAssemblyReference task to an out-of-proc node.
     /// This is intended to be reused for all RAR tasks across a single build.
     /// </summary>
-    internal class OutOfProcRarClient : IDisposable
+    internal sealed class OutOfProcRarClient : IDisposable
     {
         private readonly NodePipeClient _pipeClient;
 
diff --git a/src/Tasks/AssemblyDependency/Node/OutOfProcRarNode.cs b/src/Tasks/AssemblyDependency/Node/OutOfProcRarNode.cs
index c615f7f6a1c..fad1dfa7244 100644
--- a/src/Tasks/AssemblyDependency/Node/OutOfProcRarNode.cs
+++ b/src/Tasks/AssemblyDependency/Node/OutOfProcRarNode.cs
@@ -15,7 +15,7 @@ namespace Microsoft.Build.Tasks.AssemblyDependency
     /// This manages the lifecycle of the multi-instance pipe server which executes RAR requests
     /// and does not invoke the task itself.
     /// </summary>
-    public class OutOfProcRarNode
+    public sealed class OutOfProcRarNode
     {
         private readonly ServerNodeHandshake _handshake = new(HandshakeOptions.None);
 
diff --git a/src/Tasks/AssemblyDependency/Node/OutOfProcRarNodeEndpoint.cs b/src/Tasks/AssemblyDependency/Node/OutOfProcRarNodeEndpoint.cs
index c7dd9c75bda..f9f71b3f1e2 100644
--- a/src/Tasks/AssemblyDependency/Node/OutOfProcRarNodeEndpoint.cs
+++ b/src/Tasks/AssemblyDependency/Node/OutOfProcRarNodeEndpoint.cs
@@ -13,7 +13,7 @@ namespace Microsoft.Build.Tasks.AssemblyDependency
     /// <summary>
     /// Implements a single instance of a pipe server which executes the ResolveAssemblyReference task.
     /// </summary>
-    internal class OutOfProcRarNodeEndpoint : IDisposable
+    internal sealed class OutOfProcRarNodeEndpoint : IDisposable
     {
         private readonly int _endpointId;
 
diff --git a/src/Tasks/AssemblyDependency/Node/RarNodeExecuteRequest.cs b/src/Tasks/AssemblyDependency/Node/RarNodeExecuteRequest.cs
index cf1a6aa9bd0..a129bd56748 100644
--- a/src/Tasks/AssemblyDependency/Node/RarNodeExecuteRequest.cs
+++ b/src/Tasks/AssemblyDependency/Node/RarNodeExecuteRequest.cs
@@ -5,7 +5,7 @@
 
 namespace Microsoft.Build.Tasks.AssemblyDependency
 {
-    internal class RarNodeExecuteRequest : INodePacket
+    internal sealed class RarNodeExecuteRequest : INodePacket
     {
         public NodePacketType Type => NodePacketType.RarNodeExecuteRequest;
 
diff --git a/src/Tasks/AssemblyDependency/Node/RarNodeExecuteResponse.cs b/src/Tasks/AssemblyDependency/Node/RarNodeExecuteResponse.cs
index c6a5cf9008a..9611897fc82 100644
--- a/src/Tasks/AssemblyDependency/Node/RarNodeExecuteResponse.cs
+++ b/src/Tasks/AssemblyDependency/Node/RarNodeExecuteResponse.cs
@@ -5,7 +5,7 @@
 
 namespace Microsoft.Build.Tasks.AssemblyDependency
 {
-    internal class RarNodeExecuteResponse : INodePacket
+    internal sealed class RarNodeExecuteResponse : INodePacket
     {
         public NodePacketType Type => NodePacketType.RarNodeExecuteResponse;
 
