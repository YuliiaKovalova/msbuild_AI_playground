diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
index cdbaa6fcc1b..2c49c17c8a7 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
@@ -653,12 +653,16 @@ private BuildEventArgs ReadProjectEvaluationFinishedEventArgs()
 
             if (_fileFormatVersion >= 12)
             {
-                if (_fileFormatVersion < BinaryLogger.ForwardCompatibilityMinimalVersion)
+                IEnumerable? globalProperties = null;
+                // In newer versions, we store the global properties always, as it handles
+                //  null and empty within WriteProperties already.
+                // This saves a single boolean, but mainly doesn't hide the difference between null and empty
+                //  during write->read roundtrip.
+                if (_fileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion ||
+                    ReadBoolean())
                 {
-                    // Throw away, but need to advance past it
-                    ReadBoolean();
+                    globalProperties = ReadStringDictionary();
                 }
-                IEnumerable? globalProperties = ReadStringDictionary();
 
                 var propertyList = ReadPropertyList();
                 var itemList = ReadProjectItems();
@@ -709,12 +713,12 @@ private BuildEventArgs ReadProjectStartedEventArgs()
 
             if (_fileFormatVersion > 6)
             {
-                if (_fileFormatVersion < BinaryLogger.ForwardCompatibilityMinimalVersion)
+                // See ReadProjectEvaluationFinishedEventArgs for details on why we always store global properties in newer version.
+                if (_fileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion ||
+                    ReadBoolean())
                 {
-                    // Throw away, but need to advance past it
-                    ReadBoolean();
+                    globalProperties = ReadStringDictionary();
                 }
-                globalProperties = ReadStringDictionary();
             }
 
             var propertyList = ReadPropertyList();
