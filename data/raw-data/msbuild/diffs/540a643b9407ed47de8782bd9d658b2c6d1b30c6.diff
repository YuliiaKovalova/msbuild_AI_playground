diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
index 25ac326c562..c1080c96c0a 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
@@ -334,7 +334,7 @@ bool StartNewNode(int nodeId)
 #endif
                     // Create the node process
                     INodeLauncher nodeLauncher = (INodeLauncher)_componentHost.GetComponent(BuildComponentType.NodeLauncher);
-                    var activity = OpenTelemetryManager.DefaultActivitySource.StartActivity("NodeLaunching");
+                    var activity = OpenTelemetryManager.DefaultActivitySource?.StartActivity("NodeLaunching");
                     Process msbuildProcess = nodeLauncher.Start(msbuildLocation, commandLineArgs, nodeId);
                     _processesToIgnore.TryAdd(GetProcessesToIgnoreKey(hostHandshake, msbuildProcess.Id), default);
 
diff --git a/src/Framework/Telemetry/OpenTelemetryManager.cs b/src/Framework/Telemetry/OpenTelemetryManager.cs
index dbb2a1d46d8..472fbd89580 100644
--- a/src/Framework/Telemetry/OpenTelemetryManager.cs
+++ b/src/Framework/Telemetry/OpenTelemetryManager.cs
@@ -104,19 +104,29 @@ private static bool ShouldInitialize()
                 return false;
             }
 
-            string? dotnetCliOptout = Environment.GetEnvironmentVariable(TelemetryConstants.DotnetOptOut);
-            if (dotnetCliOptout == "1" || dotnetCliOptout == "true")
+            string? dotnetCliTelemetryOptOut = Environment.GetEnvironmentVariable(TelemetryConstants.DotnetOptOut);
+            if (dotnetCliTelemetryOptOut == "1" || dotnetCliTelemetryOptOut == "true")
             {
                 return false;
             }
-
-            string? msbuildCliOptout = Environment.GetEnvironmentVariable(TelemetryConstants.MSBuildOptout);
-            if (msbuildCliOptout == "1" || msbuildCliOptout == "true")
+#if NETFRAMEWORK
+            string? telemetryMSBuildOptOut = Environment.GetEnvironmentVariable(TelemetryConstants.MSBuildFxOptout);
+            if (telemetryMSBuildOptOut == "1" || telemetryMSBuildOptOut == "true")
             {
                 return false;
             }
-
             return true;
+#else
+            string? telemetryOptIn = Environment.GetEnvironmentVariable(TelemetryConstants.MSBuildCoreOptin);
+            if (telemetryOptIn == "1" || telemetryOptIn == "true")
+            {
+                return true;
+            }
+            return false;   
+            
+
+#endif
+
         }
 
         public static void Shutdown()
diff --git a/src/Framework/Telemetry/TelemetryConstants.cs b/src/Framework/Telemetry/TelemetryConstants.cs
index 77911ed5dee..b76d2a93f1e 100644
--- a/src/Framework/Telemetry/TelemetryConstants.cs
+++ b/src/Framework/Telemetry/TelemetryConstants.cs
@@ -19,5 +19,7 @@ internal static class TelemetryConstants
     /// https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry
     /// </summary>
     public const string DotnetOptOut = "DOTNET_CLI_TELEMETRY_OPTOUT";
-    public const string MSBuildOptout = "MSBUILD_TELEMETRY_OPTOUT";
+    public const string MSBuildFxOptout = "MSBUILD_TELEMETRY_OPTOUT";
+    public const string MSBuildCoreOptin = "MSBUILD_TELEMETRY_OPTIN";
+
 }
