diff --git a/src/Build/BackEnd/Components/Logging/LoggingContext.cs b/src/Build/BackEnd/Components/Logging/LoggingContext.cs
index 77378a45aa6..f0572894854 100644
--- a/src/Build/BackEnd/Components/Logging/LoggingContext.cs
+++ b/src/Build/BackEnd/Components/Logging/LoggingContext.cs
@@ -211,22 +211,11 @@ internal void LogFatalError(Exception exception, BuildEventFileInfo file, string
         internal void LogWarning(string subcategoryResourceName, BuildEventFileInfo file, string messageResourceName, params object[] messageArgs)
         {
             ErrorUtilities.VerifyThrow(_isValid, "must be valid");
-            // PROBLEM WITH THIS CHUNK:
-            // LoggingContext has no idea if LoggingService actually interpreted the warning as an error, and logged it as so.
-            // It's a problem because TaskBuilder checks _THIS FILE'S _HASLOGGEDERRORS_ boolean to see if it logged errors.
-            // But loggingservice does not expose this info!
-
-            //doesn't work if the submission had already logged an error. unless we count the number of logged errors.
-
-            // Another problem is you need the warning code. Okay we can get that from resourceutilities.
-
-            // The fix: Have LoggingContext see if what we were about to log as an warning is actually an error.
-            // Prev code path: LogWarning -> _loggingService.LogWarning -> RouteBuildEvent -> LoggingService.RouteBuildEvent "Oh should we ACTUALLY log it as an error? -> Replace with error args.
-            // New code path: LogWarning "Oh are we actually going to log that as an error?" -> _loggingService.LogWarning -> LoggingService.RouteBuildEvent -> done.
 
+            // Log an error if the warning we were about to log is listed as a WarningAsError
+            // https://github.com/dotnet/msbuild/issues/5511
             string warningCode;
-            string helpKeyword;
-            string message = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(out warningCode, out helpKeyword, messageResourceName, messageArgs);
+            string message = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(out warningCode, out _, messageResourceName, messageArgs);
 
             if(_loggingService.WarningsAsErrors.Contains(warningCode))
             {
@@ -249,7 +238,9 @@ internal void LogWarningFromText(string subcategoryResourceName, string warningC
         {
             ErrorUtilities.VerifyThrow(_isValid, "must be valid");
 
-            if(_loggingService.WarningsAsErrors.Contains(warningCode))
+            // Log an error if the warning we were about to log is listed as a WarningAsError
+            // https://github.com/dotnet/msbuild/issues/5511
+            if (_loggingService.WarningsAsErrors.Contains(warningCode))
             {
                 LogErrorFromText(subcategoryResourceName, warningCode, helpKeyword, file, message);
             }
