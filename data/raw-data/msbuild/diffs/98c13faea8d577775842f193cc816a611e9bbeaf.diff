diff --git a/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs b/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs
index c975e5ac841..48aba457728 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs
@@ -21,13 +21,16 @@ internal sealed class CheckWrapper
     /// <summary>
     /// Maximum amount of messages that could be sent per check rule.
     /// </summary>
-    public const int MaxReportsNumberPerRule = 10;
+    public const int MaxReportsNumberPerRule = 20;
 
     /// <summary>
     /// Keeps track of number of reports sent per rule.
     /// </summary>
-    private Dictionary<string, int> _reportsCountPerRule = new();
+    private int _reportsCount = 0;
 
+    /// <summary>
+    /// Whether to limit number of reports for the Check.
+    /// </summary>
     private readonly bool _limitReportsNumber = !Traits.Instance.EscapeHatches.DoNotLimitBuildCheckResultsNumber;
 
     public CheckWrapper(Check check)
@@ -69,25 +72,20 @@ internal void ReportResult(BuildCheckResult result, ICheckContext checkContext,
     {
         if (_limitReportsNumber)
         {
-            if (!_reportsCountPerRule.TryGetValue(result.CheckRule.Id, out int currentCount))
-            {
-                currentCount = 0;
-            }
-
-            if (currentCount > MaxReportsNumberPerRule)
+            if (_reportsCount > MaxReportsNumberPerRule)
             {
                 return;
             }
 
-            _reportsCountPerRule[result.CheckRule.Id] = currentCount + 1;
-
-            if (currentCount == MaxReportsNumberPerRule)
+            if (_reportsCount == MaxReportsNumberPerRule)
             {
-                checkContext.DispatchAsCommentFromText(MessageImportance.Normal, $"The check '{Check.FriendlyName}' has exceeded the maximum number of results allowed for the rule '{result.CheckRule.Id}'. Any additional results will not be displayed.");
+                checkContext.DispatchAsCommentFromText(MessageImportance.Normal, $"The check '{Check.FriendlyName}' has exceeded the maximum number of results allowed. Any additional results will not be displayed.");
+                _reportsCount++;
                 return;
             }
         }
 
+        _reportsCount++;
         BuildEventArgs eventArgs = result.ToEventArgs(config.Severity);
         eventArgs.BuildEventContext = checkContext.BuildEventContext;
         checkContext.DispatchBuildEvent(eventArgs);
diff --git a/src/BuildCheck.UnitTests/EndToEndTests.cs b/src/BuildCheck.UnitTests/EndToEndTests.cs
index 07e37f4ca96..7549ff8c4e4 100644
--- a/src/BuildCheck.UnitTests/EndToEndTests.cs
+++ b/src/BuildCheck.UnitTests/EndToEndTests.cs
@@ -97,12 +97,12 @@ public void WarningsCountExceedsLimitTest(bool buildInOutOfProcessNode, bool lim
         {
             output.ShouldMatch(@"has exceeded the maximum number of results allowed for the rule");
             Regex.Matches(output, "BC0202: .* Property").Count.ShouldBe(2);
-            Regex.Matches(output, "BC0203: .* Property").Count.ShouldBe(20);
+            Regex.Matches(output, "BC0203: .* Property").Count.ShouldBe(38);
         }
         else
         {
             Regex.Matches(output, "BC0202: .* Property").Count.ShouldBe(2);
-            Regex.Matches(output, "BC0203: .* Property").Count.ShouldBe(22);
+            Regex.Matches(output, "BC0203: .* Property").Count.ShouldBe(42);
         }
     }
 
diff --git a/src/BuildCheck.UnitTests/TestAssets/SampleCheckIntegrationTest/PropsCheckTestWithLimit.csproj b/src/BuildCheck.UnitTests/TestAssets/SampleCheckIntegrationTest/PropsCheckTestWithLimit.csproj
index 28731ffb1a4..ecc625dde84 100644
--- a/src/BuildCheck.UnitTests/TestAssets/SampleCheckIntegrationTest/PropsCheckTestWithLimit.csproj
+++ b/src/BuildCheck.UnitTests/TestAssets/SampleCheckIntegrationTest/PropsCheckTestWithLimit.csproj
@@ -11,6 +11,16 @@
         <MyProp09>$(MyProp09)</MyProp09>
         <MyProp10>$(MyProp10)</MyProp10>
         <MyProp11>$(MyProp11)</MyProp11>
+        <MyProp12>$(MyProp12)</MyProp12>
+        <MyProp13>$(MyProp13)</MyProp13>
+        <MyProp14>$(MyProp14)</MyProp14>
+        <MyProp15>$(MyProp15)</MyProp15>
+        <MyProp16>$(MyProp16)</MyProp16>
+        <MyProp17>$(MyProp17)</MyProp17>
+        <MyProp18>$(MyProp18)</MyProp18>
+        <MyProp19>$(MyProp19)</MyProp19>
+        <MyProp20>$(MyProp20)</MyProp20>
+        <MyProp21>$(MyProp21)</MyProp21>
     </PropertyGroup>
 
     <Target Name="PrintEnvVar">
