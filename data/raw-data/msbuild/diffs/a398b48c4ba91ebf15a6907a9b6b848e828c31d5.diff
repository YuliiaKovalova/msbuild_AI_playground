diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 6e6725c439d..afdeb6b6336 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -113,6 +113,7 @@
     <Compile Include="..\Shared\ITranslatable.cs" />
     <Compile Include="..\Shared\ITranslator.cs" />
     <Compile Include="..\Shared\BinaryTranslator.cs" />
+    <Compile Include="..\Shared\BuildTransferredException.cs" />
     <Compile Include="..\Shared\LogMessagePacketBase.cs" />
     <Compile Include="..\Shared\NodePacketFactory.cs" />
     <Compile Include="..\Shared\NodeBuildComplete.cs" />
diff --git a/src/MSBuild/MSBuild.csproj b/src/MSBuild/MSBuild.csproj
index dfff888c132..31b289d909c 100644
--- a/src/MSBuild/MSBuild.csproj
+++ b/src/MSBuild/MSBuild.csproj
@@ -131,6 +131,7 @@
     <Compile Include="..\Shared\ITranslator.cs" />
     <Compile Include="..\Shared\TranslatorHelpers.cs" />
     <Compile Include="..\Shared\BinaryTranslator.cs" />
+    <Compile Include="..\Shared\BuildTransferredException.cs" />
     <Compile Include="..\Shared\CommunicationsUtilities.cs" />
     <Compile Include="..\Shared\InterningBinaryReader.cs" />
     <Compile Include="..\Shared\TaskHostConfiguration.cs" />
diff --git a/src/MSBuildTaskHost/MSBuildTaskHost.csproj b/src/MSBuildTaskHost/MSBuildTaskHost.csproj
index 0628e295bd9..1fc87a6a147 100644
--- a/src/MSBuildTaskHost/MSBuildTaskHost.csproj
+++ b/src/MSBuildTaskHost/MSBuildTaskHost.csproj
@@ -135,6 +135,9 @@
     <Compile Include="..\Shared\BinaryTranslator.cs">
       <Link>BinaryTranslator.cs</Link>
     </Compile>
+    <Compile Include="..\Shared\BuildTransferredException.cs">
+      <Link>BuildTransferredException.cs</Link>
+    </Compile>
     <Compile Include="..\Shared\NodeShutdown.cs">
       <Link>NodeShutdown.cs</Link>
     </Compile>
diff --git a/src/Shared/BinaryTranslator.cs b/src/Shared/BinaryTranslator.cs
index 055d34bb141..cb1d36e8f8b 100644
--- a/src/Shared/BinaryTranslator.cs
+++ b/src/Shared/BinaryTranslator.cs
@@ -477,7 +477,12 @@ public void TranslateDotNet<T>(ref T value)
 
             public void TranslateException(ref Exception value)
             {
-                TranslateDotNet<Exception>(ref value);
+                if (!TranslateNullable(value))
+                {
+                    return;
+                }
+
+                value = BuildTransferredException.ReadExceptionFromTranslator(this);
             }
 
 
@@ -1100,7 +1105,12 @@ public void TranslateDotNet<T>(ref T value)
 
             public void TranslateException(ref Exception value)
             {
-                TranslateDotNet<Exception>(ref value);
+                if (!TranslateNullable(value))
+                {
+                    return;
+                }
+
+                BuildTransferredException.WriteExceptionToTranslator(this, value);
             }
 
             /// <summary>
diff --git a/src/Shared/BuildTransferredException.cs b/src/Shared/BuildTransferredException.cs
new file mode 100644
index 00000000000..cbd88c23b2f
--- /dev/null
+++ b/src/Shared/BuildTransferredException.cs
@@ -0,0 +1,85 @@
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+using System.IO;
+
+namespace Microsoft.Build.BackEnd
+{
+    internal sealed class BuildTransferredException : Exception
+    {
+        private readonly string? _typeName;
+
+        public BuildTransferredException(
+            string? message,
+            Exception? inner,
+            string? typeName,
+            string deserializedStackTrace)
+            : base(message, inner)
+        {
+            _typeName = typeName;
+            StackTrace = deserializedStackTrace;
+        }
+
+        public override string? StackTrace { get; }
+
+        public override string ToString() => $"{_typeName ?? "Unknown"}->{base.ToString()}";
+
+        internal static Exception ReadExceptionFromTranslator(ITranslator translator)
+        {
+            BinaryReader reader = translator.Reader;
+            Exception? innerException = null;
+            if (reader.ReadBoolean())
+            {
+                innerException = ReadExceptionFromTranslator(translator);
+            }
+
+            string? message = ReadOptionalString(reader);
+            string? typeName = ReadOptionalString(reader);
+            string deserializedStackTrace = reader.ReadString();
+            BuildTransferredException exception = new(message, innerException, typeName, deserializedStackTrace)
+            {
+                Source = ReadOptionalString(reader),
+                HelpLink = ReadOptionalString(reader),
+                // HResult = reader.ReadInt32(),
+            };
+
+            return exception;
+        }
+
+        internal static void WriteExceptionToTranslator(ITranslator translator, Exception exception)
+        {
+            BinaryWriter writer = translator.Writer;
+            writer.Write(exception.InnerException != null);
+            if (exception.InnerException != null)
+            {
+                WriteExceptionToTranslator(translator, exception.InnerException);
+            }
+            WriteOptionalString(writer, exception.Message);
+            WriteOptionalString(writer, exception.GetType().FullName);
+            writer.Write(exception.StackTrace ?? string.Empty);
+            WriteOptionalString(writer, exception.Source);
+            WriteOptionalString(writer, exception.HelpLink);
+            // HResult is completely protected up till net4.5
+            // writer.Write(System.Runtime.InteropServices.Marshal.GetHRForException(exception));
+        }
+
+        private static string? ReadOptionalString(BinaryReader reader)
+        {
+            return reader.ReadByte() == 0 ? null : reader.ReadString();
+        }
+
+        private static void WriteOptionalString(BinaryWriter writer, string? value)
+        {
+            if (value == null)
+            {
+                writer.Write((byte)0);
+            }
+            else
+            {
+                writer.Write((byte)1);
+                writer.Write(value);
+            }
+        }
+    }
+}
diff --git a/src/Tasks/Microsoft.Build.Tasks.csproj b/src/Tasks/Microsoft.Build.Tasks.csproj
index c63833c89dd..079be509b84 100644
--- a/src/Tasks/Microsoft.Build.Tasks.csproj
+++ b/src/Tasks/Microsoft.Build.Tasks.csproj
@@ -33,6 +33,7 @@
     <Compile Include="..\Shared\ITranslatable.cs" />
     <Compile Include="..\Shared\ITranslator.cs" />
     <Compile Include="..\Shared\BinaryTranslator.cs" />
+    <Compile Include="..\Shared\BuildTransferredException.cs" />
     <Compile Include="..\Shared\InterningBinaryReader.cs" />
     <Compile Include="..\Shared\TranslatorHelpers.cs" />
   </ItemGroup>
