diff --git a/eng/CodeAnalysis.ruleset b/eng/CodeAnalysis.ruleset
index 2078c42fe6c..26b17d49a0e 100644
--- a/eng/CodeAnalysis.ruleset
+++ b/eng/CodeAnalysis.ruleset
@@ -119,7 +119,7 @@
     <Rule Id="CA2013" Action="Warning" />          <!-- Do not use ReferenceEquals with value types --> 
     <Rule Id="CA2014" Action="Warning" />          <!-- Do not use stackalloc in loops. --> 
     <Rule Id="CA2015" Action="Warning" />          <!-- Do not define finalizers for types derived from MemoryManager<T> --> 
-    <Rule Id="CA2016" Action="Info" />             <!-- Forward the 'CancellationToken' parameter to methods that take one --> 
+    <Rule Id="CA2016" Action="Warning" />          <!-- Forward the 'CancellationToken' parameter to methods that take one --> 
     <Rule Id="CA2100" Action="None" />             <!-- Review SQL queries for security vulnerabilities --> 
     <Rule Id="CA2101" Action="None" />             <!-- Specify marshaling for P/Invoke string arguments --> 
     <Rule Id="CA2109" Action="None" />             <!-- Review visible event handlers --> 
diff --git a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
index c994edab0ff..eb198cf2711 100644
--- a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
+++ b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
@@ -306,7 +306,7 @@ public override async Task<CacheResult> GetCacheResultAsync(
 
                 if (_projectQuerySleepTime is not null)
                 {
-                    await Task.Delay(_projectQuerySleepTime.Value);
+                    await Task.Delay(_projectQuerySleepTime.Value, cancellationToken);
                 }
 
                 QueryStartStops.Enqueue(queryId);
