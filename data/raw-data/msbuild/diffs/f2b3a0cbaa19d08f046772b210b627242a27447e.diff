diff --git a/src/Tasks/StateFileBase.cs b/src/Tasks/StateFileBase.cs
index cbeac2a38cf..093a6a48e60 100644
--- a/src/Tasks/StateFileBase.cs
+++ b/src/Tasks/StateFileBase.cs
@@ -91,7 +91,7 @@ internal static StateFileBase DeserializeCache(string stateFile, TaskLoggingHelp
 
                         if ((retVal != null) && (!requiredReturnType.IsInstanceOfType(retVal)))
                         {
-                            log.LogWarningWithCodeFromResources("General.CouldNotReadStateFile", stateFile,
+                            log.LogMessageFromResources("General.CouldNotReadStateFile", stateFile,
                                 log.FormatResourceString("General.IncompatibleStateFileType"));
                             retVal = null;
                         }
@@ -116,7 +116,7 @@ internal static StateFileBase DeserializeCache(string stateFile, TaskLoggingHelp
                 // any exception imaginable.  Catch them all here.
                 // Not being able to deserialize the cache is not an error, but we let the user know anyway.
                 // Don't want to hold up processing just because we couldn't read the file.
-                log.LogWarningWithCodeFromResources("General.CouldNotReadStateFile", stateFile, e.Message);
+                log.LogMessageFromResources("General.CouldNotReadStateFile", stateFile, e.Message);
             }
 
             return retVal;
diff --git a/src/Tasks/SystemState.cs b/src/Tasks/SystemState.cs
index b4f422959a2..3427db30ba6 100644
--- a/src/Tasks/SystemState.cs
+++ b/src/Tasks/SystemState.cs
@@ -309,7 +309,7 @@ internal static SystemState DeserializeCacheByTranslator(string stateFile, TaskL
                 // any exception imaginable.  Catch them all here.
                 // Not being able to deserialize the cache is not an error, but we let the user know anyway.
                 // Don't want to hold up processing just because we couldn't read the file.
-                log.LogWarningWithCodeFromResources("General.CouldNotReadStateFile", stateFile, e.Message);
+                log.LogMessageFromResources("General.CouldNotReadStateFile", stateFile, e.Message);
             }
 
             return null;
