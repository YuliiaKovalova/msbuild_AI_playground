diff --git a/src/Framework/NativeMethods.cs b/src/Framework/NativeMethods.cs
index 0e955ff01e3..8df49a7e054 100644
--- a/src/Framework/NativeMethods.cs
+++ b/src/Framework/NativeMethods.cs
@@ -658,12 +658,16 @@ private static LongPathsStatus IsLongPathsEnabledRegistry()
                 return LongPathsStatus.Enabled;
             }
             else
-            { 
+            {
                 return LongPathsStatus.Disabled;
             }
         }
     }
 
+    /// <summary>
+    /// Get from registry state of the Smart App Control (SAC) on the system.
+    /// </summary>
+    /// <returns>State of SAC</returns>
     internal static SAC_State GetSACState()
     {
         if (IsWindows)
@@ -688,9 +692,9 @@ private static SAC_State GetSACStateRegistry()
 
         using (RegistryKey policyKey = Registry.LocalMachine.OpenSubKey(WINDOWS_SAC_REGISTRY_KEY))
         {
-            object sacValue = policyKey?.GetValue(WINDOWS_SAC_VALUE_NAME, 0);
             if (policyKey != null)
             {
+                object sacValue = policyKey.GetValue(WINDOWS_SAC_VALUE_NAME, -1);
                 SACState = Convert.ToInt32(sacValue) switch
                 {
                     0 => SAC_State.Off,
@@ -700,6 +704,7 @@ private static SAC_State GetSACStateRegistry()
                 };
             }
         }
+
         return SACState;
     }
 
@@ -727,7 +732,7 @@ internal enum SAC_State
         /// <summary>
         /// Not on Windows.
         /// </summary>
-        NotApplicable 
+        NotApplicable
     }
 
     /// <summary>
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 218dc6bdf53..8411c5408ba 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1762,7 +1762,7 @@ private static bool PrintTargets(string projectFile, string toolsVersion, Dictio
             }
 
             NativeMethodsShared.SAC_State SAC_State = NativeMethodsShared.GetSACState();
-            if (SAC_State != NativeMethodsShared.SAC_State.NotApplicable || SAC_State != NativeMethodsShared.SAC_State.Missing)
+            if (SAC_State != NativeMethodsShared.SAC_State.NotApplicable && SAC_State != NativeMethodsShared.SAC_State.Missing)
             {
                 messages.Add(
                     new BuildManager.DeferredBuildMessage(
