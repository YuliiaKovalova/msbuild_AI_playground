diff --git a/src/Tasks/CodeTaskFactory.cs b/src/Tasks/CodeTaskFactory.cs
index c28ad2c55fa..d2d5345ef2f 100644
--- a/src/Tasks/CodeTaskFactory.cs
+++ b/src/Tasks/CodeTaskFactory.cs
@@ -642,12 +642,12 @@ private void AddReferenceAssemblyToReferenceList(List<string> referenceAssemblyL
                         {
                             if (!referenceAssembly.EndsWith(".dll", StringComparison.OrdinalIgnoreCase) || !referenceAssembly.EndsWith(".exe", StringComparison.OrdinalIgnoreCase))
                             {
-                                candidateAssemblyLocation = GetPathFromPartialAssemblyName(referenceAssembly, candidateAssemblyLocation);
+                                candidateAssemblyLocation = GetPathFromPartialAssemblyName(referenceAssembly);
                             }
                         }
                         else
                         {
-                            candidateAssemblyLocation = CacheAssemblyIdentityFromPath(referenceAssembly, candidateAssemblyLocation);
+                            candidateAssemblyLocation = CacheAssemblyIdentityFromPath(referenceAssembly);
                         }
                     }
                     catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))
@@ -666,8 +666,10 @@ private void AddReferenceAssemblyToReferenceList(List<string> referenceAssemblyL
                 }
             }
 
-            static string GetPathFromPartialAssemblyName(string partialName, string candidateAssemblyLocation)
+            static string GetPathFromPartialAssemblyName(string partialName)
             {
+                string candidateAssemblyLocation = null;
+
 #pragma warning disable 618, 612
                 // Unfortunately Assembly.Load is not an alternative to LoadWithPartialName, since
                 // Assembly.Load requires the full assembly name to be passed to it.
@@ -698,8 +700,10 @@ static string GetPathFromPartialAssemblyName(string partialName, string candidat
                 return candidateAssemblyLocation;
             }
 
-            string CacheAssemblyIdentityFromPath(string assemblyFile, string candidateAssemblyLocation)
+            string CacheAssemblyIdentityFromPath(string assemblyFile)
             {
+                string candidateAssemblyLocation = null;
+
                 try
                 {
                     Assembly candidateAssembly = Assembly.UnsafeLoadFrom(assemblyFile);
