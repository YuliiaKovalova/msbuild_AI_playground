diff --git a/src/Build.UnitTests/Instance/TaskItem_Tests.cs b/src/Build.UnitTests/Instance/TaskItem_Tests.cs
index a9e40170709..f1286310c85 100644
--- a/src/Build.UnitTests/Instance/TaskItem_Tests.cs
+++ b/src/Build.UnitTests/Instance/TaskItem_Tests.cs
@@ -190,7 +190,6 @@ public void Metadata()
 
             item.MetadataNames.Cast<string>().ShouldBeSetEquivalentTo(new[] { "a", "b" }.Concat(s_builtInMetadataNames));
             item.MetadataCount.ShouldBe(s_builtInMetadataNames.Length + 2);
-            item.CustomMetadataNames.Cast<string>().ShouldBeSetEquivalentTo(new[] { "a", "b" });
             item.DirectMetadataCount.ShouldBe(1);
 
             CopyOnWritePropertyDictionary<ProjectMetadataInstance> metadata = item.MetadataCollection;
diff --git a/src/Build/Instance/ProjectItemInstance.cs b/src/Build/Instance/ProjectItemInstance.cs
index f3452ad5972..f905867e247 100644
--- a/src/Build/Instance/ProjectItemInstance.cs
+++ b/src/Build/Instance/ProjectItemInstance.cs
@@ -928,7 +928,12 @@ public ICollection MetadataNames
             {
                 get
                 {
-                    List<string> names = new List<string>((List<string>)CustomMetadataNames);
+                    List<string> names = new List<string>();
+
+                    foreach (ProjectMetadataInstance metadatum in MetadataCollection)
+                    {
+                        names.Add(metadatum.Name);
+                    }
 
                     foreach (string name in FileUtilities.ItemSpecModifiers.All)
                     {
@@ -948,27 +953,6 @@ public int MetadataCount
                 get { return MetadataNames.Count; }
             }
 
-            /// <summary>
-            /// Gets the names of custom metadata on the item.
-            /// If there is none, returns an empty collection.
-            /// Does not include built-in metadata.
-            /// Computed, not necessarily fast.
-            /// </summary>
-            public ICollection CustomMetadataNames
-            {
-                get
-                {
-                    List<string> names = new List<string>();
-
-                    foreach (ProjectMetadataInstance metadatum in MetadataCollection)
-                    {
-                        names.Add(metadatum.Name);
-                    }
-
-                    return names;
-                }
-            }
-
             /// <summary>
             /// Gets the evaluated include for this item, unescaped.
             /// </summary>
