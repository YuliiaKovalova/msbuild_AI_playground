diff --git a/.vsts-dotnet-ci.yml b/.vsts-dotnet-ci.yml
index 48308d8d439..fa35d9e2828 100644
--- a/.vsts-dotnet-ci.yml
+++ b/.vsts-dotnet-ci.yml
@@ -88,6 +88,21 @@ jobs:
     inputs:
       filename: 'eng/cibuild_bootstrapped_msbuild.cmd'
       arguments: -onlyDocChanged $(onlyDocChanged)
+  - task: PowerShell@2
+    displayName: Process coverage reports
+    continueOnError: true
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
+      arguments: -repoRoot $(Build.SourcesDirectory) -deleteCoverageReportDir
+      pwsh: true
+  - task: PublishPipelineArtifact@1
+    displayName: Publish Code Coverage Results
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/merged.coverage'
+      artifact: 'WindowsFull_coverage'
+      publishLocation: 'pipeline'
   - task: PublishTestResults@2
     displayName: Publish .NET Framework Test Results
     inputs:
@@ -173,6 +188,21 @@ jobs:
       arguments: '-msbuildEngine dotnet -onlyDocChanged $(onlyDocChanged)'
     env:
       MSBUILDUSESERVER: "1"
+  - task: PowerShell@2
+    displayName: Process coverage reports
+    continueOnError: true
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
+      arguments: -repoRoot $(Build.SourcesDirectory) -deleteCoverageReportDir
+      pwsh: true
+  - task: PublishPipelineArtifact@1
+    displayName: Publish Code Coverage Results
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/merged.coverage'
+      artifact: 'WindowsCore_coverage'
+      publishLocation: 'pipeline'
   - task: PublishTestResults@2
     displayName: Publish .NET Framework Test Results
     inputs:
@@ -195,14 +225,6 @@ jobs:
       mergeTestResults: true
     continueOnError: true
     condition: eq(variables.onlyDocChanged, 0)
-  - task: PublishCodeCoverageResults@2
-    displayName: Publish Code Coverage
-    inputs:
-      summaryFileLocation: artifacts/TestResults/**/*.cobertura.xml
-      pathToSources: $(Build.SourcesDirectory)
-      failIfCoverageEmpty: true
-      continueOnError: true
-    condition: eq(variables.onlyDocChanged, 0)
   - task: PublishBuildArtifacts@1
     displayName: 'Publish Artifact: logs'
     inputs:
@@ -251,6 +273,21 @@ jobs:
       filename: 'eng/cibuild.cmd'
       arguments: '-configuration Release'
     condition: eq(variables.onlyDocChanged, 1)
+  - task: PowerShell@2
+    displayName: Process coverage reports
+    continueOnError: true
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
+      arguments: -repoRoot $(Build.SourcesDirectory) -deleteCoverageReportDir
+      pwsh: true
+  - task: PublishPipelineArtifact@1
+    displayName: Publish Code Coverage Results
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/merged.coverage'
+      artifact: 'WindowsRelease_coverage'
+      publishLocation: 'pipeline'
   - task: PublishTestResults@2
     displayName: Publish .NET Framework Test Results
     inputs:
@@ -273,14 +310,6 @@ jobs:
       mergeTestResults: true
     continueOnError: true
     condition: eq(variables.onlyDocChanged, 0)
-  - task: PublishCodeCoverageResults@2
-    displayName: Publish Code Coverage
-    inputs:
-      summaryFileLocation: artifacts/TestResults/**/*.cobertura.xml
-      pathToSources: $(Build.SourcesDirectory)
-      failIfCoverageEmpty: true
-      continueOnError: true
-    condition: eq(variables.onlyDocChanged, 0)
   - task: PublishBuildArtifacts@1
     displayName: 'Publish Artifact: logs'
     inputs:
@@ -316,6 +345,21 @@ jobs:
     displayName: CI Build
     env:
         MSBUILDUSESERVER: "1"
+  - task: PowerShell@2
+    displayName: Process coverage reports
+    continueOnError: true
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
+      arguments: -repoRoot $(Build.SourcesDirectory) -deleteCoverageReportDir
+      pwsh: true
+  - task: PublishPipelineArtifact@1
+    displayName: Publish Code Coverage Results
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/merged.coverage'
+      artifact: 'LinuxCore_coverage'
+      publishLocation: 'pipeline'
   - task: PublishTestResults@2
     displayName: Publish .NET Test Results
     inputs:
@@ -328,14 +372,6 @@ jobs:
       mergeTestResults: true
     continueOnError: true
     condition: eq(variables.onlyDocChanged, 0)
-  - task: PublishCodeCoverageResults@2
-    displayName: Publish Code Coverage
-    inputs:
-      summaryFileLocation: artifacts/TestResults/**/*.cobertura.xml
-      pathToSources: $(Build.SourcesDirectory)
-      failIfCoverageEmpty: true
-      continueOnError: true
-    condition: eq(variables.onlyDocChanged, 0)
   - task: PowerShell@2
     inputs:
       targetType: 'inline'
@@ -395,6 +431,21 @@ jobs:
     displayName: CI Build
     env:
         MSBUILDUSESERVER: "1"
+  - task: PowerShell@2
+    displayName: Process coverage reports
+    continueOnError: true
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
+      arguments: -repoRoot $(Build.SourcesDirectory) -deleteCoverageReportDir
+      pwsh: true
+  - task: PublishPipelineArtifact@1
+    displayName: Publish Code Coverage Results
+    condition: eq(variables.onlyDocChanged, 0)
+    inputs:
+      targetPath: '$(Build.SourcesDirectory)/artifacts/CoverageResults/merged.coverage'
+      artifact: 'MacCore_coverage'
+      publishLocation: 'pipeline'
   - task: PublishTestResults@2
     displayName: Publish .NET Test Results
     inputs:
@@ -407,14 +458,6 @@ jobs:
       mergeTestResults: true
     continueOnError: true
     condition: eq(variables.onlyDocChanged, 0)
-  - task: PublishCodeCoverageResults@2
-    displayName: Publish Code Coverage
-    inputs:
-      summaryFileLocation: artifacts/TestResults/**/*.cobertura.xml
-      pathToSources: $(Build.SourcesDirectory)
-      failIfCoverageEmpty: true
-      continueOnError: true
-    condition: eq(variables.onlyDocChanged, 0)
   - task: PowerShell@2
     inputs:
       targetType: 'inline'
@@ -454,4 +497,67 @@ jobs:
       PathtoPublish: '$(Build.ArtifactStagingDirectory)/Verify'
       ArtifactName: 'macOS Verify $(System.JobAttempt)'
 
+- job: CodeCoverage
+  displayName: "Code Coverage"
+  dependsOn:
+  - BootstrapMSBuildOnFullFrameworkWindows
+  - BootstrapMSBuildOnCoreWindows
+  - FullReleaseOnWindows
+  - CoreBootstrappedOnLinux
+  - CoreOnMac
+  pool:
+    vmImage: 'windows-2022'
+  steps:
+  - task: DownloadPipelineArtifact@2
+    inputs:
+      buildType: 'current'
+      artifactName: 'WindowsFull_coverage'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/WindowsFull'
+  - task: DownloadPipelineArtifact@2
+    inputs:
+      buildType: 'current'
+      artifactName: 'WindowsCore_coverage'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/WindowsCore'
+  - task: DownloadPipelineArtifact@2
+    inputs:
+      buildType: 'current'
+      artifactName: 'WindowsRelease_coverage'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/WindowsRelease'
+  - task: DownloadPipelineArtifact@2
+    inputs:
+      buildType: 'current'
+      artifactName: 'LinuxCore_coverage'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/LinuxCore'
+  - task: DownloadPipelineArtifact@2
+    inputs:
+      buildType: 'current'
+      artifactName: 'MacCore_coverage'
+      targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/MacCore'
+
+  - task: PowerShell@2
+    displayName: Process coverage reports
+    inputs:
+      filePath: $(Build.SourcesDirectory)\eng\process-coverage.ps1
+      arguments: -repoRoot $(Build.SourcesDirectory) -deleteCoverageReportDir
+      pwsh: true
+  - task: CopyFiles@2
+    displayName: Copy Files to $(Build.ArtifactStagingDirectory)\Artifacts
+    inputs:
+      SourceFolder: 'artifacts'
+      Contents: |
+        CoverageResults\**
+      TargetFolder: '$(Build.ArtifactStagingDirectory)\Artifacts'
+    condition: succeededOrFailed()
+  - task: PublishCodeCoverageResults@2
+    inputs:
+      summaryFileLocation: $(Build.SourcesDirectory)\artifacts\CoverageResults\merged.cobertura.xml
+      pathToSources: $(Build.SourcesDirectory)
+      failIfCoverageEmpty: true
+  - task: PublishBuildArtifacts@1
+    displayName: Publish Artifact $(Build.BuildNumber)
+    inputs:
+      PathtoPublish: '$(Build.ArtifactStagingDirectory)\Artifacts\'
+      ArtifactName: '$(Build.BuildNumber)'
+      publishLocation: Container
+    condition: succeededOrFailed()
 - template: /eng/common/templates/jobs/source-build.yml
diff --git a/eng/process-coverage.ps1 b/eng/process-coverage.ps1
new file mode 100644
index 00000000000..bc3a6a1dce9
--- /dev/null
+++ b/eng/process-coverage.ps1
@@ -0,0 +1,42 @@
+param (
+    $repoRoot = $null,
+    $verbosity = 'minimal',
+    [Switch]$deleteCoverageReportDir
+)
+
+. $PSScriptRoot\restore-toolset.ps1 -skipVcpkg
+
+try {
+  Set-Location $repoRoot
+
+  $coverageResultsDir = Join-Path $repoRoot "artifacts\CoverageResults"
+  $testResultsDir = Join-Path $repoRoot "artifacts\TestResults"
+  Remove-Item -Force -Recurse $coverageResultsDir -ErrorAction SilentlyContinue
+
+  $dotnetCoverageTool = Join-Path $repoRoot ".tools\dotnet-coverage\dotnet-coverage.exe"
+  $reportGeneratorTool = Join-Path $repoRoot ".tools\reportgenerator\reportgenerator.exe"
+  
+  $mergedCoverage = Join-Path $coverageResultsDir "merged.coverage"
+  $mergedCobertura = Join-Path $coverageResultsDir "merged.cobertura.xml"
+  $coverageReportZip = Join-Path $coverageResultsDir "coverage-report.zip"
+  $coverageReportDir = Join-Path $repoRoot "artifacts\CoverageResultsHtml"
+
+  if (!(Test-Path $coverageResultsDir -PathType Container)) {
+    New-Item -ItemType Directory -Force -Path $coverageResultsDir
+  }
+
+  & "$dotnetCoverageTool" merge -o $mergedCoverage $testResultsDir\**\*.coverage
+  & "$dotnetCoverageTool" merge -o $mergedCobertura -f cobertura $mergedCoverage
+  & "$reportGeneratorTool" -reports:$mergedCobertura -targetDir:$coverageReportDir -reporttypes:HtmlInline_AzurePipelines
+  Compress-Archive -Path $coverageReportDir\* -DestinationPath $coverageReportZip
+
+  if ($deleteCoverageReportDir)
+  {
+    Remove-Item -Force -Recurse $coverageReportDir -ErrorAction SilentlyContinue
+  }
+}
+catch {
+  Write-Host $_.ScriptStackTrace
+  Write-PipelineTelemetryError -Category 'Coverage' -Message $_
+  ExitWithExitCode 1
+}
\ No newline at end of file
diff --git a/eng/process-coverage.sh b/eng/process-coverage.sh
new file mode 100644
index 00000000000..0cb6b055673
--- /dev/null
+++ b/eng/process-coverage.sh
@@ -0,0 +1,57 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+repoRoot=''
+verbosity='minimal'
+
+while [[ $# > 0 ]]; do
+  opt="$(echo "$1" | tr "[:upper:]" "[:lower:]")"
+  case "$opt" in
+    --reporoot)
+      repoRoot=$2
+      shift
+      ;;
+    --verbosity)
+      verbosity=$2
+      shift
+      ;;
+    *)
+      echo "Invalid argument: $1"
+      usage
+      exit 1
+      ;;
+  esac
+
+  shift
+done
+
+eng_root="${repoRoot%%/}/eng"
+. "$eng_root/restore-toolset.sh"
+
+artifacts_dir="${repoRoot%%/}/artifacts"
+tools_dir="${repoRoot%%/}/.tools"
+
+cd $repoRoot
+
+coverageResultsDir="$artifacts_dir/CoverageResults"
+rm -rf $coverageResultsDir || true
+
+dotnetCoverageTool=$tools_dir/dotnet-coverage/dotnet-coverage
+reportGeneratorTool=$tools_dir/reportgenerator/reportgenerator
+
+mergedCoverage=$artifacts_dir/CoverageResults/merged.coverage
+mergedCobertura=$artifacts_dir/CoverageResults/merged.cobertura.xml
+coverageReportZip=$artifacts_dir/CoverageResults/coverage-report.zip
+coverageReportDir=$artifacts_dir/CoverageResults/coverage-report
+
+mkdir -p $coverageResultsDir
+
+$dotnetCoverageTool merge -o $mergedCoverage $artifacts_dir/TestResults/**/*.coverage
+$dotnetCoverageTool merge -o $mergedCobertura -f cobertura $mergedCoverage
+$reportGeneratorTool -reports:$mergedCobertura -targetDir:$coverageReportDir -reporttypes:HtmlInline
+
+cd $coverageReportDir
+zip -r $coverageReportZip *
+cd $repoRoot
+
+rm -rf $coverageReportDir || true
\ No newline at end of file
diff --git a/src/Directory.Build.targets b/src/Directory.Build.targets
index dc0f676a1b5..b8e32da022c 100644
--- a/src/Directory.Build.targets
+++ b/src/Directory.Build.targets
@@ -37,7 +37,7 @@
 
     <XunitOptions>$(XunitOptions)&amp;Traits=failing" /Diag:$(TargetName).log</XunitOptions>
     <!-- Enable code coverage -->
-    <XunitOptions>$(XunitOptions) --collect "Code Coverage;Format=Cobertura;CoverageFileName=$(TargetName).cobertura.xml" --test-adapter-path $(NuGetPackageRoot)microsoft.codecoverage/17.14.0/build/netstandard2.0</XunitOptions>
+    <XunitOptions>$(XunitOptions) --collect "Code Coverage;CoverageFileName=$(TargetDir)$(TargetName).coverage" --test-adapter-path $(NuGetPackageRoot)microsoft.codecoverage/17.14.0/build/netstandard2.0</XunitOptions>
 
     <TestRunnerAdditionalArguments>$(XunitOptions)</TestRunnerAdditionalArguments>
 
