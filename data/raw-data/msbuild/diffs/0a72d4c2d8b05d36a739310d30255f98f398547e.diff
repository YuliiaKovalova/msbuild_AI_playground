diff --git a/src/Tasks.UnitTests/Copy_Tests.cs b/src/Tasks.UnitTests/Copy_Tests.cs
index 291897cef47..da6f17e7189 100644
--- a/src/Tasks.UnitTests/Copy_Tests.cs
+++ b/src/Tasks.UnitTests/Copy_Tests.cs
@@ -2397,6 +2397,13 @@ public CopySymbolicLink_Tests(ITestOutputHelper testOutputHelper)
         [Fact]
         public void CopyToDestinationFolderWithSymbolicLinkCheck()
         {
+            if (NativeMethodsShared.IsWindows && osVersion.Major < 11 (osVersion.Major < 10 || osVersion.Build < 14972))
+            {
+                // Symlink creation depends on having a high enough OS version on windows unless you explicitly enable the setting for
+                // the current user or are running as admin. Skip this test.
+                return;
+            }
+
             string sourceFile = FileUtilities.GetTemporaryFile();
             string temp = Path.GetTempPath();
             string destFolder = Path.Combine(temp, "2A333ED756AF4dc392E728D0F864A398");
diff --git a/src/Tasks/NativeMethods.cs b/src/Tasks/NativeMethods.cs
index 8eac7bb22fc..0d789b07af4 100644
--- a/src/Tasks/NativeMethods.cs
+++ b/src/Tasks/NativeMethods.cs
@@ -517,7 +517,8 @@ internal struct PROCESS_INFORMATION
     internal enum SymbolicLink
     {
         File = 0,
-        Directory = 1
+        Directory = 1,
+        AllowUnprivilegedCreate = 2,
     }
 
     /// <summary>
@@ -837,7 +838,7 @@ internal static bool MakeSymbolicLink(string newFileName, string exitingFileName
                 SymbolicLink flags = SymbolicLink.File;
                 if (osVersion.Major >= 11 || (osVersion.Major == 10 && osVersion.Build >= 14972))
                 {
-                    flags |= (SymbolicLink)0x2;
+                    flags |= SymbolicLink.AllowUnprivilegedCreate;
                 }
 
                 symbolicLinkCreated = CreateSymbolicLink(newFileName, exitingFileName, flags);
