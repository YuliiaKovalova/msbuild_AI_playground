diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 9787ffe4a5c..60d332c2ac1 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -334,13 +334,13 @@ private enum BuildManagerState
             Idle,
 
             /// <summary>
-            /// This is the state the BuildManager is in after <see cref="BeginBuild(BuildParameters)"/> has been called but before <see cref="EndBuild"/> has been called.
-            /// <see cref="BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)"/>, <see cref="BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData)"/>, <see cref="BuildManager.PendBuildRequest(GraphBuildRequestData)"/>, <see cref="BuildManager.BuildRequest(GraphBuildRequestData)"/>, and <see cref="BuildManager.EndBuild"/> may be called in this state.
+            /// This is the state the BuildManager is in after <see cref="BeginBuild(BuildParameters)"/> has been called but before <see cref="EndBuild()"/> has been called.
+            /// <see cref="BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)"/>, <see cref="BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData)"/>, <see cref="BuildManager.PendBuildRequest(GraphBuildRequestData)"/>, <see cref="BuildManager.BuildRequest(GraphBuildRequestData)"/>, and <see cref="BuildManager.EndBuild()"/> may be called in this state.
             /// </summary>
             Building,
 
             /// <summary>
-            /// This is the state the BuildManager is in after <see cref="BuildManager.EndBuild"/> has been called but before all existing submissions have completed.
+            /// This is the state the BuildManager is in after <see cref="BuildManager.EndBuild()"/> has been called but before all existing submissions have completed.
             /// </summary>
             WaitingForBuildToComplete
         }
@@ -909,6 +909,18 @@ public BuildResult BuildRequest(BuildRequestData requestData)
         /// </remarks>
         /// <exception cref="InvalidOperationException">Thrown if there is no build in progress.</exception>
         public void EndBuild()
+        {
+            EndBuild(false);
+        }
+
+        /// <summary>
+        /// Signals that no more build requests are expected (or allowed) and the BuildManager may clean up.
+        /// </summary>
+        /// <remarks>
+        /// This call blocks until all currently pending requests are complete.
+        /// </remarks>
+        /// <exception cref="InvalidOperationException">Thrown if there is no build in progress.</exception>
+        public void EndBuild(bool skipLoggingBuildFinished)
         {
             lock (_syncLock)
             {
@@ -1018,7 +1030,10 @@ public void EndBuild()
                             _overallBuildSuccess = false;
                         }
 
-                        loggingService.LogBuildFinished(_overallBuildSuccess);
+                        if (!skipLoggingBuildFinished)
+                        {
+                            loggingService.LogBuildFinished(_overallBuildSuccess);
+                        }
 
                         if (_buildTelemetry != null)
                         {
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 657896d8dda..40cb24a097a 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1496,7 +1496,7 @@ internal static bool BuildProject(
                         }
                         finally
                         {
-                            buildManager.EndBuild();
+                            buildManager.EndBuild(saveProject);
                         }
                     }
                     catch (Exception ex)
