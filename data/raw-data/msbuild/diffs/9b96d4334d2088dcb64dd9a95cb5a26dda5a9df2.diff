diff --git a/src/Build.UnitTests/BackEnd/BinaryTranslator_Tests.cs b/src/Build.UnitTests/BackEnd/BinaryTranslator_Tests.cs
index efe377460a9..55834d7d650 100644
--- a/src/Build.UnitTests/BackEnd/BinaryTranslator_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/BinaryTranslator_Tests.cs
@@ -259,11 +259,11 @@ public static IEnumerable<object[]> GetBuildExceptionsAsTestData()
         public void TestSerializationOfBuildExceptions(Type exceptionType)
         {
             Exception e = (Exception)Activator.CreateInstance(
-            exceptionType, 
-            BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.CreateInstance | BindingFlags.Instance,
-            null, 
-            new object[] { "msg", new GenericBuildTransferredException() },
-            System.Globalization.CultureInfo.CurrentCulture);
+                exceptionType,
+                BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.CreateInstance | BindingFlags.Instance,
+                null,
+                new object[] { "msg", new GenericBuildTransferredException() },
+                System.Globalization.CultureInfo.CurrentCulture);
             Exception remote;
             try
             {
diff --git a/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs b/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
index 87ae8c9fc73..11d5207ec9b 100644
--- a/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TargetBuilder_Tests.cs
@@ -770,8 +770,8 @@ public void TestAfterTargetsEmpty()
 
             TargetBuilder builder = (TargetBuilder)_host.GetComponent(BuildComponentType.TargetBuilder);
             IConfigCache cache = (IConfigCache)_host.GetComponent(BuildComponentType.ConfigCache);
-            (string name, TargetBuiltReason reason)[] target = { ("Build", TargetBuiltReason.None) }
-; BuildRequestEntry entry = new BuildRequestEntry(CreateNewBuildRequest(1, target), cache[1]);
+            (string name, TargetBuiltReason reason)[] target = { ("Build", TargetBuiltReason.None) };
+            BuildRequestEntry entry = new BuildRequestEntry(CreateNewBuildRequest(1, target), cache[1]);
 
             BuildResult result = builder.BuildTargets(GetProjectLoggingContext(entry), entry, this, target, CreateStandardLookup(project), CancellationToken.None).Result;
             AssertTaskExecutionOrder(new string[] { "BuildTask" });
