diff --git a/src/Build/Logging/BinaryLogger/BinaryLogReplayEventSource.cs b/src/Build/Logging/BinaryLogger/BinaryLogReplayEventSource.cs
index cee55c5231d..bd9ec7d2888 100644
--- a/src/Build/Logging/BinaryLogger/BinaryLogReplayEventSource.cs
+++ b/src/Build/Logging/BinaryLogger/BinaryLogReplayEventSource.cs
@@ -147,7 +147,10 @@ public static BuildEventArgsReader OpenBuildEventsReader(
             bool allowForwardCompatibility = true)
         {
             int fileFormatVersion = binaryReader.ReadInt32();
-            int minimumReaderVersion = binaryReader.ReadInt32();
+            // Is this the new log format that contains the minimum reader version?
+            int minimumReaderVersion = fileFormatVersion >= BinaryLogger.ForwardCompatibilityMinimalVersion
+                ? binaryReader.ReadInt32()
+                : fileFormatVersion;
 
             // the log file is written using a newer version of file format
             // that we don't know how to read
@@ -321,7 +324,7 @@ event Action? IBuildEventArgsReaderNotifications.StringEncountered
         }
 
         private Action<BinaryLogRecordKind, Stream>? _rawLogRecordReceived;
-        /// <inheritdoc cref="IBuildEventArgsReaderNotifications.StringReadDone"/>
+        /// <inheritdoc cref="IRawLogEventsSource.RawLogRecordReceived"/>
         event Action<BinaryLogRecordKind, Stream>? IRawLogEventsSource.RawLogRecordReceived
         {
             add => _rawLogRecordReceived += value;
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
index b7fae9572c7..c3514bd62f5 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
@@ -1139,8 +1139,7 @@ private void Write(byte[] bytes)
 
         private void Write(Stream stream)
         {
-            Stream destinationStream = binaryWriter.BaseStream;
-            stream.CopyTo(destinationStream);
+            stream.CopyTo(binaryWriter.BaseStream);
         }
 
         private void Write(byte b)
