diff --git a/src/Shared/UnitTests/ObjectModelHelpers.cs b/src/Shared/UnitTests/ObjectModelHelpers.cs
index a66ac66f663..54ccee25eef 100644
--- a/src/Shared/UnitTests/ObjectModelHelpers.cs
+++ b/src/Shared/UnitTests/ObjectModelHelpers.cs
@@ -655,6 +655,14 @@ internal static Project CreateInMemoryProject(string xml, ILogger logger /* May
             return CreateInMemoryProject(new ProjectCollection(), xml, logger);
         }
 
+        /// <summary>
+        /// Creates a project in memory, passing a set of loggers to the evaluation.
+        /// </summary>
+        internal static Project CreateInMemoryProjectWithLoggers(string xml, params ILogger[] loggers)
+        {
+            return CreateInMemoryProjectWithLoggers(new ProjectCollection(), xml, toolsVersion: null, loggers);
+        }
+
         /// <summary>
         /// Create an in-memory project and attach it to the passed-in engine.
         /// </summary>
@@ -679,13 +687,31 @@ internal static Project CreateInMemoryProject
             ILogger logger /* May be null */,
             string toolsVersion /* may be null */
             )
+            => CreateInMemoryProjectWithLoggers(projectCollection, xml, toolsVersion, logger);
+
+        /// <summary>
+        /// Create an in-memory project and attach it to the passed-in engine.
+        /// </summary>
+        /// <param name="toolsVersion">May be null</param>
+        internal static Project CreateInMemoryProjectWithLoggers
+            (
+            ProjectCollection projectCollection,
+            string xml,
+            string toolsVersion,
+            params ILogger[] loggers
+            )
         {
             XmlReaderSettings readerSettings = new XmlReaderSettings {DtdProcessing = DtdProcessing.Ignore};
 
+            if (loggers != null && loggers.Length > 0)
+            {
+                projectCollection.RegisterLoggers(loggers);
+            }
+
             Project project = new Project
                 (
                 XmlReader.Create(new StringReader(CleanupFileContents(xml)), readerSettings),
-                null,
+                globalProperties: null,
                 toolsVersion,
                 projectCollection
                 );
@@ -694,11 +720,6 @@ string toolsVersion /* may be null */
             project.FullPath = Path.Combine(TempProjectDir, "Temporary" + guid.ToString("N") + ".csproj");
             project.ReevaluateIfNecessary();
 
-            if (logger != null)
-            {
-                project.ProjectCollection.RegisterLogger(logger);
-            }
-
             return project;
         }
 
@@ -725,7 +746,7 @@ internal static void BuildProjectExpectSuccess
             params ILogger[] loggers
             )
         {
-            Project project = CreateInMemoryProject(projectContents, logger: null); // logger is null so we take care of loggers ourselves
+            Project project = CreateInMemoryProjectWithLoggers(projectContents, loggers);
             project.Build(loggers).ShouldBeTrue();
         }
 
