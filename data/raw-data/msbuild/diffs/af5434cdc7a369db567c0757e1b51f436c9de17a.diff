diff --git a/.vsts-dotnet.yml b/.vsts-dotnet.yml
index 1444313d595..bf994785873 100644
--- a/.vsts-dotnet.yml
+++ b/.vsts-dotnet.yml
@@ -34,7 +34,7 @@ variables:
     - name: SourceBranch
       value: ''
   - name: EnableReleaseOneLocBuild
-    value: true # Enable loc for vs17.13
+    value: true # Enable loc for vs17.14
   - name: Codeql.Enabled
     value: true
 
diff --git a/branding/MSBuild-Icon.png b/branding/MSBuild-Icon.png
index d769a8aa1d4..59bbbd8c00f 100644
Binary files a/branding/MSBuild-Icon.png and b/branding/MSBuild-Icon.png differ
diff --git a/branding/MSBuild-Logo.ai b/branding/MSBuild-Logo.ai
new file mode 100644
index 00000000000..0bf57689519
--- /dev/null
+++ b/branding/MSBuild-Logo.ai
@@ -0,0 +1,352 @@
+%PDF-1.6%����
+1 0 obj<</Metadata 2 0 R/OCProperties<</D<</ON[18 0 R]/Order 19 0 R/RBGroups[]>>/OCGs[18 0 R]>>/Pages 3 0 R/Type/Catalog>>endobj2 0 obj<</Length 16609/Subtype/XML/Type/Metadata>>stream
+<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
+<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c002 79.a6a6396, 2024/03/12-07:48:23        ">
+   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
+      <rdf:Description rdf:about=""
+            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
+            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
+            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
+            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
+            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
+            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
+            xmlns:dc="http://purl.org/dc/elements/1.1/"
+            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
+            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
+         <xmp:CreatorTool>Adobe Illustrator 28.7 (Windows)</xmp:CreatorTool>
+         <xmp:CreateDate>2024-12-02T06:56:21-07:00</xmp:CreateDate>
+         <xmp:ModifyDate>2024-12-02T06:56:22-08:00</xmp:ModifyDate>
+         <xmp:MetadataDate>2024-12-02T06:56:22-08:00</xmp:MetadataDate>
+         <xmp:Thumbnails>
+            <rdf:Alt>
+               <rdf:li rdf:parseType="Resource">
+                  <xmpGImg:width>232</xmpGImg:width>
+                  <xmpGImg:height>256</xmpGImg:height>
+                  <xmpGImg:format>JPEG</xmpGImg:format>
+                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqsmnhgTnK4RfE/wwiJPJUlu9fkYlbZeC/wA7bn6B0zJhgHVKXSXVxKaySM3sSafdlwiB&#xA;yVZXJKrRXl1Ef3crL7VqPuO2QMAeippaa7uFuVp/xYv8RlEsHcqaxyJIgdGDKehGUEUhdgV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtMyqCzEBR1J2GKpTe6/ElUtR6jfzn7I+Xj&#xA;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&#xA;XYq7FXYq7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
+               </rdf:li>
+            </rdf:Alt>
+         </xmp:Thumbnails>
+         <xmpTPg:NPages>1</xmpTPg:NPages>
+         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
+         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
+         <xmpTPg:MaxPageSize rdf:parseType="Resource">
+            <stDim:w>256.000000</stDim:w>
+            <stDim:h>256.000000</stDim:h>
+            <stDim:unit>Pixels</stDim:unit>
+         </xmpTPg:MaxPageSize>
+         <xmpTPg:PlateNames>
+            <rdf:Seq>
+               <rdf:li>Cyan</rdf:li>
+               <rdf:li>Magenta</rdf:li>
+               <rdf:li>Black</rdf:li>
+            </rdf:Seq>
+         </xmpTPg:PlateNames>
+         <xmpTPg:SwatchGroups>
+            <rdf:Seq>
+               <rdf:li rdf:parseType="Resource">
+                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
+                  <xmpG:groupType>0</xmpG:groupType>
+               </rdf:li>
+            </rdf:Seq>
+         </xmpTPg:SwatchGroups>
+         <illustrator:Type>Document</illustrator:Type>
+         <illustrator:CreatorSubTool>AIRobin</illustrator:CreatorSubTool>
+         <dc:format>application/pdf</dc:format>
+         <dc:title>
+            <rdf:Alt>
+               <rdf:li xml:lang="x-default">MSBuild</rdf:li>
+            </rdf:Alt>
+         </dc:title>
+         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
+         <xmpMM:DocumentID>uuid:2cd3e4c4-d910-43cb-aab9-0d6a971b2feb</xmpMM:DocumentID>
+         <xmpMM:InstanceID>uuid:c5a17121-3dda-42af-9dfb-fa7c0f1b1279</xmpMM:InstanceID>
+         <pdf:Producer>Adobe PDF library 17.00</pdf:Producer>
+      </rdf:Description>
+   </rdf:RDF>
+</x:xmpmeta>
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                           
+<?xpacket end="w"?>
+endstreamendobj3 0 obj<</Count 1/Kids[5 0 R]/Type/Pages>>endobj5 0 obj<</ArtBox[21.3386 9.813 234.672 246.2]/BleedBox[0.0 0.0 256.0 256.0]/Contents 20 0 R/CropBox[0.0 0.0 256.0 256.0]/LastModified(D:20241202065621-07'00')/MediaBox[0.0 0.0 256.0 256.0]/Parent 3 0 R/Resources<</ExtGState<</GS0 21 0 R>>/Properties<</MC0 18 0 R>>/Shading<</Sh0 22 0 R/Sh1 23 0 R/Sh2 24 0 R>>>>/Thumb 25 0 R/TrimBox[0.0 0.0 256.0 256.0]/Type/Page/PieceInfo<</Illustrator 8 0 R>>>>endobj20 0 obj<</Filter/FlateDecode/Length 1256>>stream
+H�tWˎ9��W���uM6�S�r�܍���Y`����R��Nc�.�D�Q$5/�/ߧ���a{�R����¯��l����֐����z��u{��s
+_loAB�G���� �D�������&9�h�ǆ���Ɯ�/Ec�)�T]Т&�1�أ�Z>���ԗ+������$6�'�J	w�h���5��É�$ڔ�(�U�H$������.(Тz�=V��QZ��h��]m#Z�'�c7W�K�j,��]:4�\���(�{�G�E�Z���4�|_ �~.�Gr5tS�����#����t�oHD�GK�;#�cS�ɹ�c�J'�
+8��Ez�i�bf;w7��I� Tug�Z:ytݾm�n��y�T���I���K`�)Q��{P2Y`!N����P=�c� X������{�k�H��z·�����ɢ�8��l�Y�b��@����0e��$�m��
+�#���J�!!q^����PA6Ea�TdB��Lc�r�ݣ ���q�@DqJ�@K�Y=-kZ4�C�X3�,��%� 炟��ƹ�]��%�n�*��u`����ngt��~��
+���z/�1� ŉ�p��l8h��	N^����4�RoI����zNa4���7��4��=�ݗ���[
+?��_��;�R�j(��X'ȋyC��(I
+��"�C%J�m�&��g��.��T(C�@z�D�S@�?G�9�?��9	�)�)���~"��W�s����J�̹�"Bݸ�)�p`�id����n8�%��L�k�d��B���u���b�������x���E#x(����Y��,,��YZ�N��%R�/j��&�o��ƚ��&d�ݭ���!���~wk �Q(��tg�d4;(D���>Zsꝝ^�Ҁ�j:��#��V����>J� U�D���vT6�d.@z����4�>�g����ǡ�[����G���[xLq0��/f�����7-�	XT�g\a�Ӆ�L(aÀ@��G�9
+�ڜ̳&(���2D���S.��
+�m�|p ��BQ�"̂���čl�6�%���^V=�z�e�<�`��`8F�����}�D^'L���_���vE{��)�.�N����1�)�k�#���F�9�Wg��(`���:/�����o��?
+n�`�g�p��p��S�L}g|ϞZ��>l6F&��I2ϒ1�p~�>�2l{��Q�>�_�O��   ��   �� 	`{
+endstreamendobj25 0 obj<</BitsPerComponent 8/ColorSpace 26 0 R/Filter[/ASCII85Decode/FlateDecode]/Height 32/Length 364/Width 32>>stream
+8;WRp4gK_`&;6*#&KIZBoIcR`G?GS>$k_*:o>;8uDXclT_Q):-H5<m=J#o13<V"IN
+;=XWh^2hh0lc-5GR&aRcFr(KFYhmCJ<Rd[O4WsIh=*:JkcjJBT)d<@Fi;B>2cbOUJ
+A=h7i6q$u>:?Qnl5W^M..=\X,&*kDq#T_=f%ssfj,>:5Cs+-[@`QiNRR=0rKJHe:m
+h(05\:-iQ_^[p9jr.0&fr'M^D-WOil51;:2DlJ-T4WSe<'Zlpj+V&nRH).!VC]W$g
+kA0)YXF0TO4!!_f)p`_gNO>]bm00dp^@Mf^r0CYPJnB=XLRB7Jk8.O=olsM_8bse3
+HW_PWr`+APIfKHKs8N'!!<<'$!.+*D3<~>
+endstreamendobj8 0 obj<</LastModified(D:20241202065621-07'00')/Private 9 0 R>>endobj9 0 obj<</AIMetaData 10 0 R/AIPrivateData1 11 0 R/ContainerVersion 12/CreatorVersion 28/RoundtripStreamType 2/RoundtripVersion 24>>endobj10 0 obj<</Length 1341>>stream
+%!PS-Adobe-3.0 
+%%Creator: Adobe Illustrator(R) 24.0
+%%AI8_CreatorVersion: 28.7.3
+%%For: (David Hose) ()
+%%Title: (MSBuild.svg)
+%%CreationDate: 12/2/2024 6:56 AM
+%%Canvassize: 16383
+%%BoundingBox: 21 9 235 247
+%%HiResBoundingBox: 21.3386001586914 9.81300354003906 234.671997070313 246.200010299683
+%%DocumentProcessColors: Cyan Magenta Black
+%AI5_FileFormat 14.0
+%AI12_BuildNumber: 164
+%AI3_ColorUsage: Color
+%AI7_ImageSettings: 0
+%%RGBProcessColor: 0 0 0 ([Registration])
+%AI3_Cropmarks: 0 0 256 256
+%AI3_TemplateBox: 127.5 128.5 127.5 128.5
+%AI3_TileBox: -169.599999427795 -259.600036621094 425.600036621094 515.599999427795
+%AI3_DocumentPreview: None
+%AI5_ArtSize: 14400 14400
+%AI5_RulerUnits: 6
+%AI24_LargeCanvasScale: 1
+%AI9_ColorModel: 1
+%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
+%AI5_TargetResolution: 800
+%AI5_NumLayers: 1
+%AI17_Begin_Content_if_version_gt:24 4
+%AI10_OpenToVie: -884 713 1 0 0 0 2031 1153 18 0 0 208 179 0 0 0 1 1 0 1 1 0 1
+%AI17_Alternate_Content
+%AI9_OpenToView: -884 713 1 2031 1153 18 0 0 208 179 0 0 0 1 1 0 1 1 0 1
+%AI17_End_Versioned_Content
+%AI5_OpenViewLayers: 7
+%AI17_Begin_Content_if_version_gt:24 4
+%AI17_Alternate_Content
+%AI17_End_Versioned_Content
+%%PageOrigin:120 120
+%AI7_GridSettings: 1 2 1 2 0 0 1 0 0 1 0.5 0.5
+%AI9_Flatten: 1
+%AI12_CMSettings: 00.MS
+%%EndComments
+
+endstreamendobj11 0 obj<</Length 32762>>stream
+%AI24_ZStandard_Data(�/� XD$J�&�Dh��1�"�2�\�1�u��������S�%��L"  �    	�	�	!JvoVU2��Ce�~��z�B�+� �㟂�K��U7v���rkws9Y-�g����ې,�0�3�Jwn����>�6R��ʆe7T�s�� ��ƿù��8,�x�ò[��M��Χu�w��π�8~z����u{˗O����;�<÷�n�rʿ]h�Ƹm8s���o�V���q��P���(�}%���U�W^K��m�t�e��aY ��������+�%3����iX���i]�X�i<{5���i4�5 ��-h\�h��4�e���`��I1�|�R��8�!�0�N���&9z\G34Cr�'���q,sEZ�XV���-��a�C�-���	w�rS_EX`D������=w}v,�Q,�2,��w�=����eXV�f�eŲR}�E?zҗ���G}�U�z�s����$�4�DA,KA\�dA�Ї`�b8�dX�fx�h��j��l��.zCQG�K�OSQW���G?b8��8�#9��9�#:��:�#;r���ɐI�I�,I�<I�LI�\I��e/����LU]UV�k_�
+����:��Z��z�蚮꺮����zdC�-Y�=Y�MY�]Y�UQ5QQ�({��y��x��?����i������Z��YbY��/y���h�k�U0�M��Xv�!�{g�UŲ�,M4��M�I�Ųn�a�e����e��b�I� �S,3�r$E�C,�+��iO��Oҏ>���+��=\�z�!;���eW5�2�<��4O�,ϒ<�s<���g?�ɚ�j�fj�&j��Y��9��)������nr��lɖk��%Z��Y�%Y��X�eX��/W,I�q�)�XF�!�e��jO{��~v��c;���{Ｓ|�)G��Mn�|�"y�A�y�a�uS����=Yz%X������	r���H�#X�e���y�������°����h�#Y����������q��Uы]�f��{�C\��I��}�#+��J�hʢIM�DOESTEU�v���/K��)r2��CӋ /�r,A,�1�ݓ�Yv3��A��H�b8���K2�&�=��d9�`I�G��őEy�S��i��阒i��)��h��j��kʦ\�jW�
+��*��:��Z��z�������)��'h�%H�#(� �A�~���z֯~��G��Mo�ҏ^���{��}�j���^yUQ,�Q���F���P���Cs;�E��},=���{�l��a�-q�]�6� /�����I��aI���\��V�\I?��ؽ)z|�ei� �{ٽ9��w��d�d��-qZ��+��#Y�'��+�	�eX��X�eY��Y�eZ��Z�%7��M���$��H�4��4M�4Q35Us5W�5��O�'x��x�'y�gy��y�gz��z�'{r���(�����(��h��(�2.�a�e��%/YR%S%O�$Kr$E2$=�I~��H�#?E'XV�$�e"� �Iv\�tD�s,Gr�pG?��U1Q�K�G1C�Ȇk��i��gX�d8�c(�a�eX��e/�y�kX�Pi�o��Zh�[���֭�j �=b��� ϏQ�]�����5����vW�_3ݚ��/�V�W�S��݈�/���a7S��o�vc6 X%�(��h�q��©@{ � g�W�q�_8��t�1�f��ri�	 ߨO��ߠ<(xE��
+�c7]h��zW��o�}z� yU�	�Q���mu���Bc�����߯۾�3���]����G[ٯ�V���4�-��V=�~�Aîg���
+u� x4������&�������|�_s�ʰ�oJ%��d���z#�"���G5�s��8,�o��Zs��+�a�G�q�IK^����l���q�k^�/\�%�w���a\|���H >�_z� �߮\�;>Kd�&ٵ���k�ػ�A�5vR��A>�?�J�k��ܪR�R
+.���9-ɰ�%����fZ/��~ų�;�W��$v7f����k��(�W�n�zb߰���p���>K�g��|������ݏ#�9=S�M4I҇�i���cİ�d�&z���vc��?��Q�6�v[�\3��U����m;�V��}�W��K�� _�ڠ�]����z�|��]��V=�?�ْx99,c����[�*W���T���ϩm�\on��^�YM���9��z� '9i������M��P9{�Z�ͱ;�c	���;��㰌�&�^3��5��U��+�f�ǮA~ �m�dWsj���s���w�oW�g��
+`{o�P�f�A~|���2�Bc|{�h/�U��Y��2�#��ky����J���8,�^�5FgQϷ[��+�/�����u�qX�q|�����f����*ạ�!U�i8�e#��"m��󉗋����-�!�^9)���,��C���dٟJ��Ѥ{�(����8y;�ۖ��/�$2���>�=)�+P�R�>,/��T��`DY~0ZOg��/�!�	P8�i2���:�5�O�q�Z��wFȝ��I�.��a�?/����K��/�dᏁN1x|���>�j��a��	�����~\S��t"FX�vf � ��'E�^�e+�����r�fH��ĭ��9,�O��{��{�|#���x�D��2@�ɧ�òH��~Z��k����b����N�$u����/���Q/I	��.����%]���������p;Af�|���f��}!��@c'��e͘�v�i<�.ݘ,\��L��>�#s����jA�6�˚t�ga��*+�5[���6��m���3w�=�>��Ƀ0�����*��sX�.PJ޲Q�|=�svr"����2�d4��B��+M⤣`L�C�A�pN)��-�-'G>�,�e��L�W�5؁����?#�@��	�J`-�aA�k�D��Y2�63z��ޒcsؖ��a�cCxK���P�fYX96ׇV|ڃ?7�J�y�Na�R�|�K�:�����j;iҚ<�H:�4��C#�D�^Q:���褉�򟋀�L^9P�|������v��t}���2�KV�U���B�CXu���R�{��4\��W`�곽��f� "I��h������]PԂ�	%y���I�h�e�G�t����^��*�86��m^���V�ʱ��M�5鶎�{l��VcG�yG ������F2:-�/�l7
+�O�:�e����"�fV�S�<�g�H��$N����̚��`,�sR�$^>1PB�*N:u�x�B�}�;�(i'�Ψ����z�O�hXv���/gĥ��r	�j�(y��<��9�~�iC�ކ<��yڐ����|��6�oyfQ��Y��Y�̎&��4����p������$W'�4/�n�ִ��(�?�� �yE�q�{kT�߹���L�1�Ƿ�i:�m��f��Q_�`��iS���z�ܺ�}�>ͩ����T{���+ ���b�eף�/�q�w��R�ߧy�Fy��Z���ri������@�f?��uW�g����r�Fy���U}y%�z��س����<���l�cϦ�5M�? \�ڀ��~N}5����j����(�˷���m��R�-�������F����n9��4��T��5
+>y6��P�+�e�������B�^���8�}L׋��{�o�Z(���K�-ࣶ!��yR�M򌰪�)�r�1Z�N��h�eǱ{�p������*٭�ʥ�Ӽ�3�;��v����[>G���|���ͳY��o�ͤ꿉� x���,�p�J���f�� �Տi��_����7�nZ����}Nɗ�r7�v_ٽ=5�����u����� �{��eՓ�e���l85k�~i�+�*���|�lW[�^���c�v��5pc��dX�a��ܘ��[{����<��5�ɰ���<k���k�m�y���]�v��)Mv5�pmM�+ 4[{����_�ڷ�골�.
+��C�op�.��\8M����p����h���Z}���_�mgծF�;���Կ��m5�?�y�c�3�����p
+���^^yN�8R?���Y�5a�U� ��ٚkv�[�� �n;
+��<����^�fy�̧�{�ő�U�vOs�:��ô��d��ߵĪ��/�����	>��"U�f  ��ws4�.@�*GS$G���F��'w R6 )۽]��t˵!  ���_��~j��Y�������\�v�o�Pޖ㖀�]�J��Xt�v_���۔�;ˇ��:��}�7�g���Y�[J�;d4�O���s�����h�h�fZ/�������l�*�~�,�,�^����5�y9���p����_��-�����ӟT�/}��Z�v���U���ӽ��F��7�W�/��f4M�=~�`[�?�Қy9;�|�N�r.����^�A8v=�~�xFʹ=�3����y��>�N#��Q��4F�:g�Q?�-�z����A��@��"O�����O���Eo�o�Χ�>틇��3��aծf��6�^��V�Z�c�5�4�Q�$y�2,�N��������U�p}{>��H�L���v*�����_ӭ9��g��mk_���5�8�)��R�Y���E���S?S��h�߶��ܻ�i�w�`u�Ef�v;�-������C���e���`�~��ۿ�=9��9����|�3����=x���ݚ������w�g��=^��Ǯ߲��?���r���Z���aXj��e��+_��P.] ��8�#���
+�y �g��U��Q.+s$J����S��9��=��i=��;$<	ϫb�p�}���[�����*.���D�0]1�) ����D�6�S@�{r[,��t����?�ʞ�5���$
+o�|�%
+߾$
+_�Z�F�������O��*����
+�ߪ��焪بjb������3�ți;f�P}�zga���m�����#�$��Gܐ��>}^���it�P���}j']� K�ă���S�@d�0�;��.R"
+�@�"ŽK�R���MIkO��y�Fgٟ���Y��s��pG�P��?@��n� ��@(���8�p��^�N��@L+� @��2L�� @L���t�-!���,0V+;�_V�����;�/(�r�Nv�K"�[T%�=)Y\"�w���{r�&w�������c4�V�uU����
+kcBZ{����z��12�����0�A"��D���v\�q(����B�38&&o#*�(�qX6���ᥠE�pAoI�$
+�zHJ$�uiIq���Er�\$����nOE�3�79݀��U%�*i�i�R�#��QK�B��#�m~�cٟ��?�s/]8/W����%�s���-<"�d�ik�nځq���*8� }�@p��
+�a��ycN�t<Dt
+�����/��[]Pl���'�Şܲ��t��[T&o�]�����~��Ig!�uɪK_�v%Qx�y����]t
+Zs҂$
+O���˟��u�U��"4"*���PT�lt��Z�Q�UR����Ŷ'�lt��pM,%�6�&��,�t!)�j[��H��c�]aٖ	+��"=�RB�?;bB�!lK�8���Y��o1E���ΐ6Wp ��{5���g��C�C�5(�B�Jr�q#0���F��4����;�p���JdA�ʽnz�"F��_j>�,��,�����cKY�nۼ%��b ,��[rl��c�̠�:�hl�G��2$��虉|~=�<��9��9/i؁���T(��g�0�SqZ!��q�4u	��KS�KS��2�KW"t$z�D�W�B"QH��=�c]j�R;�, )�aٍ Q�$����5��\cp��1��k蠋ԺH���N��9,�Z����;\�=jC���ò����֞�)�p)R�w,�sI7�>/r6:�e���� ˞C�d�P;�C �9�!���H?���#j�	��=���5�����~�ڴ�֦�xD����S{F;����8�2@��n�!Q���(� �q 
+xo ��2 ��t
+��a�j'�e"@�'D1-N�!01�)��� AL˻,���"���b�F��岠��Y`��������C��_]��/x�'w�-�֜pXV��+�P�aY'3A�c`]P:��%B;�4�,�� B�kr;$%r)R�����y�j8���(��da��/N��dy����m���E��K�+� xi��n�@�+���¡�(��U���IǺ�i�q4t�O��?��%�>51�N:�v�X��BkN:�_}	,km�I�&������N��i���1�t	��}�&�j�(��z�sXF��I��̉M�U�p �ζy%6��t��q��?��q�_}hz6��qp�d�q뤵֮"��D�\�d�PkNX*��L:��$�?�1|Nl&�#w&G9z�hǍ_�_F)db�Q�`sX�,6�`�˶�R�^��lK׎P�Kl�G^%�ާ$��4��ؑ�.{� ��Fe$Ԏ�#�����8H�&)0؇ģ��P�,^ܔ�&@z����<8pZ�Ѻ��'>��� }�tO)�V�A?,7�/k�G�0nbt�VD@�a6���K��y$T�F�t
+�0�@P�����3�j�V��茓D ��#��H���w@�w�h��&
+��$�i;��a�+�=ʏ����?��M;K�H,����l�\5]�Wb\�M�@fͷiU8�@~�AK��AҴ ��$|@7D����p3�̀epb��4:��a�ʟ���g�u`��QFU/��'Ȧ[E�X��W��c�[�PC�
+=0�-��a��xy�x�]&���U2/XJ��*�L�0RNI���0�#�9���p�Q������vx�|ՐM�#�W�7���=���ܒ�l�w�x�&ʈ��A욱	|��`)��3���a���@(
+\� ������fx�.$�ZeG���(
+��v�S�
+5�e��-�c�=�DT ۲s
+%�	��3�(�4 �rXvе�P�R��ؖ��AZ��Z'X���l��x��ˁ���@��������\�%�%2�����ÉΤ�8,[�@S-I��"Z\I���S�YK�ò
+I��6-�C,�w'��+�7Tт���� ��T���)H�!iA�&���,�$�dp'�w�H�?M
+!%����@��!>����P�8&n��a��S��=*ߓ��:d6�e�H���@\D@1A$Up�D(%�i�<���ǀ�N��9,��� Bc��g ԥ��%�δ�
+�� =5e���<6��ll�+�Fࡺm�Pݶ��nCXX9��.	�����~@
+������^`s���F�As'@�k��LVm��6���E$R|��[rl`3����\@����V%m�d&Hɬ�@b������9|@���»[�6B�pX��-V�`v��ZcB��MNL���@*ş�����V�t�|�X��mfŪ �3���T��N�uX��@���h�cc�(�²!�w(���(Ū�*��+�	���U����[��48K�(1�r�?߼�8,{x�Z�Z�u��C��B�.U�|��a�2��(�|ح�W����SZ����O��\M?����$��.S>M7���/�����K��a�&��$���	z.��	�m��O��J���g#��Vb9,SX }NR�C���I�x;�$>-��<�O W���vE�GGX�[�	a�Ӆ�χ��<�Zq�m��Ćq�U�F���﨎�j��F�s�XY��^Pv�s�����Ri>�wU���G��=�e��WC�z��2�9,{�8,�G���e��U<!�@�@����_%�AVO�����a��Z�o��/�P�_(	ϷX�*[Ă���9[H����%V��f.�.��G�a�'�8,S�)�8���aY�ғ�òK�q�isl��fl�Ʊ����&���
+!�!`l��qX��]�M�h�6͙Q���1IX����nX�:ߡ��:Mr*���?>���I7�6�+463n'��ё`�GЪ��aY	erד����H��
+�e'Y�JkS�SK+R��(�<�9u�e���&��=T��8�c��0cSx��́6[��pl�Ʊ�T��&ݖQ|�ͳ��G�;6�Cu[�Cu#����m������Q�]oI:��S�zm _�������%@�B⤣Di�sX�L�M,�oqT�a�� =�$+Xh�҇Qt�a��t�V��B��Qm�+.�"T�,�z���9J\>���$��s����\+��@l����=���2��L���	�M*��!���lܗ�P8�b�)�^9,�ПT��4ZN���R9hv����,uV8�8	F��깇��[2Y��?8DG.�i�v�u
++o�|7��[� Ri9�?z��2�Ł��i	=T�aOh'��e��8��E2�)(�s��!q}Qo�H��2���q�^Q�F	4�[��T���Ču�����"T1}.��ZM�Z�?02WHkG<�nq0Y��s���G����@�s�$m��T�@��D(�ł���T:ȁQb�������&���iE����k���ذ��Xem�uQ��tU:���&R�	w�5�<����J��ӄ�[ރ�S���X\$�e���9Y��#�A�s��n�����#�G�M;3��z$N�ZU$lv��TD�~Ό���<X%vU0���s�؋d T�!����&����F��?Z(l-�E�Cu衎���0	��A��D<�����D��*����?�uN@&-ge-���$@H��?&O�dQR�$|(؂p����|�/�YQPp��E�~�@�S^爷�r� ���ఱ?�E&��Ƈ�32�
+�ӂT9�&T��� ��F��6V�my�/MR�gjE��GzM8����Ht�r�v|˶���qB@���i�2�T	:z���'��}��~�����������A�='��Tu���\�}	p�=.��f��D�|��oQ��Q�0C��cR <ӫVen���.��0"+���`�+�Zy�E�#�8�ԃ�F��Þ[ǅ*+�䔰��=Po˪îX�D�W���u��i��+o1�˃�*����pX��y#N��#8�����'�� �����O	3�p��� �L��c��aZφC�H�؈�DcS$�*)��R`y���u}w�	Ra/�ҫ��UGf�]k]ל���"��o�S�)��/0�8�8���ÀsX��(�x|�O�l��7A���~\�U�V��.�09-��3�U� �!�����g��F��@g�&��\�x�ʢ���FWl���m�����y�~b�w&u}���3���|Z�	�w�X�Pќ.�ku�-ʪpb[�eos?F{�	�_�q��,��3}^j````�����@COuCO�H��3�u�!%X��|>����_��/|�n� ́PL��hഈBk�p��m%B;����F��� !m���r��0(^�
+��LZ�͢�'�
+'a�)��$�W��	Ȯ;���LeG�Q!�mi�}
+��-��D��Ķ�,�Q�#��J��&�&|�vdG��rX֖�ɋTw5[� ;Ҟ���#|���CP26��aوh�Qx
+},�C��-�P��2�ò��]�`sXF7*��v��UsFa�@Y0V"�*��"�����[�Ā2.p��J��+�zD~�� eU$��6>���/�O?�� y���L�����F#��v/M�<��.�"N�(|*. �pI�<Qg�)N��QK�B�4u)R��)�C�
+�B�ĕU�&C��̌ @�  ��f����?.(NBL.0$,$�F��8 ��aRF��S�Av� W�9T����9m���4v3�H��h-r�v[7 �����-����k%�Q�1�K�%;�̀6g�!*�K"1���JO�̄
+/sm��1g�s��Fb�>Fg�^�20tE.�B5�>G�5��P.�[3�4�dճ������I$����s:##i]�L��� ��l�P��#߃���������V%q6�fs��������^�i������_g��.A�ĕB��[�H��/���P�Բ�xe�Z	V�t�*�+h:�j�5#��%o18q5X|i��8��,>5�YXqE�g��
+ǉg��9P1�֩����wq�t�tM���EѼ�Ή+�`^��)����ȬkI��t�K��7�WM)�j7�����eq�
+top����0=����D���J�w�����-#�@4��-l�x�$v��PE��%Oꥏ�.脸�������yK�ٟNb2Þ�����X/3r����ޅ�Z �����3�#ɛg`�G�q��z�3��
+&�Q�*����g@���Ωo� X,qP3���C����*�c����j�ѩ�k�^���p�Z�	q�{.�k��u��;�J�EPFjB��$��"JΫ ���$LT*V���U�*�ߥ����6�>Ak�$]NB��#�B�p�$���u��[c9��������\�@s����p\��ڦtW�Ee��Mw d/2�z����d7'�۽[�n-��@����'Ӄ^�P�e�D�	�t ��Ж]�PS>u��(/�ŷ��l�^q��-�,����A�/�0.益�[��גiI>ݰ/8����*mJ�$
+Z�QC�0�6%��.tl��QTLi�
+�"�A����p����^e6~�M� �5no�/9���cɛ�����\�n��i��
+F�I���62=�ia:�W/s�ݰ��dl��H�ҥ�ⴲ%q�������e�OR`<�lD����c�g�i= �ʍU%���z�K&��@
+folS�7d�����%�^���h�PC�&�HS�h^<$䷧����M;y�U�5%g�W��m,З6�)3�:v��t�*v�฼�?��<͑/�v���~,[�����o��ƹ=\�Z�d�I�npkȊ����M?yCc��*�M��y�>��޳yc�h��Έ�[��{��W�/*��b[S����{�GŌR�з��_��P�3*���o��{]R�%��Ի�&�vTl�S��Hq4i�F݉L�#��C���F�n��4j�	��[����ӄP�"�`\a�pp	�	N�p��P������RI��m:L�=�/}�Uh�P��o}Ͽ%�IJGEW�V�,��k��m�N���Z��-���"��!bD8��,z?k�Y�!�=��G�o�ڂUd�H���*rέ��ܕ��R��l��ω�n���
+%�b}�
+�݊�|��ZC�j�*{NÆ��C�/��NOU��<���.`�f�"�K=�M�pN��:�k��wA�,�@oRb�<�W��x ��S���+X�۩	X��/�&]Q�?'tk�%��E��,R����Y�q�q�eo��ۍ�����Ν�6Z�\��*`�u;�cG��#[UJ��ck�`� [�(5�&R��z1��ōuF�s�pݞ�@�|EܭNӘ��8���	"eXhZ�H���Eu�XT�	h���d=U�Re��_�H�7 @5{Z076UH,2�����T���tm��d#����JW1�.~�OC�&���e����ٺ��>���lFO��ӒLB�"&6�xV�W�X~��Lu�z���,�[��yf�h���W-s#7�}�E����bG8x;�ʝg&�ɺ��fv�r*	�z��U��OD�Y��X�F���_�@��/e��22��O�72;�,og��6z��'R˧�"{U�h,P6��ȗ�P-**Aֵ��Z��c ֶK��1�Y�T��r���>
+����x�{�J��?Ju:OmUУA(�����v�h`JW�������(�,�_��Wf.i|�]���(������k��������߮��8@�@	La_9q �l�U ����0d��^N���.�X��T��������� �U7����h�p��K�(�P��Ġ�)ap�'��
+o������)xC̀ qM�H�;��N ����XA�>�mDъjj��G�7�.�)	�A8�8��^���a��W�GV�0j����_���7��� $�NP}�8��#��2�$ޖ��n����.&�p��~"G�:�s�rM��-�����r���p�z�b+�~�8���>N[hxb���b6�j�,�$�&�k:�n�x���TYB0�.dx�<�HZ1��-�^�L
+4�����<�=���?{�.$���X����ᰕI������m>�3��]]�2ض���/ӎ��6����%��I�%[�8w��3��k�B�v1W��ds`+��qƏ�ޯN�i�O6��9!w�.�a���șx�1���[�a�_w�
+��׭Fؙ����++��+r�`���N`�C^"0k����a�K0,��01�&w�s�`��2����q��k]�a�+��-���IJ��y�D���k��a�XRO����[i5W�]�m��աՊ�Z!�S1�
+�?C�_�C>����j����s�0�%�բ��0䕆�y�+�3@܆��-�V?y@��_9Oc��C�V7���Z���� �c���nJ��H�a��V����g[]4�b'`��:M0�Lpp���F��b�7%
+����Œ}���xe�X�N�fWp�����ҏ�*h)�Iq����5��8�S�Wx��?�W�W��-"�q���@>l���QHE�>x���y�QZ�<gi��'��L�@O�o�7��;"E��M��k}�7`���N��|�]椢�r���i��� ^�P�� /V`$֒<�4��\d����H�<��mg.>%���tƺ�Hg]NK��	#�.�N`@���L�(_�r�Z!�⪹hR��r�q'�"cҼ����u���9���e���#C�AA p�N<���N��e�Ǔ�P't�'�5U.?ɾ.�c�f��K�b|��I�͙g&|��E+���ȧ�}y�/�.�Et` �͊.�����tۿ-v�tŗ� �6�Z��a �ʏ��H����&��U�5:�X[��l ��>uv]�[l�9�C���~m-���b��#��f;���t���?����a sJV%��+��rRbmC�Tl�@8������R�+lc����}Jܜ�M�n�CQp$>�w�A�ر�Ԙ� ��a��Ν��w�t6e�A��s�۰}3�傝v�8��g�����]];W7ƙ�Q��'F�Xim�����1TP�W��[T5���:��dR�H0����q�|��9�ً�=g�� m4�H��o��{��j��'+�x��=CL+���i�'����ਗ਼��k���GpPH3�E�<T4u�
+��9Z��.VJ7�@,<v�0�&k�%��;>�L��rM�"�$�L�0~�ڟ�e7�jqc�g^�G���!u�/�퉌�]#a�~,n�-G�m���)�sY���#�K.�����ߢh뾗|sz/�Z�D�T)$�,ͅ��ㅕ�t��Q5����y�\K���"%��߂
+�=B	�2�2�@�޷M#�0�BG��0]��3JZ��u������t��ɿ�p>r��x���i�v�+Pn��D���T��E�?�;�Gb0�u�r|����@��c"�i������wbkL�xr��k�0H��w�GA`���A��&��fh:�9�<�T��L�X�������%���:v�|�� c�u��قgg�l�-Oօ�}�<���rZͣh�ߊz�)���h ��|��/�P���������9a�Ղ������7G)~4<�έlP���6�!�:5�IM!G��a�O 5 T�X�[���]]�.P�UJ�ڑ�8�Cc���X��[���:A-�-����w���r���kH��3�ȄxM�TUz��W�ͨ´'|rWen�A�vq�υ��q�C>|����i��N��5�� GE�\ɆeO�����)��u�h��M}�2�7qf�_�JW$��H��9�< �~��D;�ջ�-�p2�&�ı,%j�V��f�Y�Y+N,�o�d�I7�Y����_X%@�7֫�l��Z��q��ذ��3�V��"P�zĬ@�V����@U2�vy��@!����x��
+&�WſSe�q��zG�hzk%��G�#q�ţS�K�����S���͓a��N�GXw)%&C4���E ��)��M9��%HNS�o(&�\G�Z��\l�k���O��<Bb�xT�c���F�U];����deAC}�[��Z��Z��U$){6|�nD��1I:�Zi����G��*ƪܚ�hQVx9tg/G�0�$�@&-�9I =�q�)�7�%.��#�L�� vP$\z@᫻R��]����rb&����.���F�d���{���"5[��o��a]�C`o���>'�^�b2+p���
+��c����H�i��ɕ_Y��׊]������-l���K�ZJ��w��:�p��=��u�ҖB;|o;�	nΔD�'{g˥�3��+F�N3Ǻ������[0ose�k�>��P>�`����`/��mX��`��R�J�l��:^0]vH��`���݂E���ϣ��`8/دB�J,�+�e'%'��uο0�؂����0�^V��`(��k�BB\����d�?��a5���Ĵ��l0�=߃ K��C���JW��layx��aWpGϿ9BI7���f���D]fm���EO��y*Zq̓�dN�\��/�E)0�ϵl�S����N���!�r��ك��;�e7t�#�W݁�f }�Ϡu[v�<���p^�.m���"a/�H]&��O���@�-9:�A@�U���H�l�s�p��h?��H{�M4mR���u����5&��M�'�;h��YĤ��^J��Wi��?�*4�k���j����Ji��#ljL��}��,�`�S
+�h����	���v%X �t���-[��vu��?\i�ù��{y-VR7v��@5��Aw�u���3��f�g�,�a~�YL���=�a�xҶ�20PL�rS�|/�g<��k�}��;c0���\%�RZP�{�/ϻ���/b����;I5��f�I��Z���G�;�x�l�,���v�BOxr2�y�8H�������ڇ`%�*�N���f�l �nLKCc��T������Ϣs9ˀ{{\��P� C�Io�&�o�����d[�����{��5�I��!�X9�H�Ԣ/�P/�3a�������\%@6	~>��J���/=���#�#i���P�*�z䤴|���?�9�+�������Z�=���z,�A����y�����/�}*�Y4j�j���lAn���M�Z�G���å�X�Y��%��K1�p�gR �I�>��4��"���Ĥ�eu?�l�=hزs���#MFd�¢	�W��\�`��B74�F����JD���#l�^��ih(��K�t�|mѱ1 ��b���|�Bx�6�{M
+ͭ���]A+��W�@@��s00�mx�K�x��KI&v�W��{����5���T
+�����v���)hт���rD�W���B,a�~���-B�TPGt��'3?���8�sY�MBWU'���+��R��OYl~��"�X����	Z`��G������TB#�F�oB�K���s�q�w���(�-c^�c>;��4#(��Gv��Z5c��Ox�X��4Q�E(�b���Ѻ���Y�����a!�S�D��F}K�������r.�$����ٸ�������NS���_�Kͽ�k'�k��(�&ہ�n��`DS{>�N[�PL�t=���U�DFPƝg����m�P��g2����0I��G\��"�u�
+q
+*V��f]�-V�#��|8��me_�q�٥[�Y2	�����Nw_�r�F��$P�$W�iY�P�����&���	���&��r���7m	MP��'L)s.!''��%�&-J���p��I��D�����l���f��h�nI�L��	,��7��9!%rmQ�VL�7��Lv��y�/����-���4d��`�(�Q�1l��oIg�g�c��g^�3�8�PZ�ĺ�`t_�0�y�8��>?�
+%^4�O��q<�D������I1>�'M̫�M�>1��qW��<��9޾NE8�0�F\���]�����;�ѣ���X�F�B���߾�_sm����Qɠ���������%��R�ij�6pӘZ�B
+�%��r���hL�����ES�%W����B����R?�1+����i~�l�j��\�����CO�F] ���x��	[I�׎icqaJ�\�T���3`q	S��y@�p@ ��u�.�8��\�^xnƴs�I��g�
+'r�$��E�n��"�^�F�E�O���0�Y��^Lt4�Y����t�PG��Ef���}�)-)���Aŷ���~m�D%�� �^���jR{yG��!� �쀹!��aG��(�z�#�����AdNP�e�N�\۴Ý8٘>��@;/����l�Ž�E�S����R��C�&�-']{R#DK�sw�����7�A��ΰ�%��,H�Z�E~����gi�M<UW�n�l��?������;��䔂�Fډٓ�Q��E7 Z��&7B&�ɢ�m,�]�pH�]�BH�~p�,���G��*.�ޝJ ��ʀ��b��ꑿ^.y;�[L��I��{��
+�]y����2
+*����~�?t �@������'��\n�:�iF��dP3H��'�#b*2�wI|����j�tq
+��U{�D�03�b�<b��[�	<���Wtg-bU"���-m�&��?U�9�2=�P�u�|�)���i���Y������!�)qef��`��k���0�L?B�Lcq/u�L�_ֆZQ�(�1L��c��i�$�1��i�f�XЊ񠔬�Z���)�A"�˶� C��Y�R���S^��L��y5OC�l�"��Wsʖ��CZݙ(ʠӯm)c�-
+.t��:�x�ݯ����c�h�X.p�Cf�@H��p��0�A�_�X��G�~�9���d��O(��S�����D���1�*K��b�opu25�\}e���z�4_�M~<������8׉B��g<��^��EY���V�	�Ld��w6贝D�xѨ�� ���1��jƤ�N����=҂WXf�˓/ڴ.WO��"��N�޲�E�qJ�.E���3��g��I2l@�/Z����Ր�:��m�;۵2����L�#�9/��q��w��$M�h)6^t�*7�����8�E�%d2z�+`��Fa}߆�p�Ew��|���C��N!^�,~#O2���Ec� e4V*����h5��H�~�y����c�.���Xb�����>�
+h=L!T��3�;����O���5΢]7*�"���stB�A>v��g�(�EK��fm�u���p���2Zӟό����9��Ffgm�DZ#w�v�	�*8�{�xU~d�����)rp���� �ѕwf��Ep�z���T��A�*L���?wP?�~���Yl��SXU���q��_{V�$0��A���	hN�6FKr>�B�C͗��k�B�[�M~�%;��sOU=g:1^�Ɲ3�xv�؛�qpW)4�y���9}lLu���2�K���/�h�tg��w���^�ה��?y�X����I���Ç0����6vM쑩h�8�A��r1��ɰ��+	Gm�+��;:�E��b�f�q{�E�m(��4]W&�G7����[K����R=�����,(�~�=����xT�d�]�U$G
+˞
+����%BRv�7s�k7(MCfm�L��O�h��'(�d(��>4Z�Kfύf��%W�TZ����_B*�Y���d����F;�=����ޓ���\��Mi�3�h��vר>Đ1�ot�� =߄U���i��z��һ�W sL���'��bOϿ`������[3Yg5%_��������V��B�h���#͘&��wI���� 7��8��Q+$����s5K�rs4Am���x֧�g��
+�9��ad���G*�fm>�29v~5�1��s4W��a�b�5S��~M/em:Y#� �9���%����זv�X+-P�M���\�������� ����B��֫�˞���5�������@r?�n� �.���\��m�w ��ԵE�Fu܄�{N�Sۗ�����lV���1�-Ԝ95��;���:���j���e��9������+S�U(��3��;�Y�&��M�Ů�X��㸪MFP<:*f	$.�Ppآ.V����ܟ�gP>�&H�W���
+���	@^0J���y��$�E8A��!#�V6��Ր�O@#͒�~)qB�"`T�@@����2�D�SjH��K^L�H|e�[�Y�����$D��@�z\T}l��6~��TX�	";�[��J}j��(t��?���V�<G�أ����f� R�:� ���i�=MU:�hE��pB�`�m��3�zu)�Y��I��=���B0v8�v�wJf�g8`��G=�Y���x�C	9C�!է�m�"y�$�b>�@�*
+���~�͡��!�2?��+�޾������|�_�q73��C�K7"s��Z��}3�7X�a�w�d��0Բk6��S�3p�U�(��4]	��^78/\ڄ�{>���o.w^A2����*�0���g.����1��O�^Z�QK��ɏz�/Ѣ$^C_�L�ǰ���ȃG�O�j��Ol����D��~��^��\�^E�<&�H��৲WRO8�Y��@���4�[��(���aLw�F����U�)��K�FY�[1`���B�$��@�P5պsN��{��J���Ƴ�v**�%]K�`��z7�Y��m��Ň躁�;%Q�=Ϊ��.�R�c� ,��	�wî� �ͩ�������9��<Yo��Y��yC�/��;���<��h�t�%�)�R+ݍ���$A�.���Q.Tk�;��C��>�$�~r-�f�낁�sN9������� f�`% �7?��6�����y'�zJ���,"掀,��m	�w ���2G��鸡�Z�B?��� rC�i�"�4_t���/BS�z���C
+���ew��2܌p��r�lY���hq�i����O!j�N�֐��0��� Q��6Ϩ���wRO��np
+��H/ڜy91�_^A:fI^�ϳ�V���O��� �v�-����m�;4��
+�i��p[}l��l�����[M�4T=��Plz���hj��x���#W�����²{�����*0���kTB��>�'6\Wd�0/P��4�ȠM����2{�W6Q�҉F�kO�a���(dPe�ㄡ�~d]��cJ�D��_n~C�|Oh���,$�L�qCi�I�o��*\������
+V= ��>*%�AFEԗ�\ '�\�?�S�k�%�>�7Yu+J�kg�+9����C�tлeF �1A[HELN��	Ϭ/��۱�t�bTL��e֙*�v���T�ki�ԅ����<79��|��sV�^i���;H#� �b>c:F�Ϯ�^�_��8�a��z���7�}�5R����%� �J�R	����	(n���@8+͜�,�T��wf�BsA8,&?��,��o�J��*�5\x�ߙ�~ f$G7��_Ւ�]�B9�(lqh�UeCznI��H��!�|[��:B3I��0�f>\��u��J
+:8r�3Dz�}�?�+g�`'b������Qz��>�VaDH�v�����-h�R%L��U|�	o ����
+�����&���O��� �99J��u �X/����ዕm��y��҉��F�x)�;a�\�<� �V��*��5��7��ښ�Ag�l��{�x�,P����j�j��L]�(��w�K�m�wIF5!��9|z�܇�[$򆶁@�O��K��AS�"�k
+��ȥV%C��a��N W�*��< &�h��(��$��`���B�B!�ҁ�B����N�������jY�j9���iϮ3:��#~ښ��:�����v�@t��,T�B���<�R��J5d�z�y��$�dQI`"s ���ƽ�
+m�ܓ��׳��䈢(12yD�	?d��$������3��(��ːyp��n �",��x�d��%� ��Cb$O�l�FV�P)D�ظͦF!�T;#'BL�s0�]���qV0$O�M�>�H�\���O�]������v�Cb�@��q%�;k��)ww"����p��1F���=�[�GU�q]%2��4��"�oY��
+`�R��l֕'x��H��X�
+��h�K�(�P��M�	�\r����U�,�^��;3ա����XQ��c�k�8._�>	&b��ϣ$�d�M����$�X�C���,�i�3_h��P��zi#�NIk�S�t��ӆ� ������^J�T�
+JH�C���8�=
+���H�l����0�Iz[�|d���������7�Q�u ��H�����m�|E[T�� �+h
+�&�"!�!z��'@ދ{E�.�i��4���䟥	�I�)�AU�FΌf
+�@R�O{���Yo�F}`�d�Yf>�u�]u�g�#��ȌJw�R��t��Iϊϰ���zŲ�(Ù�����M��k��D�o6�v{�r�9�$jA���*�"ձ�+��'[!�ua�^��k'�m��2�[s-����1�v����Q.)�|T��׀�b��N�CQ���j���w��a�c󔦷���Ӿ?rg������ek��Y�WήeC����m��]��J���|��y��! b4Π}�������X^y�y�?�ɟ/ʑ`�0`>����5�8��B�/
+��!���M~�m�~K/�.H�1�h`y��?�9���V�z�N�P�=J���TY2�/�p^��g�<�OG`�
+G[Կ�^��u�.�V���79��}J������٦#���!|j\�3;�j��J���E��aP�'������$��ok̶_b������_��iO��
+�v�N3�V��dW� !,���m�������p߭�TS�B�� 9�	�m�,���<m0���)�!O&KXH% �?P�:�U#V��V�����?��IX>�5��E�p�P8|?Q�71aL�E�<� �o�註�i�� y
+ܵ���>�+Ht����'���ݱ{�`Qڒt�+PT��Z��Ԫ
+|���A"K��醩sfY k� ��F\C@Ͼ�d�U��F�%3�]�(S�;��U����wk���CV�n#,�^s_!�v~e���~OV�:�A�Rf��\���w�s��H=ׂ�ܠד�1gP�[����<쀋����-�^�����SHC�H��j�!��L%DG|�8D��{g��t��I޷"|�m`�=$gg��� �O�m���d
+�c�9*�Zw�$�d*pڴEr���	�,ЯѵkVdJn�+��s�jwˇў�,�J&�i�v�lB����d�����	�?��Kg�[P����+_��<:��d��|T[!�����^ek�j�_��O�@O�cX��c�H�M�B� �.(���$N�[0��Ch��%K��ls�p(�H����N����NdvXs(̞5r(�&�,�Ҡ�����k��3��|��z�|pN}Z�	_ ��M�_��q���5�Te9Λ܄ �U��7���\qلp�Hb��z1y3K�(P�'8��_���P�s�M4 	\/#GH�b�A��d-�.N�O��4�:���t 3��:�=�=t[�Q�.�S���#�	o]�S�'�2�;2W��T�o��X�I��xȯz?�3�� 6t�lI&����ђ|oJn#3	ޗ�q�r�m,��su{����Z���S��</�
+���jJ�����e�1u���b�����2'wd�B�c&4 T�_k��R�}�.�]�z�F�����ԥ�3 ���wE|L�� L��xޅ���!�R����6]"���cYO8 ͆r��S���-�h?�d��9i��u8�fv�,�tΰ��5|z�mn�0+�gX1'���%�8�@��<Jl�X'��,%�w�uR8^��z[�J|����F/���X��'�����HĞ��c��#*
+ku^��g-�����(�e�,�@W-�aUlo�ō����t��m� ��3'�T"�(6�%u�����ٛ�U��t4�b2�����G" = �BK/j��껙*�#����Hu������r��U���
+}b�}5u���o��6yD��0Z�%��ZuK��m
+wb���Q�V�����a�H���b�F�������"������<�{�Lr�i$q��͒:��ުӓW�����dEM�"���J2}��)4k�07����x. ���x��O���U�^�]%�j<sLM�3��L_rWf�UAf������ߒەC- =�,�!p�X<G����5��'*!F��sU�B��)C�%�䡓ŋ->�*�諳���N|.�c��u���P��Ubid@���D��b,pSbp��n��?�<؇%,kБ��*�+F����B�t	������:���"U1�~�:c����g�{��p��q��
+��L���D����"(�T�P�E0?��ke����H{~��*m���s[�w�H�7ǥ����!�c��ԓj�C��P	W��[.�%��u<,����R@�mɥY4�0��I���n'�vnr�F�嵢����4����]��X��&�`@�}���2�s�|�` Ʀ�	~��H1���LF�E2?�0��$�{�������s����]��`bV5��5���k[�ܲp,�7���$`{㵔���J`�E�6����-�#�qC�t��di���Uـ����`��̛����p�Ml�ʷ���8���h`�G�:K>�^#�{���أ��l��!��EE��"a�gM���oW»2bg�qDx.=�����c'9W���Vg��"��?VF�E��j���AGO����d���+0GYG9ڠ��\J�}�n�pX0�����L�J˪�&�0�`A�BL���2��,�>(�j�%rF�c� �E�S@��А:.�Z���x����Y�)���� ��r���Z��������� g�S���I�X�G(��R��w������yR�_̓)��9��t���]��޵��)r�p����^޹פ����u���;zK�[��g�Ԍ����'��G��^ŷ;�|��S��eq����!�Yڙ+	��vZ���������-���G+��[����"�'�*���KWvIN�àd$����\��h���Ų�V�u
+���m�a��Mkz0�_@�~����F'd\XW���1h3�+'��.�#�6J/�O7[Ca�skA��A����KZ��8�9=x5���T�$H�{3�#��%"Y"�7 Y1t O�}#�l��ʍ��]+��6.5��J��"�+�ӗܹ�v=��k֔D����ܣ�M�To�ZI�hd ������@¥��H�H��� ���M1�*UD:WN��/�r�lm�i#��(m�-hT;�Q��K���I��=�� ��������$"X����'1�i�MM�����:�J�R����P���#K4R��TKL�F�b��t(f<�f6�����;��Dn�>6+�9�n��#�i�'��͊�j��U[��₷�7n&$,��y�»Uκ�
+`rԡ�5~��P�aE*es����Y��nȩ�(i�������-{𾻂�J+���8�"�aN���z�K����-}���;cT6����e1+�S+��J�8u����h�u`M�tp� ������"�$
+���@p˘2�����|�!��ћ��i���}(�� �sH1r�+ M{j�
+I�L�#�9H�2�{�Ƥ^������$� ���Ȯ R{����(;��&�o�ߏ�>ŀ�����,�3Rk��Ķ���	w&���zZ��wT��cϹ�`6ޑ�(WH����\�=u����d̗�u||�ŭ�3r�k�<ӷkz%8���s�VÕ5�	��L�{Q�%G�[T�,����z'&�v������-�N�T~�y��	; �M?�8 0��k���ŏY[�P�)�*����%����J;!t�ܲ/��CIH�h�*�k����gb����i.�%��g���U��sͲ ^���u��X�����A#i8w��	�K2\څ��l��%�}���r���[�������2�sxб
+�`�{emvH"��ߩ=J�-�E�f�)����lg��T��k��zѵ|��`8h`�_�@ܯ�������L&xlO�|��#Y����9|8�����6��>�1����ڂǹW�����]�n�g�I�U�Y�Z�6^����$ �%�� ��}�T����H�`$%����`���b�Z��ת�͕5�'2�=�]͍�e�ƤK��o�4�����-���$�"-�y��J��Q>c\+� �S}��|��[�]B��; :p��U�6�j�x�
+7�m��͏b�N1;��<�l�oR�Ш���������@�U:ـ�����<�7��-���E;]7<>kI����	U��q�v`��]��0�[}sf%�7ӵê{������zW3���Hs`	r���?h��<������֎����5)��I�����Y.��8T��75��N���AtD��h�@��q>]l�PO�P��?�7�IcG������
+�2# ء�1�ΛCe��{_�������3�1�F��n��|���dV@!��R��D��$t���r�1ͅ/յ?c��W�-oO���n��Cmu�)��mGW�J���"�P'�l&��o���Jq�;#��!~z�Ȓ�S�n�*���$q�<�w��K|��1�?�O�&-�I?����ި����h]+W����{��ǻ�2?�\(R6�0+)�(��z���74C�셞h#�S�\i�;R�>��땿�y���J�t�U�{�~����O*�����OeK�Πt�P{u�"͞JR"�
+	˂BL����~s5t��Tf�#����D�������0r�+n�S�|�ȁ�V�Ij��������4{偂�0D;�*w���5F�|��0�;`��\/Ð�\'9��KS1�KX��|L�v�!=�}�L�Xb�O�&���:D���3������2�:��u�v5��Nf�JD�����x����	�Υ*/u�J}�/�$L����pW�s��}	������{�$�7�!�,����K��2�_�Լ����z�f���T��� �$�4/�DF�  �3�uQ�]�q��*R��\��ܻ""R�6�|g   �   ��� ����lg�e�\�(��M���������:Z���Ks��T�2x��d��2I4x8L��Y���q:LŢ��d��j�‥)�r���KʤiʒH@քU��A�p�@�p�i��L�DC�	,v��"2-SR6�2��o8�	b:��ز5�KIK���\.)�.�P�2xl��*hIh!񡠚م,c�2�t�6|˸�r���(iǡ�C��{6FJr�PRҌ�P����ĐH'�����䣆Q6� l^ Q��#\>��`��" �yR��Υ� w�
+�8��8���J˔�ES��|��T���D��e� �2-AI]���3����8J8%�ش̓)B�Q�[� ���6-P0dV��`D�@�dGl([���-�@@��L�e�����oY^�B��1e	�i�ҹ�/��D1�F@�h� #I��6�
+����h��d�a*͉�*"�Q�1� �)��}AtkG|�t��X�t{!�h�@�z"����ʔ�&��B`���ja��Kp-/"F$�&f���i�U�e-���*�2FƖ�ʷ,%6��T�Q\�c��@�>���|�HXc�cW���G��o�3Q5�o�I(c߲W߲���e��a��i�	��`|���
+���
+߲D�h�FR�D����:@�x��4�@2m6��NB��S�pD\I�B�ӰYO�o��=�uu��`�`��b�c·,>4|�6�[���x�љ�-s�k·�)L�|˘�1����n H��S�t�4%� �2N�PIED�����#;e(���0���C�|�bĎHɵt"��U ��k���C9е�h�9J�o�Ӡh����JP+����L���EIi;p�P���Eb�$���) x��%EQR�Z$��m!ۨ���F�	�!I+<#��� ��t�D�/��)('�I}&ae�l��0ks�L�b�T,�칭������s��by�0ފe��K�bQ@q�:R��v`	�Ã�)"���@XV,N�F1M��:a��c��/W���j	��r`ԁ� �T,��D!#��hq8����g�����f��Pm6�
+Rnd�8h4����LŢ�h"�LD��`*���%@R(��F�U��?���e�@00 @����RmV@�I�!Ii�"%մ$��!��f:HN��_Pma��p�H�b��D��*"�%00a@, |0��0d����)��}TO�xh� ID*� ��E�4�K��KMP��<&%((		��
+=��܈J	���~	B%�����6�n Ā�0R8�,�3�!��F�J���'��,A&$7&߲�%@+l(��$�@@��yL�RѰ�\L	)�Fc�栴# ��m��@�D FGGN%}ePW�aV#��Cˀ� �V���%f�5�-s�o�jX�T�0!%&�7�2B�"(� q�@Y8-�D��[F�-�,2D<4��3�,��-�Z-D�1X�R���@K�,H4�ʔa=,������`�l�`eJ�E��v6FJ�����ZqE�c��)�?��1�*@ ��J�$J`�xi�QdhY�BڢA,	I��QȆ���$2T���!c�6�@E�P��j���;�R<�L�zSrV�\���9��)Q�N%-9<�G�)mJy�p��i;5d��YH�)'a�2A�I�����֜��ɷ�S�!i�-㐼Z�ɘ^�����n�x�J+���1�湠�(�l�E ɖ]
+<<�K
+#�sq\t.����"�@�.��\\��q1�x>�������#�M�V�*�
+�b�2b��ـ��j8V �4%%EpPh!/�dJ� �_/��b.B�E�I�N��&���(h)��t3�P��S`C�6��j�H' ,*��a�+�m '��E��T,����4�D�e��Fh��A�.=�V,�P�r:�&�����n�nv�"R��������>Uv���S�̜�k��X���l����/z���m�v&������L�v/9����kg2T�������qd���C����"T�ba�
+�}���A�:�>�d_u����_������;�'L�����|ױba��_�_�t�����=�[�o=F���V�e��d����ۛ�>&�Lf]t�|a�rz�*�?�?������5S]�F�}��� +��u;JB*����aq�Ŏ���A�|�	�cױ3�ﲃ�p�������b�q#C�̅�2�5B�o����c��u�~��ẏ��U��~��{���{�Ω/�c��c�s3��=��>�3�A�>b�2����a&���������0];����/3;��	�ո1v�;t�X��E����~��۽|�`���v��X?��&;��TǪX/'�n�Gw���	+�F7���6�����*����=3{�Fl������5�n/�̄�F��e?��g���S��f���T��[��>�{}����ݭ:?����}�0>�{�;|�s��o:�Ն��]ݾb�w��Ou
+�����*g�{��[=f�vwoO����w������2Y�K��	��cv&���_1�p�5*;���k�X��䷏u3�Ņ�Ib���D<pb���\'(��Kk�x h�x`- x�D*W�d��Uqzɟ߭�ߏ���ikf̅�߻ϳ��B�#�TM���03z�?fvu��cFΏ�9�������t�bՃ��U��7�>����]�e����ucf��E��}��1k��W����u���=U�����V�_�vofv�������|O�3��P�lN��GX��V�.�����[+�z���m��
+_d�/3߻�������S;��ww��*|�߯��v��r��sp{1#�&l�1Y;�G��w_�Nׇ�_�.Gu1���53��]�����ɺ�ŏ�o���5�k����9���/��ׄϤ]�V,��/5cw���G��jL�|���7��p�Kf�o���鿬OU�o?�09�>M�����[��jo����_W�=�U�S_T݌��S�Ⱦ�_�Sv�����#��z�S��1~6�K��0����ggu��Z__�_���S9jf�ֆ��}�?>�����;��Vu99�{]|�|���7���b�r&�>_�������j���W����W,6|O7�}�Ř��&X�V,)l���V,�Pvt����uR� `ą�
+aY���Ⱥ���5���W��WW���t���G��5z��6Ia�qa��}�����T��`_���0�:1�`���݊�c�-�|����d�cȑ��9��2#C4�4C@0  ��&�pEl�@�ơ�H�&1��(b�2�B������(:�ha.��R�[���	Nr|�(os��N�.��F�D�Ar{3�X�)9n�$7�P��V�o�^j��n�D��,1�,.C"�f�Ĕ��"q�S������3���ߊҊn�f@�J�G4�i����\J8���q�Lĕ��hz�:�� �HՂ] ���
+ۊ�/c�z�n�g�I��+{�6[�B�6�$0J�Ao^����=��"��F�xrҌR"��'J�=��Z����P���B��H�������	N��8�����T٪L<�	�YZ��aQ���i��u� d)3�Ϣ�&�0(`��6y1=��N��[�ݒH�0��:�g�����6!-Vfm����zߌxv�Q���%�B@Q�0,-	ʾ[��Y�g�xҥ����n�L�R0'�0�եt4�ά�����x�PXbBR-�.�)�p�hM��d�n��Q�g�DA��rՏ���q�-z,�2R�r�/UFTA��;�|U���I(�Uw���y�\��[_��"�5��Lr��:�w6K1foq/��!I���$yP�un 'j�)8�x*iߵ��+
+�!�qN_�%�����}��n�1^Y�����>���cWZ�:�'�6]�Y� :�K�T/�g�]�ذ�a��q�4�^q����� ���!�[��|��4%�.csF³rY��7\(-W��Ma  �N�؇ˌK��6)��U�5�f+oQ�S��ƪT���3���23:W�N~Ҡ�R�ꌑ�x��d��+�h�d�C���9	@	��p,��I��}s���C�BI�k����!bX��n}�(��U��0�	��Է>�,Gڥ$s"a��eqPى�A�!�g��A2F�]�s��]M�C�N戠��e��;��zk��ࡑ�Cϊ x8�x����!d�U�:��P(��c�,���(ft71gG�%)+�p�h��:��lSX�*K3
+s�P�.M� �Z�B�WG?$Bl/��\�]]-�bQԺ�������M
+��A�|X���ʊ�HFD9A#BV�W�8tT�D���.����Сc�-���f��lc}�ˏs��V�xr��� �{���!;*����R���Y|zJ�ǁ\��� ��w�]јA{�t�#�k���)�Eb��O�ʏ�E�G2ŏȅ�?����N-���%�D��pO�7�
+�J�S��t
++�s�)��UN��N]m,���\��~F$��Z�T�S>�fש��GO�����8�Tѩ!�f����t��T4�������13�2d����?� �G�'�#�A��WIjؖL\2գu��V��rEynD%#R�W���>����|[�$J�'���b���&�|K-*v�o�)�@APOB�¶�Mt�i���`�z���c���IU1��#�E����@���C�mX�GU
+�Z�w�
+/�g�/��O��[�cFT�BPk�!��f�>������g=�&a�h���0s�v��b�����m�1
+&���U8���HS�@�3@4�(: �~�h����cdL�`��"d�Ñ�-c��#404���LmT���*��M7����ߠ�3Y`2�Z�q�����*����-�:b*1���n���e�l} J�`_4��P��4'����@Z'5ᗃ�1�e6-��*�jks�!���%5�cן	�
+|nmS������H�*QcB�<>�]-�|DL0�,��\<�kW�H���ˉ��SR��y��g��wCq��Ah�d�9��99��y�}i�'�Ó�#�Ybve�V"������t��
+�|�$�3�r��(([��&�/K��CBmc�Qu6SV/�M��2�y0&����$�(��7Z�U*C��dYh����?�'������?Vr4`�3�c�ЦMw6m�d1�=$M���c�!���)C����3�'�%������e�-s�~�����(���o���wB&��c@���G��h	�h���AXb6W���y�c�o:}u�v%i��3�h�e�P���D�A�֫�)�1��e����o@+�fv�����ڤ�Pp�r$�gN^��}T��#QP���|�_EO�a�V�ǜ�n���^�:�Y�7�|����T�!Q7C�Rv�T��6��_צ����	Z�����\�T+gAWݫ�^�y.$��Sx��c���V�ֳg�'���p\��6�+A˞c_$������({�t3���6P�~?y��>�s�6J�C
+g�1���i&5"?ֶ�3�Y�ȿ�����*frF3[��h��9�|2�o�)5W�"N
+RJ�b�O�iRj)�n��Lۖ1��֤�:�������-ùΔT��_����)��)�@��t��A����*zʝzC����ڽ�������S�
+�S�Sq�G2l�A����٧���>�#��6�P�X�,/���=Y���C7\C�Z�Ry�e]���V�&R\tø~S�~{�(�7{�#���\6�b��"&W1m�r��j9��1H19�����Q���
+��ʃ��1[��R�_�(A��������4���!/HG�����B%�R!���!a���9+0�H�m���-v��P���C�	�hu8�4l�o�2_�qd�}��D׼�%�����\�/�Pu󭜛p^���I|:<�]~�*m="���H��r�`�,�F=�f;R7����j�,�������A�������x>�P���d�O�\}�����Y�2h�,(���aW�Y\��6�h&���7�6�Vl���4P+��/���iIY<���{�}?a�\~�B�K��x��h�o%"2��d�=e�gR��0W�S��Dq谻L�3ϰ4���&�IS��쥭l�h?*�����9��v(r,u� ��y��kVF!���녟2?����5�h1��{�W��N,�+�&4�%u��݈>J�_g3|&�lzH�8���'��j|f�x^�&��[�Ɍ��I�Y��˳�?�Vl�%��F�5�H67��ȋÞ���e������6S+<p��=?��:�R�.�7;��xf����|� �ճ��MyƏt%D?Z���8Yys3��sS��-���h	�����l*W�q��R���eג�& 0m)�x|V3�aƤF:֞)�+'�"eՏ��C�-�
+��h�u?p̃"K��vuk̄�a�>D�'��EP�h=��խ�h��Xw��_S$&����&�I���K���_���Nw���ʵ4���:id��� ��tet�p���N���栗��уSTsQ����u����נ��[���X��Cv���|%�<��\����Q����H���A��!�V����'OX+��y鍅������Z� 
+T�`#~9�-y�(���gpQ�����	�Uq�,��dl�+S{�/N
+@S� �C/$���$T�f�^�^�$w؊�w��*�wQ���|����5�!�Hùl7���� V!E����W���J�>+�=�
+"�`���үj���آZ1��LlG\;]���.hp@k*"�(?X�gK �sڃ
+endstreamendobj26 0 obj[/Indexed/DeviceRGB 255 27 0 R]endobj27 0 obj<</Filter[/ASCII85Decode/FlateDecode]/Length 441>>stream
+8;X]O>EqN@%''O_@%e@?J;%+8(9e>X=MR6S?i^YgA3=].HDXF.R$lIL@"pJ+EP(%0
+b]6ajmNZn*!='OQZeQ^Y*,=]?C.B+\Ulg9dhD*"iC[;*=3`oP1[!S^)?1)IZ4dup`
+E1r!/,*0[*9.aFIR2&b-C#s<Xl5FH@[<=!#6V)uDBXnIr.F>oRZ7Dl%MLY\.?d>Mn
+6%Q2oYfNRF$$+ON<+]RUJmC0I<jlL.oXisZ;SYU[/7#<&37rclQKqeJe#,UF7Rgb1
+VNWFKf>nDZ4OTs0S!saG>GGKUlQ*Q?45:CI&4J'_2j<etJICj7e7nPMb=O6S7UOH<
+PO7r\I.Hu&e0d&E<.')fERr/l+*W,)q^D*ai5<uuLX.7g/>$XKrcYp0n+Xl_nU*O(
+l[$6Nn+Z_Nq0]s7hs]`XX$6Ra!<<'!!!*'!!rrmPX()~>
+endstreamendobj22 0 obj<</AntiAlias false/ColorSpace/DeviceRGB/Coords[0.0 0.0 1.0 0.0]/Domain[0.0 1.0]/Extend[true true]/Function 28 0 R/ShadingType 2>>endobj23 0 obj<</AntiAlias false/ColorSpace/DeviceRGB/Coords[0.0 0.0 1.0 0.0]/Domain[0.0 1.0]/Extend[true true]/Function 29 0 R/ShadingType 2>>endobj24 0 obj<</AntiAlias false/ColorSpace/DeviceRGB/Coords[0.0 0.0 1.0 0.0]/Domain[0.0 1.0]/Extend[true true]/Function 30 0 R/ShadingType 2>>endobj30 0 obj<</Bounds[0.388723]/Domain[0.0 1.0]/Encode[0.0 1.0 0.0 1.0]/FunctionType 3/Functions[31 0 R 32 0 R]>>endobj31 0 obj<</C0[0.356863 0.207843 0.870588]/C1[0.356863 0.207843 0.870588]/Domain[0.0 1.0]/FunctionType 2/N 1.0>>endobj32 0 obj<</C0[0.356863 0.207843 0.870588]/C1[0.454902 0.333333 0.866667]/Domain[0.0 1.0]/FunctionType 2/N 1.0>>endobj29 0 obj<</Bounds[]/Domain[0.0 1.0]/Encode[0.0 1.0]/FunctionType 3/Functions[33 0 R]>>endobj33 0 obj<</C0[0.862745 0.835294 0.964706]/C1[0.796078 0.74902 0.94902]/Domain[0.0 1.0]/FunctionType 2/N 1.0>>endobj28 0 obj<</Bounds[]/Domain[0.0 1.0]/Encode[0.0 1.0]/FunctionType 3/Functions[34 0 R]>>endobj34 0 obj<</C0[0.72549 0.666667 0.933333]/C1[0.592157 0.501961 0.898039]/Domain[0.0 1.0]/FunctionType 2/N 1.0>>endobj18 0 obj<</Intent 35 0 R/Name(Layer 1)/Type/OCG/Usage 36 0 R>>endobj35 0 obj[/View/Design]endobj36 0 obj<</CreatorInfo<</Creator(Adobe Illustrator 28.7)/Subtype/Artwork>>>>endobj21 0 obj<</AIS false/BM/Normal/CA 1.0/OP false/OPM 1/SA true/SMask/None/Type/ExtGState/ca 1.0/op false>>endobj19 0 obj[18 0 R]endobj37 0 obj<</CreationDate(D:20241202065621-07'00')/Creator(Adobe Illustrator 28.7 \(Windows\))/ModDate(D:20241202065622-08'00')/Producer(Adobe PDF library 17.00)/Title(MSBuild)>>endobjxref
+0 38
+0000000004 65535 f
+0000000016 00000 n
+0000000147 00000 n
+0000016834 00000 n
+0000000000 00000 f
+0000016885 00000 n
+0000000000 00000 f
+0000000000 00000 f
+0000019124 00000 n
+0000019196 00000 n
+0000019336 00000 n
+0000020729 00000 n
+0000000000 00000 f
+0000000000 00000 f
+0000000000 00000 f
+0000000000 00000 f
+0000000000 00000 f
+0000000000 00000 f
+0000055342 00000 n
+0000055642 00000 n
+0000017291 00000 n
+0000055529 00000 n
+0000054119 00000 n
+0000054265 00000 n
+0000054411 00000 n
+0000018618 00000 n
+0000053544 00000 n
+0000053592 00000 n
+0000055128 00000 n
+0000054915 00000 n
+0000054557 00000 n
+0000054675 00000 n
+0000054795 00000 n
+0000055010 00000 n
+0000055223 00000 n
+0000055413 00000 n
+0000055444 00000 n
+0000055667 00000 n
+trailer
+<</Size 38/Root 1 0 R/Info 37 0 R/ID[<20BBAF9A28AAD548B06851A831FC5364><134D1AC41AF67442B67C503709D794CC>]>>
+startxref
+55852
+%%EOF
diff --git a/branding/MSBuild-Logo.png b/branding/MSBuild-Logo.png
index db9a1a45003..3f3d81f9c93 100644
Binary files a/branding/MSBuild-Logo.png and b/branding/MSBuild-Logo.png differ
diff --git a/branding/MSBuild-Logo.svg b/branding/MSBuild-Logo.svg
new file mode 100644
index 00000000000..a22d1d16142
--- /dev/null
+++ b/branding/MSBuild-Logo.svg
@@ -0,0 +1,21 @@
+<svg width="256" height="256" viewBox="0 0 256 256" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path d="M157.317 61.7813L170.613 54.0853V29.4453L114.661 61.7867C111.109 63.84 111.109 68.9707 114.661 71.024L170.667 103.365V143.408C170.667 149.125 167.616 154.405 162.667 157.264L144 168.043C134.096 173.76 121.893 173.76 111.995 168.043L72 144.944C68.4427 142.891 64 145.456 64 149.563V214.245L85.3333 201.925V186.523C85.3333 182.416 89.776 179.851 93.3333 181.904L111.995 192.683C121.899 198.4 134.096 198.4 144 192.683L184 169.584C188.949 166.725 192 161.445 192 155.728V91.0453L157.323 71.0187C153.771 68.9653 153.765 63.84 157.323 61.7867L157.317 61.7813Z" fill="#4122AA"/>
+<path d="M144.005 118.757C134.101 124.475 121.904 124.475 112 118.757L85.3386 103.36L74.672 97.2267L64.0053 91.04L25.6053 68.8533C22.8853 73.6 21.3386 79.1467 21.3386 84.9067V171.093C21.3386 182.453 27.312 192.96 37.1253 198.667C37.1786 198.72 37.2853 198.773 37.3386 198.827L64.0053 214.24V149.579C64.0053 145.467 68.4586 142.901 72.016 144.965L74.672 146.507L85.3386 152.64L112 168.037C121.904 173.755 134.101 173.755 144.005 168.037L162.672 157.259C167.621 154.4 170.672 149.12 170.672 143.403V103.36L144.011 118.757H144.005Z" fill="url(#paint0_linear_2607_2191)"/>
+<path d="M170.667 103.36L144.005 118.757C134.101 124.475 121.904 124.475 112 118.757L85.3387 103.36L74.672 97.2267L64.0053 91.04L25.6053 68.8533C28.3253 64.16 32.2187 60.2133 37.0187 57.3867C37.1253 57.28 37.232 57.2267 37.3387 57.1733L112 14.08C121.92 8.37332 134.08 8.37332 144 14.08L170.613 29.44L114.661 61.7813C111.109 63.8347 111.109 68.9653 114.661 71.0187L170.667 103.36Z" fill="url(#paint1_linear_2607_2191)"/>
+<path d="M230.4 68.8533L192 91.04L157.323 71.0133C153.771 68.96 153.765 63.8347 157.323 61.7813L170.619 54.0853L192.005 41.7653L218.672 57.1787C218.725 57.232 218.832 57.2853 218.885 57.3387C223.739 60.1653 227.632 64.1653 230.405 68.8587L230.4 68.8533Z" fill="#7455DD"/>
+<path d="M230.4 68.8533L192 91.04V155.744C192 161.451 188.96 166.72 184.027 169.584L143.995 192.683C134.096 198.395 121.899 198.395 112 192.677L93.3386 181.899C89.7813 179.845 85.3386 182.411 85.3386 186.517V226.56L112.005 241.92C116.965 244.8 122.459 246.187 128.005 246.187C133.552 246.187 139.045 244.8 144.005 241.92L218.672 198.827C218.779 198.773 218.885 198.72 218.992 198.613C228.752 192.907 234.672 182.453 234.672 171.093V84.9067C234.672 79.1467 233.12 73.6 230.4 68.8533Z" fill="url(#paint2_linear_2607_2191)"/>
+<defs>
+<linearGradient id="paint0_linear_2607_2191" x1="96.0053" y1="61.6377" x2="96.0053" y2="214.24" gradientUnits="userSpaceOnUse">
+<stop stop-color="#B9AAEE"/>
+<stop offset="1" stop-color="#9780E5"/>
+</linearGradient>
+<linearGradient id="paint1_linear_2607_2191" x1="135.892" y1="10.6667" x2="65.2841" y2="99.1983" gradientUnits="userSpaceOnUse">
+<stop stop-color="#DCD5F6"/>
+<stop offset="1" stop-color="#CBBFF2"/>
+</linearGradient>
+<linearGradient id="paint2_linear_2607_2191" x1="234.672" y1="231.995" x2="52.9831" y2="231.995" gradientUnits="userSpaceOnUse">
+<stop offset="0.388723" stop-color="#5B35DE"/>
+<stop offset="1" stop-color="#7455DD"/>
+</linearGradient>
+</defs>
+</svg>
diff --git a/branding/MSBuild-NuGet-Icon.png b/branding/MSBuild-NuGet-Icon.png
index b502fda8f5d..ddb55a0ee3b 100644
Binary files a/branding/MSBuild-NuGet-Icon.png and b/branding/MSBuild-NuGet-Icon.png differ
diff --git a/branding/README.md b/branding/README.md
index 0f63eb314e4..d954e6f3bef 100644
--- a/branding/README.md
+++ b/branding/README.md
@@ -1,16 +1,29 @@
 # Branding
 
-This folder contains images used for branding MSBuild in various places.  If you add a new image, please indicate where it is used.
+This folder contains MSBuild brand images.
 
-## MSBuild-Icon.png ![MSBuild-NuGet-Icon.png](MSBuild-Icon.png?raw=true)
-This image is the original graphic used for creating the MSBuild icon.  It was placed here from its original location but is not currently used by anything.
+## MSBuild-Logo.svg
 
-## MSBuild-Logo.png ![MSBuild-NuGet-Icon.png](MSBuild-Logo.png?raw=true)
-This image is an original graphic created by Immo Landwerth.  It can be used for images where the size is required to be larger than the MSBuild-Icon.png.
+A vector-based version of the logo that scales to any resolution.
 
-## MSBuild-NuGet-Icon.png ![MSBuild-NuGet-Icon.png](MSBuild-NuGet-Icon.png?raw=true)
-This image is used by the NuGet packages as the ``<iconUrl />``.  Its raw location in this repo is used by the forwarding link [https://aka.ms/msbuildicon](https://aka.ms/msbuildicon).  If it is moved, please update the link.
+![MSBuild-Logo.svg](MSBuild-Logo.svg?raw=true)
 
-If the below image loads, then the forwarding link is working.
+## MSBuild-Icon.png
 
-![MSBuild-NuGet-Icon from the forwarding link](https://aka.ms/msbuildicon)
\ No newline at end of file
+A 40x40px version of the MSBuild logo.
+
+![MSBuild-NuGet-Icon.png](MSBuild-Icon.png?raw=true)
+
+## MSBuild-Logo.png
+
+A 256x256px version of the MSBuild logo.
+
+![MSBuild-Logo.png](MSBuild-Logo.png?raw=true)
+
+## MSBuild-NuGet-Icon.png
+
+A 128x128px version of the MSBuild logo, intended for use in NuGet packages.
+
+![MSBuild-NuGet-Icon from the forwarding link](https://aka.ms/msbuildicon)
+
+The URL [https://aka.ms/msbuildicon](https://aka.ms/msbuildicon) redirects to this file on github.com. If the above image loads, then the forwarding link works. If not, please update the link.
diff --git a/documentation/Logging-behavior.md b/documentation/Logging-behavior.md
new file mode 100644
index 00000000000..ee71a236c05
--- /dev/null
+++ b/documentation/Logging-behavior.md
@@ -0,0 +1,50 @@
+## Logging behavior
+MSBuild has a few different built-in loggers, which have different behaviors depending on verbosity. For more information on loggers you can visit the [Microsoft Learn page](https://learn.microsoft.com/visualstudio/msbuild/obtaining-build-logs-with-msbuild), or take a look at the [high-level overview of MSBuild](https://github.com/dotnet/msbuild/blob/main/documentation/High-level-overview.md#diagnosability--loggers).
+
+If you are expecting to see a certain type of message (like test logs) but are unable to find it in one of our loggers, check if the verbosity is correct and if the message has the correct type and importance.
+
+### Message types
+There are various types of messages within MSBuild with different importances and purposes.
+Some message types are built-in within the engine, such as  `errors`, `warnings`, and MSBuild engine information. Others are custom messages, that can come either from the engine or other sources, and are selected and displayed based on the `importance` of the message. There can be high, normal, and low importance messages being displayed. More detail on which messages are displayed on individual loggers are on their respective sections.
+
+For more information on custom messages please reference the Microsoft Learn page for the MSBuild [Message](https://learn.microsoft.com/visualstudio/msbuild/message-task) Task.
+
+### Terminal logger
+Terminal logger is a new feature which improves the console experience for end users by focusing the output on the diagnostics raised from a build for each project. It also allows users to see at-a-glance information about how the engine is building their projects at any time. It is opinionated and explicitly hides some build messages and output to deliver a more streamlined end-user experience. Users that need more detailed output should use the [console logger](#console-logger) or a [binary log](#binary-logger-build-logger) along with the [Structured Log Viewer](https://msbuildlog.com/) to drive their investigations.
+For more information on how the terminal logger behaves see the [dotnet build options](https://learn.microsoft.com/dotnet/core/tools/dotnet-build#options) under `-tl`.
+
+To specify verbosity the `-verbosity` flag or `/tlp:verbosity={verbosity level}`
+
+| Verbosity                  | Quiet | Minimal | Normal | Detailed | Diagnostic |
+| ---------                  | ----- | ------- | ------ | -------- | ---------- |
+| Errors                     |&check;| &check; | &check;| &check;  |   &check;  |
+| Warnings                   |&check;| &check; | &check;| &check;  |   &check;  |
+| High-importance messages   |       |         |        | &check;  |   &check;  |
+| Normal-importance messages |
+| Low-importance messages    |
+| MSBuild engine information |
+
+### Binary logger / build logger
+The binary logger does not have a verbosity option. It includes all messages, projects and files from the build by default. It is intended to be a tooling-friendly way to get detailed information about what happened during a build, for analysis or automated processing.
+
+You can find more information about the binlogs on [MSBuild Github Documentation](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md).
+
+### Console logger
+Console logger refers to the logger that outputs to the console in VS or the terminal that is being used. It is not the default logger after the [.NET 9 update](https://learn.microsoft.com/en-us/dotnet/core/compatibility/sdk/9.0/terminal-logger) but still can be accessed by opting out of the Terminal Logger feature.
+
+The console logger is a 1:1 textual representation of the data that are emitted during the build. It attempts small amounts of formatting, but it writes received messages from all of the worker nodes in an unbuffered format so can be difficult to follow the chain of execution.
+
+The console logger defaults to normal verbosity, and can be overriden by passing the `-verbosity` attribute, or passing the `verbosity` property to the console logger `clp:verbosity={verbosity level}`.
+
+| Verbosity                  | Quiet | Minimal | Normal | Detailed | Diagnostic |
+| ---------                  | ----- | ------- | ------ | -------- | ---------- |
+| Errors                     |&check;| &check; | &check;| &check;  | &check;    |
+| Warnings                   |&check;| &check; | &check;| &check;  | &check;    |
+| High-importance messages   |       | &check; | &check;| &check;  | &check;    |
+| Normal-importance messages |       |         | &check;| &check;  | &check;    |
+| Low-importance messages    |       |         |        | &check;  | &check;    |
+| MSBuild engine information |       |         |        |          |            |
+
+### File logger
+The File logger saves all the build data to a file. It's verbosity is determined by passing the `verbosity` parameter to the `flp` attribute, or the default is set to `diagnostic`, and it follows the same message display rules as the console logger.
+
diff --git a/documentation/specs/BuildCheck/Codes.md b/documentation/specs/BuildCheck/Codes.md
index 5c28d36261b..9845c431061 100644
--- a/documentation/specs/BuildCheck/Codes.md
+++ b/documentation/specs/BuildCheck/Codes.md
@@ -9,6 +9,7 @@ Report codes are chosen to conform to suggested guidelines. Those guidelines are
 | [BC0103](#bc0103---used-environment-variable) | Suggestion | Project | 9.0.100 | Used environment variable. |
 | [BC0104](#bc0104---projectreference-is-preferred-to-reference) | Warning | N/A | 9.0.200 | ProjectReference is preferred to Reference. |
 | [BC0105](#bc0105---embeddedresource-should-specify-culture-metadata) | Warning | N/A | 9.0.200 | Culture specific EmbeddedResource should specify Culture metadata. |
+| [BC0106](#bc0106---copytooutputdirectoryalways-should-be-avoided) | Warning | N/A | 9.0.200 | CopyToOutputDirectory='Always' should be avoided. |
 | [BC0107](#bc0107---targetframework-and-targetframeworks-specified-together) | Warning | N/A | 9.0.200 | TargetFramework and TargetFrameworks specified together. |
 | [BC0201](#bc0201---usage-of-undefined-property) | Warning | Project | 9.0.100 | Usage of undefined property. |
 | [BC0202](#bc0202---property-first-declared-after-it-was-used) | Warning | Project | 9.0.100 | Property first declared after it was used. |
@@ -78,6 +79,36 @@ Examples:
 <a name="RespectAlreadyAssignedItemCulture"></a>
 **Note:** In Full Framework version of MSBuild (msbuild.exe, Visual Studio) and in .NET SDK prior 9.0 a global or project specific property `RespectAlreadyAssignedItemCulture` needs to be set to `'true'` in order for the explicit `Culture` metadata to be respected. Otherwise the explicit culture will be overwritten by MSBuild engine and if different from the extension - a `MSB3002` warning is emitted (`"MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set."`)
 
+<a name="BC0106"></a>
+## BC0106 - CopyToOutputDirectory='Always' should be avoided.
+
+"Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying."
+
+[`CopyToOutputDirectory` metadata](https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items) can take the values:
+ * `Never`
+ * `Always`
+ * `PreserveNewest`
+ * `IfDifferent`
+
+`Always` is not recommended, as it causes the files to be copied in every build, even when the destination file content is identical to the source.
+
+Before the introduction of `IfDifferent`, `Always` was needed to work around cases where the destination file could have changed between builds (e.g. an asset that can be changed during test run, but needs to be reset by the build). `IfDifferent` preserves this behavior without unnecessary copying.
+
+In order to avoid the need to change copy metadata for a large number of items, it's now possible to specify the `SkipUnchangedFilesOnCopyAlways` property in order to flip all copy behavior of `CopyToOutputDirectory=Always` to behave identically to `CopyToOutputDirectory=IfDifferent`:
+
+```xml
+<PropertyGroup>
+    <SkipUnchangedFilesOnCopyAlways>True</SkipUnchangedFilesOnCopyAlways>
+</PropertyGroup>
+
+<ItemGroup>
+    <None Include="File1.txt" CopyToOutputDirectory="Always" />
+    <None Include="File2.txt" CopyToOutputDirectory="IfDifferent" />
+</ItemGroup>
+```
+
+Both items in above example are treated same and no BC0106 diagnostic is issued.
+
 <a name="BC0107"></a>
 ## BC0107 - TargetFramework and TargetFrameworks specified together.
 
diff --git a/documentation/specs/proposed/MSBuild_Server_onepager.md b/documentation/specs/proposed/MSBuild_Server_onepager.md
new file mode 100644
index 00000000000..d7ad41556c0
--- /dev/null
+++ b/documentation/specs/proposed/MSBuild_Server_onepager.md
@@ -0,0 +1,79 @@
+## MSBuild Server
+
+MSBuild server aims to create a persistent entry node for the MSBuild process
+that we would communicate with via a thin client. We want to get from
+the current state of “spawn a complete process for every CLI invocation”
+to “we have a server process in the background and we only spawn a small
+CLI handler that will tell the server what to build”.
+This project is based on an already existing project: [MSBuild Server](https://github.com/dotnet/msbuild/blob/main/documentation/MSBuild-Server.md). 
+We need to re-enable it and figure out the way forward.
+
+### Goals and Motivation
+
+Currently all the MSBuild processes are persistent, except for the entry
+point process which lives only for the duration of the build. Restarting
+this process with each and every build leads to some overhead due to
+startup costs like jitting. It also leads to a loss of continuity mainly
+due to the absence of caching.
+
+The primary aim of the MSBuild server is to reduce this startup
+overhead.
+
+The secondary aim of this project is to enable us to introduce more
+advanced caching and potentially some other performance optimizations
+further down the line. However these aren’t in the current scope.
+
+### Impact
+
+Small performance improvement in the short term. Enabling further
+optimizations in the long term. (these improvements are for the Dev Kit
+and inner loop CLI scenarios)
+
+Getting closer to the possibility of decoupling from Visual Studio. VS is currently 
+acting as a MSBuild server in some ways - they are a persistent process that  invokes 
+portions of the MSBuild. We ideally want to transition into "VS calls our server 
+instead" relation, to make our behavior consistent for both VS and CLI based
+builds.
+
+### Stakeholders
+
+MSBuild Team. Successful handover means turning on the
+feature, dogfooding it for long enough to ensure we have reasonable
+certainty that nothing breaks and then rolling it out.
+We should cooperate with our close repositories like SDK and roslyn 
+to get them to opt in before we roll the feature out.
+
+### Risks
+
+The project was already attempted once, however it was postponed because
+it surfaced a group of bugs that weren’t previously visible due to the
+processes not being persistent. One such example is Nuget authentication caching,
+which was a non-isue for a non persistent process but became a blocker
+due to the cache not being refreshable in-process.
+Most of those bugs should be solved by now, however we can run into some 
+new ones. Unfortunately the nature of the bugs means that these won't become
+apparent until we start with the dogfooding.
+
+### Cost
+Note that these are mostly my rough guess based on my limited knowledge.
+
+A week to figure out how to turn on the MSBuild Server in a way that
+will enable us to dogfood it properly **plus** some overhead for the
+review loop.
+
+A month of developer time for bugfixes assuming that nothing goes
+terribly wrong.
+
+Some PM time to communicate with appropriate teams to ask them for help
+with dogfooding.
+
+### Plan
+
+- In a first month we should aim to get the MSBuild server dogfooded for
+  our MSBuild repository inner development loop. (Coding + review + setting up)
+
+- Second month we will monitor it and fix anything that crops up.
+
+- After that we start dogfooding internally in our neighbor repositories(SDK, roslyn)
+ for as long as we feel   necessary to ensure everything works as intended. I would 
+ give this period one to three months of monitoring + bugfixing when necessary.
diff --git a/documentation/specs/proposed/RAR_caching_onepager.md b/documentation/specs/proposed/RAR_caching_onepager.md
new file mode 100644
index 00000000000..38143dd9a3b
--- /dev/null
+++ b/documentation/specs/proposed/RAR_caching_onepager.md
@@ -0,0 +1,60 @@
+## RAR caching
+RAR(Resolving of Assembly references) is an optimization for the step in 
+every build where we need to gather the graph of assembly references and pass
+them to the compiler. This process is highly cacheable as the references
+don’t change all that often. Currently we have some limited caching in
+place however the way nodes are assigned work results in frequent cache
+misses.
+
+### Goals and motivations
+
+1ES team wants to isolate their File I/O related to the RAR caching which is causing
+issues to their debugging efforts. This is mostly due to the fact that MSBuild is pulling
+files from all nodes at once which results in a tangled mess of IO that is hard to debug.
+
+Our motivation is a possible performance gain however we’re fine with
+the change as long as the impact is not negative.
+
+### Impact
+
+The only impact we’re concerned about is the performance. There will be
+a tension between the gains from caching and costs due to the IPC from
+the process that will act as the cache repository. We need to ensure
+that this balance will be a net positive performance wise.
+
+### Stakeholders
+
+1ES team, Tomas Bartonek, Rainer Sigwald
+
+1ES team will provide the initial cache implementation. We will review
+their PRs and do the performance evaluations. Handover will be
+successful if nothing breaks and we meet our performance requirements
+(no regression or better still an improvement).
+
+### Risks
+
+Some time ago Roman Konecny estimated the RAR caching to not be worth it
+performance wise. 1ES team claims to have created an implementation that
+will either improve or not change the performance. We need to validate
+this claim and push back in case we find performance regression.
+Thorough testing will be needed especially to ensure the performance
+is not impacted.
+
+The risk is having to figure out a different way to help 1ES team to
+isolate their File I/Os if the caching hurts the performance. This could
+result in a larger project requiring more involvement on our side.
+
+### Cost
+
+Week for reviewing the provided PR. Additional two weeks for performance
+testing conditional on the Perfstar infrastructure being functional.
+Some communication overhead
+
+## Plan
+
+1ES team creates the PR wih the RAR cache implementation.
+
+We review the PR with a special emphasis on the performance side of
+things.
+Then we merge the changes. There is no expected follow up beyond the
+usual maintenance for our codebase.
diff --git a/eng/TestAssets.targets b/eng/TestAssets.targets
index 4cd9d2e8fe3..797bd751c93 100644
--- a/eng/TestAssets.targets
+++ b/eng/TestAssets.targets
@@ -23,12 +23,15 @@
           Inputs="@(ProjectsToPack);@(SourceFilesForPacking)"
           Outputs="$(ArtifactsNonShippingPackagesDir)\Microsoft.Build.$(Version).nupkg;$(ArtifactsNonShippingPackagesDir)\Microsoft.Build.Framework.$(Version).nupkg;$(ArtifactsNonShippingPackagesDir)\Microsoft.NET.StringTools.$(Version).nupkg">
     
-    <MSBuild Projects="@(ProjectsToPack)"
+<!--
+  Temporarily disabling the packing within bootstrap build, until #11090 is resolved
+<MSBuild Projects="@(ProjectsToPack)"
              Targets="Pack"
              Properties="PackageOutputPath=$(ArtifactsNonShippingPackagesDir);PackageVersion=$(PackageVersion)"
              BuildInParallel="true">
       <Output TaskParameter="TargetOutputs" ItemName="PackageOutputs" />
     </MSBuild>
+-->
     
   </Target>
 </Project>
diff --git a/eng/Version.Details.xml b/eng/Version.Details.xml
index beff04f0a95..9e196e8b5ae 100644
--- a/eng/Version.Details.xml
+++ b/eng/Version.Details.xml
@@ -85,17 +85,17 @@
       <Uri>https://github.com/dotnet/arcade</Uri>
       <Sha>b41381d5cd633471265e9cd72e933a7048e03062</Sha>
     </Dependency>
-    <Dependency Name="NuGet.Build.Tasks" Version="6.13.0-preview.1.73">
+    <Dependency Name="NuGet.Build.Tasks" Version="6.13.0-rc.93">
       <Uri>https://github.com/nuget/nuget.client</Uri>
-      <Sha>cee6d943f9a6fa38daf5adba4d4dae9d230e83c6</Sha>
+      <Sha>acc521c647aa484fc2202024f624c7a56bf9fe0f</Sha>
     </Dependency>
-    <Dependency Name="Microsoft.Net.Compilers.Toolset" Version="4.13.0-3.24575.2">
+    <Dependency Name="Microsoft.Net.Compilers.Toolset" Version="4.13.0-3.24607.3">
       <Uri>https://github.com/dotnet/roslyn</Uri>
-      <Sha>f86856dda7a9acbe86f2bbf356420596d9d72c23</Sha>
+      <Sha>31f8433cb625e2aa74d148005003b21d5e3f67b7</Sha>
     </Dependency>
-    <Dependency Name="Microsoft.SourceBuild.Intermediate.roslyn" Version="4.13.0-3.24575.2">
+    <Dependency Name="Microsoft.SourceBuild.Intermediate.roslyn" Version="4.13.0-3.24607.3">
       <Uri>https://github.com/dotnet/roslyn</Uri>
-      <Sha>f86856dda7a9acbe86f2bbf356420596d9d72c23</Sha>
+      <Sha>31f8433cb625e2aa74d148005003b21d5e3f67b7</Sha>
       <SourceBuild RepoName="roslyn" ManagedOnly="true" />
     </Dependency>
     <Dependency Name="Microsoft.DotNet.XUnitExtensions" Version="9.0.0-beta.24572.2">
diff --git a/eng/Versions.props b/eng/Versions.props
index a773ffaf11f..6523774e70a 100644
--- a/eng/Versions.props
+++ b/eng/Versions.props
@@ -2,8 +2,8 @@
 <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
 <Project>
   <PropertyGroup>
-    <VersionPrefix>17.13.0</VersionPrefix>
-    <PackageValidationBaselineVersion>17.12.6</PackageValidationBaselineVersion>
+    <VersionPrefix>17.14.0</VersionPrefix>
+    <PackageValidationBaselineVersion>17.13.0-preview-24611-01</PackageValidationBaselineVersion>
     <AssemblyVersion>15.1.0.0</AssemblyVersion>
     <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
     <DotNetUseShippingVersions>true</DotNetUseShippingVersions>
@@ -62,8 +62,8 @@
     <DotNetCliVersion>$([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)..\global.json')), '"dotnet": "([^"]*)"').Groups.get_Item(1))</DotNetCliVersion>
     <MicrosoftCodeAnalysisCollectionsVersion>4.2.0-1.22102.8</MicrosoftCodeAnalysisCollectionsVersion>
     <MicrosoftDotNetXUnitExtensionsVersion>9.0.0-beta.24572.2</MicrosoftDotNetXUnitExtensionsVersion>
-    <MicrosoftNetCompilersToolsetVersion>4.13.0-3.24575.2</MicrosoftNetCompilersToolsetVersion>
-    <NuGetBuildTasksVersion>6.13.0-preview.1.73</NuGetBuildTasksVersion>
+    <MicrosoftNetCompilersToolsetVersion>4.13.0-3.24607.3</MicrosoftNetCompilersToolsetVersion>
+    <NuGetBuildTasksVersion>6.13.0-rc.93</NuGetBuildTasksVersion>
   </PropertyGroup>
   <PropertyGroup Condition="!$(TargetFramework.StartsWith('net4'))">
     <BootstrapSdkVersion>9.0.200-preview.0.24603.3</BootstrapSdkVersion>
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 4ee166bb5e2..e3aa23a4780 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1985,7 +1985,12 @@ private Dictionary<ProjectGraphNode, BuildResult> BuildGraph(
             IReadOnlyDictionary<ProjectGraphNode, ImmutableList<string>> targetsPerNode,
             GraphBuildRequestData graphBuildRequestData)
         {
-            using var waitHandle = new AutoResetEvent(true);
+            // The handle is used within captured async scope. If error occurs during the build
+            //  and we return from the function before async call signals - it causes unhandled ObjectDisposedException
+            //  upon attempt to signal the handle (and hence unfinished logs).
+#pragma warning disable CA2000
+            var waitHandle = new AutoResetEvent(true);
+#pragma warning restore CA2000
             var graphBuildStateLock = new object();
 
             var blockedNodes = new HashSet<ProjectGraphNode>(projectGraph.ProjectNodes);
diff --git a/src/Build/BuildCheck/Checks/CopyAlwaysCheck.cs b/src/Build/BuildCheck/Checks/CopyAlwaysCheck.cs
new file mode 100644
index 00000000000..1d0565cb84f
--- /dev/null
+++ b/src/Build/BuildCheck/Checks/CopyAlwaysCheck.cs
@@ -0,0 +1,94 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.Collections.Generic;
+using System.IO;
+using Microsoft.Build.Collections;
+using Microsoft.Build.Construction;
+using Microsoft.Build.Framework;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Experimental.BuildCheck.Checks;
+internal class CopyAlwaysCheck : Check
+{
+    private const string RuleId = "BC0106";
+    public static CheckRule SupportedRule = new CheckRule(RuleId, "AvoidCopyAlways",
+        ResourceUtilities.GetResourceString("BuildCheck_BC0106_Title")!,
+        ResourceUtilities.GetResourceString("BuildCheck_BC0106_MessageFmt")!,
+        new CheckConfiguration() { RuleId = RuleId, Severity = CheckResultSeverity.Warning });
+
+    public override string FriendlyName => "MSBuild.CopyAlwaysCheck";
+
+    public override IReadOnlyList<CheckRule> SupportedRules { get; } = [SupportedRule];
+
+    public override void Initialize(ConfigurationContext configurationContext)
+    {
+        /* This is it - no custom configuration */
+    }
+
+    public override void RegisterActions(IBuildCheckRegistrationContext registrationContext)
+    {
+        registrationContext.RegisterEvaluatedPropertiesAction(EvaluatedPropertiesAction);
+        registrationContext.RegisterEvaluatedItemsAction(EvaluatedItemsAction);
+    }
+
+    internal override bool IsBuiltIn => true;
+
+    private readonly HashSet<string> _projectsSeen = new(MSBuildNameIgnoreCaseComparer.Default);
+
+    private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
+    {
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects.
+        // We want to do the same prevention for both registered actions: EvaluatedPropertiesAction and EvaluatedItemsAction.
+        //  To avoid the need to have separate hashset for each of those functions - we use a single one and we use the fact that
+        //  both functions are always called after each other (EvaluatedPropertiesAction first, then EvaluatedItemsAction),
+        //  so this function just checks the hashset (not to prevent execution of EvaluatedItemsAction) and EvaluatedItemsAction
+        //  updates the hashset.
+        if (_projectsSeen.Contains(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        context.Data.EvaluatedProperties.TryGetValue("SkipUnchangedFilesOnCopyAlways", out string? skipUnchanged);
+
+        if (skipUnchanged.IsMSBuildTrueString())
+        {
+            // Now we know that copy logic is optimized - so we do not need to check items. Avoiding the items check by inserting into lookup.
+            _projectsSeen.Add(context.Data.ProjectFilePath);
+        }
+    }
+
+    private void EvaluatedItemsAction(BuildCheckDataContext<EvaluatedItemsCheckData> context)
+    {
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects.
+        if (!_projectsSeen.Add(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        foreach (ItemData itemData in context.Data.EnumerateItemsOfTypes([ItemNames.Content, ItemNames.Compile, ItemNames.None, ItemNames.EmbeddedResource]))
+        {
+            foreach (KeyValuePair<string, string> keyValuePair in itemData.EnumerateMetadata())
+            {
+                if (MSBuildNameIgnoreCaseComparer.Default.Equals(keyValuePair.Key, ItemMetadataNames.copyToOutputDirectory))
+                {
+                    if (MSBuildNameIgnoreCaseComparer.Default.Equals(keyValuePair.Value, ItemMetadataNames.copyAlways))
+                    {
+                        // Project {0} specifies '{0}' item '{1}', ...
+                        context.ReportResult(BuildCheckResult.Create(
+                            SupportedRule,
+                            // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
+                            ElementLocation.EmptyLocation,
+                            Path.GetFileName(context.Data.ProjectFilePath),
+                            itemData.Type,
+                            itemData.EvaluatedInclude));
+                    }
+
+                    break;
+                }
+            }
+        }
+    }
+}
diff --git a/src/Build/BuildCheck/Checks/EmbeddedResourceCheck.cs b/src/Build/BuildCheck/Checks/EmbeddedResourceCheck.cs
index 73c7e6af9ed..aaeda56eaa6 100644
--- a/src/Build/BuildCheck/Checks/EmbeddedResourceCheck.cs
+++ b/src/Build/BuildCheck/Checks/EmbeddedResourceCheck.cs
@@ -43,7 +43,7 @@ private void EvaluatedItemsAction(BuildCheckDataContext<EvaluatedItemsCheckData>
             return;
         }
 
-        foreach (ItemData itemData in context.Data.EnumerateItemsOfType("EmbeddedResource"))
+        foreach (ItemData itemData in context.Data.EnumerateItemsOfType(ItemNames.EmbeddedResource))
         {
             string evaluatedEmbedItem = itemData.EvaluatedInclude;
             bool hasDoubleExtension = HasDoubleExtension(evaluatedEmbedItem);
@@ -74,7 +74,7 @@ private void EvaluatedItemsAction(BuildCheckDataContext<EvaluatedItemsCheckData>
             {
                 context.ReportResult(BuildCheckResult.Create(
                     SupportedRule,
-                    // Populating precise location tracked via https://github.com/orgs/dotnet/projects/373/views/1?pane=issue&itemId=58661732
+                    // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
                     ElementLocation.EmptyLocation,
                     Path.GetFileName(context.Data.ProjectFilePath),
                     evaluatedEmbedItem,
diff --git a/src/Build/BuildCheck/Checks/PreferProjectReferenceCheck.cs b/src/Build/BuildCheck/Checks/PreferProjectReferenceCheck.cs
index 373a41d20e6..85bbc9d8ba6 100644
--- a/src/Build/BuildCheck/Checks/PreferProjectReferenceCheck.cs
+++ b/src/Build/BuildCheck/Checks/PreferProjectReferenceCheck.cs
@@ -70,7 +70,7 @@ private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedProperties
         {
             context.ReportResult(BuildCheckResult.Create(
                 SupportedRule,
-                // Populating precise location tracked via https://github.com/orgs/dotnet/projects/373/views/1?pane=issue&itemId=58661732
+                // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
                 ElementLocation.EmptyLocation,
                 Path.GetFileName(context.Data.ProjectFilePath),
                 Path.GetFileName(projectProducingOutput.Item1),
@@ -87,7 +87,7 @@ private void EvaluatedItemsAction(BuildCheckDataContext<EvaluatedItemsCheckData>
             return;
         }
 
-        foreach (ItemData itemData in context.Data.EnumerateItemsOfType(ItemNames.reference))
+        foreach (ItemData itemData in context.Data.EnumerateItemsOfType(ItemNames.Reference))
         {
             string evaluatedReferencePath = itemData.EvaluatedInclude;
             string referenceFullPath = BuildCheckUtilities.RootEvaluatedPath(evaluatedReferencePath, context.Data.ProjectFilePath);
@@ -98,7 +98,7 @@ private void EvaluatedItemsAction(BuildCheckDataContext<EvaluatedItemsCheckData>
             {
                 context.ReportResult(BuildCheckResult.Create(
                     SupportedRule,
-                    // Populating precise location tracked via https://github.com/orgs/dotnet/projects/373/views/1?pane=issue&itemId=58661732
+                    // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
                     ElementLocation.EmptyLocation,
                     Path.GetFileName(projectReferencedViaOutput),
                     Path.GetFileName(context.Data.ProjectFilePath),
diff --git a/src/Build/BuildCheck/Checks/SharedOutputPathCheck.cs b/src/Build/BuildCheck/Checks/SharedOutputPathCheck.cs
index 7aeb00266d1..fe80a4ded80 100644
--- a/src/Build/BuildCheck/Checks/SharedOutputPathCheck.cs
+++ b/src/Build/BuildCheck/Checks/SharedOutputPathCheck.cs
@@ -76,7 +76,7 @@ private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedProperties
         {
             context.ReportResult(BuildCheckResult.CreateBuiltIn(
                 SupportedRule,
-                // Populating precise location tracked via https://github.com/orgs/dotnet/projects/373/views/1?pane=issue&itemId=58661732
+                // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
                 ElementLocation.EmptyLocation,
                 Path.GetFileName(projectPath),
                 Path.GetFileName(conflictingProject),
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
index 3476f3dbf8a..cc9ee125ac1 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
@@ -147,6 +147,7 @@ internal readonly record struct BuiltInCheckFactory(
             [
                 new BuiltInCheckFactory([SharedOutputPathCheck.SupportedRule.Id], SharedOutputPathCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<SharedOutputPathCheck>),
                 new BuiltInCheckFactory([PreferProjectReferenceCheck.SupportedRule.Id], PreferProjectReferenceCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<PreferProjectReferenceCheck>),
+                new BuiltInCheckFactory([CopyAlwaysCheck.SupportedRule.Id], CopyAlwaysCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<CopyAlwaysCheck>),
                 new BuiltInCheckFactory([DoubleWritesCheck.SupportedRule.Id], DoubleWritesCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<DoubleWritesCheck>),
                 new BuiltInCheckFactory([NoEnvironmentVariablePropertyCheck.SupportedRule.Id], NoEnvironmentVariablePropertyCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<NoEnvironmentVariablePropertyCheck>),
                 new BuiltInCheckFactory([EmbeddedResourceCheck.SupportedRule.Id], EmbeddedResourceCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<EmbeddedResourceCheck>),
diff --git a/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs b/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
index 260b02cc466..c24ba4bda1d 100644
--- a/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
+++ b/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
@@ -79,6 +79,11 @@ internal EvaluatedItemsCheckData(
     /// Lazy enumerates evaluated items for a current project. Only items with matching type will be returned (case-insensitive, MSBuild valid names only).
     /// </summary>
     public IEnumerable<ItemData> EnumerateItemsOfType(string typeName) => _evaluationFinishedEventArgs.EnumerateItemsOfType(typeName);
+
+    /// <summary>
+    /// Lazy enumerates evaluated items for a current project. Only items with matching type will be returned (case-insensitive, MSBuild valid names only, matching any type from the given list).
+    /// </summary>
+    public IEnumerable<ItemData> EnumerateItemsOfTypes(string[] typeNames) => _evaluationFinishedEventArgs.EnumerateItemsOfTypes(typeNames);
 }
 
 /// <summary>
diff --git a/src/Build/CompatibilitySuppressions.xml b/src/Build/CompatibilitySuppressions.xml
index 77490a3e2ef..32ca2f65e88 100644
--- a/src/Build/CompatibilitySuppressions.xml
+++ b/src/Build/CompatibilitySuppressions.xml
@@ -1,46 +1,4 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <!-- https://learn.microsoft.com/dotnet/fundamentals/package-validation/diagnostic-ids -->
 <Suppressions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterEvaluatedItemsAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.EvaluatedItemsCheckData}})</Target>
-    <Left>lib/net472/Microsoft.Build.dll</Left>
-    <Right>lib/net472/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterProjectImportedAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.ProjectImportedCheckData}})</Target>
-    <Left>lib/net472/Microsoft.Build.dll</Left>
-    <Right>lib/net472/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterEvaluatedItemsAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.EvaluatedItemsCheckData}})</Target>
-    <Left>lib/net9.0/Microsoft.Build.dll</Left>
-    <Right>lib/net9.0/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterProjectImportedAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.ProjectImportedCheckData}})</Target>
-    <Left>lib/net9.0/Microsoft.Build.dll</Left>
-    <Right>lib/net9.0/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterEvaluatedItemsAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.EvaluatedItemsCheckData}})</Target>
-    <Left>ref/net9.0/Microsoft.Build.dll</Left>
-    <Right>ref/net9.0/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterProjectImportedAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.ProjectImportedCheckData}})</Target>
-    <Left>ref/net9.0/Microsoft.Build.dll</Left>
-    <Right>ref/net9.0/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
 </Suppressions>
\ No newline at end of file
diff --git a/src/Build/Logging/BuildEventArgsExtensions.cs b/src/Build/Logging/BuildEventArgsExtensions.cs
index e65ffcd7902..33b971eefc1 100644
--- a/src/Build/Logging/BuildEventArgsExtensions.cs
+++ b/src/Build/Logging/BuildEventArgsExtensions.cs
@@ -45,6 +45,15 @@ public static IEnumerable<ItemData> EnumerateItemsOfType(
         this ProjectEvaluationFinishedEventArgs eventArgs, string typeName)
         => EnumerateItemsOfType(eventArgs.Items, typeName);
 
+    /// <summary>
+    /// Lazy enumerates and partially strong types items from Items property. Only items with any matching type will be returned (case-insensitive, MSBuild valid names only).
+    /// The actual item value is proxied via accessor methods - to be able to provide defined interface
+    /// </summary>
+    /// <returns></returns>
+    public static IEnumerable<ItemData> EnumerateItemsOfTypes(
+        this ProjectEvaluationFinishedEventArgs eventArgs, string[] typeNames)
+        => EnumerateItemsOfTypes(eventArgs.Items, typeNames);
+
     /// <summary>
     /// Lazy enumerates and strong types items from Items property.
     /// The actual item value is proxied via accessor methods - to be able to provide defined interface
@@ -62,6 +71,15 @@ public static IEnumerable<ItemData> EnumerateItemsOfType(
         this ProjectStartedEventArgs eventArgs, string typeName)
         => EnumerateItemsOfType(eventArgs.Items, typeName);
 
+    /// <summary>
+    /// Lazy enumerates and partially strong types items from Items property. Only items with any matching type will be returned (case-insensitive, MSBuild valid names only).
+    /// The actual item value is proxied via accessor methods - to be able to provide defined interface
+    /// </summary>
+    /// <returns></returns>
+    public static IEnumerable<ItemData> EnumerateItemsOfTypes(
+        this ProjectStartedEventArgs eventArgs, string[] typeNames)
+        => EnumerateItemsOfTypes(eventArgs.Items, typeNames);
+
     private static IEnumerable<PropertyData> EnumerateProperties(IEnumerable? properties)
         => Internal.Utilities.EnumerateProperties(properties);
 
@@ -70,4 +88,7 @@ private static IEnumerable<ItemData> EnumerateItems(IEnumerable? items)
 
     private static IEnumerable<ItemData> EnumerateItemsOfType(IEnumerable? items, string typeName)
         => Internal.Utilities.EnumerateItemsOfType(items, typeName);
+
+    private static IEnumerable<ItemData> EnumerateItemsOfTypes(IEnumerable? items, string[] typeNames)
+        => Internal.Utilities.EnumerateItemsOfTypes(items, typeNames);
 }
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index 0a1505b7eb2..01ebc97d203 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -2176,11 +2176,19 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
   </data>
   <data name="BuildCheck_BC0105_Title" xml:space="preserve">
     <value>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</value>
-	<comment>Terms in quotes are not to be translated.</comment>
+	  <comment>Terms in quotes are not to be translated.</comment>
   </data>
   <data name="BuildCheck_BC0105_MessageFmt" xml:space="preserve">
     <value>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</value>
-	<comment>Terms in quotes are not to be translated.</comment>
+	  <comment>Terms in quotes are not to be translated.</comment>
+  </data>
+  <data name="BuildCheck_BC0106_Title" xml:space="preserve">
+    <value>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</value>
+	  <comment>Terms in quotes are not to be translated.</comment>
+  </data>
+  <data name="BuildCheck_BC0106_MessageFmt" xml:space="preserve">
+    <value>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</value>
+	  <comment>Terms in quotes are not to be translated.</comment>
   </data>
   <data name="BuildCheck_BC0107_Title" xml:space="preserve">
     <value>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</value>
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index 084e04fd5a5..f21e4ff48ce 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">K vlastnosti: {0} bylo přistupováno, ale nebyla nikdy inicializována.</target>
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index 8fde61320d0..592405151c0 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Auf die Eigenschaft „{0}“ wurde zugegriffen, sie wurde jedoch nie initialisiert.</target>
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index cdd78c485b5..a0b554c8313 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Propiedad: se obtuvo acceso a "{0}", pero nunca se inicializó.</target>
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index e760ea25baf..f5aef23bd15 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Propriété : « {0} » a été consultée, mais elle n'a jamais été initialisée.</target>
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index c87332a45c1..b3afa26c544 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">È stato eseguito l'accesso alla proprietà '{0}', ma non è mai stata inizializzata.</target>
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 34fb04dee89..0272fbbc633 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">プロパティ: '{0}' にアクセスしましたが、初期化されませんでした。</target>
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index c43856c93f3..d161bd1f570 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">속성: '{0}'에 액세스했지만 초기화되지 않았습니다.</target>
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index 15dd91c7e45..ca9fe6569f8 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Właściwość: uzyskano dostęp do „{0}”, ale nigdy nie dokonano inicjacji.</target>
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index 3f11cf9738b..2777e8e9701 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Propriedade: "{0}" foi acessada, mas nunca foi inicializada.</target>
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index c80b270fb6d..eb0191433c3 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Свойство: к "{0}" получен доступ, но он не инициализирован.</target>
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index 290ae352625..ff96e148c91 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">'{0}' özelliğine erişildi, ancak hiç başlatılmadı.</target>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index 93ab2e25078..e9b3d3bca96 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">已访问属性“{0}”，但从未将其初始化过。</target>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index dca8d748933..474738effa9 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -201,6 +201,16 @@
         <target state="new">'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</target>
         <note>Terms in quotes are not to be translated.</note>
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="new">Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="new">Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">已存取屬性: '{0}'，但從未初始化。</target>
diff --git a/src/Build/Utilities/Utilities.cs b/src/Build/Utilities/Utilities.cs
index 6811def46cd..f68d76b00c1 100644
--- a/src/Build/Utilities/Utilities.cs
+++ b/src/Build/Utilities/Utilities.cs
@@ -758,7 +758,38 @@ public static IEnumerable<ItemData> EnumerateItemsOfType(IEnumerable items, stri
             }
             else
             {
-                return CastItemsOneByOne(items, typeName);
+                return CastItemsOneByOne(items, [typeName]);
+            }
+        }
+
+        /// <summary>
+        /// Enumerates the given nongeneric enumeration and tries to match or wrap appropriate item types.
+        /// Only items with matching type (case insensitive, MSBuild valid names only) will be returned.
+        /// </summary>
+        public static IEnumerable<ItemData> EnumerateItemsOfTypes(IEnumerable items, string[] typeNames)
+        {
+            if (items == null)
+            {
+                return [];
+            }
+
+            if (items is ItemDictionary<ProjectItemInstance> projectItemInstanceDictionary)
+            {
+                return typeNames.Select(typeName =>
+                    projectItemInstanceDictionary[typeName]
+                        .Select(i => new ItemData(i.ItemType, (IItemData)i)))
+                        .SelectMany(j => j);
+            }
+            else if (items is ItemDictionary<ProjectItem> projectItemDictionary)
+            {
+                return typeNames.Select(typeName =>
+                        projectItemDictionary[typeName]
+                            .Select(i => new ItemData(i.ItemType, (IItemData)i)))
+                    .SelectMany(j => j);
+            }
+            else
+            {
+                return CastItemsOneByOne(items, typeNames);
             }
         }
 
@@ -777,9 +808,9 @@ public static void EnumerateItems(IEnumerable items, Action<DictionaryEntry> cal
         /// Enumerates the nongeneric items and attempts to cast them.
         /// </summary>
         /// <param name="items">Nongeneric list of items.</param>
-        /// <param name="itemTypeNameToFetch">If not null, only the items with matching type (case insensitive, MSBuild valid names only) will be returned.</param>
+        /// <param name="itemTypeNamesToFetch">If not null, only the items with matching type (case insensitive, MSBuild valid names only) will be returned.</param>
         /// <returns></returns>
-        private static IEnumerable<ItemData> CastItemsOneByOne(IEnumerable items, string itemTypeNameToFetch)
+        private static IEnumerable<ItemData> CastItemsOneByOne(IEnumerable items, string[] itemTypeNamesToFetch)
         {
             foreach (var item in items)
             {
@@ -809,7 +840,7 @@ private static IEnumerable<ItemData> CastItemsOneByOne(IEnumerable items, string
                 }
 
                 // if itemTypeNameToFetch was not set - then return all items
-                if (itemValue != null && (itemTypeNameToFetch == null || MSBuildNameIgnoreCaseComparer.Default.Equals(itemType, itemTypeNameToFetch)))
+                if (itemValue != null && (itemTypeNamesToFetch == null || itemTypeNamesToFetch.Any(tp => MSBuildNameIgnoreCaseComparer.Default.Equals(itemType, tp))))
                 {
                     // The ProjectEvaluationFinishedEventArgs.Items are currently assigned only in Evaluator.Evaluate()
                     //  where the only types that can be assigned are ProjectItem or ProjectItemInstance
diff --git a/src/BuildCheck.UnitTests/EndToEndTests.cs b/src/BuildCheck.UnitTests/EndToEndTests.cs
index 6cef54f4dd7..545bb46ef57 100644
--- a/src/BuildCheck.UnitTests/EndToEndTests.cs
+++ b/src/BuildCheck.UnitTests/EndToEndTests.cs
@@ -1,4 +1,4 @@
-﻿// Licensed to the .NET Foundation under one or more agreements.
+// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
@@ -12,6 +12,7 @@
 using Microsoft.Build.Shared;
 using Microsoft.Build.UnitTests;
 using Microsoft.Build.UnitTests.Shared;
+using Microsoft.VisualStudio.TestPlatform.Utilities;
 using Shouldly;
 using Xunit;
 using Xunit.Abstractions;
@@ -147,14 +148,6 @@ void AssertHasResourceForCulture(string culture, bool isResourceExpected)
                     $"Unexpected resource for culture {culture} was found in deps.json:{Environment.NewLine}{output.DepsJsonResources.ToString()}");
             }
         }
-
-        int GetWarningsCount(string output)
-        {
-            Regex regex = new Regex(@"(\d+) Warning\(s\)");
-            Match match = regex.Match(output);
-            match.Success.ShouldBeTrue("Expected Warnings section not found in the build output.");
-            return int.Parse(match.Groups[1].Value);
-        }
     }
 
     private readonly record struct EmbedResourceTestOutput(String LogOutput, JsonObject DepsJsonResources);
@@ -218,6 +211,111 @@ private static void CopyFilesRecursively(string sourcePath, string targetPath)
         }
     }
 
+    private static int GetWarningsCount(string output)
+    {
+        Regex regex = new Regex(@"(\d+) Warning\(s\)");
+        Match match = regex.Match(output);
+        match.Success.ShouldBeTrue("Expected Warnings section not found in the build output.");
+        return int.Parse(match.Groups[1].Value);
+    }
+
+    private readonly record struct CopyTestOutput(
+        String LogOutput,
+        string File1Path,
+        string File2Path,
+        DateTime File1WriteUtc,
+        DateTime File2WriteUtc,
+        DateTime File1AccessUtc,
+        DateTime File2AccessUtc);
+
+    private CopyTestOutput RunCopyToOutputTest(bool restore, bool skipUnchangedDuringCopy)
+    {
+        string output = RunnerUtilities.ExecBootstrapedMSBuild($"-check {(restore ? "-restore" : null)} /p:SkipUnchanged={(skipUnchangedDuringCopy ? "True" : "\"\"")}", out bool success);
+        _env.Output.WriteLine(output);
+        _env.Output.WriteLine("=========================");
+        success.ShouldBeTrue();
+
+        // We should get warning only if we didn't opted-into the new behavior
+        if (!skipUnchangedDuringCopy)
+        {
+            string expectedDiagnostic = "warning BC0106: .* that has 'CopyToOutputDirectory' set as 'Always'";
+            Regex.Matches(output, expectedDiagnostic).Count.ShouldBe(2);
+        }
+
+        GetWarningsCount(output).ShouldBe(skipUnchangedDuringCopy ? 0 : 1);
+
+        string[] outFile1 = Directory.GetFiles(".", "File1.txt", SearchOption.AllDirectories);
+        outFile1.Length.ShouldBe(1);
+
+        string[] outFile2 = Directory.GetFiles(".", "File2.txt", SearchOption.AllDirectories);
+        outFile2.Length.ShouldBe(1);
+
+        // File.Copy does reuse LastWriteTime of source file
+        return new(
+            output,
+            outFile1[0],
+            outFile2[0],
+            File.GetLastWriteTimeUtc(outFile1[0]),
+            File.GetLastWriteTimeUtc(outFile2[0]),
+            File.GetLastAccessTimeUtc(outFile1[0]),
+            File.GetLastAccessTimeUtc(outFile2[0]));
+    }
+
+    [Theory]
+    [InlineData(false)]
+    [InlineData(true)]
+    public void CopyToOutputTest(bool skipUnchangedDuringCopy)
+    {
+        string testAssetsFolderName = "CopyAlwaysTest";
+        const string entryProjectName = "EntryProject";
+        TransientTestFolder workFolder = _env.CreateFolder(createFolder: true);
+
+        CopyFilesRecursively(Path.Combine(TestAssetsRootPath, testAssetsFolderName), workFolder.Path);
+
+        _env.SetCurrentDirectory(Path.Combine(workFolder.Path, entryProjectName));
+
+        var output1 = RunCopyToOutputTest(true, skipUnchangedDuringCopy);
+
+        // Run again - just Always should be copied
+        // Careful - unix based OS might not update access time on writes. 
+
+        var output2 = RunCopyToOutputTest(false, skipUnchangedDuringCopy);
+
+        // CopyToOutputDirectory="Always"
+        if (skipUnchangedDuringCopy)
+        {
+            output2.File1AccessUtc.ShouldBeEquivalentTo(output1.File1AccessUtc);
+            output2.File1WriteUtc.ShouldBeEquivalentTo(output1.File1WriteUtc);
+        }
+        else
+        {
+            output2.File1WriteUtc.ShouldBeEquivalentTo(output1.File1WriteUtc);
+        }
+        // CopyToOutputDirectory="IfDifferent"
+        output2.File2AccessUtc.ShouldBeEquivalentTo(output1.File2AccessUtc);
+        output2.File2WriteUtc.ShouldBeEquivalentTo(output1.File2WriteUtc);
+
+        // Change both in output
+
+        File.WriteAllLines(output2.File1Path, ["foo"]);
+        File.WriteAllLines(output2.File2Path, ["foo"]);
+
+        DateTime file1WriteUtc = File.GetLastWriteTimeUtc(output2.File1Path);
+        DateTime file2WriteUtc = File.GetLastWriteTimeUtc(output2.File2Path);
+
+        file1WriteUtc.ShouldBeGreaterThan(output2.File1WriteUtc);
+        file2WriteUtc.ShouldBeGreaterThan(output2.File2WriteUtc);
+
+        // Run again - both should be copied
+
+        var output3 = RunCopyToOutputTest(false, skipUnchangedDuringCopy);
+
+        // We are now overwriting the newer file in output with the older file from sources.
+        // Which is wanted - as we want to copy on any difference.
+        output3.File1WriteUtc.ShouldBeLessThan(file1WriteUtc);
+        output3.File2WriteUtc.ShouldBeLessThan(file2WriteUtc);
+    }
+
 
     [Theory]
     [InlineData(true, true)]
@@ -303,14 +401,6 @@ void ReplaceStringInFile(string filePath, string original, string replacement)
         }
     }
 
-    private static int GetWarningsCount(string output)
-    {
-        Regex regex = new Regex(@"(\d+) Warning\(s\)");
-        Match match = regex.Match(output);
-        match.Success.ShouldBeTrue("Expected Warnings section not found in the build output.");
-        return int.Parse(match.Groups[1].Value);
-    }
-
 
     [Fact]
     public void ConfigChangeReflectedOnReuse()
@@ -489,7 +579,7 @@ public void EditorConfig_SeverityAppliedCorrectly(string BC0101Severity, string?
         }
     }
 
-    [Fact]
+    [Fact(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
     public void CheckHasAccessToAllConfigs()
     {
         using (var env = TestEnvironment.Create())
@@ -667,7 +757,7 @@ public void NoEnvironmentVariableProperty_DeferredProcessing(bool warnAsError, b
         }
     }
 
-    [Theory]
+    [Theory(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
     [InlineData("CheckCandidate", new[] { "CustomRule1", "CustomRule2" })]
     [InlineData("CheckCandidateWithMultipleChecksInjected", new[] { "CustomRule1", "CustomRule2", "CustomRule3" }, true)]
     public void CustomCheckTest_NoEditorConfig(string checkCandidate, string[] expectedRegisteredRules, bool expectedRejectedChecks = false)
@@ -700,7 +790,7 @@ public void CustomCheckTest_NoEditorConfig(string checkCandidate, string[] expec
         }
     }
 
-    [Theory]
+    [Theory(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
     [InlineData("CheckCandidate", "X01234", "error", "error X01234: http://samplelink.com/X01234")]
     [InlineData("CheckCandidateWithMultipleChecksInjected", "X01234", "warning", "warning X01234: http://samplelink.com/X01234")]
     public void CustomCheckTest_WithEditorConfig(string checkCandidate, string ruleId, string severity, string expectedMessage)
@@ -727,7 +817,7 @@ public void CustomCheckTest_WithEditorConfig(string checkCandidate, string ruleI
         }
     }
 
-    [Theory]
+    [Theory(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
     [InlineData("X01236", "ErrorOnInitializeCheck", "Something went wrong initializing")]
     [InlineData("X01237", "ErrorOnRegisteredAction", "something went wrong when executing registered action")]
     [InlineData("X01238", "ErrorWhenRegisteringActions", "something went wrong when registering actions")]
@@ -777,7 +867,7 @@ public void DoesNotRunOnRestore(bool buildInOutOfProcessNode)
     }
 
 #if NET
-    [Fact]
+    [Fact(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
     public void TestBuildCheckTemplate()
     {
         TransientTestFolder workFolder = _env.CreateFolder(createFolder: true);
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/Directory.Build.props b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/Directory.Build.props
new file mode 100644
index 00000000000..be6dfe73b2c
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/Directory.Build.props
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project>
+
+  <PropertyGroup>
+    <SkipUnchangedFilesOnCopyAlways>$(SkipUnchanged)</SkipUnchangedFilesOnCopyAlways>
+  </PropertyGroup>
+
+</Project>
\ No newline at end of file
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/EntryProject/EntryProject.csproj b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/EntryProject/EntryProject.csproj
new file mode 100644
index 00000000000..1ac36d043de
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/EntryProject/EntryProject.csproj
@@ -0,0 +1,13 @@
+﻿<Project Sdk="Microsoft.NET.Sdk">
+
+  <PropertyGroup>
+    <TargetFramework>net9.0</TargetFramework>
+    <ImplicitUsings>enable</ImplicitUsings>
+    <Nullable>enable</Nullable>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <ProjectReference Include="..\ReferencedProject\ReferencedProject.csproj" />
+  </ItemGroup>
+
+</Project>
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/File1.txt b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/File1.txt
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/File2.txt b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/File2.txt
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/ReferencedProject.csproj b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/ReferencedProject.csproj
new file mode 100644
index 00000000000..7b9f7116c8f
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/ReferencedProject.csproj
@@ -0,0 +1,14 @@
+<Project Sdk="Microsoft.NET.Sdk">
+
+  <PropertyGroup>
+    <TargetFramework>net9.0</TargetFramework>
+    <ImplicitUsings>enable</ImplicitUsings>
+    <Nullable>enable</Nullable>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <None Include="File1.txt" CopyToOutputDirectory="Always" />
+    <None Include="File2.txt" CopyToOutputDirectory="IfDifferent" />
+  </ItemGroup>
+
+</Project>
diff --git a/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/ReferencedProject.csproj b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/ReferencedProject.csproj
index 3950740a4da..4208181be80 100644
--- a/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/ReferencedProject.csproj
+++ b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/ReferencedProject.csproj
@@ -7,25 +7,17 @@
     <Nullable>enable</Nullable>
   </PropertyGroup>
 
-  <ItemGroup>
-    <Compile Update="Resource1.Designer.cs">
-      <DesignTime>True</DesignTime>
-      <AutoGen>True</AutoGen>
-      <DependentUpon>Resource1.resx</DependentUpon>
-    </Compile>
-  </ItemGroup>
-
-	<PropertyGroup>
-		<RespectAlreadyAssignedItemCulture>$(RespectCulture)</RespectAlreadyAssignedItemCulture>
-	</PropertyGroup>
+  <PropertyGroup>
+    <RespectAlreadyAssignedItemCulture>$(RespectCulture)</RespectAlreadyAssignedItemCulture>
+  </PropertyGroup>
 
   <ItemGroup>
     <EmbeddedResource Update="Resource1.resx">
     </EmbeddedResource>
-	  <EmbeddedResource Update="Resource1.en.resx">
-		  <Culture>en</Culture>
-		  <LogicalName>Test.en.resources</LogicalName>
-	  </EmbeddedResource>
+    <EmbeddedResource Update="Resource1.en.resx">
+      <Culture>en</Culture>
+      <LogicalName>Test.en.resources</LogicalName>
+    </EmbeddedResource>
     ###EmbeddedResourceToAdd
   </ItemGroup>
 
diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Linux.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Linux.verified.txt
new file mode 100644
index 00000000000..7e88eaa0b95
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Linux.verified.txt
@@ -0,0 +1,12 @@
+﻿]9;4;3;\  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+[?25l[1F
+[?25h
+Build summary:
+  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+
+Build [31;1mfailed with 1 error(s) and 1 warning(s)[m in 5.0s
+]9;4;0;\
\ No newline at end of file
diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.OSX.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.OSX.verified.txt
new file mode 100644
index 00000000000..42a61e2fbbb
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.OSX.verified.txt
@@ -0,0 +1,12 @@
+﻿  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+[?25l[1F
+[?25h
+Build summary:
+  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+
+Build [31;1mfailed with 1 error(s) and 1 warning(s)[m in 5.0s
+
diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Windows.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Windows.verified.txt
new file mode 100644
index 00000000000..7e88eaa0b95
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Windows.verified.txt
@@ -0,0 +1,12 @@
+﻿]9;4;3;\  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+[?25l[1F
+[?25h
+Build summary:
+  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+
+Build [31;1mfailed with 1 error(s) and 1 warning(s)[m in 5.0s
+]9;4;0;\
\ No newline at end of file
diff --git a/src/MSBuild.UnitTests/TerminalLogger_Tests.cs b/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
index bfcf0ddf585..a97f2c683cc 100644
--- a/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
+++ b/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
@@ -414,6 +414,26 @@ public Task PrintBuildSummary_FailedWithErrors()
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
 
+        [Fact]
+        public Task PrintDetailedBuildSummary_FailedWithErrorAndWarning()
+        {
+            string? originalParameters = _terminallogger.Parameters;
+            _terminallogger.Parameters = "SUMMARY";
+            _terminallogger.ParseParameters();
+
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, () =>
+            {
+                WarningRaised?.Invoke(_eventSender, MakeWarningEventArgs("Warning!"));
+                ErrorRaised?.Invoke(_eventSender, MakeErrorEventArgs("Error!"));
+            });
+
+            // Restore original parameters
+            _terminallogger.Parameters = originalParameters;
+            _terminallogger.ParseParameters();
+
+            return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
+        }
+
         [Fact]
         public Task PrintBuildSummary_FailedWithErrorsAndWarnings()
         {
diff --git a/src/MSBuild/Resources/Strings.resx b/src/MSBuild/Resources/Strings.resx
index 0a0ac48dc13..ece0160d846 100644
--- a/src/MSBuild/Resources/Strings.resx
+++ b/src/MSBuild/Resources/Strings.resx
@@ -1661,6 +1661,12 @@
       's' should reflect the localized abbreviation for seconds
     </comment>
   </data>
+  <data name="BuildSummary" xml:space="preserve">
+    <value>Build summary:</value>
+    <comment>
+      A header used by Terminal Logger to introduce the build summary.
+    </comment>
+  </data>
   <data name="BuildResult_FailedWithErrors" xml:space="preserve">
     <value>failed with {0} error(s)</value>
     <comment>
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index f3239abb2cb..ae1cc82bcde 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -65,6 +65,13 @@
         <target state="translated">akce proběhla úspěšně s {0} upozorněním(i).</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index d7fb58897c7..9a6f40c211a 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -65,6 +65,13 @@
         <target state="translated">erfolgreich mit {0} Warnung(en)</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index fc01707fc5d..a4efc5fbe67 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -65,6 +65,13 @@
         <target state="translated">correcto con {0} advertencias</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 83094e546db..25303575605 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -65,6 +65,13 @@
         <target state="translated">a réussi avec {0} avertissement(s)</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index 6c513308d99..1d6ba50eb0d 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -65,6 +65,13 @@
         <target state="translated">completato con {0} avvisi</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index 6755b1fc171..d0ddddead98 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -65,6 +65,13 @@
         <target state="translated">{0} 件の警告付きで成功しました</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 9e8b9de1dfa..8e6560daf49 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -65,6 +65,13 @@
         <target state="translated">{0} 경고와 함께 성공</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index 815886c7de9..a42e0e4f5e5 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -65,6 +65,13 @@
         <target state="translated">zakończono powodzeniem, z ostrzeżeniami w liczbie: {0}</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index d5738d0f8e9..be0a3cfcdf5 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -65,6 +65,13 @@
         <target state="translated">êxito(s) com {0} aviso(s)</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index eabd3b267b5..a6abaa1f4a0 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -65,6 +65,13 @@
         <target state="translated">успешно выполнено с предупреждениями ({0})</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index eb4eb23bfba..5ba264c7cc6 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -65,6 +65,13 @@
         <target state="translated">{0} uyarıyla başarılı oldu</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index 3f343348633..921a7a50e3f 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -65,6 +65,13 @@
         <target state="translated">成功，出现 {0} 警告</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index f14b8436e8b..e83d5bbd6d7 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -65,6 +65,13 @@
         <target state="translated">成功但有 {0} 個警告</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="new">Build summary:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/TerminalLogger/Project.cs b/src/MSBuild/TerminalLogger/Project.cs
index eabfd989c3e..e32d3686dc7 100644
--- a/src/MSBuild/TerminalLogger/Project.cs
+++ b/src/MSBuild/TerminalLogger/Project.cs
@@ -4,6 +4,7 @@
 using System;
 using System.Collections.Generic;
 using System.Diagnostics;
+using System.Linq;
 
 namespace Microsoft.Build.Logging.TerminalLogger;
 
@@ -12,12 +13,15 @@ namespace Microsoft.Build.Logging.TerminalLogger;
 /// </summary>
 internal sealed class Project
 {
+    private List<BuildMessage>? _buildMessages;
+
     /// <summary>
     /// Initialized a new <see cref="Project"/> with the given <paramref name="targetFramework"/>.
     /// </summary>
     /// <param name="targetFramework">The target framework of the project or null if not multi-targeting.</param>
-    public Project(string? targetFramework, StopwatchAbstraction? stopwatch)
+    public Project(string projectFile, string? targetFramework, StopwatchAbstraction? stopwatch)
     {
+        File = projectFile;
         TargetFramework = targetFramework;
 
         if (stopwatch is not null)
@@ -31,6 +35,8 @@ public Project(string? targetFramework, StopwatchAbstraction? stopwatch)
         }
     }
 
+    public string File { get; }
+
     /// <summary>
     /// A stopwatch to time the build of the project.
     /// </summary>
@@ -56,17 +62,59 @@ public Project(string? targetFramework, StopwatchAbstraction? stopwatch)
     /// </summary>
     public bool IsCachePluginProject { get; set; }
 
+    /// <summary>
+    /// True if project built successfully; otherwise false.
+    /// </summary>
+    public bool Succeeded { get; set; }
+
+    /// <summary>
+    /// The number of errors raised during the build of the project.
+    /// </summary>
+    public int ErrorCount { get; private set; }
+
+    /// <summary>
+    /// The number of warnings raised during the build of the project.
+    /// </summary>
+    public int WarningCount { get; private set; }
+
+    /// <summary>
+    /// True when the project has error or warning build messages; otherwise false.
+    /// </summary>
+    public bool HasErrorsOrWarnings => ErrorCount > 0 || WarningCount > 0;
+
     /// <summary>
     /// A lazily initialized list of build messages/warnings/errors raised during the build.
     /// </summary>
-    public List<BuildMessage>? BuildMessages { get; private set; }
+    public IReadOnlyList<BuildMessage>? BuildMessages => _buildMessages;
 
     /// <summary>
     /// Adds a build message of the given severity to <see cref="BuildMessages"/>.
     /// </summary>
     public void AddBuildMessage(MessageSeverity severity, string message)
     {
-        BuildMessages ??= new List<BuildMessage>();
-        BuildMessages.Add(new BuildMessage(severity, message));
+        _buildMessages ??= new List<BuildMessage>();
+        _buildMessages.Add(new BuildMessage(severity, message));
+
+        if (severity == MessageSeverity.Error)
+        {
+            ErrorCount++;
+        }
+        else if (severity == MessageSeverity.Warning)
+        {
+            WarningCount++;
+        }
+    }
+
+    /// <summary>
+    /// Filters the build messages to only include errors and warnings.
+    /// </summary>
+    /// <returns>A sequence of error and warning build messages.</returns>
+    public IEnumerable<BuildMessage> GetBuildErrorAndWarningMessages()
+    {
+        return BuildMessages is null ?
+            Enumerable.Empty<BuildMessage>() :
+            BuildMessages.Where(message =>
+                message.Severity == MessageSeverity.Error ||
+                message.Severity == MessageSeverity.Warning);
     }
 }
diff --git a/src/MSBuild/TerminalLogger/TerminalLogger.cs b/src/MSBuild/TerminalLogger/TerminalLogger.cs
index 85a4baf1e08..d4dc4346cf9 100644
--- a/src/MSBuild/TerminalLogger/TerminalLogger.cs
+++ b/src/MSBuild/TerminalLogger/TerminalLogger.cs
@@ -221,6 +221,11 @@ public ProjectContext(BuildEventContext context)
     /// </summary>
     private bool _showCommandLine = false;
 
+    /// <summary>
+    /// Indicates whether to show the build summary.
+    /// </summary>
+    private bool? _showSummary;
+
     private uint? _originalConsoleMode;
 
     /// <summary>
@@ -320,6 +325,12 @@ private void ApplyParameter(string parameterName, string? parameterValue)
             case "SHOWCOMMANDLINE":
                 TryApplyShowCommandLineParameter(parameterValue);
                 break;
+            case "SUMMARY":
+                _showSummary = true;
+                break;
+            case "NOSUMMARY":
+                _showSummary = false;
+                break;
         }
     }
 
@@ -334,9 +345,7 @@ private void ApplyVerbosityParameter(string? parameterValue)
         }
         else
         {
-            string errorCode;
-            string helpKeyword;
-            string message = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(out errorCode, out helpKeyword, "InvalidVerbosity", parameterValue);
+            string message = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(out string errorCode, out string helpKeyword, "InvalidVerbosity", parameterValue);
             throw new LoggerException(message, null, errorCode, helpKeyword);
         }
     }
@@ -401,15 +410,13 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
         _cts.Cancel();
         _refresher?.Join();
 
-        _projects.Clear();
-
         Terminal.BeginUpdate();
         try
         {
             if (Verbosity > LoggerVerbosity.Quiet)
             {
                 string duration = (e.Timestamp - _buildStartTime).TotalSeconds.ToString("F1");
-                string buildResult = RenderBuildResult(e.Succeeded, _buildErrorsCount, _buildWarningsCount);
+                string buildResult = GetBuildResultString(e.Succeeded, _buildErrorsCount, _buildWarningsCount);
 
                 Terminal.WriteLine("");
                 if (_testRunSummaries.Any())
@@ -437,6 +444,11 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
                     Terminal.WriteLine(string.Join(CultureInfo.CurrentCulture.TextInfo.ListSeparator + " ", summaryAndTotalText, failedText, passedText, skippedText, durationText));
                 }
 
+                if (_showSummary == true)
+                {
+                    RenderBuildSummary();
+                }
+
                 if (_restoreFailed)
                 {
                     Terminal.WriteLine(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("RestoreCompleteWithMessage",
@@ -461,6 +473,7 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
             Terminal.EndUpdate();
         }
 
+        _projects.Clear();
         _testRunSummaries.Clear();
         _buildErrorsCount = 0;
         _buildWarningsCount = 0;
@@ -469,6 +482,33 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
         _testEndTime = null;
     }
 
+    private void RenderBuildSummary()
+    {
+        if (_buildErrorsCount == 0 && _buildWarningsCount == 0)
+        {
+            // No errors/warnings to display.
+            return;
+        }
+
+        Terminal.WriteLine(ResourceUtilities.GetResourceString("BuildSummary"));
+
+        foreach (Project project in _projects.Values.Where(p => p.HasErrorsOrWarnings))
+        {
+            string duration = project.Stopwatch.ElapsedSeconds.ToString("F1");
+            string buildResult = GetBuildResultString(project.Succeeded, project.ErrorCount, project.WarningCount);
+            string projectHeader = GetProjectFinishedHeader(project, buildResult, duration);
+
+            Terminal.WriteLine(projectHeader);
+
+            foreach (BuildMessage buildMessage in project.GetBuildErrorAndWarningMessages())
+            {
+                Terminal.WriteLine($"{DoubleIndentation}{buildMessage.Message}");
+            }
+        }
+
+        Terminal.WriteLine(string.Empty);
+    }
+
     private void StatusEventRaised(object sender, BuildStatusEventArgs e)
     {
         if (e is BuildCanceledEventArgs buildCanceledEventArgs)
@@ -496,7 +536,7 @@ private void ProjectStarted(object sender, ProjectStartedEventArgs e)
             {
                 targetFramework = null;
             }
-            _projects[c] = new(targetFramework, CreateStopwatch?.Invoke());
+            _projects[c] = new(e.ProjectFile!, targetFramework, CreateStopwatch?.Invoke());
 
             // First ever restore in the build is starting.
             if (e.TargetNames == "Restore" && !_restoreFinished)
@@ -535,6 +575,8 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
 
         if (_projects.TryGetValue(c, out Project? project))
         {
+            project.Succeeded = e.Succeeded;
+            project.Stopwatch.Stop();
             lock (_lock)
             {
                 Terminal.BeginUpdate();
@@ -545,26 +587,16 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
                     string duration = project.Stopwatch.ElapsedSeconds.ToString("F1");
                     ReadOnlyMemory<char>? outputPath = project.OutputPath;
 
-                    string projectFile = e.ProjectFile is not null ?
-                        Path.GetFileNameWithoutExtension(e.ProjectFile) :
-                        string.Empty;
-
                     // Build result. One of 'failed', 'succeeded with warnings', or 'succeeded' depending on the build result and diagnostic messages
                     // reported during build.
-                    int countErrors = project.BuildMessages?.Count(m => m.Severity == MessageSeverity.Error) ?? 0;
-                    int countWarnings = project.BuildMessages?.Count(m => m.Severity == MessageSeverity.Warning) ?? 0;
-
-                    string buildResult = RenderBuildResult(e.Succeeded, countErrors, countWarnings);
-
-                    bool haveErrors = countErrors > 0;
-                    bool haveWarnings = countWarnings > 0;
+                    string buildResult = GetBuildResultString(project.Succeeded, project.ErrorCount, project.WarningCount);
 
                     // Check if we're done restoring.
                     if (c == _restoreContext)
                     {
                         if (e.Succeeded)
                         {
-                            if (haveErrors || haveWarnings)
+                            if (project.HasErrorsOrWarnings)
                             {
                                 Terminal.WriteLine(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("RestoreCompleteWithMessage",
                                     buildResult,
@@ -591,46 +623,8 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
                     else if (project.OutputPath is not null || project.BuildMessages is not null || project.IsTestProject)
                     {
                         // Show project build complete and its output
-                        if (project.IsTestProject)
-                        {
-                            if (string.IsNullOrEmpty(project.TargetFramework))
-                            {
-                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("TestProjectFinished_NoTF",
-                                    Indentation,
-                                    projectFile,
-                                    buildResult,
-                                    duration));
-                            }
-                            else
-                            {
-                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("TestProjectFinished_WithTF",
-                                    Indentation,
-                                    projectFile,
-                                    AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
-                                    buildResult,
-                                    duration));
-                            }
-                        }
-                        else
-                        {
-                            if (string.IsNullOrEmpty(project.TargetFramework))
-                            {
-                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectFinished_NoTF",
-                                    Indentation,
-                                    projectFile,
-                                    buildResult,
-                                    duration));
-                            }
-                            else
-                            {
-                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectFinished_WithTF",
-                                    Indentation,
-                                    projectFile,
-                                    AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
-                                    buildResult,
-                                    duration));
-                            }
-                        }
+                        string projectFinishedHeader = GetProjectFinishedHeader(project, buildResult, duration);
+                        Terminal.Write(projectFinishedHeader);
 
                         // Print the output path as a link if we have it.
                         if (outputPath is not null)
@@ -685,8 +679,8 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
                         }
                     }
 
-                    _buildErrorsCount += countErrors;
-                    _buildWarningsCount += countWarnings;
+                    _buildErrorsCount += project.ErrorCount;
+                    _buildWarningsCount += project.WarningCount;
 
                     DisplayNodes();
                 }
@@ -698,6 +692,35 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
         }
     }
 
+    private static string GetProjectFinishedHeader(Project project, string buildResult, string duration)
+    {
+        string projectFile = project.File is not null ?
+            Path.GetFileNameWithoutExtension(project.File) :
+            string.Empty;
+
+        if (string.IsNullOrEmpty(project.TargetFramework))
+        {
+            string resourceName = project.IsTestProject ? "TestProjectFinished_NoTF" : "ProjectFinished_NoTF";
+
+            return ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(resourceName,
+                Indentation,
+                projectFile,
+                buildResult,
+                duration);
+        }
+        else
+        {
+            string resourceName = project.IsTestProject ? "TestProjectFinished_WithTF" : "ProjectFinished_WithTF";
+
+            return ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(resourceName,
+                Indentation,
+                projectFile,
+                AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
+                buildResult,
+                duration);
+        }
+    }
+
     /// <summary>
     /// The <see cref="IEventSource.TargetStarted"/> callback.
     /// </summary>
@@ -1051,12 +1074,12 @@ private void EraseNodes()
     #region Helpers
 
     /// <summary>
-    /// Print a build result summary to the output.
+    /// Construct a build result summary string.
     /// </summary>
     /// <param name="succeeded">True if the build completed with success.</param>
     /// <param name="hasError">True if the build has logged at least one error.</param>
     /// <param name="hasWarning">True if the build has logged at least one warning.</param>
-    private string RenderBuildResult(bool succeeded, int countErrors, int countWarnings)
+    private static string GetBuildResultString(bool succeeded, int countErrors, int countWarnings)
     {
         if (!succeeded)
         {
diff --git a/src/Shared/Constants.cs b/src/Shared/Constants.cs
index 64a885f67e4..1139c492224 100644
--- a/src/Shared/Constants.cs
+++ b/src/Shared/Constants.cs
@@ -207,6 +207,8 @@ internal static class ItemMetadataNames
         internal const string publicKeyToken = "PublicKeyToken";
         internal const string culture = "Culture";
         internal const string withCulture = "WithCulture";
+        internal const string copyToOutputDirectory = "CopyToOutputDirectory";
+        internal const string copyAlways = "Always";
 
         /// <summary>
         /// The output path for a given item.
@@ -242,6 +244,10 @@ internal static class ItemMetadataNames
     /// </summary>
     internal static class ItemNames
     {
-        internal const string reference = "Reference";
+        internal const string Compile = "Compile";
+        internal const string Content = "Content";
+        internal const string EmbeddedResource = "EmbeddedResource";
+        internal const string None = "None";
+        internal const string Reference = "Reference";
     }
 }
diff --git a/src/Utilities/TaskItem.cs b/src/Utilities/TaskItem.cs
index e5e53b3ff01..d43175b77aa 100644
--- a/src/Utilities/TaskItem.cs
+++ b/src/Utilities/TaskItem.cs
@@ -64,7 +64,7 @@ public sealed class TaskItem :
         /// Default constructor -- do not use.
         /// </summary>
         /// <remarks>
-        /// This constructor exists only so that the type is COM-creatable. Prefer <see cref="TaskItem(string)"/>.
+        /// This constructor exists only so that the type is COM-creatable. Prefer <see cref="TaskItem(string, bool)"/>.
         /// </remarks>
         [EditorBrowsable(EditorBrowsableState.Never)]
         public TaskItem()
@@ -75,14 +75,31 @@ public TaskItem()
         /// <summary>
         /// This constructor creates a new task item, given the item spec.
         /// </summary>
-        /// <comments>Assumes the itemspec passed in is escaped.</comments>
+        /// <comments>Assumes the itemspec passed in is escaped and represents a file path. </comments>
         /// <param name="itemSpec">The item-spec string.</param>
+        public TaskItem(string itemSpec)
+            : this(itemSpec, treatAsFilePath: true) { }
+
+        /// <summary>
+        /// This constructor creates a new task item, given the item spec.
+        /// </summary>
+        /// <comments>
+        /// Assumes the itemspec passed in is escaped.
+        /// If <see name="treatAsFilePath" /> is set to <see langword="true" />, the value in <see name="itemSpec" />
+        /// will be fixed up as a path by having any backslashes replaced with slashes.
+        /// </comments>
+        /// <param name="itemSpec">The item-spec string.</param>
+        /// <param name="treatAsFilePath">
+        /// Specifies whether or not to treat the value in <see name="itemSpec" />
+        /// as a file path and attempt to normalize it.
+        /// </param>
         public TaskItem(
-            string itemSpec)
+            string itemSpec,
+            bool treatAsFilePath)
         {
             ErrorUtilities.VerifyThrowArgumentNull(itemSpec);
 
-            _itemSpec = FileUtilities.FixFilePath(itemSpec);
+            _itemSpec = treatAsFilePath ? FileUtilities.FixFilePath(itemSpec) : itemSpec;
         }
 
         /// <summary>
