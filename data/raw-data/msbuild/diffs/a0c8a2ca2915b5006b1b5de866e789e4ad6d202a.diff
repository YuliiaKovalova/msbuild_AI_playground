diff --git a/src/Build/Definition/Toolset.cs b/src/Build/Definition/Toolset.cs
index acdf7f6caf4..c939b3edf56 100644
--- a/src/Build/Definition/Toolset.cs
+++ b/src/Build/Definition/Toolset.cs
@@ -921,7 +921,7 @@ private void InitializeProperties(ILoggingService loggingServices, BuildEventCon
 
                     reservedProperties.Add(ProjectPropertyInstance.Create(ReservedPropertyNames.msbuildRuntimeType,
 #if RUNTIME_TYPE_NETCORE
-                        "Core",
+                        !Traits.Instance.ForceEvaluateAsFullFramework ? "Core" : "Full",
 #elif MONO
                         NativeMethodsShared.IsMono ? "Mono" : "Full");
 #else
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index 147d7cfb5ba..691dccb0e1f 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -1148,7 +1148,8 @@ private void AddBuiltInProperties()
             }
 
 #if RUNTIME_TYPE_NETCORE
-            SetBuiltInProperty(ReservedPropertyNames.msbuildRuntimeType, "Core");
+            SetBuiltInProperty(ReservedPropertyNames.msbuildRuntimeType,
+                !Traits.Instance.ForceEvaluateAsFullFramework ? "Core" : "Full");
 #elif MONO
             SetBuiltInProperty(ReservedPropertyNames.msbuildRuntimeType,
                                                         NativeMethodsShared.IsMono ? "Mono" : "Full");
diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index 2cea08d2ad3..cf60eb140c9 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -69,6 +69,11 @@ public Traits()
         /// </summary>
         public static readonly string MSBuildNodeHandshakeSalt = Environment.GetEnvironmentVariable("MSBUILDNODEHANDSHAKESALT");
 
+        /// <summary>
+        /// Override property "MSBuildRuntimeType" to "Full", ignoring the actual runtime type of MSBuild.
+        /// </summary>
+        public readonly bool ForceEvaluateAsFullFramework = !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("MsBuildForceEvaluateAsFullFramework"));
+
         /// <summary>
         /// Setting the associated environment variable to 1 restores the pre-15.8 single
         /// threaded (slower) copy behavior. Zero implies Int32.MaxValue, less than zero
