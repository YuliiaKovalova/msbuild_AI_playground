diff --git a/documentation/wiki/Building-Testing-and-Debugging-on-.Net-Core-MSBuild.md b/documentation/wiki/Building-Testing-and-Debugging-on-.Net-Core-MSBuild.md
index a14a784d7d8..90410eb91f2 100644
--- a/documentation/wiki/Building-Testing-and-Debugging-on-.Net-Core-MSBuild.md
+++ b/documentation/wiki/Building-Testing-and-Debugging-on-.Net-Core-MSBuild.md
@@ -35,3 +35,11 @@ The best way to get .NET Core MSBuild is by installing the [.NET Core SDK](https
 ### Wait in Main
 
 Set the environment variable `MSBUILDDEBUGONSTART` to `2`.
+
+### Using the repository binaries to perform builds
+
+To build projects using the MSBuild binaries from the repository, you first need to do a build (command: `build.cmd`) which produces a bootstrap directory mimicking a Visual Studio (full framework flavor) or dotnet CLI (.net core flavor) installation.
+
+Now, just point `dotnet ./artifacts/Debug/bootstrap/netcoreapp2.1/MSBuild/MSBuild.dll` at a project file.
+
+Alternatively, if you want to test the msbuild binaries in a more realistic environment, you can overwrite the dotnet CLI msbuild binaries (found under a path like `~/dotnet/sdk/3.0.100-alpha1-009428/`) with the msbuild binaries from the above bootstrap directory. You might have to kill existing `dotnet` processes before doing this. Then, (using the previous dotnet example directory) just point `~/dotnet/dotnet build` at a project file.
