diff --git a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
index e535d6be4c3..8c121a462b6 100644
--- a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
+++ b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
@@ -2006,19 +2006,18 @@ ReadMachineTypeFromPEHeader readMachineTypeFromPEHeader
         {
             bool success = true;
 
-            if (_concurrencyExecutionContext is object)
-            {
-                ApplyExecutionContextToInputs();
-            }
-            else
-            {
-                _concurrencyExecutionContext = new TaskExecutionContext();
-            }
-
             MSBuildEventSource.Log.RarOverallStart();
             {
                 try
                 {
+                    if (_concurrencyExecutionContext is object)
+                    {
+                        AbsolutizePathsInInputs();
+                    }
+                    else
+                    {
+                        _concurrencyExecutionContext = new TaskExecutionContext();
+                    }
 
                     FrameworkNameVersioning frameworkMoniker = null;
                     if (!String.IsNullOrEmpty(_targetedFrameworkMoniker))
@@ -3080,17 +3079,8 @@ void IConcurrentTask.ConfigureForConcurrentExecution(TaskExecutionContext execut
         {
             _concurrencyExecutionContext = executionContext;
         }
-
-        void AddCurrentDirectoryToItemSpecProperty(ITaskItem[] array)
-        {
-            for (int i = 0; i < array.Length; i++)
-            {
-                array[i].ItemSpec = String.IsNullOrEmpty(array[i].ItemSpec) ? array[i].ItemSpec : Path.Combine(_concurrencyExecutionContext.StartupDirectory, array[i].ItemSpec);
-            }
-        }
-
         
-        void ApplyExecutionContextToInputs()
+        void AbsolutizePathsInInputs()
         {
 
             for (int i = 0; i < _candidateAssemblyFiles.Length; i++)
