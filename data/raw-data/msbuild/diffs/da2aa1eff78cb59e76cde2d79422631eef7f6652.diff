diff --git a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
index 8e9b451874c..004c7e50289 100644
--- a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
+++ b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
@@ -439,15 +439,6 @@ public void ProjectCacheByBuildParametersAndGraphBuildWorks(GraphCacheResponse t
 
             var graphResult = buildSession.BuildGraph(graph);
 
-            if (buildParameters.DisableInProcNode
-                && testData.NonCacheMissResults.Any(c => c.Value.ProxyTargets is not null))
-            {
-                // TODO: remove this branch when the DisableInProcNode failure is fixed by https://github.com/dotnet/msbuild/pull/6400
-                graphResult.OverallResult.ShouldBe(BuildResultCode.Failure);
-                buildSession.Logger.Errors.First().Code.ShouldBe("MSB4223");
-                return;
-            }
-
             graphResult.OverallResult.ShouldBe(BuildResultCode.Success);
 
             buildSession.Dispose();
@@ -478,16 +469,6 @@ public void ProjectCacheByBuildParametersAndBottomUpBuildWorks(GraphCacheRespons
             {
                 var buildResult = buildSession.BuildProjectFile(node.ProjectInstance.FullPath);
 
-                if (buildParameters.DisableInProcNode &&
-                    testData.NonCacheMissResults.TryGetValue(GetProjectNumber(node), out var cacheResult) &&
-                    cacheResult.ProxyTargets is not null)
-                {
-                    // TODO: remove this branch when the DisableInProcNode failure is fixed by https://github.com/dotnet/msbuild/pull/6400
-                    buildResult.OverallResult.ShouldBe(BuildResultCode.Failure);
-                    buildSession.Logger.Errors.First().Code.ShouldBe("MSB4223");
-                    return;
-                }
-
                 buildResult.OverallResult.ShouldBe(BuildResultCode.Success);
 
                 nodesToBuildResults[node] = buildResult;
@@ -659,14 +640,6 @@ public void RunningProxyBuildsOnOutOfProcNodesShouldIssueWarning(bool disableInp
 
             var graphResult = buildSession.BuildGraph(graph);
 
-            if (!disableInprocNodeViaEnvironmentVariable)
-            {
-                // TODO: remove this branch when the DisableInProcNode failure is fixed by https://github.com/dotnet/msbuild/pull/6400
-                graphResult.OverallResult.ShouldBe(BuildResultCode.Failure);
-                buildSession.Logger.Errors.First().Code.ShouldBe("MSB4223");
-                return;
-            }
-
             graphResult.OverallResult.ShouldBe(BuildResultCode.Success);
 
             buildSession.Dispose();
@@ -1268,12 +1241,6 @@ public void EndBuildShouldGetCalledOnceWhenItThrowsExceptionsFromGraphBuilds()
         [InlineData(true, true)]
         public void CacheShouldBeQueriedInParallelDuringGraphBuilds(bool useSynchronousLogging, bool disableInprocNode)
         {
-            if (disableInprocNode)
-            {
-                // TODO: remove this branch when the DisableInProcNode failure is fixed by https://github.com/dotnet/msbuild/pull/6400
-                return;
-            }
-
             var referenceNumbers = new []{2, 3, 4};
 
             var testData = new GraphCacheResponse(
@@ -1354,12 +1321,6 @@ Task<BuildResult> BuildProjectFileAsync(int projectNumber)
         [InlineData(true, true)]
         public void ParallelStressTest(bool useSynchronousLogging, bool disableInprocNode)
         {
-            if (disableInprocNode)
-            {
-                // TODO: remove this branch when the DisableInProcNode failure is fixed by https://github.com/dotnet/msbuild/pull/6400
-                return;
-            }
-
             var referenceNumbers = Enumerable.Range(2, NativeMethodsShared.GetLogicalCoreCount() * 2).ToArray();
 
             var testData = new GraphCacheResponse(
