diff --git a/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs b/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
index f0ff8917277..b2607cf4c91 100644
--- a/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
+++ b/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
@@ -17,7 +17,7 @@
 
 namespace Microsoft.Build.Graph.UnitTests
 {
-    public class IsolateProjectsTests : IDisposable, IClassFixture<IsolateProjectsTests.IsolateProjectsClassFixture>
+    public class IsolateProjectsTests : IDisposable
     {
         private readonly string _project = @"
                 <Project DefaultTargets='BuildSelf'>
@@ -133,6 +133,13 @@ public IsolateProjectsTests(ITestOutputHelper testOutput)
             _testOutput = testOutput;
             _env = TestEnvironment.Create(_testOutput, ignoreBuildErrorFiles: true);
 
+            if (NativeMethodsShared.IsOSX)
+            {
+                // OSX links /var into /private, which makes Path.GetTempPath() to return "/var..." but Directory.GetCurrentDirectory to return "/private/var..."
+                // this discrepancy fails the msbuild undeclared reference enforcements due to failed path equality checks
+                _env.SetTempPath(Path.Combine(Directory.GetCurrentDirectory(), Guid.NewGuid().ToString("N")), deleteTempDirectory: true);
+            }
+
             // todo investigate why out of proc builds fail on macos https://github.com/dotnet/msbuild/issues/3915
             var disableInProcNode = !NativeMethodsShared.IsOSX;
 
@@ -149,8 +156,6 @@ public void Dispose()
             _env.Dispose();
         }
 
-
-
         [Theory]
         [InlineData(BuildResultCode.Success, new string[] { })]
         [InlineData(BuildResultCode.Success, new[] { "BuildSelf" })]
@@ -484,27 +489,5 @@ public void SkippedTargetsShouldNotTriggerCacheMissEnforcement()
                 buildManagerSession.Logger.AssertMessageCount("Previously built successfully", 4);
             }
         }
-
-        internal class IsolateProjectsClassFixture : IDisposable
-        {
-            private readonly TestEnvironment _classFixtureEnv;
-
-            public IsolateProjectsClassFixture()
-            {
-                _classFixtureEnv = TestEnvironment.Create(output: null, ignoreBuildErrorFiles: true);
-                if (NativeMethodsShared.IsOSX)
-                {
-                    // OSX links /var into /private, which makes Path.GetTempPath() to return "/var..." but Directory.GetCurrentDirectory to return "/private/var..."
-                    // this discrepancy fails the msbuild undeclared reference enforcements due to failed path equality checks
-                    var tempFolder = _classFixtureEnv.CreateFolder(Path.Combine(Directory.GetCurrentDirectory(), Guid.NewGuid().ToString("N")));
-                    _classFixtureEnv.SetTempPath(tempFolder.Path);
-                }
-            }
-
-            public void Dispose()
-            {
-                _classFixtureEnv.Dispose();
-            }
-        }
     }
 }
