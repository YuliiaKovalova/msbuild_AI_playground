diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index 46f4539dd56..fd23839785c 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -2046,50 +2046,50 @@ Když se nastaví na MessageUponIsolationViolation (nebo jeho krátký
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Serializuje všechny události sestavení do komprimovaného binárního souboru.
+                     Ve výchozím nastavení se soubor nachází v aktuálním adresáři a má název
+                     "msbuild.binlog". Binární protokol je podrobný popis
+                     procesu sestavení, který se dá později použít k rekonstrukci
+                     textových protokolů a který využívají jiné analytické nástroje. Binární protokol
+                     je obvykle 10–20krát menší než nejpodrobnější textový
+                     protokol na úrovni diagnostiky, ale obsahuje více informací.
+                     (Krátký tvar: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     Nepovinný soubor logFile určuje cestu, kde
+                     je binární protokol uložený. Pro generování samostatného souboru protokolu
+                     pro každé sestavení se dá token {} přidat do
+                     cesty, například: LogFile=output-{}-log.binlog. Každý 
+                     {} v cestě k protokolu se nahradí jedinečným řetězcem
+                     pomocí časového razítka, ID spuštěného procesu a náhodného
+                     razítka řetězce.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     Binární protokolovací nástroj ve výchozím nastavení shromažďuje zdrojový text
+                     souborů projektu, včetně všech importovaných projektů a cílových
+                     souborů, ke kterým došlo během sestavení. Nepovinný
+                     přepínač ProjectImports řídí toto chování:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
+                      ProjectImports=None     – Neshromažďovat importy projektu
+                                                .
+                      ProjectImports=Embed    – Vložit importy projektu do
+                                                souboru protokolu.
+                      ProjectImports=ZipFile  – Uložit soubory projektu do
                                                 output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                                                kde výstup má stejný název
+                                                jako je název binárního souboru protokolu.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     Výchozí nastavení pro ProjectImports je Embed.
+                     Poznámka: protokolovací nástroj neshromažďuje zdrojové soubory, které nepocházejí z nástroje MSBuild,
+                     jako například .cs, .cpp atd.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     Soubor .binlog se dá přehrát předáním do
+                     msbuild.exe jako argument místo projektu nebo řešení.
+                     Ostatní protokolovací nástroje obdrží informaci obsaženou
+                     v souboru protokolu, jako by se provádělo původní sestavení.
+                     Další informace o binárním protokolu a jeho použití najdete tady:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Příklady:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index 87503286149..f59cb4260d4 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -2034,50 +2034,50 @@ Dieses Protokollierungsformat ist standardmäßig aktiviert.
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Serialisiert alle Buildereignisse in eine komprimierte Binärdatei.
+                     Standardmäßig befindet sich die Datei im aktuellen Verzeichnis und hat den Namen
+                     „msbuild.binlog“. Das binäre Protokoll ist eine detaillierte Beschreibung
+                     des Buildprozesses, der später zum Rekonstruieren von
+                     Textprotokollen dient und der von anderen Analysetools verwendet wird. Detaillierte
+                     Textprotokolle auf Diagnoseebene sind in der Regel 10–20-mal so groß wie
+                     binäre Protokolle, letztere enthalten jedoch mehr Informationen.
+                     (Kurzform: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     Die optionale LogFile gibt den Pfad an, in dem das
+                     Binärprotokoll gespeichert wird. Um eine eigene Protokolldatei
+                     für jeden Build zu generieren, kann das Token "{}" zum
+                     Pfad hinzugefügt werden, z. B.: LogFile=output-{}-log.binlog. Jedes 
+                     "{}" im Protokollpfad wird durch eine eindeutige Zeichenfolge ersetzt,
+                     indem Zeitstempel, ID des ausgeführten Prozesses und ein zufälliger
+                     Zeichenfolgenstempel verwendet werden.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     Die binäre Protokollierung erfasst standardmäßig den Quelltext von
+                     Projektdateien, einschließlich aller beim Buildvorgang aufgetretenen
+                     importierten Projekte und Zieldateien. Der optionale Schalter
+                     ProjectImports steuert dieses Verhalten:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
+                      ProjectImports=None:      – Projektimporte nicht
+                                                erfassen
+                      ProjectImports=Embed:     – Projektimporte in die
+                                                Protokolldatei einbetten
+                      ProjectImports=ZipFile:   – Projektdateien in
                                                 output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                                                speichern, wobei „output“ dem Namen
+                                                der binären Protokolldatei entspricht.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     Die Standardeinstellung für „ProjectImports“ ist „Embed“.
+                     Hinweis: Die Protokollierung erfasst nur MSBuild-Quelldateien.
+                     Andere Dateien wie etwa CS, CPP usw. werden nicht erfasst.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     Eine BINLOG-Datei kann „wiedergegeben“ werden, indem sie an
+                     „msbuild.exe“ als Argument und nicht als Projekt/Lösung übergeben wird.
+                     Andere Protokollierungen erhalten die Informationen, die
+                     wie beim ursprünglichen Buildvorgang in der Protokolldatei enthalten sind.
+                     Weitere Informationen zu binären Protokollen und ihrer Verwendung erhalten Sie unter:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Beispiele:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index c2804fb60c9..61b6c952e98 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -2040,50 +2040,50 @@ Esta marca es experimental y puede que no funcione según lo previsto.
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Serializa todos los eventos de compilación en un archivo binario comprimido.
+                     De forma predeterminada, el archivo está en el directorio actual y se denomina
+                     "msbuild.binlog". El registro binario es una descripción detallada
+                     del proceso de compilación que se puede usar más adelante para reconstruir
+                     registros de texto y ser usado por otras herramientas de análisis. Un registro binario
+                     suele ser 10-20 veces menor que el registro de nivel de diagnóstico
+                     de texto más detallado, pero contiene más información.
+                     (Forma corta: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     El archivo de registro opcional especifica la ruta de acceso donde el
+                     se guarda el registro binario. Para generar un archivo de registro distinto
+                     para cada compilación, el token "{}" se puede agregar a la
+                     ruta de acceso, por ejemplo: LogFile=output-{}-log.binlog. Cada 
+                     "{}" en la ruta de acceso del registro se reemplaza por una cadena única
+                     mediante la marca de tiempo, el identificador de proceso en ejecución y los id.
+                     y sellos de cadena aleatorios.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     De forma predeterminada, el registrador binario recopila el texto de origen de
+                     archivos de proyecto, incluidos todos los proyectos importados y archivos
+                     de destino encontrados durante la compilación. El conmutador opcional
+                     ProjectImports controla este comportamiento:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
+                      ProjectImports=None     - No recopilar las importaciones
+                                                del proyecto.
+                      ProjectImports=Embed    - Inserción de importaciones de proyecto en el
+                                                archivo de registro.
+                      ProjectImports=ZipFile  - Guardar archivos de proyecto en
                                                 output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                                                donde la salida tiene el mismo nombre
+                                                que el nombre del archivo de registro binario.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     El valor predeterminado de ProjectImports es Inserción.
+                     Nota: el registrador no recopila archivos de código fuente que no son de MSBuild
+                     como .cs, .cpp, etc.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     Un archivo .binlog se puede "reproducir" pasándolo a
+                     msbuild.exe como argumento en lugar de como proyecto o solución.
+                     Otros registradores recibirán la información contenida en el
+                     archivo de registro como si se estuviera produciendo la compilación original.
+                     Puede obtener más información sobre el registro binario y sus usos en:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Ejemplos:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 2035fa38c81..ca4e4e37fdb 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -2035,50 +2035,50 @@ Remarque : verbosité des enregistreurs d’événements de fichiers
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Sérialise tous les événements de génération dans un fichier binaire compressé.
+                     Par défaut, le fichier se trouve dans le répertoire actuel et son nom est 
+                     "msbuild.binlog". Le journal binaire est une description détaillée
+                     du processus de génération que vous pouvez utiliser plus tard pour reconstruire
+                     des journaux texte et être utilisé par d’autres outils d’analyse. Un journal binaire
+                     est généralement 10 à 20 fois plus petit que le journal au niveau du diagnostic
+                     du texte le plus détaillé, mais il contient d’autres informations.
+                     (Forme abrégée : -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     Le LogFile facultatif spécifie le chemin d’accès où le
+                     journal binaire est enregistré. Pour générer un fichier journal distinct
+                     pour chaque génération, vous pouvez ajouter le jeton « {} » dans le
+                     chemin d’accès, par exemple : LogFile=output-{}-log.binlog. Chaque 
+                     « {} » dans le chemin d’accès du journal est remplacé par une chaîne unique
+                     en utilisant un timestamp, ce qui exécute l’ID de processus et une
+                     empreinte de chaîne aléatoire.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     L’enregistreur binaire collecte par défaut le texte source des
+                     fichiers de projet, notamment tous les projets importés et les
+                     fichiers cibles rencontrés pendant la génération. Le commutateur
+                     ProjectImports facultatif contrôle ce comportement :
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
+                      ProjectImports=None     – Ne collectez pas les
+                                                importations du projet.
+                      ProjectImports=Embed    – Importations du projet incorporées dans le
+                                                fichier journal.
+                      ProjectImports=ZipFile  – Enregistrez les fichiers du projet dans
                                                 output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                                                où la sortie est le même nom
+                                                que le nom du fichier journal binaire.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     Le paramètre par défaut pour ProjectImports est Incorporé.
+                     Remarque : l’enregistreur ne collecte pas les fichiers sources non-MSBuild
+                     tels que .cs, .cpp etc.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     Vous pouvez « lire » un fichier .binlog en le passant à
+                     msbuild.exe en tant qu’argument au lieu d’une solution/d’un projet.
+                     D’autres enregistreurs reçoivent les informations contenues
+                     dans le fichier journal comme si la génération d’origine se produisait.
+                     Vous pouvez lire plus d’informations sur le journal binaire et ses utilisations sur :
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Exemples :
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index 7629d5db226..4757e078ddb 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -2047,50 +2047,51 @@ Nota: livello di dettaglio dei logger di file
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Serializza tutti gli eventi di compilazione in un file binario compresso.
+                     Per impostazione predefinita, il file csi trova nella directory corrente e si chiama
+                     "msbuild.binlog". Il log binario è una descrizione
+                     dettagliata del processo di compilazione utilizzabile in
+                     seguito per ricostruire i log di testo e viene usato da altri strumenti di analisi. Un log binario è in genere
+                     10-20 volte più piccolo del più dettagliato log di testo
+                     di livello diagnostico, ma contiene maggiori informazioni.
+                     (Forma breve: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     Il LogFile facoltativo specifica il percorso in cui il
+                     il log binario viene salvato. Per generare un file di log distinto
+                     per ogni compilazione, il token "{}" può essere aggiunto al
+                     percorso, ad esempio: LogFile=output-{}-log.binlog. Ogni 
+                     "{}" nel percorso del log viene sostituito con una stringa univoca
+                     usando il timestamp, l'ID del processo in esecuzione e
+timbro
+                     stringa casuale.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     Per impostazione predefinita, il logger binario raccoglie il testo di origine di
+                     file di progetto, inclusi tutti i
+                     progetti importati e i file di destinazione rilevati durante la compilazione. L'opzione facoltativa
+                     ProjectImports controlla questo comportamento:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
+                      ProjectImports=None     - Non viene eseguita la raccolta
+                                                delle importazioni del progetto.
+                      ProjectImports=Embed    - Le importazioni del progetto vengono incorporate nel
+                                                file di log.
+                      ProjectImports=ZipFile  - I file del progetto vengono salvati in
                                                 output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                                                dove output corrisponde allo stesso
+                                                nome del file di log binario.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     L'impostazione predefinita di ProjectImports è Embed.
+                     Nota: il logger non raccoglie i file di origine non-MSBuild,
+                     ad esempio quelli con estensione .cs, .cpp e così via.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     È possibile riprodurre un file con estensione binlog
+                     passandolo a msbuild.exe come argomento invece di un progetto o di una soluzione.
+                     Altri logger riceveranno le
+                     informazioni contenute nel file di log come se fosse in corso la compilazione originale.
+                     Per maggiori informazioni sul file di log e su come usarlo, vedere:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Esempi:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index f68b82c28e9..363f80a302a 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -2034,50 +2034,50 @@
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     すべてのビルド イベントを圧縮バイナリ ファイルにシリアル化します。
+                     既定では、ファイルは現在のディレクトリにあり、
+                     "msbuild.binlog" という名前が付けられます。バイナリ ログはビルド プロセスの詳細な説明であり、
+                     後でテキスト ログを再構築したり、他の分析ツールで使用
+                     したりするために使用できます。バイナリ ログは通常、
+                     最も詳細なテキスト診断レベルのログの 10 - 20 分の 1 の
+                     大きさですが、より多くの情報が含まれています。
+                     (短い形式: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     省略可能な LogFile は、バイナリ ログが保存される
+                     パスを指定します。ビルドごとに個別のログ ファイルを
+                     生成するには、パスにトークン "{}" を追加します 
+                     (例: LogFile=output-{}-log.binlog)。ログ パス内の
+                     各 "{}" は、タイムスタンプ、実行中のプロセス ID、
+                     ランダム文字列スタンプを使用して一意の文字列に
+                     置き換えられます。
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     バイナリ ロガーでは、既定でプロジェクト ファイルのソース 
+                     テキストが収集されます。これには、ビルド中に読み込まれた
+                     すべてのインポート プロジェクトやターゲット ファイルが含まれます。省略可能な
+                     ProjectImports スイッチはこの動作を制御します:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
-                                                output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                      ProjectImports=None     - プロジェクトのインポートを
+                                                収集しません。
+                      ProjectImports=Embed    - プロジェクトのインポートを
+                                                ログ ファイルに埋め込みます。
+                      ProjectImports=ZipFile - プロジェクト ファイルを 
+                                                output.projectimports.zip に保存します
+                                                ここで、output はバイナリ ログ ファイル名と
+                                                同じ名前です。
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     ProjectImports の既定の設定は Embed です。
+                     メモ: このロガーは、.cs、.cpp などの MSBuild 以外のソース 
+                     ファイルを収集しません。
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
-                     https://aka.ms/msbuild/binlog
+                     .binlog ファイルを "再生" するには、プロジェクト/
+                     ソリューションの代わりに引数として msbuild.exe に渡します。
+                     他のロガーは、元のビルドが実行されているかのように、
+                     ログ ファイルに含まれる情報を受け取ります。
+                     バイナリ ログとその使用方法の詳細については、
+                     https://aka.ms/msbuild/binlog を参照してください
 
-                     Examples:
+                     例:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 5765fff72a9..5da5d3a7cac 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -2034,50 +2034,50 @@
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     모든 빌드 이벤트를 압축된 이진 파일로 직렬화합니다.
+                     기본적으로 파일은 현재 디렉터리에 있으며 이름은
+                     "msbuild.binlog"입니다. 이진 로그는 나중에 텍스트 로그를 재구성하는 데
+                     사용할 수 있고 다른 분석 도구에서 사용할 수 있는 빌드 프로세스의
+                     자세한 설명입니다. 이진 로그는
+                     일반적으로 가장 자세한 텍스트 진단 수준 로그보다 10~20배
+                     작지만 더 많은 정보를 담고 있습니다.
+                     (약식: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     선택적 LogFile은 이진 로그가 저장되는
+                     경로를 지정합니다. 각 빌드에 고유한 로그 파일을 생성하려면
+                     토큰 "{}"를 경로에 추가할 수 있습니다.
+                     예: LogFile=output-{}-log.binlog. 로그 경로의 
+                     각 "{}"는 타임스탬프, 실행 프로세스 ID 및 임이의 문자열
+                     스탬프를 사용하여 고유한 문자열로
+                     대체됩니다.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     기본적으로 이진 로거는 빌드하는 동안 발견된
+                     가져온 모든 프로젝트 및 대상 파일을 포함한 프로젝트 파일의
+                     원본 텍스트를 수집합니다. 선택적
+                     ProjectImports 스위치는 다음 동작을 제어합니다.
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
-                                                output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                      ProjectImports=None     - 프로젝트 가져오기를 수집하지
+                                                마세요.
+                      ProjectImports=Embed    - 로그 파일에 프로젝트 가져오기를
+                                                포함합니다.
+                      ProjectImports=ZipFile - 프로젝트 파일을
+                                                output.projectimports.zip에
+                                                저장하며 여기서 출력은 이진 로그 파일 이름과
+                                                같은 이름입니다.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     ProjectImports의 기본 설정은 Embed입니다.
+                     참고: 로거는 MSBuild가 아닌 소스 파일을 수집하지 않습니다.
+                     예: .cs, .cpp 등
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     .binlog 파일은 프로젝트/솔루션 대신 인수로
+                     msbuild.exe에 전달하여 “재생”될 수 있습니다.
+                     다른 로거는 원래 빌드가 발생하는 것처럼 로그 파일에
+                     포함된 정보를 받습니다.
+                     이진 로그 및 해당 사용에 대한 자세한 내용은 다음에서 확인할 수 있습니다.
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     예:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index 12c55ded106..5e2ee08a6ca 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -2044,50 +2044,50 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]wyjście.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Serializuje wszystkie zdarzenia kompilacji do skompresowanego pliku binarnego.
+                     Domyślnie plik znajduje się w bieżącym katalogu i ma nazwę
+                     „msbuild.binlog”. Dziennik binarny to szczegółowy opis procesu
+                     kompilacji, którego można później użyć do odtworzenia
+                     dzienników tekstowych i wykorzystać w innych narzędziach do analizy. Dziennik binarny
+                     jest zwykle 10–20 razy mniejszy od najbardziej szczegółowych
+                     tekstowych dzienników na poziomie diagnostycznym, ale zawiera więcej informacji.
+                     (Krótka forma: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     Opcjonalny LogFile określa ścieżkę, w której
+                     zapisany jest dziennik binarny. Aby wygenerować osobny plik dziennika
+                     dla każdej kompilacji, można dodać token „{}” do
+                     ścieżki, na przykład: LogFile=output-{}-log.binlog. Każdy 
+                     „{}” w ścieżce dziennika zostanie zastąpiony unikalnym ciągiem
+                     utworzonym na podstawie znacznika czasu, identyfikatora procesu i losowego
+                     ciągu znaków.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     Rejestrator binarny domyślnie zbiera tekst źródłowy
+                     plików projektu, w tym wszystkie zaimportowane projekty i pliki
+                     docelowe napotkane podczas kompilowania. Tym zachowaniem
+                     steruje opcjonalny przełącznik ProjectImports:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
-                                                output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                      ProjectImports=None     — Nie zbieraj importów
+                                                projektu.
+                      ProjectImports=Embed    — Osadź importy projektu w
+                                                pliku dziennika.
+                      ProjectImports=ZipFile  — Zapisz pliki projektu w pliku
+                                                output.projectimports.zip,
+                                                gdzie wyjście to ciąg podany
+                                                dla nazwy pliku dziennika binarnego.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     Domyślne ustawienie przełącznika ProjectImports to Embed.
+                     Uwaga: rejestrator nie zbiera plików źródłowych
+                     niepochodzących z programu MSBuild, np. cs, cpp itd.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     Plik binlog można „odtworzyć”, przekazując go do programu
+                     msbuild.exe jako argument zamiast projektu/rozwiązania.
+                     Inne rejestratory otrzymają informacje zawarte w pliku
+                     dziennika tak, jak podczas wykonywania pierwotnej kompilacji.
+                     Więcej informacji o dzienniku binarnym i jego zastosowaniach można uzyskać na stronie:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Przykłady:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index 5e69b2ed4dd..d24483156db 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -2034,50 +2034,50 @@ arquivo de resposta.
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Serializa todos os eventos da compilação em um arquivo binário compactado.
+                     Por padrão, o arquivo está no diretório atual e é chamado de
+                     "msbuild.binlog". O log binário é uma descrição detalhada
+                     do processo de compilação que pode mais tarde ser usado para reconstruir
+                     logs de texto e usados por outras ferramentas de análise. Um log binário
+                     normalmente é 10 a 20x menor do que os log de nível
+                     de diagnóstico do texto mais detalhado, mas contém mais informações.
+                     (Forma abreviada: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     O LogFile opcional especifica o caminho em que o
+                     log binário é salvo. Para gerar um arquivo de log distinto
+                     para cada compilação, o token "{}" pode ser adicionado ao
+                     caminho, por exemplo: LogFile=output-{}-log.binlog. Cada 
+                     "{}" no caminho de log é substituído por uma cadeia de caracteres exclusiva
+                     usando o carimbo de data/hora, executando a ID do processo e aleatoriamente
+                     o aplicar selo de cadeia de caracteres.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     O agente binário, por padrão, coleta o texto fonte dos
+                     arquivos de projeto, incluindo todos os projetos importados e arquivos
+                     de destino encontrados durante a compilação. A opção
+                     ProjectImports controla este comportamento:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
+                      ProjectImports=None     – Não coletar as importações
+                                                do projeto.
+                      ProjectImports=Embed    – Inserir as importações do projeto no
+                                                arquivo de log.
+                      ProjectImports=ZipFile  – Salvar os arquivos de projeto em
                                                 output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                                                em que a saída tem o mesmo nome que o
+                                                nome do arquivo de log binário.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     A configuração padrão para ProjectImports é Embed.
+                     Observação: o agente não coleta arquivos de origem não MSBuild
+                     tais como .cs, .cpp etc.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     Um arquivo .binlog pode ser "reproduzido novamente", passando-o para
+                     msbuild.exe como um argumento em vez de um projeto/solução.
+                     Outros agentes receberão as informações contidas
+                     no arquivo de log como se a compilação original estivesse acontecendo.
+                     Você pode ler mais sobre o log binário e seus usos em:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Exemplos:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index 13cd41c8bd0..f0de6f4d4bd 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -2034,50 +2034,50 @@
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Сериализует все события сборки в сжатый двоичный файл.
+                     По умолчанию файл находится в текущем каталоге и называется
+                     "msbuild.binlog". Двоичный журнал включает подробное описание
+                     процесса сборки, которое затем можно использовать для воссоздания
+                     текстовых журналов и может использоваться другими средствами анализа. Двоичный журнал
+                     обычно в 10–20 раз меньше самого подробного текстового
+                     журнала уровня диагностики, но содержит больше информации.
+                     (Краткая форма: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     Необязательный параметр LogFile указывает путь, по которому
+                     сохраняется двоичный журнал. Чтобы создать отдельный файл журнала
+                     для каждой сборки, можно добавить токен "{}" в
+                     путь, например: LogFile=output-{}-log.binlog. Каждый 
+                     символ "{}" в пути журнала заменяется уникальной строкой,
+                     использующей временную метку, идентификатор запущенного процесса и случайную
+                     метку строки.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     Средство ведения двоичного журнала по умолчанию собирает исходный текст
+                     файлов проекта, включая все импортированные проекты и целевые
+                     файлы, найденные во время сборки. Дополнительный
+                     параметр ProjectImports управляет этим поведением:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
-                                                output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                      ProjectImports=None     — не собирать импортированные файлы
+                                                проекта.
+                      ProjectImports=Embed    — внедрять импортированные файлы проекта в
+                                                файл журнала.
+                      ProjectImports=ZipFile  — сохранять файлы проекта в
+                                                вывод.projectimports.zip,
+                                                где вывод — это то же имя,
+                                                что и у двоичного файла журнала.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     Значение по умолчанию для ProjectImports — Embed.
+                     Примечание: средство ведения журнала не собирает исходные файлы, не от MSBuild,
+                     например с расширениями CS, CPP и др.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     BINLOG-файл можно "воспроизвести", передав его в
+                     msbuild.exe в качестве аргумента вместо проекта или решения.
+                     Другие средства ведения журнала получат содержащиеся
+                     в файле журнала сведения, как если бы происходила собственно сборка.
+                     Дополнительные сведения о двоичных журналах и их использовании:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Примеры:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index a52796290f5..020b4a91f03 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -2037,50 +2037,50 @@
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     Tüm derleme olaylarını sıkıştırılmış bir ikili dosyada seri hale getirir.
+                     Varsayılan olarak, dosya geçerli dizinde bulunur ve "msbuild.binlog"
+                     olarak adlandırılır. Daha sonra metin günlüklerini yeniden
+                     yapılandırmak için kullanılabilen ve diğer analiz araçları tarafından
+                     kullanılan ikili günlüğü, derleme işleminin ayrıntılı bir açıklamasıdır. İkili günlüğü genellikle, en ayrıntılı metin tanılama düzeyi günlüklerden
+                     10-20 kat küçüktür ancak daha fazla bilgi içerir.
+                     (Kısa biçim: -bl)
+                     
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     İsteğe bağlı LogFile ikili günlüğün kaydedileceği yolu
+                     belirtir. Ayrı bir günlük dosyası oluşturmak için
+                     her derleme için "{}" belirteci
+                     yola eklenebilir, örneğin: LogFile=output-{}-log.binlog. Günlük 
+                     yolundaki her “{}” zaman damgası, çalışan işlem kimliği ve rastgele
+                     dize damgası kullanılarak benzersiz bir dize ile
+                     değiştirilir.
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     İkili günlükçü varsayılan olarak, içe aktarılan
+                     tüm projeler ve derleme sırasında karşılaşılan hedef
+                     dosyalar da dahil olmak üzere proje dosyalarının kaynak metnini toplar. İsteğe bağlı
+                     ProjectImports anahtarı bu davranışı denetler:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
-                                                output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                      ProjectImports=None     - Proje içeri aktarmalarını
+                                                toplama.
+                      ProjectImports=Embed    - Proje içeri aktarmalarını
+                                                günlük dosyasına ekle.
+                      ProjectImports=ZipFile  - Proje dosyalarını
+                                                output.projectimports.zip dosyasına
+                                                çıkış, ikili günlük dosyası adıyla
+                                                aynı ada sahiptir kaydet.
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     ProjectImports varsayılan ayarı Ekle’dir.
+                     Not: Günlükçü .cs, .cpp vb. gibi MSBuild olmayan kaynak dosyalarını
+                     toplamaz.
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     Bir .binlog dosyası msbuild.exe’ye bir proje/çözüm
+                     yerine bağımsız değişken olarak geçirilerek “yeniden oynatılabilir”.
+                     Diğer günlükçüler, günlük dosyasındaki bilgileri özgün
+                     derleme gerçekleşiyormuş gibi alır.
+                     İkili günlük ve kullanımı hakkında daha fazla bilgiyi aşağıdaki adreste bulabilirsiniz:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     Örnekler:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index a525c7adf0d..cd21bf6716b 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -2033,50 +2033,53 @@
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     将所有生成事件序列化为压缩的二进制文件。
+                     默认情况下，该文件位于当前目录中，名为
+                     "msbuild.binlog"。二进制日志是生成过程的详细描述
+，
+                     稍后可用于重新构造
+                     文本日志并供其他分析工具使用。二进制日志
+                     大小通常为最详细的文本诊断级别日志的 1/10 至 1/20，
+                     但它包含更多信息。
+                     (缩写: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     可选的 LogFile 指定保存二进制日志
+                     的路径。要为每个生成产生不同的日志文件
+，
+                     可以将令牌 "{}" 添加到
+                     路径中，例如: LogFile=output-{}-log.binlog。日志路径中的每个
+                     "{}" 都使用时间戳、正在运行的进程 ID 和
+                     随机字符串戳
+                     替换为唯一字符串。
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     二进制记录器默认收集
+                     项目文件的源文本，包括生成期间遇到的
+                     所有导入项目和目标文件。可选
+                     ProjectImports 开关控制此行为:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
+                      ProjectImports=None     - 不收集项目
+                                                导入。
+                      ProjectImports=Embed    - 将项目导入嵌入到
+                                                日志文件中。
+                      ProjectImports=ZipFile - 将项目文件保存到
                                                 output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+，
+                                                其中输出的名称与
+                                                二进制日志文件名相同。
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     ProjectImports 的默认设置为 Embed。
+                     注意: 记录器不会收集非 MSBuild 源文件，
+                     例如 .cs、.cpp 等。
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     可以通过将 .binlog 文件(而不是项目/解决方案)作为自变量传递给
+                     msbuild.exe 来“回放”该文件。
+                     其他记录器将收到日志文件中包含的信息，
+                     就像原始生成正在发生一样。
+                     有关二进制日志及其用法的详细信息，请参阅:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     示例:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index 4bec527be35..9fda517625b 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -2034,50 +2034,50 @@
                        -bl:..\..\custom.binlog
                        -binaryLogger
     </source>
-        <target state="new">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
-                     Serializes all build events to a compressed binary file.
-                     By default the file is in the current directory and named
-                     "msbuild.binlog". The binary log is a detailed description
-                     of the build process that can later be used to reconstruct
-                     text logs and used by other analysis tools. A binary log
-                     is usually 10-20x smaller than the most detailed text
-                     diagnostic-level log, but it contains more information.
-                     (Short form: -bl)
+        <target state="translated">  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
+                     將所有組建活動序列化為壓縮的二進位檔案。
+                     根據預設，檔案位於目前的目錄中，且名為
+                     "msbuild.binlog"。二進位記錄檔是詳細描述
+                     說明建組程序，這稍後可用來重新建構
+                     文字記錄檔，並用於其他分析工具。二進位記錄檔
+                     通常比最詳細文字診斷層級記錄檔小 10-20x
+                     ，但它包含更多資訊。
+                     (簡短形式: -bl)
 
-                     The optional LogFile specifies the path where the
-                     binary log is saved. To generate a distinct log file
-                     for each build, the token "{}" can be added into the
-                     path, for example: LogFile=output-{}-log.binlog. Each 
-                     "{}" in the log path is replaced with a unique string
-                     using the timestamp, running process Id and random
-                     string stamp.
+                     選擇性的 LogFile 會指定儲存
+                     二進位記錄檔位置的路徑。若要針對每個組建，產生不同的記錄檔
+                     ，可以將權杖 "{}" 新增至
+                     路徑，例如: LogFile=output-{}-log.binlog。記錄檔路徑中的
+                     每個 "{}" 會使用時間戳記，取代為唯一字串
+                     執行程序識別碼和隨機
+                     字串戳記。
 
-                     The binary logger by default collects the source text of
-                     project files, including all imported projects and target
-                     files encountered during the build. The optional
-                     ProjectImports switch controls this behavior:
+                     二進位記錄程式預設會收集專案檔案的來源文字
+                     ，包括組建期間所發生的所有匯入的專案和目標
+                     檔案。選擇性
+                     ProjectImports 切換可控制此行為:
 
-                      ProjectImports=None     - Don't collect the project
-                                                imports.
-                      ProjectImports=Embed    - Embed project imports in the
-                                                log file.
-                      ProjectImports=ZipFile  - Save project files to
+                      ProjectImports=None     - 不要收集專案
+                                                匯入。
+                      ProjectImports=Embed    - 記錄檔中的
+                                                內嵌專案匯入。
+                      ProjectImports=ZipFile  - 將專案檔案儲存至
                                                 output.projectimports.zip
-                                                where output is the same name
-                                                as the binary log file name.
+                                                其中輸出與二進位檔案名稱具有
+                                                相同的名稱。
 
-                     The default setting for ProjectImports is Embed.
-                     Note: the logger does not collect non-MSBuild source files
-                     such as .cs, .cpp etc.
+                     ProjectImports 的預設設定為 [內嵌]。
+                     注意: 記錄程式不會收集非 MSBuild 來源檔案
+                     例如 .cs、.cpp 等。
 
-                     A .binlog file can be "played back" by passing it to
-                     msbuild.exe as an argument instead of a project/solution.
-                     Other loggers will receive the information contained
-                     in the log file as if the original build was happening.
-                     You can read more about the binary log and its usages at:
+                     .binlog 檔案可以藉由將其傳遞至
+                     msbuild.exe 作為引數 (而不是專案/解決方案) 來 "回放"。
+                     其他記錄程式將會收到記錄檔中包含的資訊，
+                     就像發生原始組建那樣。
+                     您可以在以下位置閱讀更多關於二進位記錄及其使用方式:
                      https://aka.ms/msbuild/binlog
 
-                     Examples:
+                     範例:
                        -bl
                        -bl:output.binlog
                        -bl:output.binlog;ProjectImports=None
