diff --git a/src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs b/src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs
index 7bf44e40de2..0903d3a53e9 100644
--- a/src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs
+++ b/src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs
@@ -9,8 +9,11 @@ public interface IBuildCheckRegistrationContext
 {
     void RegisterEvaluatedPropertiesAction(Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>> evaluatedPropertiesAction);
 
+    [Obsolete("Use RegisterEvaluatedItemsAction to obtain evaluated items of a project.", false)]
     void RegisterParsedItemsAction(Action<BuildCheckDataContext<ParsedItemsCheckData>> parsedItemsAction);
 
+    void RegisterEvaluatedItemsAction(Action<BuildCheckDataContext<EvaluatedItemsCheckData>> evaluatedItemsAction);
+
     void RegisterTaskInvocationAction(Action<BuildCheckDataContext<TaskInvocationCheckData>> taskInvocationAction);
 
     void RegisterEnvironmentVariableReadAction(Action<BuildCheckDataContext<EnvironmentVariableCheckData>> environmentVariableAction);
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckCentralContext.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckCentralContext.cs
index d9ca747fc60..fd21abf48ca 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckCentralContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckCentralContext.cs
@@ -23,7 +23,10 @@ public BuildCheckCentralContext(IConfigurationProvider configurationProvider, Ac
 
     private record CallbackRegistry(
         List<(CheckWrapper, Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>>)> EvaluatedPropertiesActions,
+#pragma warning disable CS0618 // Type or member is obsolete
         List<(CheckWrapper, Action<BuildCheckDataContext<ParsedItemsCheckData>>)> ParsedItemsActions,
+#pragma warning restore CS0618 // Type or member is obsolete
+        List<(CheckWrapper, Action<BuildCheckDataContext<EvaluatedItemsCheckData>>)> EvaluatedItemsActions,
         List<(CheckWrapper, Action<BuildCheckDataContext<TaskInvocationCheckData>>)> TaskInvocationActions,
         List<(CheckWrapper, Action<BuildCheckDataContext<PropertyReadData>>)> PropertyReadActions,
         List<(CheckWrapper, Action<BuildCheckDataContext<PropertyWriteData>>)> PropertyWriteActions,
@@ -33,7 +36,7 @@ private record CallbackRegistry(
         List<(CheckWrapper, Action<BuildCheckDataContext<ProjectImportedCheckData>>)> ProjectImportedCheckDataActions)
     {
         public CallbackRegistry()
-            : this([], [], [], [], [], [], [], [], [])
+            : this([], [], [], [], [], [], [], [], [], [])
         {
         }
 
@@ -41,6 +44,7 @@ internal void DeregisterCheck(CheckWrapper check)
         {
             EvaluatedPropertiesActions.RemoveAll(a => a.Item1 == check);
             ParsedItemsActions.RemoveAll(a => a.Item1 == check);
+            EvaluatedItemsActions.RemoveAll(a => a.Item1 == check);
             PropertyReadActions.RemoveAll(a => a.Item1 == check);
             PropertyWriteActions.RemoveAll(a => a.Item1 == check);
             ProjectRequestProcessingDoneActions.RemoveAll(a => a.Item1 == check);
@@ -74,9 +78,14 @@ internal void RegisterEvaluatedPropertiesAction(CheckWrapper check, Action<Build
         //  (it was being communicated via MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION)
         => RegisterAction(check, evaluatedPropertiesAction, _globalCallbacks.EvaluatedPropertiesActions);
 
+#pragma warning disable CS0618 // Type or member is obsolete
     internal void RegisterParsedItemsAction(CheckWrapper check, Action<BuildCheckDataContext<ParsedItemsCheckData>> parsedItemsAction)
+#pragma warning restore CS0618 // Type or member is obsolete
         => RegisterAction(check, parsedItemsAction, _globalCallbacks.ParsedItemsActions);
 
+    internal void RegisterEvaluatedItemsAction(CheckWrapper check, Action<BuildCheckDataContext<EvaluatedItemsCheckData>> parsedItemsAction)
+        => RegisterAction(check, parsedItemsAction, _globalCallbacks.EvaluatedItemsActions);
+
     internal void RegisterTaskInvocationAction(CheckWrapper check, Action<BuildCheckDataContext<TaskInvocationCheckData>> taskInvocationAction)
         => RegisterAction(check, taskInvocationAction, _globalCallbacks.TaskInvocationActions);
 
@@ -130,13 +139,23 @@ internal void RunEvaluatedPropertiesActions(
         => RunRegisteredActions(_globalCallbacks.EvaluatedPropertiesActions, evaluatedPropertiesCheckData, checkContext, resultHandler);
 
     internal void RunParsedItemsActions(
+#pragma warning disable CS0618 // Type or member is obsolete
         ParsedItemsCheckData parsedItemsCheckData,
+#pragma warning restore CS0618 // Type or member is obsolete
         ICheckContext checkContext,
         Action<CheckWrapper, ICheckContext, CheckConfigurationEffective[], BuildCheckResult>
             resultHandler)
         => RunRegisteredActions(_globalCallbacks.ParsedItemsActions, parsedItemsCheckData,
             checkContext, resultHandler);
 
+    internal void RunEvaluatedItemsActions(
+        EvaluatedItemsCheckData evaluatedItemsCheckData,
+        ICheckContext checkContext,
+        Action<CheckWrapper, ICheckContext, CheckConfigurationEffective[], BuildCheckResult>
+            resultHandler)
+        => RunRegisteredActions(_globalCallbacks.EvaluatedItemsActions, evaluatedItemsCheckData,
+            checkContext, resultHandler);
+
     internal void RunTaskInvocationActions(
         TaskInvocationCheckData taskInvocationCheckData,
         ICheckContext checkContext,
diff --git a/src/Build/BuildCheck/Infrastructure/BuildEventsProcessor.cs b/src/Build/BuildCheck/Infrastructure/BuildEventsProcessor.cs
index 3ab917a4850..3c92b0e6004 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildEventsProcessor.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildEventsProcessor.cs
@@ -77,13 +77,17 @@ internal void ProcessEvaluationFinishedEventArgs(
                 evaluationFinishedEventArgs.ProjectFile!, /*unused*/
                 null, /*unused*/null, _cache, false /*Not explicitly loaded - unused*/);
 
+#pragma warning disable CS0618 // Type or member is obsolete
             ParsedItemsCheckData itemsCheckData = new(
+#pragma warning restore CS0618 // Type or member is obsolete
                 evaluationFinishedEventArgs.ProjectFile!,
                 evaluationFinishedEventArgs.BuildEventContext?.ProjectInstanceId,
                 new ItemsHolder(xml.Items, xml.ItemGroups));
 
             _buildCheckCentralContext.RunParsedItemsActions(itemsCheckData, checkContext, ReportResult);
         }
+
+        _buildCheckCentralContext.RunEvaluatedItemsActions(new EvaluatedItemsCheckData(evaluationFinishedEventArgs), checkContext, ReportResult);
     }
 
     /// <summary>
diff --git a/src/Build/BuildCheck/Infrastructure/CheckRegistrationContext.cs b/src/Build/BuildCheck/Infrastructure/CheckRegistrationContext.cs
index 4ec9cd0a3a5..a3ec42eb469 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckRegistrationContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckRegistrationContext.cs
@@ -15,9 +15,14 @@ public void RegisterEnvironmentVariableReadAction(Action<BuildCheckDataContext<E
     public void RegisterEvaluatedPropertiesAction(Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>> evaluatedPropertiesAction) =>
         buildCheckCentralContext.RegisterEvaluatedPropertiesAction(checkWrapper, evaluatedPropertiesAction);
 
+#pragma warning disable CS0618 // Type or member is obsolete
     public void RegisterParsedItemsAction(Action<BuildCheckDataContext<ParsedItemsCheckData>> parsedItemsAction) =>
+#pragma warning restore CS0618 // Type or member is obsolete
         buildCheckCentralContext.RegisterParsedItemsAction(checkWrapper, parsedItemsAction);
 
+    public void RegisterEvaluatedItemsAction(Action<BuildCheckDataContext<EvaluatedItemsCheckData>> evaluatedItemsAction) =>
+        buildCheckCentralContext.RegisterEvaluatedItemsAction(checkWrapper, evaluatedItemsAction);
+
     public void RegisterTaskInvocationAction(Action<BuildCheckDataContext<TaskInvocationCheckData>> taskInvocationAction) =>
         buildCheckCentralContext.RegisterTaskInvocationAction(checkWrapper, taskInvocationAction);
 
diff --git a/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs b/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
index 46c295514c3..260b02cc466 100644
--- a/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
+++ b/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
@@ -7,6 +7,7 @@
 using Microsoft.Build.Collections;
 using Microsoft.Build.Construction;
 using Microsoft.Build.Framework;
+using Microsoft.Build.Logging;
 
 namespace Microsoft.Build.Experimental.BuildCheck;
 
@@ -40,9 +41,11 @@ public IEnumerable<ProjectItemElement> GetItemsOfType(string itemType)
 }
 
 /// <summary>
-/// BuildCheck OM data representing the evaluated items of a project.
+/// BuildCheck OM data representing the evaluated items of a project - but only those defined within the project!.
+/// No explicit nor implicit imports are regarded. If you are looking the get all evaluated items - use <see cref="EvaluatedItemsCheckData"/>
 /// </summary>
-public class ParsedItemsCheckData : CheckData
+[Obsolete("Use EvaluatedItemsData for access to evaluated items.", false)]
+public sealed class ParsedItemsCheckData : CheckData
 {
     internal ParsedItemsCheckData(
         string projectFilePath,
@@ -53,6 +56,31 @@ internal ParsedItemsCheckData(
     public ItemsHolder ItemsHolder { get; }
 }
 
+/// <summary>
+/// BuildCheck OM data representing the evaluated items of a project.
+/// </summary>
+public sealed class EvaluatedItemsCheckData : CheckData
+{
+    internal EvaluatedItemsCheckData(
+        ProjectEvaluationFinishedEventArgs evaluationFinishedEventArgs)
+        : base(evaluationFinishedEventArgs.ProjectFile!, evaluationFinishedEventArgs.BuildEventContext?.ProjectInstanceId)
+    {
+        _evaluationFinishedEventArgs = evaluationFinishedEventArgs;
+    }
+
+    private readonly ProjectEvaluationFinishedEventArgs _evaluationFinishedEventArgs;
+
+    /// <summary>
+    /// Lazy enumerates evaluated items for a current project.
+    /// </summary>
+    public IEnumerable<ItemData> EvaluatedItems => _evaluationFinishedEventArgs.EnumerateItems();
+
+    /// <summary>
+    /// Lazy enumerates evaluated items for a current project. Only items with matching type will be returned (case-insensitive, MSBuild valid names only).
+    /// </summary>
+    public IEnumerable<ItemData> EnumerateItemsOfType(string typeName) => _evaluationFinishedEventArgs.EnumerateItemsOfType(typeName);
+}
+
 /// <summary>
 /// BuildCheck OM data representing a task executed by a project.
 /// </summary>
diff --git a/src/BuildCheck.UnitTests/MockBuildCheckRegistrationContext.cs b/src/BuildCheck.UnitTests/MockBuildCheckRegistrationContext.cs
index ced7415118d..1deb103abfe 100644
--- a/src/BuildCheck.UnitTests/MockBuildCheckRegistrationContext.cs
+++ b/src/BuildCheck.UnitTests/MockBuildCheckRegistrationContext.cs
@@ -18,6 +18,7 @@ internal sealed class MockBuildCheckRegistrationContext : IBuildCheckRegistratio
         public void RegisterEvaluatedPropertiesAction(Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>> evaluatedPropertiesAction)
             => _evaluatedPropertiesAction += evaluatedPropertiesAction;
         public void RegisterParsedItemsAction(Action<BuildCheckDataContext<ParsedItemsCheckData>> parsedItemsAction) => throw new NotImplementedException();
+        public void RegisterEvaluatedItemsAction(Action<BuildCheckDataContext<EvaluatedItemsCheckData>> evaluatedItemsAction) => throw new NotImplementedException();
 
         public void RegisterTaskInvocationAction(Action<BuildCheckDataContext<TaskInvocationCheckData>> taskInvocationAction)
             => _taskInvocationAction += taskInvocationAction;
