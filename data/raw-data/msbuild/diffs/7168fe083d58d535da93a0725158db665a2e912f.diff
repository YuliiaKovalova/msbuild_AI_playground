diff --git a/src/MSBuild/Resources/Strings.resx b/src/MSBuild/Resources/Strings.resx
index 800c4f34322..16a90d6c155 100644
--- a/src/MSBuild/Resources/Strings.resx
+++ b/src/MSBuild/Resources/Strings.resx
@@ -879,22 +879,22 @@
   </data>
   <data name="HelpMessage_43_GetPropertySwitch" Visibility="Public">
     <value>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </value>
     <comment>
-      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: "-getProperty" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
   <data name="HelpMessage_44_GetItemSwitch" Visibility="Public">
     <value>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </value>
     <comment>
       LOCALIZATION: "-getItem" should not be localized.
@@ -903,7 +903,7 @@
   </data>
   <data name="HelpMessage_45_GetTargetResultSwitch" Visibility="Public">
     <value>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </value>
     <comment>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -912,9 +912,9 @@
   </data>
   <data name="HelpMessage_46_FeatureAvailabilitySwitch" Visibility="Public">
     <value>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </value>
     <comment>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -923,11 +923,11 @@
   </data>
   <data name="HelpMessage_47_TerminalLoggerSwitch" Visibility="Public">
     <value>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </value>
     <comment>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -936,24 +936,26 @@
   </data>
   <data name="HelpMessage_48_TerminalLoggerParametersSwitch" Visibility="Public">
     <value>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </value>
     <comment>
-      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
   <data name="HelpMessage_49_WaitForDebuggerSwitch" Visibility="Public">
     <value>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </value>
     <comment>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -962,11 +964,12 @@
   </data>
   <data name="HelpMessage_50_NodeModeSwitch" Visibility="Public">
     <value>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </value>
     <comment>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index 22e94f17bfc..5b06e14b276 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -126,16 +126,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -144,16 +144,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -162,10 +162,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -174,14 +174,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -190,18 +190,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -210,24 +210,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -236,12 +240,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -250,18 +254,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index 2bcc837a8f0..61ee8ce9e48 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -126,16 +126,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -144,16 +144,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -162,10 +162,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -174,14 +174,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -190,18 +190,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -210,24 +210,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -236,12 +240,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -250,18 +254,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index eea8117f6d1..adb3e972ecc 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -125,16 +125,16 @@ Esta marca es experimental y puede que no funcione según lo previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@ Esta marca es experimental y puede que no funcione según lo previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@ Esta marca es experimental y puede que no funcione según lo previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@ Esta marca es experimental y puede que no funcione según lo previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@ Esta marca es experimental y puede que no funcione según lo previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@ Esta marca es experimental y puede que no funcione según lo previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@ Esta marca es experimental y puede que no funcione según lo previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@ Esta marca es experimental y puede que no funcione según lo previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 80f76891234..5d4ca11fa4b 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -125,16 +125,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index 68a2e901b32..3f7f257039a 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -125,16 +125,16 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index ad2478eb023..c5f4afdd96c 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -125,16 +125,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 679dc9459f7..34e5069ebcb 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -125,16 +125,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index b595cdf57f3..b96735b3c5d 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -125,16 +125,16 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index 44c4d8f4ab7..67c846c9750 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -125,16 +125,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index 64ec9f03950..c24506a0d31 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -125,16 +125,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index b3c553b99e2..4fb3f6f7b77 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -125,16 +125,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index dc416d7e715..b965fcbbaec 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -125,16 +125,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index 8d80ab1c2d0..6eb2f90af4e 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -125,16 +125,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_43_GetPropertySwitch">
         <source>  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </source>
         <target state="new">  -getProperty:propertyName,...
-                    Write out the value of the property or properties after
-                    evaluation, without executing the build,or if either
-                    the -targets option or the -getTargetResult option is
-                    used, write out the values after the build.
+                      Write out the value of the property or properties after
+                      evaluation, without executing the build, or if either
+                      the -targets option or the -getTargetResult option is
+                      used, write out the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getProperty:" should not be localized.
@@ -143,16 +143,16 @@
       </trans-unit>
       <trans-unit id="HelpMessage_44_GetItemSwitch">
         <source>  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </source>
         <target state="new">  -getItem:itemName,...
-                    Write out the value of the item or items after evaluation
-                    without executing the build, or if either the -targets
-                    option or the -getTargetResult option is used, write out
-                    the values after the build.
+                      Write out the value of the item or items after evaluation
+                      without executing the build, or if either the -targets
+                      option or the -getTargetResult option is used, write out
+                      the values after the build.
     </target>
         <note>
       LOCALIZATION: "-getItem" should not be localized.
@@ -161,10 +161,10 @@
       </trans-unit>
       <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
         <source>  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </source>
         <target state="new">  -getTargetResult:targetName,...
-                    Write out the output values of the specified targets.
+                      Write out the output values of the specified targets.
     </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
@@ -173,14 +173,14 @@
       </trans-unit>
       <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
         <source>  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </source>
         <target state="new">  -featureavailability:featureName,...
-                    Check feature availability, The result is one of
-                    "Undefined", "Available", "NotAvailable" strings.
-                    (Short form: -fa)
+                      Check feature availability, The result is one of
+                      "Undefined", "Available", "NotAvailable" strings.
+                      (Short form: -fa)
     </target>
         <note>
       LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
@@ -189,18 +189,18 @@
       </trans-unit>
       <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
         <source>  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </source>
         <target state="new">  -terminallogger
-                    users are able to opt-in and use the TerminalLogger,
-                    EXCEPT when:
-                      The terminal does not support ANSI codes or color
-                      Output is redirected to a file or pipe
-                    (Short form: -tl)
+                      Users are able to opt-in and use the TerminalLogger,
+                      EXCEPT when:
+                      - The terminal does not support ANSI codes or color
+                      - Output is redirected to a file or pipe
+                      (Short form: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
@@ -209,24 +209,28 @@
       </trans-unit>
       <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
         <source>  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </source>
         <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
-                    users are able to opt-in and use the TerminalLogger.
-                    `true` forces TerminalLogger to be used even wwhen it would be disabled
-                    `false` forces TerminalLogger to not be used even when it would be enabled
-                    `auto` enables TerminalLogger when the terminal supports it and the session
-                     doesn't have redirected stdout/stderr
-                    (Short form: -tlp)
-                    Example:
-                      -termionalLoggerParameters:default=auto
+                      Users are able to opt-in and use the TerminalLogger.
+                      - `true` forces TerminalLogger to be used even wwhen it
+                      would be disabled.
+                      - `false` forces TerminalLogger to not be used even when
+                      it would be enabled.
+                      - `auto` enables TerminalLogger when the terminal supports
+                      it and the session doesn't have redirected stdout/stderr
+                      (Short form: -tlp)
+                      Example:
+                        -termionalLoggerParameters:default=auto
     </target>
         <note>
       LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
@@ -235,12 +239,12 @@
       </trans-unit>
       <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
         <source>  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </source>
         <target state="new">  -waitfordebugger
-                    Add wait for debugger command line switch (/wfd) in Debug build.
-                    (Short form: -wfd)
+                      Wait for debugger command line switch in Debug build.
+                      (Short form: -wfd)
     </target>
         <note>
       LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
@@ -249,18 +253,20 @@
       </trans-unit>
       <trans-unit id="HelpMessage_50_NodeModeSwitch">
         <source>  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </source>
         <target state="new">  -nodemode:number
-                    It's used when MSBuild spawns a process, indicating that MSBuild
-                    should start up in "Out of process worker node" mode.
-                    (Short form: -nmode)
-                    Example:
-                       -nodemode:1
+                      It's used when MSBuild spawns a process, indicating that
+                      MSBuild should start up in "Out of process worker node"
+                      mode.
+                      (Short form: -nmode)
+                      Example:
+                        -nodemode:1
     </target>
         <note>
       LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
