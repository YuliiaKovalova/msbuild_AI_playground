diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 94766afcd2d..5155780b1ff 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1376,11 +1376,16 @@ internal void ExecuteSubmission<TRequestData, TResultData>(
             where TResultData : BuildResultBase
         {
             // TODO: here we should add BuildRequestStarted https://github.com/dotnet/msbuild/issues/10145
-            BuildSubmissionStartedEventArgs submissionStartedEvent = new(submission.BuildRequestData);
+            BuildSubmissionStartedEventArgs submissionStartedEvent = new(
+                submission.BuildRequestDataBase.GlobalPropertiesLookup,
+                submission.BuildRequestDataBase.EntryProjectsFullPath,
+                submission.BuildRequestDataBase.TargetNames,
+                (Framework.BuildRequestDataFlags)submission.BuildRequestDataBase.Flags,
+                submission.BuildResultBase.SubmissionId);
 
             // BuildEventContext buildEventContext = new BuildEventContext(submission.SubmissionId, 1, BuildEventContext.InvalidProjectInstanceId, BuildEventContext.InvalidProjectContextId, BuildEventContext.InvalidTargetId, BuildEventContext.InvalidTaskId);
             // ((IBuildComponentHost)this).LoggingService.LogBuildEvent()
-
+            
             if (submission is BuildSubmission buildSubmission)
             {
                 ExecuteSubmission(buildSubmission, allowMainThreadBuild);
diff --git a/src/Framework/BuildSubmissionStartedEventArgs.cs b/src/Framework/BuildSubmissionStartedEventArgs.cs
index 1c8ac7dc4d6..3d9e06f2cbf 100644
--- a/src/Framework/BuildSubmissionStartedEventArgs.cs
+++ b/src/Framework/BuildSubmissionStartedEventArgs.cs
@@ -3,30 +3,37 @@
 
 using System;
 using System.Collections.Generic;
+using System.IO;
+using Microsoft.Build.Shared;
 
 namespace Microsoft.Build.Framework
 {
-    // QUESTIONS: I have a base, but the imports are a bit problematic, bc the types are in Microsoft.BuildExecution
-    // which I don't think is a great import to make in this case.
     [Serializable]
-    public class BuildSubmissionStartedEventArgs : EventArgs
+    public class BuildSubmissionStartedEventArgs : BuildStatusEventArgs
     {
-        public IDictionary<string, string> GlobalProperties { get; protected set; }
+        public IReadOnlyDictionary<string, string?> GlobalProperties { get; protected set; }
 
-        public string EntryProjectFullPath { get; protected set; }
+        public IEnumerable<string> EntryProjectsFullPath { get; protected set; }
 
         public ICollection<string> TargetNames { get; protected set; }
 
         public BuildRequestDataFlags Flags { get; protected set; }
 
-        private string? SubmissionId;
+        public int SubmissionId { get; protected set; }
 
-        public BuildSubmissionStartedEventArgs(BuildRequestDataBase requestData)
+        public BuildSubmissionStartedEventArgs(
+            IReadOnlyDictionary<string, string?> globalProperties,
+            IEnumerable<string> entryProjectsFullPath,
+            ICollection<string> targetNames,
+            BuildRequestDataFlags flags,
+            int submissionId)
+            : base()
         {
-            requestData.EntryProjectFullPath = EntryProjectFullPath;
-            requestData.TargetNames = TargetNames;
-            requestData.Flags = Flags;
-            requestData.SubmissionId = SubmissionId;
+            GlobalProperties = globalProperties;
+            EntryProjectsFullPath = entryProjectsFullPath;
+            TargetNames = targetNames;
+            Flags = flags;
+            SubmissionId = submissionId;
         }
     }
 }
