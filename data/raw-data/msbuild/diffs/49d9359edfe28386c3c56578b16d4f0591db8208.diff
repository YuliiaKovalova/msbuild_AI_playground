diff --git a/src/BuildCheck.UnitTests/EndToEndTests.cs b/src/BuildCheck.UnitTests/EndToEndTests.cs
index 2c65c0255c4..709e9f2088c 100644
--- a/src/BuildCheck.UnitTests/EndToEndTests.cs
+++ b/src/BuildCheck.UnitTests/EndToEndTests.cs
@@ -194,17 +194,19 @@ public void EditorConfig_SeverityAppliedCorrectly(string BC0101Severity, string
     }
 
     [Fact]
-    public void EditorConfig_CustomConfigAppliedCorrectly()
+    public void CheckHasAccessToAllConfigs()
     {
         using (var env = TestEnvironment.Create())
         {
             string checkCandidatePath = Path.Combine(TestAssetsRootPath, "CheckCandidate");
-            string message = "An extra message for the analyzer";
+            string message = ": An extra message for the analyzer";
+            string severity = "warning";
+
             // Can't use Transitive environment due to the need to dogfood local nuget packages.
             AddCustomDataSourceToNugetConfig(checkCandidatePath);
             string editorConfigName = Path.Combine(checkCandidatePath, EditorConfigFileName);
             File.WriteAllText(editorConfigName, ReadEditorConfig(
-                new List<(string, string)>() { ("X01234", "warning") },
+                new List<(string, string)>() { ("X01234", severity) },
                 new List<(string, (string, string))>
                 {
                     ("X01234",("setMessage", message))
@@ -216,7 +218,7 @@ public void EditorConfig_CustomConfigAppliedCorrectly()
             success.ShouldBeTrue();
 
             projectCheckBuildLog.ShouldContain("warning X01234");
-            projectCheckBuildLog.ShouldContain(message);
+            projectCheckBuildLog.ShouldContain(severity + message);
 
             // Cleanup
             File.Delete(editorConfigName);
diff --git a/src/BuildCheck.UnitTests/TestAssets/CustomCheck/Check1.cs b/src/BuildCheck.UnitTests/TestAssets/CustomCheck/Check1.cs
index fe77f57f961..7f8015dd1a9 100644
--- a/src/BuildCheck.UnitTests/TestAssets/CustomCheck/Check1.cs
+++ b/src/BuildCheck.UnitTests/TestAssets/CustomCheck/Check1.cs
@@ -21,12 +21,13 @@ public sealed class Check1 : Check
 
         public override void Initialize(ConfigurationContext configurationContext)
         {
+            var infraData = configurationContext.CheckConfig[0];
             var customData = configurationContext.CustomConfigurationData[0].ConfigurationData;
             // configurationContext to be used only if check needs external configuration data.
             if (customData is not null &&
                 configurationContext.CustomConfigurationData[0].RuleId == "X01234")
             {
-                message = customData["setmessage"];
+                message = infraData.Severity + customData["setmessage"];
             }
         }
 
