diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 068860bc74b..96cada2d553 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1071,6 +1071,9 @@ public void EndBuild()
                             _buildTelemetry.Host = host;
 
                             _buildTelemetry.BuildCheckEnabled = _buildParameters!.IsBuildCheckEnabled;
+                            var sacState = NativeMethodsShared.GetSACState();
+                            // The Enforcement would lead to build crash - but let's have the check for completeness sake.
+                            _buildTelemetry.SACEnabled = sacState == NativeMethodsShared.SAC_State.Evaluation || sacState == NativeMethodsShared.SAC_State.Enforcement;
 
                             loggingService.LogTelemetry(buildEventContext: null, _buildTelemetry.EventName, _buildTelemetry.GetProperties());
                             // Clean telemetry to make it ready for next build submission.
diff --git a/src/Framework/NativeMethods.cs b/src/Framework/NativeMethods.cs
index 8df49a7e054..b907742edd1 100644
--- a/src/Framework/NativeMethods.cs
+++ b/src/Framework/NativeMethods.cs
@@ -664,11 +664,20 @@ private static LongPathsStatus IsLongPathsEnabledRegistry()
         }
     }
 
+    private static SAC_State? s_sacState;
+
     /// <summary>
     /// Get from registry state of the Smart App Control (SAC) on the system.
     /// </summary>
     /// <returns>State of SAC</returns>
     internal static SAC_State GetSACState()
+    {
+        s_sacState ??= GetSACStateInternal();
+
+        return s_sacState.Value;
+    }
+
+    internal static SAC_State GetSACStateInternal()
     {
         if (IsWindows)
         {
diff --git a/src/Framework/Telemetry/BuildTelemetry.cs b/src/Framework/Telemetry/BuildTelemetry.cs
index 166376f9d0c..c23d9269c9b 100644
--- a/src/Framework/Telemetry/BuildTelemetry.cs
+++ b/src/Framework/Telemetry/BuildTelemetry.cs
@@ -79,6 +79,11 @@ internal class BuildTelemetry : TelemetryBase
         /// </summary>
         public bool? BuildCheckEnabled { get; set; }
 
+        /// <summary>
+        /// True if Smart Application Control was enabled.
+        /// </summary>
+        public bool? SACEnabled { get; set; }
+
         /// <summary>
         /// State of MSBuild server process before this build.
         /// One of 'cold', 'hot', null (if not run as server)
@@ -155,6 +160,11 @@ public override IDictionary<string, string> GetProperties()
                 properties["BuildCheckEnabled"] = BuildCheckEnabled.Value.ToString(CultureInfo.InvariantCulture);
             }
 
+            if (SACEnabled != null)
+            {
+                properties["SACEnabled"] = SACEnabled.Value.ToString(CultureInfo.InvariantCulture);
+            }
+
             return properties;
         }
     }
