diff --git a/src/Build/BackEnd/Node/InProcNode.cs b/src/Build/BackEnd/Node/InProcNode.cs
index 3b0b1600905..927d696f2e9 100644
--- a/src/Build/BackEnd/Node/InProcNode.cs
+++ b/src/Build/BackEnd/Node/InProcNode.cs
@@ -336,18 +336,7 @@ private NodeEngineShutdownReason HandleShutdown(out Exception exception)
                 NativeMethodsShared.SetCurrentDirectory(_savedCurrentDirectory);
 
                 // Restore the original environment.
-                foreach (KeyValuePair<string, string> entry in CommunicationsUtilities.GetEnvironmentVariables())
-                {
-                    if (!_savedEnvironment.ContainsKey(entry.Key))
-                    {
-                        Environment.SetEnvironmentVariable(entry.Key, null);
-                    }
-                }
-
-                foreach (KeyValuePair<string, string> entry in _savedEnvironment)
-                {
-                    Environment.SetEnvironmentVariable(entry.Key, entry.Value);
-                }
+                CommunicationsUtilities.SetEnvironment(_savedEnvironment);
             }
 
             exception = _shutdownException;
diff --git a/src/Build/BackEnd/Node/OutOfProcNode.cs b/src/Build/BackEnd/Node/OutOfProcNode.cs
index fac0b79f6d3..852e5e900bb 100644
--- a/src/Build/BackEnd/Node/OutOfProcNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcNode.cs
@@ -476,19 +476,7 @@ private NodeEngineShutdownReason HandleShutdown(out Exception exception)
             // If the node was never configured, this will be null.
             if (_savedEnvironment != null)
             {
-                foreach (KeyValuePair<string, string> entry in CommunicationsUtilities.GetEnvironmentVariables())
-                {
-                    if (!_savedEnvironment.ContainsKey(entry.Key))
-                    {
-                        Environment.SetEnvironmentVariable(entry.Key, null);
-                    }
-                }
-
-                foreach (KeyValuePair<string, string> entry in _savedEnvironment)
-                {
-                    Environment.SetEnvironmentVariable(entry.Key, entry.Value);
-                }
-
+                CommunicationsUtilities.SetEnvironment(_savedEnvironment);
                 Traits.UpdateFromEnvironment();
             }
             try
@@ -714,20 +702,8 @@ private void HandleNodeConfiguration(NodeConfiguration configuration)
                 NativeMethodsShared.SetCurrentDirectory(BuildEnvironmentHelper.Instance.CurrentMSBuildToolsDirectory);
             }
 
-            // Replicate the environment.  First, unset any environment variables set by the previous configuration.
-            if (_currentConfiguration != null)
-            {
-                foreach (string key in _currentConfiguration.BuildParameters.BuildProcessEnvironment.Keys)
-                {
-                    Environment.SetEnvironmentVariable(key, null);
-                }
-            }
-
-            // Now set the new environment and update Traits class accordingly
-            foreach (KeyValuePair<string, string> environmentPair in _buildParameters.BuildProcessEnvironment)
-            {
-                Environment.SetEnvironmentVariable(environmentPair.Key, environmentPair.Value);
-            }
+            // Replicate the environment.
+            CommunicationsUtilities.SetEnvironment(_buildParameters.BuildProcessEnvironment);
             Traits.UpdateFromEnvironment();
 
             // We want to make sure the global project collection has the toolsets which were defined on the parent
diff --git a/src/Shared/CommunicationsUtilities.cs b/src/Shared/CommunicationsUtilities.cs
index b10887f23c3..84c3e93e82a 100644
--- a/src/Shared/CommunicationsUtilities.cs
+++ b/src/Shared/CommunicationsUtilities.cs
@@ -377,7 +377,7 @@ internal static void SetEnvironment(IDictionary<string, string> newEnvironment)
         {
             if (newEnvironment != null)
             {
-                // First, empty out any new variables
+                // First, empty out any old variables
                 foreach (KeyValuePair<string, string> entry in CommunicationsUtilities.GetEnvironmentVariables())
                 {
                     if (!newEnvironment.ContainsKey(entry.Key))
@@ -386,7 +386,7 @@ internal static void SetEnvironment(IDictionary<string, string> newEnvironment)
                     }
                 }
 
-                // Then, make sure the old ones have their old values.
+                // Then, make sure the new ones have their new values.
                 foreach (KeyValuePair<string, string> entry in newEnvironment)
                 {
                     Environment.SetEnvironmentVariable(entry.Key, entry.Value);
