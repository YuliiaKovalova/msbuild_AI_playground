diff --git a/src/Build.UnitTests/BackEnd/SdkResultItemComparison_Tests.cs b/src/Build.UnitTests/BackEnd/SdkResultItemComparison_Tests.cs
index cd1453dc42b..41e3db02aa5 100644
--- a/src/Build.UnitTests/BackEnd/SdkResultItemComparison_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/SdkResultItemComparison_Tests.cs
@@ -32,8 +32,8 @@ public void SdkResultItem_Equal_CtorParam_MetadataNull()
             var sdkResultItem1 = new SdkResultItem("anyspec", new Dictionary<string, string>());
             var sdkResultItem2 = new SdkResultItem("anyspec", null);
 
-            // Should bt the same, because passed null metadata will have value of new Dictionnary<String,String> like sdkResultItem1
-            sdkResultItem1.ShouldBe(sdkResultItem2);
+            // Should not be the same, because passing metadata = null is allowed and the Metadata property value allows null.
+            sdkResultItem1.ShouldNotBe(sdkResultItem2);
         }
 
         [Fact]
diff --git a/src/Framework/Sdk/SdkResultItem.cs b/src/Framework/Sdk/SdkResultItem.cs
index 40606bd8753..5a813aa4139 100644
--- a/src/Framework/Sdk/SdkResultItem.cs
+++ b/src/Framework/Sdk/SdkResultItem.cs
@@ -33,13 +33,14 @@ public SdkResultItem()
         public SdkResultItem(string itemSpec, Dictionary<string, string> metadata)
         {
             ItemSpec = itemSpec;
-            Metadata = metadata ?? new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase);
+            Metadata = metadata;
         }
 
         public override bool Equals(object obj)
         {
             if (obj is SdkResultItem item &&
                    ItemSpec == item.ItemSpec &&
+                   item.Metadata != null &&
                    Metadata?.Count == item.Metadata.Count)
             {
                 return Metadata.All(m => item.Metadata.TryGetValue(m.Key, out var itemValue) && itemValue == m.Value);
