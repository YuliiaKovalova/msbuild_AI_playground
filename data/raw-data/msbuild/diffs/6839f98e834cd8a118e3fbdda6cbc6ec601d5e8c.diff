diff --git a/.vsts-dotnet.yml b/.vsts-dotnet.yml
index 656ef733e1f..415fa36b412 100644
--- a/.vsts-dotnet.yml
+++ b/.vsts-dotnet.yml
@@ -42,17 +42,17 @@ stages:
   displayName: Build
 
   jobs:
-  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/vs16.11') }}: # should track next-release's active dev branch
+  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}: # should track next-release's active dev branch
     - template: /eng/common/templates/job/onelocbuild.yml
       parameters:
         LclSource: lclFilesfromPackage
         LclPackageId: 'LCL-JUNO-PROD-MSBUILD'
         MirrorRepo: 'msbuild'
-        MirrorBranch: 'vs16.11' # should match condition above
+        MirrorBranch: 'main' # should match condition above
 
   - job: Windows_NT
     pool:
-      name: VSEngSS-MicroBuild2019
+      name: VSEngSS-MicroBuild2019-1ES
       demands:
       - agent.os -equals Windows_NT
 
diff --git a/Directory.Build.props b/Directory.Build.props
index 35246a8e8ec..93150ee88bd 100644
--- a/Directory.Build.props
+++ b/Directory.Build.props
@@ -1,4 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
+<?xml version="1.0" encoding="utf-8"?>
 <Project>
   <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />
 
@@ -35,11 +35,10 @@
          NU5105: we're explicitly opting in to semver2, as is most of .NET Core
         CS1701 and CS1702 are by default ignored by Microsoft.NET.Sdk, but if you define the NoWarn property in Directory.Build.props,
         you don't get those defaults.
-        NU5125: Arcade uses licenseUrl when doing pack, which now causes NU5125 warning. This disables that warning until arcade can switch over.
         SYSLIB0011: Removing binary formatter will happen as part of a larger .NET-wide effort.
     -->
 
-    <NoWarn>$(NoWarn);NU1603;NU5105;NU5125;1701;1702;SYSLIB0011</NoWarn>
+    <NoWarn>$(NoWarn);NU1603;NU5105;1701;1702;SYSLIB0011</NoWarn>
   </PropertyGroup>
 
   <PropertyGroup Condition="'$(Configuration)' == 'Debug-MONO'">
diff --git a/NuGet.config b/NuGet.config
index cfa8997361c..9b4c6f6759c 100644
--- a/NuGet.config
+++ b/NuGet.config
@@ -5,6 +5,7 @@
     <add key="arcade" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json" />
     <add key="dotnet-public" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json" />
     <add key="dotnet-tools" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json" />
+    <add key="dotnet6" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json" />
   </packageSources>
   <disabledPackageSources />
 </configuration>
diff --git a/README.md b/README.md
index d0c18df79af..66ce222ad7e 100644
--- a/README.md
+++ b/README.md
@@ -8,11 +8,15 @@ The [changelog](documentation/Changelog.md) has detailed information about chang
 
 ### Build Status
 
-The current development branch is `main`. Changes in `main` will go into a future update of MSBuild, which will release with Visual Studio 17.0 and a corresponding version of the .NET Core SDK.
+The current development branch is `main`. Changes in `main` will go into a future update of MSBuild, which will release with Visual Studio 17.1 and a corresponding version of the .NET Core SDK.
 
 [![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/Microsoft/msbuild/msbuild-pr?branchName=main)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=887&branchName=main)
 
-We have forked for MSBuild 16.11 in the branch [`vs16.11`](https://github.com/Microsoft/msbuild/tree/vs16.11). Changes to that branch need special approval.
+We have forked for MSBuild 17.0 in the branch [`vs17.0`](https://github.com/Microsoft/msbuild/tree/vs17.0). Changes to that branch need special approval.
+
+[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/Microsoft/msbuild/msbuild-pr?branchName=vs17.0)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=887&branchName=vs17.0)
+
+16.11 builds from the branch [`vs16.11`](https://github.com/Microsoft/msbuild/tree/vs16.11). Only high-priority bugfixes will be considered for servicing 16.11.
 
 [![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/Microsoft/msbuild/msbuild-pr?branchName=vs16.11)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=887&branchName=vs16.11)
 
@@ -24,10 +28,6 @@ MSBuild 16.7 builds from the branch [`vs16.7`](https://github.com/dotnet/msbuild
 
 [![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/Microsoft/msbuild/msbuild-pr?branchName=vs16.7)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=887&branchName=vs16.7)
 
-MSBuild 16.4 builds from the branch [`vs16.4`](https://github.com/dotnet/msbuild/tree/vs16.4). Only high-priority bugfixes will be considered for servicing 16.4.
-
-[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/Microsoft/msbuild/msbuild-pr?branchName=vs16.4)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=887&branchName=vs16.4)
-
 MSBuild 15.9 builds from the branch [`vs15.9`](https://github.com/dotnet/msbuild/tree/vs15.9). Only very-high-priority bugfixes will be considered for servicing 15.9.
 
 ## Building
@@ -60,20 +60,24 @@ MSBuild can be run on Unix systems that support .NET Core. Set-up instructions c
 
 You can turn on localized builds via the `/p:LocalizedBuild=true` command line argument. For more information on localized builds and how to make contributions to MSBuild's translations, see our [localization documentation](documentation/wiki/Localization.md)
 
-#### Getting Started
-
+### Interested in contributing?
 Before you contribute, please read through the contributing and developer guides to get an idea of what kinds of pull requests we accept.
 
 * [Contributing Guide](documentation/wiki/Contributing-Code.md)
-
 * **Developer Guide on:**
    - [.NET Core](documentation/wiki/Building-Testing-and-Debugging-on-.Net-Core-MSBuild.md)
    - [Full Framework](documentation/wiki/Building-Testing-and-Debugging-on-Full-Framework-MSBuild.md)
    - [Mono](documentation/wiki/Building-Testing-and-Debugging-on-Mono-MSBuild.md)
 
-Looking for something to work on? This list of [up for grabs issues](https://github.com/Microsoft/msbuild/issues?q=is%3Aopen+is%3Aissue+label%3Aup-for-grabs) is a great place to start.
+* See our [up for grabs issues](https://github.com/Microsoft/msbuild/issues?q=is%3Aopen+is%3Aissue+label%3Aup-for-grabs) for a list of issues we think are great to onboard new developers.
+   - **Note:** Please leave a comment asking to be assigned the issue if you want to work on it.
+* See our [label documentation](documentation/wiki/labels.md) for descriptions of labels we use throughout the repo.
+
+### Other ways to contribute
+We encourage any contributions you decide to make to the repo!
 
-You are also encouraged to start a discussion by filing an issue or creating a gist.
+* [File an issue](https://github.com/dotnet/msbuild/issues/new/choose)
+* [Start a discussion](https://github.com/dotnet/msbuild/discussions)
 
 ### MSBuild Components
 
diff --git a/documentation/ProjectReference-Protocol.md b/documentation/ProjectReference-Protocol.md
index 5e2a138e3d5..9dc2f404fa2 100644
--- a/documentation/ProjectReference-Protocol.md
+++ b/documentation/ProjectReference-Protocol.md
@@ -22,7 +22,7 @@ Importing `Microsoft.Common.targets` includes logic that consumes these items an
 
 ## Who this document is for
 
-This document describes that process, including what is required of a project to be referenceable through a `ProjectReference`. It is intended for for MSBuild SDK maintainers, and those who have created a completely custom project type that needs to interoperate with other projects. It may also be of interest if you'd like to see the implementation details of references. Understanding the details should not be necessary to _use_ `ProjectReferences` in your project.
+This document describes that process, including what is required of a project to be referenceable through a `ProjectReference`. It is intended for MSBuild SDK maintainers, and those who have created a completely custom project type that needs to interoperate with other projects. It may also be of interest if you'd like to see the implementation details of references. Understanding the details should not be necessary to _use_ `ProjectReferences` in your project.
 
 ## Targets related to consuming a reference
 
@@ -51,7 +51,7 @@ These targets should exist in a project to be compatible with the common targets
 
 These targets are all defined in `Microsoft.Common.targets` and are defined in Microsoft SDKs. You should only have to implement them yourself if you require custom behavior or are authoring a project that doesn't import the common targets.
 
-If implementing a project with an “outer” (determine what properties to pass to the real build) and “inner” (fully specified) build, only `GetTargetFrameworkProperties` is required in the “outer” build. The other targets listed can be “inner” build only.
+If implementing a project with an “outer” (determine what properties to pass to the real build) and “inner” (fully specified) build, only `GetTargetFrameworks` is required in the “outer” build. The other targets listed can be “inner” build only.
 
 * `GetTargetFrameworks` tells referencing projects what options are available to the build.
   * It returns an item with the following metadata:
@@ -106,7 +106,7 @@ As of MSBuild 16.10, it is possible to gather additional properties from referen
 
 These properties will then be gathered via the `GetTargetFrameworks` call.  They will be available to the referencing project via the `AdditionalPropertiesFromProject` metadata on the `_MSBuildProjectReferenceExistent` item.  The `AdditionalPropertiesFromProject` value will be an XML string which contains the values of the properties for each `TargetFramework` in the referenced project.  For example:
 
-> :warning: This format is being changed. Soon, the schema will replace <net5.0> with <TargetFramework Name="net5.0">. You can opt into that behavior early by setting the _UseAttributeForTargetFrameworkInfoPropertyNames property to true. This property will have no effect after the transition is complete.
+> :warning: This format is being changed. Soon, the schema will replace `<net5.0>` with `<TargetFramework Name="net5.0">`. You can opt into that behavior early by setting the `_UseAttributeForTargetFrameworkInfoPropertyNames` property to true. This property will have no effect after the transition is complete.
 
 ```xml
 <AdditionalProjectProperties>
@@ -176,7 +176,7 @@ Project B: Unmanaged, has `$(Platforms)` constructed from its `Platform` metadat
 Because `AnyCPU` does not map to anything architecture-specific, a custom mapping must be defined. Project A can either:
 1. Define `PlatformLookupTable` in its project or a Directory.Build.props as `AnyCPU=x64` or `AnyCPU=Win32`.
 2. Define `PlatformLookupTable` as metadata on the `ProjectReference` item, which would take priority over a lookup table defined elsewhere.
-     *  When only one mapping is valid, you could also directly define `SetPlatform` metadata as `Platform=foo` (for unmanaged) or `PlatformTarget=bar` (for managed). This would skip over most negotiation logic.
+     *  When only one mapping is valid, you could also directly define `SetPlatform` metadata as `Platform=foo`. This would skip over most negotiation logic.
 
 Example of project A defining a lookup table directly on the `ProjectReference`:
 ```xml
diff --git a/documentation/consuming-nuget-package.md b/documentation/consuming-nuget-package.md
index e4e42f5c187..e611e2194d6 100644
--- a/documentation/consuming-nuget-package.md
+++ b/documentation/consuming-nuget-package.md
@@ -30,7 +30,7 @@ The items in this namespace are MSBuild tasks that have been developed by the MS
 [Csc](https://msdn.microsoft.com/en-us/library/microsoft.build.tasks.csc.aspx), and [Exec](https://msdn.microsoft.com/en-us/library/microsoft.build.tasks.exec.aspx).
 
 Most developers do not need to reference this package unless they want to extend a stock MSBuild task with custom functionality.  Alternatively, we recommend that MSBuild task developers reference the 
-`Microsoft.Build.Utilites.Core` package and implement the abstract class [Task](https://msdn.microsoft.com/en-us/library/microsoft.build.utilities.task.aspx) or
+`Microsoft.Build.Utilities.Core` package and implement the abstract class [Task](https://msdn.microsoft.com/en-us/library/microsoft.build.utilities.task.aspx) or
 [ToolTask](https://msdn.microsoft.com/en-us/library/microsoft.build.utilities.tooltask.aspx).
 
 ## Microsoft.Build
diff --git a/documentation/specs/sdk-resolvers.md b/documentation/specs/sdk-resolvers.md
new file mode 100644
index 00000000000..ddb73668e2b
--- /dev/null
+++ b/documentation/specs/sdk-resolvers.md
@@ -0,0 +1,29 @@
+> 🚧 Note
+>
+> This page is a work in progress.
+
+### Failed SDK Resolution
+SDK resolvers previously attempted to continue when one critically fails (throws an unhandled exception). This lead to misleading error messages such as:
+
+```
+warning MSB4242: The SDK resolver "Microsoft.DotNet.MSBuildWorkloadSdkResolver" failed to run. 's' is an invalid start of a property name. Expected a '"'. LineNumber: 14 | BytePositionInLine: 8.
+error MSB4236: The SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator' specified could not be found. [C:\foo\bar.csproj]
+```
+
+`MSB4236` is a red herring while `MSB4242` is the real error despite being logged as a warning. Because of this, SDK resolvers now fail the build _immediately_ upon unhandled exceptions. These exceptions are propogated as `SdkResolverException`s, and `MSB4242` has been promoted to an error code. The new error message appears like so:
+
+```
+C:\src\temp\8-18>"C:\foo\dotnet-sdk-6.0.100-preview.7.21379.14-win-x64\dotnet.exe" build    
+Microsoft (R) Build Engine version 17.0.0-dev-21420-01+5df152759 for .NET
+Copyright (C) Microsoft Corporation. All rights reserved.
+
+C:\foo\bar.csproj : error MSB4242: SDK Resolver Failure: "The SDK resolver "Microsoft.DotNet.MSBuildWorkloadSdkResolver" failed while attempting to resolve the SDK "Microsoft.NET.Sdk". Exception: "'s' is an invalid start of a property name. Expected a '"'. LineNumber: 14 | BytePositionInLine: 8."".
+
+Build FAILED.
+
+C:\foo\bar.csproj : error MSB4242: SDK Resolver Failure: "The SDK resolver "Microsoft.DotNet.MSBuildWorkloadSdkResolver" failed while attempting to resolve the SDK "Microsoft.NET.Sdk". Exception: "'s' is an invalid start of a property name. Expected a '"'. LineNumber: 14 | BytePositionInLine: 8."".
+    0 Warning(s)
+    1 Error(s)
+
+Time Elapsed 00:00:00.15
+```
\ No newline at end of file
diff --git a/documentation/wiki/ChangeWaves.md b/documentation/wiki/ChangeWaves.md
index 5b152e7c1a7..6c61626ec7b 100644
--- a/documentation/wiki/ChangeWaves.md
+++ b/documentation/wiki/ChangeWaves.md
@@ -8,7 +8,7 @@ Opt-out is a better approach for us because we'd likely get limited feedback whe
 The opt-out comes in the form of setting the environment variable `MSBuildDisableFeaturesFromVersion` to the Change Wave (or version) that contains the feature you want **disabled**. This version happens to be the version of MSBuild that the features were developed for. See the mapping of change waves to features below.
 
 ## When do they become permanent?
-A wave of features is set to "rotate out" (i.e. become standard functionality) two bands after its release. For example, wave 16.8 stayed opt-out through wave 16.10, becoming standard functionalty when wave 17.0 is introduced.
+A wave of features is set to "rotate out" (i.e. become standard functionality) two bands after its release. For example, wave 16.8 stayed opt-out through wave 16.10, becoming standard functionality when wave 17.0 is introduced.
 
 ## MSBuildDisableFeaturesFromVersion Values & Outcomes
 | `MSBuildDisableFeaturesFromVersion` Value                         | Result        | Receive Warning? |
diff --git a/documentation/wiki/Labels.md b/documentation/wiki/Labels.md
new file mode 100644
index 00000000000..7f65e10ad9b
--- /dev/null
+++ b/documentation/wiki/Labels.md
@@ -0,0 +1,12 @@
+# MSBuild Labels
+Here's a brief explanation on the labels most often used by the MSBuild team excluding hopefully self-evident ones such as `bug`.
+
+| Label             | Applied When | Notes |
+|-------------------|--------------|-------|
+| `needs-triage`    | Team has yet to determine what area/prioritization applies to the issue. | This is the primary label queried during a regular bug triage meeting. Automatically removed when `needs-more-info` is applied. |
+| `needs-attention` | An issue requires the team look at it during bug triage. | Automatically applied when a stale issue receives a comment. |
+| `needs-more-info` | Team asked for info needed to continue an investigation. | If no response is given within 7 days, the `stale` label is applied. |
+| `initial-investigation` | A member of the team does a "first pass" investigation. | `needs-triage` is applied and team member and unassigns themselves after the initial investigation is complete. |
+| `stale` | An issue marked with `needs-more-info` is inactive for 7 days. | The issue will be closed after 30 days of inactivity while the `stale` label is applied. |
+| `For consideration` | An issue should get higher prioritization when planning the next set of features. | |
+| `up-for-grabs` | Anyone can take ownership over this issue. | If a contributor wants to take the issue on, they should ask that it be assigned to them BEFORE doing development work.  |
diff --git a/eng/Build.props b/eng/Build.props
index 6393db2a363..2fff7c5c2ca 100644
--- a/eng/Build.props
+++ b/eng/Build.props
@@ -2,6 +2,10 @@
 <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
 <Project>
 
+  <PropertyGroup>
+    <RestoreUseStaticGraphEvaluation>true</RestoreUseStaticGraphEvaluation>
+  </PropertyGroup>
+
   <ItemGroup>
 	<!-- Remove all sln files globbed by arcade so far and add only MSBuild.sln to the build.
 	Without this, arcade tries to build all three MSBuild solution at once, which leads to
diff --git a/eng/Packages.props b/eng/Packages.props
index 1828ea18089..042bf70a426 100644
--- a/eng/Packages.props
+++ b/eng/Packages.props
@@ -13,6 +13,7 @@
     <PackageReference Update="Microsoft.CodeQuality.Analyzers" Version="3.3.0" PrivateAssets="all" />
     <PackageReference Update="Microsoft.DotNet.GenAPI" Version="2.1.0-prerelease-02404-02" />
     <PackageReference Update="Microsoft.DotNet.XUnitExtensions" Version="$(MicrosoftDotNetXUnitExtensionsVersion)" />
+    <PackageReference Update="Microsoft.IO.Redist" Version="4.7.1" />
     <PackageReference Update="Microsoft.Net.Compilers.Toolset" Version="$(MicrosoftNetCompilersToolsetVersion)" />
     <PackageReference Update="Microsoft.VisualStudio.SDK.EmbedInteropTypes" Version="15.0.15" />
     <PackageReference Update="Microsoft.VisualStudio.Setup.Configuration.Interop" Version="1.16.30" />
@@ -26,6 +27,7 @@
     <PackageReference Update="System.CodeDom" Version="4.4.0" />
     <PackageReference Update="System.Collections.Immutable" Version="5.0.0" />
     <PackageReference Update="System.Configuration.ConfigurationManager" Version="4.7.0" />
+    <PackageReference Update="System.Net.Http" Version="4.3.4" />
     <PackageReference Update="System.Memory" Version="4.5.4" />
     <PackageReference Update="System.Reflection.Metadata" Version="1.6.0" />
     <PackageReference Update="System.Resources.Extensions" Version="$(SystemResourcesExtensionsPackageVersion)" />
@@ -35,7 +37,7 @@
     <PackageReference Update="System.Security.Permissions" Version="4.7.0" />
     <PackageReference Update="System.Security.Principal.Windows" Version="4.7.0" />
     <PackageReference Update="System.Text.Encoding.CodePages" Version="4.0.1" />
-    <PackageReference Update="System.Text.Json" Version="4.7.0" />
+    <PackageReference Update="System.Text.Json" Version="5.0.2" />
     <PackageReference Update="System.Threading.Tasks.Dataflow" Version="4.9.0" />
     <PackageReference Update="xunit.assert" Version="$(XUnitVersion)" />
     <PackageReference Update="xunit.console" Version="$(XUnitVersion)" />
diff --git a/eng/Version.Details.xml b/eng/Version.Details.xml
index 913016f5165..3aa77017a4b 100644
--- a/eng/Version.Details.xml
+++ b/eng/Version.Details.xml
@@ -5,22 +5,22 @@
       <Uri>https://github.com/dotnet/roslyn-analyzers</Uri>
       <Sha />
     </Dependency>
-    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="6.0.0-beta.21379.2">
+    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="6.0.0-beta.21519.3">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>62a8aafffd4c68ef887680f6837abdff906a662c</Sha>
+      <Sha>85f3aa16d8797b5020f1fda11df1a958feb5f8df</Sha>
       <SourceBuild RepoName="arcade" ManagedOnly="true" />
     </Dependency>
-    <Dependency Name="NuGet.Build.Tasks" Version="6.0.0-preview.1.107">
+    <Dependency Name="NuGet.Build.Tasks" Version="6.0.0-rc.262">
       <Uri>https://github.com/nuget/nuget.client</Uri>
-      <Sha>7950d9b3c0b7fb9dc1c55700dc00e86e1ebd82f2</Sha>
+      <Sha>e3016693e01536996921d613152648d66eb0ce99</Sha>
     </Dependency>
-    <Dependency Name="Microsoft.Net.Compilers.Toolset" Version="4.0.0-3.21373.8">
+    <Dependency Name="Microsoft.Net.Compilers.Toolset" Version="4.0.0-6.21515.3">
       <Uri>https://github.com/dotnet/roslyn</Uri>
-      <Sha>5f124755232afa7b9903d6bdfcaeb47f39c8838e</Sha>
+      <Sha>95b7a0198f8c805b367f17e4639020ec21c16705</Sha>
     </Dependency>
-    <Dependency Name="Microsoft.DotNet.XUnitExtensions" Version="6.0.0-beta.21379.2">
+    <Dependency Name="Microsoft.DotNet.XUnitExtensions" Version="6.0.0-beta.21519.3">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>62a8aafffd4c68ef887680f6837abdff906a662c</Sha>
+      <Sha>85f3aa16d8797b5020f1fda11df1a958feb5f8df</Sha>
     </Dependency>
   </ToolsetDependencies>
 </Dependencies>
diff --git a/eng/Versions.props b/eng/Versions.props
index d9ffb13fe57..74d7aa3841a 100644
--- a/eng/Versions.props
+++ b/eng/Versions.props
@@ -2,7 +2,7 @@
 <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
 <Project>
   <PropertyGroup>
-    <VersionPrefix>17.0.0</VersionPrefix>
+    <VersionPrefix>17.1.0</VersionPrefix>
     <AssemblyVersion>15.1.0.0</AssemblyVersion>
     <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
     <DotNetUseShippingVersions>true</DotNetUseShippingVersions>
@@ -32,11 +32,11 @@
     <!-- DotNetCliVersion MUST match the dotnet version in global.json.
          Otherwise, this version of dotnet will not be installed and the build will error out. -->
     <DotNetCliVersion>$([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)..\global.json')), '"dotnet": "([^"]*)"').Groups.get_Item(1))</DotNetCliVersion>
-    <MicrosoftDotNetXUnitExtensionsVersion>6.0.0-beta.21379.2</MicrosoftDotNetXUnitExtensionsVersion>
+    <MicrosoftDotNetXUnitExtensionsVersion>6.0.0-beta.21519.3</MicrosoftDotNetXUnitExtensionsVersion>
     <MicrosoftCodeAnalysisBannedApiAnalyzersVersion>3.3.2</MicrosoftCodeAnalysisBannedApiAnalyzersVersion>
     <MicrosoftExtensionsDependencyModelVersion>6.0.0-preview.2.21154.6</MicrosoftExtensionsDependencyModelVersion>
-    <MicrosoftNetCompilersToolsetVersion>4.0.0-3.21373.8</MicrosoftNetCompilersToolsetVersion>
-    <NuGetBuildTasksVersion>6.0.0-preview.1.107</NuGetBuildTasksVersion>
+    <MicrosoftNetCompilersToolsetVersion>4.0.0-6.21515.3</MicrosoftNetCompilersToolsetVersion>
+    <NuGetBuildTasksVersion>6.0.0-rc.262</NuGetBuildTasksVersion>
   </PropertyGroup>
   <Target Name="OverrideArcadeFileVersion" AfterTargets="_InitializeAssemblyVersion">
     <!-- See https://github.com/dotnet/arcade/issues/3386
diff --git a/eng/build.ps1 b/eng/build.ps1
index 9245a71a0f4..2762b71fb9f 100644
--- a/eng/build.ps1
+++ b/eng/build.ps1
@@ -158,9 +158,13 @@ function Check-EditedFiles() {
 
 function Check-RequiredVersionBumps() {
   # Log VSTS errors for missing required version bumps
-  if ($env:SYSTEM_PULLREQUEST_TARGETBRANCH) {
+  $targetBranch = $env:SYSTEM_PULLREQUEST_TARGETBRANCH
+  if ($targetBranch) {
+    # Some PRs specify the bare target branch (most commonly "main"), some prefix it with "refs/heads/".
+    # The following statement normalizes both to a revision spec that git understands.
+    $targetBranch = "refs/remotes/origin/" + ($targetBranch -replace "^refs/heads/", "")
     $versionLineChanged = $false
-    git --no-pager diff --unified --no-color --exit-code -w origin/$env:SYSTEM_PULLREQUEST_TARGETBRANCH HEAD src\Framework\EngineServices.cs `
+    git --no-pager diff --unified --no-color --exit-code -w $targetBranch HEAD src\Framework\EngineServices.cs `
       | Select-String -Pattern "int Version =" | ForEach-Object -process { $versionLineChanged = $true }
     if (($LASTEXITCODE -ne 0) -and (-not $versionLineChanged)) {
       throw "##vso[task.logissue type=error] Detected changes in Framework\EngineServices.cs without a version bump.  " +
diff --git a/eng/common/build.sh b/eng/common/build.sh
index 55b298f16cc..bc07a1c6848 100755
--- a/eng/common/build.sh
+++ b/eng/common/build.sh
@@ -187,6 +187,10 @@ function InitializeCustomToolset {
 }
 
 function Build {
+
+  if [[ "$ci" == true ]]; then
+    TryLogClientIpAddress
+  fi
   InitializeToolset
   InitializeCustomToolset
 
diff --git a/eng/common/cross/arm/sources.list.trusty b/eng/common/cross/arm/sources.list.trusty
deleted file mode 100644
index 07d8f88d82e..00000000000
--- a/eng/common/cross/arm/sources.list.trusty
+++ /dev/null
@@ -1,11 +0,0 @@
-deb http://ports.ubuntu.com/ubuntu-ports/ trusty main restricted universe
-deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty main restricted universe
-
-deb http://ports.ubuntu.com/ubuntu-ports/ trusty-updates main restricted universe
-deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-updates main restricted universe
-
-deb http://ports.ubuntu.com/ubuntu-ports/ trusty-backports main restricted
-deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-backports main restricted
-
-deb http://ports.ubuntu.com/ubuntu-ports/ trusty-security main restricted universe multiverse
-deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm/trusty-lttng-2.4.patch b/eng/common/cross/arm/trusty-lttng-2.4.patch
deleted file mode 100644
index 8e4dd7ae719..00000000000
--- a/eng/common/cross/arm/trusty-lttng-2.4.patch
+++ /dev/null
@@ -1,71 +0,0 @@
-From e72c9d7ead60e3317bd6d1fade995c07021c947b Mon Sep 17 00:00:00 2001
-From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
-Date: Thu, 7 May 2015 13:25:04 -0400
-Subject: [PATCH] Fix: building probe providers with C++ compiler
-
-Robert Daniels wrote:
-> > I'm attempting to use lttng userspace tracing with a C++ application
-> > on an ARM platform. I'm using GCC 4.8.4 on Linux 3.14 with the 2.6
-> > release of lttng. I've compiled lttng-modules, lttng-ust, and
-> > lttng-tools and have been able to get a simple test working with C
-> > code.  When I attempt to run the hello.cxx test on my target it will
-> > segfault.
->
->
-> I spent a little time digging into this issue and finally discovered the
-> cause of my segfault with ARM C++ tracepoints.
->
-> There is a struct called 'lttng_event' in ust-events.h which contains an
-> empty union 'u'.  This was the cause of my issue.  Under C, this empty union
-> compiles to a zero byte member while under C++ it compiles to a one byte
-> member, and in my case was four-byte aligned which caused my C++ code to
-> have the 'cds_list_head node' offset incorrectly by four bytes.  This lead
-> to an incorrect linked list structure which caused my issue.
->
-> Since this union is empty, I simply removed it from the struct and everything
-> worked correctly.
->
-> I don't know the history or purpose behind this empty union so I'd like to
-> know if this is a safe fix.  If it is I can submit a patch with the union
-> removed.
-
-That's a very nice catch!
-
-We do not support building tracepoint probe provider with
-g++ yet, as stated in lttng-ust(3):
-
-"- Note for C++ support: although an application instrumented with
-   tracepoints can be compiled with g++, tracepoint probes should be
-   compiled with gcc (only tested with gcc so far)."
-
-However, if it works fine with this fix, then I'm tempted to take it,
-especially because removing the empty union does not appear to affect
-the layout of struct lttng_event as seen from liblttng-ust, which must
-be compiled with a C compiler,  and from probe providers compiled with
-a C compiler. So all we are changing is the layout of a probe provider
-compiled with a C++ compiler, which is anyway buggy at the moment,
-because it is not compatible with the layout expected by liblttng-ust
-compiled with a C compiler.
-
-Reported-by: Robert Daniels <robert.daniels@vantagecontrols.com>
-Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
----
- include/lttng/ust-events.h | 2 --
- 1 file changed, 2 deletions(-)
-
-diff --git a/usr/include/lttng/ust-events.h b/usr/include/lttng/ust-events.h
-index 328a875..3d7a274 100644
---- a/usr/include/lttng/ust-events.h
-+++ b/usr/include/lttng/ust-events.h
-@@ -407,8 +407,6 @@ struct lttng_event {
- 	void *_deprecated1;
- 	struct lttng_ctx *ctx;
- 	enum lttng_ust_instrumentation instrumentation;
--	union {
--	} u;
- 	struct cds_list_head node;		/* Event list in session */
- 	struct cds_list_head _deprecated2;
- 	void *_deprecated3;
--- 
-2.7.4
-
diff --git a/eng/common/cross/arm/trusty.patch b/eng/common/cross/arm/trusty.patch
deleted file mode 100644
index 2f2972f8eb5..00000000000
--- a/eng/common/cross/arm/trusty.patch
+++ /dev/null
@@ -1,97 +0,0 @@
-diff -u -r a/usr/include/urcu/uatomic/generic.h b/usr/include/urcu/uatomic/generic.h
---- a/usr/include/urcu/uatomic/generic.h	2014-03-28 06:04:42.000000000 +0900
-+++ b/usr/include/urcu/uatomic/generic.h	2017-02-13 10:35:21.189927116 +0900
-@@ -65,17 +65,17 @@
- 	switch (len) {
- #ifdef UATOMIC_HAS_ATOMIC_BYTE
- 	case 1:
--		return __sync_val_compare_and_swap_1(addr, old, _new);
-+		return __sync_val_compare_and_swap_1((uint8_t *) addr, old, _new);
- #endif
- #ifdef UATOMIC_HAS_ATOMIC_SHORT
- 	case 2:
--		return __sync_val_compare_and_swap_2(addr, old, _new);
-+		return __sync_val_compare_and_swap_2((uint16_t *) addr, old, _new);
- #endif
- 	case 4:
--		return __sync_val_compare_and_swap_4(addr, old, _new);
-+		return __sync_val_compare_and_swap_4((uint32_t *) addr, old, _new);
- #if (CAA_BITS_PER_LONG == 64)
- 	case 8:
--		return __sync_val_compare_and_swap_8(addr, old, _new);
-+		return __sync_val_compare_and_swap_8((uint64_t *) addr, old, _new);
- #endif
- 	}
- 	_uatomic_link_error();
-@@ -100,20 +100,20 @@
- 	switch (len) {
- #ifdef UATOMIC_HAS_ATOMIC_BYTE
- 	case 1:
--		__sync_and_and_fetch_1(addr, val);
-+		__sync_and_and_fetch_1((uint8_t *) addr, val);
- 		return;
- #endif
- #ifdef UATOMIC_HAS_ATOMIC_SHORT
- 	case 2:
--		__sync_and_and_fetch_2(addr, val);
-+		__sync_and_and_fetch_2((uint16_t *) addr, val);
- 		return;
- #endif
- 	case 4:
--		__sync_and_and_fetch_4(addr, val);
-+		__sync_and_and_fetch_4((uint32_t *) addr, val);
- 		return;
- #if (CAA_BITS_PER_LONG == 64)
- 	case 8:
--		__sync_and_and_fetch_8(addr, val);
-+		__sync_and_and_fetch_8((uint64_t *) addr, val);
- 		return;
- #endif
- 	}
-@@ -139,20 +139,20 @@
- 	switch (len) {
- #ifdef UATOMIC_HAS_ATOMIC_BYTE
- 	case 1:
--		__sync_or_and_fetch_1(addr, val);
-+		__sync_or_and_fetch_1((uint8_t *) addr, val);
- 		return;
- #endif
- #ifdef UATOMIC_HAS_ATOMIC_SHORT
- 	case 2:
--		__sync_or_and_fetch_2(addr, val);
-+		__sync_or_and_fetch_2((uint16_t *) addr, val);
- 		return;
- #endif
- 	case 4:
--		__sync_or_and_fetch_4(addr, val);
-+		__sync_or_and_fetch_4((uint32_t *) addr, val);
- 		return;
- #if (CAA_BITS_PER_LONG == 64)
- 	case 8:
--		__sync_or_and_fetch_8(addr, val);
-+		__sync_or_and_fetch_8((uint64_t *) addr, val);
- 		return;
- #endif
- 	}
-@@ -180,17 +180,17 @@
- 	switch (len) {
- #ifdef UATOMIC_HAS_ATOMIC_BYTE
- 	case 1:
--		return __sync_add_and_fetch_1(addr, val);
-+		return __sync_add_and_fetch_1((uint8_t *) addr, val);
- #endif
- #ifdef UATOMIC_HAS_ATOMIC_SHORT
- 	case 2:
--		return __sync_add_and_fetch_2(addr, val);
-+		return __sync_add_and_fetch_2((uint16_t *) addr, val);
- #endif
- 	case 4:
--		return __sync_add_and_fetch_4(addr, val);
-+		return __sync_add_and_fetch_4((uint32_t *) addr, val);
- #if (CAA_BITS_PER_LONG == 64)
- 	case 8:
--		return __sync_add_and_fetch_8(addr, val);
-+		return __sync_add_and_fetch_8((uint64_t *) addr, val);
- #endif
- 	}
- 	_uatomic_link_error();
diff --git a/eng/common/cross/arm64/sources.list.trusty b/eng/common/cross/arm64/sources.list.trusty
deleted file mode 100644
index 07d8f88d82e..00000000000
--- a/eng/common/cross/arm64/sources.list.trusty
+++ /dev/null
@@ -1,11 +0,0 @@
-deb http://ports.ubuntu.com/ubuntu-ports/ trusty main restricted universe
-deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty main restricted universe
-
-deb http://ports.ubuntu.com/ubuntu-ports/ trusty-updates main restricted universe
-deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-updates main restricted universe
-
-deb http://ports.ubuntu.com/ubuntu-ports/ trusty-backports main restricted
-deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-backports main restricted
-
-deb http://ports.ubuntu.com/ubuntu-ports/ trusty-security main restricted universe multiverse
-deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/build-rootfs.sh b/eng/common/cross/build-rootfs.sh
index 735a4c82838..5c05b39f101 100755
--- a/eng/common/cross/build-rootfs.sh
+++ b/eng/common/cross/build-rootfs.sh
@@ -6,10 +6,10 @@ usage()
 {
     echo "Usage: $0 [BuildArch] [CodeName] [lldbx.y] [--skipunmount] --rootfsdir <directory>]"
     echo "BuildArch can be: arm(default), armel, arm64, x86"
-    echo "CodeName - optional, Code name for Linux, can be: trusty, xenial(default), zesty, bionic, alpine, alpine3.9 or alpine3.13. If BuildArch is armel, LinuxCodeName is jessie(default) or tizen."
-    echo "                              for FreeBSD can be: freebsd11 or freebsd12."
+    echo "CodeName - optional, Code name for Linux, can be: xenial(default), zesty, bionic, alpine, alpine3.9 or alpine3.13. If BuildArch is armel, LinuxCodeName is jessie(default) or tizen."
+    echo "                              for FreeBSD can be: freebsd11, freebsd12, freebsd13"
     echo "                              for illumos can be: illumos."
-    echo "lldbx.y - optional, LLDB version, can be: lldb3.9(default), lldb4.0, lldb5.0, lldb6.0 no-lldb. Ignored for alpine and FReeBSD"
+    echo "lldbx.y - optional, LLDB version, can be: lldb3.9(default), lldb4.0, lldb5.0, lldb6.0 no-lldb. Ignored for alpine and FreeBSD"
     echo "--skipunmount - optional, will skip the unmount of rootfs folder."
     echo "--use-mirror - optional, use mirror URL to fetch resources, when available."
     exit 1
@@ -60,13 +60,15 @@ __AlpinePackages+=" krb5-dev"
 __AlpinePackages+=" openssl-dev"
 __AlpinePackages+=" zlib-dev"
 
-__FreeBSDBase="12.1-RELEASE"
+__FreeBSDBase="12.2-RELEASE"
 __FreeBSDPkg="1.12.0"
+__FreeBSDABI="12"
 __FreeBSDPackages="libunwind"
 __FreeBSDPackages+=" icu"
 __FreeBSDPackages+=" libinotify"
 __FreeBSDPackages+=" lttng-ust"
 __FreeBSDPackages+=" krb5"
+__FreeBSDPackages+=" terminfo-db"
 
 __IllumosPackages="icu-64.2nb2"
 __IllumosPackages+=" mit-krb5-1.16.2nb4"
@@ -144,11 +146,6 @@ while :; do
         no-lldb)
             unset __LLDB_Package
             ;;
-        trusty) # Ubuntu 14.04
-            if [ "$__CodeName" != "jessie" ]; then
-                __CodeName=trusty
-            fi
-            ;;
         xenial) # Ubuntu 16.04
             if [ "$__CodeName" != "jessie" ]; then
                 __CodeName=xenial
@@ -208,12 +205,20 @@ while :; do
             ;;
         freebsd11)
             __FreeBSDBase="11.3-RELEASE"
+            __FreeBSDABI="11"
             ;&
         freebsd12)
             __CodeName=freebsd
             __BuildArch=x64
             __SkipUnmount=1
             ;;
+        freebsd13)
+            __CodeName=freebsd
+            __FreeBSDBase="13.0-RELEASE"
+            __FreeBSDABI="13"
+            __BuildArch=x64
+            __SkipUnmount=1
+            ;;
         illumos)
             __CodeName=illumos
             __BuildArch=x64
@@ -291,9 +296,9 @@ if [[ "$__CodeName" == "alpine" ]]; then
     rm -r $__ApkToolsDir
 elif [[ "$__CodeName" == "freebsd" ]]; then
     mkdir -p $__RootfsDir/usr/local/etc
+    JOBS="$(getconf _NPROCESSORS_ONLN)"
     wget -O - https://download.freebsd.org/ftp/releases/amd64/${__FreeBSDBase}/base.txz | tar -C $__RootfsDir -Jxf - ./lib ./usr/lib ./usr/libdata ./usr/include ./usr/share/keys ./etc ./bin/freebsd-version
-    # For now, ask for 11 ABI even on 12. This can be revisited later.
-    echo "ABI = \"FreeBSD:11:amd64\"; FINGERPRINTS = \"${__RootfsDir}/usr/share/keys\"; REPOS_DIR = [\"${__RootfsDir}/etc/pkg\"]; REPO_AUTOUPDATE = NO; RUN_SCRIPTS = NO;" > ${__RootfsDir}/usr/local/etc/pkg.conf
+    echo "ABI = \"FreeBSD:${__FreeBSDABI}:amd64\"; FINGERPRINTS = \"${__RootfsDir}/usr/share/keys\"; REPOS_DIR = [\"${__RootfsDir}/etc/pkg\"]; REPO_AUTOUPDATE = NO; RUN_SCRIPTS = NO;" > ${__RootfsDir}/usr/local/etc/pkg.conf
     echo "FreeBSD: { url: "pkg+http://pkg.FreeBSD.org/\${ABI}/quarterly", mirror_type: \"srv\", signature_type: \"fingerprints\", fingerprints: \"${__RootfsDir}/usr/share/keys/pkg\", enabled: yes }" > ${__RootfsDir}/etc/pkg/FreeBSD.conf
     mkdir -p $__RootfsDir/tmp
     # get and build package manager
@@ -301,7 +306,7 @@ elif [[ "$__CodeName" == "freebsd" ]]; then
     cd $__RootfsDir/tmp/pkg-${__FreeBSDPkg}
     # needed for install to succeed
     mkdir -p $__RootfsDir/host/etc
-    ./autogen.sh && ./configure --prefix=$__RootfsDir/host && make && make install
+    ./autogen.sh && ./configure --prefix=$__RootfsDir/host && make -j "$JOBS" && make install
     rm -rf $__RootfsDir/tmp/pkg-${__FreeBSDPkg}
     # install packages we need.
     INSTALL_AS_USER=$(whoami) $__RootfsDir/host/sbin/pkg -r $__RootfsDir -C $__RootfsDir/usr/local/etc/pkg.conf update
@@ -364,13 +369,6 @@ elif [[ -n $__CodeName ]]; then
         umount $__RootfsDir/* || true
     fi
 
-    if [[ "$__BuildArch" == "arm" && "$__CodeName" == "trusty" ]]; then
-        pushd $__RootfsDir
-        patch -p1 < $__CrossDir/$__BuildArch/trusty.patch
-        patch -p1 < $__CrossDir/$__BuildArch/trusty-lttng-2.4.patch
-        popd
-    fi
-
     if [[ "$__BuildArch" == "armel" && "$__CodeName" == "jessie" ]]; then
         pushd $__RootfsDir
         patch -p1 < $__CrossDir/$__BuildArch/armel.jessie.patch
diff --git a/eng/common/cross/toolchain.cmake b/eng/common/cross/toolchain.cmake
index fc11001aa76..ec8971eb019 100644
--- a/eng/common/cross/toolchain.cmake
+++ b/eng/common/cross/toolchain.cmake
@@ -138,8 +138,8 @@ function(add_toolchain_linker_flag Flag)
   if (NOT Config STREQUAL "")
     set(CONFIG_SUFFIX "_${Config}")
   endif()
-  set("CMAKE_EXE_LINKER_FLAGS${CONFIG_SUFFIX}" "${CMAKE_EXE_LINKER_FLAGS${CONFIG_SUFFIX}} ${Flag}" PARENT_SCOPE)
-  set("CMAKE_SHARED_LINKER_FLAGS${CONFIG_SUFFIX}" "${CMAKE_SHARED_LINKER_FLAGS${CONFIG_SUFFIX}} ${Flag}" PARENT_SCOPE)
+  set("CMAKE_EXE_LINKER_FLAGS${CONFIG_SUFFIX}_INIT" "${CMAKE_EXE_LINKER_FLAGS${CONFIG_SUFFIX}_INIT} ${Flag}" PARENT_SCOPE)
+  set("CMAKE_SHARED_LINKER_FLAGS${CONFIG_SUFFIX}_INIT" "${CMAKE_SHARED_LINKER_FLAGS${CONFIG_SUFFIX}_INIT} ${Flag}" PARENT_SCOPE)
 endfunction()
 
 if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
diff --git a/eng/common/cross/x86/sources.list.trusty b/eng/common/cross/x86/sources.list.trusty
deleted file mode 100644
index 9b3085436e9..00000000000
--- a/eng/common/cross/x86/sources.list.trusty
+++ /dev/null
@@ -1,11 +0,0 @@
-deb http://archive.ubuntu.com/ubuntu/ trusty main restricted universe
-deb-src http://archive.ubuntu.com/ubuntu/ trusty main restricted universe
-
-deb http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe
-deb-src http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe
-
-deb http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted
-deb-src http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted
-
-deb http://archive.ubuntu.com/ubuntu/ trusty-security main restricted universe multiverse
-deb-src http://archive.ubuntu.com/ubuntu/ trusty-security main restricted universe multiverse
diff --git a/eng/common/init-tools-native.sh b/eng/common/init-tools-native.sh
index 5bd205b5da3..3e6a8d6acf2 100755
--- a/eng/common/init-tools-native.sh
+++ b/eng/common/init-tools-native.sh
@@ -10,7 +10,7 @@ force=false
 download_retries=5
 retry_wait_time_seconds=30
 global_json_file="$(dirname "$(dirname "${scriptroot}")")/global.json"
-declare -A native_assets
+declare -a native_assets
 
 . $scriptroot/pipeline-logging-functions.sh
 . $scriptroot/native/common-library.sh
diff --git a/eng/common/native/common-library.sh b/eng/common/native/common-library.sh
index bf272dcf55a..080c2c283ae 100755
--- a/eng/common/native/common-library.sh
+++ b/eng/common/native/common-library.sh
@@ -148,8 +148,12 @@ function NewScriptShim {
   fi
   
   if [[ ! -f $tool_file_path ]]; then
-    Write-PipelineTelemetryError -category 'NativeToolsBootstrap' "Specified tool file path:'$tool_file_path' does not exist"
-    return 1
+    # try to see if the path is lower cased
+    tool_file_path="$(echo $tool_file_path | tr "[:upper:]" "[:lower:]")" 
+    if [[ ! -f $tool_file_path ]]; then
+      Write-PipelineTelemetryError -category 'NativeToolsBootstrap' "Specified tool file path:'$tool_file_path' does not exist"
+      return 1
+    fi
   fi
 
   local shim_contents=$'#!/usr/bin/env bash\n'
diff --git a/eng/common/post-build/sourcelink-validation.ps1 b/eng/common/post-build/sourcelink-validation.ps1
index 85c89861719..e8ab29afeb3 100644
--- a/eng/common/post-build/sourcelink-validation.ps1
+++ b/eng/common/post-build/sourcelink-validation.ps1
@@ -17,6 +17,7 @@ $global:RepoFiles = @{}
 $MaxParallelJobs = 16
 
 $MaxRetries = 5
+$RetryWaitTimeInSeconds = 30
 
 # Wait time between check for system load
 $SecondsBetweenLoadChecks = 10
@@ -99,21 +100,25 @@ $ValidatePackage = {
                     $Status = 200
                     $Cache = $using:RepoFiles
 
-                    $totalRetries = 0
+                    $attempts = 0
 
-                    while ($totalRetries -lt $using:MaxRetries) {
+                    while ($attempts -lt $using:MaxRetries) {
                       if ( !($Cache.ContainsKey($FilePath)) ) {
                         try {
                           $Uri = $Link -as [System.URI]
                         
-                          # Only GitHub links are valid
-                          if ($Uri.AbsoluteURI -ne $null -and ($Uri.Host -match 'github' -or $Uri.Host -match 'githubusercontent')) {
+                          if ($Link -match "submodules") {
+                            # Skip submodule links until sourcelink properly handles submodules
+                            $Status = 200
+                          }
+                          elseif ($Uri.AbsoluteURI -ne $null -and ($Uri.Host -match 'github' -or $Uri.Host -match 'githubusercontent')) {
+                            # Only GitHub links are valid
                             $Status = (Invoke-WebRequest -Uri $Link -UseBasicParsing -Method HEAD -TimeoutSec 5).StatusCode
                           }
                           else {
                             # If it's not a github link, we want to break out of the loop and not retry.
                             $Status = 0
-                            $totalRetries = $using:MaxRetries
+                            $attempts = $using:MaxRetries
                           }
                         }
                         catch {
@@ -123,9 +128,15 @@ $ValidatePackage = {
                       }
 
                       if ($Status -ne 200) {
-                        $totalRetries++
+                        $attempts++
                         
-                        if ($totalRetries -ge $using:MaxRetries) {
+                        if  ($attempts -lt $using:MaxRetries)
+                        {
+                          $attemptsLeft = $using:MaxRetries - $attempts
+                          Write-Warning "Download failed, $attemptsLeft attempts remaining, will retry in $using:RetryWaitTimeInSeconds seconds"
+                          Start-Sleep -Seconds $using:RetryWaitTimeInSeconds
+                        }
+                        else {
                           if ($NumFailedLinks -eq 0) {
                             if ($FailedFiles.Value -eq 0) {
                               Write-Host
diff --git a/eng/common/sdk-task.ps1 b/eng/common/sdk-task.ps1
index b1bca63ab1d..7ab9baac5c8 100644
--- a/eng/common/sdk-task.ps1
+++ b/eng/common/sdk-task.ps1
@@ -83,6 +83,9 @@ try {
   }
 
   if ($restore) {
+    if ($ci) {
+      Try-LogClientIpAddress
+    }
     Build 'Restore'
   }
 
diff --git a/eng/common/templates/job/job.yml b/eng/common/templates/job/job.yml
index 86696793480..37dceb1bab0 100644
--- a/eng/common/templates/job/job.yml
+++ b/eng/common/templates/job/job.yml
@@ -103,7 +103,7 @@ jobs:
 
   - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
     - ${{ if eq(parameters.enableMicrobuild, 'true') }}:
-      - task: MicroBuildSigningPlugin@2
+      - task: MicroBuildSigningPlugin@3
         displayName: Install MicroBuild plugin
         inputs:
           signType: $(_SignType)
diff --git a/eng/common/templates/job/publish-build-assets.yml b/eng/common/templates/job/publish-build-assets.yml
index 3b9e2524ff3..fe9dfdf720c 100644
--- a/eng/common/templates/job/publish-build-assets.yml
+++ b/eng/common/templates/job/publish-build-assets.yml
@@ -94,7 +94,31 @@ jobs:
         PathtoPublish: '$(Build.StagingDirectory)/ReleaseConfigs.txt'
         PublishLocation: Container
         ArtifactName: ReleaseConfigs
-    
+
+    - task: powershell@2
+      displayName: Check if SymbolPublishingExclusionsFile.txt exists
+      inputs:
+        targetType: inline
+        script: |
+          $symbolExclusionfile = "$(Build.SourcesDirectory)/eng/SymbolPublishingExclusionsFile.txt"
+          if(Test-Path -Path $symbolExclusionfile)
+          {
+            Write-Host "SymbolExclusionFile exists"
+            Write-Host "##vso[task.setvariable variable=SymbolExclusionFile]true"
+          }
+          else{
+           Write-Host "Symbols Exclusion file does not exists"
+           Write-Host "##vso[task.setvariable variable=SymbolExclusionFile]false"
+          }
+
+    - task: PublishBuildArtifacts@1
+      displayName: Publish SymbolPublishingExclusionsFile Artifact
+      condition: eq(variables['SymbolExclusionFile'], 'true') 
+      inputs:
+        PathtoPublish: '$(Build.SourcesDirectory)/eng/SymbolPublishingExclusionsFile.txt'
+        PublishLocation: Container
+        ArtifactName: ReleaseConfigs
+        
     - ${{ if eq(parameters.enablePublishBuildArtifacts, 'true') }}:
       - template: /eng/common/templates/steps/publish-logs.yml
         parameters:
diff --git a/eng/common/templates/job/source-index-stage1.yml b/eng/common/templates/job/source-index-stage1.yml
index b58d42364b9..1cc0c29e4fd 100644
--- a/eng/common/templates/job/source-index-stage1.yml
+++ b/eng/common/templates/job/source-index-stage1.yml
@@ -34,29 +34,24 @@ jobs:
     inputs:
       packageType: sdk
       version: 3.1.x
-
-  - task: UseDotNet@2
-    displayName: Use .NET Core sdk
-    inputs:
-      useGlobalJson: true
+      installationPath: $(Agent.TempDirectory)/dotnet
+      workingDirectory: $(Agent.TempDirectory)
 
   - script: |
-      dotnet tool install BinLogToSln --version $(SourceIndexPackageVersion) --add-source $(SourceIndexPackageSource) --tool-path .source-index/tools
-      dotnet tool install UploadIndexStage1 --version $(SourceIndexPackageVersion) --add-source $(SourceIndexPackageSource) --tool-path .source-index/tools
-      echo ##vso[task.prependpath]$(Build.SourcesDirectory)/.source-index/tools
+      $(Agent.TempDirectory)/dotnet/dotnet tool install BinLogToSln --version $(SourceIndexPackageVersion) --add-source $(SourceIndexPackageSource) --tool-path $(Agent.TempDirectory)/.source-index/tools
+      $(Agent.TempDirectory)/dotnet/dotnet tool install UploadIndexStage1 --version $(SourceIndexPackageVersion) --add-source $(SourceIndexPackageSource) --tool-path $(Agent.TempDirectory)/.source-index/tools
     displayName: Download Tools
+    # Set working directory to temp directory so 'dotnet' doesn't try to use global.json and use the repo's sdk.
+    workingDirectory: $(Agent.TempDirectory)
 
   - script: ${{ parameters.sourceIndexBuildCommand }}
     displayName: Build Repository
 
-  - script: BinLogToSln -i $(BinlogPath) -r $(Build.SourcesDirectory) -n $(Build.Repository.Name) -o .source-index/stage1output
+  - script: $(Agent.TempDirectory)/.source-index/tools/BinLogToSln -i $(BinlogPath) -r $(Build.SourcesDirectory) -n $(Build.Repository.Name) -o .source-index/stage1output
     displayName: Process Binlog into indexable sln
-    env:
-      DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 2
 
   - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
-    - script: UploadIndexStage1 -i .source-index/stage1output -n $(Build.Repository.Name)
+    - script: $(Agent.TempDirectory)/.source-index/tools/UploadIndexStage1 -i .source-index/stage1output -n $(Build.Repository.Name)
       displayName: Upload stage1 artifacts to source index
       env:
         BLOB_CONTAINER_URL: $(source-dot-net-stage1-blob-container-url)
-        DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 2
diff --git a/eng/common/templates/phases/base.yml b/eng/common/templates/phases/base.yml
deleted file mode 100644
index 0123cf43b16..00000000000
--- a/eng/common/templates/phases/base.yml
+++ /dev/null
@@ -1,130 +0,0 @@
-parameters:
-  # Optional: Clean sources before building
-  clean: true
-
-  # Optional: Git fetch depth
-  fetchDepth: ''
-
-  # Optional: name of the phase (not specifying phase name may cause name collisions)
-  name: ''
-  # Optional: display name of the phase
-  displayName: ''
-
-  # Optional: condition for the job to run
-  condition: ''
-
-  # Optional: dependencies of the phase
-  dependsOn: ''
-
-  # Required: A defined YAML queue
-  queue: {}
-
-  # Required: build steps
-  steps: []
-
-  # Optional: variables
-  variables: {}
-
-  # Optional: should run as a public build even in the internal project
-  #           if 'true', the build won't run any of the internal only steps, even if it is running in non-public projects.
-  runAsPublic: false
-
-  ## Telemetry variables
-
-  # Optional: enable sending telemetry
-  #           if 'true', these "variables" must be specified in the variables object or as part of the queue matrix
-  #             _HelixBuildConfig - differentiate between Debug, Release, other
-  #             _HelixSource - Example: build/product
-  #             _HelixType - Example: official/dotnet/arcade/$(Build.SourceBranch)
-  enableTelemetry: false
-
-  # Optional: Enable installing Microbuild plugin
-  #           if 'true', these "variables" must be specified in the variables object or as part of the queue matrix
-  #             _TeamName - the name of your team
-  #             _SignType - 'test' or 'real'
-  enableMicrobuild: false
-
-# Internal resources (telemetry, microbuild) can only be accessed from non-public projects,
-# and some (Microbuild) should only be applied to non-PR cases for internal builds.
-
-phases:
-- phase: ${{ parameters.name }}
-
-  ${{ if ne(parameters.displayName, '') }}:
-    displayName: ${{ parameters.displayName }}
-
-  ${{ if ne(parameters.condition, '') }}:
-    condition: ${{ parameters.condition }}
-
-  ${{ if ne(parameters.dependsOn, '') }}:
-    dependsOn: ${{ parameters.dependsOn }}
-
-  queue: ${{ parameters.queue }}
-
-  ${{ if ne(parameters.variables, '') }}:
-    variables:
-      ${{ insert }}: ${{ parameters.variables }}
-
-  steps:
-  - checkout: self
-    clean: ${{ parameters.clean }}
-    ${{ if ne(parameters.fetchDepth, '') }}:
-      fetchDepth: ${{ parameters.fetchDepth }}
-
-  - ${{ if eq(parameters.enableTelemetry, 'true') }}:
-    - template: /eng/common/templates/steps/telemetry-start.yml
-      parameters:
-        buildConfig: $(_HelixBuildConfig)
-        helixSource: $(_HelixSource)
-        helixType: $(_HelixType)
-        runAsPublic: ${{ parameters.runAsPublic }}
-
-  - ${{ if eq(parameters.enableMicrobuild, 'true') }}:
-    # Internal only resource, and Microbuild signing shouldn't be applied to PRs.
-    - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
-      - task: MicroBuildSigningPlugin@2
-        displayName: Install MicroBuild plugin
-        inputs:
-          signType: $(_SignType)
-          zipSources: false
-          feedSource: https://dnceng.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json
-          
-        env:
-          TeamName: $(_TeamName)
-        continueOnError: false
-        condition: and(succeeded(), in(variables['_SignType'], 'real', 'test'), eq(variables['Agent.Os'], 'Windows_NT'))
-
-  # Run provided build steps
-  - ${{ parameters.steps }}
-
-  - ${{ if eq(parameters.enableMicrobuild, 'true') }}:
-    # Internal only resources
-    - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
-      - task: MicroBuildCleanup@1
-        displayName: Execute Microbuild cleanup tasks  
-        condition: and(always(), in(variables['_SignType'], 'real', 'test'), eq(variables['Agent.Os'], 'Windows_NT'))
-        env:
-          TeamName: $(_TeamName)
-
-  - ${{ if eq(parameters.enableTelemetry, 'true') }}:
-    - template: /eng/common/templates/steps/telemetry-end.yml
-      parameters:
-        helixSource: $(_HelixSource)
-        helixType: $(_HelixType)
-
-  - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
-    - task: CopyFiles@2
-      displayName: Gather Asset Manifests
-      inputs:
-        SourceFolder: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)/AssetManifest'
-        TargetFolder: '$(Build.StagingDirectory)/AssetManifests'
-      continueOnError: false
-      condition: and(succeeded(), eq(variables['_DotNetPublishToBlobFeed'], 'true'))
-    - task: PublishBuildArtifacts@1
-      displayName: Push Asset Manifests
-      inputs:
-        PathtoPublish: '$(Build.StagingDirectory)/AssetManifests'
-        PublishLocation: Container
-        ArtifactName: AssetManifests
-      continueOnError: false
-      condition: and(succeeded(), eq(variables['_DotNetPublishToBlobFeed'], 'true'))
diff --git a/eng/common/templates/phases/publish-build-assets.yml b/eng/common/templates/phases/publish-build-assets.yml
deleted file mode 100644
index 4e51e472e2b..00000000000
--- a/eng/common/templates/phases/publish-build-assets.yml
+++ /dev/null
@@ -1,52 +0,0 @@
-parameters:
-  dependsOn: ''
-  queue: {}
-  configuration: 'Debug'
-  condition: succeeded()
-  continueOnError: false
-  runAsPublic: false
-  publishUsingPipelines: false
-phases:
-  - phase: Asset_Registry_Publish
-    displayName: Publish to Build Asset Registry
-    dependsOn: ${{ parameters.dependsOn }}
-    queue: ${{ parameters.queue }}
-    variables:
-      _BuildConfig: ${{ parameters.configuration }}
-    steps:
-      - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
-        - task: DownloadBuildArtifacts@0
-          displayName: Download artifact
-          inputs:
-            artifactName: AssetManifests
-            downloadPath: '$(Build.StagingDirectory)/Download'
-            checkDownloadedFiles: true
-          condition: ${{ parameters.condition }}
-          continueOnError: ${{ parameters.continueOnError }}
-        - task: AzureKeyVault@1
-          inputs:
-            azureSubscription: 'DotNet-Engineering-Services_KeyVault'
-            KeyVaultName: EngKeyVault
-            SecretsFilter: 'MaestroAccessToken'
-          condition: ${{ parameters.condition }}
-          continueOnError: ${{ parameters.continueOnError }}
-        - task: PowerShell@2
-          displayName: Publish Build Assets
-          inputs:
-            filePath: eng\common\sdk-task.ps1
-            arguments: -task PublishBuildAssets -restore -msbuildEngine dotnet
-              /p:ManifestsPath='$(Build.StagingDirectory)/Download/AssetManifests'
-              /p:BuildAssetRegistryToken=$(MaestroAccessToken)
-              /p:MaestroApiEndpoint=https://maestro-prod.westus2.cloudapp.azure.com
-              /p:PublishUsingPipelines=${{ parameters.publishUsingPipelines }}
-              /p:Configuration=$(_BuildConfig)
-          condition: ${{ parameters.condition }}
-          continueOnError: ${{ parameters.continueOnError }}
-        - task: PublishBuildArtifacts@1
-          displayName: Publish Logs to VSTS
-          inputs:
-            PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
-            PublishLocation: Container
-            ArtifactName: $(Agent.Os)_Asset_Registry_Publish
-          continueOnError: true
-          condition: always()
diff --git a/eng/common/templates/steps/source-build.yml b/eng/common/templates/steps/source-build.yml
index 705b7a1c847..ba40dc82f14 100644
--- a/eng/common/templates/steps/source-build.yml
+++ b/eng/common/templates/steps/source-build.yml
@@ -18,6 +18,35 @@ steps:
     set -x
     df -h
 
+    # If building on the internal project, the artifact feeds variable may be available (usually only if needed)
+    # In that case, call the feed setup script to add internal feeds corresponding to public ones.
+    # In addition, add an msbuild argument to copy the WIP from the repo to the target build location.
+    # This is because SetupNuGetSources.sh will alter the current NuGet.config file, and we need to preserve those
+    # changes.
+    $internalRestoreArgs=
+    if [ '$(dn-bot-dnceng-artifact-feeds-rw)' != '$''(dn-bot-dnceng-artifact-feeds-rw)' ]; then
+      # Temporarily work around https://github.com/dotnet/arcade/issues/7709
+      chmod +x $(Build.SourcesDirectory)/eng/common/SetupNugetSources.sh
+      $(Build.SourcesDirectory)/eng/common/SetupNugetSources.sh $(Build.SourcesDirectory)/NuGet.config $(dn-bot-dnceng-artifact-feeds-rw)
+      internalRestoreArgs='/p:CopyWipIntoInnerSourceBuildRepo=true'
+
+      # The 'Copy WIP' feature of source build uses git stash to apply changes from the original repo.
+      # This only works if there is a username/email configured, which won't be the case in most CI runs.
+      git config --get user.email
+      if [ $? -ne 0 ]; then
+        git config user.email dn-bot@microsoft.com
+        git config user.name dn-bot
+      fi
+    fi
+
+    # If building on the internal project, the internal storage variable may be available (usually only if needed)
+    # In that case, add variables to allow the download of internal runtimes if the specified versions are not found
+    # in the default public locations.
+    internalRuntimeDownloadArgs=
+    if [ '$(dotnetclimsrc-read-sas-token-base64)' != '$''(dotnetclimsrc-read-sas-token-base64)' ]; then
+      internalRuntimeDownloadArgs='/p:DotNetRuntimeSourceFeed=https://dotnetclimsrc.blob.core.windows.net/dotnet /p:DotNetRuntimeSourceFeedKey=$(dotnetclimsrc-read-sas-token-base64) --runtimesourcefeed https://dotnetclimsrc.blob.core.windows.net/dotnet --runtimesourcefeedkey $(dotnetclimsrc-read-sas-token-base64)'
+    fi
+
     buildConfig=Release
     # Check if AzDO substitutes in a build config from a variable, and use it if so.
     if [ '$(_BuildConfig)' != '$''(_BuildConfig)' ]; then
@@ -29,11 +58,6 @@ steps:
       officialBuildArgs='/p:DotNetPublishUsingPipelines=true /p:OfficialBuildId=$(BUILD.BUILDNUMBER)'
     fi
 
-    internalRuntimeDownloadArgs=
-    if [ '$(dotnetclimsrc-read-sas-token-base64)' != '$''(dotnetclimsrc-read-sas-token-base64)' ]; then
-      internalRuntimeDownloadArgs='--runtimesourcefeed https://dotnetclimsrc.blob.core.windows.net/dotnet --runtimesourcefeedkey $(dotnetclimsrc-read-sas-token-base64)'
-    fi
-
     targetRidArgs=
     if [ '${{ parameters.platform.targetRID }}' != '' ]; then
       targetRidArgs='/p:TargetRid=${{ parameters.platform.targetRID }}'
@@ -49,6 +73,7 @@ steps:
       --restore --build --pack $publishArgs -bl \
       $officialBuildArgs \
       $internalRuntimeDownloadArgs \
+      $internalRestoreArgs \
       $targetRidArgs \
       /p:SourceBuildNonPortable=${{ parameters.platform.nonPortable }} \
       /p:ArcadeBuildFromSource=true
diff --git a/eng/common/tools.ps1 b/eng/common/tools.ps1
index 5d526c74d51..44484289943 100644
--- a/eng/common/tools.ps1
+++ b/eng/common/tools.ps1
@@ -163,6 +163,9 @@ function InitializeDotNetCli([bool]$install, [bool]$createSdkLocationFile) {
   # Disable telemetry on CI.
   if ($ci) {
     $env:DOTNET_CLI_TELEMETRY_OPTOUT=1
+ 
+    # In case of network error, try to log the current IP for reference
+    Try-LogClientIpAddress
   }
 
   # Source Build uses DotNetCoreSdkDir variable
@@ -706,6 +709,8 @@ function MSBuild() {
       Write-PipelineSetVariable -Name 'NUGET_PLUGIN_REQUEST_TIMEOUT_IN_SECONDS' -Value '20'
     }
 
+    Enable-Nuget-EnhancedRetry
+
     $toolsetBuildProject = InitializeToolset
     $basePath = Split-Path -parent $toolsetBuildProject
     $possiblePaths = @(
@@ -714,6 +719,8 @@ function MSBuild() {
       (Join-Path $basePath (Join-Path $buildTool.Framework 'Microsoft.DotNet.Arcade.Sdk.dll')),
       (Join-Path $basePath (Join-Path netcoreapp2.1 'Microsoft.DotNet.ArcadeLogging.dll')),
       (Join-Path $basePath (Join-Path netcoreapp2.1 'Microsoft.DotNet.Arcade.Sdk.dll'))
+      (Join-Path $basePath (Join-Path netcoreapp3.1 'Microsoft.DotNet.ArcadeLogging.dll')),
+      (Join-Path $basePath (Join-Path netcoreapp3.1 'Microsoft.DotNet.Arcade.Sdk.dll'))
     )
     $selectedPath = $null
     foreach ($path in $possiblePaths) {
@@ -750,6 +757,8 @@ function MSBuild-Core() {
     }
   }
 
+  Enable-Nuget-EnhancedRetry
+
   $buildTool = InitializeBuildTool
 
   $cmdArgs = "$($buildTool.Command) /m /nologo /clp:Summary /v:$verbosity /nr:$nodeReuse /p:ContinuousIntegrationBuild=$ci"
@@ -872,3 +881,36 @@ if (!$disableConfigureToolsetImport) {
     }
   }
 }
+
+function Try-LogClientIpAddress()
+{
+    Write-Host "Attempting to log this client's IP for Azure Package feed telemetry purposes"
+    try
+    {
+        $result = Invoke-WebRequest -Uri "http://co1.msedge.net/fdv2/diagnostics.aspx" -UseBasicParsing
+        $lines = $result.Content.Split([Environment]::NewLine) 
+        $socketIp = $lines | Select-String -Pattern "^Socket IP:.*"
+        Write-Host $socketIp
+        $clientIp = $lines | Select-String -Pattern "^Client IP:.*"
+        Write-Host $clientIp
+    }
+    catch
+    {
+        Write-Host "Unable to get this machine's effective IP address for logging: $_"
+    }
+}
+
+#
+# If $ci flag is set, turn on (and log that we did) special environment variables for improved Nuget client retry logic.
+#
+function Enable-Nuget-EnhancedRetry() {
+    if ($ci) {
+      Write-Host "Setting NUGET enhanced retry environment variables"
+      $env:NUGET_ENABLE_EXPERIMENTAL_HTTP_RETRY = 'true'
+      $env:NUGET_EXPERIMENTAL_MAX_NETWORK_TRY_COUNT = 6
+      $env:NUGET_EXPERIMENTAL_NETWORK_RETRY_DELAY_MILLISECONDS = 1000
+      Write-PipelineSetVariable -Name 'NUGET_ENABLE_EXPERIMENTAL_HTTP_RETRY' -Value 'true'
+      Write-PipelineSetVariable -Name 'NUGET_EXPERIMENTAL_MAX_NETWORK_TRY_COUNT' -Value '6'
+      Write-PipelineSetVariable -Name 'NUGET_EXPERIMENTAL_NETWORK_RETRY_DELAY_MILLISECONDS' -Value '1000'
+    }
+}
diff --git a/eng/common/tools.sh b/eng/common/tools.sh
index 828119be411..6a4871ef72b 100755
--- a/eng/common/tools.sh
+++ b/eng/common/tools.sh
@@ -399,6 +399,13 @@ function StopProcesses {
   return 0
 }
 
+function TryLogClientIpAddress () {
+  echo 'Attempting to log this client''s IP for Azure Package feed telemetry purposes'
+  if command -v curl > /dev/null; then
+    curl -s 'http://co1.msedge.net/fdv2/diagnostics.aspx' | grep ' IP: ' || true
+  fi
+}
+
 function MSBuild {
   local args=$@
   if [[ "$pipelines_log" == true ]]; then
@@ -410,6 +417,13 @@ function MSBuild {
       export NUGET_PLUGIN_REQUEST_TIMEOUT_IN_SECONDS=20
       Write-PipelineSetVariable -name "NUGET_PLUGIN_HANDSHAKE_TIMEOUT_IN_SECONDS" -value "20"
       Write-PipelineSetVariable -name "NUGET_PLUGIN_REQUEST_TIMEOUT_IN_SECONDS" -value "20"
+
+      export NUGET_ENABLE_EXPERIMENTAL_HTTP_RETRY=true
+      export NUGET_EXPERIMENTAL_MAX_NETWORK_TRY_COUNT=6
+      export NUGET_EXPERIMENTAL_NETWORK_RETRY_DELAY_MILLISECONDS=1000
+      Write-PipelineSetVariable -name "NUGET_ENABLE_EXPERIMENTAL_HTTP_RETRY" -value "true"
+      Write-PipelineSetVariable -name "NUGET_EXPERIMENTAL_MAX_NETWORK_TRY_COUNT" -value "6"
+      Write-PipelineSetVariable -name "NUGET_EXPERIMENTAL_NETWORK_RETRY_DELAY_MILLISECONDS" -value "1000"
     fi
 
     local toolset_dir="${_InitializeToolset%/*}"
@@ -420,6 +434,8 @@ function MSBuild {
     possiblePaths+=( "$toolset_dir/$_InitializeBuildToolFramework/Microsoft.DotNet.Arcade.Sdk.dll" )
     possiblePaths+=( "$toolset_dir/netcoreapp2.1/Microsoft.DotNet.ArcadeLogging.dll" )
     possiblePaths+=( "$toolset_dir/netcoreapp2.1/Microsoft.DotNet.Arcade.Sdk.dll" )
+    possiblePaths+=( "$toolset_dir/netcoreapp3.1/Microsoft.DotNet.ArcadeLogging.dll" )
+    possiblePaths+=( "$toolset_dir/netcoreapp3.1/Microsoft.DotNet.Arcade.Sdk.dll" )
     for path in "${possiblePaths[@]}"; do
       if [[ -f $path ]]; then
         selectedPath=$path
diff --git a/global.json b/global.json
index 3dc6a657bbb..a5953c76126 100644
--- a/global.json
+++ b/global.json
@@ -3,7 +3,7 @@
     "allowPrerelease": true
   },
   "tools": {
-    "dotnet": "6.0.100-preview.6.21355.2",
+    "dotnet": "6.0.100-rc.1.21458.32",
     "runtimes": {
       "dotnet/x64": [
         "2.1.7"
@@ -15,6 +15,6 @@
   },
   "msbuild-sdks": {
     "Microsoft.Build.CentralPackageVersions": "2.0.1",
-    "Microsoft.DotNet.Arcade.Sdk": "6.0.0-beta.21379.2"
+    "Microsoft.DotNet.Arcade.Sdk": "6.0.0-beta.21519.3"
   }
 }
diff --git a/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs b/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
index fb2f2bd0733..0aaa25088a2 100644
--- a/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
+++ b/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
@@ -156,6 +156,7 @@ public abstract partial class EngineServices
     {
         public const int Version1 = 1;
         protected EngineServices() { }
+        public virtual bool IsTaskInputLoggingEnabled { get { throw null; } }
         public virtual int Version { get { throw null; } }
         public virtual bool LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) { throw null; }
     }
diff --git a/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs b/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
index 98e39ce8b4c..f4dc90e663c 100644
--- a/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
+++ b/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
@@ -156,6 +156,7 @@ public abstract partial class EngineServices
     {
         public const int Version1 = 1;
         protected EngineServices() { }
+        public virtual bool IsTaskInputLoggingEnabled { get { throw null; } }
         public virtual int Version { get { throw null; } }
         public virtual bool LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) { throw null; }
     }
diff --git a/ref/Microsoft.Build.Utilities.Core/net/Microsoft.Build.Utilities.Core.cs b/ref/Microsoft.Build.Utilities.Core/net/Microsoft.Build.Utilities.Core.cs
index a9f91065f53..7c0a1e077c3 100644
--- a/ref/Microsoft.Build.Utilities.Core/net/Microsoft.Build.Utilities.Core.cs
+++ b/ref/Microsoft.Build.Utilities.Core/net/Microsoft.Build.Utilities.Core.cs
@@ -392,6 +392,7 @@ public TaskLoggingHelper(Microsoft.Build.Framework.ITask taskInstance) { }
         protected Microsoft.Build.Framework.IBuildEngine BuildEngine { get { throw null; } }
         public bool HasLoggedErrors { get { throw null; } }
         public string HelpKeywordPrefix { get { throw null; } set { } }
+        public bool IsTaskInputLoggingEnabled { get { throw null; } }
         protected string TaskName { get { throw null; } }
         public System.Resources.ResourceManager TaskResources { get { throw null; } set { } }
         public string ExtractMessageCode(string message, out string messageWithoutCodePrefix) { throw null; }
diff --git a/ref/Microsoft.Build.Utilities.Core/netstandard/Microsoft.Build.Utilities.Core.cs b/ref/Microsoft.Build.Utilities.Core/netstandard/Microsoft.Build.Utilities.Core.cs
index 26fb8b5075c..6cc7b96d758 100644
--- a/ref/Microsoft.Build.Utilities.Core/netstandard/Microsoft.Build.Utilities.Core.cs
+++ b/ref/Microsoft.Build.Utilities.Core/netstandard/Microsoft.Build.Utilities.Core.cs
@@ -235,6 +235,7 @@ public TaskLoggingHelper(Microsoft.Build.Framework.ITask taskInstance) { }
         protected Microsoft.Build.Framework.IBuildEngine BuildEngine { get { throw null; } }
         public bool HasLoggedErrors { get { throw null; } }
         public string HelpKeywordPrefix { get { throw null; } set { } }
+        public bool IsTaskInputLoggingEnabled { get { throw null; } }
         protected string TaskName { get { throw null; } }
         public System.Resources.ResourceManager TaskResources { get { throw null; } set { } }
         public string ExtractMessageCode(string message, out string messageWithoutCodePrefix) { throw null; }
diff --git a/ref/Microsoft.Build/net/Microsoft.Build.cs b/ref/Microsoft.Build/net/Microsoft.Build.cs
index 5152392b1a3..9f42d2be544 100644
--- a/ref/Microsoft.Build/net/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/net/Microsoft.Build.cs
@@ -1,5 +1,14 @@
 // Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
+namespace Microsoft.Build.BackEnd.SdkResolution
+{
+    public partial class SdkResolverException : System.Exception
+    {
+        public SdkResolverException(string resourceName, Microsoft.Build.Framework.SdkResolver resolver, Microsoft.Build.Framework.SdkReference sdk, System.Exception innerException, params string[] args) { }
+        public Microsoft.Build.Framework.SdkResolver Resolver { get { throw null; } }
+        public Microsoft.Build.Framework.SdkReference Sdk { get { throw null; } }
+    }
+}
 namespace Microsoft.Build.Construction
 {
     public abstract partial class ElementLocation
@@ -489,6 +498,7 @@ namespace Microsoft.Build.Definition
     public partial class ProjectOptions
     {
         public ProjectOptions() { }
+        public Microsoft.Build.FileSystem.IDirectoryCacheFactory DirectoryCacheFactory { get { throw null; } set { } }
         public Microsoft.Build.Evaluation.Context.EvaluationContext EvaluationContext { get { throw null; } set { } }
         public System.Collections.Generic.IDictionary<string, string> GlobalProperties { get { throw null; } set { } }
         public Microsoft.Build.Evaluation.ProjectLoadSettings LoadSettings { get { throw null; } set { } }
@@ -1495,6 +1505,19 @@ public ProxyTargets(System.Collections.Generic.IReadOnlyDictionary<string, strin
 }
 namespace Microsoft.Build.FileSystem
 {
+    public delegate bool FindPredicate(ref System.ReadOnlySpan<char> fileName);
+    public delegate TResult FindTransform<TResult>(ref System.ReadOnlySpan<char> fileName);
+    public partial interface IDirectoryCache
+    {
+        bool DirectoryExists(string path);
+        System.Collections.Generic.IEnumerable<TResult> EnumerateDirectories<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform);
+        System.Collections.Generic.IEnumerable<TResult> EnumerateFiles<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform);
+        bool FileExists(string path);
+    }
+    public partial interface IDirectoryCacheFactory
+    {
+        Microsoft.Build.FileSystem.IDirectoryCache GetDirectoryCacheForEvaluation(int evaluationId);
+    }
     public abstract partial class MSBuildFileSystemBase
     {
         protected MSBuildFileSystemBase() { }
diff --git a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
index cffbea13779..c12fdafce68 100644
--- a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
@@ -1,5 +1,14 @@
 // Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
+namespace Microsoft.Build.BackEnd.SdkResolution
+{
+    public partial class SdkResolverException : System.Exception
+    {
+        public SdkResolverException(string resourceName, Microsoft.Build.Framework.SdkResolver resolver, Microsoft.Build.Framework.SdkReference sdk, System.Exception innerException, params string[] args) { }
+        public Microsoft.Build.Framework.SdkResolver Resolver { get { throw null; } }
+        public Microsoft.Build.Framework.SdkReference Sdk { get { throw null; } }
+    }
+}
 namespace Microsoft.Build.Construction
 {
     public abstract partial class ElementLocation
@@ -489,6 +498,7 @@ namespace Microsoft.Build.Definition
     public partial class ProjectOptions
     {
         public ProjectOptions() { }
+        public Microsoft.Build.FileSystem.IDirectoryCacheFactory DirectoryCacheFactory { get { throw null; } set { } }
         public Microsoft.Build.Evaluation.Context.EvaluationContext EvaluationContext { get { throw null; } set { } }
         public System.Collections.Generic.IDictionary<string, string> GlobalProperties { get { throw null; } set { } }
         public Microsoft.Build.Evaluation.ProjectLoadSettings LoadSettings { get { throw null; } set { } }
@@ -1489,6 +1499,19 @@ public ProxyTargets(System.Collections.Generic.IReadOnlyDictionary<string, strin
 }
 namespace Microsoft.Build.FileSystem
 {
+    public delegate bool FindPredicate(ref System.ReadOnlySpan<char> fileName);
+    public delegate TResult FindTransform<TResult>(ref System.ReadOnlySpan<char> fileName);
+    public partial interface IDirectoryCache
+    {
+        bool DirectoryExists(string path);
+        System.Collections.Generic.IEnumerable<TResult> EnumerateDirectories<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform);
+        System.Collections.Generic.IEnumerable<TResult> EnumerateFiles<TResult>(string path, string pattern, Microsoft.Build.FileSystem.FindPredicate predicate, Microsoft.Build.FileSystem.FindTransform<TResult> transform);
+        bool FileExists(string path);
+    }
+    public partial interface IDirectoryCacheFactory
+    {
+        Microsoft.Build.FileSystem.IDirectoryCache GetDirectoryCacheForEvaluation(int evaluationId);
+    }
     public abstract partial class MSBuildFileSystemBase
     {
         protected MSBuildFileSystemBase() { }
diff --git a/scripts/Deploy-MSBuild.ps1 b/scripts/Deploy-MSBuild.ps1
index 07b58d1f82d..6bb58a189b1 100644
--- a/scripts/Deploy-MSBuild.ps1
+++ b/scripts/Deploy-MSBuild.ps1
@@ -65,11 +65,6 @@ $filesToCopyToBin = @(
     FileToCopy "$bootstrapBinDirectory\Microsoft.Build.Utilities.Core.dll"
     FileToCopy "$bootstrapBinDirectory\Microsoft.NET.StringTools.dll"
 
-    FileToCopy "$bootstrapBinDirectory\en\Microsoft.Build.resources.dll" "en"
-    FileToCopy "$bootstrapBinDirectory\en\Microsoft.Build.Tasks.Core.resources.dll" "en"
-    FileToCopy "$bootstrapBinDirectory\en\Microsoft.Build.Utilities.Core.resources.dll" "en"
-    FileToCopy "$bootstrapBinDirectory\en\MSBuild.resources.dll" "en"
-
     FileToCopy "$bootstrapBinDirectory\Microsoft.Common.CrossTargeting.targets"
     FileToCopy "$bootstrapBinDirectory\Microsoft.Common.CurrentVersion.targets"
     FileToCopy "$bootstrapBinDirectory\Microsoft.Common.targets"
@@ -98,6 +93,7 @@ if ($runtime -eq "Desktop") {
 
         FileToCopy "$bootstrapBinDirectory\Microsoft.Bcl.AsyncInterfaces.dll"
         FileToCopy "$bootstrapBinDirectory\Microsoft.Data.Entity.targets"
+        FileToCopy "$bootstrapBinDirectory\Microsoft.IO.Redist.dll"
         FileToCopy "$bootstrapBinDirectory\Microsoft.ServiceModel.targets"
         FileToCopy "$bootstrapBinDirectory\Microsoft.WinFx.targets"
         FileToCopy "$bootstrapBinDirectory\Microsoft.WorkflowBuildExtensions.targets"
@@ -115,7 +111,7 @@ if ($runtime -eq "Desktop") {
         FileToCopy "$bootstrapBinDirectory\System.Text.Json.dll"
         FileToCopy "$bootstrapBinDirectory\System.Threading.Tasks.Dataflow.dll"
         FileToCopy "$bootstrapBinDirectory\System.Threading.Tasks.Extensions.dll"
-        FileToCopy "$bootstrapBinDirectory\System.ValueTuple.dll"    
+        FileToCopy "$bootstrapBinDirectory\System.ValueTuple.dll"
     )
 } else {
     $runtimeSpecificFiles = @(
diff --git a/src/Build.OM.UnitTests/Microsoft.Build.Engine.OM.UnitTests.csproj b/src/Build.OM.UnitTests/Microsoft.Build.Engine.OM.UnitTests.csproj
index 18ad711bac4..c31ba2c3cdb 100644
--- a/src/Build.OM.UnitTests/Microsoft.Build.Engine.OM.UnitTests.csproj
+++ b/src/Build.OM.UnitTests/Microsoft.Build.Engine.OM.UnitTests.csproj
@@ -1,4 +1,4 @@
-﻿<Project Sdk="Microsoft.NET.Sdk">
+<Project Sdk="Microsoft.NET.Sdk">
 
   <Import Project="..\Shared\FileSystemSources.proj" />
   <Import Project="..\Shared\DebuggingSources.proj" />
@@ -20,7 +20,10 @@
 </PropertyGroup>
 
   <ItemGroup>
+    <PackageReference Include="Microsoft.IO.Redist" Condition="'$(FeatureMSIORedist)' == 'true'" />
+
     <PackageReference Include="Shouldly" />
+    <PackageReference Include="System.Net.Http" />
     <PackageDownload Include="NuGet.CommandLine" Version="[$(NuGetCommandLinePackageVersion)]" />
   </ItemGroup>
 
diff --git a/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs b/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
index b87c06c077a..1587123afc0 100644
--- a/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
@@ -8,6 +8,7 @@
 using System.Globalization;
 using System.IO;
 using System.Linq;
+using System.Reflection;
 using System.Threading;
 using System.Xml;
 
@@ -4342,5 +4343,52 @@ public void GraphBuildShouldBeAbleToConstructGraphButSkipBuild()
             logger.FullLog.ShouldContain("Static graph loaded in");
             logger.FullLog.ShouldContain("3 nodes, 2 edges");
         }
+
+        /// <summary>
+        /// Helper task used by <see cref="TaskInputLoggingIsExposedToTasks"/> to verify <see cref="TaskLoggingHelper.IsTaskInputLoggingEnabled"/>.
+        /// </summary>
+        public class LogTaskInputsCheckingTask : Task
+        {
+            public bool ExpectedTaskInputLoggingEnabled { get; set; }
+
+            public override bool Execute()
+            {
+                return Log.IsTaskInputLoggingEnabled == ExpectedTaskInputLoggingEnabled;
+            }
+        }
+
+        [Theory]
+        [InlineData("", false)] // regular task host, input logging disabled
+        [InlineData("", true)] // regular task host, input logging enabled
+#if NETFRAMEWORK // https://github.com/microsoft/msbuild/issues/5158
+        [InlineData("TaskHostFactory", false)] // OOP task host, input logging disabled
+        [InlineData("TaskHostFactory", true)] // OOP task host, input logging enabled
+#endif
+        public void TaskInputLoggingIsExposedToTasks(string taskFactory, bool taskInputLoggingEnabled)
+        {
+            string projectContents = ObjectModelHelpers.CleanupFileContents(@"<Project>
+
+  <UsingTask
+    TaskName=""" + typeof(LogTaskInputsCheckingTask).FullName + @"""
+    AssemblyFile=""" + Assembly.GetExecutingAssembly().Location + @"""
+    TaskFactory=""" + taskFactory + @"""
+  />
+
+  <Target Name=""target1"">
+    <LogTaskInputsCheckingTask ExpectedTaskInputLoggingEnabled=""" + taskInputLoggingEnabled + @""" />
+  </Target>
+
+</Project>");
+
+            _parameters.LogTaskInputs = taskInputLoggingEnabled;
+
+            Project project = CreateProject(projectContents, MSBuildDefaultToolsVersion, _projectCollection, true);
+            ProjectInstance instance = _buildManager.GetProjectInstanceForBuild(project);
+            _buildManager.BeginBuild(_parameters);
+            BuildResult result = _buildManager.BuildRequest(new BuildRequestData(instance, new[] { "target1" }));
+            _buildManager.EndBuild();
+
+            Assert.Equal(BuildResultCode.Success, result.OverallResult);
+        }
     }
 }
diff --git a/src/Build.UnitTests/BackEnd/DebugUtils_tests.cs b/src/Build.UnitTests/BackEnd/DebugUtils_tests.cs
new file mode 100644
index 00000000000..07c9c392b41
--- /dev/null
+++ b/src/Build.UnitTests/BackEnd/DebugUtils_tests.cs
@@ -0,0 +1,38 @@
+﻿// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+using System;
+using System.IO;
+using System.Linq;
+using Microsoft.Build.Shared;
+using Shouldly;
+using Xunit;
+
+namespace Microsoft.Build.UnitTests
+{
+    public class DebugUtils_Tests
+    {
+        [Fact]
+        public void DumpExceptionToFileShouldWriteInTempPathByDefault()
+        {
+            Directory.GetFiles(Path.GetTempPath(), "MSBuild_*failure.txt").ShouldBeEmpty();
+
+            string[] exceptionFiles = null;
+
+            try
+            {
+                ExceptionHandling.DumpExceptionToFile(new Exception("hello world"));
+                exceptionFiles = Directory.GetFiles(Path.GetTempPath(), "MSBuild_*failure.txt");
+            }
+            finally
+            {
+                exceptionFiles.ShouldNotBeNull();
+                exceptionFiles.ShouldHaveSingleItem();
+
+                var exceptionFile = exceptionFiles.First();
+                File.ReadAllText(exceptionFile).ShouldContain("hello world");
+                File.Delete(exceptionFile);
+            }
+        }
+    }
+}
diff --git a/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs b/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
index c90d6e8a60c..cbfd97c5f83 100644
--- a/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
@@ -85,16 +85,16 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi
         }
 
         [Fact]
-        public void AssertErrorLoggedWhenResolverThrows()
+        public void AssertResolverThrows()
         {
             SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeErrorResolver: true));
 
             SdkReference sdk = new SdkReference("1sdkName", "version1", "minimumVersion");
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false);
-
-            result.Path.ShouldBe("resolverpath1");
-            _logger.Warnings.Select(i => i.Message).ShouldBe(new [] { "The SDK resolver \"MockSdkResolverThrows\" failed to run. EXMESSAGE" });
+            // When an SDK resolver throws, the expander will catch it and stop the build.
+            SdkResolverException e = Should.Throw<SdkResolverException>(() => SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false));
+            e.Resolver.Name.ShouldBe("MockSdkResolverThrows");
+            e.Sdk.Name.ShouldBe("1sdkName");
         }
 
         [Fact]
diff --git a/src/Build.UnitTests/BackEnd/TaskHostConfiguration_Tests.cs b/src/Build.UnitTests/BackEnd/TaskHostConfiguration_Tests.cs
index 144f30bea1a..94c7c23f23d 100644
--- a/src/Build.UnitTests/BackEnd/TaskHostConfiguration_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TaskHostConfiguration_Tests.cs
@@ -55,6 +55,7 @@ public void ConstructorWithNullName()
                     continueOnError: _continueOnErrorDefault,
                     taskName: null,
                     taskLocation: @"c:\my tasks\mytask.dll",
+                    isTaskInputLoggingEnabled: false,
                     taskParameters: null,
                     globalParameters: null,
                     warningsAsErrors: null,
@@ -89,6 +90,7 @@ public void ConstructorWithEmptyName()
                     continueOnError: _continueOnErrorDefault,
                     taskName: String.Empty,
                     taskLocation: @"c:\my tasks\mytask.dll",
+                    isTaskInputLoggingEnabled: false,
                     taskParameters: null,
                     globalParameters: null,
                     warningsAsErrors: null,
@@ -123,6 +125,7 @@ public void ConstructorWithNullLocation()
                     continueOnError: _continueOnErrorDefault,
                     taskName: "TaskName",
                     taskLocation: null,
+                    isTaskInputLoggingEnabled: false,
                     taskParameters: null,
                     globalParameters: null,
                     warningsAsErrors: null,
@@ -159,6 +162,7 @@ public void ConstructorWithEmptyLocation()
                     continueOnError: _continueOnErrorDefault,
                     taskName: "TaskName",
                     taskLocation: String.Empty,
+                    isTaskInputLoggingEnabled: false,
                     taskParameters: null,
                     globalParameters: null,
                     warningsAsErrors: null,
@@ -193,6 +197,7 @@ public void TestValidConstructors()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: null,
                 globalParameters: null,
                 warningsAsErrors: null,
@@ -217,6 +222,7 @@ public void TestValidConstructors()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: null,
                 globalParameters: null,
                 warningsAsErrors: null,
@@ -242,6 +248,7 @@ public void TestValidConstructors()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: parameters,
                 globalParameters: null,
                 warningsAsErrors: null,
@@ -272,6 +279,7 @@ public void TestValidConstructors()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: parameters2,
                 globalParameters: null,
                 warningsAsErrors: null,
@@ -302,6 +310,7 @@ public void TestValidConstructors()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: parameters2,
                 globalParameters: null,
                 warningsAsErrors: WarningsAsErrors,
@@ -339,6 +348,7 @@ public void TestTranslationWithNullDictionary()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: null,
                 globalParameters: expectedGlobalProperties,
                 warningsAsErrors: null,
@@ -383,6 +393,7 @@ public void TestTranslationWithEmptyDictionary()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: new Dictionary<string, object>(),
                 globalParameters: new Dictionary<string, string>(),
                 warningsAsErrors: null,
@@ -432,6 +443,7 @@ public void TestTranslationWithValueTypesInDictionary()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: parameters,
                 globalParameters: null,
                 warningsAsErrors: null,
@@ -479,6 +491,7 @@ public void TestTranslationWithITaskItemInDictionary()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: parameters,
                 globalParameters: null,
                 warningsAsErrors: null,
@@ -525,6 +538,7 @@ public void TestTranslationWithITaskItemArrayInDictionary()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: parameters,
                 globalParameters: null,
                 warningsAsErrors: null,
@@ -578,6 +592,7 @@ public void TestTranslationWithWarningsAsErrors()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: null,
                 globalParameters: null,
                 warningsAsErrors: WarningsAsErrors,
@@ -627,6 +642,7 @@ public void TestTranslationWithWarningsAsMessages()
                 continueOnError: _continueOnErrorDefault,
                 taskName: "TaskName",
                 taskLocation: @"c:\MyTasks\MyTask.dll",
+                isTaskInputLoggingEnabled: false,
                 taskParameters: null,
                 globalParameters: null,
                 warningsAsErrors: null,
diff --git a/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs b/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
index e169cbfb8e2..1d06b86c43b 100644
--- a/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
+++ b/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
@@ -189,8 +189,10 @@ public void RoundtripTaskFinishedEventArgs()
                 e => e.ThreadId.ToString());
         }
 
-        [Fact]
-        public void RoundtripBuildErrorEventArgs()
+        [Theory]
+        [InlineData(true)]
+        [InlineData(false)]
+        public void RoundtripBuildErrorEventArgs(bool useArguments)
         {
             var args = new BuildErrorEventArgs(
                 "Subcategory",
@@ -200,9 +202,11 @@ public void RoundtripBuildErrorEventArgs()
                 2,
                 3,
                 4,
-                "Message",
+                "Message with arguments: '{0}'",
                 "Help",
-                "SenderName");
+                "SenderName",
+                DateTime.Parse("9/1/2021 12:02:07 PM"),
+                useArguments ? new object[] { "argument0" } : null);
 
             Roundtrip(args,
                 e => e.Code,
@@ -213,11 +217,14 @@ public void RoundtripBuildErrorEventArgs()
                 e => e.LineNumber.ToString(),
                 e => e.Message,
                 e => e.ProjectFile,
-                e => e.Subcategory);
+                e => e.Subcategory,
+                e => string.Join(", ", e.RawArguments ?? Array.Empty<object>()));
         }
 
-        [Fact]
-        public void RoundtripBuildWarningEventArgs()
+        [Theory]
+        [InlineData(true)]
+        [InlineData(false)]
+        public void RoundtripBuildWarningEventArgs(bool useArguments)
         {
             var args = new BuildWarningEventArgs(
                 "Subcategory",
@@ -227,9 +234,11 @@ public void RoundtripBuildWarningEventArgs()
                 2,
                 3,
                 4,
-                "Message",
+                "Message with arguments: '{0}'",
                 "Help",
-                "SenderName");
+                "SenderName",
+                DateTime.Parse("9/1/2021 12:02:07 PM"),
+                useArguments ? new object[] { "argument0" } : null);
 
             Roundtrip(args,
                 e => e.Code,
@@ -240,11 +249,14 @@ public void RoundtripBuildWarningEventArgs()
                 e => e.LineNumber.ToString(),
                 e => e.Message,
                 e => e.ProjectFile,
-                e => e.Subcategory);
+                e => e.Subcategory,
+                e => string.Join(", ", e.RawArguments ?? Array.Empty<object>()));
         }
 
-        [Fact]
-        public void RoundtripBuildMessageEventArgs()
+        [Theory]
+        [InlineData(true)]
+        [InlineData(false)]
+        public void RoundtripBuildMessageEventArgs(bool useArguments)
         {
             var args = new BuildMessageEventArgs(
                 "Subcategory",
@@ -258,7 +270,8 @@ public void RoundtripBuildMessageEventArgs()
                 "Help",
                 "SenderName",
                 MessageImportance.High,
-                DateTime.Parse("12/12/2015 06:11:56 PM"));
+                DateTime.Parse("12/12/2015 06:11:56 PM"),
+                useArguments ? new object[] { "argument0" } : null);
 
             Roundtrip(args,
                 e => e.Code,
@@ -270,7 +283,8 @@ public void RoundtripBuildMessageEventArgs()
                 e => e.Message,
                 e => e.Importance.ToString(),
                 e => e.ProjectFile,
-                e => e.Subcategory);
+                e => e.Subcategory,
+                e => string.Join(", ", e.RawArguments ?? Array.Empty<object>()));
         }
 
         [Fact]
diff --git a/src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs b/src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs
index 232d22c62dd..49497a0e870 100644
--- a/src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs
+++ b/src/Build.UnitTests/Definition/ProjectEvaluationContext_Tests.cs
@@ -129,6 +129,41 @@ public void IsolatedContextShouldNotSupportBeingPassedAFileSystem()
             Should.Throw<ArgumentException>(() => EvaluationContext.Create(EvaluationContext.SharingPolicy.Isolated, fileSystem));
         }
 
+        [Fact]
+        public void EvaluationShouldUseDirectoryCache()
+        {
+            var projectFile = _env.CreateFile("1.proj", @"<Project> <ItemGroup Condition=`Exists('1.file')`> <Compile Include='*.cs'/> </ItemGroup> </Project>".Cleanup()).Path;
+
+            var projectCollection = _env.CreateProjectCollection().Collection;
+            var directoryCacheFactory = new Helpers.LoggingDirectoryCacheFactory();
+
+            var project = Project.FromFile(
+                projectFile,
+                new ProjectOptions
+                {
+                    ProjectCollection = projectCollection,
+                    DirectoryCacheFactory = directoryCacheFactory,
+                }
+            );
+
+            directoryCacheFactory.DirectoryCaches.Count.ShouldBe(1);
+            var directoryCache = directoryCacheFactory.DirectoryCaches[0];
+
+            directoryCache.EvaluationId.ShouldBe(project.LastEvaluationId);
+
+            directoryCache.ExistenceChecks.OrderBy(kvp => kvp.Key).ShouldBe(
+                new Dictionary<string, int>
+                {
+                    { _env.DefaultTestDirectory.Path, 1},
+                    { Path.Combine(_env.DefaultTestDirectory.Path, "1.file"), 2 }
+                }.OrderBy(kvp => kvp.Key));
+            directoryCache.Enumerations.ShouldBe(
+                new Dictionary<string, int>
+                {
+                    { _env.DefaultTestDirectory.Path, 1 }
+                });
+        }
+
         [Theory]
         [InlineData(EvaluationContext.SharingPolicy.Shared)]
         [InlineData(EvaluationContext.SharingPolicy.Isolated)]
diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index b58a72d0843..f6f733c34a9 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -3979,6 +3979,12 @@ public void PropertyFunctionStringLastIndexOf()
             TestPropertyFunction("$(prop.LastIndexOf('y', 7))", "prop", "x-x-y-y-y-z", "6");
         }
 
+        [Fact]
+        public void PropertyFunctionStringLastIndexOfAny()
+        {
+            TestPropertyFunction("$(prop.LastIndexOfAny('xy'))", "prop", "x-x-y-y-y-z", "8");
+        }
+
         [Fact]
         public void PropertyFunctionStringCopy()
         {
diff --git a/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj b/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
index acd5ea588f2..dc3a40ef3ce 100644
--- a/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
+++ b/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
@@ -18,6 +18,7 @@
   <ItemGroup>
     <PackageReference Include="System.Configuration.ConfigurationManager" />
     <PackageReference Include="Shouldly" />
+    <PackageReference Include="System.Net.Http" />
     <PackageReference Include="Microsoft.CodeAnalysis.Build.Tasks" />
     <PackageReference Include="NuGet.Frameworks" >
       <PrivateAssets>all</PrivateAssets>
@@ -38,7 +39,7 @@
       <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(MonoBuild)' == 'true'">TargetFramework=$(FullFrameworkTFM)</SetTargetFramework>
       <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'">TargetFramework=netstandard2.0</SetTargetFramework>
     </ProjectReference>
-    <ProjectReference Include="..\Samples\PortableTask\PortableTask.csproj" Private="false" ReferenceOutputAssembly="false" OutputItemType="PortableTaskResolvedProjectReferencePath" SetTargetFramework="TargetFramework=netstandard1.3" />
+    <ProjectReference Include="..\Samples\PortableTask\PortableTask.csproj" Private="false" ReferenceOutputAssembly="false" OutputItemType="PortableTaskResolvedProjectReferencePath" SetTargetFramework="TargetFramework=netstandard2.0" />
 
     <ProjectReference Include="..\Samples\ProjectCachePlugin\ProjectCachePlugin.csproj" Private="false" ReferenceOutputAssembly="false">
       <SetTargetFramework Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">TargetFramework=$(FullFrameworkTFM)</SetTargetFramework>
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index acd93cda319..a07d1e40557 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -286,7 +286,7 @@ public BuildManager(string hostName)
 
             _projectStartedEventHandler = OnProjectStarted;
             _projectFinishedEventHandler = OnProjectFinished;
-            _loggingThreadExceptionEventHandler = OnThreadException;
+            _loggingThreadExceptionEventHandler = OnLoggingThreadException;
             _legacyThreadingData = new LegacyThreadingData();
             _instantiationTimeUtc = DateTime.UtcNow;
         }
@@ -830,10 +830,15 @@ public void EndBuild()
                 ShutdownConnectedNodes(false /* normal termination */);
                 _noNodesActiveEvent.WaitOne();
 
-                // Wait for all of the actions in the work queue to drain.  Wait() could throw here if there was an unhandled exception
-                // in the work queue, but the top level exception handler there should catch everything and have forwarded it to the
+                // Wait for all of the actions in the work queue to drain.
+                // _workQueue.Completion.Wait() could throw here if there was an unhandled exception in the work queue,
+                // but the top level exception handler there should catch everything and have forwarded it to the
                 // OnThreadException method in this class already.
                 _workQueue.Complete();
+                if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0))
+                {
+                    _workQueue.Completion.Wait();
+                }
 
                 // Stop the graph scheduling thread(s)
                 _graphSchedulingCancellationSource?.Cancel();
@@ -2796,7 +2801,7 @@ private NodeConfiguration GetNodeConfiguration()
         }
 
         /// <summary>
-        /// Handler for thread exceptions (logging thread, communications thread).  This handler will only get called if the exception did not previously
+        /// Handler for thread exceptions. This handler will only get called if the exception did not previously
         /// get handled by a node exception handlers (for instance because the build is complete for the node.)  In this case we
         /// get the exception and will put it into the OverallBuildResult so that the host can see what happened.
         /// </summary>
@@ -2853,22 +2858,49 @@ private void OnThreadException(Exception e)
             }
         }
 
+        /// <summary>
+        /// Handler for LoggingService thread exceptions.
+        /// </summary>
+        private void OnLoggingThreadException(Exception e)
+        {
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0))
+            {
+                _workQueue.Post(() => OnThreadException(e));
+            }
+            else
+            {
+                OnThreadException(e);
+            }
+        }
+
         /// <summary>
         /// Raised when a project finished logging message has been processed.
         /// </summary>
         private void OnProjectFinished(object sender, ProjectFinishedEventArgs e)
         {
-            lock (_syncLock)
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0))
             {
-                if (_projectStartedEvents.TryGetValue(e.BuildEventContext.SubmissionId, out var originalArgs))
+                _workQueue.Post(() => OnProjectFinishedBody(e));
+            }
+            else
+            {
+                OnProjectFinishedBody(e);
+            }
+
+            void OnProjectFinishedBody(ProjectFinishedEventArgs e)
+            {
+                lock (_syncLock)
                 {
-                    if (originalArgs.BuildEventContext.Equals(e.BuildEventContext))
+                    if (_projectStartedEvents.TryGetValue(e.BuildEventContext.SubmissionId, out var originalArgs))
                     {
-                        _projectStartedEvents.Remove(e.BuildEventContext.SubmissionId);
-                        if (_buildSubmissions.TryGetValue(e.BuildEventContext.SubmissionId, out var submission))
+                        if (originalArgs.BuildEventContext.Equals(e.BuildEventContext))
                         {
-                            submission.CompleteLogging();
-                            CheckSubmissionCompletenessAndRemove(submission);
+                            _projectStartedEvents.Remove(e.BuildEventContext.SubmissionId);
+                            if (_buildSubmissions.TryGetValue(e.BuildEventContext.SubmissionId, out var submission))
+                            {
+                                submission.CompleteLogging();
+                                CheckSubmissionCompletenessAndRemove(submission);
+                            }
                         }
                     }
                 }
@@ -2880,11 +2912,23 @@ private void OnProjectFinished(object sender, ProjectFinishedEventArgs e)
         /// </summary>
         private void OnProjectStarted(object sender, ProjectStartedEventArgs e)
         {
-            lock (_syncLock)
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0))
+            {
+                _workQueue.Post(() => OnProjectStartedBody(e));
+            }
+            else
+            {
+                OnProjectStartedBody(e);
+            }
+
+            void OnProjectStartedBody(ProjectStartedEventArgs e)
             {
-                if (!_projectStartedEvents.ContainsKey(e.BuildEventContext.SubmissionId))
+                lock (_syncLock)
                 {
-                    _projectStartedEvents[e.BuildEventContext.SubmissionId] = e;
+                    if (!_projectStartedEvents.ContainsKey(e.BuildEventContext.SubmissionId))
+                    {
+                        _projectStartedEvents[e.BuildEventContext.SubmissionId] = e;
+                    }
                 }
             }
         }
diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
index b45dab48cbd..ef21df23454 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
@@ -27,7 +27,6 @@
 
 using BackendNativeMethods = Microsoft.Build.BackEnd.NativeMethods;
 using Task = System.Threading.Tasks.Task;
-using DotNetFrameworkArchitecture = Microsoft.Build.Shared.DotNetFrameworkArchitecture;
 using Microsoft.Build.Framework;
 using Microsoft.Build.BackEnd.Logging;
 
@@ -434,9 +433,9 @@ private Process LaunchNode(string msbuildLocation, string commandLineArgs)
 
             // Repeat the executable name as the first token of the command line because the command line
             // parser logic expects it and will otherwise skip the first argument
-            commandLineArgs = msbuildLocation + " " + commandLineArgs;
+            commandLineArgs = $"\"{msbuildLocation}\" {commandLineArgs}";
 
-            BackendNativeMethods.STARTUP_INFO startInfo = new BackendNativeMethods.STARTUP_INFO();
+            BackendNativeMethods.STARTUP_INFO startInfo = new();
             startInfo.cb = Marshal.SizeOf<BackendNativeMethods.STARTUP_INFO>();
 
             // Null out the process handles so that the parent process does not wait for the child process
@@ -466,11 +465,6 @@ private Process LaunchNode(string msbuildLocation, string commandLineArgs)
                 creationFlags |= BackendNativeMethods.CREATE_NEW_CONSOLE;
             }
 
-            BackendNativeMethods.SECURITY_ATTRIBUTES processSecurityAttributes = new BackendNativeMethods.SECURITY_ATTRIBUTES();
-            BackendNativeMethods.SECURITY_ATTRIBUTES threadSecurityAttributes = new BackendNativeMethods.SECURITY_ATTRIBUTES();
-            processSecurityAttributes.nLength = Marshal.SizeOf<BackendNativeMethods.SECURITY_ATTRIBUTES>();
-            threadSecurityAttributes.nLength = Marshal.SizeOf<BackendNativeMethods.SECURITY_ATTRIBUTES>();
-
             CommunicationsUtilities.Trace("Launching node from {0}", msbuildLocation);
 
             string exeName = msbuildLocation;
@@ -481,7 +475,6 @@ private Process LaunchNode(string msbuildLocation, string commandLineArgs)
             {
                 // Run the child process with the same host as the currently-running process.
                 exeName = GetCurrentHost();
-                commandLineArgs = "\"" + msbuildLocation + "\" " + commandLineArgs;
             }
 #endif
 
@@ -526,14 +519,15 @@ private Process LaunchNode(string msbuildLocation, string commandLineArgs)
             else
             {
 #if RUNTIME_TYPE_NETCORE
-                if (NativeMethodsShared.IsWindows)
-                {
-                    // Repeat the executable name in the args to suit CreateProcess
-                    commandLineArgs = "\"" + exeName + "\" " + commandLineArgs;
-                }
+                // Repeat the executable name in the args to suit CreateProcess
+                commandLineArgs = $"\"{exeName}\" {commandLineArgs}";
 #endif
 
-                BackendNativeMethods.PROCESS_INFORMATION processInfo = new BackendNativeMethods.PROCESS_INFORMATION();
+                BackendNativeMethods.PROCESS_INFORMATION processInfo = new();
+                BackendNativeMethods.SECURITY_ATTRIBUTES processSecurityAttributes = new();
+                BackendNativeMethods.SECURITY_ATTRIBUTES threadSecurityAttributes = new();
+                processSecurityAttributes.nLength = Marshal.SizeOf<BackendNativeMethods.SECURITY_ATTRIBUTES>();
+                threadSecurityAttributes.nLength = Marshal.SizeOf<BackendNativeMethods.SECURITY_ATTRIBUTES>();
 
                 bool result = BackendNativeMethods.CreateProcess
                     (
@@ -596,9 +590,18 @@ private static string GetCurrentHost()
 #if RUNTIME_TYPE_NETCORE || MONO
             if (CurrentHost == null)
             {
-                using (Process currentProcess = Process.GetCurrentProcess())
+                string dotnetExe = Path.Combine(FileUtilities.GetFolderAbove(BuildEnvironmentHelper.Instance.CurrentMSBuildExePath, 2),
+                    NativeMethodsShared.IsWindows ? "dotnet.exe" : "dotnet");
+                if (File.Exists(dotnetExe))
+                {
+                    CurrentHost = dotnetExe;
+                }
+                else
                 {
-                    CurrentHost = currentProcess.MainModule.FileName;
+                    using (Process currentProcess = Process.GetCurrentProcess())
+                    {
+                        CurrentHost = currentProcess.MainModule.FileName;
+                    }
                 }
             }
 
diff --git a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
index df11c277466..42e912b95ae 100644
--- a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
@@ -54,7 +54,7 @@ internal class ProjectCacheService
         /// i.e. falling back to FileSystem.Default.
         /// </summary>
         private sealed class DefaultMSBuildFileSystem : MSBuildFileSystemBase { }
-      
+
         // Use NullableBool to make it work with Interlock.CompareExchange (doesn't accept bool?).
         // Assume that if one request is a design time build, all of them are.
         // Volatile because it is read by the BuildManager thread and written by one project cache service thread pool thread.
@@ -195,7 +195,7 @@ Assembly LoadAssembly(string resolverPath)
 #if !FEATURE_ASSEMBLYLOADCONTEXT
                 return Assembly.LoadFrom(resolverPath);
 #else
-                return _loader.LoadFromPath(resolverPath);
+                return s_loader.LoadFromPath(resolverPath);
 #endif
             }
 
@@ -213,7 +213,7 @@ IEnumerable<Type> GetTypes<T>(Assembly assembly)
         }
 
 #if FEATURE_ASSEMBLYLOADCONTEXT
-        private static readonly CoreClrAssemblyLoader _loader = new CoreClrAssemblyLoader();
+        private static readonly CoreClrAssemblyLoader s_loader = new CoreClrAssemblyLoader();
 #endif
 
         public void PostCacheRequest(CacheRequest cacheRequest)
diff --git a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
index 66d4f850d96..165b1f2b427 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
@@ -28,8 +28,6 @@ internal class ItemGroupIntrinsicTask : IntrinsicTask
         /// </summary>
         private ProjectItemGroupTaskInstance _taskInstance;
 
-        private EngineFileUtilities _engineFileUtilities;
-
         /// <summary>
         /// Instantiates an ItemGroup task
         /// </summary>
@@ -41,7 +39,6 @@ public ItemGroupIntrinsicTask(ProjectItemGroupTaskInstance taskInstance, TargetL
             : base(loggingContext, projectInstance, logTaskInputs)
         {
             _taskInstance = taskInstance;
-            _engineFileUtilities = EngineFileUtilities.Default;
         }
 
         /// <summary>
@@ -431,7 +428,7 @@ ISet<string> removeMetadata
                     // The expression is not of the form "@(X)". Treat as string
 
                     // Pass the non wildcard expanded excludes here to fix https://github.com/Microsoft/msbuild/issues/2621
-                    string[] includeSplitFiles = _engineFileUtilities.GetFileListEscaped(
+                    string[] includeSplitFiles = EngineFileUtilities.GetFileListEscaped(
                         Project.Directory,
                         includeSplit,
                         excludes);
@@ -455,7 +452,7 @@ ISet<string> removeMetadata
 
             foreach (string excludeSplit in excludes)
             {
-                string[] excludeSplitFiles = _engineFileUtilities.GetFileListUnescaped(Project.Directory, excludeSplit);
+                string[] excludeSplitFiles = EngineFileUtilities.GetFileListUnescaped(Project.Directory, excludeSplit);
 
                 foreach (string excludeSplitFile in excludeSplitFiles)
                 {
@@ -540,7 +537,7 @@ Expander<ProjectPropertyInstance, ProjectItemInstance> expander
                 // Don't unescape wildcards just yet - if there were any escaped, the caller wants to treat them
                 // as literals. Everything else is safe to unescape at this point, since we're only matching
                 // against the file system.
-                string[] fileList = _engineFileUtilities.GetFileListEscaped(Project.Directory, piece);
+                string[] fileList = EngineFileUtilities.GetFileListEscaped(Project.Directory, piece);
 
                 foreach (string file in fileList)
                 {
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
index a5feabef029..276c7d04e66 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs
@@ -847,7 +847,7 @@ private async Task<WorkUnitResult> ExecuteInstantiatedTask(ITaskExecutionHost ta
                     }
                     else if (type == typeof(ThreadAbortException))
                     {
-#if !NET6_0_OR_GREATER
+#if !NET6_0_OR_GREATER && !NET6_0 // This is redundant but works around https://github.com/dotnet/sdk/issues/20700
                         Thread.ResetAbort();
 #endif
                         _continueOnError = ContinueOnError.ErrorAndStop;
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index 1601b3e29c6..154ace42f96 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -880,7 +880,7 @@ internal void ReleaseAllCores()
         [Serializable]
         private sealed class EngineServicesImpl : EngineServices
         {
-            private TaskHost _taskHost;
+            private readonly TaskHost _taskHost;
 
             internal EngineServicesImpl(TaskHost taskHost)
             {
@@ -902,9 +902,12 @@ public override bool LogsMessagesOfImportance(MessageImportance importance)
                 return importance <= minimumImportance;
 
             }
+
+            /// <inheritdoc/>
+            public override bool IsTaskInputLoggingEnabled => _taskHost._host.BuildParameters.LogTaskInputs;
         }
 
-        public EngineServices EngineServices{ get; }
+        public EngineServices EngineServices { get; }
 
         #endregion
 
diff --git a/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverService.cs b/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverService.cs
index 3f541b05568..e5c4095acb9 100644
--- a/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverService.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverService.cs
@@ -6,6 +6,7 @@
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Collections;
 using Microsoft.Build.Construction;
+using Microsoft.Build.Eventing;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Utilities;
@@ -35,6 +36,8 @@ public override void ClearCaches()
 
         public override SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, string solutionPath, string projectPath, bool interactive, bool isRunningInVisualStudio)
         {
+            MSBuildEventSource.Log.CachedSdkResolverServiceResolveSdkStart(sdk.Name, solutionPath, projectPath);
+
             SdkResult result;
 
             if (Traits.Instance.EscapeHatches.DisableSdkResolutionCache)
@@ -66,6 +69,8 @@ public override SdkResult ResolveSdk(int submissionId, SdkReference sdk, Logging
                 loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), "ReferencingMultipleVersionsOfTheSameSdk", sdk.Name, result.Version, result.ElementLocation, sdk.Version);
             }
 
+            MSBuildEventSource.Log.CachedSdkResolverServiceResolveSdkStop(sdk.Name, solutionPath, projectPath, result.Success);
+
             return result;
         }
     }
diff --git a/src/Build/BackEnd/Components/SdkResolution/SdkResolverException.cs b/src/Build/BackEnd/Components/SdkResolution/SdkResolverException.cs
new file mode 100644
index 00000000000..d4f5b35a3d7
--- /dev/null
+++ b/src/Build/BackEnd/Components/SdkResolution/SdkResolverException.cs
@@ -0,0 +1,27 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+//
+
+using System;
+using Microsoft.Build.Framework;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.BackEnd.SdkResolution
+{
+    /// <summary>
+    /// Represents an exception that occurs when an SdkResolver throws an unhandled exception.
+    /// </summary>
+    public class SdkResolverException : Exception
+    {
+        public SdkResolver Resolver { get; private set; }
+
+        public SdkReference Sdk { get; private set; }
+
+        public SdkResolverException(string resourceName, SdkResolver resolver, SdkReference sdk, Exception innerException, params string[] args)
+            : base(string.Format(ResourceUtilities.GetResourceString(resourceName), args), innerException)
+        {
+            Resolver = resolver;
+            Sdk = sdk;
+        }
+    }
+}
diff --git a/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs b/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
index 97b4e83a02c..9c2fca19031 100644
--- a/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
@@ -17,7 +17,7 @@ namespace Microsoft.Build.BackEnd.SdkResolution
     internal class SdkResolverLoader
     {
 #if FEATURE_ASSEMBLYLOADCONTEXT
-        private readonly CoreClrAssemblyLoader _loader = new CoreClrAssemblyLoader();
+        private static readonly CoreClrAssemblyLoader s_loader = new CoreClrAssemblyLoader();
 #endif
 
         private readonly string IncludeDefaultResolver = Environment.GetEnvironmentVariable("MSBUILDINCLUDEDEFAULTSDKRESOLVER");
@@ -35,7 +35,7 @@ internal class SdkResolverLoader
         internal virtual IList<SdkResolver> LoadResolvers(LoggingContext loggingContext,
             ElementLocation location)
         {
-            var resolvers = !String.Equals(IncludeDefaultResolver, "false", StringComparison.OrdinalIgnoreCase) ? 
+            var resolvers = !String.Equals(IncludeDefaultResolver, "false", StringComparison.OrdinalIgnoreCase) ?
                 new List<SdkResolver> {new DefaultSdkResolver()}
                 : new List<SdkResolver>();
 
@@ -192,7 +192,7 @@ protected virtual Assembly LoadResolverAssembly(string resolverPath, LoggingCont
 #if !FEATURE_ASSEMBLYLOADCONTEXT
             return Assembly.LoadFrom(resolverPath);
 #else
-            return _loader.LoadFromPath(resolverPath);
+            return s_loader.LoadFromPath(resolverPath);
 #endif
         }
 
diff --git a/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs b/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
index 6f170c430d0..fba2c4925b1 100644
--- a/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
@@ -11,6 +11,7 @@
 using System.Collections.Concurrent;
 using System.Collections.Generic;
 using System.Reflection;
+using Microsoft.Build.Eventing;
 
 namespace Microsoft.Build.BackEnd.SdkResolution
 {
@@ -115,7 +116,9 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC
 
                 try
                 {
+                    MSBuildEventSource.Log.SdkResolverResolveSdkStart();
                     result = (SdkResult)sdkResolver.Resolve(sdk, context, resultFactory);
+                    MSBuildEventSource.Log.SdkResolverResolveSdkStop(sdkResolver.Name, sdk.Name, solutionPath, projectPath, result?.Path, result?.Success ?? false);
                 }
                 catch (Exception e) when ((e is FileNotFoundException || e is FileLoadException) && sdkResolver.GetType().GetTypeInfo().Name.Equals("NuGetSdkResolver", StringComparison.Ordinal))
                 {
@@ -123,15 +126,13 @@ public virtual SdkResult ResolveSdk(int submissionId, SdkReference sdk, LoggingC
                     // to load NuGet assemblies at runtime which could fail if the user is not running installed MSBuild.  Rather
                     // than give them a generic error, we want to give a more specific message.  This exception cannot be caught by
                     // the resolver itself because it is usually thrown before the class is loaded
-                    // MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}
-                    loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), "CouldNotRunNuGetSdkResolver", MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.Message);
-                    continue;
+                    // The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}
+                    throw new SdkResolverException("CouldNotRunNuGetSdkResolver", sdkResolver, sdk, e, MSBuildConstants.NuGetAssemblyPathEnvironmentVariableName, e.ToString());
                 }
                 catch (Exception e)
                 {
-                    // MSB4242: The SDK resolver "{0}" failed to run. {1}
-                    loggingContext.LogWarning(null, new BuildEventFileInfo(sdkReferenceLocation), "CouldNotRunSdkResolver", sdkResolver.Name, e.Message);
-                    continue;
+                    // The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}": {2}
+                    throw new SdkResolverException("SDKResolverFailed", sdkResolver, sdk, e, sdkResolver.Name, sdk.ToString(), e.ToString());
                 }
 
                 SetResolverState(submissionId, sdkResolver, context.State);
@@ -234,8 +235,11 @@ private void Initialize(LoggingContext loggingContext, ElementLocation location)
                     return;
                 }
 
+                MSBuildEventSource.Log.SdkResolverServiceInitializeStart();
                 _resolvers = _sdkResolverLoader.LoadResolvers(loggingContext, location);
+                MSBuildEventSource.Log.SdkResolverServiceInitializeStop(_resolvers.Count);
             }
+
         }
 
         private void SetResolverState(int submissionId, SdkResolver resolver, object state)
diff --git a/src/Build/Construction/ProjectElement.cs b/src/Build/Construction/ProjectElement.cs
index 129e9ae3f35..8327feda09e 100644
--- a/src/Build/Construction/ProjectElement.cs
+++ b/src/Build/Construction/ProjectElement.cs
@@ -415,7 +415,7 @@ public virtual void CopyFrom(ProjectElement element)
         }
 
         /// <summary>
-        /// Hook for subclasses to specify whether the given <param name="attribute"></param> should be cloned or not
+        /// Hook for subclasses to specify whether the given <paramref name="attribute"></paramref> should be cloned or not
         /// </summary>
         protected virtual bool ShouldCloneXmlAttribute(XmlAttribute attribute) => true;
 
diff --git a/src/Build/Construction/ProjectElementContainer.cs b/src/Build/Construction/ProjectElementContainer.cs
index b55ba655ff4..3c4c0d6f269 100644
--- a/src/Build/Construction/ProjectElementContainer.cs
+++ b/src/Build/Construction/ProjectElementContainer.cs
@@ -316,7 +316,7 @@ public void RemoveChild(ProjectElement child)
         /// </summary>
         /// <remarks>
         /// It is safe to modify the children in this way
-        /// during enumeration. See <cref see="RemoveChild">RemoveChild</cref>.
+        /// during enumeration. See <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)" />.
         /// </remarks>
         public void RemoveAllChildren()
         {
diff --git a/src/Build/Definition/Project.cs b/src/Build/Definition/Project.cs
index 0a6df394738..ff29b8ec3a5 100644
--- a/src/Build/Definition/Project.cs
+++ b/src/Build/Definition/Project.cs
@@ -32,6 +32,7 @@
 using EvaluationItemSpec = Microsoft.Build.Evaluation.ItemSpec<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem>;
 using EvaluationItemExpressionFragment = Microsoft.Build.Evaluation.ItemSpec<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem>.ItemExpressionFragment;
 using SdkResult = Microsoft.Build.BackEnd.SdkResolution.SdkResult;
+using Microsoft.Build.FileSystem;
 
 namespace Microsoft.Build.Evaluation
 {
@@ -68,6 +69,11 @@ public class Project : ILinkableObject
         internal ProjectLink Link => implementation;
         object ILinkableObject.Link => IsLinked ? Link : null;
 
+        /// <summary>
+        /// Host-provided factory for <see cref="IDirectoryCache"/> interfaces to be used during evaluation.
+        /// </summary>
+        private readonly IDirectoryCacheFactory _directoryCacheFactory;
+
         /// <summary>
         /// Default project template options (include all features).
         /// </summary>
@@ -88,7 +94,7 @@ public class Project : ILinkableObject
         /// - <see cref="ProjectItem.SetMetadataValue(string,string)"/>
         /// - <see cref="ProjectItem.SetMetadataValue(string,string, bool)"/>
         ///
-        /// When this property is set to true, the previous item operations throw an <exception cref="InvalidOperationException"></exception>
+        /// When this property is set to true, the previous item operations throw an <see cref="InvalidOperationException" />
         /// instead of expanding the item element.
         /// </summary>
         public bool ThrowInsteadOfSplittingItemElement
@@ -250,20 +256,22 @@ public Project(ProjectRootElement xml, IDictionary<string, string> globalPropert
         /// <param name="projectCollection">The <see cref="ProjectCollection"/> the project is added to.</param>
         /// <param name="loadSettings">The <see cref="ProjectLoadSettings"/> to use for evaluation.</param>
         public Project(ProjectRootElement xml, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)
-            : this(xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings, null)
+            : this(xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings, null, null)
         {
         }
 
-        private Project(ProjectRootElement xml, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)
+        private Project(ProjectRootElement xml, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings,
+            EvaluationContext evaluationContext, IDirectoryCacheFactory directoryCacheFactory)
         {
             ErrorUtilities.VerifyThrowArgumentNull(xml, nameof(xml));
             ErrorUtilities.VerifyThrowArgumentLengthIfNotNull(toolsVersion, nameof(toolsVersion));
             ErrorUtilities.VerifyThrowArgumentNull(projectCollection, nameof(projectCollection));
             ProjectCollection = projectCollection;
-            var defaultImplementation = new ProjectImpl(this, xml, globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
+            var defaultImplementation = new ProjectImpl(this, xml, globalProperties, toolsVersion, subToolsetVersion, loadSettings);
             implementationInternal = (IProjectLinkInternal)defaultImplementation;
             implementation = defaultImplementation;
 
+            _directoryCacheFactory = directoryCacheFactory;
             defaultImplementation.Initialize(globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
         }
 
@@ -342,21 +350,23 @@ public Project(XmlReader xmlReader, IDictionary<string, string> globalProperties
         /// <param name="projectCollection">The collection with which this project should be associated. May not be null.</param>
         /// <param name="loadSettings">The load settings for this project.</param>
         public Project(XmlReader xmlReader, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)
-            : this(xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings, null)
+            : this(xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings, null, null)
         {
         }
 
-        private Project(XmlReader xmlReader, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)
+        private Project(XmlReader xmlReader, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings,
+            EvaluationContext evaluationContext, IDirectoryCacheFactory directoryCacheFactory)
         {
             ErrorUtilities.VerifyThrowArgumentNull(xmlReader, nameof(xmlReader));
             ErrorUtilities.VerifyThrowArgumentLengthIfNotNull(toolsVersion, nameof(toolsVersion));
             ErrorUtilities.VerifyThrowArgumentNull(projectCollection, nameof(projectCollection));
             ProjectCollection = projectCollection;
-            var defailtImplementation = new ProjectImpl(this, xmlReader, globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
-            implementationInternal = (IProjectLinkInternal)defailtImplementation;
-            implementation = defailtImplementation;
+            var defaultImplementation = new ProjectImpl(this, xmlReader, globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
+            implementationInternal = (IProjectLinkInternal)defaultImplementation;
+            implementation = defaultImplementation;
 
-            defailtImplementation.Initialize(globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
+            _directoryCacheFactory = directoryCacheFactory;
+            defaultImplementation.Initialize(globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
         }
 
         /// <summary>
@@ -436,26 +446,29 @@ public Project(string projectFile, IDictionary<string, string> globalProperties,
         /// <param name="projectCollection">The collection with which this project should be associated. May not be null.</param>
         /// <param name="loadSettings">The load settings for this project.</param>
         public Project(string projectFile, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)
-            : this(projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings, null)
+            : this(projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings, null, null)
         {
         }
 
-        private Project(string projectFile, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)
+        private Project(string projectFile, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings,
+            EvaluationContext evaluationContext, IDirectoryCacheFactory directoryCacheFactory)
         {
             ErrorUtilities.VerifyThrowArgumentNull(projectFile, nameof(projectFile));
             ErrorUtilities.VerifyThrowArgumentLengthIfNotNull(toolsVersion, nameof(toolsVersion));
             ErrorUtilities.VerifyThrowArgumentNull(projectCollection, nameof(projectCollection));
 
             ProjectCollection = projectCollection;
-            var defailtImplementation = new ProjectImpl(this, projectFile, globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
-            implementationInternal = (IProjectLinkInternal)defailtImplementation;
-            implementation = defailtImplementation;
+            var defaultImplementation = new ProjectImpl(this, projectFile, globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
+            implementationInternal = (IProjectLinkInternal)defaultImplementation;
+            implementation = defaultImplementation;
+
+            _directoryCacheFactory = directoryCacheFactory;
 
             // Note: not sure why only this ctor flavor do TryUnloadProject
             // seems the XmlReader based one should also clean the same way.
             try
             {
-                defailtImplementation.Initialize(globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
+                defaultImplementation.Initialize(globalProperties, toolsVersion, subToolsetVersion, loadSettings, evaluationContext);
             }
             catch (Exception ex)
             {
@@ -488,7 +501,8 @@ public static Project FromFile(string file, ProjectOptions options)
                 options.SubToolsetVersion,
                 options.ProjectCollection ?? ProjectCollection.GlobalProjectCollection,
                 options.LoadSettings,
-                options.EvaluationContext);
+                options.EvaluationContext,
+                options.DirectoryCacheFactory);
         }
 
         /// <summary>
@@ -505,7 +519,8 @@ public static Project FromProjectRootElement(ProjectRootElement rootElement, Pro
                 options.SubToolsetVersion,
                 options.ProjectCollection ?? ProjectCollection.GlobalProjectCollection,
                 options.LoadSettings,
-                options.EvaluationContext);
+                options.EvaluationContext,
+                options.DirectoryCacheFactory);
         }
 
         /// <summary>
@@ -522,7 +537,8 @@ public static Project FromXmlReader(XmlReader reader, ProjectOptions options)
                 options.SubToolsetVersion,
                 options.ProjectCollection ?? ProjectCollection.GlobalProjectCollection,
                 options.LoadSettings,
-                options.EvaluationContext);
+                options.EvaluationContext,
+                options.DirectoryCacheFactory);
         }
 
         /// <summary>
@@ -1767,6 +1783,18 @@ internal void VerifyThrowInvalidOperationNotImported(ProjectRootElement otherXml
             ErrorUtilities.VerifyThrowInvalidOperation(ReferenceEquals(Xml, otherXml), "OM_CannotModifyEvaluatedObjectInImportedFile", otherXml.Location.File);
         }
 
+        /// <summary>
+        /// Returns <see cref="IDirectoryCache"/> as provided by the <see cref="IDirectoryCacheFactory"/> passed when creating the
+        /// project, specific for a given evaluation ID.
+        /// </summary>
+        /// <param name="evaluationId">The evaluation ID for which the cache is requested.</param>
+        /// <returns>An <see cref="IDirectoryCache"/> implementation, or null if this project has no <see cref="IDirectoryCacheFactory"/>
+        /// associated with it or it returned null.</returns>
+        internal IDirectoryCache GetDirectoryCacheForEvaluation(int evaluationId)
+        {
+            return _directoryCacheFactory?.GetDirectoryCacheForEvaluation(evaluationId);
+        }
+
         /// <summary>
         /// Internal project evaluation implementation.
         /// </summary>
@@ -1829,8 +1857,7 @@ private class ProjectImpl : ProjectLink, IProjectLinkInternal
             /// <param name="toolsVersion">Tools version to evaluate with. May be null.</param>
             /// <param name="subToolsetVersion">Sub-toolset version to explicitly evaluate the toolset with.  May be null.</param>
             /// <param name="loadSettings">The <see cref="ProjectLoadSettings"/> to use for evaluation.</param>
-            /// <param name="evaluationContext">The evaluation context to use in case reevaluation is required.</param>
-            public ProjectImpl(Project owner, ProjectRootElement xml, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)
+            public ProjectImpl(Project owner, ProjectRootElement xml, IDictionary<string, string> globalProperties, string toolsVersion, string subToolsetVersion, ProjectLoadSettings loadSettings)
             {
                 ErrorUtilities.VerifyThrowArgumentNull(xml, nameof(xml));
                 ErrorUtilities.VerifyThrowArgumentLengthIfNotNull(toolsVersion, nameof(toolsVersion));
@@ -2406,7 +2433,7 @@ public override bool IsBuildEnabled
             /// their previously stored value to find out, and if so perhaps decide to update their own state.
             /// Note that the number may not increase monotonically.
             ///
-            /// This number corresponds to the <seealso cref="BuildEventContext.EvaluationId"/> and can be used to connect
+            /// This number corresponds to the <see cref="BuildEventContext.EvaluationId"/> and can be used to connect
             /// evaluation logging events back to the Project instance.
             /// </summary>
             public override int LastEvaluationId => _data.EvaluationId;
@@ -3623,6 +3650,7 @@ private void Reevaluate(
 
                 Evaluator<ProjectProperty, ProjectItem, ProjectMetadata, ProjectItemDefinition>.Evaluate(
                     _data,
+                    Owner,
                     Xml,
                     loadSettings,
                     ProjectCollection.MaxNodeCount,
@@ -4164,7 +4192,7 @@ internal Data(Project project, PropertyDictionary<ProjectPropertyInstance> globa
             /// <summary>
             /// Prepares the data object for evaluation.
             /// </summary>
-            public void InitializeForEvaluation(IToolsetProvider toolsetProvider, IFileSystem fileSystem)
+            public void InitializeForEvaluation(IToolsetProvider toolsetProvider, EvaluationContext evaluationContext)
             {
                 DefaultTargets = null;
                 Properties = new PropertyDictionary<ProjectProperty>();
@@ -4172,7 +4200,7 @@ public void InitializeForEvaluation(IToolsetProvider toolsetProvider, IFileSyste
                 Items = new ItemDictionary<ProjectItem>();
                 ItemsIgnoringCondition = new ItemDictionary<ProjectItem>();
                 ItemsByEvaluatedIncludeCache = new MultiDictionary<string, ProjectItem>(StringComparer.OrdinalIgnoreCase);
-                Expander = new Expander<ProjectProperty, ProjectItem>(Properties, Items, fileSystem);
+                Expander = new Expander<ProjectProperty, ProjectItem>(Properties, Items, evaluationContext);
                 ItemDefinitions = new RetrievableEntryHashSet<ProjectItemDefinition>(MSBuildNameIgnoreCaseComparer.Default);
                 Targets = new RetrievableEntryHashSet<ProjectTargetInstance>(StringComparer.OrdinalIgnoreCase);
                 ImportClosure = new List<ResolvedImport>();
diff --git a/src/Build/Definition/ProjectOptions.cs b/src/Build/Definition/ProjectOptions.cs
index 44d2ecccfd6..fadfe73a6e3 100644
--- a/src/Build/Definition/ProjectOptions.cs
+++ b/src/Build/Definition/ProjectOptions.cs
@@ -1,6 +1,7 @@
 ﻿using System.Collections.Generic;
 using Microsoft.Build.Evaluation;
 using Microsoft.Build.Evaluation.Context;
+using Microsoft.Build.FileSystem;
 
 namespace Microsoft.Build.Definition
 {
@@ -38,5 +39,10 @@ public class ProjectOptions
         /// The <see cref="EvaluationContext"/> to use for evaluation.
         /// </summary>
         public EvaluationContext EvaluationContext { get; set; }
+
+        /// <summary>
+        /// Provides <see cref="IDirectoryCache"/> to be used for evaluation.
+        /// </summary>
+        public IDirectoryCacheFactory DirectoryCacheFactory { get; set; }
     }
 }
diff --git a/src/Build/Definition/ToolsetConfigurationReader.cs b/src/Build/Definition/ToolsetConfigurationReader.cs
index 5665b1aaf09..990a8b686cb 100644
--- a/src/Build/Definition/ToolsetConfigurationReader.cs
+++ b/src/Build/Definition/ToolsetConfigurationReader.cs
@@ -10,6 +10,7 @@
 using Microsoft.Build.Execution;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
+using Microsoft.Build.Utilities;
 using ErrorUtilities = Microsoft.Build.Shared.ErrorUtilities;
 using InvalidToolsetDefinitionException = Microsoft.Build.Exceptions.InvalidToolsetDefinitionException;
 
@@ -41,6 +42,13 @@ internal class ToolsetConfigurationReader : ToolsetReader
         /// </summary>
         private static readonly char[] s_separatorForExtensionsPathSearchPaths = MSBuildConstants.SemicolonChar;
 
+        /// <summary>
+        /// Caching MSBuild exe configuration.
+        /// Used only by ReadApplicationConfiguration factory function (default) as oppose to unit tests config factory functions
+        /// which must not cache configs.
+        /// </summary>
+        private static readonly Lazy<Configuration> s_configurationCache = new Lazy<Configuration>(ReadOpenMappedExeConfiguration);
+
         /// <summary>
         /// Cached values of tools version -> project import search paths table
         /// </summary>
@@ -250,6 +258,18 @@ private Dictionary<string, ProjectImportPathMatch> ComputeDistinctListOfSearchPa
         /// Unit tests wish to avoid reading (nunit.exe) application configuration file.
         /// </summary>
         private static Configuration ReadApplicationConfiguration()
+        {
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0))
+            {
+                return s_configurationCache.Value;
+            }
+            else
+            {
+                return ReadOpenMappedExeConfiguration();
+            }
+        }
+
+        private static Configuration ReadOpenMappedExeConfiguration()
         {
             // When running from the command-line or from VS, use the msbuild.exe.config file.
             if (BuildEnvironmentHelper.Instance.Mode != BuildEnvironmentMode.None &&
diff --git a/src/Build/Evaluation/Context/EvaluationContext.cs b/src/Build/Evaluation/Context/EvaluationContext.cs
index 827d9465d75..19510f6d663 100644
--- a/src/Build/Evaluation/Context/EvaluationContext.cs
+++ b/src/Build/Evaluation/Context/EvaluationContext.cs
@@ -7,7 +7,6 @@
 using System.Threading;
 using Microsoft.Build.BackEnd.SdkResolution;
 using Microsoft.Build.FileSystem;
-using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
 
@@ -43,27 +42,22 @@ public enum SharingPolicy
 
         internal ISdkResolverService SdkResolverService { get; }
         internal IFileSystem FileSystem { get; }
-        internal EngineFileUtilities EngineFileUtilities { get; }
+        internal FileMatcher FileMatcher { get; }
 
         /// <summary>
         /// Key to file entry list. Example usages: cache glob expansion and intermediary directory expansions during glob expansion.
         /// </summary>
         private ConcurrentDictionary<string, IReadOnlyList<string>> FileEntryExpansionCache { get; }
 
-        private EvaluationContext(SharingPolicy policy, IFileSystem fileSystem)
+        private EvaluationContext(SharingPolicy policy, IFileSystem fileSystem, ISdkResolverService sdkResolverService = null,
+            ConcurrentDictionary<string, IReadOnlyList<string>> fileEntryExpansionCache = null)
         {
-            // Unsupported case: isolated context with non null file system.
-            // Isolated means caches aren't reused, but the given file system might cache.
-            ErrorUtilities.VerifyThrowArgument(
-                policy == SharingPolicy.Shared || fileSystem == null,
-                "IsolatedContextDoesNotSupportFileSystem");
-
             Policy = policy;
 
-            SdkResolverService = new CachingSdkResolverService();
-            FileEntryExpansionCache = new ConcurrentDictionary<string, IReadOnlyList<string>>();
+            SdkResolverService = sdkResolverService ?? new CachingSdkResolverService();
+            FileEntryExpansionCache = fileEntryExpansionCache ?? new ConcurrentDictionary<string, IReadOnlyList<string>>();
             FileSystem = fileSystem ?? new CachingFileSystemWrapper(FileSystems.Default);
-            EngineFileUtilities = new EngineFileUtilities(new FileMatcher(FileSystem, FileEntryExpansionCache));
+            FileMatcher = new FileMatcher(FileSystem, FileEntryExpansionCache);
         }
 
         /// <summary>
@@ -89,6 +83,12 @@ public static EvaluationContext Create(SharingPolicy policy)
         /// </param>
         public static EvaluationContext Create(SharingPolicy policy, MSBuildFileSystemBase fileSystem)
         {
+            // Unsupported case: isolated context with non null file system.
+            // Isolated means caches aren't reused, but the given file system might cache.
+            ErrorUtilities.VerifyThrowArgument(
+                policy == SharingPolicy.Shared || fileSystem == null,
+                "IsolatedContextDoesNotSupportFileSystem");
+
             var context = new EvaluationContext(
                 policy,
                 fileSystem);
@@ -124,5 +124,19 @@ internal EvaluationContext ContextForNewProject()
                     return null;
             }
         }
+
+        /// <summary>
+        /// Creates a copy of this <see cref="EvaluationContext"/> with a given <see cref="IFileSystem"/> swapped in.
+        /// </summary>
+        /// <param name="fileSystem">The file system to use by the new evaluation context.</param>
+        /// <returns>The new evaluation context.</returns>
+        internal EvaluationContext ContextWithFileSystem(IFileSystem fileSystem)
+        {
+            var newContext = new EvaluationContext(this.Policy, fileSystem, this.SdkResolverService, this.FileEntryExpansionCache)
+            {
+                _used = 1
+            };
+            return newContext;
+        }
     }
 }
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index d8c160e44dd..e72f28469c6 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -3,7 +3,6 @@
 
 using System;
 using System.Collections;
-using System.Collections.Concurrent;
 using System.Collections.Generic;
 using ObjectModel = System.Collections.ObjectModel;
 using System.Diagnostics;
@@ -20,6 +19,7 @@
 using Microsoft.Build.Eventing;
 using Microsoft.Build.Execution;
 using Microsoft.Build.Experimental.ProjectCache;
+using Microsoft.Build.FileSystem;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Framework.Profiler;
 using Microsoft.Build.Internal;
@@ -144,6 +144,9 @@ internal class Evaluator<P, I, M, D>
         /// </summary>
         private readonly int _submissionId;
 
+        /// <summary>
+        /// The evaluation context to use.
+        /// </summary>
         private readonly EvaluationContext _evaluationContext;
 
         /// <summary>
@@ -189,6 +192,7 @@ internal class Evaluator<P, I, M, D>
         /// </summary>
         private Evaluator(
             IEvaluatorData<P, I, M, D> data,
+            Project project,
             ProjectRootElement projectRootElement,
             ProjectLoadSettings loadSettings,
             int maxNodeCount,
@@ -206,6 +210,7 @@ private Evaluator(
         {
             ErrorUtilities.VerifyThrowInternalNull(data, nameof(data));
             ErrorUtilities.VerifyThrowInternalNull(projectRootElementCache, nameof(projectRootElementCache));
+            ErrorUtilities.VerifyThrowInternalNull(evaluationContext, nameof(evaluationContext));
             ErrorUtilities.VerifyThrowInternalNull(loggingService, nameof(loggingService));
             ErrorUtilities.VerifyThrowInternalNull(buildEventContext, nameof(buildEventContext));
 
@@ -220,12 +225,20 @@ private Evaluator(
                 // Wrap the IEvaluatorData<> object passed in.
                 data = new PropertyTrackingEvaluatorDataWrapper<P, I, M, D>(data, _evaluationLoggingContext, Traits.Instance.LogPropertyTracking);
             }
-            _evaluationContext = evaluationContext ?? EvaluationContext.Create(EvaluationContext.SharingPolicy.Isolated);
+
+            // If the host wishes to provide a directory cache for this evaluation, create a new EvaluationContext with the right file system.
+            _evaluationContext = evaluationContext;
+            IDirectoryCache directoryCache = project?.GetDirectoryCacheForEvaluation(_evaluationLoggingContext.BuildEventContext.EvaluationId);
+            if (directoryCache is not null)
+            {
+                IFileSystem fileSystem = new DirectoryCacheFileSystemWrapper(evaluationContext.FileSystem, directoryCache);
+                _evaluationContext = evaluationContext.ContextWithFileSystem(fileSystem);
+            }
 
             // Create containers for the evaluation results
-            data.InitializeForEvaluation(toolsetProvider, _evaluationContext.FileSystem);
+            data.InitializeForEvaluation(toolsetProvider, _evaluationContext);
 
-            _expander = new Expander<P, I>(data, data, _evaluationContext.FileSystem);
+            _expander = new Expander<P, I>(data, data, _evaluationContext);
 
             // This setting may change after the build has started, therefore if the user has not set the property to true on the build parameters we need to check to see if it is set to true on the environment variable.
             _expander.WarnForUninitializedProperties = BuildParameters.WarnOnUninitializedProperty || Traits.Instance.EscapeHatches.WarnOnUninitializedProperty;
@@ -284,6 +297,7 @@ private Evaluator(
         /// </remarks>
         internal static void Evaluate(
             IEvaluatorData<P, I, M, D> data,
+            Project project,
             ProjectRootElement root,
             ProjectLoadSettings loadSettings,
             int maxNodeCount,
@@ -295,13 +309,14 @@ internal static void Evaluate(
             BuildEventContext buildEventContext,
             ISdkResolverService sdkResolverService,
             int submissionId,
-            EvaluationContext evaluationContext = null,
+            EvaluationContext evaluationContext,
             bool interactive = false)
         {
             MSBuildEventSource.Log.EvaluateStart(root.ProjectFileLocation.File);
             var profileEvaluation = (loadSettings & ProjectLoadSettings.ProfileEvaluation) != 0 || loggingService.IncludeEvaluationProfile;
             var evaluator = new Evaluator<P, I, M, D>(
                 data,
+                project,
                 root,
                 loadSettings,
                 maxNodeCount,
@@ -357,7 +372,7 @@ internal static List<I> CreateItemsFromInclude(string rootDirectory, ProjectItem
                     else
                     {
                         // The expression is not of the form "@(X)". Treat as string
-                        string[] includeSplitFilesEscaped = EngineFileUtilities.Default.GetFileListEscaped(rootDirectory, includeSplitEscaped);
+                        string[] includeSplitFilesEscaped = EngineFileUtilities.GetFileListEscaped(rootDirectory, includeSplitEscaped, excludeSpecsEscaped: null, forceEvaluate: false, fileMatcher: expander.EvaluationContext?.FileMatcher);
 
                         if (includeSplitFilesEscaped.Length > 0)
                         {
@@ -1785,7 +1800,16 @@ static string EvaluateProperty(string value, IElementLocation location,
                 }
 
                 // Combine SDK path with the "project" relative path
-                sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);
+                try
+                {
+                    sdkResult = _sdkResolverService.ResolveSdk(_submissionId, sdkReference, _evaluationLoggingContext, importElement.Location, solutionPath, projectPath, _interactive, _isRunningInVisualStudio);
+                }
+                catch (SdkResolverException e)
+                {
+                    // We throw using e.Message because e.Message already contains the stack trace
+                    // https://github.com/dotnet/msbuild/pull/6763
+                    ProjectErrorUtilities.ThrowInvalidProject(importElement.SdkLocation, "SDKResolverCriticalFailure", e.Message);
+                }
 
                 if (!sdkResult.Success)
                 {
@@ -2000,7 +2024,7 @@ private LoadImportsResult ExpandAndLoadImportsFromUnescapedImportExpression(stri
                     }
 
                     // Expand the wildcards and provide an alphabetical order list of import statements.
-                    importFilesEscaped = _evaluationContext.EngineFileUtilities.GetFileListEscaped(directoryOfImportingFile, importExpressionEscapedItem, forceEvaluate: true);
+                    importFilesEscaped = EngineFileUtilities.GetFileListEscaped(directoryOfImportingFile, importExpressionEscapedItem, forceEvaluate: true, fileMatcher: _evaluationContext.FileMatcher);
                 }
                 catch (Exception ex) when (ExceptionHandling.IsIoRelatedException(ex))
                 {
diff --git a/src/Build/Evaluation/Expander.cs b/src/Build/Evaluation/Expander.cs
index fe397e4469a..1e18aba7c7c 100644
--- a/src/Build/Evaluation/Expander.cs
+++ b/src/Build/Evaluation/Expander.cs
@@ -1,4 +1,4 @@
-// Copyright (c) Microsoft. All rights reserved.
+﻿// Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using System;
@@ -13,6 +13,7 @@
 using System.Runtime.CompilerServices;
 using System.Text.RegularExpressions;
 using Microsoft.Build.Collections;
+using Microsoft.Build.Evaluation.Context;
 using Microsoft.Build.Execution;
 using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
@@ -301,6 +302,11 @@ private void FlushFirstValueIfNeeded()
 
         private readonly IFileSystem _fileSystem;
 
+        /// <summary>
+        /// Non-null if the expander was constructed for evaluation.
+        /// </summary>
+        internal EvaluationContext EvaluationContext { get; }
+
         /// <summary>
         /// Creates an expander passing it some properties to use.
         /// Properties may be null.
@@ -312,6 +318,18 @@ internal Expander(IPropertyProvider<P> properties, IFileSystem fileSystem)
             _fileSystem = fileSystem;
         }
 
+        /// <summary>
+        /// Creates an expander passing it some properties to use and the evaluation context.
+        /// Properties may be null.
+        /// </summary>
+        internal Expander(IPropertyProvider<P> properties, EvaluationContext evaluationContext)
+        {
+            _properties = properties;
+            _usedUninitializedProperties = new UsedUninitializedProperties();
+            _fileSystem = evaluationContext.FileSystem;
+            EvaluationContext = evaluationContext;
+        }
+
         /// <summary>
         /// Creates an expander passing it some properties and items to use.
         /// Either or both may be null.
@@ -322,6 +340,16 @@ internal Expander(IPropertyProvider<P> properties, IItemProvider<I> items, IFile
             _items = items;
         }
 
+        /// <summary>
+        /// Creates an expander passing it some properties and items to use, and the evaluation context.
+        /// Either or both may be null.
+        /// </summary>
+        internal Expander(IPropertyProvider<P> properties, IItemProvider<I> items, EvaluationContext evaluationContext)
+            : this(properties, evaluationContext)
+        {
+            _items = items;
+        }
+
         /// <summary>
         /// Creates an expander passing it some properties, items, and/or metadata to use.
         /// Any or all may be null.
@@ -2216,7 +2244,7 @@ internal static IEnumerable<Pair<string, S>> GetItemPairEnumerable(IEnumerable<S
                         {
                             foreach (
                                 var resultantItem in
-                                EngineFileUtilities.Default.GetFileListEscaped(
+                                EngineFileUtilities.GetFileListEscaped(
                                     item.ProjectDirectory,
                                     item.EvaluatedIncludeEscaped,
                                     forceEvaluate: true))
@@ -3668,6 +3696,14 @@ private bool TryExecuteWellKnownFunction(out object returnVal, object objectInst
                             return true;
                         }
                     }
+                    else if (string.Equals(_methodMethodName, nameof(string.LastIndexOfAny), StringComparison.OrdinalIgnoreCase))
+                    {
+                        if (TryGetArg(args, out string arg0))
+                        {
+                            returnVal = text.LastIndexOfAny(arg0.ToCharArray());
+                            return true;
+                        }
+                    }
                     else if (string.Equals(_methodMethodName, nameof(string.Length), StringComparison.OrdinalIgnoreCase))
                     {
                         if (args.Length == 0)
diff --git a/src/Build/Evaluation/IEvaluatorData.cs b/src/Build/Evaluation/IEvaluatorData.cs
index af0265b01d3..7e2c9c5c85c 100644
--- a/src/Build/Evaluation/IEvaluatorData.cs
+++ b/src/Build/Evaluation/IEvaluatorData.cs
@@ -8,7 +8,7 @@
 using Microsoft.Build.Collections;
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.BackEnd.SdkResolution;
-using Microsoft.Build.Shared.FileSystem;
+using Microsoft.Build.Evaluation.Context;
 
 namespace Microsoft.Build.Evaluation
 {
@@ -210,7 +210,7 @@ List<ProjectItemElement> EvaluatedItemElements
         /// <summary>
         /// Prepares the data block for a new evaluation pass
         /// </summary>
-        void InitializeForEvaluation(IToolsetProvider toolsetProvider, IFileSystem fileSystem);
+        void InitializeForEvaluation(IToolsetProvider toolsetProvider, EvaluationContext evaluationContext);
 
         /// <summary>
         /// Indicates to the data block that evaluation has completed,
diff --git a/src/Build/Evaluation/LazyItemEvaluator.EvaluatorData.cs b/src/Build/Evaluation/LazyItemEvaluator.EvaluatorData.cs
index 4c88a6d976f..c493969feb5 100644
--- a/src/Build/Evaluation/LazyItemEvaluator.EvaluatorData.cs
+++ b/src/Build/Evaluation/LazyItemEvaluator.EvaluatorData.cs
@@ -7,8 +7,8 @@
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.BackEnd.SdkResolution;
 using Microsoft.Build.Construction;
+using Microsoft.Build.Evaluation.Context;
 using Microsoft.Build.Execution;
-using Microsoft.Build.Shared.FileSystem;
 
 namespace Microsoft.Build.Evaluation
 {
@@ -285,9 +285,9 @@ public ProjectTargetInstance GetTarget(string targetName)
                 return _wrappedData.GetTarget(targetName);
             }
 
-            public void InitializeForEvaluation(IToolsetProvider toolsetProvider, IFileSystem fileSystem)
+            public void InitializeForEvaluation(IToolsetProvider toolsetProvider, EvaluationContext evaluationContext)
             {
-                _wrappedData.InitializeForEvaluation(toolsetProvider, fileSystem);
+                _wrappedData.InitializeForEvaluation(toolsetProvider, evaluationContext);
             }
 
             public void RecordImport(ProjectImportElement importElement, ProjectRootElement import, int versionEvaluated, SdkResult sdkResult)
diff --git a/src/Build/Evaluation/LazyItemEvaluator.IncludeOperation.cs b/src/Build/Evaluation/LazyItemEvaluator.IncludeOperation.cs
index da5f61449b6..b50ed189861 100644
--- a/src/Build/Evaluation/LazyItemEvaluator.IncludeOperation.cs
+++ b/src/Build/Evaluation/LazyItemEvaluator.IncludeOperation.cs
@@ -113,7 +113,8 @@ protected override ImmutableList<I> SelectItems(OrderedItemDataCollection.Builde
                                 includeSplitFilesEscaped = EngineFileUtilities.GetFileListEscaped(
                                     _rootDirectory,
                                     glob,
-                                    excludePatternsForGlobs
+                                    excludePatternsForGlobs,
+                                    fileMatcher: FileMatcher
                                 );
                             }
                             if (MSBuildEventSource.Log.IsEnabled())
diff --git a/src/Build/Evaluation/LazyItemEvaluator.LazyItemOperation.cs b/src/Build/Evaluation/LazyItemEvaluator.LazyItemOperation.cs
index 288d11ce9b9..20706932be6 100644
--- a/src/Build/Evaluation/LazyItemEvaluator.LazyItemOperation.cs
+++ b/src/Build/Evaluation/LazyItemEvaluator.LazyItemOperation.cs
@@ -44,12 +44,12 @@ protected LazyItemOperation(OperationBuilder builder, LazyItemEvaluator<P, I, M,
 
                 _evaluatorData = new EvaluatorData(_lazyEvaluator._outerEvaluatorData, itemType => GetReferencedItems(itemType, ImmutableHashSet<string>.Empty));
                 _itemFactory = new ItemFactoryWrapper(_itemElement, _lazyEvaluator._itemFactory);
-                _expander = new Expander<P, I>(_evaluatorData, _evaluatorData, _lazyEvaluator.FileSystem);
+                _expander = new Expander<P, I>(_evaluatorData, _evaluatorData, _lazyEvaluator.EvaluationContext);
 
                 _itemSpec.Expander = _expander;
             }
 
-            protected EngineFileUtilities EngineFileUtilities => _lazyEvaluator.EngineFileUtilities;
+            protected FileMatcher FileMatcher => _lazyEvaluator.FileMatcher;
 
             public void Apply(OrderedItemDataCollection.Builder listBuilder, ImmutableHashSet<string> globsToIgnore)
             {
diff --git a/src/Build/Evaluation/LazyItemEvaluator.cs b/src/Build/Evaluation/LazyItemEvaluator.cs
index 9fd3eec87e7..ada3da6a27f 100644
--- a/src/Build/Evaluation/LazyItemEvaluator.cs
+++ b/src/Build/Evaluation/LazyItemEvaluator.cs
@@ -6,7 +6,6 @@
 using Microsoft.Build.Construction;
 using Microsoft.Build.Evaluation.Context;
 using Microsoft.Build.Eventing;
-using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
 using Microsoft.Build.Utilities;
@@ -40,22 +39,22 @@ internal partial class LazyItemEvaluator<P, I, M, D>
             new Dictionary<string, LazyItemList>() :
             new Dictionary<string, LazyItemList>(StringComparer.OrdinalIgnoreCase);
 
-        protected IFileSystem FileSystem { get; }
+        protected EvaluationContext EvaluationContext { get; }
 
-        protected EngineFileUtilities EngineFileUtilities { get; }
+        protected IFileSystem FileSystem => EvaluationContext.FileSystem;
+        protected FileMatcher FileMatcher => EvaluationContext.FileMatcher;
 
         public LazyItemEvaluator(IEvaluatorData<P, I, M, D> data, IItemFactory<I, I> itemFactory, LoggingContext loggingContext, EvaluationProfiler evaluationProfiler, EvaluationContext evaluationContext)
         {
             _outerEvaluatorData = data;
-            _outerExpander = new Expander<P, I>(_outerEvaluatorData, _outerEvaluatorData, evaluationContext.FileSystem);
+            _outerExpander = new Expander<P, I>(_outerEvaluatorData, _outerEvaluatorData, evaluationContext);
             _evaluatorData = new EvaluatorData(_outerEvaluatorData, itemType => GetItems(itemType));
-            _expander = new Expander<P, I>(_evaluatorData, _evaluatorData, evaluationContext.FileSystem);
+            _expander = new Expander<P, I>(_evaluatorData, _evaluatorData, evaluationContext);
             _itemFactory = itemFactory;
             _loggingContext = loggingContext;
             _evaluationProfiler = evaluationProfiler;
 
-            FileSystem = evaluationContext.FileSystem;
-            EngineFileUtilities = evaluationContext.EngineFileUtilities;
+            EvaluationContext = evaluationContext;
         }
 
         private ImmutableList<I> GetItems(string itemType)
diff --git a/src/Build/Evaluation/ProjectRootElementCache.cs b/src/Build/Evaluation/ProjectRootElementCache.cs
index df98809f549..a526ce4540b 100644
--- a/src/Build/Evaluation/ProjectRootElementCache.cs
+++ b/src/Build/Evaluation/ProjectRootElementCache.cs
@@ -21,37 +21,37 @@ namespace Microsoft.Build.Evaluation
     /// Maintains a cache of all loaded ProjectRootElement's for design time purposes.
     /// Weak references are held to add added ProjectRootElement's.
     /// Strong references are held to a limited number of added ProjectRootElement's.
-    /// 
+    ///
     /// 1. Loads of a ProjectRootElement will share any existing loaded ProjectRootElement, rather
     /// than loading and parsing a new one. This is the case whether the ProjectRootElement
     /// is loaded directly or imported.
-    /// 
+    ///
     /// 2. For design time, only a weak reference needs to be held, because all users have a strong reference.
-    /// 
+    ///
     /// 3. Because all loads of a ProjectRootElement consult this cache, they can be assured that any
     /// entries in this cache are up to date. For example, if a ProjectRootElement is modified and saved,
     /// the cached ProjectRootElement will be the loaded one that was saved, so it will be up to date.
-    /// 
+    ///
     /// 4. If, after a project has been loaded, an external app changes the project file content on disk, it is
     /// important that a subsequent load of that project does not return stale ProjectRootElement. To avoid this, the
     /// timestamp of the file on disk is compared to the timestamp of the file at the time that the ProjectRootElement loaded it.
-    /// 
+    ///
     /// 5. For build time, some strong references need to be held, as otherwise the ProjectRootElement's for reuseable
     /// imports will be collected, and time will be wasted reparsing them. However we do not want to hold strong references
     /// to all ProjectRootElement's, consuming memory without end. So a simple priority queue is used. All Adds and Gets boost their
     /// entry to the top. As the queue gets too big, low priority entries are dropped.
-    /// 
+    ///
     /// No guesses are made at which files are more interesting to cache, beyond the most-recently-used list. For example, ".targets" files
     /// or imported files are not treated specially, as this is a potentially unreliable heuristic. Besides, caching a project file itself could
     /// be useful, if for example you want to build it twice with different sets of properties.
-    /// 
+    ///
     /// Because of the strongly typed list, some ProjectRootElement's will be held onto indefinitely. This is an acceptable price to pay for
     /// being able to provide a commonly used ProjectRootElement immediately it's needed. It is mitigated by the list being finite and small, and
     /// because we allow ProjectCollection.UnloadAllProjects to hint to us to clear the list.
-    /// 
+    ///
     /// Implicit references are those which were loaded as a result of a build, and not explicitly loaded through, for instance, the project
     /// collection.
-    /// 
+    ///
     /// </summary>
     internal class ProjectRootElementCache : ProjectRootElementCacheBase
     {
@@ -59,16 +59,17 @@ internal class ProjectRootElementCache : ProjectRootElementCacheBase
         /// The maximum number of entries to keep strong references to.
         /// This has to be strong enough to make sure that key .targets files aren't pushed
         /// off by transient loads of non-reusable files like .user files.
-        /// 
-        /// Made this as large as 50 because VC has a large number of
-        /// regularly used property sheets and other imports.
-        /// If you change this, update the unit tests.
         /// </summary>
         /// <remarks>
+        /// Made this as large as 200 because ASP.NET Core (6.0) projects have
+        /// something like 80-90 imports. This was observed to give a noticeable
+        /// performance improvement compared to a mid-17.0 MSBuild with the old
+        /// value of 50.
+        ///
         /// If this number is increased much higher, the datastructure may
         /// need to be changed from a linked list, since it's currently O(n).
         /// </remarks>
-        private static readonly int s_maximumStrongCacheSize = 50;
+        private static readonly int s_maximumStrongCacheSize = 200;
 
         /// <summary>
         /// Whether the cache should log activity to the Debug.Out stream
@@ -368,7 +369,7 @@ internal override void DiscardStrongReferences()
                     RaiseProjectRootElementRemovedFromStrongCache(projectRootElement);
                 }
 
-                // A scavenge of the weak cache is probably not worth it as 
+                // A scavenge of the weak cache is probably not worth it as
                 // the GC would have had to run immediately after the line above.
             }
         }
@@ -399,7 +400,7 @@ internal override void DiscardImplicitReferences()
         {
             lock (_locker)
             {
-                // Make a new Weak cache only with items that have been explicitly loaded, this will be a small number, there will most likely 
+                // Make a new Weak cache only with items that have been explicitly loaded, this will be a small number, there will most likely
                 // be many items which were not explicitly loaded (ie p2p references).
                 WeakValueDictionary<string, ProjectRootElement> oldWeakCache = _weakCache;
                 _weakCache = new WeakValueDictionary<string, ProjectRootElement>(StringComparer.OrdinalIgnoreCase);
@@ -480,7 +481,7 @@ private void RenameEntryInternal(string oldFullPathIfAny, ProjectRootElement pro
             // (and thus gone from the client's point of view) that merely remains
             // in the cache because we still have a reference to it from our strong cache.
             // Another possibility is that there are two, unrelated, un-saved, in-memory projects that were given the same path.
-            // Replacing the cache entry does not in itself cause a problem -- if there are any actual users of the old 
+            // Replacing the cache entry does not in itself cause a problem -- if there are any actual users of the old
             // entry they will not be affected. There would then exist more than one ProjectRootElement with the same path,
             // but clients ought not get themselves into such a state - and unless they save them to disk,
             // it may not be a problem. Replacing also doesn't cause a problem for the strong cache,
diff --git a/src/Build/Evaluation/PropertyTrackingEvaluatorDataWrapper.cs b/src/Build/Evaluation/PropertyTrackingEvaluatorDataWrapper.cs
index 6e3dc3a3ec7..54effc239c5 100644
--- a/src/Build/Evaluation/PropertyTrackingEvaluatorDataWrapper.cs
+++ b/src/Build/Evaluation/PropertyTrackingEvaluatorDataWrapper.cs
@@ -5,10 +5,10 @@
 using Microsoft.Build.Collections;
 using Microsoft.Build.Construction;
 using Microsoft.Build.Execution;
-using Microsoft.Build.Shared.FileSystem;
 using System;
 using System.Collections.Generic;
 using Microsoft.Build.BackEnd.Components.Logging;
+using Microsoft.Build.Evaluation.Context;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 using SdkResult = Microsoft.Build.BackEnd.SdkResolution.SdkResult;
@@ -135,7 +135,7 @@ public P SetProperty(ProjectPropertyElement propertyElement, string evaluatedVal
         public ItemDictionary<I> Items => _wrapped.Items;
         public List<ProjectItemElement> EvaluatedItemElements => _wrapped.EvaluatedItemElements;
         public PropertyDictionary<ProjectPropertyInstance> EnvironmentVariablePropertiesDictionary => _wrapped.EnvironmentVariablePropertiesDictionary;
-        public void InitializeForEvaluation(IToolsetProvider toolsetProvider, IFileSystem fileSystem) => _wrapped.InitializeForEvaluation(toolsetProvider, fileSystem);
+        public void InitializeForEvaluation(IToolsetProvider toolsetProvider, EvaluationContext evaluationContext) => _wrapped.InitializeForEvaluation(toolsetProvider, evaluationContext);
         public void FinishEvaluation() => _wrapped.FinishEvaluation();
         public void AddItem(I item) => _wrapped.AddItem(item);
         public void AddItemIgnoringCondition(I item) => _wrapped.AddItemIgnoringCondition(item);
diff --git a/src/Build/FileSystem/DirectoryCacheFileSystemWrapper.cs b/src/Build/FileSystem/DirectoryCacheFileSystemWrapper.cs
new file mode 100644
index 00000000000..84c24fb02cc
--- /dev/null
+++ b/src/Build/FileSystem/DirectoryCacheFileSystemWrapper.cs
@@ -0,0 +1,118 @@
+﻿// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+using Microsoft.Build.Shared;
+using Microsoft.Build.Shared.FileSystem;
+using System;
+using System.Collections.Generic;
+using System.IO;
+using System.Linq;
+
+#if FEATURE_MSIOREDIST
+using Path = Microsoft.IO.Path;
+#endif
+
+namespace Microsoft.Build.FileSystem
+{
+    internal class DirectoryCacheFileSystemWrapper : IFileSystem
+    {
+        /// <summary>
+        /// The base <see cref="IFileSystem"/> to fall back to for functionality not provided by <see cref="_directoryCache"/>.
+        /// </summary>
+        private readonly IFileSystem _fileSystem;
+
+        /// <summary>
+        /// A host-provided cache used for file existence and directory enumeration.
+        /// </summary>
+        private readonly IDirectoryCache _directoryCache;
+
+        public DirectoryCacheFileSystemWrapper(IFileSystem fileSystem, IDirectoryCache directoryCache)
+        {
+            _fileSystem = fileSystem;
+            _directoryCache = directoryCache;
+        }
+
+        #region IFileSystem implementation based on IDirectoryCache
+
+        public bool FileOrDirectoryExists(string path)
+        {
+            return _directoryCache.FileExists(path) || _directoryCache.DirectoryExists(path);
+        }
+
+        public bool DirectoryExists(string path)
+        {
+            return _directoryCache.DirectoryExists(path);
+        }
+
+        public bool FileExists(string path)
+        {
+            return _directoryCache.FileExists(path);
+        }
+
+        public IEnumerable<string> EnumerateDirectories(string path, string searchPattern = "*", SearchOption searchOption = SearchOption.TopDirectoryOnly)
+        {
+            if (searchOption != SearchOption.TopDirectoryOnly)
+            {
+                // Recursive enumeration is not used during evaluation, pass it through.
+                return _fileSystem.EnumerateDirectories(path, searchPattern, searchOption);
+            }
+            return EnumerateFullFileSystemPaths(path, searchPattern, includeFiles: false, includeDirectories: true);
+        }
+
+        public IEnumerable<string> EnumerateFiles(string path, string searchPattern = "*", SearchOption searchOption = SearchOption.TopDirectoryOnly)
+        {
+            if (searchOption != SearchOption.TopDirectoryOnly)
+            {
+                // Recursive enumeration is not used during evaluation, pass it through.
+                return _fileSystem.EnumerateFiles(path, searchPattern, searchOption);
+            }
+            return EnumerateFullFileSystemPaths(path, searchPattern, includeFiles: true, includeDirectories: false);
+        }
+
+        public IEnumerable<string> EnumerateFileSystemEntries(string path, string searchPattern = "*", SearchOption searchOption = SearchOption.TopDirectoryOnly)
+        {
+            if (searchOption != SearchOption.TopDirectoryOnly)
+            {
+                // Recursive enumeration is not used during evaluation, pass it through.
+                return _fileSystem.EnumerateFileSystemEntries(path, searchPattern, searchOption);
+            }
+            return EnumerateFullFileSystemPaths(path, searchPattern, includeFiles: true, includeDirectories: true);
+        }
+
+        private IEnumerable<string> EnumerateFullFileSystemPaths(string path, string searchPattern, bool includeFiles, bool includeDirectories)
+        {
+            FindPredicate predicate = (ref ReadOnlySpan<char> fileName) =>
+            {
+                return FileMatcher.IsAllFilesWildcard(searchPattern) || FileMatcher.IsMatch(fileName, searchPattern);
+            };
+            FindTransform<string> transform = (ref ReadOnlySpan<char> fileName) => Path.Join(path.AsSpan(), fileName);
+
+            IEnumerable<string> directories = includeDirectories
+                ? _directoryCache.EnumerateDirectories(path, searchPattern, predicate, transform)
+                : Enumerable.Empty<string>();
+            IEnumerable<string> files = includeFiles
+                ? _directoryCache.EnumerateFiles(path, searchPattern, predicate, transform)
+                : Enumerable.Empty<string>();
+
+            return Enumerable.Concat(directories, files);
+        }
+
+        #endregion
+
+        #region IFileSystem pass-through implementation
+
+        public FileAttributes GetAttributes(string path) => _fileSystem.GetAttributes(path);
+
+        public DateTime GetLastWriteTimeUtc(string path) => _fileSystem.GetLastWriteTimeUtc(path);
+
+        public TextReader ReadFile(string path) => _fileSystem.ReadFile(path);
+
+        public Stream GetFileStream(string path, FileMode mode, FileAccess access, FileShare share) => _fileSystem.GetFileStream(path, mode, access, share);
+
+        public string ReadFileAllText(string path) => _fileSystem.ReadFileAllText(path);
+
+        public byte[] ReadFileAllBytes(string path) => _fileSystem.ReadFileAllBytes(path);
+
+        #endregion
+    }
+}
diff --git a/src/Build/FileSystem/IDirectoryCache.cs b/src/Build/FileSystem/IDirectoryCache.cs
new file mode 100644
index 00000000000..fb6e62c1b6a
--- /dev/null
+++ b/src/Build/FileSystem/IDirectoryCache.cs
@@ -0,0 +1,89 @@
+﻿// Copyright (c) Microsoft. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+using System;
+using System.Collections.Generic;
+
+namespace Microsoft.Build.FileSystem
+{
+    /// <summary>
+    /// A provider of <see cref="IDirectoryCache"/> instances. To be implemented by MSBuild hosts that wish to intercept
+    /// file existence checks and file enumerations performed during project evaluation.
+    /// </summary>
+    /// <remarks>
+    /// Unlike <see cref="MSBuildFileSystemBase"/>, file enumeration returns file/directory names, not full paths.
+    /// The host uses <see cref="Definition.ProjectOptions.DirectoryCacheFactory"/> to specify the directory cache
+    /// factory per project.
+    /// </remarks>
+    public interface IDirectoryCacheFactory
+    {
+        /// <summary>
+        /// Returns an <see cref="IDirectoryCache"/> to be used when evaluating the project associated with this <see cref="IDirectoryCacheFactory"/>.
+        /// </summary>
+        /// <param name="evaluationId">The ID of the evaluation for which the interface is requested.</param>
+        IDirectoryCache GetDirectoryCacheForEvaluation(int evaluationId);
+    }
+
+    /// <summary>
+    /// A predicate taking file name.
+    /// </summary>
+    /// <param name="fileName">The file name to check.</param>
+    public delegate bool FindPredicate(ref ReadOnlySpan<char> fileName);
+
+    /// <summary>
+    /// A function taking file name and returning an arbitrary result.
+    /// </summary>
+    /// <typeparam name="TResult">The type of the result to return</typeparam>
+    /// <param name="fileName">The file name to transform.</param>
+    public delegate TResult FindTransform<TResult>(ref ReadOnlySpan<char> fileName);
+
+    /// <summary>
+    /// Allows the implementor to intercept file existence checks and file enumerations performed during project evaluation.
+    /// </summary>
+    public interface IDirectoryCache
+    {
+        /// <summary>
+        /// Returns <code>true</code> if the given path points to an existing file on disk.
+        /// </summary>
+        /// <param name="path">A full and normalized path.</param>
+        bool FileExists(string path);
+
+        /// <summary>
+        /// Returns <code>true</code> if the given path points to an existing directory on disk.
+        /// </summary>
+        /// <param name="path">A full and normalized path.</param>
+        bool DirectoryExists(string path);
+
+        /// <summary>
+        /// Enumerates files in the given directory only (non-recursively).
+        /// </summary>
+        /// <typeparam name="TResult">The desired return type.</typeparam>
+        /// <param name="path">The directory to enumerate, specified as a full normalized path.</param>
+        /// <param name="pattern">A search pattern supported by the platform which is guaranteed to return a superset of relevant files.</param>
+        /// <param name="predicate">A predicate to test whether a file should be included.</param>
+        /// <param name="transform">A transform from <code>ReadOnlySpan&lt;char&gt;</code> to <typeparamref name="TResult"/>.</param>
+        /// <remarks>
+        /// The <paramref name="pattern"/> parameter may match more files than what the caller is interested in. In other words,
+        /// <paramref name="predicate"/> can return <code>false</code> even if the implementation enumerates only files whose names
+        /// match the pattern. The implementation is free to ignore the pattern and call the predicate for all files on the given
+        /// <paramref name="path"/>.
+        /// </remarks>
+        IEnumerable<TResult> EnumerateFiles<TResult>(string path, string pattern, FindPredicate predicate, FindTransform<TResult> transform);
+
+        /// <summary>
+        /// Enumerates subdirectories in the given directory only (non-recursively).
+        /// </summary>
+        /// <typeparam name="TResult">The desired return type.</typeparam>
+        /// <param name="path">The directory to enumerate, specified as a full normalized path.</param>
+        /// <param name="pattern">A search pattern supported by the platform which is guaranteed to return a superset of relevant directories.</param>
+        /// <param name="predicate">A predicate to test whether a directory should be included.</param>
+        /// <param name="transform">A transform from <code>ReadOnlySpan&lt;char&gt;</code> to <typeparamref name="TResult"/>.</param>
+        /// <remarks>
+        /// The <paramref name="pattern"/> parameter may match more direcories than what the caller is interested in. In other words,
+        /// <paramref name="predicate"/> can return <code>false</code> even if the implementation enumerates only directories whose names
+        /// match the pattern. The implementation is free to ignore the pattern and call the predicate for all directories on the given
+        /// <paramref name="path"/>.
+        /// </remarks>
+        IEnumerable<TResult> EnumerateDirectories<TResult>(string path, string pattern, FindPredicate predicate, FindTransform<TResult> transform);
+    }
+}
diff --git a/src/Build/Instance/ProjectInstance.cs b/src/Build/Instance/ProjectInstance.cs
index b67aba3de21..35795e9d705 100644
--- a/src/Build/Instance/ProjectInstance.cs
+++ b/src/Build/Instance/ProjectInstance.cs
@@ -1347,7 +1347,7 @@ ICollection<ProjectItemInstance> IItemProvider<ProjectItemInstance>.GetItems(str
         /// Only called during evaluation, so does not check for immutability.
         /// </summary>
         void IEvaluatorData<ProjectPropertyInstance, ProjectItemInstance, ProjectMetadataInstance, ProjectItemDefinitionInstance>.
-            InitializeForEvaluation(IToolsetProvider toolsetProvider, IFileSystem fileSystem)
+            InitializeForEvaluation(IToolsetProvider toolsetProvider, EvaluationContext evaluationContext)
         {
             // All been done in the constructor.  We don't allow re-evaluation of project instances.
         }
@@ -2761,6 +2761,7 @@ out var usingDifferentToolsVersionFromProjectFile
 
             Evaluator<ProjectPropertyInstance, ProjectItemInstance, ProjectMetadataInstance, ProjectItemDefinitionInstance>.Evaluate(
                 this,
+                null,
                 xml,
                 projectLoadSettings ?? buildParameters.ProjectLoadSettings, /* Use override ProjectLoadSettings if specified */
                 buildParameters.MaxNodeCount,
diff --git a/src/Build/Instance/TaskFactories/TaskHostTask.cs b/src/Build/Instance/TaskFactories/TaskHostTask.cs
index c080e9338e3..99bc7663895 100644
--- a/src/Build/Instance/TaskFactories/TaskHostTask.cs
+++ b/src/Build/Instance/TaskFactories/TaskHostTask.cs
@@ -268,6 +268,7 @@ public bool Execute()
                         BuildEngine.ContinueOnError,
                         _taskType.Type.FullName,
                         AssemblyUtilities.GetAssemblyLocation(_taskType.Type.GetTypeInfo().Assembly),
+                        _buildComponentHost.BuildParameters.LogTaskInputs,
                         _setParameters,
                         new Dictionary<string, string>(_buildComponentHost.BuildParameters.GlobalProperties),
                         _taskLoggingContext.GetWarningsAsErrors(),
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
index 9645b39d991..c6be1d59db3 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
@@ -51,8 +51,6 @@ public class BuildEventArgsReader : IDisposable
             typeof(BuildEventArgs).GetField("threadId", BindingFlags.Instance | BindingFlags.NonPublic);
         private static FieldInfo buildEventArgsFieldSenderName =
             typeof(BuildEventArgs).GetField("senderName", BindingFlags.Instance | BindingFlags.NonPublic);
-        private static FieldInfo buildEventArgsFieldTimestamp =
-            typeof(BuildEventArgs).GetField("timestamp", BindingFlags.Instance | BindingFlags.NonPublic);
 
         /// <summary>
         /// Initializes a new instance of BuildEventArgsReader using a BinaryReader instance
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
index 9b2e2930b92..20583b991b0 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
@@ -392,6 +392,7 @@ private void Write(BuildErrorEventArgs e)
         {
             Write(BinaryLogRecordKind.Error);
             WriteBuildEventArgsFields(e);
+            WriteArguments(e.RawArguments);
             WriteDeduplicatedString(e.Subcategory);
             WriteDeduplicatedString(e.Code);
             WriteDeduplicatedString(e.File);
@@ -406,6 +407,7 @@ private void Write(BuildWarningEventArgs e)
         {
             Write(BinaryLogRecordKind.Warning);
             WriteBuildEventArgsFields(e);
+            WriteArguments(e.RawArguments);
             WriteDeduplicatedString(e.Subcategory);
             WriteDeduplicatedString(e.Code);
             WriteDeduplicatedString(e.File);
@@ -564,7 +566,7 @@ private void WriteBaseFields(BuildEventArgs e, BuildEventArgsFieldFlags flags)
         private void WriteMessageFields(BuildMessageEventArgs e, bool writeMessage = true, bool writeImportance = false)
         {
             var flags = GetBuildEventArgsFieldFlags(e, writeMessage);
-            flags = GetMessageFlags(e, flags, writeMessage, writeImportance);
+            flags = GetMessageFlags(e, flags, writeImportance);
 
             Write((int)flags);
 
@@ -612,12 +614,7 @@ private void WriteMessageFields(BuildMessageEventArgs e, bool writeMessage = tru
 
             if ((flags & BuildEventArgsFieldFlags.Arguments) != 0)
             {
-                Write(e.RawArguments.Length);
-                for (int i = 0; i < e.RawArguments.Length; i++)
-                {
-                    string argument = Convert.ToString(e.RawArguments[i], CultureInfo.CurrentCulture);
-                    WriteDeduplicatedString(argument);
-                }
+                WriteArguments(e.RawArguments);
             }
 
             if ((flags & BuildEventArgsFieldFlags.Importance) != 0)
@@ -626,7 +623,23 @@ private void WriteMessageFields(BuildMessageEventArgs e, bool writeMessage = tru
             }
         }
 
-        private static BuildEventArgsFieldFlags GetMessageFlags(BuildMessageEventArgs e, BuildEventArgsFieldFlags flags, bool writeMessage = true, bool writeImportance = false)
+        private void WriteArguments(object[] arguments)
+        {
+            if (arguments == null || arguments.Length == 0)
+            {
+                return;
+            }
+
+            int count = arguments.Length;
+            Write(count);
+            for (int i = 0; i < count; i++)
+            {
+                string argument = Convert.ToString(arguments[i], CultureInfo.CurrentCulture);
+                WriteDeduplicatedString(argument);
+            }
+        }
+
+        private static BuildEventArgsFieldFlags GetMessageFlags(BuildMessageEventArgs e, BuildEventArgsFieldFlags flags, bool writeImportance = false)
         {
             if (e.Subcategory != null)
             {
@@ -668,11 +681,6 @@ private static BuildEventArgsFieldFlags GetMessageFlags(BuildMessageEventArgs e,
                 flags |= BuildEventArgsFieldFlags.EndColumnNumber;
             }
 
-            if (writeMessage && e.RawArguments != null && e.RawArguments.Length > 0)
-            {
-                flags |= BuildEventArgsFieldFlags.Arguments;
-            }
-
             if (writeImportance && e.Importance != MessageImportance.Low)
             {
                 flags |= BuildEventArgsFieldFlags.Importance;
@@ -697,6 +705,14 @@ private static BuildEventArgsFieldFlags GetBuildEventArgsFieldFlags(BuildEventAr
             if (writeMessage)
             {
                 flags |= BuildEventArgsFieldFlags.Message;
+
+                // We're only going to write the arguments for messages,
+                // warnings and errors. Only set the flag for these.
+                if (e is LazyFormattedBuildEventArgs { RawArguments: { Length: > 0 } } and
+                    (BuildMessageEventArgs or BuildWarningEventArgs or BuildErrorEventArgs))
+                {
+                    flags |= BuildEventArgsFieldFlags.Arguments;
+                }
             }
 
             // no need to waste space for the default sender name
@@ -705,12 +721,6 @@ private static BuildEventArgsFieldFlags GetBuildEventArgsFieldFlags(BuildEventAr
                 flags |= BuildEventArgsFieldFlags.SenderName;
             }
 
-            // ThreadId never seems to be used or useful for anything.
-            //if (e.ThreadId > 0)
-            //{
-            //    flags |= BuildEventArgsFieldFlags.ThreadId;
-            //}
-
             if (e.Timestamp != default(DateTime))
             {
                 flags |= BuildEventArgsFieldFlags.Timestamp;
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index f89fc770232..f7540863381 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -20,7 +20,7 @@
     <IsPackable>true</IsPackable>
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to create, edit, and evaluate MSBuild projects.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
-    <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">partial</ApplyNgenOptimization>
+    <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">full</ApplyNgenOptimization>
 
     <!-- Do not generate a warning that our 'stable' package should not have a prerelease dependency. -->
     <NoWarn>$(NoWarn);NU5104</NoWarn>
@@ -36,6 +36,8 @@
     <PackageReference Include="System.Text.Json" />
 
     <PackageReference Include="System.Reflection.Metadata" Condition="'$(MonoBuild)' == 'true'" />
+
+    <PackageReference Include="Microsoft.IO.Redist" Condition="'$(FeatureMSIORedist)' == 'true'" />
   </ItemGroup>
 
   <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
@@ -157,6 +159,7 @@
     <Compile Include="BackEnd\Components\Caching\ConfigCacheWithOverride.cs" />
     <Compile Include="BackEnd\Components\Caching\ResultsCacheWithOverride.cs" />
     <Compile Include="BackEnd\Components\ProjectCache\*.cs" />
+    <Compile Include="BackEnd\Components\SdkResolution\SdkResolverException.cs" />
     <Compile Include="BackEnd\Components\SdkResolution\TranslationHelpers.cs" />
     <Compile Include="FileSystem\*.cs" />
     <Compile Include="Utilities\NuGetFrameworkWrapper.cs" />
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index 747e1b197e1..db27d0712c8 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -1285,13 +1285,15 @@
     <value>MSB4244: The SDK resolver assembly "{0}" could not be loaded. {1}</value>
     <comment>{StrBegin="MSB4244: "}</comment>
   </data>
-  <data name="CouldNotRunSdkResolver" xml:space="preserve">
-    <value>MSB4242: The SDK resolver "{0}" failed to run. {1}</value>
+  <data name="SDKResolverCriticalFailure" xml:space="preserve">
+    <value>MSB4242: SDK Resolver Failure: "{0}"</value>
     <comment>{StrBegin="MSB4242: "}</comment>
   </data>
+  <data name="SDKResolverFailed" xml:space="preserve">
+    <value>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</value>
+  </data>
   <data name="CouldNotRunNuGetSdkResolver" xml:space="preserve">
-    <value>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</value>
-    <comment>{StrBegin="MSB4243: "}</comment>
+    <value>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</value>
   </data>
   <data name="SdkResolverManifestInvalid" xml:space="preserve">
     <value>MSB4245: SDK Resolver manifest file is invalid. This may indicate a corrupt or invalid installation of MSBuild. Manifest file path '{0}'. Message: {1}</value>
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index b3861309d5c..bdf7ebe0340 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: Zakázání uzlu inproc způsobí snížení výkonu při používání modulů plug-in mezipaměti projektu, které vysílají žádosti o sestavení proxy serveru.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: Selhání překladače sady SDK: {0}</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">Překladač sady SDK {0} selhal při pokusu o překlad sady SDK {1}. Výjimka: {2}</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: Projekt {0} přeskočil omezení izolace grafu v odkazovaném projektu {1}.</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: Určené spřažení požadavku {0} je v konfliktu s předchozím spřažením {1} určeným pro projekt {2} s globálními vlastnostmi {3}.</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Využití:          Průměrné využití {0}: {1:###.0}</target>
         <target state="translated">MSB4244: Sestavení překladače sady SDK {0} nebylo možné načíst. {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: Překladač sady SDK {0} se nepodařilo spustit. {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: Překladač sady SDK založený na NuGet se nepodařilo spustit, protože sestavení NuGet se nenašla. Zkontrolujte instalaci nástroje MSBuild nebo nastavte proměnnou prostředí {0} na složku, která obsahuje požadovaná sestavení NuGet. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">Překladač sady SDK založený na NuGet se nepodařilo spustit, protože sestavení NuGet se nenašla. Zkontrolujte instalaci nástroje MSBuild nebo nastavte proměnnou prostředí {0} na složku, která obsahuje požadovaná sestavení NuGet. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index f8a63950797..189016ff8b6 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: Das Deaktivieren des In-Process-Knotens führt zu Leistungseinbußen bei der Verwendung von Projektcache-Plug-Ins, die Proxybuildanforderungen ausgeben.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: Fehler bei SDK-Resolver: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">Ausfall beim Versuch des SDK-Resolver "{0}", das SDK "{1}" aufzulösen. Ausnahme: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: Das Projekt "{0}" hat Graphisolationseinschränkungen für das referenzierte Projekt "{1}" übersprungen.</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: Die angegebene Anforderungsaffinität {0} verursacht einen Konflikt mit einer vorherigen Affinität {1} speziell für das Projekt {2} mit globalen Eigenschaften {3}</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Auslastung:          {0} Durchschnittliche Auslastung: {1:###.0}</target>
         <target state="translated">MSB4244: Die SDK-Resolverassembly "{0}" konnte nicht geladen werden. {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: Der SDK-Resolver "{0}" konnte nicht ausgeführt werden. {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: Fehler beim NuGet-basierten SDK-Resolver, weil die NuGet-Assemblys nicht gefunden wurden. Überprüfen Sie Ihre Installation von MSBuild, oder legen Sie die Umgebungsvariable "{0}" auf den Ordner fest, der die erforderlichen NuGet-Assemblys enthält. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">Fehler beim NuGet-basierten SDK-Resolver, weil die NuGet-Assemblies nicht gefunden wurden. Überprüfen Sie Ihre Installation von MSBuild, oder legen Sie die Umgebungsvariable "{0}" auf den Ordner fest, der die erforderlichen NuGet-Assemblies enthält. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.en.xlf b/src/Build/Resources/xlf/Strings.en.xlf
new file mode 100644
index 00000000000..cff665d540f
--- /dev/null
+++ b/src/Build/Resources/xlf/Strings.en.xlf
@@ -0,0 +1,2460 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
+  <file datatype="xml" source-language="en" target-language="en" original="../Strings.resx">
+    <body>
+      <trans-unit id="AmbiguousTaskParameterError">
+        <source>MSB4001: The "{0}" task has more than one parameter called "{1}".</source>
+        <target state="new">MSB4001: The "{0}" task has more than one parameter called "{1}".</target>
+        <note>{StrBegin="MSB4001: "}UE: This message is shown when a task has more than one .NET property with the same name -- it's unclear which of
+    those properties the task wants to use as a parameter in project files.</note>
+      </trans-unit>
+      <trans-unit id="AspNetCompiler.UnsupportedMSBuildVersion">
+        <source>MSB4249: Unable to build website project "{0}". The ASP.NET compiler is only available on the .NET Framework version of MSBuild.</source>
+        <target state="new">MSB4249: Unable to build website project "{0}". The ASP.NET compiler is only available on the .NET Framework version of MSBuild.</target>
+        <note>{StrBegin="MSB4249: "}</note>
+      </trans-unit>
+      <trans-unit id="AttributeTypeLoadError">
+        <source>MSB4002: There was a failure retrieving the attributes for parameters in the "{0}" task. {1}</source>
+        <target state="new">MSB4002: There was a failure retrieving the attributes for parameters in the "{0}" task. {1}</target>
+        <note>{StrBegin="MSB4002: "}UE: This message is shown when the .NET attributes that a task's .NET properties are decorated with, cannot be
+    retrieved -- this is typically because the .NET classes that define the .NET attributes cannot be loaded because the assembly
+    they are defined in cannot be found, or the classes themselves cannot be found.</note>
+      </trans-unit>
+      <trans-unit id="BadlyCasedSpecialTaskAttribute">
+        <source>MSB4003: "{0}" is a reserved attribute of the &lt;{1}&gt; element, and must be spelled with the correct casing. This attribute cannot be used as a parameter to the "{2}" task.</source>
+        <target state="new">MSB4003: "{0}" is a reserved attribute of the &lt;{1}&gt; element, and must be spelled with the correct casing. This attribute cannot be used as a parameter to the "{2}" task.</target>
+        <note>{StrBegin="MSB4003: "}UE: Tasks are not allowed to use incorrect case for reserved attributes on the task nodes e.g. "continueonerror"
+    instead of the "ContinueOnError".</note>
+      </trans-unit>
+      <trans-unit id="BuildInProgress">
+        <source>The operation cannot be completed because a build is already in progress.</source>
+        <target state="new">The operation cannot be completed because a build is already in progress.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CacheMissesNotAllowedInIsolatedGraphBuilds">
+        <source>MSB4252: Project "{0}" with global properties
+    ({1})
+    is building project "{2}" with global properties
+    ({3})
+    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
+    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
+    - the reference was called with global properties that do not match the static graph inferred nodes
+    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    </source>
+        <target state="new">MSB4252: Project "{0}" with global properties
+    ({1})
+    is building project "{2}" with global properties
+    ({3})
+    with the ({4}) target(s) but the build result for the built project is not in the engine cache. In isolated builds this could mean one of the following:
+    - the reference was called with a target which is not specified in the ProjectReferenceTargets item in project "{0}"
+    - the reference was called with global properties that do not match the static graph inferred nodes
+    - the reference was not explicitly specified as a ProjectReference item in project "{0}"
+    </target>
+        <note>
+      {StrBegin="MSB4252:"}
+      LOCALIZATION: Do not localize the following words: ProjectReference, ProjectReferenceTargets
+    </note>
+      </trans-unit>
+      <trans-unit id="CannotExpandItemMetadata">
+        <source>MSB4248: Cannot expand metadata in expression "{0}". {1}</source>
+        <target state="new">MSB4248: Cannot expand metadata in expression "{0}". {1}</target>
+        <note>{StrBegin="MSB4248: "}UE: This message is shown when metadata cannot be expanded in an expression for some reason e.g. trying to apply
+    %(RootDir) to an item-spec that's not a valid path would result in this error.
+    LOCALIZATION: "{1}" is a localized message explaining the problem.</note>
+      </trans-unit>
+      <trans-unit id="ChangeWave_InvalidFormat">
+        <source>MSB4271: Environment variable MSBuildDisableFeaturesFromVersion is set to an invalid format. Enabling all change wave versions. Entered value: {0}. Current Change Waves: {1}.</source>
+        <target state="new">MSB4271: Environment variable MSBuildDisableFeaturesFromVersion is set to an invalid format. Enabling all change wave versions. Entered value: {0}. Current Change Waves: {1}.</target>
+        <note>{StrBegin="MSB4271: "}UE: Value should be of the format: xx.yy</note>
+      </trans-unit>
+      <trans-unit id="ChangeWave_OutOfRotation">
+        <source>MSB4272: Environment variable MSBuildDisableFeaturesFromVersion is set to a version that is out of rotation. Defaulting to Change Wave version: {0}. Entered value: {1}. Current Change Waves: {2}.</source>
+        <target state="new">MSB4272: Environment variable MSBuildDisableFeaturesFromVersion is set to a version that is out of rotation. Defaulting to Change Wave version: {0}. Entered value: {1}. Current Change Waves: {2}.</target>
+        <note>{StrBegin="MSB4272: "}</note>
+      </trans-unit>
+      <trans-unit id="CircularDependency">
+        <source>MSB4006: There is a circular dependency in the target dependency graph involving target "{0}".</source>
+        <target state="new">MSB4006: There is a circular dependency in the target dependency graph involving target "{0}".</target>
+        <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
+    request a target to build itself (perhaps via a chain of other targets).</note>
+      </trans-unit>
+      <trans-unit id="CircularDependencyInProjectGraph">
+        <source>MSB4251: There is a circular dependency involving the following projects: {0}</source>
+        <target state="new">MSB4251: There is a circular dependency involving the following projects: {0}</target>
+        <note>
+      {StrBegin="MSB4251:"} This message is shown when a graph build detects a target referenced in a circular manner -- a project cannot
+      request a target to build itself (perhaps via a chain of other targets)
+    </note>
+      </trans-unit>
+      <trans-unit id="CircularDependencyInTargetGraph">
+        <source>MSB4006: There is a circular dependency in the target dependency graph involving target "{0}". Since "{1}" has "{2}" dependence on "{3}", the circular is "{4}".</source>
+        <target state="new">MSB4006: There is a circular dependency in the target dependency graph involving target "{0}". Since "{1}" has "{2}" dependence on "{3}", the circular is "{4}".</target>
+        <note>{StrBegin="MSB4006: "}UE: This message is shown when the build engine detects a target referenced in a circular manner -- a project cannot
+    request a target to build itself (perhaps via a chain of other targets).</note>
+      </trans-unit>
+      <trans-unit id="EmptyOutputCacheFile">
+        <source>MSB4257: The specified output result cache file is empty.</source>
+        <target state="new">MSB4257: The specified output result cache file is empty.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="EnvironmentVariableRead">
+        <source>Read environment variable "{0}"</source>
+        <target state="new">Read environment variable "{0}"</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ErrorReadingCacheFile">
+        <source>MSB4256: Reading input result cache files from path "{0}" encountered an error: {1}</source>
+        <target state="new">MSB4256: Reading input result cache files from path "{0}" encountered an error: {1}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ErrorWritingCacheFile">
+        <source>MSB4258: Writing output result cache file in path "{0}" encountered an error: {1}</source>
+        <target state="new">MSB4258: Writing output result cache file in path "{0}" encountered an error: {1}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="IllFormedPropertySpaceInCondition">
+        <source>MSB4259: Unexpected space at position "{1}" of condition "{0}". Did you forget to remove a space?</source>
+        <target state="new">MSB4259: Unexpected space at position "{1}" of condition "{0}". Did you forget to remove a space?</target>
+        <note>{StrBegin="MSB4259: "}</note>
+      </trans-unit>
+      <trans-unit id="InputCacheFilesDoNotExist">
+        <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
+        <target state="new">MSB4255: The following input result cache files do not exist: "{0}"</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="InvalidVersionFormat">
+        <source>Version string was not in a correct format.</source>
+        <target state="new">Version string was not in a correct format.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="IsolatedContextDoesNotSupportFileSystem">
+        <source>EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</source>
+        <target state="new">EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="KillingProcessWithPid">
+        <source>Killing process with pid = {0}.</source>
+        <target state="new">Killing process with pid = {0}.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="LoadingProjectCachePlugin">
+        <source>Loading the following project cache plugin:
+    {0}</source>
+        <target state="new">Loading the following project cache plugin:
+    {0}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="LogLoggerVerbosity">
+        <source>Logging verbosity is set to: {0}.</source>
+        <target state="new">Logging verbosity is set to: {0}.</target>
+        <note>
+      LOCALIZATION: {0} is an enum value of LoggerVerbosity.
+    </note>
+      </trans-unit>
+      <trans-unit id="LogTaskInputs.Truncated">
+        <source>The parameters have been truncated beyond this point. To view all parameters, clear the MSBUILDTRUNCATETASKINPUTLOGGING environment variable.</source>
+        <target state="new">The parameters have been truncated beyond this point. To view all parameters, clear the MSBUILDTRUNCATETASKINPUTLOGGING environment variable.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="MetaprojectGenerated">
+        <source>Metaproject "{0}" generated.</source>
+        <target state="new">Metaproject "{0}" generated.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="NoBuildInProgress">
+        <source>The operation cannot be completed because BeginBuild has not yet been called.</source>
+        <target state="new">The operation cannot be completed because BeginBuild has not yet been called.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="NoProjectCachePluginFoundInAssembly">
+        <source>MSB4270: No project cache plugins found in assembly "{0}". Expected one.</source>
+        <target state="new">MSB4270: No project cache plugins found in assembly "{0}". Expected one.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="NotAllNodesDefineACacheItem">
+        <source>MSB4269: When any static graph node defines a project cache, all nodes must define the same project cache. The following project(s) do not contain a "{0}" item declaration: {1}</source>
+        <target state="new">MSB4269: When any static graph node defines a project cache, all nodes must define the same project cache. The following project(s) do not contain a "{0}" item declaration: {1}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="NuGetAssemblyNotFound">
+        <source>A required NuGet assembly was not found. Expected Path: {0}</source>
+        <target state="new">A required NuGet assembly was not found. Expected Path: {0}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="NullReferenceFromProjectInstanceFactory">
+        <source>MSB4253: A null reference was returned from a user-provided ProjectInstanceFactoryFunc callback. This is not allowed.</source>
+        <target state="new">MSB4253: A null reference was returned from a user-provided ProjectInstanceFactoryFunc callback. This is not allowed.</target>
+        <note>
+      {StrBegin="MSB4253: "}
+      LOCALIZATION:  Do not localize the following words: ProjectInstanceFactoryFunc.
+    </note>
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataIsRestrictedToReferencedItems">
+        <source>Only item types may be referenced when removing with MatchOnMetadata.</source>
+        <target state="new">Only item types may be referenced when removing with MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOnlyApplicableToRemoveItems">
+        <source>MatchOnMetadata only applies to Remove operations on items.</source>
+        <target state="new">MatchOnMetadata only applies to Remove operations on items.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchOnMetadataOptionsOnlyApplicableToItemsWithMatchOnMetadata">
+        <source>MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</source>
+        <target state="new">MatchOnMetadataOptions is valid only when removing items using MatchOnMetadata.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoMatchOnMetadataOutsideTargets">
+        <source>MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</source>
+        <target state="new">MatchOnMetadata cannot be used outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_TargetNameNullOrEmpty">
+        <source>Method {0} cannot be called with a collection containing null or empty target names.</source>
+        <target state="new">Method {0} cannot be called with a collection containing null or empty target names.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OnlyOneCachePluginMustBeSpecified">
+        <source>MSB4265: A single project cache plugin must be specified but multiple where found: {0}</source>
+        <target state="new">MSB4265: A single project cache plugin must be specified but multiple where found: {0}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectCacheException">
+        <source>MSB4273: The project cache threw an unhandled exception from the {0} method.</source>
+        <target state="new">MSB4273: The project cache threw an unhandled exception from the {0} method.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectCacheInitializationFailed">
+        <source>MSB4266: Failed to initialize the project cache.</source>
+        <target state="new">MSB4266: Failed to initialize the project cache.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectCacheQueryFailed">
+        <source>MSB4267: The project cache failed while being queried for the following project: {0}. The cache is queried in parallel for multiple projects so this specific project might not be the cause.</source>
+        <target state="new">MSB4267: The project cache failed while being queried for the following project: {0}. The cache is queried in parallel for multiple projects so this specific project might not be the cause.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectCacheShutdownFailed">
+        <source>MSB4268: The project cache failed to shut down properly.</source>
+        <target state="new">MSB4268: The project cache failed to shut down properly.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectGraphDoesNotSupportProjectReferenceWithToolset">
+        <source>MSB4250: ProjectGraph does not support ProjectReference items with the ToolsVersion metadata set. Found ProjectReference "{0}" with ToolsVersion in file "{1}"</source>
+        <target state="new">MSB4250: ProjectGraph does not support ProjectReference items with the ToolsVersion metadata set. Found ProjectReference "{0}" with ToolsVersion in file "{1}"</target>
+        <note>
+      {StrBegin="MSB4250: "}
+      LOCALIZATION:  Do not localize the following words: ProjectGraph, ProjectReference, ToolsVersion.
+    </note>
+      </trans-unit>
+      <trans-unit id="ProjectImportSkippedExpressionEvaluatedToEmpty">
+        <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the expression evaluating to an empty string.</source>
+        <target state="new">Project "{0}" was not imported by "{1}" at ({2},{3}), due to the expression evaluating to an empty string.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PropertyAssignment">
+        <source>Property initial value: $({0})="{1}" Source: {2}</source>
+        <target state="new">Property initial value: $({0})="{1}" Source: {2}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProxyRequestNotScheduledOnInprocNode">
+        <source>MSB4274: Disabling the inproc node leads to performance degradation when using project cache plugins that emit proxy build requests.</source>
+        <target state="new">MSB4274: Disabling the inproc node leads to performance degradation when using project cache plugins that emit proxy build requests.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="new">MSB4242: SDK Resolver Failure: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="new">The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SkippedConstraintsOnRequest">
+        <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
+        <target state="new">MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</target>
+        <note>
+      LOCALIZATION: {0} and {1} are file paths
+    </note>
+      </trans-unit>
+      <trans-unit id="SolutionPathPropertyMustBeSetOnVSSubmissions">
+        <source>"MSB4264: Invalid $(SolutionPath) property: {0}"</source>
+        <target state="new">"MSB4264: Invalid $(SolutionPath) property: {0}"</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="StaticGraphAcceptsSingleSolutionEntryPoint">
+        <source>MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</source>
+        <target state="new">MSB4261: Multiple entry points with solutions detected: {0}. If static graph is loaded from a solution, that that solution must be the only entry point.</target>
+        <note>
+      LOCALIZATION: {0} is a semicolon delimited list of files
+    </note>
+      </trans-unit>
+      <trans-unit id="StaticGraphConstructionMetrics">
+        <source>Static graph loaded in {0} seconds: {1} nodes, {2} edges</source>
+        <target state="new">Static graph loaded in {0} seconds: {1} nodes, {2} edges</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="StaticGraphDoesNotSupportSlnReferences">
+        <source>MSB4263: Project "{0}" has a reference to solution file "{1}". Referencing solutions is not supported in static graph.
+    </source>
+        <target state="new">MSB4263: Project "{0}" has a reference to solution file "{1}". Referencing solutions is not supported in static graph.
+    </target>
+        <note>
+      LOCALIZATION: {0} and {1} are file paths
+    </note>
+      </trans-unit>
+      <trans-unit id="StaticGraphSolutionLoaderEncounteredSolutionWarningsAndErrors">
+        <source>MSB4262: Solution file "{0}" contains the following warnings and errors:
+           Warnings: {1}
+           Errors: {2}
+    </source>
+        <target state="new">MSB4262: Solution file "{0}" contains the following warnings and errors:
+           Warnings: {1}
+           Errors: {2}
+    </target>
+        <note>
+      LOCALIZATION: {0} is a file, {1} and {2} are semicolon delimited lists of messages
+    </note>
+      </trans-unit>
+      <trans-unit id="TaskAcquiredCores">
+        <source>Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</source>
+        <target state="new">Task "{0}" requested {1} cores, acquired {2} cores, and now holds {3} cores total.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskReleasedCores">
+        <source>Task "{0}" released {1} cores and now holds {2} cores total.</source>
+        <target state="new">Task "{0}" released {1} cores and now holds {2} cores total.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskReleasedCoresWarning">
+        <source>Task "{0}" asked to release {1} cores while holding only {2} and now holds {3} cores total.</source>
+        <target state="new">Task "{0}" asked to release {1} cores while holding only {2} and now holds {3} cores total.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskReturnedFalseButDidNotLogError">
+        <source>MSB4181: The "{0}" task returned false but did not log an error.</source>
+        <target state="new">MSB4181: The "{0}" task returned false but did not log an error.</target>
+        <note>{StrBegin="MSB4181: "}</note>
+      </trans-unit>
+      <trans-unit id="UndeclaredMSBuildTasksNotAllowedInIsolatedGraphBuilds">
+        <source>MSB4254: The MSBuild task is building project(s) "{0}" which are not specified in the ProjectReference item. In isolated builds this probably means that the references are not explicitly specified as a ProjectReference item in "{1}"</source>
+        <target state="new">MSB4254: The MSBuild task is building project(s) "{0}" which are not specified in the ProjectReference item. In isolated builds this probably means that the references are not explicitly specified as a ProjectReference item in "{1}"</target>
+        <note>
+      {StrBegin="MSB4254:"}
+      LOCALIZATION: Do not localize the following words: ProjectReference, MSBuild, task.
+    </note>
+      </trans-unit>
+      <trans-unit id="UninitializedPropertyRead">
+        <source>Read uninitialized property "{0}"</source>
+        <target state="new">Read uninitialized property "{0}"</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="UsingInputCaches">
+        <source>Using input build results caches: {0}</source>
+        <target state="new">Using input build results caches: {0}</target>
+        <note>
+      LOCALIZATION: {0} is a list of semicolon separated file paths
+    </note>
+      </trans-unit>
+      <trans-unit id="WaitingForEndOfBuild">
+        <source>The operation cannot be completed because EndBuild has already been called but existing submissions have not yet completed.</source>
+        <target state="new">The operation cannot be completed because EndBuild has already been called but existing submissions have not yet completed.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SubmissionAlreadyComplete">
+        <source>The operation cannot be completed because the submission has already been executed.</source>
+        <target state="new">The operation cannot be completed because the submission has already been executed.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ShouldNotDisposeWhenBuildManagerActive">
+        <source>Cannot dispose the build manager because it is not idle.</source>
+        <target state="new">Cannot dispose the build manager because it is not idle.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildAbortedWithMessage">
+        <source>MSB4197: Build was canceled. {0}</source>
+        <target state="new">MSB4197: Build was canceled. {0}</target>
+        <note>{StrBegin="MSB4197: "} Error when the build stops suddenly for some reason. For example, because a child node died.</note>
+      </trans-unit>
+      <trans-unit id="BuildFinishedFailure">
+        <source>Build FAILED.</source>
+        <target state="new">Build FAILED.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildFinishedSuccess">
+        <source>Build succeeded.</source>
+        <target state="new">Build succeeded.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildStartedWithTime">
+        <source>Build started {0}.</source>
+        <target state="new">Build started {0}.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildTargetCompletely">
+        <source>Building target "{0}" completely.</source>
+        <target state="new">Building target "{0}" completely.</target>
+        <note>{0} is the name of the target.</note>
+      </trans-unit>
+      <trans-unit id="BuildTargetCompletelyNoInputsSpecified">
+        <source>No input files were specified.</source>
+        <target state="new">No input files were specified.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildTargetCompletelyInputNewer">
+        <source>Input file "{0}" is newer than output file "{1}".</source>
+        <target state="new">Input file "{0}" is newer than output file "{1}".</target>
+        <note>{0} and {1} are filenames on disk.</note>
+      </trans-unit>
+      <trans-unit id="BuildTargetCompletelyOutputDoesntExist">
+        <source>Output file "{0}" does not exist.</source>
+        <target state="new">Output file "{0}" does not exist.</target>
+        <note>{0} is a filename on disk.</note>
+      </trans-unit>
+      <trans-unit id="BuildTargetCompletelyInputDoesntExist">
+        <source>Input file "{0}" does not exist.</source>
+        <target state="new">Input file "{0}" does not exist.</target>
+        <note>{0} is a filename on disk.</note>
+      </trans-unit>
+      <trans-unit id="BuildTargetPartially">
+        <source>Building target "{0}" partially, because some output files are out of date with respect to their input files.</source>
+        <target state="new">Building target "{0}" partially, because some output files are out of date with respect to their input files.</target>
+        <note>{0} is the name of the target.</note>
+      </trans-unit>
+      <trans-unit id="BuildTargetPartiallyInputNewer">
+        <source>[{0}: Input={1}, Output={2}] Input file is newer than output file.</source>
+        <target state="new">[{0}: Input={1}, Output={2}] Input file is newer than output file.</target>
+        <note>{0} is the name of an MSBuild item.  {1} and {2} are filenames on disk.</note>
+      </trans-unit>
+      <trans-unit id="BuildTargetPartiallyOutputDoesntExist">
+        <source>[{0}: Input={1}, Output={2}] Output file does not exist.</source>
+        <target state="new">[{0}: Input={1}, Output={2}] Output file does not exist.</target>
+        <note>{0} is the name of an MSBuild item.  {1} and {2} are filenames on disk.</note>
+      </trans-unit>
+      <trans-unit id="BuildTargetPartiallyInputDoesntExist">
+        <source>[{0}: Input={1}, Output={2}] Input file does not exist.</source>
+        <target state="new">[{0}: Input={1}, Output={2}] Input file does not exist.</target>
+        <note>{0} is the name of an MSBuild item.  {1} and {2} are filenames on disk.</note>
+      </trans-unit>
+      <trans-unit id="CannotAccessKnownAttributes">
+        <source>The attribute "{0}" is a known MSBuild attribute, and cannot be accessed using this method.</source>
+        <target state="new">The attribute "{0}" is a known MSBuild attribute, and cannot be accessed using this method.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CannotEvaluateItemMetadata">
+        <source>MSB4023: Cannot evaluate the item metadata "%({0})". {1}</source>
+        <target state="new">MSB4023: Cannot evaluate the item metadata "%({0})". {1}</target>
+        <note>{StrBegin="MSB4023: "}UE: This message is shown when the value of an item metadata cannot be computed for some reason e.g. trying to apply
+    %(RootDir) to an item-spec that's not a valid path, would result in this error.
+    LOCALIZATION: "{1}" is a localized message explaining the problem.</note>
+      </trans-unit>
+      <trans-unit id="CouldNotFindMSBuildExe">
+        <source>MSB4193: MSBuild.exe could not be launched as a child node as it could not be found at the location "{0}". If necessary, specify the correct location in the BuildParameters, or with the MSBUILD_EXE_PATH environment variable.</source>
+        <target state="new">MSB4193: MSBuild.exe could not be launched as a child node as it could not be found at the location "{0}". If necessary, specify the correct location in the BuildParameters, or with the MSBUILD_EXE_PATH environment variable.</target>
+        <note>{StrBegin="MSB4193: "}</note>
+      </trans-unit>
+      <trans-unit id="CouldNotConnectToMSBuildExe">
+        <source>MSB4218: Failed to successfully launch or connect to a child MSBuild.exe process. Verify that the MSBuild.exe "{0}" launches successfully, and that it is loading the same microsoft.build.dll that the launching process loaded. If the location seems incorrect, try specifying the correct location in the BuildParameters object, or with the MSBUILD_EXE_PATH environment variable.</source>
+        <target state="new">MSB4218: Failed to successfully launch or connect to a child MSBuild.exe process. Verify that the MSBuild.exe "{0}" launches successfully, and that it is loading the same microsoft.build.dll that the launching process loaded. If the location seems incorrect, try specifying the correct location in the BuildParameters object, or with the MSBUILD_EXE_PATH environment variable.</target>
+        <note>{StrBegin="MSB4218: "}</note>
+      </trans-unit>
+      <trans-unit id="CannotModifyReservedItem">
+        <source>MSB4117: The "{0}" item name is reserved, and cannot be used.</source>
+        <target state="new">MSB4117: The "{0}" item name is reserved, and cannot be used.</target>
+        <note>{StrBegin="MSB4117: "}UE: This message is shown when the user tries to redefine one of the reserved MSBuild items e.g. @(Choose)</note>
+      </trans-unit>
+      <trans-unit id="CannotModifyReservedItemMetadata">
+        <source>MSB4118: The "{0}" item metadata name is reserved, and cannot be used.</source>
+        <target state="new">MSB4118: The "{0}" item metadata name is reserved, and cannot be used.</target>
+        <note>{StrBegin="MSB4118: "}UE: This message is shown when the user tries to redefine one of the reserved MSBuild item metadata names e.g. %(FullPath). Only MSBuild can set those.</note>
+      </trans-unit>
+      <trans-unit id="CannotModifyReservedProperty">
+        <source>MSB4004: The "{0}" property is reserved, and cannot be modified.</source>
+        <target state="new">MSB4004: The "{0}" property is reserved, and cannot be modified.</target>
+        <note>{StrBegin="MSB4004: "}UE: This message is shown when the user tries to redefine one of the reserved MSBuild properties e.g. $(MSBuildProjectFile)</note>
+      </trans-unit>
+      <trans-unit id="CannotPassMultipleItemsIntoScalarParameter">
+        <source>MSB4094: "{0}" is an invalid value for the "{1}" parameter of the "{3}" task. Multiple items cannot be passed into a parameter of type "{2}".</source>
+        <target state="new">MSB4094: "{0}" is an invalid value for the "{1}" parameter of the "{3}" task. Multiple items cannot be passed into a parameter of type "{2}".</target>
+        <note>{StrBegin="MSB4094: "}
+            UE: This error is shown when a project tries to pass multiple items into a task parameter of type ITaskItem (singular).
+    </note>
+      </trans-unit>
+      <trans-unit id="CannotPassMultipleItemsIntoScalarFunction">
+        <source>MSB4115: The "{0}" function only accepts a scalar value, but its argument "{1}" evaluates to "{2}" which is not a scalar value.</source>
+        <target state="new">MSB4115: The "{0}" function only accepts a scalar value, but its argument "{1}" evaluates to "{2}" which is not a scalar value.</target>
+        <note>{StrBegin="MSB4115: "}
+        UE: This error is shown when a project tries to pass multiple items into a function in a conditional expression, that can only accept a scalar value (such as the "exists()" function).
+    </note>
+      </trans-unit>
+      <trans-unit id="CannotReferenceItemMetadataWithoutItemName">
+        <source>MSB4095: The item metadata %({0}) is being referenced without an item name.  Specify the item name by using %(itemname.{0}).</source>
+        <target state="new">MSB4095: The item metadata %({0}) is being referenced without an item name.  Specify the item name by using %(itemname.{0}).</target>
+        <note>{StrBegin="MSB4095: "}</note>
+      </trans-unit>
+      <trans-unit id="ChildElementsBelowRemoveNotAllowed">
+        <source>MSB4162: &lt;{0}&gt; is not valid. Child elements are not allowed below a item remove element.</source>
+        <target state="new">MSB4162: &lt;{0}&gt; is not valid. Child elements are not allowed below a item remove element.</target>
+        <note>{StrBegin="MSB4162: "}</note>
+      </trans-unit>
+      <trans-unit id="ChildExitedPrematurely">
+        <source>MSB4166: Child node "{0}" exited prematurely. Shutting down. Diagnostic information may be found in files in "{1}" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.{2}</source>
+        <target state="new">MSB4166: Child node "{0}" exited prematurely. Shutting down. Diagnostic information may be found in files in "{1}" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.{2}</target>
+        <note>{StrBegin="MSB4166: "} {2} is exception text if any</note>
+      </trans-unit>
+      <trans-unit id="ChooseMustContainWhen">
+        <source>MSB4085: A &lt;Choose&gt; must contain at least one &lt;When&gt;.</source>
+        <target state="new">MSB4085: A &lt;Choose&gt; must contain at least one &lt;When&gt;.</target>
+        <note>{StrBegin="MSB4085: "}</note>
+      </trans-unit>
+      <trans-unit id="ChooseOverflow">
+        <source>MSB4114: &lt;Choose&gt; elements cannot be nested more than {0} levels deep.</source>
+        <target state="new">MSB4114: &lt;Choose&gt; elements cannot be nested more than {0} levels deep.</target>
+        <note>{StrBegin="MSB4114: "}UE: This message appears if the project file contains unreasonably nested Choose elements.
+    LOCALIZATION: Do not localize "Choose" as it is an XML element name.</note>
+      </trans-unit>
+      <trans-unit id="ComparisonOnNonNumericExpression">
+        <source>MSB4086: A numeric comparison was attempted on "{1}" that evaluates to "{2}" instead of a number, in condition "{0}".</source>
+        <target state="new">MSB4086: A numeric comparison was attempted on "{1}" that evaluates to "{2}" instead of a number, in condition "{0}".</target>
+        <note>{StrBegin="MSB4086: "}</note>
+      </trans-unit>
+      <trans-unit id="ConditionMaybeEvaluatedIncorrectly">
+        <source>MSB4130: The condition "{0}" may have been evaluated incorrectly in an earlier version of MSBuild. Please verify that the order of the AND and OR clauses is written as intended. To avoid this warning, add parentheses to make the evaluation order explicit.</source>
+        <target state="new">MSB4130: The condition "{0}" may have been evaluated incorrectly in an earlier version of MSBuild. Please verify that the order of the AND and OR clauses is written as intended. To avoid this warning, add parentheses to make the evaluation order explicit.</target>
+        <note>{StrBegin="MSB4130: "}</note>
+      </trans-unit>
+      <trans-unit id="ConditionNotBoolean">
+        <source>MSB4087: Specified condition "{0}" does not evaluate to a boolean.</source>
+        <target state="new">MSB4087: Specified condition "{0}" does not evaluate to a boolean.</target>
+        <note>{StrBegin="MSB4087: "}</note>
+      </trans-unit>
+      <trans-unit id="ConditionNotBooleanDetail">
+        <source>MSB4113: Specified condition "{0}" evaluates to "{1}" instead of a boolean.</source>
+        <target state="new">MSB4113: Specified condition "{0}" evaluates to "{1}" instead of a boolean.</target>
+        <note>{StrBegin="MSB4113: "}</note>
+      </trans-unit>
+      <trans-unit id="ConfigFileReadError">
+        <source>MSB4136: Error reading the toolset information from the configuration file "{0}". {1}</source>
+        <target state="new">MSB4136: Error reading the toolset information from the configuration file "{0}". {1}</target>
+        <note>{StrBegin="MSB4136: "}</note>
+      </trans-unit>
+      <trans-unit id="ConflictingValuesOfMSBuildToolsPath">
+        <source>MSB4142: MSBuildToolsPath is not the same as MSBuildBinPath for the ToolsVersion "{0}" defined at "{1}". If both are present they must have the same value.</source>
+        <target state="new">MSB4142: MSBuildToolsPath is not the same as MSBuildBinPath for the ToolsVersion "{0}" defined at "{1}". If both are present they must have the same value.</target>
+        <note>{StrBegin="MSB4142: "}</note>
+      </trans-unit>
+      <trans-unit id="DefaultTasksFileFailure">
+        <source>MSB4009: The default tasks file could not be successfully loaded. {0}</source>
+        <target state="new">MSB4009: The default tasks file could not be successfully loaded. {0}</target>
+        <note>{StrBegin="MSB4009: "}UE: This message is shown when one of the default tasks file (*.tasks) located alongside the MSBuild binaries cannot
+    be opened/parsed. "{0}" contains a message explaining why. The filename itself is not part of the message but is provided
+    separately to loggers.
+    LOCALIZATION: "{0}" is a message from some FX method and is already localized.</note>
+      </trans-unit>
+      <trans-unit id="DefaultTasksFileLoadFailureWarning">
+        <source>MSB4010: The "{0}" files could not be successfully loaded from their expected location "{1}". Default tasks will not be available. {2}</source>
+        <target state="new">MSB4010: The "{0}" files could not be successfully loaded from their expected location "{1}". Default tasks will not be available. {2}</target>
+        <note>{StrBegin="MSB4010: "}UE: This message is shown when the default tasks files that are located alongside the MSBuild binaries cannot be
+    found, either because they don't exist, or because of lack of permissions. "{2}" contains a message explaining why.
+    LOCALIZATION: "{2}" is a message from some FX method and is already localized.</note>
+      </trans-unit>
+      <trans-unit id="ImportIntroducesCircularity">
+        <source>Importing the file "{0}" into the file "{1}" results in a circular dependency.</source>
+        <target state="new">Importing the file "{0}" into the file "{1}" results in a circular dependency.</target>
+        <note>
+       {0} is a file imported into the file "{1}" such that it results in a circular dependency. For e.g. if t1.targets imports
+       t2.targets and t2.targets tries to import t1.targets, then it results in a circular dependency.
+    </note>
+      </trans-unit>
+      <trans-unit id="SearchPathsForMSBuildExtensionsPath">
+        <source>Search paths being used for {0} are {1}</source>
+        <target state="new">Search paths being used for {0} are {1}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TryingExtensionsPath">
+        <source>Trying to import {0} using extensions path {1}</source>
+        <target state="new">Trying to import {0} using extensions path {1}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OverrideTasksFileFailure">
+        <source>MSB4194: The override tasks file could not be successfully loaded. {0}</source>
+        <target state="new">MSB4194: The override tasks file could not be successfully loaded. {0}</target>
+        <note>
+      {StrBegin="MSB4194: "}UE: This message is shown when one of the override tasks file (*.overridetasks) located alongside the MSBuild binaries cannot
+      be opened/parsed. "{0}" contains a message explaining why. The filename itself is not part of the message but is provided
+      separately to loggers.
+      LOCALIZATION: "{0}" is a message from some FX method and is already localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="OverrideTaskNotRootedPath">
+        <source>The override tasks path "{0}" must not be a relative path and must exist on disk. Default tasks will not be overridden.</source>
+        <target state="new">The override tasks path "{0}" must not be a relative path and must exist on disk. Default tasks will not be overridden.</target>
+        <note>
+        UE: This message is shown when the override tasks path in the registry or passed to the toolset is not a full path.
+    </note>
+      </trans-unit>
+      <trans-unit id="OverrideTaskProblemWithPath">
+        <source>A problem occurred loading the override tasks path "{0}". {1}</source>
+        <target state="new">A problem occurred loading the override tasks path "{0}". {1}</target>
+        <note>
+        UE: This message is shown when the override tasks path in the registry or passed to the toolset is not a full path.
+    </note>
+      </trans-unit>
+      <trans-unit id="OverrideTasksFileLoadFailureWarning">
+        <source>MSB4196: The "{0}" files could not be successfully loaded from their expected location "{1}". Default tasks will not be overridden. {2}</source>
+        <target state="new">MSB4196: The "{0}" files could not be successfully loaded from their expected location "{1}". Default tasks will not be overridden. {2}</target>
+        <note>
+      {StrBegin="MSB4196: "}UE: This message is shown when the override tasks files that are located alongside the MSBuild binaries cannot be
+      found, either because they don't exist, or because of lack of permissions. "{2}" contains a message explaining why.
+      LOCALIZATION: "{2}" is a message from some FX method and is already localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="TasksPropertyBagError">
+        <source>MSB4195: There was an error gathering properties for tasks file evaluation. {0}</source>
+        <target state="new">MSB4195: There was an error gathering properties for tasks file evaluation. {0}</target>
+        <note>
+      {StrBegin="MSB4195: "}UE: This message is shown when the gathering of properties for the evaluation of override and defaults tasks has an exception. "{0"} will be the exception message</note>
+      </trans-unit>
+      <trans-unit id="DefaultToolsVersionNotFound">
+        <source>MSB4133: A default tools version "{0}" was specified, but its definition could not be found.</source>
+        <target state="new">MSB4133: A default tools version "{0}" was specified, but its definition could not be found.</target>
+        <note>{StrBegin="MSB4133: "}</note>
+      </trans-unit>
+      <trans-unit id="DuplicateImport">
+        <source>MSB4011: "{0}" cannot be imported again. It was already imported at "{1}". This is most likely a build authoring error. This subsequent import will be ignored. {2}</source>
+        <target state="new">MSB4011: "{0}" cannot be imported again. It was already imported at "{1}". This is most likely a build authoring error. This subsequent import will be ignored. {2}</target>
+        <note>{StrBegin="MSB4011: "}</note>
+      </trans-unit>
+      <trans-unit id="UsedUninitializedProperty">
+        <source>MSB4211: The property "{0}" is being set to a value for the first time, but it was already consumed at "{1}".</source>
+        <target state="new">MSB4211: The property "{0}" is being set to a value for the first time, but it was already consumed at "{1}".</target>
+        <note>{StrBegin="MSB4211: "}</note>
+      </trans-unit>
+      <trans-unit id="SelfImport">
+        <source>MSB4210: "{0}" is attempting to import itself, directly or indirectly. This is most likely a build authoring error. The import will be ignored.</source>
+        <target state="new">MSB4210: "{0}" is attempting to import itself, directly or indirectly. This is most likely a build authoring error. The import will be ignored.</target>
+        <note>{StrBegin="MSB4210: "}</note>
+      </trans-unit>
+      <trans-unit id="DuplicateProjectExtensions">
+        <source>MSB4079: The &lt;ProjectExtensions&gt; element occurs more than once.</source>
+        <target state="new">MSB4079: The &lt;ProjectExtensions&gt; element occurs more than once.</target>
+        <note>{StrBegin="MSB4079: "}</note>
+      </trans-unit>
+      <trans-unit id="EmbeddedItemVectorCannotBeItemized">
+        <source>MSB4012: The expression "{0}" cannot be used in this context. Item lists cannot be concatenated with other strings where an item list is expected. Use a semicolon to separate multiple item lists.</source>
+        <target state="new">MSB4012: The expression "{0}" cannot be used in this context. Item lists cannot be concatenated with other strings where an item list is expected. Use a semicolon to separate multiple item lists.</target>
+        <note>{StrBegin="MSB4012: "}UE: This message is shown when the user does not properly specify an item list when an item list is expected
+    e.g. "badprefix@(foo)badsuffix" instead of "prefix; @(foo); suffix"</note>
+      </trans-unit>
+      <trans-unit id="EndOfInputTokenName">
+        <source>end of input</source>
+        <target state="new">end of input</target>
+        <note>This is the name of the "EndOfInput" token. It is displayed in quotes as the
+    unexpected char or token when the end of a conditional was unexpectedly reached.</note>
+      </trans-unit>
+      <trans-unit id="ErrorConvertedIntoWarning">
+        <source>The previous error was converted to a warning because the task was called with ContinueOnError=true.</source>
+        <target state="new">The previous error was converted to a warning because the task was called with ContinueOnError=true.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ErrorCount">
+        <source>{0} Error(s)</source>
+        <target state="new">{0} Error(s)</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ErrorCreatingToolset">
+        <source>MSB4159: Error creating the toolset "{0}". {1}</source>
+        <target state="new">MSB4159: Error creating the toolset "{0}". {1}</target>
+        <note>{StrBegin="MSB4159: "}</note>
+      </trans-unit>
+      <trans-unit id="ErrorEvaluatingToolsetPropertyExpression">
+        <source>MSB4146: Cannot evaluate the property expression "{0}" found at "{1}". {2}</source>
+        <target state="new">MSB4146: Cannot evaluate the property expression "{0}" found at "{1}". {2}</target>
+        <note>{StrBegin="MSB4146: "}</note>
+      </trans-unit>
+      <trans-unit id="ErrorWarningMessageNotSupported">
+        <source>The &lt;{0}&gt; tag is no longer supported as a child of the &lt;Project&gt; element. Place this tag within a target, and add the name of the target to the "InitialTargets" attribute of the &lt;Project&gt; element.</source>
+        <target state="new">The &lt;{0}&gt; tag is no longer supported as a child of the &lt;Project&gt; element. Place this tag within a target, and add the name of the target to the "InitialTargets" attribute of the &lt;Project&gt; element.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="EvaluationStarted">
+        <source>Evaluation started ("{0}")</source>
+        <target state="new">Evaluation started ("{0}")</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="EvaluationFinished">
+        <source>Evaluation finished ("{0}")</source>
+        <target state="new">Evaluation finished ("{0}")</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ExecutingTaskInTaskHost">
+        <source>Launching task "{0}" from assembly "{1}" in an external task host with a runtime of "{2}" and a process architecture of "{3}".</source>
+        <target state="new">Launching task "{0}" from assembly "{1}" in an external task host with a runtime of "{2}" and a process architecture of "{3}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ExpressionDoesNotEvaluateToBoolean">
+        <source>MSB4100: Expected "{0}" to evaluate to a boolean instead of "{1}", in condition "{2}".</source>
+        <target state="new">MSB4100: Expected "{0}" to evaluate to a boolean instead of "{1}", in condition "{2}".</target>
+        <note>{StrBegin="MSB4100: "}</note>
+      </trans-unit>
+      <trans-unit id="FailedToRetrieveTaskOutputs">
+        <source>MSB4028: The "{0}" task's outputs could not be retrieved from the "{1}" parameter. {2}</source>
+        <target state="new">MSB4028: The "{0}" task's outputs could not be retrieved from the "{1}" parameter. {2}</target>
+        <note>{StrBegin="MSB4028: "}</note>
+      </trans-unit>
+      <trans-unit id="FatalBuildError">
+        <source>MSB4014: The build stopped unexpectedly because of an internal failure.</source>
+        <target state="new">MSB4014: The build stopped unexpectedly because of an internal failure.</target>
+        <note>{StrBegin="MSB4014: "}UE: This message is shown when an unhandled exception terminates the build. The cause is most likely a programming
+    error in the build engine.</note>
+      </trans-unit>
+      <trans-unit id="FatalErrorDuringLoggerShutdown">
+        <source>MSB4015: The build stopped unexpectedly because the "{0}" logger failed unexpectedly during shutdown.</source>
+        <target state="new">MSB4015: The build stopped unexpectedly because the "{0}" logger failed unexpectedly during shutdown.</target>
+        <note>{StrBegin="MSB4015: "}UE: This message is used for a special exception that is thrown when a logger fails while shutting down (most likely
+    because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a special
+    exception to abort the build.</note>
+      </trans-unit>
+      <trans-unit id="FatalErrorWhileInitializingLogger">
+        <source>MSB4016: The build stopped unexpectedly because the "{0}" logger failed unexpectedly during initialization.</source>
+        <target state="new">MSB4016: The build stopped unexpectedly because the "{0}" logger failed unexpectedly during initialization.</target>
+        <note>{StrBegin="MSB4016: "}UE: This message is used for a special exception that is thrown when a logger fails while initializing itself (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
+      <trans-unit id="FatalErrorWhileLogging">
+        <source>MSB4017: The build stopped unexpectedly because of an unexpected logger failure.</source>
+        <target state="new">MSB4017: The build stopped unexpectedly because of an unexpected logger failure.</target>
+        <note>{StrBegin="MSB4017: "}UE: This message is used for a special exception that is thrown when a logger fails while logging an event (most
+    likely because of a programming error in the logger). When a logger dies, we cannot proceed with the build, and we throw a
+    special exception to abort the build.</note>
+      </trans-unit>
+      <trans-unit id="FatalTaskError">
+        <source>MSB4018: The "{0}" task failed unexpectedly.</source>
+        <target state="new">MSB4018: The "{0}" task failed unexpectedly.</target>
+        <note>{StrBegin="MSB4018: "}UE: This message is shown when a task terminates because of an unhandled exception. The cause is most likely a
+    programming error in the task; however, it is also possible that the unhandled exception originated in the engine, and was
+    surfaced through the task when the task called into the engine.</note>
+      </trans-unit>
+      <trans-unit id="FailedToReceiveTaskThreadStatus">
+        <source>MSB4187: Failed to receive a response from the task thread in the timeout period "{0}" ms. Shutting down.</source>
+        <target state="new">MSB4187: Failed to receive a response from the task thread in the timeout period "{0}" ms. Shutting down.</target>
+        <note>{StrBegin="MSB4187: "}</note>
+      </trans-unit>
+      <trans-unit id="IllFormedCondition">
+        <source>MSB4088: Condition "{0}" is improperly constructed.</source>
+        <target state="new">MSB4088: Condition "{0}" is improperly constructed.</target>
+        <note>{StrBegin="MSB4088: "}</note>
+      </trans-unit>
+      <trans-unit id="IllFormedEqualsInCondition">
+        <source>MSB4105: Found an unexpected character '{2}' at position {1} in condition "{0}". Did you intend to use "=="?</source>
+        <target state="new">MSB4105: Found an unexpected character '{2}' at position {1} in condition "{0}". Did you intend to use "=="?</target>
+        <note>{StrBegin="MSB4105: "}</note>
+      </trans-unit>
+      <trans-unit id="IllFormedItemListCloseParenthesisInCondition">
+        <source>MSB4106: Expected an item list at position {1} in condition "{0}". Did you forget the closing parenthesis?</source>
+        <target state="new">MSB4106: Expected an item list at position {1} in condition "{0}". Did you forget the closing parenthesis?</target>
+        <note>{StrBegin="MSB4106: "}</note>
+      </trans-unit>
+      <trans-unit id="IllFormedItemListOpenParenthesisInCondition">
+        <source>MSB4107: Expected an item list at position {1} in condition "{0}". Did you forget the opening parenthesis after the '@'? To use a literal '@', use '%40' instead.</source>
+        <target state="new">MSB4107: Expected an item list at position {1} in condition "{0}". Did you forget the opening parenthesis after the '@'? To use a literal '@', use '%40' instead.</target>
+        <note>{StrBegin="MSB4107: "}</note>
+      </trans-unit>
+      <trans-unit id="IllFormedItemListQuoteInCondition">
+        <source>MSB4108: Expected an item list at position {1} in condition "{0}". Did you forget to close a quote inside the item list expression?</source>
+        <target state="new">MSB4108: Expected an item list at position {1} in condition "{0}". Did you forget to close a quote inside the item list expression?</target>
+        <note>{StrBegin="MSB4108: "}</note>
+      </trans-unit>
+      <trans-unit id="IllFormedPropertyCloseParenthesisInCondition">
+        <source>MSB4109: Expected a property at position {1} in condition "{0}". Did you forget the closing parenthesis?</source>
+        <target state="new">MSB4109: Expected a property at position {1} in condition "{0}". Did you forget the closing parenthesis?</target>
+        <note>{StrBegin="MSB4109: "}</note>
+      </trans-unit>
+      <trans-unit id="IllFormedPropertyOpenParenthesisInCondition">
+        <source>MSB4110: Expected a property at position {1} in condition "{0}". Did you forget the opening parenthesis after the '$'? To use a literal '$', use '%24' instead.</source>
+        <target state="new">MSB4110: Expected a property at position {1} in condition "{0}". Did you forget the opening parenthesis after the '$'? To use a literal '$', use '%24' instead.</target>
+        <note>{StrBegin="MSB4110: "}</note>
+      </trans-unit>
+      <trans-unit id="IllFormedQuotedStringInCondition">
+        <source>MSB4101: Expected a closing quote after position {1} in condition "{0}".</source>
+        <target state="new">MSB4101: Expected a closing quote after position {1} in condition "{0}".</target>
+        <note>{StrBegin="MSB4101: "}</note>
+      </trans-unit>
+      <trans-unit id="ImportedProjectNotFound">
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
+        <target state="new">MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</target>
+        <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
+        <source>MSB4226: The imported project "{0}" was not found. Also, tried to find "{1}" in the fallback search path(s) for {2} - {3} . These search paths are defined in "{4}". Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk in one of the search paths.</source>
+        <target state="new">MSB4226: The imported project "{0}" was not found. Also, tried to find "{1}" in the fallback search path(s) for {2} - {3} . These search paths are defined in "{4}". Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk in one of the search paths.</target>
+        <note>{StrBegin="MSB4226: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="ImportedProjectFromExtensionsPathNotFound">
+        <source>MSB4226: The imported project "{0}" was not found. Also, tried to find "{1}" in the fallback search path(s) for {2} - {3} . Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk in one of the search paths.</source>
+        <target state="new">MSB4226: The imported project "{0}" was not found. Also, tried to find "{1}" in the fallback search path(s) for {2} - {3} . Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk in one of the search paths.</target>
+        <note>{StrBegin="MSB4226: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="IncorrectNumberOfFunctionArguments">
+        <source>MSB4089: Incorrect number of arguments to function in condition "{0}". Found {1} argument(s) when expecting {2}.</source>
+        <target state="new">MSB4089: Incorrect number of arguments to function in condition "{0}". Found {1} argument(s) when expecting {2}.</target>
+        <note>{StrBegin="MSB4089: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidAttributeValue">
+        <source>MSB4020: The value "{0}" of the "{1}" attribute in element &lt;{2}&gt; is invalid.</source>
+        <target state="new">MSB4020: The value "{0}" of the "{1}" attribute in element &lt;{2}&gt; is invalid.</target>
+        <note>{StrBegin="MSB4020: "}UE: This is a generic message that is displayed when we find a project element with an incorrect value for one of its
+    attributes e.g. &lt;Import Project=""&gt; -- the value of Project should not be an empty string.</note>
+      </trans-unit>
+      <trans-unit id="InvalidAttributeExclusive">
+        <source>MSB4111: At most one of the include, remove, and update attributes may be specified for an item element.</source>
+        <target state="new">MSB4111: At most one of the include, remove, and update attributes may be specified for an item element.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="InvalidAttributeValueWithException">
+        <source>MSB4102: The value "{0}" of the "{1}" attribute in element &lt;{2}&gt; is invalid. {3}</source>
+        <target state="new">MSB4102: The value "{0}" of the "{1}" attribute in element &lt;{2}&gt; is invalid. {3}</target>
+        <note>{StrBegin="MSB4102: "}UE: This is a generic message that is displayed when we find a project element with an incorrect value for one of its
+        attributes. At the end of the message we show the exception text we got trying to use the value.</note>
+      </trans-unit>
+      <trans-unit id="InvalidBinaryLoggerParameters">
+        <source>MSB4234: Invalid binary logger parameter(s): "{0}". Expected: ProjectImports={{None,Embed,ZipFile}} and/or [LogFile=]filePath.binlog (the log file name or path, must have the ".binlog" extension).</source>
+        <target state="new">MSB4234: Invalid binary logger parameter(s): "{0}". Expected: ProjectImports={{None,Embed,ZipFile}} and/or [LogFile=]filePath.binlog (the log file name or path, must have the ".binlog" extension).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="InvalidContinueOnErrorAttribute">
+        <source>MSB4021: The "ContinueOnError" attribute of the "{0}" task is not valid. {1}</source>
+        <target state="new">MSB4021: The "ContinueOnError" attribute of the "{0}" task is not valid. {1}</target>
+        <note>{StrBegin="MSB4021: "}LOCALIZATION: "ContinueOnError" should not be localized. "{1}" is a message from another exception explaining the problem.</note>
+      </trans-unit>
+      <trans-unit id="InvalidEvaluatedAttributeValue">
+        <source>MSB4022: The result "{0}" of evaluating the value "{1}" of the "{2}" attribute in element &lt;{3}&gt; is not valid.</source>
+        <target state="new">MSB4022: The result "{0}" of evaluating the value "{1}" of the "{2}" attribute in element &lt;{3}&gt; is not valid.</target>
+        <note>{StrBegin="MSB4022: "}UE: This message is shown when the engine is checking the correctness of the value (after evaluating embedded
+    properties/items) assigned to an XML attribute of an XML element in the project file.</note>
+      </trans-unit>
+      <trans-unit id="InvalidFileLoggerFile">
+        <source>MSB4104: Failed to write to log file "{0}". {1}</source>
+        <target state="new">MSB4104: Failed to write to log file "{0}". {1}</target>
+        <note>{StrBegin="MSB4104: "}UE: This is shown when the File Logger can't create or write to the file it was instructed to log to.</note>
+      </trans-unit>
+      <trans-unit id="InvalidImportedProjectFile">
+        <source>MSB4024: The imported project file "{0}" could not be loaded. {1}</source>
+        <target state="new">MSB4024: The imported project file "{0}" could not be loaded. {1}</target>
+        <note>{StrBegin="MSB4024: "}UE: This message is shown when an imported project file cannot be loaded because of incorrect XML. The project
+    filename is not part of the message because it is provided separately to loggers.
+    LOCALIZATION: {0} is a localized message from the CLR/FX explaining why the project is invalid.</note>
+      </trans-unit>
+      <trans-unit id="InvalidPropertyNameInToolset">
+        <source>MSB4147: The property "{0}" at "{1}" is invalid. {2}</source>
+        <target state="new">MSB4147: The property "{0}" at "{1}" is invalid. {2}</target>
+        <note>{StrBegin="MSB4147: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidProperty">
+        <source>MSB4177: Invalid property. {0}</source>
+        <target state="new">MSB4177: Invalid property. {0}</target>
+        <note>{StrBegin="MSB4177: "}
+      UE: {0} is a localized message indicating what the problem was.</note>
+      </trans-unit>
+      <trans-unit id="InvalidRegistryPropertyExpression">
+        <source>MSB4143: The registry expression "{0}" cannot be evaluated. {1}</source>
+        <target state="new">MSB4143: The registry expression "{0}" cannot be evaluated. {1}</target>
+        <note>{StrBegin="MSB4143: "}
+      UE: This message is shown when the user attempts to provide an expression like "$(Registry:HKEY_LOCAL_MACHINE\Software\Vendor\Tools@TaskLocation)"
+      LOCALIZATION: "{0}" is the expression that was bad. "{1}" is a message from an FX exception that describes why the expression is bad.
+    </note>
+      </trans-unit>
+      <trans-unit id="InvalidFunctionPropertyExpression">
+        <source>MSB4184: The expression "{0}" cannot be evaluated. {1}</source>
+        <target state="new">MSB4184: The expression "{0}" cannot be evaluated. {1}</target>
+        <note>{StrBegin="MSB4184: "}
+      Double quotes as the expression will typically have single quotes in it.
+      UE: This message is shown when the user attempts to provide an expression like "$(SomeProperty.ToLower())" or "@(Foo-&gt;Bar())"
+      LOCALIZATION: "{0}" is the expression that was bad. "{1}" is a message from an FX exception that describes why the expression is bad.
+    </note>
+      </trans-unit>
+      <trans-unit id="InvalidFunctionPropertyExpressionDetailMismatchedQuote">
+        <source>The quotes were mismatched.</source>
+        <target state="new">The quotes were mismatched.</target>
+        <note>This is a potential suffix to "InvalidFunctionPropertyExpression" so it has no error code.</note>
+      </trans-unit>
+      <trans-unit id="InvalidFunctionPropertyExpressionDetailMismatchedParenthesis">
+        <source>The parentheses were mismatched.</source>
+        <target state="new">The parentheses were mismatched.</target>
+        <note>This is a potential suffix to "InvalidFunctionPropertyExpression" so it has no error code.</note>
+      </trans-unit>
+      <trans-unit id="InvalidFunctionPropertyExpressionDetailMismatchedSquareBrackets">
+        <source>The square brackets were mismatched.</source>
+        <target state="new">The square brackets were mismatched.</target>
+        <note>This is a potential suffix to "InvalidFunctionPropertyExpression" so it has no error code.</note>
+      </trans-unit>
+      <trans-unit id="InvalidFunctionMethodUnavailable">
+        <source>MSB4185: The function "{0}" on type "{1}" is not available for execution as an MSBuild property function.</source>
+        <target state="new">MSB4185: The function "{0}" on type "{1}" is not available for execution as an MSBuild property function.</target>
+        <note>
+      {StrBegin="MSB4185: "}
+      UE: This message is shown when the user attempts to provide an expression like "$([System.DateTime]::Now)", but the expression has not been enabled
+      LOCALIZATION: "{0}" is the static function name, "{1}" is the .NET Framework type name
+    </note>
+      </trans-unit>
+      <trans-unit id="InvalidFunctionTypeUnavailable">
+        <source>MSB4212: Invalid static method invocation syntax: "{0}". The type "{1}" is either not available for execution in an MSBuild property function or could not be found.</source>
+        <target state="new">MSB4212: Invalid static method invocation syntax: "{0}". The type "{1}" is either not available for execution in an MSBuild property function or could not be found.</target>
+        <note>
+      {StrBegin="MSB4212: "}
+      UE: This message is shown when the user attempts to provide an expression like "$([System.DateTime]::Now)", but the expression has not been enabled
+      LOCALIZATION: "{0}" is the function expression which is in error. "{1}" is the .NET Framework type name
+    </note>
+      </trans-unit>
+      <trans-unit id="InvalidFunctionStaticMethodSyntax">
+        <source>MSB4186: Invalid static method invocation syntax: "{0}". {1} Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(`a`, `b`)). Check that all parameters are defined, are of the correct type, and are specified in the right order.</source>
+        <target state="new">MSB4186: Invalid static method invocation syntax: "{0}". {1} Static method invocation should be of the form: $([FullTypeName]::Method()), e.g. $([System.IO.Path]::Combine(`a`, `b`)). Check that all parameters are defined, are of the correct type, and are specified in the right order.</target>
+        <note>{StrBegin="MSB4186: "}
+      UE: This message is shown when the user attempts to call a static method on a type, but has used the incorrect syntax
+      LOCALIZATION: "{0}" is the function expression which is in error. "{1}" is a message from an FX exception that describes why the expression is bad.
+    </note>
+      </trans-unit>
+      <trans-unit id="InvalidItemFunctionExpression">
+        <source>MSB4198: The expression "{0}" cannot be evaluated on item "{1}". {2}</source>
+        <target state="new">MSB4198: The expression "{0}" cannot be evaluated on item "{1}". {2}</target>
+        <note>
+      {StrBegin="MSB4198: "}
+      Double quotes as the expression will typically have single quotes in it.
+      UE: This message is shown when the user attempts to provide an expression like "@(SomeItem-&gt;DirectoryName())"
+      LOCALIZATION: "{0}" is the expression that was bad, "{1}" is the item or file that was being worked on. "{2}" is a message from an FX exception that describes why the expression is bad.
+    </note>
+      </trans-unit>
+      <trans-unit id="InvalidItemFunctionSyntax">
+        <source>MSB4199: Invalid transformation syntax "{0}". An item function was not found with that name and {1} parameters.</source>
+        <target state="new">MSB4199: Invalid transformation syntax "{0}". An item function was not found with that name and {1} parameters.</target>
+        <note>
+      {StrBegin="MSB4199: "}
+      UE: This message is shown when the user attempts to call a transformation on an item, but has used the incorrect syntax
+      LOCALIZATION: "{0}" is the function which is in error
+    </note>
+      </trans-unit>
+      <trans-unit id="UnknownItemFunction">
+        <source>MSB4200: Unknown item transformation function "{0}".</source>
+        <target state="new">MSB4200: Unknown item transformation function "{0}".</target>
+        <note>
+      {StrBegin="MSB4200: "}
+      UE: This message is shown when the user attempts to provide an expression like @(Item-&gt;SomeTransform()), but SomeTransform is unknown
+      LOCALIZATION: "{0}" is the function name
+    </note>
+      </trans-unit>
+      <trans-unit id="InvalidTaskAttributeError">
+        <source>MSB4026: The "{0}={1}" parameter for the "{2}" task is invalid.</source>
+        <target state="new">MSB4026: The "{0}={1}" parameter for the "{2}" task is invalid.</target>
+        <note>{StrBegin="MSB4026: "}UE: This message is displayed when a task has an invalid parameter that cannot be initialized.</note>
+      </trans-unit>
+      <trans-unit id="InvalidTaskItemsInTaskOutputs">
+        <source>MSB4027: The "{0}" task generated invalid items from the "{1}" output parameter. {2}</source>
+        <target state="new">MSB4027: The "{0}" task generated invalid items from the "{1}" output parameter. {2}</target>
+        <note>{StrBegin="MSB4027: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidTaskOutputSpecification">
+        <source>MSB4029: The "{0}" task has an invalid output specification. The "TaskParameter" attribute is required, and either the "ItemName" or "PropertyName" attribute must be specified (but not both).</source>
+        <target state="new">MSB4029: The "{0}" task has an invalid output specification. The "TaskParameter" attribute is required, and either the "ItemName" or "PropertyName" attribute must be specified (but not both).</target>
+        <note>{StrBegin="MSB4029: "}LOCALIZATION: "TaskParameter", "ItemName" and "PropertyName" should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="InvalidTaskParameterValueError">
+        <source>MSB4030: "{0}" is an invalid value for the "{1}" parameter of the "{3}" task. The "{1}" parameter is of type "{2}".</source>
+        <target state="new">MSB4030: "{0}" is an invalid value for the "{1}" parameter of the "{3}" task. The "{1}" parameter is of type "{2}".</target>
+        <note>{StrBegin="MSB4030: "}UE: This error is shown when a type mis-match occurs between the value assigned to task parameter in the project file
+    and the type of the .NET property that corresponds to the task parameter. For example, if an int task parameter called "Count"
+    is assigned the value "x", this error would be displayed: &lt;MyTask Count="x" /&gt;</note>
+      </trans-unit>
+      <trans-unit id="InvalidToolsetValueInConfigFileValue">
+        <source>MSB4137: Invalid value specified in the configuration file at "{0}". Property name or tools version name is an empty string.</source>
+        <target state="new">MSB4137: Invalid value specified in the configuration file at "{0}". Property name or tools version name is an empty string.</target>
+        <note>{StrBegin="MSB4137: "}</note>
+      </trans-unit>
+      <trans-unit id="ItemDefinitionGroupNotLegalInsideTarget">
+        <source>MSB4163: &lt;ItemDefinitionGroup&gt; is not allowed inside a target.</source>
+        <target state="new">MSB4163: &lt;ItemDefinitionGroup&gt; is not allowed inside a target.</target>
+        <note>{StrBegin="MSB4163: "}</note>
+      </trans-unit>
+      <trans-unit id="ItemDoesNotContainValueForUnqualifiedMetadata">
+        <source>MSB4096: The item "{0}" in item list "{1}" does not define a value for metadata "{2}".  In order to use this metadata, either qualify it by specifying %({1}.{2}), or ensure that all items in this list define a value for this metadata.</source>
+        <target state="new">MSB4096: The item "{0}" in item list "{1}" does not define a value for metadata "{2}".  In order to use this metadata, either qualify it by specifying %({1}.{2}), or ensure that all items in this list define a value for this metadata.</target>
+        <note>{StrBegin="MSB4096: "}</note>
+      </trans-unit>
+      <trans-unit id="ItemListNotAllowedInThisConditional">
+        <source>MSB4099: A reference to an item list at position {1} is not allowed in this condition "{0}".</source>
+        <target state="new">MSB4099: A reference to an item list at position {1} is not allowed in this condition "{0}".</target>
+        <note>{StrBegin="MSB4099: "}</note>
+      </trans-unit>
+      <trans-unit id="CustomMetadataNotAllowedInThisConditional">
+        <source>MSB4191: The reference to custom metadata "{2}" at position {1} is not allowed in this condition "{0}".</source>
+        <target state="new">MSB4191: The reference to custom metadata "{2}" at position {1} is not allowed in this condition "{0}".</target>
+        <note>{StrBegin="MSB4191: "}</note>
+      </trans-unit>
+      <trans-unit id="BuiltInMetadataNotAllowedInThisConditional">
+        <source>MSB4190: The reference to the built-in metadata "{2}" at position {1} is not allowed in this condition "{0}".</source>
+        <target state="new">MSB4190: The reference to the built-in metadata "{2}" at position {1} is not allowed in this condition "{0}".</target>
+        <note>{StrBegin="MSB4190: "}</note>
+      </trans-unit>
+      <trans-unit id="ItemSpecModifierCannotBeCustomMetadata">
+        <source>MSB4033: "{0}" is a reserved item metadata, and cannot be redefined as a custom metadata on the item.</source>
+        <target state="new">MSB4033: "{0}" is a reserved item metadata, and cannot be redefined as a custom metadata on the item.</target>
+        <note>{StrBegin="MSB4033: "}</note>
+      </trans-unit>
+      <trans-unit id="InternalLoggerExceptionOnlyThrownByEngine">
+        <source>An InternalLoggerException can only be thrown by the MSBuild engine. The public constructors of this class cannot be used to create an instance of the exception.</source>
+        <target state="new">An InternalLoggerException can only be thrown by the MSBuild engine. The public constructors of this class cannot be used to create an instance of the exception.</target>
+        <note>UE: This message is shown when a user tries to instantiate a special exception called InternalLoggerException through the OM --
+    only the engine is allowed to create and throw this exception.
+    LOCALIZATION: "InternalLoggerException" and "MSBuild" should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="ItemListHeader">
+        <source>Initial Items:</source>
+        <target state="new">Initial Items:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="EnvironmentHeader">
+        <source>Environment at start of build:</source>
+        <target state="new">Environment at start of build:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="MetadataDefinitionCannotContainItemVectorExpression">
+        <source>MSB4164: The value "{0}" of metadata "{1}" contains an item list expression. Item list expressions are not allowed on default metadata values.</source>
+        <target state="new">MSB4164: The value "{0}" of metadata "{1}" contains an item list expression. Item list expressions are not allowed on default metadata values.</target>
+        <note>{StrBegin="MSB4164: "}</note>
+      </trans-unit>
+      <trans-unit id="MissingRequiredAttribute">
+        <source>MSB4035: The required attribute "{0}" is empty or missing from the element &lt;{1}&gt;.</source>
+        <target state="new">MSB4035: The required attribute "{0}" is empty or missing from the element &lt;{1}&gt;.</target>
+        <note>{StrBegin="MSB4035: "}UE: This message is shown when a user leaves off a required attribute from a project element
+    e.g. &lt;UsingTask AssemblyName="foo"&gt; -- this is missing the "TaskName" attribute.</note>
+      </trans-unit>
+      <trans-unit id="IncludeRemoveOrUpdate">
+        <source>MSB4232: Items that are outside Target elements must have one of the following operations: Include, Update, or Remove.</source>
+        <target state="new">MSB4232: Items that are outside Target elements must have one of the following operations: Include, Update, or Remove.</target>
+        <note>{StrBegin="MSB4232: "} Target, Include, Update, and Remove should not be localized and their casing should not be changed</note>
+      </trans-unit>
+      <trans-unit id="MissingTaskError">
+        <source>MSB4036: The "{0}" task was not found. Check the following: 1.) The name of the task in the project file is the same as the name of the task class. 2.) The task class is "public" and implements the Microsoft.Build.Framework.ITask interface. 3.) The task is correctly declared with &lt;UsingTask&gt; in the project file, or in the *.tasks files located in the "{1}" directory.</source>
+        <target state="new">MSB4036: The "{0}" task was not found. Check the following: 1.) The name of the task in the project file is the same as the name of the task class. 2.) The task class is "public" and implements the Microsoft.Build.Framework.ITask interface. 3.) The task is correctly declared with &lt;UsingTask&gt; in the project file, or in the *.tasks files located in the "{1}" directory.</target>
+        <note>{StrBegin="MSB4036: "}LOCALIZATION: &lt;UsingTask&gt; and "*.tasks" should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="MSBuildToolsPathIsNotSpecified">
+        <source>MSB4141: MSBuildToolsPath is not specified for the ToolsVersion "{0}" defined at "{1}", or the value specified evaluates to the empty string.</source>
+        <target state="new">MSB4141: MSBuildToolsPath is not specified for the ToolsVersion "{0}" defined at "{1}", or the value specified evaluates to the empty string.</target>
+        <note>{StrBegin="MSB4141: "}</note>
+      </trans-unit>
+      <trans-unit id="MSBuildToolsPathNotSupportedInSubToolsets">
+        <source>MSB4222: ToolsVersion "{0}", defined at "{1}", contains sub-toolset "{2}" which sets MSBuildBinPath or MSBuildToolsPath. This is not supported in sub-toolsets.</source>
+        <target state="new">MSB4222: ToolsVersion "{0}", defined at "{1}", contains sub-toolset "{2}" which sets MSBuildBinPath or MSBuildToolsPath. This is not supported in sub-toolsets.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="MultipleDefinitionsForSameToolset">
+        <source>MSB4144: Multiple definitions were found for the toolset "{0}". </source>
+        <target state="new">MSB4144: Multiple definitions were found for the toolset "{0}". </target>
+        <note>{StrBegin="MSB4144: "}</note>
+      </trans-unit>
+      <trans-unit id="MultipleDefinitionsForSameExtensionsPathOS">
+        <source>MSB4225: Toolset contains multiple definitions of searchPaths for the OS "{0}" at "{1}".</source>
+        <target state="new">MSB4225: Toolset contains multiple definitions of searchPaths for the OS "{0}" at "{1}".</target>
+        <note>{StrBegin="MSB4225: "}</note>
+      </trans-unit>
+      <trans-unit id="MultipleDefinitionsForSameProperty">
+        <source>MSB4145: Multiple definitions were found for the property "{0}".</source>
+        <target state="new">MSB4145: Multiple definitions were found for the property "{0}".</target>
+        <note>{StrBegin="MSB4145: "}</note>
+      </trans-unit>
+      <trans-unit id="MultipleOtherwise">
+        <source>MSB4082: Choose has more than one &lt;Otherwise&gt; element.</source>
+        <target state="new">MSB4082: Choose has more than one &lt;Otherwise&gt; element.</target>
+        <note>{StrBegin="MSB4082: "}</note>
+      </trans-unit>
+      <trans-unit id="NodeMustBeLastUnderElement">
+        <source>MSB4038: The element &lt;{0}&gt; must be last under element &lt;{1}&gt;. Found element &lt;{2}&gt; instead.</source>
+        <target state="new">MSB4038: The element &lt;{0}&gt; must be last under element &lt;{1}&gt;. Found element &lt;{2}&gt; instead.</target>
+        <note>{StrBegin="MSB4038: "}</note>
+      </trans-unit>
+      <trans-unit id="NonStringDataInRegistry">
+        <source>MSB4138: Non-string data was specified at the registry location "{0}".</source>
+        <target state="new">MSB4138: Non-string data was specified at the registry location "{0}".</target>
+        <note>{StrBegin="MSB4138: "}</note>
+      </trans-unit>
+      <trans-unit id="NoRootProjectElement">
+        <source>MSB4039: No "{0}" element was found in the project file.</source>
+        <target state="new">MSB4039: No "{0}" element was found in the project file.</target>
+        <note>{StrBegin="MSB4039: "}</note>
+      </trans-unit>
+      <trans-unit id="NoTargetSpecified">
+        <source>MSB4040: There is no target in the project.</source>
+        <target state="new">MSB4040: There is no target in the project.</target>
+        <note>{StrBegin="MSB4040: "}</note>
+      </trans-unit>
+      <trans-unit id="NullLoggerNotAllowed">
+        <source>A null entry was found in the collection of loggers.</source>
+        <target state="new">A null entry was found in the collection of loggers.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="InvalidMaxNodeCount">
+        <source>MaxNodeCount may only be assigned a value greater than zero.</source>
+        <target state="new">MaxNodeCount may only be assigned a value greater than zero.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OverridingTarget">
+        <source>Overriding target "{0}" in project "{1}" with target "{2}" from project "{3}".</source>
+        <target state="new">Overriding target "{0}" in project "{1}" with target "{2}" from project "{3}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PerformanceLine">
+        <source>{0} ms  {1} {2} calls</source>
+        <target state="new">{0} ms  {1} {2} calls</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PerformanceReentrancyNote">
+        <source>(* = timing was not recorded because of reentrancy)</source>
+        <target state="new">(* = timing was not recorded because of reentrancy)</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectFileNotFound">
+        <source>The project file "{0}" was not found.</source>
+        <target state="new">The project file "{0}" was not found.</target>
+        <note>UE: This message is shown when the user calls into the OM to build a project that doesn't exist on disk.</note>
+      </trans-unit>
+      <trans-unit id="ProjectFinishedFailure">
+        <source>Done building project "{0}" -- FAILED.</source>
+        <target state="new">Done building project "{0}" -- FAILED.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectFinishedSuccess">
+        <source>Done building project "{0}".</source>
+        <target state="new">Done building project "{0}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectFinishedPrefixWithTargetNamesMultiProc">
+        <source>Done Building Project "{0}" ({1} target(s)).</source>
+        <target state="new">Done Building Project "{0}" ({1} target(s)).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectFinishedPrefixWithDefaultTargetsMultiProc">
+        <source>Done Building Project "{0}" (default targets).</source>
+        <target state="new">Done Building Project "{0}" (default targets).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectFinishedPrefixWithTargetNamesMultiProcFailed">
+        <source>Done Building Project "{0}" ({1} target(s)) -- FAILED.</source>
+        <target state="new">Done Building Project "{0}" ({1} target(s)) -- FAILED.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectFinishedPrefixWithDefaultTargetsMultiProcFailed">
+        <source>Done Building Project "{0}" (default targets) -- FAILED.</source>
+        <target state="new">Done Building Project "{0}" (default targets) -- FAILED.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectMustBeInMSBuildXmlNamespace">
+        <source>MSB4041: The default XML namespace of the project must be the MSBuild XML namespace or no namespace. If the project is authored in the MSBuild 2003 format, please add xmlns="{0}" to the &lt;Project&gt; element. If the project has been authored in the old 1.0 or 1.2 format, please convert it to MSBuild 2003 format.</source>
+        <target state="new">MSB4041: The default XML namespace of the project must be the MSBuild XML namespace or no namespace. If the project is authored in the MSBuild 2003 format, please add xmlns="{0}" to the &lt;Project&gt; element. If the project has been authored in the old 1.0 or 1.2 format, please convert it to MSBuild 2003 format.</target>
+        <note>{StrBegin="MSB4041: "}UE: This is a Beta 1 message only.
+      LOCALIZATION: &lt;Project&gt;, "MSBuild" and "xmlns" should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="ProjectPerformanceSummary">
+        <source>Project Performance Summary:</source>
+        <target state="new">Project Performance Summary:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStartedPrefixForNestedProjectWithTargetNames">
+        <source>Project "{0}" is building "{1}" ({2} target(s)):</source>
+        <target state="new">Project "{0}" is building "{1}" ({2} target(s)):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStartedPrefixForNestedProjectWithDefaultTargets">
+        <source>Project "{0}" is building "{1}" (default targets):</source>
+        <target state="new">Project "{0}" is building "{1}" (default targets):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStartedPrefixForTopLevelProjectWithTargetNames">
+        <source>Project "{0}" ({1} target(s)):</source>
+        <target state="new">Project "{0}" ({1} target(s)):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStartedPrefixForTopLevelProjectWithDefaultTargets">
+        <source>Project "{0}" (default targets):</source>
+        <target state="new">Project "{0}" (default targets):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectTaskNameEmpty">
+        <source>Task name cannot be empty.</source>
+        <target state="new">Task name cannot be empty.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectUpgradeNeeded">
+        <source>MSB4075: The project file "{0}" must be opened in the Visual Studio IDE and converted to the latest version before it can be built by MSBuild.</source>
+        <target state="new">MSB4075: The project file "{0}" must be opened in the Visual Studio IDE and converted to the latest version before it can be built by MSBuild.</target>
+        <note>{StrBegin="MSB4075: "}</note>
+      </trans-unit>
+      <trans-unit id="ProjectUpgradeNeededToVcxProj">
+        <source>MSB4192: The project file "{0}" is in the ".vcproj" file format, which MSBuild no longer supports. Please convert the project by opening it in the Visual Studio IDE or running the conversion tool, or use MSBuild 3.5 or earlier to build it.</source>
+        <target state="new">MSB4192: The project file "{0}" is in the ".vcproj" file format, which MSBuild no longer supports. Please convert the project by opening it in the Visual Studio IDE or running the conversion tool, or use MSBuild 3.5 or earlier to build it.</target>
+        <note>{StrBegin="MSB4192: "} LOC: ".vcproj" should not be localized</note>
+      </trans-unit>
+      <trans-unit id="PropertyListHeader">
+        <source>Initial Properties:</source>
+        <target state="new">Initial Properties:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PropertyNameInRegistryHasZeroLength">
+        <source>MSB4148: The name of a property stored under the registry key "{0}" has zero length.</source>
+        <target state="new">MSB4148: The name of a property stored under the registry key "{0}" has zero length.</target>
+        <note>{StrBegin="MSB4148: "}</note>
+      </trans-unit>
+      <trans-unit id="PropertyReassignment">
+        <source>Property reassignment: $({0})="{1}" (previous value: "{2}") at {3}</source>
+        <target state="new">Property reassignment: $({0})="{1}" (previous value: "{2}") at {3}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="QualifiedMetadataInTransformNotAllowed">
+        <source>MSB4043: The item metadata reference "{0}" is invalid because it is qualified with an item name. Item metadata referenced in transforms do not need to be qualified, because the item name is automatically deduced from the items being transformed. Change "{0}" to "%({1})".</source>
+        <target state="new">MSB4043: The item metadata reference "{0}" is invalid because it is qualified with an item name. Item metadata referenced in transforms do not need to be qualified, because the item name is automatically deduced from the items being transformed. Change "{0}" to "%({1})".</target>
+        <note>{StrBegin="MSB4043: "}UE: This message is shown when the user does something like this: @(foo-&gt;'%(foo.metadata)'). There is no need to specify
+    "foo.metadata", because "foo" is automatically deduced. In corollary, "bar.metadata" is not allowed either, where "bar" is a different
+    item list type.</note>
+      </trans-unit>
+      <trans-unit id="RegistryReadError">
+        <source>MSB4135: Error reading the toolset information from the registry location "{0}". {1}</source>
+        <target state="new">MSB4135: Error reading the toolset information from the registry location "{0}". {1}</target>
+        <note>{StrBegin="MSB4135: "}</note>
+      </trans-unit>
+      <trans-unit id="RequiredPropertyNotSetError">
+        <source>MSB4044: The "{0}" task was not given a value for the required parameter "{1}".</source>
+        <target state="new">MSB4044: The "{0}" task was not given a value for the required parameter "{1}".</target>
+        <note>{StrBegin="MSB4044: "}UE: This message is shown when a task parameter designated as "required" is not set in the project file.</note>
+      </trans-unit>
+      <trans-unit id="SecurityProjectBuildDisabled">
+        <source>MSB4112: The targets in this project have been disabled by the host and therefore cannot be built at this time. This may have been done for security reasons. To enable the targets, the host must set Project.BuildEnabled to "true".</source>
+        <target state="new">MSB4112: The targets in this project have been disabled by the host and therefore cannot be built at this time. This may have been done for security reasons. To enable the targets, the host must set Project.BuildEnabled to "true".</target>
+        <note>{StrBegin="MSB4112: "}</note>
+      </trans-unit>
+      <trans-unit id="SetAccessorNotAvailableOnTaskParameter">
+        <source>MSB4093: The "{0}" parameter of the "{1}" task cannot be written to because it does not have a "set" accessor.</source>
+        <target state="new">MSB4093: The "{0}" parameter of the "{1}" task cannot be written to because it does not have a "set" accessor.</target>
+        <note>{StrBegin="MSB4093: "}UE: This error is shown when a project tries to assign a value to a task parameter that does not have a "set"
+    accessor on the corresponding .NET property on the task class.</note>
+      </trans-unit>
+      <trans-unit id="SkipTargetBecauseNoInputs">
+        <source>Skipping target "{0}" because it has no inputs.</source>
+        <target state="new">Skipping target "{0}" because it has no inputs.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SkipTargetBecauseNoInputsDetail">
+        <source>Though the target has declared its inputs, the input specification only references empty properties and/or empty item lists.</source>
+        <target state="new">Though the target has declared its inputs, the input specification only references empty properties and/or empty item lists.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SkipTargetBecauseNoOutputs">
+        <source>Skipping target "{0}" because it has no outputs.</source>
+        <target state="new">Skipping target "{0}" because it has no outputs.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SkipTargetBecauseNoOutputsDetail">
+        <source>Though the target has declared its outputs, the output specification only references empty properties and/or empty item lists.</source>
+        <target state="new">Though the target has declared its outputs, the output specification only references empty properties and/or empty item lists.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SkipTargetBecauseOutputsUpToDate">
+        <source>Skipping target "{0}" because all output files are up-to-date with respect to the input files.</source>
+        <target state="new">Skipping target "{0}" because all output files are up-to-date with respect to the input files.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SkipTargetUpToDateInputs">
+        <source>Input files: {0}</source>
+        <target state="new">Input files: {0}</target>
+        <note>{0} is a semicolon-separated list of filenames.</note>
+      </trans-unit>
+      <trans-unit id="SkipTargetUpToDateOutputs">
+        <source>Output files: {0}</source>
+        <target state="new">Output files: {0}</target>
+        <note>{0} is a semicolon-separated list of filenames.</note>
+      </trans-unit>
+      <trans-unit id="AspNetCompiler.TargetingHigherFrameworksDefaultsTo40">
+        <source>{0}: Defaulting .NET Framework v{1} to the .NET Framework v4.0 version of aspnet_compiler.exe. To change the version of the tool used, please set the "ToolPath" parameter with the correct path to the tool.</source>
+        <target state="new">{0}: Defaulting .NET Framework v{1} to the .NET Framework v4.0 version of aspnet_compiler.exe. To change the version of the tool used, please set the "ToolPath" parameter with the correct path to the tool.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="AspNetCompiler.InvalidTargetFrameworkMonikerNotDotNET">
+        <source>MSB4203: {0}: Invalid TargetFrameworkMoniker {1}. The AspNetCompiler task only supports targeting the .NET Framework.</source>
+        <target state="new">MSB4203: {0}: Invalid TargetFrameworkMoniker {1}. The AspNetCompiler task only supports targeting the .NET Framework.</target>
+        <note>{StrBegin="MSB4203: "}</note>
+      </trans-unit>
+      <trans-unit id="AspNetCompiler.20NotInstalled">
+        <source>MSB4205: The website project in this solution is targeting the v2.0 runtime, but it is not installed.</source>
+        <target state="new">MSB4205: The website project in this solution is targeting the v2.0 runtime, but it is not installed.</target>
+        <note>{StrBegin="MSB4205: "}</note>
+      </trans-unit>
+      <trans-unit id="AspNetCompiler.InvalidTargetFrameworkMonikerFromException">
+        <source>MSB4204: {0}: Invalid TargetFrameworkMoniker {1}. {2}.</source>
+        <target state="new">MSB4204: {0}: Invalid TargetFrameworkMoniker {1}. {2}.</target>
+        <note>{StrBegin="MSB4204: "}</note>
+      </trans-unit>
+      <trans-unit id="OldWrapperGeneratedExplicitToolsVersion">
+        <source>Using the MSBuild v3.5 solution wrapper generator because the tools version was set to {0}.</source>
+        <target state="new">Using the MSBuild v3.5 solution wrapper generator because the tools version was set to {0}.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OldWrapperGeneratedOldSolutionVersion">
+        <source>Using the MSBuild v3.5 solution wrapper generator with a tools version of {0} because the solution file format was version {1} and no tools version was supplied.</source>
+        <target state="new">Using the MSBuild v3.5 solution wrapper generator with a tools version of {0} because the solution file format was version {1} and no tools version was supplied.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="SolutionBuildingSolutionConfiguration">
+        <source>Building solution configuration "{0}".</source>
+        <target state="new">Building solution configuration "{0}".</target>
+        <note>UE: This is not an error, so doesn't need an error code.</note>
+      </trans-unit>
+      <trans-unit id="SolutionCircularDependencyError">
+        <source>MSB4160: A circular dependency involving project "{0}" has been detected.</source>
+        <target state="new">MSB4160: A circular dependency involving project "{0}" has been detected.</target>
+        <note>{StrBegin="MSB4160: "}</note>
+      </trans-unit>
+      <trans-unit id="SolutionInvalidSolutionConfiguration">
+        <source>MSB4126: The specified solution configuration "{0}" is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform="Any CPU") or leave those properties blank to use the default solution configuration.</source>
+        <target state="new">MSB4126: The specified solution configuration "{0}" is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform="Any CPU") or leave those properties blank to use the default solution configuration.</target>
+        <note>{StrBegin="MSB4126: "}UE: The solution filename is provided separately to loggers.</note>
+      </trans-unit>
+      <trans-unit id="SolutionParseErrorReadingProject">
+        <source>MSB4046: Error reading project file "{0}": {1}</source>
+        <target state="new">MSB4046: Error reading project file "{0}": {1}</target>
+        <note>{StrBegin="MSB4046: "}</note>
+      </trans-unit>
+      <trans-unit id="SolutionParseInvalidProjectFileName">
+        <source>MSB4125: The project file name "{0}" is invalid. {1}</source>
+        <target state="new">MSB4125: The project file name "{0}" is invalid. {1}</target>
+        <note>{StrBegin="MSB4125: "}UE: The solution filename is provided separately to loggers.</note>
+      </trans-unit>
+      <trans-unit id="SolutionParseProjectDepNotFoundError">
+        <source>MSB4051: Project {0} is referencing a project with GUID {1}, but a project with this GUID was not found in the .SLN file.</source>
+        <target state="new">MSB4051: Project {0} is referencing a project with GUID {1}, but a project with this GUID was not found in the .SLN file.</target>
+        <note>{StrBegin="MSB4051: "}UE: The solution filename is provided separately to loggers.</note>
+      </trans-unit>
+      <trans-unit id="SolutionParseUnknownProjectType">
+        <source>MSB4078: The project file "{0}" is not supported by MSBuild and cannot be built.</source>
+        <target state="new">MSB4078: The project file "{0}" is not supported by MSBuild and cannot be built.</target>
+        <note>{StrBegin="MSB4078: "}</note>
+      </trans-unit>
+      <trans-unit id="SolutionParseUpgradeNeeded">
+        <source>MSB4054: The solution file must be opened in the Visual Studio IDE and converted to the latest version before it can be built by MSBuild.</source>
+        <target state="new">MSB4054: The solution file must be opened in the Visual Studio IDE and converted to the latest version before it can be built by MSBuild.</target>
+        <note>{StrBegin="MSB4054: "}UE: The solution filename is provided separately to loggers.</note>
+      </trans-unit>
+      <trans-unit id="SolutionProjectConfigurationMissing">
+        <source>MSB4121: The project configuration for project "{0}" was not specified in the solution file for the solution configuration "{1}".</source>
+        <target state="new">MSB4121: The project configuration for project "{0}" was not specified in the solution file for the solution configuration "{1}".</target>
+        <note>{StrBegin="MSB4121: "}</note>
+      </trans-unit>
+      <trans-unit id="SolutionProjectSkippedForBuilding">
+        <source>The project "{0}" is not selected for building in solution configuration "{1}".</source>
+        <target state="new">The project "{0}" is not selected for building in solution configuration "{1}".</target>
+        <note>
+      UE: This is not an error, so doesn't need an error code.
+    </note>
+      </trans-unit>
+      <trans-unit id="SolutionScanProjectDependenciesFailed">
+        <source>MSB4122: Scanning project dependencies for project "{0}" failed. {1}</source>
+        <target state="new">MSB4122: Scanning project dependencies for project "{0}" failed. {1}</target>
+        <note>{StrBegin="MSB4122: "}</note>
+      </trans-unit>
+      <trans-unit id="SolutionToolsVersionDoesNotSupportProjectToolsVersion">
+        <source>MSB4149: The tools version "{0}" of the solution does not support building projects with a different tools version.</source>
+        <target state="new">MSB4149: The tools version "{0}" of the solution does not support building projects with a different tools version.</target>
+        <note>{StrBegin="MSB4149: "}</note>
+      </trans-unit>
+      <trans-unit id="SolutionVenusProjectNoClean">
+        <source>Web projects do not support the "Clean" target.  Continuing with remaining projects ...</source>
+        <target state="new">Web projects do not support the "Clean" target.  Continuing with remaining projects ...</target>
+        <note>UE: This is not an error, so doesn't need an error code.
+    LOCALIZATION: Do not localize "Clean".</note>
+      </trans-unit>
+      <trans-unit id="SolutionVenusProjectNoPublish">
+        <source>Web projects do not support the "Publish" target.  Continuing with remaining projects ...</source>
+        <target state="new">Web projects do not support the "Publish" target.  Continuing with remaining projects ...</target>
+        <note>UE: This is not an error, so doesn't need an error code.
+    LOCALIZATION: Do not localize "Publish".</note>
+      </trans-unit>
+      <trans-unit id="SolutionVenusProjectSkipped">
+        <source>Skipping because the "$(AspNetConfiguration)" configuration is not supported for this web project.  You can use the AspNetConfiguration property to override the configuration used for building web projects, by adding /p:AspNetConfiguration=&lt;value&gt; to the command line. Currently web projects only support Debug and Release configurations.</source>
+        <target state="new">Skipping because the "$(AspNetConfiguration)" configuration is not supported for this web project.  You can use the AspNetConfiguration property to override the configuration used for building web projects, by adding /p:AspNetConfiguration=&lt;value&gt; to the command line. Currently web projects only support Debug and Release configurations.</target>
+        <note>
+    UE: This is not an error, so doesn't need an error code.
+    LOCALIZATION: Do NOT localize "AspNetConfiguration", "Debug", "Release".
+    </note>
+      </trans-unit>
+      <trans-unit id="TargetAlreadyCompleteFailure">
+        <source>Target "{0}" skipped. Previously built unsuccessfully.</source>
+        <target state="new">Target "{0}" skipped. Previously built unsuccessfully.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetAlreadyCompleteSuccess">
+        <source>Target "{0}" skipped. Previously built successfully.</source>
+        <target state="new">Target "{0}" skipped. Previously built successfully.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetConditionHasInvalidMetadataReference">
+        <source>MSB4116: The condition "{1}" on the "{0}" target has a reference to item metadata. References to item metadata are not allowed in target conditions unless they are part of an item transform.</source>
+        <target state="new">MSB4116: The condition "{1}" on the "{0}" target has a reference to item metadata. References to item metadata are not allowed in target conditions unless they are part of an item transform.</target>
+        <note>{StrBegin="MSB4116: "}</note>
+      </trans-unit>
+      <trans-unit id="TargetDoesNotExist">
+        <source>MSB4057: The target "{0}" does not exist in the project.</source>
+        <target state="new">MSB4057: The target "{0}" does not exist in the project.</target>
+        <note>{StrBegin="MSB4057: "}</note>
+      </trans-unit>
+      <trans-unit id="TargetDoesNotExistBeforeTargetMessage">
+        <source>The target "{0}" listed in a BeforeTargets attribute at "{1}" does not exist in the project, and will be ignored.</source>
+        <target state="new">The target "{0}" listed in a BeforeTargets attribute at "{1}" does not exist in the project, and will be ignored.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetDoesNotExistAfterTargetMessage">
+        <source>The target "{0}" listed in an AfterTargets attribute at "{1}" does not exist in the project, and will be ignored.</source>
+        <target state="new">The target "{0}" listed in an AfterTargets attribute at "{1}" does not exist in the project, and will be ignored.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetFinishedFailure">
+        <source>Done building target "{0}" in project "{1}" -- FAILED.</source>
+        <target state="new">Done building target "{0}" in project "{1}" -- FAILED.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetFinishedSuccess">
+        <source>Done building target "{0}" in project "{1}".</source>
+        <target state="new">Done building target "{0}" in project "{1}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetMessageWithId">
+        <source>{0}: (TargetId:{1})</source>
+        <target state="new">{0}: (TargetId:{1})</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetOutputItemsHeader">
+        <source>Target output items:</source>
+        <target state="new">Target output items:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetOutputItem">
+        <source>    {0}</source>
+        <target state="new">    {0}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetInputsSpecifiedWithoutOutputs">
+        <source>MSB4058: The "{0}" target is missing its output specification. If a target declares inputs, it must also declare outputs.</source>
+        <target state="new">MSB4058: The "{0}" target is missing its output specification. If a target declares inputs, it must also declare outputs.</target>
+        <note>{StrBegin="MSB4058: "}</note>
+      </trans-unit>
+      <trans-unit id="TargetPerformanceSummary">
+        <source>Target Performance Summary:</source>
+        <target state="new">Target Performance Summary:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetSkippedFalseCondition">
+        <source>Target "{0}" skipped, due to false condition; ({1}) was evaluated as ({2}).</source>
+        <target state="new">Target "{0}" skipped, due to false condition; ({1}) was evaluated as ({2}).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetSkippedWhenSkipNonexistentTargets">
+        <source>Target "{0}" skipped. The target does not exist in the project and SkipNonexistentTargets is set to true.</source>
+        <target state="new">Target "{0}" skipped. The target does not exist in the project and SkipNonexistentTargets is set to true.</target>
+        <note>LOCALIZATION: Do NOT localize "SkipNonexistentTargets" or "true".</note>
+      </trans-unit>
+      <trans-unit id="TargetStartedFileProject">
+        <source>Target "{0}" in file "{1}" from project "{2}":</source>
+        <target state="new">Target "{0}" in file "{1}" from project "{2}":</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedFileProjectEntry">
+        <source>Target "{0}" in file "{1}" from project "{2}" (entry point):</source>
+        <target state="new">Target "{0}" in file "{1}" from project "{2}" (entry point):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedFileProjectDepends">
+        <source>Target "{0}" in file "{1}" from project "{2}" (target "{3}" depends on it):</source>
+        <target state="new">Target "{0}" in file "{1}" from project "{2}" (target "{3}" depends on it):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedFileProjectBefore">
+        <source>Target "{0}" in file "{1}" from project "{2}" (designated to run before target "{3}"):</source>
+        <target state="new">Target "{0}" in file "{1}" from project "{2}" (designated to run before target "{3}"):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedFileProjectAfter">
+        <source>Target "{0}" in file "{1}" from project "{2}" (designated to run after target "{3}"):</source>
+        <target state="new">Target "{0}" in file "{1}" from project "{2}" (designated to run after target "{3}"):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStarted">
+        <source>Target "{0}" in project "{1}":</source>
+        <target state="new">Target "{0}" in project "{1}":</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedProjectEntry">
+        <source>Target "{0}" in project "{1}" (entry point):</source>
+        <target state="new">Target "{0}" in project "{1}" (entry point):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedProjectDepends">
+        <source>Target "{0}" in project "{1}" (target "{2}" depends on it):</source>
+        <target state="new">Target "{0}" in project "{1}" (target "{2}" depends on it):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedProjectBefore">
+        <source>Target "{0}" in project "{1}" (designated to run before target "{2}"):</source>
+        <target state="new">Target "{0}" in project "{1}" (designated to run before target "{2}"):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedProjectAfter">
+        <source>Target "{0}" in project "{1}" (designated to run after target "{2}"):</source>
+        <target state="new">Target "{0}" in project "{1}" (designated to run after target "{2}"):</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedPrefix">
+        <source>Target {0}:</source>
+        <target state="new">Target {0}:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedFromFile">
+        <source>Target "{0}" in file "{1}":</source>
+        <target state="new">Target "{0}" in file "{1}":</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedPrefixInProject">
+        <source>Target {0} from project "{1}":</source>
+        <target state="new">Target {0} from project "{1}":</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TargetStartedFromFileInProject">
+        <source>Target "{0}" in file "{1}" from project "{2}":</source>
+        <target state="new">Target "{0}" in file "{1}" from project "{2}":</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ItemGroupIncludeLogMessagePrefix">
+        <source>Added Item(s): </source>
+        <target state="new">Added Item(s): </target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ItemGroupRemoveLogMessage">
+        <source>Removed Item(s): </source>
+        <target state="new">Removed Item(s): </target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PropertyGroupLogMessage">
+        <source>Set Property: {0}={1}</source>
+        <target state="new">Set Property: {0}={1}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OutputItemParameterMessagePrefix">
+        <source>Output Item(s): </source>
+        <target state="new">Output Item(s): </target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OutputPropertyLogMessage">
+        <source>Output Property: {0}={1}</source>
+        <target state="new">Output Property: {0}={1}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskContinuedDueToContinueOnError">
+        <source>Build continuing because "{0}" on the task "{1}" is set to "{2}".</source>
+        <target state="new">Build continuing because "{0}" on the task "{1}" is set to "{2}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskDeclarationOrUsageError">
+        <source>MSB4060: The "{0}" task has been declared or used incorrectly, or failed during construction. Check the spelling of the task name and the assembly name.</source>
+        <target state="new">MSB4060: The "{0}" task has been declared or used incorrectly, or failed during construction. Check the spelling of the task name and the assembly name.</target>
+        <note>{StrBegin="MSB4060: "}</note>
+      </trans-unit>
+      <trans-unit id="TaskExistsButHasMismatchedIdentityError">
+        <source>MSB4214: The "{0}" task has been defined, but cannot be used due to the fact that the identity defined in the UsingTask declaration (Runtime="{1}", Architecture="{2}") does not match the identity specified by the task invocation (MSBuildRuntime="{3}", MSBuildArchitecture="{4}").</source>
+        <target state="new">MSB4214: The "{0}" task has been defined, but cannot be used due to the fact that the identity defined in the UsingTask declaration (Runtime="{1}", Architecture="{2}") does not match the identity specified by the task invocation (MSBuildRuntime="{3}", MSBuildArchitecture="{4}").</target>
+        <note>{StrBegin="MSB4214: "}LOCALIZATION: Runtime, Architecture, MSBuildRuntime, and MSBuildArchitecture should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="TaskFinishedFailure">
+        <source>Done executing task "{0}" -- FAILED.</source>
+        <target state="new">Done executing task "{0}" -- FAILED.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskFinishedSuccess">
+        <source>Done executing task "{0}".</source>
+        <target state="new">Done executing task "{0}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskMessageWithId">
+        <source>{0} (TaskId:{1})</source>
+        <target state="new">{0} (TaskId:{1})</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskFound">
+        <source>Using "{0}" task from assembly "{1}".</source>
+        <target state="new">Using "{0}" task from assembly "{1}".</target>
+        <note>UE: This informational message helps users determine which assemblies their tasks were loaded from.</note>
+      </trans-unit>
+      <trans-unit id="TaskFoundFromFactory">
+        <source>Using "{0}" task from the task factory "{1}".</source>
+        <target state="new">Using "{0}" task from the task factory "{1}".</target>
+        <note>UE: This informational message helps users determine which assemblies their tasks were loaded from.</note>
+      </trans-unit>
+      <trans-unit id="TaskNeedsSTA">
+        <source>Task "{0}" will be run in a single-threaded apartment thread.</source>
+        <target state="new">Task "{0}" will be run in a single-threaded apartment thread.</target>
+        <note>UE: This informational message helps users determine if their tasks are run in the STA or MTA.</note>
+      </trans-unit>
+      <trans-unit id="TaskInstantiationFailureError">
+        <source>MSB4061: The "{0}" task could not be instantiated from "{1}". {2}</source>
+        <target state="new">MSB4061: The "{0}" task could not be instantiated from "{1}". {2}</target>
+        <note>{StrBegin="MSB4061: "}LOCALIZATION: "{2}" is a localized message from a CLR/FX exception.</note>
+      </trans-unit>
+      <trans-unit id="TaskInstantiationFailureErrorInvalidCast">
+        <source>MSB4127: The "{0}" task could not be instantiated from the assembly "{1}". Please verify the task assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</source>
+        <target state="new">MSB4127: The "{0}" task could not be instantiated from the assembly "{1}". Please verify the task assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</target>
+        <note>{StrBegin="MSB4127: "}UE: This message is a specialized version of the TaskInstantiationFailureError message and can probably reuse some of its docs.
+      LOCALIZATION: "{2}" is a localized message from a CLR/FX exception. Also, Microsoft.Build.Framework should not be localized</note>
+      </trans-unit>
+      <trans-unit id="LoggerInstantiationFailureErrorInvalidCast">
+        <source>MSB4180: The "{0}" logger could not be instantiated from the assembly "{1}". Please verify the logger assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</source>
+        <target state="new">MSB4180: The "{0}" logger could not be instantiated from the assembly "{1}". Please verify the logger assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</target>
+        <note>
+      {StrBegin="MSB4180: "}
+      LOCALIZATION: "{2}" is a localized message from a CLR/FX exception. Also, Microsoft.Build.Framework should not be localized
+    </note>
+      </trans-unit>
+      <trans-unit id="LoggerCreationError">
+        <source>MSB1021: Cannot create an instance of the logger. {0}</source>
+        <target state="new">MSB1021: Cannot create an instance of the logger. {0}</target>
+        <note>{StrBegin="MSB1021: "}
+      UE: This error is shown when a logger cannot be loaded and instantiated from its assembly.
+      LOCALIZATION: The prefix "MSBxxxx: " should not be localized. {0} contains a message explaining why the
+      logger could not be created -- this message comes from the CLR/FX and is localized.</note>
+      </trans-unit>
+      <trans-unit id="LoggerNotFoundError">
+        <source>MSB1020: The logger was not found. Check the following: 1.) The logger name specified is the same as the name of the logger class. 2.) The logger class is "public" and implements the Microsoft.Build.Framework.ILogger interface. 3.) The path to the logger assembly is correct, or the logger can be loaded using only the assembly name provided.</source>
+        <target state="new">MSB1020: The logger was not found. Check the following: 1.) The logger name specified is the same as the name of the logger class. 2.) The logger class is "public" and implements the Microsoft.Build.Framework.ILogger interface. 3.) The path to the logger assembly is correct, or the logger can be loaded using only the assembly name provided.</target>
+        <note>
+      {StrBegin="MSB1020: "}UE: This message does not need in-line parameters because the exception takes care of displaying the invalid arg.
+      This error is shown when a user specifies an logger that does not exist e.g. "msbuild /logger:FooLoggerClass,FooAssembly". The
+      logger class must exist in the given assembly.
+      LOCALIZATION: The prefix "MSBxxxx: " should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="TaskFactoryInstanceCreationError">
+        <source>MSB4179: The task factory instance for the "{0}" task could not be instantiated from the task factory "{1}". {2}</source>
+        <target state="new">MSB4179: The task factory instance for the "{0}" task could not be instantiated from the task factory "{1}". {2}</target>
+        <note>{StrBegin="MSB4179: "}
+      LOCALIZATION: "{2}" is a localized message from a CLR/FX exception.</note>
+      </trans-unit>
+      <trans-unit id="TaskFactoryInstantiationFailureErrorInvalidCast">
+        <source>MSB4176: The "{0}" task factory could not be instantiated from the assembly "{1}". Please verify the task assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</source>
+        <target state="new">MSB4176: The "{0}" task factory could not be instantiated from the assembly "{1}". Please verify the task assembly has been built using the same version of the Microsoft.Build.Framework assembly as the one installed on your computer and that your host application is not missing a binding redirect for Microsoft.Build.Framework. {2}</target>
+        <note>{StrBegin="MSB4176: "}UE: This message is a specialized version of the TaskFactoryInstantiationFailureError message and can probably reuse some of its docs.
+      LOCALIZATION: "{2}" is a localized message from a CLR/FX exception. Also, Microsoft.Build.Framework should not be localized</note>
+      </trans-unit>
+      <trans-unit id="TaskFactoryWillIgnoreTaskFactoryParameters">
+        <source>MSB4219: The TaskFactory "{0}" does not implement ITaskFactory2. The attributes "{1}" and/or "{2}" on the UsingTask declaration for task "{3}" will be be ignored.</source>
+        <target state="new">MSB4219: The TaskFactory "{0}" does not implement ITaskFactory2. The attributes "{1}" and/or "{2}" on the UsingTask declaration for task "{3}" will be be ignored.</target>
+        <note>{StrBegin="MSB4219: "}
+      LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.
+    </note>
+      </trans-unit>
+      <trans-unit id="TaskFactoryTaskTypeIsNotSet">
+        <source>The task factory must return a value for the "TaskType" property.</source>
+        <target state="new">The task factory must return a value for the "TaskType" property.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskLoadFailure">
+        <source>MSB4062: The "{0}" task could not be loaded from the assembly {1}. {2} Confirm that the &lt;UsingTask&gt; declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.</source>
+        <target state="new">MSB4062: The "{0}" task could not be loaded from the assembly {1}. {2} Confirm that the &lt;UsingTask&gt; declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.</target>
+        <note>{StrBegin="MSB4062: "}UE: This message is shown when a task cannot be loaded from its assembly for various reasons e.g. corrupt assembly,
+    invalid task declaration, disk error, etc. "{2}" contains a message explaining what happened.
+    LOCALIZATION: "{2}" is a message from the CLR loader and is already localized. Also, &lt;UsingTask&gt; should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="TaskLoadFailureInvalidTaskHostFactoryParameter">
+        <source>MSB4215: The "{0}" task could not be loaded. "{1}" is an invalid value for the task host parameter "{2}". Valid values are:  "{3}", "{4}", "{5}", and "{6}"; not specifying a value is also valid.</source>
+        <target state="new">MSB4215: The "{0}" task could not be loaded. "{1}" is an invalid value for the task host parameter "{2}". Valid values are:  "{3}", "{4}", "{5}", and "{6}"; not specifying a value is also valid.</target>
+        <note>{StrBegin="MSB4215: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidTaskHostFactoryParameter">
+        <source>"{0}" is an invalid value for the task host parameter "{1}". Valid values are: "{2}", "{3}", "{4}", and "{5}"; not specifying a value is also valid.</source>
+        <target state="new">"{0}" is an invalid value for the task host parameter "{1}". Valid values are: "{2}", "{3}", "{4}", and "{5}"; not specifying a value is also valid.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskHostAcquireFailed">
+        <source>MSB4216: Could not run the "{0}" task because MSBuild could not create or connect to a task host with runtime "{1}" and architecture "{2}".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable "{3}" exists and can be run.</source>
+        <target state="new">MSB4216: Could not run the "{0}" task because MSBuild could not create or connect to a task host with runtime "{1}" and architecture "{2}".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable "{3}" exists and can be run.</target>
+        <note>{StrBegin="MSB4216: "}</note>
+      </trans-unit>
+      <trans-unit id="TaskHostNodeFailedToLaunch">
+        <source>MSB4221: Could not run the "{0}" task because MSBuild could not create or connect to a task host with runtime "{1}" and architecture "{2}".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable "{3}" exists and can be run. Error {4} {5}.</source>
+        <target state="new">MSB4221: Could not run the "{0}" task because MSBuild could not create or connect to a task host with runtime "{1}" and architecture "{2}".  Please ensure that (1) the requested runtime and/or architecture are available on the machine, and (2) that the required executable "{3}" exists and can be run. Error {4} {5}.</target>
+        <note>{StrBegin="MSB4221: "}</note>
+      </trans-unit>
+      <trans-unit id="TaskHostNodeFailedToLaunchErrorCodeNet35NotInstalled">
+        <source>A task requested launch of the .NET 3.5 version of the MSBuild task host, but .NET 3.5 is not installed on this machine so the task host could not be launched.  To fix this error, please either install .NET 3.5 or retarget your project.</source>
+        <target state="new">A task requested launch of the .NET 3.5 version of the MSBuild task host, but .NET 3.5 is not installed on this machine so the task host could not be launched.  To fix this error, please either install .NET 3.5 or retarget your project.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskHostExitedPrematurely">
+        <source>MSB4217: Task host node exited prematurely. Diagnostic information may be found in files in the temporary files directory named MSBuild_*.failure.txt. {0}</source>
+        <target state="new">MSB4217: Task host node exited prematurely. Diagnostic information may be found in files in the temporary files directory named MSBuild_*.failure.txt. {0}</target>
+        <note>{StrBegin="MSB4217: "}</note>
+      </trans-unit>
+      <trans-unit id="TaskParametersError">
+        <source>MSB4063: The "{0}" task could not be initialized with its input parameters. {1}</source>
+        <target state="new">MSB4063: The "{0}" task could not be initialized with its input parameters. {1}</target>
+        <note>{StrBegin="MSB4063: "}</note>
+      </trans-unit>
+      <trans-unit id="TaskParameterPrefix">
+        <source>Task Parameter:</source>
+        <target state="new">Task Parameter:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskPerformanceSummary">
+        <source>Task Performance Summary:</source>
+        <target state="new">Task Performance Summary:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectEvaluationPerformanceSummary">
+        <source>Project Evaluation Performance Summary:</source>
+        <target state="new">Project Evaluation Performance Summary:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskSkippedFalseCondition">
+        <source>Task "{0}" skipped, due to false condition; ({1}) was evaluated as ({2}).</source>
+        <target state="new">Task "{0}" skipped, due to false condition; ({1}) was evaluated as ({2}).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskStarted">
+        <source>Task "{0}"</source>
+        <target state="new">Task "{0}"</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TimeElapsed">
+        <source>Time Elapsed {0}</source>
+        <target state="new">Time Elapsed {0}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ToolsVersionInEffectForBuild">
+        <source>Building with tools version "{0}".</source>
+        <target state="new">Building with tools version "{0}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="UsingDifferentToolsVersionFromProjectFile">
+        <source>Project file contains ToolsVersion="{0}". This toolset may be unknown or missing, in which case you may be able to resolve this by installing the appropriate version of MSBuild, or the build may have been forced to a particular ToolsVersion for policy reasons. Treating the project as if it had ToolsVersion="{1}". For more information, please see http://go.microsoft.com/fwlink/?LinkId=293424.</source>
+        <target state="new">Project file contains ToolsVersion="{0}". This toolset may be unknown or missing, in which case you may be able to resolve this by installing the appropriate version of MSBuild, or the build may have been forced to a particular ToolsVersion for policy reasons. Treating the project as if it had ToolsVersion="{1}". For more information, please see http://go.microsoft.com/fwlink/?LinkId=293424.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="DeferredMessages">
+        <source>Deferred Messages</source>
+        <target state="new">Deferred Messages</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="UnexpectedCharacterInCondition">
+        <source>MSB4090: Found an unexpected character '{2}' at position {1} in condition "{0}".</source>
+        <target state="new">MSB4090: Found an unexpected character '{2}' at position {1} in condition "{0}".</target>
+        <note>{StrBegin="MSB4090: "}</note>
+      </trans-unit>
+      <trans-unit id="UndefinedFunctionCall">
+        <source>MSB4091: Found a call to an undefined function "{1}" in condition "{0}".</source>
+        <target state="new">MSB4091: Found a call to an undefined function "{1}" in condition "{0}".</target>
+        <note>{StrBegin="MSB4091: "}</note>
+      </trans-unit>
+      <trans-unit id="UnexpectedTaskAttribute">
+        <source>MSB4064: The "{0}" parameter is not supported by the "{1}" task loaded from assembly: {2} from the path: {3}. Verify that the parameter exists on the task, the &lt;UsingTask&gt; points to the correct assembly, and it is a settable public instance property.</source>
+        <target state="new">MSB4064: The "{0}" parameter is not supported by the "{1}" task loaded from assembly: {2} from the path: {3}. Verify that the parameter exists on the task, the &lt;UsingTask&gt; points to the correct assembly, and it is a settable public instance property.</target>
+        <note>{StrBegin="MSB4064: "}</note>
+      </trans-unit>
+      <trans-unit id="UnexpectedTaskOutputAttribute">
+        <source>MSB4131: The "{0}" parameter is not supported by the "{1}" task. Verify the parameter exists on the task, and it is a gettable public instance property.</source>
+        <target state="new">MSB4131: The "{0}" parameter is not supported by the "{1}" task. Verify the parameter exists on the task, and it is a gettable public instance property.</target>
+        <note>{StrBegin="MSB4131: "}</note>
+      </trans-unit>
+      <trans-unit id="UnexpectedTokenInCondition">
+        <source>MSB4092: An unexpected token "{1}" was found at character position {2} in condition "{0}".</source>
+        <target state="new">MSB4092: An unexpected token "{1}" was found at character position {2} in condition "{0}".</target>
+        <note>{StrBegin="MSB4092: "}</note>
+      </trans-unit>
+      <trans-unit id="UnmarkedOutputTaskParameter">
+        <source>MSB4065: The "{0}" parameter is not marked for output by the "{1}" task.</source>
+        <target state="new">MSB4065: The "{0}" parameter is not marked for output by the "{1}" task.</target>
+        <note>{StrBegin="MSB4065: "}</note>
+      </trans-unit>
+      <trans-unit id="UnrecognizedAttribute">
+        <source>MSB4066: The attribute "{0}" in element &lt;{1}&gt; is unrecognized.</source>
+        <target state="new">MSB4066: The attribute "{0}" in element &lt;{1}&gt; is unrecognized.</target>
+        <note>{StrBegin="MSB4066: "}</note>
+      </trans-unit>
+      <trans-unit id="UnrecognizedChildElement">
+        <source>MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</source>
+        <target state="new">MSB4067: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is unrecognized.</target>
+        <note>{StrBegin="MSB4067: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidChildElementDueToDuplication">
+        <source>MSB4173: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is invalid because a child element with that name already exists</source>
+        <target state="new">MSB4173: The element &lt;{0}&gt; beneath element &lt;{1}&gt; is invalid because a child element with that name already exists</target>
+        <note>{StrBegin="MSB4173: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidAttributeDueToDuplication">
+        <source>MSB4227: The attribute "{0}" on element &lt;{1}&gt; is invalid because an attribute with that name already exists</source>
+        <target state="new">MSB4227: The attribute "{0}" on element &lt;{1}&gt; is invalid because an attribute with that name already exists</target>
+        <note>{StrBegin="MSB4227: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidMetadataAsAttribute">
+        <source>MSB4228: The name "{0}" is not valid for metadata expressed as an attribute (on element &lt;{1}&gt;)</source>
+        <target state="new">MSB4228: The name "{0}" is not valid for metadata expressed as an attribute (on element &lt;{1}&gt;)</target>
+        <note>{StrBegin="MSB4228: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidSdkFormat">
+        <source>MSB4229: The value "{0}" is not valid for an Sdk specification. The attribute should be a semicolon-delimited list of Sdk-name/minimum-version pairs, separated by a forward slash.</source>
+        <target state="new">MSB4229: The value "{0}" is not valid for an Sdk specification. The attribute should be a semicolon-delimited list of Sdk-name/minimum-version pairs, separated by a forward slash.</target>
+        <note>{StrBegin="MSB4229: "}</note>
+      </trans-unit>
+      <trans-unit id="CouldNotResolveSdk">
+        <source>MSB4236: The SDK '{0}' specified could not be found.</source>
+        <target state="new">MSB4236: The SDK '{0}' specified could not be found.</target>
+        <note>{StrBegin="MSB4236: "}</note>
+      </trans-unit>
+      <trans-unit id="CouldNotLoadSdkResolver">
+        <source>MSB4237: The SDK resolver type "{0}" failed to load. {1}</source>
+        <target state="new">MSB4237: The SDK resolver type "{0}" failed to load. {1}</target>
+        <note>{StrBegin="MSB4237: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidSdkElementName">
+        <source>MSB4238: The name "{0}" is not a valid SDK name.</source>
+        <target state="new">MSB4238: The name "{0}" is not a valid SDK name.</target>
+        <note>{StrBegin="MSB4238: "}</note>
+      </trans-unit>
+      <trans-unit id="UnrecognizedParentElement">
+        <source>MSB4189: &lt;{1}&gt; is not a valid child of the &lt;{0}&gt; element.</source>
+        <target state="new">MSB4189: &lt;{1}&gt; is not a valid child of the &lt;{0}&gt; element.</target>
+        <note>{StrBegin="MSB4189: "}</note>
+      </trans-unit>
+      <trans-unit id="UnrecognizedElement">
+        <source>MSB4068: The element &lt;{0}&gt; is unrecognized, or not supported in this context.</source>
+        <target state="new">MSB4068: The element &lt;{0}&gt; is unrecognized, or not supported in this context.</target>
+        <note>{StrBegin="MSB4068: "}</note>
+      </trans-unit>
+      <trans-unit id="UnsupportedLogFileFormat">
+        <source>MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</source>
+        <target state="new">MSB4235: The log file format version is {0}, whereas this version of MSBuild only supports versions up to {1}.</target>
+        <note>{StrBegin="MSB4235: "}</note>
+      </trans-unit>
+      <trans-unit id="UnsupportedTaskParameterTypeError">
+        <source>MSB4069: The "{0}" type of the "{1}" parameter of the "{2}" task is not supported by MSBuild.</source>
+        <target state="new">MSB4069: The "{0}" type of the "{1}" parameter of the "{2}" task is not supported by MSBuild.</target>
+        <note>{StrBegin="MSB4069: "}LOCALIZATION: "MSBuild" should not be localized.</note>
+      </trans-unit>
+      <trans-unit id="UsingTaskAssemblySpecification">
+        <source>MSB4072: A &lt;{0}&gt; element must contain either the "{1}" attribute or the "{2}" attribute (but not both).</source>
+        <target state="new">MSB4072: A &lt;{0}&gt; element must contain either the "{1}" attribute or the "{2}" attribute (but not both).</target>
+        <note>{StrBegin="MSB4072: "}</note>
+      </trans-unit>
+      <trans-unit id="WarningCount">
+        <source>{0} Warning(s)</source>
+        <target state="new">{0} Warning(s)</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="WhenNotAllowedAfterOtherwise">
+        <source>MSB4084: A &lt;When&gt; element may not follow an &lt;Otherwise&gt; element in a &lt;Choose&gt;.</source>
+        <target state="new">MSB4084: A &lt;When&gt; element may not follow an &lt;Otherwise&gt; element in a &lt;Choose&gt;.</target>
+        <note>{StrBegin="MSB4084: "}</note>
+      </trans-unit>
+      <trans-unit id="MustCallInitializeBeforeApplyParameter">
+        <source>MSB4150: Must initialize the console logger using the initialize method before using ApplyParameter</source>
+        <target state="new">MSB4150: Must initialize the console logger using the initialize method before using ApplyParameter</target>
+        <note>{StrBegin="MSB4150: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidHostObjectOnOutOfProcProject">
+        <source>MSB4206: A non-null host object cannot be specified for a project which has an affinity set to out-of-process.</source>
+        <target state="new">MSB4206: A non-null host object cannot be specified for a project which has an affinity set to out-of-process.</target>
+        <note>{StrBegin="MSB4206: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidAffinityForProjectWithHostObject">
+        <source>MSB4207: Only an in-process affinity may be specified for projects which have registered host objects.</source>
+        <target state="new">MSB4207: Only an in-process affinity may be specified for projects which have registered host objects.</target>
+        <note>{StrBegin="MSB4207: "}</note>
+      </trans-unit>
+      <trans-unit id="ProjectInstanceConflictsWithAffinity">
+        <source>MSB4209: The specified project instance conflicts with the affinity specified in the HostServices.</source>
+        <target state="new">MSB4209: The specified project instance conflicts with the affinity specified in the HostServices.</target>
+        <note>{StrBegin="MSB4209: "}</note>
+      </trans-unit>
+      <trans-unit id="AffinityConflict">
+        <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
+        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <note>{StrBegin="MSB4213: "}</note>
+      </trans-unit>
+      <trans-unit id="UnableToCreateNode">
+        <source>MSB4223: A node of the required type {0} could not be created.</source>
+        <target state="new">MSB4223: A node of the required type {0} could not be created.</target>
+        <note>{StrBegin="MSB4223: "}</note>
+      </trans-unit>
+      <trans-unit id="KeepAndRemoveMetadataMutuallyExclusive">
+        <source>MSB4224: KeepMetadata and RemoveMetadata are mutually exclusive.</source>
+        <target state="new">MSB4224: KeepMetadata and RemoveMetadata are mutually exclusive.</target>
+        <note>{StrBegin="MSB4224: "}</note>
+      </trans-unit>
+      <trans-unit id="ProjectStackWithTargetNames">
+        <source>"{0}" ({1} target) ({2}) -&gt;</source>
+        <target state="new">"{0}" ({1} target) ({2}) -&gt;</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStackWithDefaultTargets">
+        <source>"{0}" (default target) ({1}) -&gt;</source>
+        <target state="new">"{0}" (default target) ({1}) -&gt;</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildEventContext">
+        <source>{0} {1,5}</source>
+        <target state="new">{0} {1,5}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStartedTopLevelProjectWithTargetNames">
+        <source>Project "{0}" on node {1} ({2} target(s)).</source>
+        <target state="new">Project "{0}" on node {1} ({2} target(s)).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStartedTopLevelProjectWithDefaultTargets">
+        <source>Project "{0}" on node {1} (default targets).</source>
+        <target state="new">Project "{0}" on node {1} (default targets).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStartedWithTargetsMultiProc">
+        <source>Project "{0}" ({1}) is building "{2}" ({3}) on node {4} ({5} target(s)).</source>
+        <target state="new">Project "{0}" ({1}) is building "{2}" ({3}) on node {4} ({5} target(s)).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectStartedWithDefaultTargetsMultiProc">
+        <source>Project "{0}" ({1}) is building "{2}" ({3}) on node {4} (default targets).</source>
+        <target state="new">Project "{0}" ({1}) is building "{2}" ({3}) on node {4} (default targets).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ErrorWarningInTarget">
+        <source>({0} target) -&gt; </source>
+        <target state="new">({0} target) -&gt; </target>
+        <note />
+      </trans-unit>
+      <trans-unit id="PropertyOutputOverridden">
+        <source>The property "{0}" with value "{1}" is being overridden by another batch. The property is now: "{2}"</source>
+        <target state="new">The property "{0}" with value "{1}" is being overridden by another batch. The property is now: "{2}"</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="WritingToOutputCache">
+        <source>Writing build results caches to: {0}</source>
+        <target state="new">Writing build results caches to: {0}</target>
+        <note>
+      LOCALIZATION: {0} is a file path
+    </note>
+      </trans-unit>
+      <trans-unit id="logfilePathNullOrEmpty">
+        <source>The log file path cannot be null or empty.</source>
+        <target state="new">The log file path cannot be null or empty.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="DefaultTargets">
+        <source>[default]</source>
+        <target state="new">[default]</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CouldNotFindFactory">
+        <source>MSB4174: The task factory "{0}" could not be found in the assembly "{1}".</source>
+        <target state="new">MSB4174: The task factory "{0}" could not be found in the assembly "{1}".</target>
+        <note>{StrBegin="MSB4174: "}</note>
+      </trans-unit>
+      <trans-unit id="TaskFactoryLoadFailure">
+        <source>MSB4175: The task factory "{0}" could not be loaded from the assembly "{1}". {2}</source>
+        <target state="new">MSB4175: The task factory "{0}" could not be loaded from the assembly "{1}". {2}</target>
+        <note>{StrBegin="MSB4175: "}</note>
+      </trans-unit>
+      <trans-unit id="UnableToCancel">
+        <source>MSB4201: The cancel operation was unable to complete because the currently executing task is not responding.</source>
+        <target state="new">MSB4201: The cancel operation was unable to complete because the currently executing task is not responding.</target>
+        <note>{StrBegin="MSB4201: "}</note>
+      </trans-unit>
+      <trans-unit id="UnableToCancelTask">
+        <source>MSB4220: Waiting for the currently executing task "{0}" to cancel.</source>
+        <target state="new">MSB4220: Waiting for the currently executing task "{0}" to cancel.</target>
+        <note>{StrBegin="MSB4220: "}</note>
+      </trans-unit>
+      <trans-unit id="MainThreadInUse">
+        <source>MSB4202: The request to build submission {0} cannot proceed because submission {1} is already using the main thread.</source>
+        <target state="new">MSB4202: The request to build submission {0} cannot proceed because submission {1} is already using the main thread.</target>
+        <note>{StrBegin="MSB4202: "}</note>
+      </trans-unit>
+      <trans-unit id="ProjectAlreadyBuilding">
+        <source>The request to build this submission cannot proceed because a project with the same configuration is already building.</source>
+        <target state="new">The request to build this submission cannot proceed because a project with the same configuration is already building.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="InitializingTaskFactory">
+        <source>Initializing task factory "{0}" from assembly "{1}".</source>
+        <target state="new">Initializing task factory "{0}" from assembly "{1}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="InitializingTaskHostFactory">
+        <source>Initializing task host factory for task "{0}" from assembly "{1}"</source>
+        <target state="new">Initializing task host factory for task "{0}" from assembly "{1}"</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CantWriteBuildPlan">
+        <source>The build plan could not be written.  Check that the build process has permissions to write to {0}.</source>
+        <target state="new">The build plan could not be written.  Check that the build process has permissions to write to {0}.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CacheFileInaccessible">
+        <source>The MSBuild cache file "{0}" is inaccessible.  Ensure you have access to the directory and that this file is not deleted during the build.  {1}</source>
+        <target state="new">The MSBuild cache file "{0}" is inaccessible.  Ensure you have access to the directory and that this file is not deleted during the build.  {1}</target>
+        <note>
+      LOCALIZATION: "{1}" is a localized message from a CLR/FX exception.
+    </note>
+      </trans-unit>
+      <trans-unit id="CantReadBuildPlan">
+        <source>The build plan could not be read.  Check that the build process has permissions to read {0}.</source>
+        <target state="new">The build plan could not be read.  Check that the build process has permissions to read {0}.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildPlanCorrupt">
+        <source>The build plan at {0} appears to be corrupt and cannot be used.</source>
+        <target state="new">The build plan at {0} appears to be corrupt and cannot be used.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="DetailedSummaryHeader">
+        <source>
+Detailed Build Summary
+======================
+    </source>
+        <target state="new">
+Detailed Build Summary
+======================
+    </target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildHierarchyHeader">
+        <source>
+============================== Build Hierarchy (IDs represent configurations) =====================================================
+Id                  : Exclusive Time   Total Time   Path (Targets)
+-----------------------------------------------------------------------------------------------------------------------------------</source>
+        <target state="new">
+============================== Build Hierarchy (IDs represent configurations) =====================================================
+Id                  : Exclusive Time   Total Time   Path (Targets)
+-----------------------------------------------------------------------------------------------------------------------------------</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildHierarchyEntry">
+        <source>{0}{1,-3}{2}: {3:0.000}s           {4:0.000}s       {5} ({6}) </source>
+        <target state="new">{0}{1,-3}{2}: {3:0.000}s           {4:0.000}s       {5} ({6}) </target>
+        <note>Fields 3 and 4 represent seconds, and the 's' following them should reflect the localized abbreviation for seconds.</note>
+      </trans-unit>
+      <trans-unit id="NodeUtilizationHeader">
+        <source>
+============================== Node Utilization (IDs represent configurations) ====================================================
+Timestamp:            {0} Duration   Cumulative
+-----------------------------------------------------------------------------------------------------------------------------------</source>
+        <target state="new">
+============================== Node Utilization (IDs represent configurations) ====================================================
+Timestamp:            {0} Duration   Cumulative
+-----------------------------------------------------------------------------------------------------------------------------------</target>
+        <note>Spacing is important.  Preserve the number of characters between the start of each word.</note>
+      </trans-unit>
+      <trans-unit id="NodeUtilizationEntry">
+        <source>{0} {1:0.000}s     {2:0.000}s {3}</source>
+        <target state="new">{0} {1:0.000}s     {2:0.000}s {3}</target>
+        <note>Fields 1 and 2 represents seconds, and the 's' following it should reflect the localized abbreviation for seconds.</note>
+      </trans-unit>
+      <trans-unit id="NodeUtilizationSummary">
+        <source>-----------------------------------------------------------------------------------------------------------------------------------
+Utilization:          {0} Average Utilization: {1:###.0}</source>
+        <target state="new">-----------------------------------------------------------------------------------------------------------------------------------
+Utilization:          {0} Average Utilization: {1:###.0}</target>
+        <note>Spacing is important.  Preserve the number of characters between the start of each word.</note>
+      </trans-unit>
+      <trans-unit id="OM_NotSupportedConvertingCollectionValueToBacking">
+        <source>This collection cannot convert from the specified value to the backing value.</source>
+        <target state="new">This collection cannot convert from the specified value to the backing value.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_CannotCreateReservedProperty">
+        <source>The "{0}" property name is reserved.</source>
+        <target state="new">The "{0}" property name is reserved.</target>
+        <note>UE: This message is shown when the user tries to redefine one of the reserved MSBuild properties e.g. $(MSBuildProjectFile) through the object model</note>
+      </trans-unit>
+      <trans-unit id="OM_EitherAttributeButNotBoth">
+        <source>The &lt;{0}&gt; element must have either the "{1}" attribute or the "{2}" attribute but not both.</source>
+        <target state="new">The &lt;{0}&gt; element must have either the "{1}" attribute or the "{2}" attribute but not both.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_OneOfAttributeButNotMore">
+        <source>The &lt;{0}&gt; element must have either the "{1}" attribute, the "{2}" attribute, or the "{3}" attribute, but not more than one.</source>
+        <target state="new">The &lt;{0}&gt; element must have either the "{1}" attribute, the "{2}" attribute, or the "{3}" attribute, but not more than one.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoRemoveOutsideTargets">
+        <source>The "Remove" attribute is not permitted on an item outside of a &lt;Target&gt;.</source>
+        <target state="new">The "Remove" attribute is not permitted on an item outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoKeepMetadataOutsideTargets">
+        <source>The "KeepMetadata" attribute is not permitted on an item outside of a &lt;Target&gt;.</source>
+        <target state="new">The "KeepMetadata" attribute is not permitted on an item outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoRemoveMetadataOutsideTargets">
+        <source>The "RemoveMetadata" attribute is not permitted on an item outside of a &lt;Target&gt;.</source>
+        <target state="new">The "RemoveMetadata" attribute is not permitted on an item outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoKeepDuplicatesOutsideTargets">
+        <source>The "KeepDuplicates" attribute is not permitted on an item outside of a &lt;Target&gt;.</source>
+        <target state="new">The "KeepDuplicates" attribute is not permitted on an item outside of a &lt;Target&gt;.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_CannotGetSetCondition">
+        <source>Elements of this type do not have a condition.</source>
+        <target state="new">Elements of this type do not have a condition.</target>
+        <note>For example, it is not legal for a &lt;ProjectExtensions&gt; element to have a condition attribute.</note>
+      </trans-unit>
+      <trans-unit id="OM_NodeAlreadyParented">
+        <source>The node already has a parent. Remove it from its parent before moving it.</source>
+        <target state="new">The node already has a parent. Remove it from its parent before moving it.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NodeNotAlreadyParentedByThis">
+        <source>The node is not parented by this object so it cannot be removed from it.</source>
+        <target state="new">The node is not parented by this object so it cannot be removed from it.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ReferenceDoesNotHaveThisParent">
+        <source>The reference node is not a child of this node.</source>
+        <target state="new">The reference node is not a child of this node.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_SelfAncestor">
+        <source>Cannot make a node or an ancestor of that node a child of itself.</source>
+        <target state="new">Cannot make a node or an ancestor of that node a child of itself.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MustBeSameProject">
+        <source>Cannot create a relationship between nodes that were created from different projects.</source>
+        <target state="new">Cannot create a relationship between nodes that were created from different projects.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ParentNotParented">
+        <source>The parent node is not itself parented.</source>
+        <target state="new">The parent node is not itself parented.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_CannotAcceptParent">
+        <source>This parent is not a valid parent for the item.</source>
+        <target state="new">This parent is not a valid parent for the item.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ItemsOutsideTargetMustHaveIncludeOrUpdateOrRemove">
+        <source>An item not parented under a Target must have a value for Include or Update or Remove.</source>
+        <target state="new">An item not parented under a Target must have a value for Include or Update or Remove.</target>
+        <note>LOCALIZATION: Please do not localize "Target", "Include", "Update", and "Remove".</note>
+      </trans-unit>
+      <trans-unit id="OM_NameInvalid">
+        <source>The name "{0}" contains an invalid character "{1}".</source>
+        <target state="new">The name "{0}" contains an invalid character "{1}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NoOtherwiseBeforeWhenOrOtherwise">
+        <source>An &lt;Otherwise&gt; element cannot be located before a &lt;When&gt; or &lt;Otherwise&gt; element.</source>
+        <target state="new">An &lt;Otherwise&gt; element cannot be located before a &lt;When&gt; or &lt;Otherwise&gt; element.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MustSetFileNameBeforeSave">
+        <source>Project has not been given a path to save to.</source>
+        <target state="new">Project has not been given a path to save to.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MustSetRecordDuplicateInputs">
+        <source>Project was not loaded with the ProjectLoadSettings.RecordDuplicateImports flag.</source>
+        <target state="new">Project was not loaded with the ProjectLoadSettings.RecordDuplicateImports flag.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_CannotSaveFileLoadedAsReadOnly">
+        <source>Project or targets file "{0}" was loaded in read-only mode, and cannot be saved.</source>
+        <target state="new">Project or targets file "{0}" was loaded in read-only mode, and cannot be saved.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_IncorrectObjectAssociation">
+        <source>The "{0}" object specified does not belong to the correct "{1}" object.</source>
+        <target state="new">The "{0}" object specified does not belong to the correct "{1}" object.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ReservedName">
+        <source>The "{0}" name is reserved, and cannot be used.</source>
+        <target state="new">The "{0}" name is reserved, and cannot be used.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_GlobalProperty">
+        <source>The "{0}" property is a global property, and cannot be modified.</source>
+        <target state="new">The "{0}" property is a global property, and cannot be modified.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_MatchingProjectAlreadyInCollection">
+        <source>An equivalent project (a project with the same global properties and tools version) is already present in the project collection, with the path "{0}". To load an equivalent into this project collection, unload this project first.</source>
+        <target state="new">An equivalent project (a project with the same global properties and tools version) is already present in the project collection, with the path "{0}". To load an equivalent into this project collection, unload this project first.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ProjectWasNotLoaded">
+        <source>The project provided was not loaded in the collection.</source>
+        <target state="new">The project provided was not loaded in the collection.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_CannotModifyEvaluatedObjectInImportedFile">
+        <source>Cannot modify an evaluated object originating in an imported file "{0}".</source>
+        <target state="new">Cannot modify an evaluated object originating in an imported file "{0}".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_CannotRemoveMetadataOriginatingFromItemDefinition">
+        <source>Cannot remove the metadata named "{0}" as it originates from an item definition, rather than being directly defined on this item.</source>
+        <target state="new">Cannot remove the metadata named "{0}" as it originates from an item definition, rather than being directly defined on this item.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_CannotSplitItemElementWhenSplittingIsDisabled">
+        <source>The requested operation needs to split the item element at location {0} into individual elements but item element splitting is disabled with {1}.</source>
+        <target state="new">The requested operation needs to split the item element at location {0} into individual elements but item element splitting is disabled with {1}.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ProjectIsNoLongerActive">
+        <source>The project cannot be used as it is no longer loaded into a project collection.</source>
+        <target state="new">The project cannot be used as it is no longer loaded into a project collection.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ObjectIsNoLongerActive">
+        <source>The operation is not allowed because currently this object is not parented.</source>
+        <target state="new">The operation is not allowed because currently this object is not parented.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ProjectXmlCannotBeUnloadedDueToLoadedProjects">
+        <source>The project XML file "{0}" cannot be unloaded because at least one project "{1}" is still loaded which references that project XML.</source>
+        <target state="new">The project XML file "{0}" cannot be unloaded because at least one project "{1}" is still loaded which references that project XML.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_ProjectInstanceImmutable">
+        <source>Instance object was created as immutable.</source>
+        <target state="new">Instance object was created as immutable.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_NotEvaluatedBecauseShouldEvaluateForDesignTimeIsFalse">
+        <source>The specified API "{0}" is not available because ProjectLoadSettings.DoNotEvaluateElementsWithFalseCondition was set when loading this project.</source>
+        <target state="new">The specified API "{0}" is not available because ProjectLoadSettings.DoNotEvaluateElementsWithFalseCondition was set when loading this project.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="OM_BuildSubmissionsMultipleProjectCollections">
+        <source>All build submissions in a build must use project instances originating from the same project collection.</source>
+        <target state="new">All build submissions in a build must use project instances originating from the same project collection.</target>
+        <note>This occurs if a client tries to add two BuildSubmissions to a build, each involving a ProjectInstance originating in different ProjectCollection. This is not allowed.</note>
+      </trans-unit>
+      <trans-unit id="BuildStarted">
+        <source>Build started.</source>
+        <target state="new">Build started.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="FileLocation">
+        <source>{0} ({1},{2})</source>
+        <target state="new">{0} ({1},{2})</target>
+        <note>A file location to be embedded in a string.</note>
+      </trans-unit>
+      <trans-unit id="MSBuild.CannotRebaseOutputItemPath">
+        <source>MSB3203: The output path "{0}" cannot be rebased. {1}</source>
+        <target state="new">MSB3203: The output path "{0}" cannot be rebased. {1}</target>
+        <note>{StrBegin="MSB3203: "}UE: This message is shown when the user asks the "MSBuild" task to rebase the paths of its output items relative to the project from where the "MSBuild" task is called (as opposed to the project(s) on which the "MSBuild" task is called), and one of the output item paths is invalid. LOCALIZATION: "{1}" is a localized message from a CLR/FX exception explaining the problem.</note>
+      </trans-unit>
+      <trans-unit id="MSBuild.ProjectFileNotFound">
+        <source>MSB3202: The project file "{0}" was not found.</source>
+        <target state="new">MSB3202: The project file "{0}" was not found.</target>
+        <note>
+      {StrBegin="MSB3202: "}UE: This message is shown when the user passes a non-existent project file to the MSBuild task, in the "Projects" parameter.
+      and they have not specified the SkipNonexistentProjects parameter, or it is set to false.
+    </note>
+      </trans-unit>
+      <trans-unit id="MSBuild.ProjectFileNotFoundMessage">
+        <source>Skipping project "{0}" because it was not found.</source>
+        <target state="new">Skipping project "{0}" because it was not found.</target>
+        <note>UE: This message is shown when the user passes a non-existent project file to the MSBuild task, in the "Projects" parameter, and they have specified the SkipNonexistentProjects parameter.</note>
+      </trans-unit>
+      <trans-unit id="MSBuild.ProjectUpgradeNeededToVcxProj">
+        <source>MSB3204: The project file "{0}" is in the ".vcproj" file format, which MSBuild no longer supports. Please convert the project by opening it in the Visual Studio IDE or running the conversion tool, or use MSBuild 3.5 or earlier to build it.</source>
+        <target state="new">MSB3204: The project file "{0}" is in the ".vcproj" file format, which MSBuild no longer supports. Please convert the project by opening it in the Visual Studio IDE or running the conversion tool, or use MSBuild 3.5 or earlier to build it.</target>
+        <note>{StrBegin="MSB3204: "} LOC: ".vcproj" should not be localized</note>
+      </trans-unit>
+      <trans-unit id="MSBuild.InvalidSkipNonexistentProjectValue">
+        <source>MSB3205: SkipNonexistentProject can only accept values of "True", "False" and "Build".</source>
+        <target state="new">MSB3205: SkipNonexistentProject can only accept values of "True", "False" and "Build".</target>
+        <note>{StrBegin="MSB3205: "} LOC: "SkipNonexistentProject", "True", "False" and "Build" should not be localized</note>
+      </trans-unit>
+      <trans-unit id="MSBuild.SkippingRemainingProjects">
+        <source>The MSBuild task is skipping the remaining projects because the StopOnFirstFailure parameter was set to true.</source>
+        <target state="new">The MSBuild task is skipping the remaining projects because the StopOnFirstFailure parameter was set to true.</target>
+        <note>LOCALIZATION:  Do not localize the words "MSBuild" or "StopOnFirstFailure".</note>
+      </trans-unit>
+      <trans-unit id="MSBuild.SkippingRemainingTargets">
+        <source>The MSBuild task is skipping the remaining targets because the StopOnFirstFailure parameter was set to true.</source>
+        <target state="new">The MSBuild task is skipping the remaining targets because the StopOnFirstFailure parameter was set to true.</target>
+        <note>LOCALIZATION:  Do not localize the words "MSBuild" or "StopOnFirstFailure".</note>
+      </trans-unit>
+      <trans-unit id="MSBuild.NotBuildingInParallel">
+        <source>Overriding the BuildingInParallel property by setting it to false. This is due to the system being run in single process mode with StopOnFirstFailure set to true.</source>
+        <target state="new">Overriding the BuildingInParallel property by setting it to false. This is due to the system being run in single process mode with StopOnFirstFailure set to true.</target>
+        <note>LOCALIZATION:  Do not localize the words "MSBuild", "BuildingInParallel", or "StopOnFirstFailure".</note>
+      </trans-unit>
+      <trans-unit id="MSBuild.NoStopOnFirstFailure">
+        <source>StopOnFirstFailure will have no effect when the following conditions are all present: 1) The system is running in multiple process mode 2) The BuildInParallel property is true. 3) The RunEachTargetSeparately property is false.</source>
+        <target state="new">StopOnFirstFailure will have no effect when the following conditions are all present: 1) The system is running in multiple process mode 2) The BuildInParallel property is true. 3) The RunEachTargetSeparately property is false.</target>
+        <note>LOCALIZATION:  Do not localize the words "RunEachTargetSeparately", "BuildingInParallel", or "StopOnFirstFailure".</note>
+      </trans-unit>
+      <trans-unit id="General.InvalidPropertyError">
+        <source>MSB3100: Syntax for "{0}" parameter is not valid ({1}). Correct syntax is {0}="&lt;name&gt;=&lt;value&gt;".</source>
+        <target state="new">MSB3100: Syntax for "{0}" parameter is not valid ({1}). Correct syntax is {0}="&lt;name&gt;=&lt;value&gt;".</target>
+        <note>{StrBegin="MSB3100: "}This error is shown if the user does any of the following:
+    Properties="foo"              (missing property value)
+    Properties="=4"               (missing property name)
+    The user must pass in an actual property name and value, as in Properties="Configuration=Debug".</note>
+      </trans-unit>
+      <trans-unit id="General.GlobalProperties">
+        <source>Global Properties:</source>
+        <target state="new">Global Properties:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="General.UndefineProperties">
+        <source>Removing Properties:</source>
+        <target state="new">Removing Properties:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="General.OverridingProperties">
+        <source>Overriding Global Properties for project "{0}" with:</source>
+        <target state="new">Overriding Global Properties for project "{0}" with:</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="General.AdditionalProperties">
+        <source>Additional Properties for project "{0}":</source>
+        <target state="new">Additional Properties for project "{0}":</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="General.ProjectUndefineProperties">
+        <source>Removing Properties for project "{0}":</source>
+        <target state="new">Removing Properties for project "{0}":</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="TaskInstantiationFailureNotSupported">
+        <source>MSB4802: The "{0}" task could not be instantiated from "{1}". This version of MSBuild does not support {2}.</source>
+        <target state="new">MSB4802: The "{0}" task could not be instantiated from "{1}". This version of MSBuild does not support {2}.</target>
+        <note>{StrBegin="MSB4802: "}</note>
+      </trans-unit>
+      <trans-unit id="InvalidGetPathOfFileAboveParameter">
+        <source>The parameter '{0}' can only be a file name and cannot include a directory.</source>
+        <target state="new">The parameter '{0}' can only be a file name and cannot include a directory.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="FileToReloadFromDoesNotExist">
+        <source>MSB4229: File to reload from does not exist: {0}</source>
+        <target state="new">MSB4229: File to reload from does not exist: {0}</target>
+        <note>{StrBegin="MSB4229: "}</note>
+      </trans-unit>
+      <trans-unit id="ValueNotSet">
+        <source>MSB4230: Value not set: {0}</source>
+        <target state="new">MSB4230: Value not set: {0}</target>
+        <note>{StrBegin="MSB4230: "}</note>
+      </trans-unit>
+      <trans-unit id="NoReloadOnUnsavedChanges">
+        <source>MSB4231: ProjectRootElement can't reload if it contains unsaved changes.</source>
+        <target state="new">MSB4231: ProjectRootElement can't reload if it contains unsaved changes.</target>
+        <note>{StrBegin="MSB4231: "}</note>
+      </trans-unit>
+      <trans-unit id="ProjectImportSkippedFalseCondition">
+        <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to false condition; ({4}) was evaluated as ({5}).</source>
+        <target state="new">Project "{0}" was not imported by "{1}" at ({2},{3}), due to false condition; ({4}) was evaluated as ({5}).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectImportSkippedNoMatches">
+        <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to no matching files.</source>
+        <target state="new">Project "{0}" was not imported by "{1}" at ({2},{3}), due to no matching files.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectImportSkippedEmptyFile">
+        <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being empty.</source>
+        <target state="new">Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being empty.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectImportSkippedInvalidFile">
+        <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
+        <target state="new">Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectImportSkippedMissingFile">
+        <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file not existing.</source>
+        <target state="new">Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file not existing.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ProjectImported">
+        <source>Importing project "{0}" into project "{1}" at ({2},{3}).</source>
+        <target state="new">Importing project "{0}" into project "{1}" at ({2},{3}).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ErrorWritingProfilerReport">
+        <source>MSBUILD : error MSB4239: Error writing profiling report. {0}</source>
+        <target state="new">MSBUILD : error MSB4239: Error writing profiling report. {0}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="WritingProfilerReport">
+        <source>Writing profiler report to '{0}'...</source>
+        <target state="new">Writing profiler report to '{0}'...</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="WritingProfilerReportDone">
+        <source>Done writing report.</source>
+        <target state="new">Done writing report.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CouldNotRunNuGetSdkResolver">
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="new">The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="ReferencingMultipleVersionsOfTheSameSdk">
+        <source>MSB4240: Multiple versions of the same SDK "{0}" cannot be specified. The previously resolved SDK version "{1}" from location "{2}" will be used and the version "{3}" will be ignored.</source>
+        <target state="new">MSB4240: Multiple versions of the same SDK "{0}" cannot be specified. The previously resolved SDK version "{1}" from location "{2}" will be used and the version "{3}" will be ignored.</target>
+        <note>{StrBegin="MSB4240: "}
+      LOCALIZATION:  Do not localize the word SDK.
+    </note>
+      </trans-unit>
+      <trans-unit id="SdkResultVersionDifferentThanReference">
+        <source>MSB4241: The SDK reference "{0}" version "{1}" was resolved to version "{2}" instead.  You could be using a different version than expected if you do not update the referenced version to match.</source>
+        <target state="new">MSB4241: The SDK reference "{0}" version "{1}" was resolved to version "{2}" instead.  You could be using a different version than expected if you do not update the referenced version to match.</target>
+        <note>{StrBegin="MSB4241: "}
+      LOCALIZATION:  Do not localize the word SDK.
+    </note>
+      </trans-unit>
+      <trans-unit id="SdkResolving">
+        <source>Resolving SDK '{0}'...</source>
+        <target state="new">Resolving SDK '{0}'...</target>
+        <note>
+      LOCALIZATION:  Do not localize the word SDK.
+    </note>
+      </trans-unit>
+      <trans-unit id="CouldNotLoadSdkResolverAssembly">
+        <source>MSB4244: The SDK resolver assembly "{0}" could not be loaded. {1}</source>
+        <target state="new">MSB4244: The SDK resolver assembly "{0}" could not be loaded. {1}</target>
+        <note>{StrBegin="MSB4244: "}</note>
+      </trans-unit>
+      <trans-unit id="SdkResolverManifestInvalid">
+        <source>MSB4245: SDK Resolver manifest file is invalid. This may indicate a corrupt or invalid installation of MSBuild. Manifest file path '{0}'. Message: {1}</source>
+        <target state="new">MSB4245: SDK Resolver manifest file is invalid. This may indicate a corrupt or invalid installation of MSBuild. Manifest file path '{0}'. Message: {1}</target>
+        <note>{StrBegin="MSB4245: "}</note>
+      </trans-unit>
+      <trans-unit id="SdkResolverNoDllOrManifest">
+        <source>MSB4246: SDK Resolver folder exists but without an SDK Resolver DLL or manifest file. This may indicate a corrupt or invalid installation of MSBuild. SDK resolver path: {0}</source>
+        <target state="new">MSB4246: SDK Resolver folder exists but without an SDK Resolver DLL or manifest file. This may indicate a corrupt or invalid installation of MSBuild. SDK resolver path: {0}</target>
+        <note>{StrBegin="MSB4246: "}</note>
+      </trans-unit>
+      <trans-unit id="SdkResolverDllInManifestMissing">
+        <source>MSB4247: Could not load SDK Resolver. A manifest file exists, but the path to the SDK Resolver DLL file could not be found. Manifest file path '{0}'. SDK resolver path: {1}</source>
+        <target state="new">MSB4247: Could not load SDK Resolver. A manifest file exists, but the path to the SDK Resolver DLL file could not be found. Manifest file path '{0}'. SDK resolver path: {1}</target>
+        <note>{StrBegin="MSB4247: "}</note>
+      </trans-unit>
+    </body>
+  </file>
+</xliff>
\ No newline at end of file
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index 39d606c3376..01daa41d62b 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: Al deshabilitar el nodo InProc, se degrada el rendimiento cuando use los complementos de caché de proyectos que emiten solicitudes de compilación de proxy.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: Error del solucionador del SDK: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">Error en el solucionador del SDK "{0}" al intentar resolver el SDK "{1}". Excepción: "{2}".</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: El proyecto "{0}" ha omitido las restricciones de aislamiento de gráficos en el proyecto "{1}" al que se hace referencia.</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: La afinidad de solicitud {0} especificada está en conflicto con una afinidad {1} anterior especificada para el proyecto {2} con las propiedades globales {3}.</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilización:          Utilización media de {0}: {1:###.0}</target>
         <target state="translated">MSB4244: El ensamblado de la resolución del SDK "{0}" no se pudo cargar. {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: La resolución del SDK "{0}" no se pudo ejecutar. {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: La resolución del SDK basado en NuGet no se pudo ejecutar porque no se encontraron los ensamblados de NuGet. Compruebe su instalación de MSBuild o configure la variable del entorno "{0}" en la carpeta que contiene los ensamblados de NuGet requeridos. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">No se pudo ejecutar la resolución del SDK basado en NuGet porque no se encontraron los ensamblados de NuGet. Compruebe su instalación de MSBuild o configure la variable del entorno "{0}" en la carpeta que contiene los ensamblados de NuGet requeridos. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index 4fb148b8f3f..84593fc74d6 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: la désactivation du nœud inproc entraîne une détérioration des performances lors de l’utilisation de plug-ins de cache de projet qui émettent des requêtes de build proxy.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: Échec du Programme de Résolution SDK : «{0}»</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">Échec du programme de résolution SDK «{0}» lors de la tentative de résolution du kit de développement logiciel (SDK) «{1}». Exception : "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: le projet "{0}" a ignoré les contraintes d'isolement de graphe dans le projet référencé "{1}"</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: L'affinité de requête spécifiée {0} est en conflit avec une affinité précédente {1} spécifiée pour ce projet {2} avec des propriétés globales {3}</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilisation :          {0} Utilisation moyenne : {1:###.0}</target>
         <target state="translated">MSB4244: Impossible de charger l'assembly de résolution de SDK "{0}". {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: Impossible d'exécuter la résolution de SDK "{0}". {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: Impossible d'exécuter la résolution de SDK NuGet parce que les assemblys NuGet n'ont pas pu être localisés. Vérifiez votre installation de MSBuild ou définissez la variable d'environnement "{0}" dans le dossier qui contient les assemblys NuGet obligatoires. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">Le résolveur SDK basé sur NuGet n'a pas pu s'exécuter car les assemblys NuGet n'ont pas pu être localisés. Vérifiez votre installation de MSBuild ou définissez la variable d'environnement "{0}" dans le dossier qui contient les assemblys NuGet obligatoires. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index 6c438cb90c0..a3c2a92531e 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: la disabilitazione del nodo InProc porta a una riduzione del livello delle prestazioni quando si usano plug-in della cache del progetto che emettono richieste di compilazione proxy.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: errore sistema di risoluzione SDK: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">Il sistema di risoluzione SDK "{0}" non è riuscito durante il tentativo di risolvere l'SDK "{1}". Eccezione: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: il progetto "{0}" ha ignorato i vincoli di isolamento del grafico nel progetto di riferimento "{1}"</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: l'affinità della richiesta specificata {0} è in conflitto con l'affinità {1} precedentemente specificata per il progetto {2} con le proprietà globali {3}</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilizzo:          {0} Utilizzo medio: {1:###.0}</target>
         <target state="translated">MSB4244: non è stato possibile caricare l'assembly "{0}" del resolver SDK. {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: non è stato possibile eseguire il resolver SDK "{0}". {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: non è stato possibile eseguire il resolver SDK basato su NuGet perché non sono stati trovati assembly NuGet. Controllare l'installazione di MSBuild oppure impostare la variabile di ambiente "{0}" sulla cartella che contiene gli assembly NuGet richiesti. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">Non è stato possibile eseguire il resolver SDK basato su NuGet perché non sono stati trovati assembly NuGet. Controllare l'installazione di MSBuild oppure impostare la variabile di ambiente "{0}" sulla cartella che contiene gli assembly NuGet richiesti. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 83660d1cd01..66e3a864ded 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: プロキシ・ビルド要求を出すプロジェクト キャッシュ プラグインを使用する場合、InProc ノードを無効にするとパフォーマンスが低下します。</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: SDK リゾルバー エラー: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">SDK "{1}" を解決しようとしているときに、SDK リゾルバー "{0}" に失敗しました。例外: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: プロジェクト "{0}" は、参照先のプロジェクト "{1}" で、グラフの分離制約をスキップしました</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: 指定された要求の関係 {0} は、グローバル プロパティ {3} を持つプロジェクト {2} に対して以前に指定された関係 {1} と競合しています。</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4244: SDK 競合回避モジュールのアセンブリ "{0}" を読み込めませんでした。{1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: SDK 競合回避モジュール "{0}" を実行できませんでした。{1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: NuGet アセンブリを見つけることができなかったため、NuGet ベースの SDK 競合回避モジュールを実行できませんでした。MSBuild のインストールを確認するか、環境変数 "{0}" を、必要な NuGet アセンブリが含まれているフォルダーに設定してください。{1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">NuGet アセンブリを見つけることができなかったため、NuGet ベースの SDK 競合回避モジュールを実行できませんでした。MSBuild のインストールを確認するか、環境変数 "{0}" を、必要な NuGet アセンブリが含まれているフォルダーに設定してください。{1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index 2886ef13d83..a7d18597b51 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: 프록시 빌드 요청을 내보내는 프로젝트 캐시 플러그 인을 사용할 때 inproc 노드를 사용하지 않도록 설정하면 성능이 저하됩니다.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: SDK 해결 프로그램 오류: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">SDK "{1}"을(를) 확인하는 동안 SDK 확인자 "{0}"이(가) 실패했습니다. 예외: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: 프로젝트 "{0}"에서 참조된 프로젝트 "{1}"의 그래프 격리 제약 조건을 건너뛰었습니다.</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: 지정된 요청 선호도 {0}이(가) 전역 속성이 {3}인 프로젝트 {2}에 대해 지정된 이전 선호도 {1}와(과) 충돌합니다.</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4244: SDK 확인자 어셈블리 "{0}"을(를) 로드할 수 없습니다. {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: SDK 확인자 "{0}"을(를) 실행하지 못했습니다. {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: NuGet 어셈블리를 찾을 수 없어 NuGet 기반 SDK 확인자를 실행하지 못했습니다. MSBuild 설치를 확인하거나 환경 변수 "{0}"을(를) 필요한 NuGet 어셈블리가 포함된 폴더로 설정하세요. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">NuGet 어셈블리를 찾을 수 없어 NuGet 기반 SDK 확인자를 실행하지 못했습니다. MSBuild 설치를 확인하거나 환경 변수 "{0}"을(를) 필요한 NuGet 어셈블리가 포함된 폴더로 설정하세요. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index f679567d179..7430b42c9b1 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: wyłączenie węzła InProc prowadzi do obniżenia wydajności, gdy używane są wtyczki pamięci podręcznej projektu, które emitują żądania kompilowania serwera proxy.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: niepowodzenia programu do rozpoznawania zestawu SDK: „{0}”</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">Wystąpił błąd programu do rozpoznawania zestawu SDK „{0}” podczas próby rozpoznania zestawu SDK „{1}”. Wyjątek: „{2}”</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: W przypadku projektu „{0}” pominięto ograniczenia izolacji grafu dla przywoływanego projektu „{1}”</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: podana koligacja żądania {0} jest w konflikcie z poprzednią koligacją {1} określoną dla projektu {2} za pomocą właściwości globalnych {3}</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Wykorzystanie:          Średnie wykorzystanie {0}: {1:###.0}</target>
         <target state="translated">MSB4244: Nie można załadować zestawu programu rozpoznawania zestawu SDK „{0}”. {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: Nie można uruchomić programu rozpoznawania zestawu SDK „{0}”. {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: Nie można uruchomić programu rozpoznawania zestawu SDK opartego na narzędziu NuGet, ponieważ nie można zlokalizować zestawów NuGet. Sprawdź instalację programu MSBuild lub ustaw zmienną środowiskową „{0}” na folder zawierający wymagane zestawy NuGet. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">Nie można uruchomić programu do rozpoznawania zestawu SDK opartego na narzędziu NuGet, ponieważ nie można zlokalizować zestawów NuGet. Sprawdź instalację programu MSBuild lub ustaw zmienną środowiskową „{0}” na folder zawierający wymagane zestawy NuGet. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index 389764664b3..511d8aa41d5 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: desativar o nó inproc leva à degradação do desempenho ao usar plug-ins de cache de projeto que emitem solicitações de construção de proxy.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: Falha no Resolvedor do SDK: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">O resolvedor do SDK "{0}" falhou ao tentar resolver o SDK "{1}". Exceção: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: o projeto "{0}" ignorou as restrições de isolamento do gráfico no projeto referenciado "{1}"</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: A afinidade de solicitação especificada {0} está em conflito com uma afinidade anterior {1} especificada para o projeto {2} com propriedades globais {3}</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilização:          {0} Utilização Média: {1:###.0}</target>
         <target state="translated">MSB4244: não foi possível carregar o assembly do resolvedor "{0}" do SDK. {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: falha ao executar o resolvedor "{0}" do SDK. {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: falha ao executar o resolvedor do SDK baseado em NuGet porque não foi possível localizar os assemblies do NuGet. Verifique a instalação do MSBuild ou defina a variável de ambiente "{0}" para a pasta que contém os assemblies necessários do NuGet. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">O resolvedor do SDK baseado em NuGet falhou ao executar porque os assemblies do NuGet não puderam ser localizados. Verifique sua instalação do MSBuild ou defina a variável de ambiente "{0}" para a pasta que contém os assemblies do NuGet necessários. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index bceaac58024..f19945c2240 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: Отключение внутрипроцессного узла приводит к замедлению при использовании плагинов кэша проекта, которые создают запросы на сборку прокси-сервера.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: сбой сопоставителя SDK: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">Сбой сопоставителя SDK "{0}" при попытке сопоставить пакет SDK "{1}". Исключение: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: проект "{0}" пропустил ограничения изоляции графа в проекте "{1}", на который указывает ссылка.</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: указанное сходство запроса {0} конфликтует с предыдущим сходством {1}, заданным для проекта {2} с глобальными свойствами {3}</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4244: не удалось загрузить сборку сопоставителя SDK типа "{0}". {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: не удалось запустить сопоставитель SDK "{0}". {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: не удалось запустить сопоставитель SDK на базе NuGet, так как не удалось найти сборки NuGet. Проверьте свою установку MSBuild или укажите папку, содержащую требуемые сборки NuGet, в качестве значения переменной среды "{0}". {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">Не удалось запустить сопоставитель SDK на базе NuGet, так как не удалось найти сборки NuGet. Проверьте свою установку MSBuild или укажите папку, содержащую требуемые сборки NuGet, в качестве значения переменной среды "{0}". {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index cccbf728f7f..6ba8540f344 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: InProc düğümünün devre dışı bırakılması, ara sunucu oluşturma istekleri gönderen proje önbelleği eklentileri kullanılırken performans düşüşüne yol açar.</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: SDK Çözümleyici Hatası: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">"{0}" SDK çözümleyicisi, "{1}" SDK'sını çözümlemeye çalışırken başarısız oldu. İstisna: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: "{0}" projesi, başvurulan "{1}" projesindeki graf yalıtımı kısıtlamalarını atladı</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: Belirtilen istek benzeşimi {0}, {3} genel özelliklerine sahip {2} projesi için belirtilen önceki bir {1} benzeşimiyle çakışıyor</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Kullanım:             {0} Ortalama Kullanım: {1:###.0}</target>
         <target state="translated">MSB4244: "{0}" SDK çözümleyicisi bütünleştirilmiş kodu yüklenemedi. {1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: "{0}" SDK çözümleyicisi çalıştırılamadı. {1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: NuGet bütünleştirilmiş kodları bulunamadığından NuGet tabanlı SDK çözümleyicisi çalıştırılamadı. MSBuild yüklemenizi denetleyin veya "{0}" ortam değişkenini gerekli NuGet bütünleştirilmiş kodlarını içeren klasör olarak ayarlayın. {1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">NuGet derlemeleri bulunamadığından NuGet tabanlı SDK çözümleyicisi çalıştırılamadı. MSBuild yüklemenizi kontrol edin veya "{0}" ortam değişkenini gerekli NuGet derlemelerini içeren klasöre ayarlayın. {1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index 973d8288178..bed465c1a19 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: 使用发出代理构建请求的项目缓存插件时，禁用 inproc 节点会导致性能下降。</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: SDK 解析程序失败: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">尝试解析 SDK "{1}" 时，SDK 解析程序 "{0}" 失败。异常: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: 项目“{0}”已跳过所引用的项目“{1}”上的图形隔离约束</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: 指定的请求关联 {0} 与先前为具有全局属性 {3} 的项目 {2} 指定的关联 {1} 冲突。</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4244: 无法加载 SDK 解析程序程序集“{0}”。{1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: SDK 解析程序“{0}”运行失败。{1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: 基于 NuGet 的 SDK 解析程序运行失败，因为无法找到 NuGet 程序集。请检查你安装的 MSBuild 或将环境变量“{0}”设置为包含所需 NuGet 程序集的文件夹。{1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">基于 NuGet 的 SDK 解析程序运行失败，因为无法找到 NuGet 程序集。请检查你安装的 MSBuild 或将环境变量“{0}”设置为包含所需 NuGet 程序集的文件夹。{1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index 2a863be7542..fa8a07b3ae3 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -262,6 +262,16 @@
         <target state="translated">MSB4274: 停用 inproc 節點會在使用可發出 proxy 組建要求的專案快取外掛程式時，導致效能降低。</target>
         <note />
       </trans-unit>
+      <trans-unit id="SDKResolverCriticalFailure">
+        <source>MSB4242: SDK Resolver Failure: "{0}"</source>
+        <target state="translated">MSB4242: SDK 解析程式失敗: "{0}"</target>
+        <note>{StrBegin="MSB4242: "}</note>
+      </trans-unit>
+      <trans-unit id="SDKResolverFailed">
+        <source>The SDK resolver "{0}" failed while attempting to resolve the SDK "{1}". Exception: "{2}"</source>
+        <target state="translated">SDK 解析程式 "{0}" 在嘗試解析 SDK "{1}" 時失敗。例外狀況: "{2}"</target>
+        <note />
+      </trans-unit>
       <trans-unit id="SkippedConstraintsOnRequest">
         <source>MSB4260: Project "{0}" skipped graph isolation constraints on referenced project "{1}"</source>
         <target state="translated">MSB4260: 專案 "{0}" 已跳過參考專案 "{1}" 上的圖形隔離條件約束</target>
@@ -1791,7 +1801,7 @@
       </trans-unit>
       <trans-unit id="AffinityConflict">
         <source>MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</source>
-        <target state="new">MSB4213: The specified request affinity {0} conflicts with a previous affinity {1} specified for project {2} with global properties {3}</target>
+        <target state="translated">MSB4213: 指定的要求親和性 {0} 與先前為專案 {2} 指定、具有全域屬性 {3} 的親和性 {1} 衝突。</target>
         <note>{StrBegin="MSB4213: "}</note>
       </trans-unit>
       <trans-unit id="UnableToCreateNode">
@@ -2379,15 +2389,10 @@ Utilization:          {0} Average Utilization: {1:###.0}</source>
         <target state="translated">MSB4244: 無法載入 SDK 解析程式組件 "{0}"。{1}</target>
         <note>{StrBegin="MSB4244: "}</note>
       </trans-unit>
-      <trans-unit id="CouldNotRunSdkResolver">
-        <source>MSB4242: The SDK resolver "{0}" failed to run. {1}</source>
-        <target state="translated">MSB4242: SDK 解析程式 "{0}" 無法執行。{1}</target>
-        <note>{StrBegin="MSB4242: "}</note>
-      </trans-unit>
       <trans-unit id="CouldNotRunNuGetSdkResolver">
-        <source>MSB4243: The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
-        <target state="translated">MSB4243: 因為找不到 NuGet 組件，所以 NuGet 型 SDK 解析程式無法執行。請檢查您的 MSBuild 安裝，或將環境變數 "{0}" 設定為包含必要 NuGet 組件的資料夾。{1}</target>
-        <note>{StrBegin="MSB4243: "}</note>
+        <source>The NuGet-based SDK resolver failed to run because NuGet assemblies could not be located.  Check your installation of MSBuild or set the environment variable "{0}" to the folder that contains the required NuGet assemblies. {1}</source>
+        <target state="translated">因為找不到 NuGet 組件，NuGet 型 SDK 解析程式無法執行。請檢查您的 MSBuild 安裝，或將環境變數 "{0}" 設定為包含必要 NuGet 組件的資料夾。{1}</target>
+        <note />
       </trans-unit>
       <trans-unit id="ProjectImportSkippedInvalidFile">
         <source>Project "{0}" was not imported by "{1}" at ({2},{3}), due to the file being invalid.</source>
diff --git a/src/Build/System.Text.Encodings.Web.pkgdef b/src/Build/System.Text.Encodings.Web.pkgdef
deleted file mode 100644
index bee4d6921fe..00000000000
--- a/src/Build/System.Text.Encodings.Web.pkgdef
+++ /dev/null
@@ -1,7 +0,0 @@
-[$RootKey$\RuntimeConfiguration\dependentAssembly\bindingRedirection\{1A1A9DA4-9F25-4AC8-89BF-BCEF74875CA8}]
-"name"="System.Text.Encodings.Web"
-"codeBase"="$BaseInstallDir$\MSBuild\Current\Bin\System.Text.Encodings.Web.dll"
-"publicKeyToken"="cc7b13ffcd2ddd51"
-"culture"="neutral"
-"oldVersion"="0.0.0.0-4.0.5.0"
-"newVersion"="4.0.5.0"
diff --git a/src/Build/System.Text.Json.pkgdef b/src/Build/System.Text.Json.pkgdef
deleted file mode 100644
index f20fee293fd..00000000000
--- a/src/Build/System.Text.Json.pkgdef
+++ /dev/null
@@ -1,7 +0,0 @@
-[$RootKey$\RuntimeConfiguration\dependentAssembly\bindingRedirection\{1F1A9DA4-9F25-4AB8-89BF-BCEF73875178}]
-"name"="System.Text.Json"
-"codeBase"="$BaseInstallDir$\MSBuild\Current\Bin\System.Text.Json.dll"
-"publicKeyToken"="cc7b13ffcd2ddd51"
-"culture"="neutral"
-"oldVersion"="0.0.0.0-4.0.1.0"
-"newVersion"="4.0.1.0"
diff --git a/src/Build/Utilities/EngineFileUtilities.cs b/src/Build/Utilities/EngineFileUtilities.cs
index da8165d3369..242085521c9 100644
--- a/src/Build/Utilities/EngineFileUtilities.cs
+++ b/src/Build/Utilities/EngineFileUtilities.cs
@@ -12,10 +12,8 @@
 
 namespace Microsoft.Build.Internal
 {
-    internal class EngineFileUtilities
+    internal static class EngineFileUtilities
     {
-        private readonly FileMatcher _fileMatcher;
-
         // Regexes for wildcard filespecs that should not get expanded
         // By default all wildcards are expanded.
         private static List<Regex> s_lazyWildCardExpansionRegexes;
@@ -34,13 +32,6 @@ internal static void CaptureLazyWildcardRegexes()
             s_lazyWildCardExpansionRegexes = PopulateRegexFromEnvironment();
         }
 
-        public static EngineFileUtilities Default = new EngineFileUtilities(FileMatcher.Default);
-
-        public EngineFileUtilities(FileMatcher fileMatcher)
-        {
-            _fileMatcher = fileMatcher;
-        }
-
         /// <summary>
         /// Used for the purposes of evaluating an item specification. Given a filespec that may include wildcard characters * and
         /// ?, we translate it into an actual list of files. If the input filespec doesn't contain any wildcard characters, and it
@@ -54,14 +45,14 @@ public EngineFileUtilities(FileMatcher fileMatcher)
         /// <param name="directoryEscaped">The directory to evaluate, escaped.</param>
         /// <param name="filespecEscaped">The filespec to evaluate, escaped.</param>
         /// <returns>Array of file paths, unescaped.</returns>
-        internal string[] GetFileListUnescaped
+        internal static string[] GetFileListUnescaped
             (
             string directoryEscaped,
             string filespecEscaped
             )
 
         {
-            return GetFileList(directoryEscaped, filespecEscaped, returnEscaped: false, forceEvaluateWildCards: false);
+            return GetFileList(directoryEscaped, filespecEscaped, returnEscaped: false, forceEvaluateWildCards: false, excludeSpecsEscaped: null, fileMatcher: FileMatcher.Default);
         }
 
         /// <summary>
@@ -78,16 +69,18 @@ string filespecEscaped
         /// <param name="filespecEscaped">The filespec to evaluate, escaped.</param>
         /// <param name="excludeSpecsEscaped">Filespecs to exclude, escaped.</param>
         /// <param name="forceEvaluate">Whether to force file glob expansion when eager expansion is turned off</param>
+        /// <param name="fileMatcher"></param>
         /// <returns>Array of file paths, escaped.</returns>
-        internal string[] GetFileListEscaped
+        internal static string[] GetFileListEscaped
             (
             string directoryEscaped,
             string filespecEscaped,
             IEnumerable<string> excludeSpecsEscaped = null,
-            bool forceEvaluate = false
+            bool forceEvaluate = false,
+            FileMatcher fileMatcher = null
             )
         {
-            return GetFileList(directoryEscaped, filespecEscaped, returnEscaped: true, forceEvaluate, excludeSpecsEscaped);
+            return GetFileList(directoryEscaped, filespecEscaped, returnEscaped: true, forceEvaluate, excludeSpecsEscaped, fileMatcher ?? FileMatcher.Default);
         }
 
         internal static bool FilespecHasWildcards(string filespecEscaped)
@@ -119,14 +112,16 @@ internal static bool FilespecHasWildcards(string filespecEscaped)
         /// <param name="returnEscaped"><code>true</code> to return escaped specs.</param>
         /// <param name="forceEvaluateWildCards">Whether to force file glob expansion when eager expansion is turned off</param>
         /// <param name="excludeSpecsEscaped">The exclude specification, escaped.</param>
+        /// <param name="fileMatcher"></param>
         /// <returns>Array of file paths.</returns>
-        private string[] GetFileList
+        private static string[] GetFileList
             (
             string directoryEscaped,
             string filespecEscaped,
             bool returnEscaped,
             bool forceEvaluateWildCards,
-            IEnumerable<string> excludeSpecsEscaped = null
+            IEnumerable<string> excludeSpecsEscaped,
+            FileMatcher fileMatcher
             )
         {
             ErrorUtilities.VerifyThrowInternalLength(filespecEscaped, nameof(filespecEscaped));
@@ -156,7 +151,7 @@ private string[] GetFileList
                 // as a relative path, we will get back a bunch of relative paths.
                 // If the filespec started out as an absolute path, we will get
                 // back a bunch of absolute paths.
-                fileList = _fileMatcher.GetFiles(directoryUnescaped, filespecUnescaped, excludeSpecsUnescaped);
+                fileList = fileMatcher.GetFiles(directoryUnescaped, filespecUnescaped, excludeSpecsUnescaped);
 
                 ErrorUtilities.VerifyThrow(fileList != null, "We must have a list of files here, even if it's empty.");
 
diff --git a/src/Directory.BeforeCommon.targets b/src/Directory.BeforeCommon.targets
index 913c97b1281..ce322f9833b 100644
--- a/src/Directory.BeforeCommon.targets
+++ b/src/Directory.BeforeCommon.targets
@@ -142,4 +142,9 @@
     <DocumentationFile Condition=" '$(GenerateDocumentationFile)' == 'true' ">$(IntermediateOutputPath)\$(AssemblyName).xml</DocumentationFile>
   </PropertyGroup>
 
+  <PropertyGroup Condition="'$(MonoBuild)' != 'true' and $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'">
+    <DefineConstants>$(DefineConstants);FEATURE_MSIOREDIST</DefineConstants>
+    <FeatureMSIORedist>true</FeatureMSIORedist>
+  </PropertyGroup>
+
 </Project>
diff --git a/src/Framework.UnitTests/Microsoft.Build.Framework.UnitTests.csproj b/src/Framework.UnitTests/Microsoft.Build.Framework.UnitTests.csproj
index b73c360d59d..7be18a10802 100644
--- a/src/Framework.UnitTests/Microsoft.Build.Framework.UnitTests.csproj
+++ b/src/Framework.UnitTests/Microsoft.Build.Framework.UnitTests.csproj
@@ -1,4 +1,4 @@
-﻿<Project Sdk="Microsoft.NET.Sdk">
+<Project Sdk="Microsoft.NET.Sdk">
 
   <Import Project="..\Shared\FileSystemSources.proj" />
   <Import Project="..\Shared\DebuggingSources.proj" />
@@ -11,8 +11,10 @@
   </PropertyGroup>
 
   <ItemGroup>
+    <PackageReference Include="Microsoft.IO.Redist" Condition="'$(FeatureMSIORedist)' == 'true'" />
     <PackageReference Include="Microsoft.VisualStudio.Setup.Configuration.Interop" Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'" />
     <PackageReference Include="Shouldly" />
+    <PackageReference Include="System.Net.Http" />
   </ItemGroup>
 
   <ItemGroup>
diff --git a/src/Framework/EngineServices.cs b/src/Framework/EngineServices.cs
index b2b5fa9b281..43b8d10f7c6 100644
--- a/src/Framework/EngineServices.cs
+++ b/src/Framework/EngineServices.cs
@@ -16,7 +16,7 @@ namespace Microsoft.Build.Framework
     public abstract class EngineServices
     {
         /// <summary>
-        /// Initial version with LogsMessagesOfImportance() as the only exposed member.
+        /// Initial version with LogsMessagesOfImportance() and IsTaskInputLoggingEnabled as the only exposed members.
         /// </summary>
         public const int Version1 = 1;
 
@@ -24,7 +24,7 @@ public abstract class EngineServices
         /// An explicit version of this class. Must be incremented whenever new members are added. Derived classes should override
         /// the property to return the version actually being implemented.
         /// </summary>
-        public virtual int Version => Version1;
+        public virtual int Version => Version1; // Not updated since we have not shipped 17.0 yet
 
         /// <summary>
         /// Returns <see langword="true"/> if the given message importance is not guaranteed to be ignored by registered loggers.
@@ -37,5 +37,13 @@ public abstract class EngineServices
         /// for <see cref="MessageImportance.Low"/>.
         /// </remarks>
         public virtual bool LogsMessagesOfImportance(MessageImportance importance) => throw new NotImplementedException();
+
+        /// <summary>
+        /// Returns <see langword="true"/> if the build is configured to log all task inputs.
+        /// </summary>
+        /// <remarks>
+        /// This is a performance optimization allowing tasks to skip expensive double-logging.
+        /// </remarks>
+        public virtual bool IsTaskInputLoggingEnabled => throw new NotImplementedException();
     }
 }
diff --git a/src/Framework/MSBuildEventSource.cs b/src/Framework/MSBuildEventSource.cs
index 3581225789d..e32cb633fbc 100644
--- a/src/Framework/MSBuildEventSource.cs
+++ b/src/Framework/MSBuildEventSource.cs
@@ -429,7 +429,7 @@ public void TargetUpToDateStop(int result)
         {
             WriteEvent(57, result);
         }
-        
+
         [Event(58, Keywords = Keywords.All)]
         public void CopyUpToDateStart(string path)
         {
@@ -454,6 +454,42 @@ public void WriteLinesToFileUpToDateStop(string fileItemSpec, bool wasUpToDate)
             WriteEvent(61, fileItemSpec, wasUpToDate);
         }
 
+        [Event(62, Keywords = Keywords.All)]
+        public void SdkResolverServiceInitializeStart()
+        {
+            WriteEvent(62);
+        }
+
+        [Event(63, Keywords = Keywords.All)]
+        public void SdkResolverServiceInitializeStop(int resolverCount)
+        {
+            WriteEvent(63, resolverCount);
+        }
+
+        [Event(64, Keywords = Keywords.All)]
+        public void SdkResolverResolveSdkStart()
+        {
+            WriteEvent(64);
+        }
+
+        [Event(65, Keywords = Keywords.All)]
+        public void SdkResolverResolveSdkStop(string resolverName, string sdkName, string solutionPath, string projectPath, string sdkPath, bool success)
+        {
+            WriteEvent(65, resolverName, sdkName, solutionPath, projectPath, sdkPath, success);
+        }
+
+        [Event(66, Keywords = Keywords.All)]
+        public void CachedSdkResolverServiceResolveSdkStart(string sdkName, string solutionPath, string projectPath)
+        {
+            WriteEvent(66, sdkName, solutionPath, projectPath);
+        }
+
+        [Event(67, Keywords = Keywords.All)]
+        public void CachedSdkResolverServiceResolveSdkStop(string sdkName, string solutionPath, string projectPath, bool success)
+        {
+            WriteEvent(67, sdkName, solutionPath, projectPath, success);
+        }
+
         #endregion
     }
 }
diff --git a/src/Framework/Microsoft.Build.Framework.csproj b/src/Framework/Microsoft.Build.Framework.csproj
index ee02ebe3c87..d2b221eb376 100644
--- a/src/Framework/Microsoft.Build.Framework.csproj
+++ b/src/Framework/Microsoft.Build.Framework.csproj
@@ -7,7 +7,7 @@
     <IsPackable>true</IsPackable>
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is a common assembly used by other MSBuild assemblies.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
-    <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">partial</ApplyNgenOptimization>
+    <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">full</ApplyNgenOptimization>
 
     <!--
       Ignore warnings for nullable annotations in code that doesn't use '#nullable'. Microsoft.CodeAnalysis.Collections
diff --git a/src/Framework/Sdk/SdkResolver.cs b/src/Framework/Sdk/SdkResolver.cs
index 9aafb5a84ff..9280c30af24 100644
--- a/src/Framework/Sdk/SdkResolver.cs
+++ b/src/Framework/Sdk/SdkResolver.cs
@@ -29,10 +29,11 @@ public abstract class SdkResolver
         ///     An <see cref="SdkResult" /> containing the resolved SDKs or associated error / reason
         ///     the SDK could not be resolved.  Return <code>null</code> if the resolver is not
         ///     applicable for a particular <see cref="SdkReference"/>.
-        ///     <remarks>
-        ///         Note: You must use the <see cref="SdkResultFactory" /> to return a result.
-        ///     </remarks>
-        /// </returns>
+        ///  </returns>   
+        ///  <remarks>
+        ///    Note: You must use <see cref="Microsoft.Build.Framework.SdkResultFactory"/> to return a result.
+        ///  </remarks>
+        /// 
         public abstract SdkResult Resolve(SdkReference sdkReference, SdkResolverContext resolverContext,
             SdkResultFactory factory);
     }
diff --git a/src/Framework/Sdk/SdkResolverContext.cs b/src/Framework/Sdk/SdkResolverContext.cs
index df8c5f3f148..63e2f48482d 100644
--- a/src/Framework/Sdk/SdkResolverContext.cs
+++ b/src/Framework/Sdk/SdkResolverContext.cs
@@ -37,11 +37,11 @@ public abstract class SdkResolverContext
 
         /// <summary>
         ///     Version of MSBuild currently running.
+        /// </summary>
         /// <remarks>
         ///     File version based on commit height from our public git repository. This is informational
         ///     and not equal to the assembly version.
         /// </remarks>
-        /// </summary>
         public virtual Version MSBuildVersion { get; protected set; }
 
         /// <summary>
diff --git a/src/Framework/Sdk/SdkResult.cs b/src/Framework/Sdk/SdkResult.cs
index 12cf5db0eac..29c201f24b8 100644
--- a/src/Framework/Sdk/SdkResult.cs
+++ b/src/Framework/Sdk/SdkResult.cs
@@ -7,11 +7,10 @@ namespace Microsoft.Build.Framework
 {
     /// <summary>
     ///     An abstract interface class to indicate SDK resolver success or failure.
-    ///     <remarks>
-    ///         Note: Use <see cref="SdkResultFactory" /> to create instances of this class. Do not
-    ///         inherit from this class.
-    ///     </remarks>
     /// </summary>
+    /// <remarks>
+    ///   Note: Use <see cref="Microsoft.Build.Framework.SdkResultFactory"/> to create instances of this class. Do not inherit from this class.
+    /// </remarks>
     public abstract class SdkResult
     {
         //  Explicit backing fields so that implementation in Microsoft.Build.dll can use them for translation
diff --git a/src/MSBuild.UnitTests/Microsoft.Build.CommandLine.UnitTests.csproj b/src/MSBuild.UnitTests/Microsoft.Build.CommandLine.UnitTests.csproj
index be9203b581a..701d0c1e3fc 100644
--- a/src/MSBuild.UnitTests/Microsoft.Build.CommandLine.UnitTests.csproj
+++ b/src/MSBuild.UnitTests/Microsoft.Build.CommandLine.UnitTests.csproj
@@ -8,6 +8,7 @@
 
   <ItemGroup>
     <PackageReference Include="Shouldly" />
+    <PackageReference Include="System.Net.Http" />
   </ItemGroup>
 
   <ItemGroup>
diff --git a/src/MSBuild.UnitTests/XMake_Tests.cs b/src/MSBuild.UnitTests/XMake_Tests.cs
index c9dbd905e72..c6909ccceb1 100644
--- a/src/MSBuild.UnitTests/XMake_Tests.cs
+++ b/src/MSBuild.UnitTests/XMake_Tests.cs
@@ -57,6 +57,23 @@ public void GatherCommandLineSwitchesTwoProperties()
             parameters[1].ShouldBe("c=d");
         }
 
+        [Fact]
+        public void GatherCommandLineSwitchesAnyDash()
+        {
+            var switches = new CommandLineSwitches();
+
+            var arguments = new List<string> {
+                "-p:a=b",
+                "--p:maxcpucount=8"
+            };
+
+            MSBuildApp.GatherCommandLineSwitches(arguments, switches);
+
+            string[] parameters = switches[CommandLineSwitches.ParameterizedSwitch.Property];
+            parameters[0].ShouldBe("a=b");
+            parameters[1].ShouldBe("maxcpucount=8");
+        }
+
         [Fact]
         public void GatherCommandLineSwitchesMaxCpuCountWithArgument()
         {
@@ -392,46 +409,85 @@ public void ExtractSwitchParametersTest()
         {
             string commandLineArg = "\"/p:foo=\"bar";
             string unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out var doubleQuotesRemovedFromArg);
-            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':')).ShouldBe(":\"foo=\"bar");
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 1).ShouldBe(":\"foo=\"bar");
             doubleQuotesRemovedFromArg.ShouldBe(2);
 
             commandLineArg = "\"/p:foo=bar\"";
             unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
-            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':')).ShouldBe(":foo=bar");
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 1).ShouldBe(":foo=bar");
             doubleQuotesRemovedFromArg.ShouldBe(2);
 
             commandLineArg = "/p:foo=bar";
             unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
-            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':')).ShouldBe(":foo=bar");
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 1).ShouldBe(":foo=bar");
             doubleQuotesRemovedFromArg.ShouldBe(0);
 
             commandLineArg = "\"\"/p:foo=bar\"";
             unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
-            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':')).ShouldBe(":foo=bar\"");
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 1).ShouldBe(":foo=bar\"");
             doubleQuotesRemovedFromArg.ShouldBe(3);
 
             // this test is totally unreal -- we'd never attempt to extract switch parameters if the leading character is not a
             // switch indicator (either '-' or '/') -- here the leading character is a double-quote
             commandLineArg = "\"\"\"/p:foo=bar\"";
             unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
-            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "/p", unquotedCommandLineArg.IndexOf(':')).ShouldBe(":foo=bar\"");
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "/p", unquotedCommandLineArg.IndexOf(':'), 1).ShouldBe(":foo=bar\"");
             doubleQuotesRemovedFromArg.ShouldBe(3);
 
             commandLineArg = "\"/pr\"operty\":foo=bar";
             unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
-            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "property", unquotedCommandLineArg.IndexOf(':')).ShouldBe(":foo=bar");
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "property", unquotedCommandLineArg.IndexOf(':'), 1).ShouldBe(":foo=bar");
             doubleQuotesRemovedFromArg.ShouldBe(3);
 
             commandLineArg = "\"/pr\"op\"\"erty\":foo=bar\"";
             unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
-            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "property", unquotedCommandLineArg.IndexOf(':')).ShouldBe(":foo=bar");
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "property", unquotedCommandLineArg.IndexOf(':'), 1).ShouldBe(":foo=bar");
             doubleQuotesRemovedFromArg.ShouldBe(6);
 
             commandLineArg = "/p:\"foo foo\"=\"bar bar\";\"baz=onga\"";
             unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
-            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':')).ShouldBe(":\"foo foo\"=\"bar bar\";\"baz=onga\"");
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 1).ShouldBe(":\"foo foo\"=\"bar bar\";\"baz=onga\"");
             doubleQuotesRemovedFromArg.ShouldBe(6);
         }
+        
+        [Fact]
+        public void ExtractSwitchParametersTestDoubleDash()
+        {
+            var commandLineArg = "\"--p:foo=\"bar";
+            var unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out var doubleQuotesRemovedFromArg);
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 2).ShouldBe(":\"foo=\"bar");
+            doubleQuotesRemovedFromArg.ShouldBe(2);
+
+            commandLineArg = "\"--p:foo=bar\"";
+            unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 2).ShouldBe(":foo=bar");
+            doubleQuotesRemovedFromArg.ShouldBe(2);
+
+            commandLineArg = "--p:foo=bar";
+            unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 2).ShouldBe(":foo=bar");
+            doubleQuotesRemovedFromArg.ShouldBe(0);
+
+            commandLineArg = "\"\"--p:foo=bar\"";
+            unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 2).ShouldBe(":foo=bar\"");
+            doubleQuotesRemovedFromArg.ShouldBe(3);
+
+            commandLineArg = "\"--pr\"operty\":foo=bar";
+            unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "property", unquotedCommandLineArg.IndexOf(':'), 2).ShouldBe(":foo=bar");
+            doubleQuotesRemovedFromArg.ShouldBe(3);
+
+            commandLineArg = "\"--pr\"op\"\"erty\":foo=bar\"";
+            unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "property", unquotedCommandLineArg.IndexOf(':'), 2).ShouldBe(":foo=bar");
+            doubleQuotesRemovedFromArg.ShouldBe(6);
+
+            commandLineArg = "--p:\"foo foo\"=\"bar bar\";\"baz=onga\"";
+            unquotedCommandLineArg = QuotingUtilities.Unquote(commandLineArg, out doubleQuotesRemovedFromArg);
+            MSBuildApp.ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, "p", unquotedCommandLineArg.IndexOf(':'), 2).ShouldBe(":\"foo foo\"=\"bar bar\";\"baz=onga\"");
+            doubleQuotesRemovedFromArg.ShouldBe(6);
+        }        
 
         [Fact]
         public void GetLengthOfSwitchIndicatorTest()
diff --git a/src/MSBuild/MSBuild.csproj b/src/MSBuild/MSBuild.csproj
index 34b768cd9c1..17594f48d2f 100644
--- a/src/MSBuild/MSBuild.csproj
+++ b/src/MSBuild/MSBuild.csproj
@@ -25,11 +25,17 @@
 
     <UseVSHostingProcess>false</UseVSHostingProcess>
     <ApplicationManifest>MSBuild.exe.manifest</ApplicationManifest>
+
     <AppConfig>app.config</AppConfig>
     <!-- Temporary solution for
          https://github.com/Microsoft/msbuild/issues/834 Long term
          two files should be generated from a single source. -->
     <AppConfig Condition="'$(Platform)' == 'x64'">app.amd64.config</AppConfig>
+    <!-- Disable binding redirect generation: we want to be deliberate
+         about the redirects we expose plugins to, and we explicitly
+         redirect ValueTuple _down_ to match VS. -->
+    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>
+
     <IsPackable>true</IsPackable>
     <ContentTargetFolders>contentFiles</ContentTargetFolders>
     <BuildOutputTargetFolder>contentFiles\any\</BuildOutputTargetFolder>
@@ -223,6 +229,7 @@
     </None>
   </ItemGroup>
   <ItemGroup>
+    <PackageReference Include="Microsoft.IO.Redist" Condition="'$(FeatureMSIORedist)' == 'true'" />
     <PackageReference Include="System.Configuration.ConfigurationManager" />
   </ItemGroup>
   <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
diff --git a/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd b/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
index 7b3bae00aad..c032f6978c2 100644
--- a/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
+++ b/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
@@ -1171,6 +1171,25 @@ elementFormDefault="qualified">
       </xs:simpleType>
     </xs:element>
     <xs:element name="AppConfigForCompiler" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
+    <xs:element name="ApplicationDefaultFont" type="msb:StringPropertyType" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="ApplicationDefaultFont" _locComment="" -->Customizes the application default font. The format equivalent to the output of FontConverter.ConvertToInvariantString(). Applies only to Windows Forms projects.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="ApplicationHighDpiMode" substitutionGroup="msb:Property">
+      <xs:annotation>
+        <xs:documentation><!-- _locID_text="ApplicationHighDpiMode" _locComment="" -->Customizes the application DPI awareness mode. Applies only to Windows Forms projects.</xs:documentation>
+      </xs:annotation>
+      <xs:simpleType>
+        <xs:restriction base="xs:string">
+          <xs:enumeration value="SystemAware" />
+          <xs:enumeration value="PerMonitorV2" />
+          <xs:enumeration value="PerMonitor" />
+          <xs:enumeration value="DpiUnaware" />
+          <xs:enumeration value="DpiUnawareGdiScaled" />
+        </xs:restriction>
+      </xs:simpleType>
+    </xs:element>
     <xs:element name="ApplicationIcon" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="ApplicationRevision" type="msb:StringPropertyType" substitutionGroup="msb:Property">
         <xs:annotation>
@@ -1182,6 +1201,16 @@ elementFormDefault="qualified">
             <xs:documentation><!-- _locID_text="ApplicationVersion" _locComment="" -->Matches the expression "\d\.\d\.\d\.(\d|\*)"</xs:documentation>
         </xs:annotation>
     </xs:element>
+    <xs:element name="ApplicationUseCompatibleTextRendering" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="ApplicationUseCompatibleTextRendering" _locComment="" -->Indicates whether to set UseCompatibleTextRendering property defined on certain controls (boolean). Applies only to Windows Forms projects.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="ApplicationVisualStyles" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="ApplicationVisualStyles" _locComment="" -->Indicates whether to enable or disable visual styles (boolean). Applies only to Windows Forms projects.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
     <xs:element name="AppDesignerFolder" type="msb:StringPropertyType" substitutionGroup="msb:Property">
         <xs:annotation>
             <xs:documentation><!-- _locID_text="AppDesignerFolder" _locComment="" -->Name of folder for Application Designer</xs:documentation>
@@ -1252,10 +1281,19 @@ elementFormDefault="qualified">
             <xs:documentation><!-- _locID_text="DebugSymbols" _locComment="" -->Whether to emit symbols (boolean)</xs:documentation>
         </xs:annotation>
     </xs:element>
-    <xs:element name="DebugType" type="msb:StringPropertyType" substitutionGroup="msb:Property">
+    <xs:element name="DebugType" substitutionGroup="msb:Property">
         <xs:annotation>
-            <xs:documentation><!-- _locID_text="DebugType" _locComment="" -->none, pdbonly, or full</xs:documentation>
+            <xs:documentation><!-- _locID_text="DebugType" _locComment="" -->none, pdbonly, embedded, portable, or full. From C# 6 onwards, pdbonly is the same as full.</xs:documentation>
         </xs:annotation>
+        <xs:simpleType>
+            <xs:restriction base="xs:string">
+              <xs:enumeration value="none" />
+              <xs:enumeration value="pdbonly" />
+              <xs:enumeration value="embedded" />
+              <xs:enumeration value="portable" />
+              <xs:enumeration value="full" />
+            </xs:restriction>
+        </xs:simpleType>
     </xs:element>
     <xs:element name="DefaultClientScript" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="DefaultHTMLPageLayout" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
@@ -1811,6 +1849,11 @@ elementFormDefault="qualified">
         </xs:annotation>
     </xs:element>
     <xs:element name="RunPostBuildEvent" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
+    <xs:element name="SatelliteResourceLanguages" type="msb:StringPropertyType" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="SatelliteResourceLanguages" _locComment="" -->Semi-colon separated list of culture names to preserve satellite resource assemblies during build and publish. Names must be a valid culture name (like en-US;it; or fr). If left empty, all satellite resource assemblies will be preserved. Defaults to empty.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
     <xs:element name="SchemaVersion" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="SecureScoping" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="SignAssembly" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index 9ee7405d822..6dc795d6762 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -189,6 +189,10 @@ public OutOfProcTaskHostNode()
             thisINodePacketFactory.RegisterPacketHandler(NodePacketType.TaskHostConfiguration, TaskHostConfiguration.FactoryForDeserialization, this);
             thisINodePacketFactory.RegisterPacketHandler(NodePacketType.TaskHostTaskCancelled, TaskHostTaskCancelled.FactoryForDeserialization, this);
             thisINodePacketFactory.RegisterPacketHandler(NodePacketType.NodeBuildComplete, NodeBuildComplete.FactoryForDeserialization, this);
+
+#if !CLR2COMPATIBILITY
+            EngineServices = new EngineServicesImpl(this);
+#endif
         }
 
         #region IBuildEngine Implementation (Properties)
@@ -498,13 +502,30 @@ public void ReleaseCores(int coresToRelease)
         [Serializable]
         private sealed class EngineServicesImpl : EngineServices
         {
+            private readonly OutOfProcTaskHostNode _taskHost;
+
+            internal EngineServicesImpl(OutOfProcTaskHostNode taskHost)
+            {
+                _taskHost = taskHost;
+            }
+
             /// <summary>
             /// No logging verbosity optimization in OOP nodes.
             /// </summary>
             public override bool LogsMessagesOfImportance(MessageImportance importance) => true;
+
+            /// <inheritdoc />
+            public override bool IsTaskInputLoggingEnabled
+            {
+                get
+                {
+                    ErrorUtilities.VerifyThrow(_taskHost._currentConfiguration != null, "We should never have a null configuration during a BuildEngine callback!");
+                    return _taskHost._currentConfiguration.IsTaskInputLoggingEnabled;
+                }
+            }
         }
 
-        public EngineServices EngineServices { get; } = new EngineServicesImpl();
+        public EngineServices EngineServices { get; }
 
         #endregion
 
diff --git a/src/MSBuild/Resources/Strings.resx b/src/MSBuild/Resources/Strings.resx
index 0d8f59307c4..61b9471ba63 100644
--- a/src/MSBuild/Resources/Strings.resx
+++ b/src/MSBuild/Resources/Strings.resx
@@ -1092,7 +1092,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
   <data name="UnsupportedOS" UESanitized="true" Visibility="Public">
-    <value>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</value>
+    <value>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</value>
     <comment>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</comment>
   </data>
   <data name="Using35Engine" UESanitized="true" Visibility="Public">
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index 5769d82fa59..3391a53a640 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -1330,8 +1330,8 @@ Copyright (C) Microsoft Corporation. Všechna práva vyhrazena.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild nejde spustit v této verzi operačního systému. Podporuje se jenom v systémech Windows 2000, Windows XP a novějších verzích.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild nejde spustit v této verzi operačního systému. Podporuje se jenom v systémech Windows 7 a novějších verzích.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index 9ccad6d1801..63493f136ce 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -1322,8 +1322,8 @@ Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild kann unter dieser Version des Betriebssystems nicht ausgeführt werden. Nur Windows 2000, Windows XP und Folgeversionen werden unterstützt.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild kann unter dieser Version des Betriebssystems nicht ausgeführt werden. Nur Windows 7 und Folgeversionen werden unterstützt.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index e36eec845fb..956059968ba 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -1331,8 +1331,8 @@ Copyright (C) Microsoft Corporation. Todos los derechos reservados.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild no se puede ejecutar en esta versión del sistema operativo. Solo es compatible con Windows 2000, Windows XP y versiones posteriores.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild no se ha podido ejecutar en esta versión del sistema operativo. Solo se admite en Windows 7 y versiones posteriores.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index ecd04ae29ab..a0aa66f7a84 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -1322,8 +1322,8 @@ Copyright (C) Microsoft Corporation. Tous droits réservés.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild ne s'exécute pas sur cette version du système d'exploitation. Il est pris en charge uniquement sur Windows 2000, Windows XP et les versions ultérieures.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild ne s'exécute pas sur cette version du système d'exploitation. Il n'est pris en charge que sur Windows 7 et les versions ultérieures.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index c37e60c4dc4..200a7a77dae 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -1344,8 +1344,8 @@ Copyright (C) Microsoft Corporation. Tutti i diritti sono riservati.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild non può essere eseguito su questa versione del sistema operativo. È supportato solo in Windows 2000, Windows XP e versioni successive.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild non può essere eseguito su questa versione del sistema operativo. È supportato solo in Windows 7 e versioni successive.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index 58adc2124db..453bbc44766 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -1322,8 +1322,8 @@ Copyright (C) Microsoft Corporation.All rights reserved.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild はこのバージョンのオペレーティング システムでは実行できません。Windows 2000、Windows XP およびそれ以降のバージョンでのみサポートされています。</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild はこのバージョンのオペレーティング システムでは実行できません。Windows 7 およびそれ以降のバージョンでのみサポートされています。</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 4e641e8d1e0..e57ed62661a 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -1322,8 +1322,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: 이 운영 체제 버전에서는 MSBuild를 실행할 수 없습니다. MSBuild는 Windows 2000 및 Windows XP 이상 버전에서만 지원됩니다.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: 이 운영 체제 버전에서는 MSBuild를 실행할 수 없습니다. MSBuild는 Windows 7 이상의 버전에서만 지원됩니다.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index 548f0673c44..c1e63e21afe 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -1336,8 +1336,8 @@ Copyright (C) Microsoft Corporation. Wszelkie prawa zastrzeżone.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: Program MSBuild nie działa w tej wersji systemu operacyjnego. Jest obsługiwany tylko w systemie Windows 2000, Windows XP oraz nowszych wersjach.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: Program MSBuild nie działa w tej wersji systemu operacyjnego. Jest obsługiwany tylko w systemie Windows 7 i nowszych wersjach.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index e41b484c1a6..e8293005192 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -1323,8 +1323,8 @@ isoladamente.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: O MSBuild não é executado nesta versão de sistema operacional. Há suporte para ele somente nas versões Windows 2000, Windows XP e versões posteriores.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: O MSBuild não é executado nesta versão do sistema operacional. É suportado apenas no Windows 7 e em versões posteriores.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index 4ef8b52a05a..d5f02251680 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -1321,8 +1321,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild не работает в этой версии операционной системы. Он поддерживается только в Windows 2000, Windows XP и более поздних версиях.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild не работает в этой версии операционной системы. Он поддерживается только в Windows 7, Windows XP и более поздних версиях.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index 8bed4f53eff..06ed57c5523 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -1326,8 +1326,8 @@ Telif Hakkı (C) Microsoft Corporation. Tüm hakları saklıdır.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild işletim sisteminin bu sürümünde çalışmaz. Yalnızca Windows 2000, Windows XP ve sonraki sürümlerde desteklenir.</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild işletim sisteminin bu sürümünde çalışmaz. Yalnızca Windows 7 ve üzeri sürümlerde desteklenir.</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index 011389fa1a6..3a68a4c3a6b 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -1322,8 +1322,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild 不能在此版本的操作系统上运行。它仅在 Windows 2000、Windows XP 及更高版本的操作系统上受支持。</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild 不在此版本操作系统上运行，而仅在 Windows 7 及更高版本的操作系统上受支持。</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index a3b1e39cf03..5992ad480da 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -1322,8 +1322,8 @@ Copyright (C) Microsoft Corporation. 著作權所有，並保留一切權利。
     LOCALIZATION: The prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="UnsupportedOS">
-        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</source>
-        <target state="translated">MSBUILD : error MSB1015: MSBuild 在此版本的作業系統上不會執行。只有在 Windows 2000、Windows XP 及更新版本才受支援。</target>
+        <source>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 7 and later versions.</source>
+        <target state="translated">MSBUILD : error MSB1015: MSBuild 不會在此版本的作業系統上執行。只有在 Windows 7 及更新版本才受支援。</target>
         <note>{StrBegin="MSBUILD : error MSB1015: "}LOCALIZATION: The error prefix "MSBUILD : error MSBxxxx:" should not be localized.</note>
       </trans-unit>
       <trans-unit id="Using35Engine">
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index d6ac2e79f53..ae95d608193 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1545,11 +1545,9 @@ private static bool BuildProjectWithOldOM(string projectFile, string[] targets,
         private static void VerifyThrowSupportedOS()
         {
 #if FEATURE_OSVERSION
-            if ((Environment.OSVersion.Platform == PlatformID.Win32S) ||        // Win32S
-                (Environment.OSVersion.Platform == PlatformID.Win32Windows) ||  // Windows 95, Windows 98, Windows ME
-                (Environment.OSVersion.Platform == PlatformID.WinCE) ||         // Windows CE
-                ((Environment.OSVersion.Platform == PlatformID.Win32NT) &&      // Windows NT 4.0 and earlier
-                (Environment.OSVersion.Version.Major <= 4)))
+            if (Environment.OSVersion.Platform != PlatformID.Win32NT ||
+                Environment.OSVersion.Version.Major < 6 ||
+                (Environment.OSVersion.Version.Major == 6 && Environment.OSVersion.Version.Minor < 1)) // Windows 7 is minimum
             {
                 // If we're running on any of the unsupported OS's, fail immediately.  This way,
                 // we don't run into some obscure error down the line, totally confusing the user.
@@ -1706,8 +1704,8 @@ internal static void GatherCommandLineSwitches(List<string> commandLineArgs, Com
                             }
                             else
                             {
-                                switchName = unquotedCommandLineArg.Substring(switchIndicatorsLength, switchParameterIndicator - 1);
-                                switchParameters = ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, switchName, switchParameterIndicator);
+                                switchName = unquotedCommandLineArg.Substring(switchIndicatorsLength, switchParameterIndicator - switchIndicatorsLength);
+                                switchParameters = ExtractSwitchParameters(commandLineArg, unquotedCommandLineArg, doubleQuotesRemovedFromArg, switchName, switchParameterIndicator, switchIndicatorsLength);
                             }
                         }
 
@@ -1766,6 +1764,7 @@ internal static void GatherCommandLineSwitches(List<string> commandLineArgs, Com
         /// <param name="doubleQuotesRemovedFromArg"></param>
         /// <param name="switchName"></param>
         /// <param name="switchParameterIndicator"></param>
+        /// <param name="switchIndicatorsLength"></param>
         /// <returns>The given switch's parameters (with interesting quoting preserved).</returns>
         internal static string ExtractSwitchParameters
         (
@@ -1773,7 +1772,8 @@ internal static string ExtractSwitchParameters
             string unquotedCommandLineArg,
             int doubleQuotesRemovedFromArg,
             string switchName,
-            int switchParameterIndicator
+            int switchParameterIndicator,
+            int switchIndicatorsLength
         )
         {
 
@@ -1785,7 +1785,7 @@ int switchParameterIndicator
             // check if there is any quoting in the name portion of the switch
             string unquotedSwitchIndicatorAndName = QuotingUtilities.Unquote(commandLineArg.Substring(0, quotedSwitchParameterIndicator), out var doubleQuotesRemovedFromSwitchIndicatorAndName);
 
-            ErrorUtilities.VerifyThrow(switchName == unquotedSwitchIndicatorAndName.Substring(1),
+            ErrorUtilities.VerifyThrow(switchName == unquotedSwitchIndicatorAndName.Substring(switchIndicatorsLength),
                 "The switch name extracted from either the partially or completely unquoted arg should be the same.");
 
             ErrorUtilities.VerifyThrow(doubleQuotesRemovedFromArg >= doubleQuotesRemovedFromSwitchIndicatorAndName,
diff --git a/src/MSBuild/app.amd64.config b/src/MSBuild/app.amd64.config
index 1946bc0bbb9..9583cfd1e04 100644
--- a/src/MSBuild/app.amd64.config
+++ b/src/MSBuild/app.amd64.config
@@ -92,11 +92,11 @@
       </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="System.Text.Encodings.Web" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
-          <bindingRedirect oldVersion="0.0.0.0-4.0.5.0" newVersion="4.0.5.0" />
+          <bindingRedirect oldVersion="0.0.0.0-5.0.0.1" newVersion="5.0.0.1" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="System.Text.Json" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
-          <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
+          <bindingRedirect oldVersion="0.0.0.0-5.0.0.2" newVersion="5.0.0.2" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="Threading.Tasks.Dataflow" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
@@ -104,11 +104,14 @@
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="System.Threading.Tasks.Extensions" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
-          <bindingRedirect oldVersion="0.0.0.0-4.2.0.0" newVersion="4.2.0.0" />
+          <bindingRedirect oldVersion="0.0.0.0-4.2.0.1" newVersion="4.2.0.1" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="System.ValueTuple" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
-          <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
+          <!-- It is unusual to redirect down, but in this case it's ok: 4.0.3.0 forwards
+               to 4.0.0.0 in the GAC, so this just removes the need to redistribute a file
+               and makes that resolution faster. -->
+          <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.0.0" />
         </dependentAssembly>
 
         <!-- Redirects for components dropped by Visual Studio -->
@@ -124,15 +127,15 @@
         <!-- Workaround for crash in C++ CodeAnalysis scenarios due to https://github.com/Microsoft/msbuild/issues/1675 -->
         <dependentAssembly>
           <assemblyIdentity name="FxCopTask" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
-          <codeBase version="16.0.0.0" href="..\..\..\Microsoft\VisualStudio\v16.0\CodeAnalysis\FxCopTask.dll" />
+          <codeBase version="17.0.0.0" href="..\..\..\Microsoft\VisualStudio\v17.0\CodeAnalysis\FxCopTask.dll" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="Microsoft.VisualStudio.CodeAnalysis" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
-          <codeBase version="16.0.0.0" href="..\..\..\Microsoft\VisualStudio\v16.0\CodeAnalysis\Microsoft.VisualStudio.CodeAnalysis.dll" />
+          <codeBase version="17.0.0.0" href="..\..\..\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.VisualStudio.CodeAnalysis.dll" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="Microsoft.VisualStudio.CodeAnalysis.Sdk" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
-          <codeBase version="16.0.0.0" href="..\..\..\Microsoft\VisualStudio\v16.0\CodeAnalysis\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll" />
+          <codeBase version="17.0.0.0" href="..\..\..\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll" />
         </dependentAssembly>
       </assemblyBinding>
     </runtime>
diff --git a/src/MSBuild/app.config b/src/MSBuild/app.config
index 4f9a252f295..8fd02af793e 100644
--- a/src/MSBuild/app.config
+++ b/src/MSBuild/app.config
@@ -82,11 +82,11 @@
       </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="System.Text.Encodings.Web" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
-          <bindingRedirect oldVersion="0.0.0.0-4.0.5.0" newVersion="4.0.5.0" />
+          <bindingRedirect oldVersion="0.0.0.0-5.0.0.1" newVersion="5.0.0.1" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="System.Text.Json" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
-          <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
+          <bindingRedirect oldVersion="0.0.0.0-5.0.0.2" newVersion="5.0.0.2" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="Threading.Tasks.Dataflow" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
@@ -94,11 +94,14 @@
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="System.Threading.Tasks.Extensions" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
-          <bindingRedirect oldVersion="0.0.0.0-4.2.0.0" newVersion="4.2.0.0" />
+          <bindingRedirect oldVersion="0.0.0.0-4.2.0.1" newVersion="4.2.0.1" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="System.ValueTuple" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
-          <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
+          <!-- It is unusual to redirect down, but in this case it's ok: 4.0.3.0 forwards
+               to 4.0.0.0 in the GAC, so this just removes the need to redistribute a file
+               and makes that resolution faster. -->
+          <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.0.0" />
         </dependentAssembly>
 
         <!-- Redirects for components dropped by Visual Studio -->
@@ -116,15 +119,15 @@
         <!-- Workaround for crash in C++ CodeAnalysis scenarios due to https://github.com/Microsoft/msbuild/issues/1675 -->
         <dependentAssembly>
           <assemblyIdentity name="FxCopTask" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
-          <codeBase version="16.0.0.0" href="..\..\Microsoft\VisualStudio\v16.0\CodeAnalysis\FxCopTask.dll" />
+          <codeBase version="17.0.0.0" href="..\..\Microsoft\VisualStudio\v17.0\CodeAnalysis\FxCopTask.dll" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="Microsoft.VisualStudio.CodeAnalysis" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
-          <codeBase version="16.0.0.0" href="..\..\Microsoft\VisualStudio\v16.0\CodeAnalysis\Microsoft.VisualStudio.CodeAnalysis.dll" />
+          <codeBase version="17.0.0.0" href="..\..\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.VisualStudio.CodeAnalysis.dll" />
         </dependentAssembly>
         <dependentAssembly>
           <assemblyIdentity name="Microsoft.VisualStudio.CodeAnalysis.Sdk" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
-          <codeBase version="16.0.0.0" href="..\..\Microsoft\VisualStudio\v16.0\CodeAnalysis\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll" />
+          <codeBase version="17.0.0.0" href="..\..\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.VisualStudio.CodeAnalysis.Sdk.dll" />
         </dependentAssembly>
       </assemblyBinding>
     </runtime>
diff --git a/src/Package/MSBuild.Engine.Corext/MsBuild.Engine.Corext.nuspec b/src/Package/MSBuild.Engine.Corext/MsBuild.Engine.Corext.nuspec
index 2918e172a5c..04a42dbfce4 100644
--- a/src/Package/MSBuild.Engine.Corext/MsBuild.Engine.Corext.nuspec
+++ b/src/Package/MSBuild.Engine.Corext/MsBuild.Engine.Corext.nuspec
@@ -31,6 +31,7 @@
     <file src="$X86BinPath$/Microsoft.Build.Framework.dll" target="v15.0/bin" />
     <file src="$X86BinPath$/Microsoft.Build.Tasks.Core.dll" target="v15.0/bin" />
     <file src="$X86BinPath$/Microsoft.Build.Utilities.Core.dll" target="v15.0/bin" />
+    <file src="$X86BinPath$/Microsoft.IO.Redist.dll" target="v15.0/bin" />
     <file src="$X86BinPath$/System.Collections.Immutable.dll" target="v15.0/bin" />
     <file src="$X86BinPath$/System.Memory.dll" target="v15.0/bin" />
     <file src="$X86BinPath$/System.Text.Json.dll" target="v15.0/bin" />
@@ -87,6 +88,7 @@
     <file src="$X86BinPath$/Microsoft.Build.Framework.dll" target="v15.0/bin/amd64" />
     <file src="$X86BinPath$/Microsoft.Build.Tasks.Core.dll" target="v15.0/bin/amd64" />
     <file src="$X86BinPath$/Microsoft.Build.Utilities.Core.dll" target="v15.0/bin/amd64" />
+    <file src="$X86BinPath$/Microsoft.IO.Redist.dll" target="v15.0/bin/amd64" />
     <file src="$X86BinPath$/System.Collections.Immutable.dll" target="v15.0/bin/amd64" />
     <file src="$X86BinPath$/System.Memory.dll" target="v15.0/bin/amd64" />
     <file src="$X86BinPath$/System.Text.Json.dll" target="v15.0/bin/amd64" />
diff --git a/src/Package/MSBuild.VSSetup/files.swr b/src/Package/MSBuild.VSSetup/files.swr
index 66aabe0c5e3..fc7164e4899 100644
--- a/src/Package/MSBuild.VSSetup/files.swr
+++ b/src/Package/MSBuild.VSSetup/files.swr
@@ -32,6 +32,7 @@ folder InstallDir:\MSBuild\Current\Bin
   file source=$(X86BinPath)Microsoft.Build.Framework.tlb
   file source=$(X86BinPath)Microsoft.Build.Tasks.Core.dll vs.file.ngenApplications="[installDir]\Common7\IDE\vsn.exe" vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
   file source=$(X86BinPath)Microsoft.Build.Utilities.Core.dll vs.file.ngenApplications="[installDir]\Common7\IDE\vsn.exe" vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
+  file source=$(X86BinPath)Microsoft.IO.Redist.dll vs.file.ngenApplications="[installDir]\Common7\IDE\vsn.exe" vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
   file source=$(X86BinPath)MSBuild.exe vs.file.ngenArchitecture=x86 vs.file.ngenPriority=1
   file source=$(X86BinPath)MSBuild.exe.config
   file source=$(TaskHostBinPath)MSBuildTaskHost.exe vs.file.ngenArchitecture=x86
@@ -42,7 +43,6 @@ folder InstallDir:\MSBuild\Current\Bin
   file source=$(X86BinPath)Microsoft.Bcl.AsyncInterfaces.dll vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
   file source=$(X86BinPath)System.Text.Encodings.Web.dll vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
   file source=$(X86BinPath)System.Threading.Tasks.Extensions.dll vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
-  file source=$(X86BinPath)System.ValueTuple.dll vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
   file source=$(X86BinPath)System.Numerics.Vectors.dll vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
   file source=$(X86BinPath)System.Resources.Extensions.dll vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
   file source=$(X86BinPath)System.Runtime.CompilerServices.Unsafe.dll vs.file.ngenApplications="[installDir]\MSBuild\Current\Bin\MSBuild.exe" vs.file.ngenArchitecture=all vs.file.ngenPriority=1
@@ -185,9 +185,9 @@ folder InstallDir:\MSBuild\Current\Bin\amd64
   file source=$(X86BinPath)System.Memory.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)System.Text.Json.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)Microsoft.Bcl.AsyncInterfaces.dll vs.file.ngenArchitecture=all
+  file source=$(X86BinPath)Microsoft.IO.Redist.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)System.Text.Encodings.Web.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)System.Threading.Tasks.Extensions.dll vs.file.ngenArchitecture=all
-  file source=$(X86BinPath)System.ValueTuple.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)System.Numerics.Vectors.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)System.Resources.Extensions.dll vs.file.ngenArchitecture=all
   file source=$(X86BinPath)System.Runtime.CompilerServices.Unsafe.dll vs.file.ngenArchitecture=all
@@ -310,8 +310,6 @@ folder InstallDir:\Common7\IDE\CommonExtensions\MSBuild
   file source=$(SourceDir)Package\MSBuild.VSSetup\MSBuild.clientenabledpkg
   file source=$(SourceDir)Framework\Microsoft.Build.Framework.pkgdef
   file source=$(SourceDir)Build\Microsoft.Build.pkgdef
-  file source=$(SourceDir)Build\System.Text.Encodings.Web.pkgdef
-  file source=$(SourceDir)Build\System.Text.Json.pkgdef
   file source=$(SourceDir)StringTools\StringTools.pkgdef
   file source=$(SourceDir)Tasks\Microsoft.Build.Tasks.Core.pkgdef
   file source=$(SourceDir)Tasks\System.Resources.Extensions.pkgdef
diff --git a/src/Samples/NetCoreCompileTest/App.config b/src/Samples/NetCoreCompileTest/App.config
deleted file mode 100644
index 88fa4027bda..00000000000
--- a/src/Samples/NetCoreCompileTest/App.config
+++ /dev/null
@@ -1,6 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8" ?>
-<configuration>
-    <startup> 
-        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
-    </startup>
-</configuration>
\ No newline at end of file
diff --git a/src/Samples/NetCoreCompileTest/NetCoreCompileTest.csproj b/src/Samples/NetCoreCompileTest/NetCoreCompileTest.csproj
deleted file mode 100644
index 56e7ebc0301..00000000000
--- a/src/Samples/NetCoreCompileTest/NetCoreCompileTest.csproj
+++ /dev/null
@@ -1,68 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <!--<Import Project="$(MSBuildToolsPath)\Microsoft.Common.tasks" />-->
-  <!--<Target Name="Build">
-    <Message Text="Hello World!"/>
-    --><!-- UseSharedCompilation="true" - requires System.Security.Cryptography.Hashing.Algorithms, and updates to BuildClient.CheckPipeConnectionOwnership in Roslyn tasks --><!--
-    <Csc
-      Sources="@(Compile)"
-      />
-  </Target>-->
-  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
-  <PropertyGroup>
-    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
-    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
-    <ProjectGuid>{11B5D53E-90E4-4BD5-9883-B5921F7DE854}</ProjectGuid>
-    <OutputType>Exe</OutputType>
-    <AppDesignerFolder>Properties</AppDesignerFolder>
-    <RootNamespace>NetCoreCompileTest</RootNamespace>
-    <AssemblyName>NetCoreCompileTest</AssemblyName>
-    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
-    <FileAlignment>512</FileAlignment>
-    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
-  </PropertyGroup>
-  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
-    <PlatformTarget>AnyCPU</PlatformTarget>
-    <DebugSymbols>true</DebugSymbols>
-    <DebugType>full</DebugType>
-    <Optimize>false</Optimize>
-    <OutputPath>bin\Debug\</OutputPath>
-    <DefineConstants>DEBUG;TRACE</DefineConstants>
-    <ErrorReport>prompt</ErrorReport>
-    <WarningLevel>4</WarningLevel>
-  </PropertyGroup>
-  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
-    <PlatformTarget>AnyCPU</PlatformTarget>
-    <DebugType>pdbonly</DebugType>
-    <Optimize>true</Optimize>
-    <OutputPath>bin\Release\</OutputPath>
-    <DefineConstants>TRACE</DefineConstants>
-    <ErrorReport>prompt</ErrorReport>
-    <WarningLevel>4</WarningLevel>
-  </PropertyGroup>
-  <ItemGroup>
-    <Reference Include="System" />
-    <Reference Include="System.Core" />
-    <Reference Include="System.Xml.Linq" />
-    <Reference Include="System.Data.DataSetExtensions" />
-    <Reference Include="Microsoft.CSharp" />
-    <Reference Include="System.Data" />
-    <Reference Include="System.Net.Http" />
-    <Reference Include="System.Xml" />
-  </ItemGroup>
-  <ItemGroup>
-    <Compile Include="Program.cs" />
-    <!--<Compile Include="Properties\AssemblyInfo.cs" />-->
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="App.config" />
-  </ItemGroup>
-  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
-  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
-       Other similar extension points exist, see Microsoft.Common.targets.
-  <Target Name="BeforeBuild">
-  </Target>
-  <Target Name="AfterBuild">
-  </Target>
-  -->
-</Project>
\ No newline at end of file
diff --git a/src/Samples/NetCoreCompileTest/Program.cs b/src/Samples/NetCoreCompileTest/Program.cs
deleted file mode 100644
index 4b6727a4db1..00000000000
--- a/src/Samples/NetCoreCompileTest/Program.cs
+++ /dev/null
@@ -1,19 +0,0 @@
-﻿// Copyright (c) Microsoft. All rights reserved.
-// Licensed under the MIT license. See LICENSE file in the project root for full license information.
-
-using System;
-using System.Collections.Generic;
-//using System.Linq;
-//using System.Text;
-//using System.Threading.Tasks;
-
-namespace NetCoreCompileTest
-{
-    internal class Program
-    {
-        private static void Main(string[] args)
-        {
-            Console.WriteLine("Hello, World");
-        }
-    }
-}
diff --git a/src/Samples/NetCoreCompileTest/Properties/AssemblyInfo.cs b/src/Samples/NetCoreCompileTest/Properties/AssemblyInfo.cs
deleted file mode 100644
index 2767b66e115..00000000000
--- a/src/Samples/NetCoreCompileTest/Properties/AssemblyInfo.cs
+++ /dev/null
@@ -1,36 +0,0 @@
-﻿using System.Reflection;
-using System.Runtime.CompilerServices;
-using System.Runtime.InteropServices;
-
-// General Information about an assembly is controlled through the following 
-// set of attributes. Change these attribute values to modify the information
-// associated with an assembly.
-[assembly: AssemblyTitle("NetCoreCompileTest")]
-[assembly: AssemblyDescription("")]
-[assembly: AssemblyConfiguration("")]
-[assembly: AssemblyCompany("")]
-[assembly: AssemblyProduct("NetCoreCompileTest")]
-[assembly: AssemblyCopyright("Copyright ©  2015")]
-[assembly: AssemblyTrademark("")]
-[assembly: AssemblyCulture("")]
-
-// Setting ComVisible to false makes the types in this assembly not visible 
-// to COM components.  If you need to access a type in this assembly from 
-// COM, set the ComVisible attribute to true on that type.
-[assembly: ComVisible(false)]
-
-// The following GUID is for the ID of the typelib if this project is exposed to COM
-[assembly: Guid("11b5d53e-90e4-4bd5-9883-b5921f7de854")]
-
-// Version information for an assembly consists of the following four values:
-//
-//      Major Version
-//      Minor Version 
-//      Build Number
-//      Revision
-//
-// You can specify all the values or you can default the Build and Revision Numbers 
-// by using the '*' as shown below:
-// [assembly: AssemblyVersion("1.0.*")]
-[assembly: AssemblyVersion("1.0.0.0")]
-[assembly: AssemblyFileVersion("1.0.0.0")]
diff --git a/src/Samples/PortableTask/PortableTask.csproj b/src/Samples/PortableTask/PortableTask.csproj
index 4f5461e1f22..6a4541787a1 100644
--- a/src/Samples/PortableTask/PortableTask.csproj
+++ b/src/Samples/PortableTask/PortableTask.csproj
@@ -1,9 +1,9 @@
-﻿<Project Sdk="Microsoft.NET.Sdk">
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <UseProductOutputPath>true</UseProductOutputPath>
     <CopyNuGetImplementations>false</CopyNuGetImplementations>
     <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
-    <TargetFrameworks>netstandard1.3</TargetFrameworks>
+    <TargetFrameworks>netstandard2.0</TargetFrameworks>
   </PropertyGroup>
   <ItemGroup>
     <Content Include="portableTaskTest.proj">
diff --git a/src/Samples/ProjectCachePlugin/ProjectCachePlugin.csproj b/src/Samples/ProjectCachePlugin/ProjectCachePlugin.csproj
index f96f6412f45..6972b5e9ab0 100644
--- a/src/Samples/ProjectCachePlugin/ProjectCachePlugin.csproj
+++ b/src/Samples/ProjectCachePlugin/ProjectCachePlugin.csproj
@@ -1,4 +1,4 @@
-﻿<Project Sdk="Microsoft.NET.Sdk">
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <UseProductOutputPath>true</UseProductOutputPath>
     <CopyNuGetImplementations>false</CopyNuGetImplementations>
@@ -14,5 +14,6 @@
   </ItemGroup>
   <ItemGroup>
     <PackageReference Include="Shouldly" Version="3.0.0" />
+    <PackageReference Include="System.Net.Http" Version="4.3.4" />
   </ItemGroup>
 </Project>
diff --git a/src/Shared/CommunicationsUtilities.cs b/src/Shared/CommunicationsUtilities.cs
index 9f643cc6ea6..4b118f31594 100644
--- a/src/Shared/CommunicationsUtilities.cs
+++ b/src/Shared/CommunicationsUtilities.cs
@@ -183,7 +183,7 @@ internal static Dictionary<string, string> GetEnvironmentVariables()
             // The DebugUtils static constructor can set the MSBUILDDEBUGPATH environment variable to propagate the debug path to out of proc nodes.
             // Need to ensure that constructor is called before this method returns in order to capture its env var write.
             // Otherwise the env var is not captured and thus gets deleted when RequiestBuilder resets the environment based on the cached results of this method.
-            ErrorUtilities.VerifyThrowInternalNull(DebugUtils.DebugPath, nameof(DebugUtils.DebugPath));
+            ErrorUtilities.VerifyThrowInternalNull(DebugUtils.ProcessInfoString, nameof(DebugUtils.DebugPath));
 #endif
 
             Dictionary<string, string> table = new Dictionary<string, string>(200, StringComparer.OrdinalIgnoreCase); // Razzle has 150 environment variables
diff --git a/src/Shared/Debugging/DebugUtils.cs b/src/Shared/Debugging/DebugUtils.cs
index 03736d2ad73..aa83426e5af 100644
--- a/src/Shared/Debugging/DebugUtils.cs
+++ b/src/Shared/Debugging/DebugUtils.cs
@@ -21,11 +21,11 @@ private enum NodeMode
         static DebugUtils()
         {
             string environmentDebugPath = Environment.GetEnvironmentVariable("MSBUILDDEBUGPATH");
-            var debugDirectory = environmentDebugPath ?? Path.Combine(Directory.GetCurrentDirectory(), "MSBuild_Logs");
+            var debugDirectory = environmentDebugPath;
 
             if (Traits.Instance.DebugEngine)
             {
-                FileUtilities.EnsureDirectoryExists(debugDirectory);
+                debugDirectory ??= Path.Combine(Directory.GetCurrentDirectory(), "MSBuild_Logs");
 
                 // Out of proc nodes do not know the startup directory so set the environment variable for them.
                 if (string.IsNullOrWhiteSpace(environmentDebugPath))
@@ -34,6 +34,11 @@ static DebugUtils()
                 }
             }
 
+            if (debugDirectory is not null)
+            {
+                FileUtilities.EnsureDirectoryExists(debugDirectory);
+            }
+
             DebugPath = debugDirectory;
         }
 
diff --git a/src/Shared/EncodingUtilities.cs b/src/Shared/EncodingUtilities.cs
index 1a74d635c1c..c492d063165 100644
--- a/src/Shared/EncodingUtilities.cs
+++ b/src/Shared/EncodingUtilities.cs
@@ -219,16 +219,6 @@ internal static Encoding BatchFileEncoding(string contents, string encodingSpeci
 
             string useUtf8 = string.IsNullOrEmpty(encodingSpecification) ? EncodingUtilities.UseUtf8Detect : encodingSpecification;
 
-#if FEATURE_OSVERSION
-            // UTF8 is only supported in Windows 7 (6.1) or greater.
-            var windows7 = new Version(6, 1);
-
-            if (Environment.OSVersion.Version < windows7)
-            {
-                useUtf8 = EncodingUtilities.UseUtf8Never;
-            }
-#endif
-
             switch (useUtf8.ToUpperInvariant())
             {
                 case EncodingUtilities.UseUtf8Always:
diff --git a/src/Shared/FileMatcher.cs b/src/Shared/FileMatcher.cs
index fa3d0c614f9..cca9caee3b3 100644
--- a/src/Shared/FileMatcher.cs
+++ b/src/Shared/FileMatcher.cs
@@ -132,7 +132,7 @@ internal FileMatcher(IFileSystem fileSystem, GetFileSystemEntries getFileSystemE
                                     directory,
                                     false));
                         IEnumerable<string> filteredEntriesForPath = (pattern != null && !IsAllFilesWildcard(pattern))
-                            ? allEntriesForPath.Where(o => IsMatch(Path.GetFileName(o), pattern))
+                            ? allEntriesForPath.Where(o => IsFileNameMatch(o, pattern))
                             : allEntriesForPath;
                         return stripProjectDirectory
                             ? RemoveProjectDirectory(filteredEntriesForPath, directory).ToArray()
@@ -244,7 +244,7 @@ private static IReadOnlyList<string> GetAccessibleFileSystemEntries(IFileSystem
             {
                 case FileSystemEntity.Files: return GetAccessibleFiles(fileSystem, path, pattern, projectDirectory, stripProjectDirectory);
                 case FileSystemEntity.Directories: return GetAccessibleDirectories(fileSystem, path, pattern);
-                case FileSystemEntity.FilesAndDirectories: return GetAccessibleFilesAndDirectories(fileSystem,path, pattern);
+                case FileSystemEntity.FilesAndDirectories: return GetAccessibleFilesAndDirectories(fileSystem, path, pattern);
                 default:
                     ErrorUtilities.ThrowInternalError("Unexpected filesystem entity type.");
                     break;
@@ -268,7 +268,7 @@ private static IReadOnlyList<string> GetAccessibleFilesAndDirectories(IFileSyste
                 {
                     return (ShouldEnforceMatching(pattern)
                         ? fileSystem.EnumerateFileSystemEntries(path, pattern)
-                            .Where(o => IsMatch(Path.GetFileName(o), pattern))
+                            .Where(o => IsFileNameMatch(o, pattern))
                         : fileSystem.EnumerateFileSystemEntries(path, pattern)
                         ).ToArray();
                 }
@@ -351,7 +351,7 @@ bool stripProjectDirectory
                     files = fileSystem.EnumerateFiles(dir, filespec);
                     if (ShouldEnforceMatching(filespec))
                     {
-                        files = files.Where(o => IsMatch(Path.GetFileName(o), filespec));
+                        files = files.Where(o => IsFileNameMatch(o, filespec));
                     }
                 }
                 // If the Item is based on a relative path we need to strip
@@ -414,7 +414,7 @@ string pattern
                     directories = fileSystem.EnumerateDirectories((path.Length == 0) ? s_thisDirectory : path, pattern);
                     if (ShouldEnforceMatching(pattern))
                     {
-                        directories = directories.Where(o => IsMatch(Path.GetFileName(o), pattern));
+                        directories = directories.Where(o => IsFileNameMatch(o, pattern));
                     }
                 }
 
@@ -956,7 +956,7 @@ private void GetFilesRecursive(
                     for (int i = 0; i < excludeNextSteps.Length; i++)
                     {
                         if (excludeNextSteps[i].NeedsDirectoryRecursion &&
-                            (excludeNextSteps[i].DirectoryPattern == null || IsMatch(Path.GetFileName(subdir), excludeNextSteps[i].DirectoryPattern)))
+                            (excludeNextSteps[i].DirectoryPattern == null || IsFileNameMatch(subdir, excludeNextSteps[i].DirectoryPattern)))
                         {
                             RecursionState thisExcludeStep = searchesToExclude[i];
                             thisExcludeStep.BaseDirectory = subdir;
@@ -1097,7 +1097,7 @@ private static bool MatchFileRecursionStep(RecursionState recursionState, string
             }
             else if (recursionState.SearchData.Filespec != null)
             {
-                return IsMatch(Path.GetFileName(file), recursionState.SearchData.Filespec);
+                return IsFileNameMatch(file, recursionState.SearchData.Filespec);
             }
 
             // if no file-spec provided, match the file to the regular expression
@@ -1664,12 +1664,39 @@ internal Result()
             internal string wildcardDirectoryPart = string.Empty;
         }
 
+        /// <summary>
+        /// A wildcard (* and ?) matching algorithm that tests whether the input path file name matches against the pattern.
+        /// </summary>
+        /// <param name="path">The path whose file name is matched against the pattern.</param>
+        /// <param name="pattern">The pattern.</param>
+        internal static bool IsFileNameMatch(string path, string pattern)
+        {
+            // Use a span-based Path.GetFileName if it is available.
+#if FEATURE_MSIOREDIST
+            return IsMatch(Microsoft.IO.Path.GetFileName(path.AsSpan()), pattern);
+#elif NETSTANDARD2_0
+            return IsMatch(Path.GetFileName(path), pattern);
+#else
+            return IsMatch(Path.GetFileName(path.AsSpan()), pattern);
+#endif
+        }
+
         /// <summary>
         /// A wildcard (* and ?) matching algorithm that tests whether the input string matches against the pattern.
         /// </summary>
         /// <param name="input">String which is matched against the pattern.</param>
         /// <param name="pattern">Pattern against which string is matched.</param>
         internal static bool IsMatch(string input, string pattern)
+        {
+            return IsMatch(input.AsSpan(), pattern);
+        }
+
+        /// <summary>
+        /// A wildcard (* and ?) matching algorithm that tests whether the input string matches against the pattern.
+        /// </summary>
+        /// <param name="input">String which is matched against the pattern.</param>
+        /// <param name="pattern">Pattern against which string is matched.</param>
+        internal static bool IsMatch(ReadOnlySpan<char> input, string pattern)
         {
             if (input == null)
             {
@@ -1705,9 +1732,12 @@ internal static bool IsMatch(string input, string pattern)
             // to using the string indexer. The iIndex and pIndex parameters are only used
             // when we have to compare two non ASCII characters. Using just string.Compare for
             // character comparison, would reduce the speed by approx. 5 times.
-            bool CompareIgnoreCase(char inputChar, char patternChar, int iIndex, int pIndex)
+            bool CompareIgnoreCase(ref ReadOnlySpan<char> input, int iIndex, int pIndex)
 #endif
             {
+                char inputChar = input[iIndex];
+                char patternChar = pattern[pIndex];
+
                 // We will mostly be comparing ASCII characters, check English letters first.
                 char inputCharLower = (char)(inputChar | 0x20);
                 if (inputCharLower >= 'a' && inputCharLower <= 'z')
@@ -1721,7 +1751,7 @@ bool CompareIgnoreCase(char inputChar, char patternChar, int iIndex, int pIndex)
                     // and a non ASCII character cannot have its lowercase/uppercase inside the ASCII table
                     return inputChar == patternChar;
                 }
-                return string.Compare(input, iIndex, pattern, pIndex, 1, StringComparison.OrdinalIgnoreCase) == 0;
+                return MemoryExtensions.Equals(input.Slice(iIndex, 1), pattern.AsSpan(pIndex, 1), StringComparison.OrdinalIgnoreCase);
             }
 #if MONO
             ; // The end of the CompareIgnoreCase anonymous function
@@ -1761,7 +1791,7 @@ bool CompareIgnoreCase(char inputChar, char patternChar, int iIndex, int pIndex)
                                     break;
                                 }
                                 // If the tail doesn't match, we can safely return e.g. ("aaa", "*b")
-                                if (!CompareIgnoreCase(input[inputTailIndex], pattern[patternTailIndex], patternTailIndex, inputTailIndex) &&
+                                if (!CompareIgnoreCase(ref input, inputTailIndex, patternTailIndex) &&
                                     pattern[patternTailIndex] != '?')
                                 {
                                     return false;
@@ -1781,7 +1811,7 @@ bool CompareIgnoreCase(char inputChar, char patternChar, int iIndex, int pIndex)
                         // The ? wildcard cannot be skipped as we will have a wrong result for e.g. ("aab" "*?b")
                         if (pattern[patternIndex] != '?')
                         {
-                            while (!CompareIgnoreCase(input[inputIndex], pattern[patternIndex], inputIndex, patternIndex))
+                            while (!CompareIgnoreCase(ref input, inputIndex, patternIndex))
                             {
                                 // Return if there is no character that match e.g. ("aa", "*b")
                                 if (++inputIndex >= inputLength)
@@ -1796,7 +1826,7 @@ bool CompareIgnoreCase(char inputChar, char patternChar, int iIndex, int pIndex)
                     }
 
                     // If we have a match, step to the next character
-                    if (CompareIgnoreCase(input[inputIndex], pattern[patternIndex], inputIndex, patternIndex) ||
+                    if (CompareIgnoreCase(ref input, inputIndex, patternIndex) ||
                         pattern[patternIndex] == '?')
                     {
                         patternIndex++;
@@ -2557,14 +2587,14 @@ private static bool IsSubdirectoryOf(string possibleChild, string possibleParent
         private static bool DirectoryEndsWithPattern(string directoryPath, string pattern)
         {
             int index = directoryPath.LastIndexOfAny(FileUtilities.Slashes);
-            return (index != -1 && IsMatch(directoryPath.Substring(index + 1), pattern));
+            return (index != -1 && IsMatch(directoryPath.AsSpan(index + 1), pattern));
         }
 
         /// <summary>
         /// Returns true if <paramref name="pattern"/> is <code>*</code> or <code>*.*</code>.
         /// </summary>
         /// <param name="pattern">The filename pattern to check.</param>
-        private static bool IsAllFilesWildcard(string pattern) => pattern?.Length switch
+        internal static bool IsAllFilesWildcard(string pattern) => pattern?.Length switch
         {
             1 => pattern[0] == '*',
             3 => pattern[0] == '*' && pattern[1] == '.' && pattern[2] == '*',
diff --git a/src/Shared/FileSystem/ManagedFileSystem.cs b/src/Shared/FileSystem/ManagedFileSystem.cs
index 6d8bd32fb4e..d5d80a07e35 100644
--- a/src/Shared/FileSystem/ManagedFileSystem.cs
+++ b/src/Shared/FileSystem/ManagedFileSystem.cs
@@ -1,6 +1,7 @@
 ﻿// Copyright (c) Microsoft. All rights reserved.
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
+using Microsoft.Build.Utilities;
 using System;
 using System.Collections.Generic;
 using System.IO;
@@ -16,6 +17,20 @@ internal class ManagedFileSystem : IFileSystem
 
         public static ManagedFileSystem Singleton() => ManagedFileSystem.Instance;
 
+        private static bool ShouldUseMicrosoftIO
+        {
+            get
+            {
+#if !MICROSOFT_BUILD_ENGINE_OM_UNITTESTS
+                return ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0);
+#else
+                // We need to mock usage of ChangeWaves class,
+                // because Microsoft.Build.Engine.OM.UnitTests should not have access to internals of Microsoft.Build.Framework.
+                return true;
+#endif
+            }
+        }
+
         protected ManagedFileSystem() { }
 
         public TextReader ReadFile(string path)
@@ -38,19 +53,78 @@ public byte[] ReadFileAllBytes(string path)
             return File.ReadAllBytes(path);
         }
 
+#if FEATURE_MSIOREDIST
+        private static IEnumerable<string> HandleFileLoadException(
+            Func<string, string, Microsoft.IO.SearchOption, IEnumerable<string>> enumerateFunctionDelegate,
+            string path,
+            string searchPattern,
+            Microsoft.IO.SearchOption searchOption
+        )
+        {
+            try
+            {
+                return enumerateFunctionDelegate(path, searchPattern, searchOption);
+            }
+            // Microsoft.IO.Redist has a dependency on System.Buffers and if System.Buffers assembly is not found the line above throws an exception.
+            // However, FileMatcher class (that in most cases calls the enumeration) does not allow to fail on a IO-related exception. Such behavior hides the actual exception and makes it obscure.
+            // We rethrow it to make it fail with a proper error message and call stack.
+            catch (FileLoadException ex)
+            {
+                throw new InvalidOperationException(ex.Message, ex);
+            }
+            // Sometimes FileNotFoundException is thrown when there is an assembly load failure. In this case it should have FusionLog.
+            catch (FileNotFoundException ex) when (ex.FusionLog != null)
+            {
+                throw new InvalidOperationException(ex.Message, ex);
+            }
+        }
+#endif
+
         public virtual IEnumerable<string> EnumerateFiles(string path, string searchPattern, SearchOption searchOption)
         {
+#if FEATURE_MSIOREDIST
+            return ShouldUseMicrosoftIO
+                ? HandleFileLoadException(
+                    (path, searchPattern, searchOption) => Microsoft.IO.Directory.EnumerateFiles(path, searchPattern, searchOption),
+                    path,
+                    searchPattern,
+                    (Microsoft.IO.SearchOption)searchOption
+                )
+                : Directory.EnumerateFiles(path, searchPattern, searchOption);
+#else
             return Directory.EnumerateFiles(path, searchPattern, searchOption);
+#endif
         }
 
         public virtual IEnumerable<string> EnumerateDirectories(string path, string searchPattern, SearchOption searchOption)
         {
+#if FEATURE_MSIOREDIST
+            return ShouldUseMicrosoftIO
+                ? HandleFileLoadException(
+                    (path, searchPattern, searchOption) => Microsoft.IO.Directory.EnumerateDirectories(path, searchPattern, searchOption),
+                    path,
+                    searchPattern,
+                    (Microsoft.IO.SearchOption)searchOption
+                )
+                : Directory.EnumerateDirectories(path, searchPattern, searchOption);
+#else
             return Directory.EnumerateDirectories(path, searchPattern, searchOption);
+#endif
         }
 
         public virtual IEnumerable<string> EnumerateFileSystemEntries(string path, string searchPattern, SearchOption searchOption)
         {
+#if FEATURE_MSIOREDIST
+            return ShouldUseMicrosoftIO
+                ? HandleFileLoadException(
+                    (path, searchPattern, searchOption) => Microsoft.IO.Directory.EnumerateFileSystemEntries(path, searchPattern, searchOption),
+                    path,
+                    searchPattern, (Microsoft.IO.SearchOption)searchOption
+                )
+                : Directory.EnumerateFileSystemEntries(path, searchPattern, searchOption);
+#else
             return Directory.EnumerateFileSystemEntries(path, searchPattern, searchOption);
+#endif
         }
 
         public FileAttributes GetAttributes(string path)
diff --git a/src/Shared/NativeMethodsShared.cs b/src/Shared/NativeMethodsShared.cs
index 09314174d36..810125d90ac 100644
--- a/src/Shared/NativeMethodsShared.cs
+++ b/src/Shared/NativeMethodsShared.cs
@@ -876,33 +876,6 @@ private static SystemInformationData SystemInformation
 
 #endregion
 
-#region Set Error Mode (copied from BCL)
-
-        private static readonly Version s_threadErrorModeMinOsVersion = new Version(6, 1, 0x1db0);
-
-        internal static int SetErrorMode(int newMode)
-        {
-#if FEATURE_OSVERSION
-            if (Environment.OSVersion.Version < s_threadErrorModeMinOsVersion)
-            {
-                return SetErrorMode_VistaAndOlder(newMode);
-            }
-#endif
-            int num;
-            SetErrorMode_Win7AndNewer(newMode, out num);
-            return num;
-        }
-
-        [SuppressMessage("Microsoft.Design", "CA1060:MovePInvokesToNativeMethodsClass", Justification = "Class name is NativeMethodsShared for increased clarity")]
-        [DllImport("kernel32.dll", EntryPoint = "SetThreadErrorMode", SetLastError = true)]
-        private static extern bool SetErrorMode_Win7AndNewer(int newMode, out int oldMode);
-
-        [SuppressMessage("Microsoft.Design", "CA1060:MovePInvokesToNativeMethodsClass", Justification = "Class name is NativeMethodsShared for increased clarity")]
-        [DllImport("kernel32.dll", EntryPoint = "SetErrorMode", ExactSpelling = true)]
-        private static extern int SetErrorMode_VistaAndOlder(int newMode);
-
-#endregion
-
 #region Wrapper methods
 
         /// <summary>
@@ -1636,9 +1609,11 @@ out FILETIME lpLastWriteTime
 
         [DllImport("kernel32.dll", SetLastError = true)]
         [return: MarshalAs(UnmanagedType.Bool)]
-
         internal static extern bool CloseHandle(IntPtr hObject);
 
+        [DllImport("kernel32.dll", SetLastError = true)]
+        internal static extern bool SetThreadErrorMode(int newMode, out int oldMode);
+
 #endregion
 
 #region Extensions
diff --git a/src/Shared/Shared Code.doc b/src/Shared/Shared Code.doc
deleted file mode 100644
index 3bb7c7745d2..00000000000
Binary files a/src/Shared/Shared Code.doc and /dev/null differ
diff --git a/src/Shared/SharedCode.md b/src/Shared/SharedCode.md
new file mode 100644
index 00000000000..955f9af23f8
--- /dev/null
+++ b/src/Shared/SharedCode.md
@@ -0,0 +1,83 @@
+# Shared Code
+
+## **Namespace**
+All shared code _must_ live in `Microsoft.Build.Shared` namespace.
+___
+
+## **Internal Access Only**
+Shared code gets compiled into every assembly as it is referenced by. However this does _not_ mean that the shared types can migrate across the assemblies they are in.
+
+Even if two types in different assemblies have the same name and are in the same namespace, the CLR does _not_ recognize the types to be the same, because their assembly identities are different.
+
+As a result all shared code _must_ have **internal** access only. There should be _no_ public types in shared code.
+___
+
+## **Resources**
+Shared code needs access to assembly resources e.g. for loading error messages for exceptions. Each assembly that shares code, _must_ define a class called `AssemblyResources` in the shared namespace, with an `internal static readonly` member of type `ResourceManager` called `resources`. Each sharing assembly is required to do this because only it knows what the manifest resource name (a.k.a. logical name) of its resources is. Shared code can then statically reference the assembly’s resources. If the `AssemblyResources` class is not defined, it is a compile-time error.
+
+The `AssemblyResources` class at a minimum must look like this:
+
+```cs
+using System.Resources;
+using System.Reflection;
+
+namespace Microsoft.Build.Shared
+{
+    internal static class AssemblyResources
+    {
+        internal static readonly ResourceManager resources =
+            new ResourceManager(
+                "<manifest resource name>",
+                Assembly.GetExecutingAssembly());
+    }
+}
+```
+
+NOTE: the class is explicitly marked `static`, because it only contains static members and methods -- making the class static prevents it from being instantiated, and allows the compiler to flag the (accidental) addition of instance members.
+___
+
+## **Shared Resources**
+Shared code sometimes needs to define its own resources. If this were not allowed, then each sharing assembly would have to redefine the same set of resources on behalf of the shared code. As with code, maintaining multiple copies of the same resources is not desirable.
+
+Shared resources must be placed in the file `Strings.shared.resx` in the shared code directory. All resource names must be prefixed with “`Shared.`” to distinguish the shared resources from an assembly’s primary resources. Each sharing assembly must add an `internal static readonly` member of type `ResourceManager`, called `sharedResources`, to the `AssemblyResources` class. This is necessary because only the sharing assembly can assign the correct manifest resource name to the shared resources. Shared code can then statically reference the shared resources. The absence of either the `AssemblyResources` class, or the `sharedResources` member is a compile-time error.
+
+For assemblies that share resources, the `AssemblyResources` class at a minimum must look like this:
+
+```cs
+using System.Resources;
+using System.Reflection;
+
+namespace Microsoft.Build.Shared
+{
+    internal static class AssemblyResources
+    {
+        internal static readonly ResourceManager resources =
+            new ResourceManager(
+                "<manifest resource name>",
+                Assembly.GetExecutingAssembly());
+
+        internal static readonly ResourceManager sharedResources =
+            new ResourceManager(
+                "<manifest resource name of shared resources>",
+                Assembly.GetExecutingAssembly());
+    }
+}
+```
+
+To simplify the retrieval of resources, the `AssemblyResources` class can optionally define a method called `GetString()` that searches both the assembly’s primary resources as well as its shared resources for a given string. For example:
+
+```cs
+internal static string GetString(string name)
+{
+    string resource = resources.GetString(name, CultureInfo.CurrentUICulture);
+
+    if (resource == null)
+    {
+        resource = sharedResources.GetString(name, CultureInfo.CurrentUICulture);
+    }
+
+    return resource;
+}
+```
+
+NOTE: if the above method is added to the `AssemblyResources` class, it is advisable to make both `resources` and `sharedResources` private (instead of `internal`) to unify access to assembly resources.
\ No newline at end of file
diff --git a/src/Shared/TaskHostConfiguration.cs b/src/Shared/TaskHostConfiguration.cs
index 1bcae1d7574..815eda222b3 100644
--- a/src/Shared/TaskHostConfiguration.cs
+++ b/src/Shared/TaskHostConfiguration.cs
@@ -78,6 +78,11 @@ internal class TaskHostConfiguration : INodePacket
         /// </summary>
         private string _taskLocation;
 
+        /// <summary>
+        /// Whether task inputs are logged.
+        /// </summary>
+        private bool _isTaskInputLoggingEnabled;
+
         /// <summary>
         /// The set of parameters to apply to the task prior to execution.  
         /// </summary>
@@ -105,6 +110,7 @@ internal class TaskHostConfiguration : INodePacket
         /// <param name="continueOnError">Flag to continue with the build after a the task failed</param>
         /// <param name="taskName">Name of the task.</param>
         /// <param name="taskLocation">Location of the assembly the task is to be loaded from.</param>
+        /// <param name="isTaskInputLoggingEnabled">Whether task inputs are logged.</param>
         /// <param name="taskParameters">Parameters to apply to the task.</param>
         /// <param name="globalParameters">global properties for the current project.</param>
         /// <param name="warningsAsErrors">Warning codes to be treated as errors for the current project.</param>
@@ -124,6 +130,7 @@ internal class TaskHostConfiguration : INodePacket
         /// <param name="continueOnError">Flag to continue with the build after a the task failed</param>
         /// <param name="taskName">Name of the task.</param>
         /// <param name="taskLocation">Location of the assembly the task is to be loaded from.</param>
+        /// <param name="isTaskInputLoggingEnabled">Whether task inputs are logged.</param>
         /// <param name="taskParameters">Parameters to apply to the task.</param>
         /// <param name="globalParameters">global properties for the current project.</param>
         /// <param name="warningsAsErrors">Warning codes to be logged as errors for the current project.</param>
@@ -145,6 +152,7 @@ public TaskHostConfiguration
                 bool continueOnError,
                 string taskName,
                 string taskLocation,
+                bool isTaskInputLoggingEnabled,
                 IDictionary<string, object> taskParameters,
                 Dictionary<string, string> globalParameters,
                 ICollection<string> warningsAsErrors,
@@ -178,6 +186,7 @@ ICollection<string> warningsAsMessages
             _continueOnError = continueOnError;
             _taskName = taskName;
             _taskLocation = taskLocation;
+            _isTaskInputLoggingEnabled = isTaskInputLoggingEnabled;
             _warningsAsErrors = warningsAsErrors;
             _warningsAsMessages = warningsAsMessages;
 
@@ -324,6 +333,16 @@ public string TaskLocation
             { return _taskLocation; }
         }
 
+        /// <summary>
+        /// Returns <see langword="true"/> if the build is configured to log all task inputs.
+        /// </summary>
+        public bool IsTaskInputLoggingEnabled
+        {
+            [DebuggerStepThrough]
+            get
+            { return _isTaskInputLoggingEnabled; }
+        }
+
         /// <summary>
         /// Parameters to set on the instantiated task prior to execution. 
         /// </summary>
@@ -391,6 +410,7 @@ public void Translate(ITranslator translator)
             translator.Translate(ref _projectFileOfTask);
             translator.Translate(ref _taskName);
             translator.Translate(ref _taskLocation);
+            translator.Translate(ref _isTaskInputLoggingEnabled);
             translator.TranslateDictionary(ref _taskParameters, StringComparer.OrdinalIgnoreCase, TaskParameter.FactoryForDeserialization);
             translator.Translate(ref _continueOnError);
             translator.TranslateDictionary(ref _globalParameters, StringComparer.OrdinalIgnoreCase);
diff --git a/src/Shared/TaskLoggingHelper.cs b/src/Shared/TaskLoggingHelper.cs
index 827e634ae9e..7de1b7c8ab1 100644
--- a/src/Shared/TaskLoggingHelper.cs
+++ b/src/Shared/TaskLoggingHelper.cs
@@ -239,6 +239,12 @@ public virtual string GetResourceMessage(string resourceName)
 
         #region Message logging methods
 
+        /// <summary>
+        /// Returns <see langword="true"/> if the build is configured to log all task inputs.
+        /// </summary>
+        public bool IsTaskInputLoggingEnabled =>
+            BuildEngine is IBuildEngine10 buildEngine10 && buildEngine10.EngineServices.IsTaskInputLoggingEnabled;
+
         /// <summary>
         /// Returns true if a message of given importance should be logged because it is possible that a logger consuming it exists.
         /// </summary>
diff --git a/src/Shared/ToolsetElement.cs b/src/Shared/ToolsetElement.cs
index ff7d9685aa7..9902fd49a06 100644
--- a/src/Shared/ToolsetElement.cs
+++ b/src/Shared/ToolsetElement.cs
@@ -7,6 +7,7 @@
 using System.IO;
 using Microsoft.Build.Collections;
 using Microsoft.Build.Shared;
+using Microsoft.Build.Utilities;
 
 namespace Microsoft.Build.Evaluation
 {
@@ -15,7 +16,49 @@ namespace Microsoft.Build.Evaluation
     /// </summary>
     internal static class ToolsetConfigurationReaderHelpers
     {
+        /// <summary>
+        /// Lock for process wide ToolsetConfigurationSection section cache
+        /// </summary>
+        private static readonly object s_syncLock = new();
+
+        /// <summary>
+        /// Process wide ToolsetConfigurationSection section cache
+        /// </summary>
+        private static ToolsetConfigurationSection s_toolsetConfigurationSectionCache;
+        private static Configuration s_configurationOfCachedSection;
+
         internal static ToolsetConfigurationSection ReadToolsetConfigurationSection(Configuration configuration)
+        {
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_0))
+            {
+                if (configuration == null)
+                {
+                    return null;
+                }
+
+                lock (s_syncLock)
+                {
+                    // Cache 1st requested configuration section. In unit tests, different Configuration is provided for particular test cases.
+                    // During runtime, however, only MSBuild exe configuration file is provided to read toolset configuration from,
+                    //   and modifying MSBuild exe configuration during lifetime of msbuild nodes is neither expected nor supported.
+                    if (s_toolsetConfigurationSectionCache == null)
+                    {
+                        s_toolsetConfigurationSectionCache = GetToolsetConfigurationSection(configuration);
+                        s_configurationOfCachedSection = configuration;
+                    }
+
+                    return s_configurationOfCachedSection == configuration ?
+                        s_toolsetConfigurationSectionCache :
+                        GetToolsetConfigurationSection(configuration);
+                }
+            }
+            else
+            {
+                return GetToolsetConfigurationSection(configuration);
+            }
+        }
+
+        private static ToolsetConfigurationSection GetToolsetConfigurationSection(Configuration configuration)
         {
             ToolsetConfigurationSection configurationSection = null;
 
diff --git a/src/Shared/UnitTests/FileMatcher_Tests.cs b/src/Shared/UnitTests/FileMatcher_Tests.cs
index d8cf2eeed4c..471e1536b63 100644
--- a/src/Shared/UnitTests/FileMatcher_Tests.cs
+++ b/src/Shared/UnitTests/FileMatcher_Tests.cs
@@ -12,6 +12,7 @@
 using Microsoft.Build.Shared.FileSystem;
 using Xunit;
 using Xunit.Abstractions;
+using Microsoft.Build.Utilities;
 
 namespace Microsoft.Build.UnitTests
 {
@@ -1244,13 +1245,20 @@ public void IllegalPaths()
         [Fact]
         [PlatformSpecific(TestPlatforms.Windows)] // Nothing's too long for Unix
         [SkipOnTargetFramework(TargetFrameworkMonikers.Netcoreapp)]
-        public void IllegalTooLongPath()
+        public void IllegalTooLongPathOptOutWave17_0()
         {
-            string longString = new string('X', 500) + "*"; // need a wildcard to do anything
-            string[] result = FileMatcher.Default.GetFiles(@"c:\", longString);
+            using (var env = TestEnvironment.Create())
+            {
+                ChangeWaves.ResetStateForTests();
+                env.SetEnvironmentVariable("MSBUILDDISABLEFEATURESFROMVERSION", ChangeWaves.Wave17_0.ToString());
+                BuildEnvironmentHelper.ResetInstance_ForUnitTestsOnly();
 
-            Assert.Equal(longString, result[0]); // Does not throw
+                string longString = new string('X', 500) + "*"; // need a wildcard to do anything
+                string[] result = FileMatcher.Default.GetFiles(@"c:\", longString);
 
+                Assert.Equal(longString, result[0]); // Does not throw
+                ChangeWaves.ResetStateForTests();
+            }
             // Not checking that GetFileSpecMatchInfo returns the illegal-path flag,
             // not certain that won't break something; this fix is merely to avoid a crash.
         }
diff --git a/src/Shared/UnitTests/ObjectModelHelpers.cs b/src/Shared/UnitTests/ObjectModelHelpers.cs
index 9261b45785c..e647fd709c0 100644
--- a/src/Shared/UnitTests/ObjectModelHelpers.cs
+++ b/src/Shared/UnitTests/ObjectModelHelpers.cs
@@ -2019,6 +2019,65 @@ public void Dispose()
             }
         }
 
+        internal sealed class LoggingDirectoryCacheFactory : IDirectoryCacheFactory
+        {
+            public List<LoggingDirectoryCache> DirectoryCaches { get; } = new();
+
+            public IDirectoryCache GetDirectoryCacheForEvaluation(int evaluationId)
+            {
+                var directoryCache = new LoggingDirectoryCache(evaluationId);
+                DirectoryCaches.Add(directoryCache);
+                return directoryCache;
+            }
+        }
+
+        internal sealed class LoggingDirectoryCache : IDirectoryCache
+        {
+            internal int EvaluationId { get; }
+
+            public ConcurrentDictionary<string, int> ExistenceChecks { get; } = new();
+            public ConcurrentDictionary<string, int> Enumerations { get; } = new();
+
+            public LoggingDirectoryCache(int evaluationId)
+            {
+                EvaluationId = evaluationId;
+            }
+
+            public bool DirectoryExists(string path)
+            {
+                IncrementExistenceChecks(path);
+                return Directory.Exists(path);
+            }
+
+            public bool FileExists(string path)
+            {
+                IncrementExistenceChecks(path);
+                return File.Exists(path);
+            }
+
+            public IEnumerable<TResult> EnumerateDirectories<TResult>(string path, string pattern, FindPredicate predicate, FindTransform<TResult> transform)
+            {
+                IncrementEnumerations(path);
+                return Enumerable.Empty<TResult>();
+            }
+
+            public IEnumerable<TResult> EnumerateFiles<TResult>(string path, string pattern, FindPredicate predicate, FindTransform<TResult> transform)
+            {
+                IncrementEnumerations(path);
+                return Enumerable.Empty<TResult>();
+            }
+
+            private void IncrementExistenceChecks(string path)
+            {
+                ExistenceChecks.AddOrUpdate(path, p => 1, (p, c) => c + 1);
+            }
+
+            private void IncrementEnumerations(string path)
+            {
+                Enumerations.AddOrUpdate(path, p => 1, (p, c) => c + 1);
+            }
+        }
+
         internal class LoggingFileSystem : MSBuildFileSystemBase
         {
             private int _fileSystemCalls;
diff --git a/src/StringTools.UnitTests/SpanBasedStringBuilder_Tests.cs b/src/StringTools.UnitTests/SpanBasedStringBuilder_Tests.cs
index 9be63b4b714..086d684231b 100644
--- a/src/StringTools.UnitTests/SpanBasedStringBuilder_Tests.cs
+++ b/src/StringTools.UnitTests/SpanBasedStringBuilder_Tests.cs
@@ -96,6 +96,28 @@ public void ReferenceEqualsReturnsExpectedValue()
             internableString.ReferenceEquals(str).ShouldBeFalse();
         }
 
+        [Theory]
+        [InlineData("012345678")] // odd number of characters
+        [InlineData("0123456789")] // even number of characters
+        public void GetHashCodeIsStableRegardlessOfSpanLength(string testString)
+        {
+            int hashCode = new InternableString(testString).GetHashCode();
+
+            // Chop the string into 2-3 parts and verify that the hash code is unchanged.
+            for (int i = 0; i < testString.Length - 1; i++)
+            {
+                for (int j = i + 1; j < testString.Length; j++)
+                {
+                    SpanBasedStringBuilder stringBuilder = new SpanBasedStringBuilder();
+                    stringBuilder.Append(testString.Substring(0, i));
+                    stringBuilder.Append(testString.Substring(i, j - i));
+                    stringBuilder.Append(testString.Substring(j));
+                    InternableString internableString = new InternableString(stringBuilder);
+                    internableString.GetHashCode().ShouldBe(hashCode);
+                }
+            }
+        }
+
         [Theory]
         [MemberData(nameof(TestData))]
         public void AppendAppendsString(InterningTestData.TestDatum datum)
diff --git a/src/StringTools.UnitTests/StringTools.UnitTests.csproj b/src/StringTools.UnitTests/StringTools.UnitTests.csproj
index e11fc1d60ce..b48cd46cb93 100644
--- a/src/StringTools.UnitTests/StringTools.UnitTests.csproj
+++ b/src/StringTools.UnitTests/StringTools.UnitTests.csproj
@@ -1,4 +1,4 @@
-﻿<Project Sdk="Microsoft.NET.Sdk">
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <TargetFrameworks>$(RuntimeOutputTargetFrameworks)</TargetFrameworks>
     <PlatformTarget>$(RuntimeOutputPlatformTarget)</PlatformTarget>
@@ -12,6 +12,7 @@
 
   <ItemGroup>
     <PackageReference Include="Shouldly" />
+    <PackageReference Include="System.Net.Http" />
   </ItemGroup>
 
   <ItemGroup>
diff --git a/src/StringTools.UnitTests/WeakStringCache_Tests.cs b/src/StringTools.UnitTests/WeakStringCache_Tests.cs
index bddfc60917b..41d4d931c95 100644
--- a/src/StringTools.UnitTests/WeakStringCache_Tests.cs
+++ b/src/StringTools.UnitTests/WeakStringCache_Tests.cs
@@ -84,8 +84,8 @@ private void AddStringsWithSameHashCode(int numberOfStrings)
 
             for (int i = 0; i < numberOfStrings; i++)
             {
-                string strPart2 = "1" + String.Concat(Enumerable.Repeat("4428939786", i));
-                hashCodes[i] = AddString("Random string ", strPart2, (string cachedString) =>
+                string strPart2 = string.Concat(Enumerable.Repeat("100570862200", i + 2));
+                hashCodes[i] = AddString(string.Empty, strPart2, (string cachedString) =>
                 {
                     _cache.GetDebugInfo().ShouldBe(new WeakStringCache.DebugInfo()
                     {
diff --git a/src/StringTools/InternableString.cs b/src/StringTools/InternableString.cs
index ca8fa75ef48..15508eb6fea 100644
--- a/src/StringTools/InternableString.cs
+++ b/src/StringTools/InternableString.cs
@@ -265,6 +265,15 @@ public unsafe string ExpensiveConvertToString()
                         }
                     }
                 }
+
+                // The invariant that Length is the sum of span lengths is critical in this unsafe method.
+                // Violating it may lead to memory corruption and, since this code tends to run under a lock,
+                // to hangs caused by the lock getting orphaned. Attempt to detect that and throw now, 
+                // before the corruption causes further problems.
+                if (destPtr != resultPtr + Length)
+                {
+                    throw new InvalidOperationException($"Length of {Length} does not match the sum of span lengths of {destPtr - resultPtr}.");
+                }
             }
             return result;
         }
@@ -299,18 +308,23 @@ public override string ToString()
         }
 
         /// <summary>
-        /// Implements the simple yet very decently performing djb2 hash function (xor version).
+        /// Implements the simple yet very decently performing djb2-like hash function (xor version) as inspired by
+        /// https://github.com/dotnet/runtime/blob/6262ae8e6a33abac569ab6086cdccc470c810ea4/src/libraries/System.Private.CoreLib/src/System/String.Comparison.cs#L810-L840
         /// </summary>
         /// <returns>A stable hashcode of the string represented by this instance.</returns>
+        /// <remarks>
+        /// Unlike the BCL method, this implementation works only on two characters at a time to cut on the complexity with
+        /// characters that feed into the same operation but straddle multiple spans. Note that it must return the same value for
+        /// a given string regardless of how it's split into spans (e.g. { "AB" } and { "A", "B" } have the same hash code).
+        /// </remarks>
         public override unsafe int GetHashCode()
         {
-            int hashCode = 5381;
+            uint hash = (5381 << 16) + 5381;
+            bool hashedOddNumberOfCharacters = false;
+
             fixed (char* charPtr = _inlineSpan)
             {
-                for (int i = 0; i < _inlineSpan.Length; i++)
-                {
-                    hashCode = unchecked(hashCode * 33 ^ charPtr[i]);
-                }
+                hash = GetHashCodeHelper(charPtr, _inlineSpan.Length, hash, ref hashedOddNumberOfCharacters);
             }
             if (_spans != null)
             {
@@ -318,14 +332,68 @@ public override unsafe int GetHashCode()
                 {
                     fixed (char* charPtr = span.Span)
                     {
-                        for (int i = 0; i < span.Length; i++)
-                        {
-                            hashCode = unchecked(hashCode * 33 ^ charPtr[i]);
-                        }
+                        hash = GetHashCodeHelper(charPtr, span.Length, hash, ref hashedOddNumberOfCharacters);
                     }
                 }
             }
-            return hashCode;
+            return (int)(hash);
+        }
+
+        /// <summary>
+        /// Hashes a memory block specified by a pointer and length.
+        /// </summary>
+        /// <param name="charPtr">Pointer to the first character.</param>
+        /// <param name="length">Number of characters at <paramref name="charPtr"/>.</param>
+        /// <param name="hash">The running hash code.</param>
+        /// <param name="hashedOddNumberOfCharacters">True if the incoming <paramref name="hash"/> was calculated from an odd number of characters.</param>
+        /// <returns>The updated running hash code (not passed as a ref parameter to play nicely with JIT optimizations).</returns>
+        [MethodImpl(MethodImplOptions.AggressiveInlining)]
+        private static unsafe uint GetHashCodeHelper(char* charPtr, int length, uint hash, ref bool hashedOddNumberOfCharacters)
+        {
+            if (hashedOddNumberOfCharacters && length > 0)
+            {
+                // If the number of characters hashed so far is odd, the first character of the current block completes
+                // the calculation done with the last character of the previous block.
+                hash ^= BitConverter.IsLittleEndian ? ((uint)*charPtr << 16) : *charPtr;
+                length--;
+                charPtr++;
+                hashedOddNumberOfCharacters = false;
+            }
+
+            // The loop hashes two characters at a time.
+            uint* ptr = (uint*)charPtr;
+            while (length >= 2)
+            {
+                length -= 2;
+                hash = (RotateLeft(hash, 5) + hash) ^ *ptr;
+                ptr += 1;
+            }
+
+            if (length > 0)
+            {
+                hash = (RotateLeft(hash, 5) + hash) ^ (BitConverter.IsLittleEndian ? *((char*)ptr) : ((uint)*((char*)ptr) << 16));
+                hashedOddNumberOfCharacters = true;
+            }
+
+            return hash;
+        }
+
+        /// <summary>
+        /// Rotates an integer by the specified number of bits.
+        /// </summary>
+        /// <param name="value">The value to rotate.</param>
+        /// <param name="offset">The number of bits.</param>
+        /// <returns>The rotated value.</returns>
+        [MethodImpl(MethodImplOptions.AggressiveInlining)]
+        private static uint RotateLeft(uint value, int offset)
+        {
+#if NETCOREAPP
+            return System.Numerics.BitOperations.RotateLeft(value, offset);
+#else
+            // Copied from System\Numerics\BitOperations.cs in dotnet/runtime as the routine is not available on .NET Framework.
+            // The JIT recognized the pattern and generates efficient code, e.g. the rol instruction on x86/x64.
+            return (value << offset) | (value >> (32 - offset));
+#endif
         }
     }
 }
diff --git a/src/StringTools/StringTools.csproj b/src/StringTools/StringTools.csproj
index fef9909ce6f..93a4634ce01 100644
--- a/src/StringTools/StringTools.csproj
+++ b/src/StringTools/StringTools.csproj
@@ -20,17 +20,12 @@
 
   <PropertyGroup Condition="'$(TargetFramework)' == 'net35'">
     <AssemblyName>Microsoft.NET.StringTools.net35</AssemblyName>
-    <!-- Disable Fx install checks as we're building against jnm2's 3.5 reference assemblies -->
-    <BypassFrameworkInstallChecks>true</BypassFrameworkInstallChecks>
   </PropertyGroup>
 
   <ItemGroup Condition="'$(TargetFramework)' != 'net35'">
     <PackageReference Include="System.Memory" />
     <PackageReference Include="System.Runtime.CompilerServices.Unsafe" />
   </ItemGroup>
-  <ItemGroup>
-    <PackageReference Include="jnm2.ReferenceAssemblies.net35" PrivateAssets="All" />
-  </ItemGroup>
 
   <ItemGroup Condition="'$(TargetFramework)' == 'net35'">
     <Compile Remove="SpanBasedStringBuilder.cs" />
diff --git a/src/Tasks.UnitTests/CSharpParserUtilitites_Tests.cs b/src/Tasks.UnitTests/CSharpParserUtilitites_Tests.cs
index 8d438b418fc..7dbd018acc2 100644
--- a/src/Tasks.UnitTests/CSharpParserUtilitites_Tests.cs
+++ b/src/Tasks.UnitTests/CSharpParserUtilitites_Tests.cs
@@ -17,22 +17,28 @@ public void EmptyFile()
 
         // Simplest case of getting a fully-qualified class name from
         // a c# file.
-        [Fact]
-        public void Simple()
+        [Theory]
+        [InlineData("namespace MyNamespace { class MyClass {} }")]
+        [InlineData("namespace MyNamespace ; class MyClass {} ")] // file-scoped namespaces
+        public void Simple(string fileContents)
         {
-            AssertParse("namespace MyNamespace { class MyClass {} }", "MyNamespace.MyClass");
+            AssertParse(fileContents, "MyNamespace.MyClass");
         }
 
-        [Fact]
-        public void EmbeddedComment()
+        [Theory]
+        [InlineData("namespace /**/ MyNamespace /**/ { /**/ class /**/ MyClass/**/{}} //")]
+        [InlineData("namespace /**/ MyNamespace /**/ ; /**/ class /**/ MyClass/**/{} //")] // file-scoped namespaces
+        public void EmbeddedComment(string fileContents)
         {
-            AssertParse("namespace /**/ MyNamespace /**/ { /**/ class /**/ MyClass/**/{}} //", "MyNamespace.MyClass");
+            AssertParse(fileContents, "MyNamespace.MyClass");
         }
 
-        [Fact]
-        public void MinSpace()
+        [Theory]
+        [InlineData("namespace MyNamespace{class MyClass{}}")]
+        [InlineData("namespace MyNamespace;class MyClass{}")] // file-scoped namespaces
+        public void MinSpace(string fileContents)
         {
-            AssertParse("namespace MyNamespace{class MyClass{}}", "MyNamespace.MyClass");
+            AssertParse(fileContents, "MyNamespace.MyClass");
         }
 
         [Fact]
@@ -41,16 +47,20 @@ public void NoNamespace()
             AssertParse("class MyClass{}", "MyClass");
         }
 
-        [Fact]
-        public void SneakyComment()
+        [Theory]
+        [InlineData("/*namespace MyNamespace { */ class MyClass {} /* } */")]
+        [InlineData("/*namespace MyNamespace ; */ class MyClass {}")] // file-scoped namespaces
+        public void SneakyComment(string fileContents)
         {
-            AssertParse("/*namespace MyNamespace { */ class MyClass {} /* } */", "MyClass");
+            AssertParse(fileContents, "MyClass");
         }
 
-        [Fact]
-        public void CompoundNamespace()
+        [Theory]
+        [InlineData("namespace MyNamespace.Feline { class MyClass {} }")]
+        [InlineData("namespace MyNamespace.Feline ; class MyClass {} ")] // file-scoped namespaces
+        public void CompoundNamespace(string fileContents)
         {
-            AssertParse("namespace MyNamespace.Feline { class MyClass {} }", "MyNamespace.Feline.MyClass");
+            AssertParse(fileContents, "MyNamespace.Feline.MyClass");
         }
 
         [Fact]
@@ -71,16 +81,20 @@ public void NestedCompoundNamespace()
             AssertParse("namespace MyNamespace/**/.A{ namespace Feline . B {namespace Bovine.C {sealed class MyClass {} }} }", "MyNamespace.A.Feline.B.Bovine.C.MyClass");
         }
 
-        [Fact]
-        public void DoubleClass()
+        [Theory]
+        [InlineData("namespace MyNamespace{class Feline{}class Bovine}")]
+        [InlineData("namespace MyNamespace;class Feline{}class Bovine")] // file-scoped namespaces
+        public void DoubleClass(string fileContents)
         {
-            AssertParse("namespace MyNamespace{class Feline{}class Bovine}", "MyNamespace.Feline");
+            AssertParse(fileContents, "MyNamespace.Feline");
         }
 
-        [Fact]
-        public void EscapedKeywordClass()
+        [Theory]
+        [InlineData("namespace MyNamespace{class @class{}}")]
+        [InlineData("namespace MyNamespace;class @class{}")] // file-scoped namespaces
+        public void EscapedKeywordClass(string fileContents)
         {
-            AssertParse("namespace MyNamespace{class @class{}}", "MyNamespace.class");
+            AssertParse(fileContents, "MyNamespace.class");
         }
 
         [Fact]
@@ -90,7 +104,7 @@ public void LeadingUnderscore()
         }
 
         [Fact]
-        public void SkipInterveningNamespaces()
+        public void InterveningNamespaces()
         {
             AssertParse("namespace MyNamespace { namespace XXX {} class MyClass {} }", "MyNamespace.MyClass");
         }
@@ -174,10 +188,12 @@ public void AssemblyAttributeBool()
             AssertParse("[assembly :AssemblyDelaySign(false)] namespace i { class a { } }", "i.a");
         }
 
-        [Fact]
-        public void AssemblyAttributeString()
+        [Theory]
+        [InlineData("[assembly :MyString(\"namespace\")] namespace i { class a { } }")]
+        [InlineData("[assembly :MyString(\"namespace\")] namespace i; class a { }")]
+        public void AssemblyAttributeString(string fileContents)
         {
-            AssertParse("[assembly :MyString(\"namespace\")] namespace i { class a { } }", "i.a");
+            AssertParse(fileContents, "i.a");
         }
 
         [Fact]
@@ -253,19 +269,20 @@ public void ClassAttributeStringIsCloseScope()
             AssertParse("namespace i { [MyString(\"}\")] class a { } }", "i.a");
         }
 
-        [Fact]
-        public void NameSpaceStructEnum()
+        [Theory]
+        [InlineData("namespace n { public struct s {  enum e {} } class c {} }")]
+        [InlineData("namespace n; public struct s {  enum e {} } class c {}")] // file-scoped namespace
+        public void NameSpaceStructEnum(string fileContents)
         {
-            AssertParse("namespace n { public struct s {  enum e {} } class c {} }", "n.c");
+            AssertParse(fileContents, "n.c");
         }
 
         [Fact]
         public void PreprocessorControllingTwoNamespaces()
         {
             // This works by coincidence since preprocessor directives are currently ignored.
-            AssertParse
-            (
-                @"
+            // Note: If the condition were #if (true), the result would still be n1.c
+            AssertParse(@"
 #if (false)
 namespace n1
 #else
@@ -275,29 +292,57 @@ namespace n2
                 ", "n2.c");
         }
 
-        [Fact]
-        public void PreprocessorControllingTwoNamespacesWithInterveningKeyword()
+        /// <summary>
+        /// The test "PreprocessorControllingTwoNamespaces" reveals that preprocessor directives are ignored.
+        /// This means that in the case of many namespaces before curly braces (despite that being invalid C#)
+        /// the last namespace would win. This test explicitly tests that.
+        /// </summary>
+        [Theory]
+        [InlineData(@"
+namespace n1
+    namespace n2
+    namespace n3
+    namespace n4
+    { class c { } }", "n4.c")]
+        [InlineData(@"
+namespace n1;
+namespace n2;
+namespace n3;
+namespace n4;
+class c {} ", "n1.n2.n3.n4.c")]
+        public void MultipleNamespaces_InvalidCSharp(string fileContents, string expected)
         {
             // This works by coincidence since preprocessor directives are currently ignored.
-            AssertParse
-            (
-                @"
+            AssertParse(fileContents, expected);
+        }
+
+        /// <summary>
+        /// Note: Preprocessor conditions are not implemented
+        /// </summary>
+        [Theory]
+        [InlineData(@"
 #if (false)
 namespace n1
 #else
 using a=b;
 namespace n2
 #endif    
-{ class c {} }
-                ", "n2.c");
+{ class c {} }", "n2.c")]
+        [InlineData(@"
+#if (false)
+namespace n1;
+#else
+using a=b;
+namespace n2;
+#endif    
+{ class c {} }", "n1.n2.c")]
+        public void PreprocessorControllingTwoNamespacesWithInterveningKeyword(string fileContents, string expected)
+        {
+            AssertParse(fileContents, expected);
         }
 
-        [Fact]
-        public void Preprocessor()
-        {
-            AssertParse
-            (
-                @"
+        [Theory]
+        [InlineData(@"
 #if MY_CONSTANT                
 namespace i 
 {
@@ -307,8 +352,19 @@ class a
     }     
     #endregion
 }
-#endif // MY_CONSTANT
-                ", "i.a");
+#endif // MY_CONSTANT ")]
+        [InlineData(@"
+#if MY_CONSTANT                
+namespace i;
+    #region Put the class in a region
+    class a 
+    {
+    }     
+    #endregion
+#endif // MY_CONSTANT")]
+        public void Preprocessor(string fileContents)
+        {
+            AssertParse(fileContents, "i.a");
         }
 
         [Fact(Skip = "Preprocessor is not yet implemented.")]
@@ -333,16 +389,18 @@ namespace i
 
 
 
-        [Fact]
-        public void Regress_Mutation_SingleLineCommentsShouldBeIgnored()
-        {
-            AssertParse
-            (
-                @"
+        [Theory]
+        [InlineData(@"
 namespace n2
 // namespace n1
-{ class c {} }
-                ", "n2.c");
+{ class c {} }")]
+        [InlineData(@"
+namespace n2;
+// namespace n1
+class c {}")]
+        public void Regress_Mutation_SingleLineCommentsShouldBeIgnored(string fileContents)
+        {
+            AssertParse(fileContents, "n2.c");
         }
 
         /*
diff --git a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
index b782457b344..98ae00b9da8 100644
--- a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
+++ b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
@@ -18,6 +18,7 @@
   <ItemGroup>
     <PackageReference Include="System.Security.Principal.Windows" />
     <PackageReference Include="Shouldly" />
+    <PackageReference Include="System.Net.Http" />
 
     <ProjectReference Include="..\Build\Microsoft.Build.csproj" />
     <ProjectReference Include="..\Framework\Microsoft.Build.Framework.csproj" />
@@ -25,14 +26,13 @@
     <ProjectReference Include="..\Tasks\Microsoft.Build.Tasks.csproj" />
     <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
     <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
-    <ProjectReference Include="..\Samples\PortableTask\PortableTask.csproj" ReferenceOutputAssembly="false" Private="false" SetTargetFramework="TargetFramework=netstandard1.3" />
+    <ProjectReference Include="..\Samples\PortableTask\PortableTask.csproj" ReferenceOutputAssembly="false" Private="false" SetTargetFramework="TargetFramework=netstandard2.0" />
   </ItemGroup>
 
   <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
     <Reference Include="System" />
     <Reference Include="System.Core" />
     <Reference Include="System.IO.Compression" />
-    <Reference Include="System.Net.Http" />
     <Reference Include="System.Xaml" />
     <Reference Include="System.Xml" />
     <Reference Include="PresentationFramework" Condition="$([MSBuild]::IsOSPlatform('windows'))" />
diff --git a/src/Tasks.UnitTests/XslTransformation_Tests.cs b/src/Tasks.UnitTests/XslTransformation_Tests.cs
index 5fc54d6dfcf..785bab86be5 100644
--- a/src/Tasks.UnitTests/XslTransformation_Tests.cs
+++ b/src/Tasks.UnitTests/XslTransformation_Tests.cs
@@ -13,6 +13,7 @@
 using System.Text.RegularExpressions;
 using System.Xml.Xsl;
 using System.Xml;
+using Shouldly;
 using Xunit;
 
 namespace Microsoft.Build.UnitTests
@@ -386,7 +387,7 @@ public void OutputTest()
         /// Setting correct "Parameter" parameters for Xsl.
         /// </summary>
         [Fact]
-        public void XsltParamatersCorrect()
+        public void XsltParametersCorrect()
         {
             string dir;
             TaskItem[] xmlPaths;
@@ -780,6 +781,39 @@ public void OutputFileCannotBeWritten()
             CleanUp(dir);
         }
 
+        /// <summary>
+        /// The files are not kept locked by the task
+        /// </summary>
+        [Fact]
+        public void InputFilesDontLock()
+        {
+            string dir;
+            TaskItem[] xmlPaths;
+            TaskItem xslPath;
+            TaskItem[] outputPaths;
+            MockEngine engine;
+            Prepare(out dir, out xmlPaths, out xslPath, out _, out outputPaths, out _, out _, out engine);
+
+            // Test with files
+            {
+                XslTransformation t = new XslTransformation();
+                t.BuildEngine = engine;
+                t.XmlInputPaths = xmlPaths;
+                t.XslInputPath = xslPath;
+                t.OutputPaths = outputPaths;
+
+                t.Execute().ShouldBeTrue();
+                string xmlInputPath = xmlPaths[0].ItemSpec;
+                File.Delete(xmlInputPath); // this should succeed (file not locked by task)
+                File.Exists(xmlInputPath).ShouldBeFalse();
+                string xslInputPath = xslPath.ItemSpec;
+                File.Delete(xslInputPath); // this should succeed (file not locked by task)
+                File.Exists(xslInputPath).ShouldBeFalse();
+            }
+
+            CleanUp(dir);
+        }
+
         /// <summary>
         /// XslDocument that throws runtime exception.
         /// </summary>
diff --git a/src/Tasks/AssemblyDependency/ReferenceTable.cs b/src/Tasks/AssemblyDependency/ReferenceTable.cs
index 196a70b8747..3b214c55a9f 100644
--- a/src/Tasks/AssemblyDependency/ReferenceTable.cs
+++ b/src/Tasks/AssemblyDependency/ReferenceTable.cs
@@ -741,13 +741,8 @@ out string redistName
         /// </summary>
         private static void TryConvertToAssemblyName(string itemSpec, string fusionName, ref AssemblyNameExtension assemblyName)
         {
-            // FusionName is used if available.
-            string finalName = fusionName;
-            if (string.IsNullOrEmpty(finalName))
-            {
-                // Otherwise, its itemSpec.
-                finalName = itemSpec;
-            }
+            // FusionName is used if available; otherwise use itemspec.
+            string finalName = string.IsNullOrEmpty(fusionName) ? itemSpec : fusionName;
 
             bool pathRooted = false;
             try
diff --git a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
index 7ed21691a98..2cea34c71bb 100644
--- a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
+++ b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
@@ -1418,7 +1418,7 @@ private MessageImportance ChooseReferenceLoggingImportance(Reference reference)
         private void LogInputs()
         {
             MessageImportance importance = MessageImportance.Low;
-            if (Traits.Instance.EscapeHatches.LogTaskInputs || Silent || !Log.LogsMessagesOfImportance(importance))
+            if (Silent || Log.IsTaskInputLoggingEnabled || !Log.LogsMessagesOfImportance(importance))
             {
                 // the inputs will be logged automatically anyway, avoid duplication in the logs
                 return;
diff --git a/src/Tasks/CSharpParserUtilities.cs b/src/Tasks/CSharpParserUtilities.cs
index b0f343dd06f..facac7734c6 100644
--- a/src/Tasks/CSharpParserUtilities.cs
+++ b/src/Tasks/CSharpParserUtilities.cs
@@ -79,7 +79,16 @@ private static ExtractedClassName Extract(CSharpTokenizer tokens)
                 {
                     if (state.ResolvingNamespace)
                     {
-                        if (t.InnerText == ".")
+                        // If we see a ';' while resolving a namespace, we assume it's a file-scoped namespace
+                        // namespace foo.bar; <- At this point in code, we're at the semicolon.
+                        // class test { ... }
+                        // https://github.com/dotnet/csharplang/blob/088f20b6f9b714a7b68f6d792d54def0f3b3057e/proposals/csharp-10.0/file-scoped-namespaces.md
+                        if (t.InnerText == ";")
+                        {
+                            state.PushNamespacePart(state.Namespace);
+                            state.Reset();
+                        }
+                        else if (t.InnerText == ".")
                         {
                             state.Namespace += ".";
                         }
diff --git a/src/Tasks/CreateItem.cs b/src/Tasks/CreateItem.cs
index cb7bd833620..7b4bfa75764 100644
--- a/src/Tasks/CreateItem.cs
+++ b/src/Tasks/CreateItem.cs
@@ -31,14 +31,16 @@ public class CreateItem : TaskExtension
         /// A typical input: "metadataname1=metadatavalue1", "metadataname2=metadatavalue2", ...
         /// </summary>
         /// <remarks>
-        /// The fact that this is a string[] makes the following illegal:
-        ///     <CreateItem
-        ///         AdditionalMetadata="TargetPath=@(OutputPathItem)" />
-        /// The engine fails on this because it doesn't like item lists being concatenated with string
-        /// constants when the data is being passed into an array parameter.  So the workaround is to 
-        /// write this in the project file:
-        ///     <CreateItem
-        ///         AdditionalMetadata="@(OutputPathItem->'TargetPath=%(Identity)')" />
+        ///   <format type="text/markdown"><![CDATA[
+        ///     ## Remarks
+        ///     The fact that this is a `string[]` makes the following illegal:
+        ///         `<CreateItem AdditionalMetadata="TargetPath=@(OutputPathItem)" />`
+        ///     The engine fails on this because it doesn't like item lists being concatenated with string
+        ///     constants when the data is being passed into an array parameter.  So the workaround is to 
+        ///     write this in the project file:
+        ///         `<CreateItem AdditionalMetadata="@(OutputPathItem-&gt;'TargetPath=%(Identity)')" />`
+        ///     ]]>
+        ///   </format>
         /// </remarks>
         public string[] AdditionalMetadata { get; set; }
 
diff --git a/src/Tasks/CreateProperty.cs b/src/Tasks/CreateProperty.cs
index 2d97dc4b6d0..9631f5cb80e 100644
--- a/src/Tasks/CreateProperty.cs
+++ b/src/Tasks/CreateProperty.cs
@@ -22,8 +22,8 @@ public class CreateProperty : TaskExtension
         ///             Output TaskParameter="Value" PropertyName="MyTargetsToBuild"
         ///         /CreateProperty
         /// 
-        /// We need to respect the semicolon that he put in the value, and need to treat
-        /// this exactly as if he had done:
+        /// We need to respect the semicolon that they put in the value, and need to treat
+        /// this exactly as if they had done:
         /// 
         ///         PropertyGroup
         ///             MyTargetsToBuild="Clean;Build"
diff --git a/src/Tasks/FileState.cs b/src/Tasks/FileState.cs
index 6545558ff30..af2e2f29897 100644
--- a/src/Tasks/FileState.cs
+++ b/src/Tasks/FileState.cs
@@ -93,7 +93,7 @@ public FileDirInfo(string filename)
                     // there is no disk in drive A:, please insert one.  We don't want that. 
                     // SetErrorMode will let us disable this, but we should set the error
                     // mode back, since this may have wide-ranging effects.
-                    oldMode = NativeMethodsShared.SetErrorMode(1 /* ErrorModes.SEM_FAILCRITICALERRORS */);
+                    NativeMethodsShared.SetThreadErrorMode(1 /* ErrorModes.SEM_FAILCRITICALERRORS */, out oldMode);
                 }
 
                 try
@@ -174,7 +174,7 @@ public FileDirInfo(string filename)
                     // Reset the error mode on Windows
                     if (NativeMethodsShared.IsWindows)
                     {
-                        NativeMethodsShared.SetErrorMode(oldMode);
+                        NativeMethodsShared.SetThreadErrorMode(oldMode, out _);
                     }
                 }
             }
diff --git a/src/Tasks/Hash.cs b/src/Tasks/Hash.cs
index c822fa90f90..81699764e51 100644
--- a/src/Tasks/Hash.cs
+++ b/src/Tasks/Hash.cs
@@ -11,11 +11,11 @@ namespace Microsoft.Build.Tasks
 {
     /// <summary>
     /// Generates a hash of a given ItemGroup items. Metadata is not considered in the hash.
+    /// </summary>
     /// <remarks>
     /// Currently uses SHA1. Implementation subject to change between MSBuild versions. Not
     /// intended as a cryptographic security measure, only uniqueness between build executions.
     /// </remarks>
-    /// </summary>
     public class Hash : TaskExtension
     {
         private const char ItemSeparatorCharacter = '\u2028';
diff --git a/src/Tasks/MSBuild.cs b/src/Tasks/MSBuild.cs
index 0d5fe24e603..6bbc68964b3 100644
--- a/src/Tasks/MSBuild.cs
+++ b/src/Tasks/MSBuild.cs
@@ -55,14 +55,16 @@ private enum SkipNonexistentProjectsBehavior
         /// A typical input: "propname1=propvalue1", "propname2=propvalue2", "propname3=propvalue3".
         /// </summary>
         /// <remarks>
-        /// The fact that this is a string[] makes the following illegal:
-        ///     <MSBuild
-        ///         Properties="TargetPath=@(OutputPathItem)" />
-        /// The engine fails on this because it doesn't like item lists being concatenated with string
-        /// constants when the data is being passed into an array parameter.  So the workaround is to 
-        /// write this in the project file:
-        ///     <MSBuild
-        ///         Properties="@(OutputPathItem->'TargetPath=%(Identity)')" />
+        ///   <format type="text/markdown"><![CDATA[
+        ///     ## Remarks
+        ///     The fact that this is a `string[]` makes the following illegal:
+        ///         `<MSBuild Properties="TargetPath=@(OutputPathItem)" />`
+        ///     The engine fails on this because it doesn't like item lists being concatenated with string
+        ///     constants when the data is being passed into an array parameter.  So the workaround is to 
+        ///     write this in the project file:
+        ///         `<MSBuild Properties="@(OutputPathItem-&gt;'TargetPath=%(Identity)')" />`
+        ///     ]]>
+        ///   </format>
         /// </remarks>
         public string[] Properties { get; set; }
 
diff --git a/src/Tasks/ManifestUtil/SecurityUtil.cs b/src/Tasks/ManifestUtil/SecurityUtil.cs
index cf4b7cdebe7..d74182f6ec8 100644
--- a/src/Tasks/ManifestUtil/SecurityUtil.cs
+++ b/src/Tasks/ManifestUtil/SecurityUtil.cs
@@ -572,7 +572,11 @@ public static void SignFile(string certPath, SecureString certPassword, Uri time
         private static bool UseSha256Algorithm(X509Certificate2 cert)
         {
             Oid oid = cert.SignatureAlgorithm;
-            return string.Equals(oid.FriendlyName, "sha256RSA", StringComparison.OrdinalIgnoreCase);
+            // Issue 6732: Clickonce does not support sha384/sha512 file hash so we default to sha256 
+            // for certs with that signature algorithm.
+            return string.Equals(oid.FriendlyName, "sha256RSA", StringComparison.OrdinalIgnoreCase) ||
+                   string.Equals(oid.FriendlyName, "sha384RSA", StringComparison.OrdinalIgnoreCase) ||
+                   string.Equals(oid.FriendlyName, "sha512RSA", StringComparison.OrdinalIgnoreCase);
         }
 
         /// <summary>
diff --git a/src/Tasks/Microsoft.Build.Tasks.csproj b/src/Tasks/Microsoft.Build.Tasks.csproj
index e5418ee4bad..485e5d33714 100644
--- a/src/Tasks/Microsoft.Build.Tasks.csproj
+++ b/src/Tasks/Microsoft.Build.Tasks.csproj
@@ -1,4 +1,4 @@
-﻿<Project Sdk="Microsoft.NET.Sdk">
+<Project Sdk="Microsoft.NET.Sdk">
 
   <Import Project="..\Shared\FileSystemSources.proj" />
   <Import Project="..\Shared\DebuggingSources.proj" />
@@ -15,7 +15,7 @@
     <IsPackable>true</IsPackable>
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which implements the commonly used tasks of MSBuild.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
-    <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">partial</ApplyNgenOptimization>
+    <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">full</ApplyNgenOptimization>
   </PropertyGroup>
 
   <ItemGroup>
@@ -968,10 +968,11 @@
   <!-- For perf, do not add more references (that will be loaded in common scenarios) without good reason -->
   <!-- ==========================================================================================-->
   <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
+    <PackageReference Include="System.Net.Http" />
+    
     <Reference Include="System" />
     <Reference Include="System.Core" />
     <Reference Include="System.IO.Compression" />
-    <Reference Include="System.Net.Http" />
     <Reference Include="System.Reflection" />
     <Reference Include="System.Runtime.Serialization" />
     <!-- Needed by GenerateResource's ResXResourceReader: UNDONE: When CLR has moved this type to improve layering, remove this reference -->
@@ -988,6 +989,8 @@
     <ProjectReference Include="..\StringTools\StringTools.csproj" />
   </ItemGroup>
   <ItemGroup>
+    <PackageReference Include="Microsoft.IO.Redist" Condition="'$(FeatureMSIORedist)' == 'true'" />
+
     <PackageReference Include="System.Collections.Immutable" />
     <PackageReference Include="System.Resources.Extensions" />
   </ItemGroup>
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 8854b0cd156..2847dcd30d7 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -1615,11 +1615,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     ======================================================================================
   -->
 
-  <!-- Managed projects need to have PlatformTarget set for SetPlatform negotiation. Default to $(Platform), which is AnyCPU by default. -->
   <PropertyGroup>
-    <PlatformTarget Condition="'$(EnableDynamicPlatformResolution)' == 'true' and '$(PlatformTarget)' == ''
-                                and '$(MSBuildProjectExtension)' != '.vcxproj' and '$(MSBuildProjectExtension)' != '.nativeproj'">$(Platform)</PlatformTarget>
-
     <UseDefaultPlatformLookupTables Condition="'$(UseDefaultPlatformLookupTables)' == ''">true</UseDefaultPlatformLookupTables>
   </PropertyGroup>
 
@@ -1642,12 +1638,6 @@ Copyright (C) Microsoft Corporation. All rights reserved.
                                               Condition="'%(_MSBuildProjectReferenceExistent.SkipGetPlatformProperties)' != 'true'"/>
     </ItemGroup>
 
-    <!-- Managed Platform "source of truth" is $(PlatformTarget). For cpp it's $(Platform) -->
-    <PropertyGroup>
-      <CurrentPlatform>$(PlatformTarget)</CurrentPlatform>
-      <CurrentPlatform Condition="'$(MSBuildProjectExtension)' == '.vcxproj' or '$(MSBuildProjectExtension)' == '.nativeproj'">$(Platform)</CurrentPlatform>
-    </PropertyGroup>
-
     <!-- Assign default PlatformLookupTables when doing Managed <-> Unmanaged hops -->
     <ItemGroup>
       <!-- If we're looking at a c++ project from a managed project, map managed platforms to native platforms. -->
@@ -1663,7 +1653,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     </ItemGroup>
 
     <GetCompatiblePlatform AnnotatedProjects="@(_ProjectReferencePlatformPossibilities)"
-                           CurrentProjectPlatform="$(CurrentPlatform)"
+                           CurrentProjectPlatform="$(Platform)"
                            PlatformLookupTable="$(PlatformLookupTable)"
                            Condition="'@(_ProjectReferencePlatformPossibilities)' != ''">
       <Output ItemName="_ProjectsWithPlatformAssignment" TaskParameter="AssignedProjectsWithPlatform" />
@@ -1675,13 +1665,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ItemGroup Condition="'@(_ProjectsWithPlatformAssignment)' != ''">
       <ProjectsWithNearestPlatform Include="@(_ProjectsWithPlatformAssignment)"/>
       <ProjectsWithNearestPlatform Condition="'@(ProjectsWithNearestPlatform)' == '%(Identity)' and '%(ProjectsWithNearestPlatform.NearestPlatform)' != ''">
-        <SetPlatform>PlatformTarget=%(ProjectsWithNearestPlatform.NearestPlatform)</SetPlatform>
-        <SetPlatform Condition="'%(ProjectsWithNearestPlatform.IsVcxOrNativeProj)' == 'true'">Platform=%(ProjectsWithNearestPlatform.NearestPlatform)</SetPlatform>
+        <SetPlatform>Platform=%(ProjectsWithNearestPlatform.NearestPlatform)</SetPlatform>
       </ProjectsWithNearestPlatform>
 
+      <!-- When GetCompatiblePlatform fails to assign NearestPlatform, undefine Platform and let that project build "on its own" -->
       <ProjectsWithNearestPlatform Condition="'@(ProjectsWithNearestPlatform)' == '%(Identity)' and '%(ProjectsWithNearestPlatform.NearestPlatform)' == ''">
-        <UndefineProperties Condition="'%(ProjectsWithNearestPlatform.IsVcxOrNativeProj)' == 'true'">%(ProjectsWithNearestPlatform.UndefineProperties);Platform</UndefineProperties>
-        <UndefineProperties Condition="'%(ProjectsWithNearestPlatform.IsVcxOrNativeProj)' != 'true'">%(ProjectsWithNearestPlatform.UndefineProperties);PlatformTarget</UndefineProperties>
+        <UndefineProperties>%(ProjectsWithNearestPlatform.UndefineProperties);Platform</UndefineProperties>
       </ProjectsWithNearestPlatform>
 
       <_MSBuildProjectReferenceExistent Remove="@(_MSBuildProjectReferenceExistent)" Condition="'%(_MSBuildProjectReferenceExistent.SkipGetPlatformProperties)' != 'true'"/>
@@ -1941,13 +1930,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     ============================================================
                                     GetTargetFrameworkProperties
 
-    Overrridden by cross-targeting projects to return the set of
-    properties (in the form "key1=value1;...keyN=valueN") needed
-    to build it with the best target for the referring project's
-    target framework.
-
-    The referring project's $(TargetFrameworkMoniker) is passed
-    in as $(ReferringTargetFramework)
+    OBSOLETE: present only for theoretical backward compatibility.
   -->
   <Target Name="GetTargetFrameworkProperties" />
 
@@ -3878,7 +3861,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
     <PropertyGroup>
       <_ALExeToolPath>$(TargetFrameworkSDKToolsDirectory)</_ALExeToolPath>
-      <_ALExeToolPath Condition="'$(PlatformTarget)' == 'x64'">$(TargetFrameworkSDKToolsDirectory)$(PlatformTarget)\</_ALExeToolPath>
+      <_ALExeToolPath Condition="'$(PlatformTarget)' == 'x64' and !$(_ALExeToolPath.EndsWith('x64\'))">$(TargetFrameworkSDKToolsDirectory)x64\</_ALExeToolPath>
     </PropertyGroup>
 
     <MakeDir
@@ -4843,10 +4826,12 @@ Copyright (C) Microsoft Corporation. All rights reserved.
          not be considered up to date, so touch this marker file that is considered an
          input to projects that reference this one. -->
     <Touch Files="@(CopyUpToDateMarker)"
-           AlwaysCreate="true"
-           Condition="'@(ReferencesCopiedInThisBuild)' != '' and '$(WroteAtLeastOneFile)' == 'true'">
-        <Output TaskParameter="TouchedFiles" ItemName="FileWrites" />
-    </Touch>
+      AlwaysCreate="true"
+      Condition="'@(ReferencesCopiedInThisBuild)' != '' and '$(WroteAtLeastOneFile)' == 'true'" />
+
+    <ItemGroup>
+      <FileWrites Include="@(CopyUpToDateMarker)" />
+    </ItemGroup>
 
   </Target>
 
diff --git a/src/Tasks/Resources/xlf/Strings.cs.xlf b/src/Tasks/Resources/xlf/Strings.cs.xlf
index 4dffc40b6a4..fc9e3d05a39 100644
--- a/src/Tasks/Resources/xlf/Strings.cs.xlf
+++ b/src/Tasks/Resources/xlf/Strings.cs.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Zvolí se možnost AnyCPU jako výchozí.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">Projekt {0} se sestaví s platformou: {1}.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">Bylo nalezeno mapování {0}={1} v dané vyhledávací tabulce: {2}.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: PlatformLookupTable {0} nemá platný formát a nedá se použít. Formát by měl být A=B;C=D.</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Analyzovaná vyhledávací tabulka: {0}</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: Nešlo určit, jak by se mělo sestavit {0}. Projekt se sestaví bez sady vlastností platformy.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution je true, ale odkazovaný projekt {0} nemá nastavená metadata pro platformy. Sestaví se bez zadané platformy.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference a aktuální projekt mají stejnou platformu.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.de.xlf b/src/Tasks/Resources/xlf/Strings.de.xlf
index b2967c6f62b..f8323176201 100644
--- a/src/Tasks/Resources/xlf/Strings.de.xlf
+++ b/src/Tasks/Resources/xlf/Strings.de.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Standardmäßig wird AnyCPU ausgewählt.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">Das Projekt "{0}" wird mit der Plattform "{1}" erstellt.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">Die Zuordnung "{0}" ="{1}" wurde in der angegebenen Nachschlagetabelle gefunden: "{2}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: Das PlatformLookupTable "{0}" weist ein ungültiges Format auf und wird nicht verwendet. Das Format muss „A=B;C=D“ sein.</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Nachschlagetabelle analysiert:"{0}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: Es konnte nicht ermittelt werden, als was "{0}" erstellt werden soll. Das Projekt wird erstellt ohne eine festgelegte Plattformeigenschaft.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution ist "true". Das referenzierte Projekt "{0}" enthält jedoch keine Metadaten für "Platforms". Es wird ohne eine angegebene Plattform erstellt.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference und das aktuelle Projekt haben die gleiche Plattform.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.es.xlf b/src/Tasks/Resources/xlf/Strings.es.xlf
index f192095b546..b8c5ecc2222 100644
--- a/src/Tasks/Resources/xlf/Strings.es.xlf
+++ b/src/Tasks/Resources/xlf/Strings.es.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Se elige AnyCPU de manera predeterminada.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">El proyecto "{0}" se compilará con la plataforma "{1}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">Se ha encontrado la asignación "{0}" = "{1}" en la tabla de búsqueda especificada "{2}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: El valor PlatformLookupTable "{0}" tiene un formato no válido y no se usará. El formato debe ser "A" = "B"; C = D".</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Tabla de búsqueda analizada: "{0}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: No se pudo determinar cómo se debe compilar "{0}". El proyecto se compilará sin el conjunto de propiedades Platform.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution es true, pero el proyecto al que se hace referencia, "{0}", no tiene establecido ningún conjunto de metadatos "Platforms". Se compilará sin una plataforma especificada.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference y el proyecto actual tienen la misma plataforma.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.fr.xlf b/src/Tasks/Resources/xlf/Strings.fr.xlf
index 227e4e0ada5..13ea194a499 100644
--- a/src/Tasks/Resources/xlf/Strings.fr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.fr.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Choisissez AnyCPU par défaut.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">Le projet «{0}» sera généré avec la plateforme : «{1}».</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">Mappage trouvé '{0}' = '{1}’ dans la table de correspondances spécifiée : '{2}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: Le format de PlatformLookupTable «{0}» n’est pas valide et ne sera pas utilisé. Le format doit être 'A=B;C=D'.</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Table de recherche connexes : '{0}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: Impossible de déterminer le type de «{0}» devrait être généré. Le projet sera généré sans la propriété Platform définie.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution a la valeur true, mais le projet référencé '{0}' n’a pas de métadonnées ’Platforms’ définies. Il sera généré sans une plateforme spécifiée.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference et le projet actuel ont la même plateforme.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.it.xlf b/src/Tasks/Resources/xlf/Strings.it.xlf
index c9de2ea77a7..a88e7c3eb65 100644
--- a/src/Tasks/Resources/xlf/Strings.it.xlf
+++ b/src/Tasks/Resources/xlf/Strings.it.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Scegliere AnyCPU per impostazione predefinita.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">Il progetto '{0}' verrà compilato con la piattaforma: '{1}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">È stato trovato il mapping '{0}'='{1}' nella tabella di ricerca specificata: '{2}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: il formato di PlatformLookupTable '{0}' non è valido e non verrà utilizzato. Il formato deve essere 'A=B;C=D'.</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Tabella di ricerca analizzata: '{0}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: impossibile determinare come deve essere compilato '{0}'. Il progetto verrà compilato senza l’insieme di proprietà Platform.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution è true ma il progetto di riferimento '{0}' non ha un set di metadati 'Platforms'. Verrà compilato senza una piattaforma specificata.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference e il progetto corrente hanno la stessa piattaforma.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.ja.xlf b/src/Tasks/Resources/xlf/Strings.ja.xlf
index 505b8abd5d6..72cf4592826 100644
--- a/src/Tasks/Resources/xlf/Strings.ja.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ja.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">既定で AnyCPU を選択します。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">プロジェクト '{0}' はプラットフォームを使用してビルドされます: '{1}'。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">指定されたルックアップ テーブルでマッピング '{0}'='{1}' が見つかりました: '{2}'。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: PlatformLookupTable '{0}' は無効な形式であるため使用されません。この形式は 'A=B;C=D' である必要があります。C = D '。</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">解析済み参照テーブル:'{0}'。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: どの '{0}' をビルドする必要があるか特定できませんでした。プロジェクトは、プラットフォーム プロパティの設定なしでビルドされます。</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution は true ですが、参照対象プロジェクト '{0}' に 'プラットフォーム' メタデータが設定されていません。これは、指定されたプラットフォームなしでビルドされます。</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference と現在のプロジェクトに同じプラットフォームがあります。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.ko.xlf b/src/Tasks/Resources/xlf/Strings.ko.xlf
index 8f3abe83e5e..f856969c0a1 100644
--- a/src/Tasks/Resources/xlf/Strings.ko.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ko.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">기본적으로 AnyCPU를 선택합니다.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">'{0}' 프로젝트는 '{1}' 플랫폼으로 빌드됩니다.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">지정된 조회 테이블 '{2}'에서 매핑 '{0}'='{1}'을(를) 찾았습니다.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: PlatformLookupTable '{0}'의 형식이 잘못되어 사용되지 않습니다. 형식은 'A=B;C=D'여야 합니다.</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">구문 분석된 조회 테이블: '{0}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: 빌드해야 하는 '{0}'을(를) 결정할 수 없습니다. 프로젝트는 Platform 속성을 설정하지 않고 빌드됩니다.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution이 true이지만 참조된 프로젝트 '{0}'에 '플랫폼' 메타데이터 세트가 없습니다. 지정된 플랫폼 없이 구축됩니다.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference와 현재 프로젝트는 동일한 플랫폼을 가지고 있습니다.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.pl.xlf b/src/Tasks/Resources/xlf/Strings.pl.xlf
index 75fc8e7f976..e11f796daf7 100644
--- a/src/Tasks/Resources/xlf/Strings.pl.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pl.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Wybieranie opcji AnyCPU w sposób domyślny.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">Projekt "{0}" zostanie skompilowany przy użyciu platformy: "{1}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">Znaleziono mapowanie "{0}" = "{1}" w danej tabeli wyszukiwania: "{2}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: element PlatformLookupTable "{0}" ma nieprawidłowy format i nie zostanie użyty. Formatem powinno być "A = B; C = D '.</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Przeanalizowana tabela wyszukiwania: "{0}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: nie można było określić, jako co ma zostać skompilowany projekt "{0}". Zostanie on skompilowany bez ustawionej właściwości platformy.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: element EnableDynamicPlatformResolution ma wartość true, ale projekt "{0}", do którego się odnosi, nie ma ustawionych metadanych "Platformy". Zostanie on skompilowany bez określonej platformy.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">Element ProjectReference i bieżący projekt mają tę samą platformę.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
index 1ed2d4d14ee..68f71465eba 100644
--- a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Escolhendo Qualquer CPU por padrão.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">O projeto '{0}' será construído com a plataforma: '{1}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">Mapeamento '{0}'='{1}' encontrado na tabela de pesquisa fornecida: '{2}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: A PlatformLookupTable '{0}' está em um formato inválido e não será usada. O formato deve ser 'A=B;C=D'.</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Tabela de pesquisa analisada: '{0}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: Não foi possível determinar como '{0}' deve ser criado. O projeto será criado sem a propriedade Platform definida.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution é verdadeiro, mas o projeto referenciado '{0}' não tem nenhum conjunto de metadados de 'Plataformas'. Ele será criado sem uma plataforma especificada.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">O ProjectReference e o projeto atual têm a mesma plataforma.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.ru.xlf b/src/Tasks/Resources/xlf/Strings.ru.xlf
index b2fe1cecf3d..1b6cb3afb2d 100644
--- a/src/Tasks/Resources/xlf/Strings.ru.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ru.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Выбор AnyCPU по умолчанию.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">Проект "{0}" создаст сборку с платформой: "{1}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">Найдено сопоставление "{0}"="{1}" в указанной таблице подстановки: "{2}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: PlatformLookupTable "{0}" имеет недопустимый формат и не будет использоваться. Требуется формат "A=B;C=D".</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Проанализированная таблица подстановки: "{0}".</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: не удалось определить, как следует выполнить сборку "{0}". Сборка проекта будет выполнена без установки свойства Platform.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution имеет значение true, но у указанного проекта "{0}" нет заданных метаданных "Platforms". Сборка будет выполнена без указанной платформы.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference и текущий проект используют одну платформу.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.tr.xlf b/src/Tasks/Resources/xlf/Strings.tr.xlf
index 8322c625cfd..7eedc3d6c70 100644
--- a/src/Tasks/Resources/xlf/Strings.tr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.tr.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">Varsayılan olarak AnyCPU seçiliyor.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">'{0}' projesi, '{1}' platformuyla derlenecek.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">Verilen arama tablosunda '{0} '=' {1}' eşlemesi bulundu: '{2}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: PlatformLookupTable '{0}' geçersiz bir biçimde ve kullanılamaz. Biçim 'A=B;C=D' olmalıdır.</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">Ayrıştırılmış arama tablosu:'{0}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: '{0}'in ne olarak oluşturulması gerektiği belirlenemedi. Proje, Platform özellik seti olmadan oluşturulacak.</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution doğru ancak başvurulan proje '{0}', 'Platforms' meta veri kümesine sahip değil. Belirli bir platform olmadan oluşturulacak.</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference ve geçerli proje aynı platforma sahip.</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
index 93d8a13443c..dff102f40f0 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">默认选择 AnyCPU。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">项目 "{0}" 将使用平台 "{1}" 生成。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">在给定查找表 "{2}" 中找到映射 "{0}"="{1}"。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: PlatformLookupTable "{0}" 的格式无效，不会使用。格式应为 "A=B;C=D"。</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">分析的查阅表: "{0}"。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: 无法确定应将 "{0}" 构建为什么。将在不设置 Platform 属性的情况下生成项目。</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution 为 true，但引用的项目 "{0}" 没有设置 "Platforms" 元数据。它将在没有指定平台的情况下生成。</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference 和当前项目具有相同的平台。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
index e206b7cccfc..21b825d4ad0 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
@@ -1328,42 +1328,42 @@
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.AnyCPUDefault">
         <source>Choosing AnyCPU by default.</source>
-        <target state="new">Choosing AnyCPU by default.</target>
+        <target state="translated">預設會選擇 AnyCPU。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.DisplayChosenPlatform">
         <source>Project '{0}' will build with platform: '{1}'.</source>
-        <target state="new">Project '{0}' will build with platform: '{1}'.</target>
+        <target state="translated">專案 '{0}' 將使用平台: '{1}' 建置。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.FoundMappingInTable">
         <source>Found mapping '{0}'='{1}' in given lookup table: '{2}'.</source>
-        <target state="new">Found mapping '{0}'='{1}' in given lookup table: '{2}'.</target>
+        <target state="translated">在指定的查閱資料表: '{2}' 中找到對應 '{0}'='{1}'。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.InvalidLookupTableFormat">
         <source>MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</source>
-        <target state="new">MSB3983: The PlatformLookupTable '{0}' is in an invalid format and won't be used. The format should be 'A=B;C=D'.</target>
+        <target state="translated">MSB3983: PlatformLookupTable '{0}' 的格式無效，因此不會使用。格式應為 'A=B;C=D'。</target>
         <note>{StrBegin="MSB3983: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.LookupTableParsed">
         <source>Parsed lookup table:'{0}'.</source>
-        <target state="new">Parsed lookup table:'{0}'.</target>
+        <target state="translated">剖析的查閱資料表: '{0}'。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoCompatiblePlatformFound">
         <source>MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</source>
-        <target state="new">MSB3981: Could not determine what '{0}' should be built as. The project will be built without the Platform property set.</target>
+        <target state="translated">MSB3981: 無法判斷應該將 '{0}' 建置為何。將在沒有設定 Platform 屬性的情況下建置專案。</target>
         <note>{StrBegin="MSB3981: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.NoPlatformsListed">
         <source>MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</source>
-        <target state="new">MSB3982: EnableDynamicPlatformResolution is true but referenced project '{0}' has no 'Platforms' metadata set. It will be built without a specified platform.</target>
+        <target state="translated">MSB3982: EnableDynamicPlatformResolution 為 true，但參考的專案 '{0}' 未設定 'Platforms' 中繼資料。它將在沒有指定平台的情況下建置。</target>
         <note>{StrBegin="MSB3982: "}</note>
       </trans-unit>
       <trans-unit id="GetCompatiblePlatform.SamePlatform">
         <source>ProjectReference and current project have the same platform.</source>
-        <target state="new">ProjectReference and current project have the same platform.</target>
+        <target state="translated">ProjectReference 和目前的專案有相同的平台。</target>
         <note />
       </trans-unit>
       <trans-unit id="GetFrameworkSdkPath.CouldNotFindSDK">
diff --git a/src/Tasks/SystemState.cs b/src/Tasks/SystemState.cs
index 2992e07bc73..2c11513b244 100644
--- a/src/Tasks/SystemState.cs
+++ b/src/Tasks/SystemState.cs
@@ -366,19 +366,14 @@ private FileState ComputeFileStateFromCachesAndDisk(string path)
             // If the process-wide cache contains an up-to-date FileState, always use it
             if (isProcessFileStateUpToDate)
             {
-                // If a FileState already exists in this instance cache due to deserialization, remove it;
-                // another instance has taken responsibility for serialization, and keeping this would
-                // result in multiple instances serializing the same data to disk
-                if (isCachedInInstance)
+                // For the next build, we may be using a different process. Update the file cache.
+                if (!isInstanceFileStateUpToDate)
                 {
-                    instanceLocalFileStateCache.Remove(path);
+                    instanceLocalFileStateCache[path] = cachedProcessFileState;
                     isDirty = true;
                 }
-
                 return cachedProcessFileState;
             }
-            // If the process-wide FileState is missing or out-of-date, this instance owns serialization;
-            // sync the process-wide cache and signal other instances to avoid data duplication
             if (isInstanceFileStateUpToDate)
             {
                 return s_processWideFileStateCache[path] = cachedInstanceFileState;
diff --git a/src/Tasks/XslTransformation.cs b/src/Tasks/XslTransformation.cs
index cf73331796e..0f47a2edfe2 100644
--- a/src/Tasks/XslTransformation.cs
+++ b/src/Tasks/XslTransformation.cs
@@ -334,9 +334,9 @@ public XmlReader CreateReader(int itemPos)
             {
                 if (XmlMode == XmlModes.XmlFile)
                 {
-                    return XmlReader.Create(_data[itemPos]);
+                    return XmlReader.Create(new StreamReader(_data[itemPos]), new XmlReaderSettings { CloseInput = true }, _data[itemPos]);
                 }
-                else // xmlModes.Xml 
+                else // xmlModes.Xml
                 {
                     return XmlReader.Create(new StringReader(_data[itemPos]));
                 }
@@ -459,7 +459,10 @@ public XslCompiledTransform LoadXslt(bool useTrustedSettings)
                             _log.LogMessageFromResources(MessageImportance.Low, "XslTransform.UseTrustedSettings", _data);
                         }
 
-                        xslct.Load(new XPathDocument(XmlReader.Create(_data)), settings, new XmlUrlResolver());
+                        using (XmlReader reader = XmlReader.Create(new StreamReader(_data), new XmlReaderSettings { CloseInput = true }, _data))
+                        {
+                            xslct.Load(new XPathDocument(reader), settings, new XmlUrlResolver());
+                        }
                         break;
                     case XslModes.XsltCompiledDll:
 #if FEATURE_COMPILED_XSL
diff --git a/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj b/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
index 2f3dd9cba5a..2051aed69cf 100644
--- a/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
+++ b/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
@@ -11,6 +11,7 @@
 
   <ItemGroup>
     <PackageReference Include="Shouldly" />
+    <PackageReference Include="System.Net.Http" />
     <PackageReference Include="Microsoft.CodeAnalysis.Build.Tasks" />
 
     <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
diff --git a/src/Utilities.UnitTests/ToolTask_Tests.cs b/src/Utilities.UnitTests/ToolTask_Tests.cs
index f683c61ca7d..3b5d3eb6085 100644
--- a/src/Utilities.UnitTests/ToolTask_Tests.cs
+++ b/src/Utilities.UnitTests/ToolTask_Tests.cs
@@ -681,19 +681,20 @@ public void FindOnPathSucceeds()
         {
             string[] expectedCmdPath;
             string shellName;
+            string cmdPath;
             if (NativeMethodsShared.IsWindows)
             {
-                expectedCmdPath = new[] { Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.System), "cmd.exe") };
+                expectedCmdPath = new[] { Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.System), "cmd.exe").ToUpperInvariant() };
                 shellName = "cmd.exe";
+                cmdPath = ToolTask.FindOnPath(shellName).ToUpperInvariant();
             }
             else
             {
                 expectedCmdPath = new[] { "/bin/sh", "/usr/bin/sh" };
                 shellName = "sh";
+                cmdPath = ToolTask.FindOnPath(shellName);
             }
 
-            string cmdPath = ToolTask.FindOnPath(shellName);
-
             cmdPath.ShouldBeOneOf(expectedCmdPath);
         }
 
diff --git a/src/Utilities/Microsoft.Build.Utilities.csproj b/src/Utilities/Microsoft.Build.Utilities.csproj
index 87d1b12e2dc..da7f065bffe 100644
--- a/src/Utilities/Microsoft.Build.Utilities.csproj
+++ b/src/Utilities/Microsoft.Build.Utilities.csproj
@@ -14,13 +14,14 @@
     <IsPackable>true</IsPackable>
     <PackageDescription>This package contains the $(MSBuildProjectName) assembly which is used to implement custom MSBuild tasks.</PackageDescription>
     <IncludeSatelliteOutputInPack>false</IncludeSatelliteOutputInPack>
-    <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">partial</ApplyNgenOptimization>
+    <ApplyNgenOptimization Condition="'$(TargetFramework)' == '$(FullFrameworkTFM)'">full</ApplyNgenOptimization>
   </PropertyGroup>
 
   <ItemGroup>
     <ProjectReference Include="..\Framework\Microsoft.Build.Framework.csproj" />
     <ProjectReference Include="..\StringTools\StringTools.csproj" />
 
+    <PackageReference Include="Microsoft.IO.Redist" Condition="'$(FeatureMSIORedist)' == 'true'" />
     <PackageReference Include="System.Collections.Immutable" />
     <PackageReference Include="System.Configuration.ConfigurationManager" />
   </ItemGroup>
diff --git a/src/Utilities/ToolLocationHelper.cs b/src/Utilities/ToolLocationHelper.cs
index a6095129d51..e34d6eef2af 100644
--- a/src/Utilities/ToolLocationHelper.cs
+++ b/src/Utilities/ToolLocationHelper.cs
@@ -1903,14 +1903,14 @@ public static IList<string> GetPathToReferenceAssemblies(string targetFrameworkI
         /// <summary>
         /// Returns the paths to the reference assemblies location for the given target framework.
         /// This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles
-        /// In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths
+        /// In addition when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths
         /// for the legacy .net frameworks. This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.
         /// </summary>
         /// <param name="targetFrameworkIdentifier">Identifier being targeted</param>
         /// <param name="targetFrameworkVersion">Version being targeted</param>
         /// <param name="targetFrameworkProfile">Profile being targeted</param>
         /// <param name="targetFrameworkRootPath">Root directory which will be used to calculate the reference assembly path. The references assemblies will be
-        /// <param name="targetFrameworkFallbackSearchPaths">';' separated list of paths that are looked up if the framework cannot be found in @targetFrameworkRootPath</param>
+        /// <param name="targetFrameworkFallbackSearchPaths">';' separated list of paths that are looked up if the framework cannot be found in <paramref name="targetFrameworkRootPath"/></param>
         /// generated in the following way TargetFrameworkRootPath\TargetFrameworkIdentifier\TargetFrameworkVersion\SubType\TargetFrameworkSubType.
         /// Uses the default path if this is null.
         /// </param>
diff --git a/src/Utilities/TrackedDependencies/FileTracker.cs b/src/Utilities/TrackedDependencies/FileTracker.cs
index aed4d3cf34d..423083dbd1b 100644
--- a/src/Utilities/TrackedDependencies/FileTracker.cs
+++ b/src/Utilities/TrackedDependencies/FileTracker.cs
@@ -366,8 +366,9 @@ public static string EnsureFileTrackerOnPath(string rootPath)
         /// <summary>
         /// Searches %PATH% for the location of Tracker.exe, and returns the first 
         /// path that matches. 
-        /// <returns>Matching full path to Tracker.exe or null if a matching path is not found.</returns>
         /// </summary>
+        /// <returns>The full path to Tracker.exe, or <see langword="null" /> if a matching path is not found.</returns>
+        
         public static string FindTrackerOnPath()
         {
             string[] paths = Environment.GetEnvironmentVariable(pathEnvironmentVariableName).Split(pathSeparatorArray, StringSplitOptions.RemoveEmptyEntries);
