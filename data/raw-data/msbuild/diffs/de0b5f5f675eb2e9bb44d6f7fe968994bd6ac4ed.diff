diff --git a/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj b/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
index d0dae9bef21..31c47d893e7 100644
--- a/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
+++ b/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
@@ -9,8 +9,15 @@
     <RootNamespace>Microsoft.Build.Utilities.UnitTests</RootNamespace>
   </PropertyGroup>
 
-  <ItemGroup>
+  <PropertyGroup Condition="$(TargetFramework) == 'net472'">
+    <DefineConstants>$(DefineConstants);NET472</DefineConstants>
+  </PropertyGroup>
+
+  <ItemGroup Condition="$(TargetFramework) == 'net472'">
     <Reference Include="System.Management" />
+  </ItemGroup>
+
+  <ItemGroup>
     <PackageReference Include="Shouldly" />
     <PackageReference Include="Microsoft.CodeAnalysis.Build.Tasks" />
 
diff --git a/src/Utilities.UnitTests/ProcessExtensions_Tests.cs b/src/Utilities.UnitTests/ProcessExtensions_Tests.cs
index 3ba401325d0..dea1705346c 100644
--- a/src/Utilities.UnitTests/ProcessExtensions_Tests.cs
+++ b/src/Utilities.UnitTests/ProcessExtensions_Tests.cs
@@ -32,9 +32,9 @@ public async Task KillTree()
         {
             Process p = Process.Start("sleep", "600"); // sleep 10m.
 
-            var processes = ProcessInformation.GetProcesses();
-            var found = processes.Where(process => process.Id == p.Id).First();
-            output.WriteLine(found.ExecutablePath);
+#if NET472
+            Print(p);
+#endif
 
             // Verify the process is running.
             await Task.Delay(500);
@@ -45,8 +45,16 @@ public async Task KillTree()
             p.HasExited.ShouldBe(true);
             p.ExitCode.ShouldNotBe(0);
         }
+
+        private void Print(Process p)
+        {
+            var processes = ProcessInformation.GetProcesses();
+            var found = processes.Where(process => process.Id == p.Id).First();
+            output.WriteLine(found.ExecutablePath);
+        }
     }
 
+#if NET472
     public class ProcessInformation
     {
         public int Id { get; private set; }
@@ -132,4 +140,5 @@ public static IEnumerable<ProcessInformation> GetProcesses()
             return !isWow64Process;
         }
     }
+#endif
 }
