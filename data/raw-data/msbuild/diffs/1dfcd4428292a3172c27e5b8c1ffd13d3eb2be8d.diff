diff --git a/src/Build.UnitTests/BinaryLogger_Tests.cs b/src/Build.UnitTests/BinaryLogger_Tests.cs
index 5d15d11b884..96a3202b358 100644
--- a/src/Build.UnitTests/BinaryLogger_Tests.cs
+++ b/src/Build.UnitTests/BinaryLogger_Tests.cs
@@ -99,10 +99,10 @@ public enum BinlogRoundtripTestReplayMode
         public void TestBinaryLoggerRoundtrip(string projectText, BinlogRoundtripTestReplayMode replayMode)
         {
             string _logFile = _env.ExpectFile(".binlog").Path;
-            var binaryLoggerParameters = new BinaryLoggerParameters($"LogFile={_logFile}");
+            var binaryLoggerConfiguration = new BinaryLoggerConfiguration($"LogFile={_logFile}");
             var binaryLogger = new BinaryLogger();
 
-            binaryLogger.BinaryLoggerParameters = binaryLoggerParameters;
+            binaryLogger.BinaryLoggerConfiguration = binaryLoggerConfiguration;
 
             var mockLogFromBuild = new MockLogger();
 
@@ -141,7 +141,7 @@ public void TestBinaryLoggerRoundtrip(string projectText, BinlogRoundtripTestRep
 
                         BinaryLogger outputBinlog = new BinaryLogger()
                         {
-                            BinaryLoggerParameters = new BinaryLoggerParameters(fileToReplay)
+                            BinaryLoggerConfiguration = new BinaryLoggerConfiguration(fileToReplay)
                         };
                         outputBinlog.Initialize(logReader);
                         logReader.Replay(_logFile);
@@ -210,7 +210,7 @@ public void TestBinaryLoggerRoundtripEquality(string projectText, BinlogRoundtri
             string _logFile = _env.ExpectFile(".binlog").Path;
             var binaryLogger = new BinaryLogger();
 
-            binaryLogger.BinaryLoggerParameters = new BinaryLoggerParameters(_logFile);
+            binaryLogger.BinaryLoggerConfiguration = new BinaryLoggerConfiguration(_logFile);
 
             // build and log into binary logger
             using (ProjectCollection collection = new())
@@ -232,7 +232,7 @@ public void TestBinaryLoggerRoundtripEquality(string projectText, BinlogRoundtri
 
             BinaryLogger outputBinlog = new BinaryLogger()
             {
-                BinaryLoggerParameters = new BinaryLoggerParameters($"LogFile={replayedLogFile};OmitInitialInfo")
+                BinaryLoggerConfiguration = new BinaryLoggerConfiguration($"LogFile={replayedLogFile};OmitInitialInfo")
             };
             outputBinlog.Initialize(logReader);
             logReader.Replay(_logFile);
@@ -322,9 +322,9 @@ void AddArchiveFileFromStringHandler(StringReadEventArgs args)
         public void BinaryLoggerShouldSupportFilePathExplicitParameter()
         {
             string _logFile = _env.ExpectFile(".binlog").Path;
-            var binaryLoggerParameters = new BinaryLoggerParameters($"LogFile={_logFile}");
+            var binaryLoggerConfiguration = new BinaryLoggerConfiguration($"LogFile={_logFile}");
             var binaryLogger = new BinaryLogger();
-            binaryLogger.BinaryLoggerParameters = binaryLoggerParameters;
+            binaryLogger.BinaryLoggerConfiguration = binaryLoggerConfiguration;
 
             ObjectModelHelpers.BuildProjectExpectSuccess(s_testProject, binaryLogger);
         }
@@ -445,7 +445,7 @@ public void BinaryLoggerShouldEmbedFilesViaTaskOutput()
             using var buildManager = new BuildManager();
             var binaryLogger = new BinaryLogger()
             {
-                BinaryLoggerParameters = new BinaryLoggerParameters($"ProjectImports=ZipFile;LogFile={_logFile}"),
+                BinaryLoggerConfiguration = new BinaryLoggerConfiguration($"ProjectImports=ZipFile;LogFile={_logFile}"),
             };
             var testProject = @"
 <Project>
@@ -476,7 +476,7 @@ public void BinaryLoggerShouldReportIncompatibleError()
 
             var binaryLogger = new BinaryLogger()
             {
-                BinaryLoggerParameters = new BinaryLoggerParameters($"LogFile={tmpLogFile}", "uniqueFileName"),
+                BinaryLoggerConfiguration = new BinaryLoggerConfiguration($"LogFile={tmpLogFile}", "uniqueFileName"),
             };
 
             var referenceProject = env.CreateTestProjectWithFiles("reference.proj", @"
@@ -486,9 +486,9 @@ public void BinaryLoggerShouldReportIncompatibleError()
             </Target>
          </Project>");
 
-            var message = Should.Throw<LoggerException>(() => buildManager.Build(new BuildParameters() { Loggers = new ILogger[] { binaryLogger } },
+            Should.Throw<LoggerException>(() => buildManager.Build(new BuildParameters() { Loggers = new ILogger[] { binaryLogger } },
                 new BuildRequestData(referenceProject.ProjectFile, new Dictionary<string, string>(), null, new string[] { "Target2" }, null)))
-                .Message.Should().Contain("Incompatible configuration provided");
+                .Message.Should().Contain("Incompatible binary logger parameter(s) provided");
 
             binaryLogger.Shutdown();
         }
@@ -502,7 +502,7 @@ public void BinaryLoggerShouldGenerateUniqueLoggerName()
 
             var binaryLogger = new BinaryLogger()
             {
-                BinaryLoggerParameters = new BinaryLoggerParameters("", "uniqueFileName") { InitProjectFile= "reference.proj" },
+                BinaryLoggerConfiguration = new BinaryLoggerConfiguration("", "uniqueFileName") { InitProjectFile= "reference.proj" },
             };
 
             var referenceProject = env.CreateTestProjectWithFiles("reference.proj", @"
@@ -543,7 +543,7 @@ public void BinaryLoggerShouldEmbedSymlinkFilesViaTaskOutput()
             using var buildManager = new BuildManager();
             var binaryLogger = new BinaryLogger()
             {
-                BinaryLoggerParameters = new BinaryLoggerParameters($"ProjectImports=ZipFile;LogFile={_logFile}"),
+                BinaryLoggerConfiguration = new BinaryLoggerConfiguration($"ProjectImports=ZipFile;LogFile={_logFile}"),
             };
             var testProjectFmt = @"
 <Project>
@@ -592,10 +592,10 @@ public void BinaryLoggerShouldNotThrowWhenMetadataCannotBeExpanded()
         {
             string _logFile = _env.ExpectFile(".binlog").Path;
 
-            var binaryLoggerParameters = new BinaryLoggerParameters($"LogFile={_logFile}");
+            var binaryLoggerConfiguration = new BinaryLoggerConfiguration($"LogFile={_logFile}");
             var binaryLogger = new BinaryLogger
             {
-                BinaryLoggerParameters = binaryLoggerParameters,
+                BinaryLoggerConfiguration = binaryLoggerConfiguration,
             };
 
             const string project = @"
@@ -634,7 +634,7 @@ public void MessagesCanBeLoggedWhenProjectsAreCached()
 
             var binaryLogger = new BinaryLogger
             {
-                BinaryLoggerParameters = new BinaryLoggerParameters($"LogFile={_logFile}")
+                BinaryLoggerConfiguration = new BinaryLoggerConfiguration($"LogFile={_logFile}")
             };
 
             // To trigger #6323, there must be at least two project instances.
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 9cf9ee5c988..9ece7dbe7ec 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -669,7 +669,7 @@ IEnumerable<ILogger> AppendDebuggingLoggers(IEnumerable<ILogger> loggers)
 
                 var binlogPath = DebugUtils.FindNextAvailableDebugFilePath($"{DebugUtils.ProcessInfoString}_BuildManager_{_hostName}.binlog");
 
-                var logger = new BinaryLogger { BinaryLoggerParameters = new BinaryLoggerParameters(binlogPath) };
+                var logger = new BinaryLogger { BinaryLoggerConfiguration = new BinaryLoggerConfiguration(binlogPath) };
 
                 return (loggers ?? Enumerable.Empty<ILogger>()).Concat(new[] { logger });
             }
diff --git a/src/Build/Logging/BinaryLogger/BinaryLogger.cs b/src/Build/Logging/BinaryLogger/BinaryLogger.cs
index 32ffc97de6a..25f6c300664 100644
--- a/src/Build/Logging/BinaryLogger/BinaryLogger.cs
+++ b/src/Build/Logging/BinaryLogger/BinaryLogger.cs
@@ -90,7 +90,7 @@ public sealed class BinaryLogger : ILogger
         private string _initialTargetOutputLogging;
         private bool _initialLogImports;
         private string _initialIsBinaryLoggerEnabled;
-        private BinaryLoggerParameters _binaryLoggerParameters;
+        private BinaryLoggerConfiguration _binaryLoggerConfiguration;
         private string _parameters;
         private string _filePath;
 
@@ -127,15 +127,15 @@ public string FilePath
             private set { _filePath = value; }
         }
 
-        public BinaryLoggerParameters BinaryLoggerParameters {
+        public BinaryLoggerConfiguration BinaryLoggerConfiguration {
             get
             {
-                return _binaryLoggerParameters;
+                return _binaryLoggerConfiguration;
             }
             set
             {
-                _binaryLoggerParameters = value;
-                _parameters = _binaryLoggerParameters.GetStringifiedParameters();
+                _binaryLoggerConfiguration = value;
+                _parameters = _binaryLoggerConfiguration.GetStringifiedParameters();
             }
         }
 
@@ -159,7 +159,7 @@ public string Parameters {
             set
             {
                 _parameters = value;
-                _binaryLoggerParameters = BinaryLoggerParameters.GenerateInstanceFromParameters(_parameters);
+                _binaryLoggerConfiguration = BinaryLoggerConfiguration.GenerateInstanceFromParameters(_parameters);
             }
         }
 
@@ -407,7 +407,7 @@ private void CollectImports(BuildEventArgs e)
         private void ProcessParameters(out bool omitInitialInfo)
         {
             omitInitialInfo = false;
-            if (BinaryLoggerParameters is null)
+            if (BinaryLoggerConfiguration is null)
             {
                 throw new LoggerException(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("InvalidBinaryLoggerParameters", ""));
             }
@@ -426,10 +426,10 @@ private void UpdateFilePathBaseodOnParameters()
             {
                 if (FilePath != null)
                 {
-                    throw new LoggerException("Incompatible configuration provided");
+                    throw new LoggerException(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("IncompatibleBinaryLoggerConfiguration"));
                 }
 
-                var initProjectFilename = Path.GetFileName(BinaryLoggerParameters.InitProjectFile);
+                var initProjectFilename = Path.GetFileName(BinaryLoggerConfiguration.InitProjectFile);
                 FilePath = initProjectFilename + "." + DateTimeOffset.UtcNow.ToUnixTimeSeconds().ToString()  + ".binlog";
             }
             else
@@ -462,12 +462,12 @@ private void UpdateFilePathBaseodOnParameters()
         /// <exception cref="LoggerException"></exception>
         private void AttachBLArguments(ref bool omitInitialInfo)
         {
-            if (string.IsNullOrEmpty(BinaryLoggerParameters.binaryLoggerArguments))
+            if (string.IsNullOrEmpty(BinaryLoggerConfiguration.blArguments))
             {
                 return;
             }
 
-            var parameters = BinaryLoggerParameters.binaryLoggerArguments.Split(MSBuildConstants.SemicolonChar, StringSplitOptions.RemoveEmptyEntries);
+            var parameters = BinaryLoggerConfiguration.blArguments.Split(MSBuildConstants.SemicolonChar, StringSplitOptions.RemoveEmptyEntries);
 
            // var parameters = Parameters.Split(MSBuildConstants.SemicolonChar, StringSplitOptions.RemoveEmptyEntries);
             foreach (var parameter in parameters)
@@ -512,12 +512,12 @@ private void AttachBLArguments(ref bool omitInitialInfo)
         /// <exception cref="LoggerException"></exception>
         private void AttachBLParameters()
         {
-            if (string.IsNullOrEmpty(BinaryLoggerParameters.binaryLoggerParameters))
+            if (string.IsNullOrEmpty(BinaryLoggerConfiguration.blpArguments))
             {
                 return;
             }
 
-            var parameters = BinaryLoggerParameters.binaryLoggerParameters.Split(MSBuildConstants.SemicolonChar, StringSplitOptions.RemoveEmptyEntries);
+            var parameters = BinaryLoggerConfiguration.blpArguments.Split(MSBuildConstants.SemicolonChar, StringSplitOptions.RemoveEmptyEntries);
             foreach (var parameter in parameters)
             {
                 if (parameter.Length > 0)
diff --git a/src/Build/Logging/BinaryLogger/BinaryLoggerParameters.cs b/src/Build/Logging/BinaryLogger/BinaryLoggerConfiguration.cs
similarity index 61%
rename from src/Build/Logging/BinaryLogger/BinaryLoggerParameters.cs
rename to src/Build/Logging/BinaryLogger/BinaryLoggerConfiguration.cs
index d38b1a9a12d..3203449249f 100644
--- a/src/Build/Logging/BinaryLogger/BinaryLoggerParameters.cs
+++ b/src/Build/Logging/BinaryLogger/BinaryLoggerConfiguration.cs
@@ -10,26 +10,26 @@
 
 namespace Microsoft.Build.Logging
 {
-    public class BinaryLoggerParameters
+    public class BinaryLoggerConfiguration
     {
-        public string binaryLoggerArguments { get; set; }
+        public string blArguments { get; set; }
 
-        public string binaryLoggerParameters { get; set; }
+        public string blpArguments { get; set; }
 
         public bool IsBinaryLoggerSet { get; set; }
 
         public string InitProjectFile { get; set; } = string.Empty;
 
-        public BinaryLoggerParameters(string binaryLoggerArguments, string binaryLoggerParameters)
+        public BinaryLoggerConfiguration(string blArguments, string blpArguments)
         {
-            this.binaryLoggerArguments = binaryLoggerArguments;
-            this.binaryLoggerParameters = binaryLoggerParameters;
+            this.blArguments = blArguments;
+            this.blpArguments = blpArguments;
         }
 
-        public BinaryLoggerParameters(string binaryLoggerArguments)
+        public BinaryLoggerConfiguration(string blArguments)
         {
-            this.binaryLoggerArguments = binaryLoggerArguments;
-            binaryLoggerParameters = string.Empty;
+            this.blArguments = blArguments;
+            blpArguments = string.Empty;
         }
 
 
@@ -42,19 +42,19 @@ public string GetStringifiedParameters()
             var parameters = new StringBuilder();
             parameters.AppendLine($"initProjectFile={InitProjectFile}");
             parameters.AppendLine($"isBinaryLoggerSet={IsBinaryLoggerSet}");
-            parameters.AppendLine($"blArguments={binaryLoggerArguments}");
-            parameters.AppendLine($"blParameters={binaryLoggerParameters}");
+            parameters.AppendLine($"blArguments={blArguments}");
+            parameters.AppendLine($"blpArguments={blpArguments}");
 
             return parameters.ToString();
         }
 
 
         /// <summary>
-        /// Generates the BinaryLoggerParameters instance based on the parameters provided
+        /// Generates the BinaryLoggerConfiguration instance based on the parameters provided
         /// </summary>
         /// <param name="parameters"></param>
         /// <returns></returns>
-        public static BinaryLoggerParameters? GenerateInstanceFromParameters(string parameters)
+        public static BinaryLoggerConfiguration? GenerateInstanceFromParameters(string parameters)
         {
             if (string.IsNullOrEmpty(parameters))
             {
@@ -65,9 +65,9 @@ public string GetStringifiedParameters()
             var initProjectFile = data[0].Replace("initProjectFile=","");
             var isBinaryLoggerSet = bool.Parse(data[1].Replace("isBinaryLoggerSet=", ""));
             var blArguments = data[2].Replace("blArguments=", "");
-            var blParameters = data[3].Replace("blParameters=", "");
+            var blParameters = data[3].Replace("blpArguments=", "");
 
-            return new BinaryLoggerParameters(blArguments, blParameters)
+            return new BinaryLoggerConfiguration(blArguments, blParameters)
             {
                 InitProjectFile = initProjectFile,
                 IsBinaryLoggerSet = isBinaryLoggerSet
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 0d82ac1bb57..84eece2482b 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -523,7 +523,7 @@
     <Compile Include="Evaluation\LazyItemEvaluator.LazyItemOperation.cs" />
     <Compile Include="Logging\BaseConsoleLogger.cs" />
     <Compile Include="Logging\BinaryLogger\BinaryLogger.cs" />
-    <Compile Include="Logging\BinaryLogger\BinaryLoggerParameters.cs" />
+    <Compile Include="Logging\BinaryLogger\BinaryLoggerConfiguration.cs" />
     <Compile Include="Logging\BinaryLogger\BinaryLogRecordKind.cs" />
     <Compile Include="Logging\BinaryLogger\BinaryLogReplayEventSource.cs" />
     <Compile Include="Logging\BinaryLogger\BuildEventArgsDispatcher.cs" />
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index b10df4f55d0..e0204681dca 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -2019,6 +2019,10 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
     <value>MSB4277: Cannot copy from object of that type.</value>
     <comment>{StrBegin="MSB4277: "}</comment>
   </data>
+  <data name="IncompatibleBinaryLoggerConfiguration" xml:space="preserve">
+    <value>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</value>
+    <comment>{StrBegin="MSB4278: "}</comment>
+  </data>
   <data name="ReportFileAccessesX64Only" xml:space="preserve">
     <value>Reporting file accesses is only currently supported using the x64 flavor of MSBuild.</value>
   </data>
@@ -2094,7 +2098,7 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
   <!--
         The Build message bucket is: MSB4000 - MSB4999
 
-        Next message code should be MSB4278
+        Next message code should be MSB4279
 
         Don't forget to update this comment after using a new code.
   -->
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index fe6ec4b03b6..c9ec6a6fddd 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: Na pozici {1} podmínky {0} je neočekávaná mezera. Nezapomněli jste ji odebrat?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Následující vstupní soubory mezipaměti pro výsledky neexistují: {0}</target>
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index 609623cfebe..c107047505e 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: Unerwartetes Leerzeichen an Position "{1}" der Bedingung "{0}". Haben Sie vergessen, ein Leerzeichen zu entfernen?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Die folgenden Cachedateien für Eingabeergebnisse sind nicht vorhanden: "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index bbfe3f103f1..56ed4dccfd7 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: Espacio inesperado en la posición "{1}" de la condición "{0}". ¿Olvidó quitar un espacio?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Los siguientes archivos de caché de resultados de entrada no existen: "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index 6eebffdf0cc..55eff94f199 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: espace inattendu à la position "{1}" de la condition "{0}". Avez-vous oublié de supprimer un espace ?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Les fichiers cache des résultats d'entrée suivants n'existent pas : "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index ffda885a56e..cab3a25148a 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: spazio imprevisto alla posizione "{1}" della condizione "{0}". Si è dimenticato di rimuovere uno spazio?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: i file della cache dei risultati di input seguenti non esistono: "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 5f4dba09675..83b60f86651 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: 条件 "{0}" の位置 "{1}" に予期しないスペースがあります。スペースを削除したか確認してください。</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: 以下の入力結果キャッシュ ファイルが存在しません: "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index 91188202b0d..44d241a2598 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: "{0}" 조건의 "{1}" 위치에 예기치 않은 공백이 있습니다. 공백을 제거했는지 확인하세요.</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: 다음 입력 결과 캐시 파일이 존재하지 않습니다. "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index 0e1139dbc7f..bb26b0a81e7 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: Nieoczekiwana spacja na pozycji „{1}” warunku „{0}”. Czy zapomniano o usunięciu spacji?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Następujące pliki wejściowej pamięci podręcznej wyników nie istnieją: „{0}”</target>
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index a92b811e5a3..e51917d8393 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: espaço inesperado na posição "{1}" da condição "{0}". Você esqueceu de remover um espaço?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: os arquivos de cache do resultado de entrada a seguir não existem: "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index 6d5eb0ffe8a..c56d2e16208 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: неожиданный пробел в позиции "{1}" условия "{0}". Вы забыли удалить пробел?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: следующие входные файлы кэша результатов не существуют: "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index 5a64a255f02..75517f3b4df 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: "{0}" koşulunun "{1}" konumunda beklenmeyen boşluk var. Boşluğu kaldırmayı unutmuş olabilirsiniz.</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: Şu giriş sonucu önbellek dosyaları mevcut değil: "{0}"</target>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index 8a858fe1417..edfaaee96c8 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: 在条件“{0}”的位置“{1}”处出现意外空格。是否忘记了删除空格?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: 以下输入结果缓存文件不存在:“{0}”</target>
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index 08dab65043b..4845b358521 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -268,6 +268,11 @@
         <target state="translated">MSB4259: 條件 "{0}" 的位置 "{1}" 出現非預期的空格。忘記移除空格了嗎?</target>
         <note>{StrBegin="MSB4259: "}</note>
       </trans-unit>
+      <trans-unit id="IncompatibleBinaryLoggerConfiguration">
+        <source>MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</source>
+        <target state="new">MSB4278: Incompatible binary logger parameter(s) provided: Only one of the provided configuration should be present for binary logger: binlog file argument of binaryLogger switch or uniqueFileName of binaryLoggerParameter switch.</target>
+        <note>{StrBegin="MSB4278: "}</note>
+      </trans-unit>
       <trans-unit id="InputCacheFilesDoNotExist">
         <source>MSB4255: The following input result cache files do not exist: "{0}"</source>
         <target state="translated">MSB4255: 下列輸入結果快取檔案不存在: "{0}"</target>
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index a79b58804ac..5f795f9df87 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -2651,7 +2651,7 @@ private static bool ProcessCommandLineSwitches(
                         blpArguments = string.Empty;
                     }
 
-                    var binaryLoggerParameters = new BinaryLoggerParameters(blArguments, blpArguments)
+                    var binaryLoggerConfiguration = new BinaryLoggerConfiguration(blArguments, blpArguments)
                     {
                         IsBinaryLoggerSet = commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.BinaryLogger),
                         InitProjectFile = projectFile
@@ -2667,7 +2667,7 @@ private static bool ProcessCommandLineSwitches(
                         aggregatedTerminalLoggerParameters,
                         commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.FileLoggerParameters], // used by DistributedFileLogger
                         commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.ConsoleLoggerParameters],
-                        binaryLoggerParameters,
+                        binaryLoggerConfiguration,
                         commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.ProfileEvaluation],
                         groupedFileLoggerParameters,
                         getProperty.Length + getItem.Length + getTargetResult.Length > 0,
@@ -3703,7 +3703,7 @@ private static ILogger[] ProcessLoggingSwitches(
             string aggregatedTerminalLoggerParameters,
             string[] fileLoggerParameters,
             string[] consoleLoggerParameters,
-            BinaryLoggerParameters binaryLoggerParameters,
+            BinaryLoggerConfiguration binaryLoggerConfiguration,
             string[] profileEvaluationParameters,
             string[][] groupedFileLoggerParameters,
             bool useSimpleErrorLogger,
@@ -3729,7 +3729,7 @@ private static ILogger[] ProcessLoggingSwitches(
             var outVerbosity = verbosity;
 
             // move to binary logger parameters
-            ProcessBinaryLogger(binaryLoggerParameters, loggers, ref outVerbosity);
+            ProcessBinaryLogger(binaryLoggerConfiguration, loggers, ref outVerbosity);
 
             // When returning the result of evaluation from the command line, do not use custom loggers.
             if (!useSimpleErrorLogger)
@@ -3853,15 +3853,15 @@ private static void ProcessFileLoggers(string[][] groupedFileLoggerParameters, L
             }
         }
 
-        private static void ProcessBinaryLogger(BinaryLoggerParameters binaryLoggerParameters, List<ILogger> loggers, ref LoggerVerbosity verbosity)
+        private static void ProcessBinaryLogger(BinaryLoggerConfiguration binaryLoggerConfiguration, List<ILogger> loggers, ref LoggerVerbosity verbosity)
         {
-            if (!binaryLoggerParameters.IsBinaryLoggerSet)
+            if (!binaryLoggerConfiguration.IsBinaryLoggerSet)
             {
                 return;
             }
 
             // arguments
-            BinaryLogger logger = new BinaryLogger { BinaryLoggerParameters = binaryLoggerParameters };
+            BinaryLogger logger = new BinaryLogger { BinaryLoggerConfiguration = binaryLoggerConfiguration };
 
             // If we have a binary logger, force verbosity to diagnostic.
             // The only place where verbosity is used downstream is to determine whether to log task inputs.
diff --git a/src/Shared/UnitTests/EngineTestEnvironment.cs b/src/Shared/UnitTests/EngineTestEnvironment.cs
index 9e83e5ae65c..d7276569acf 100644
--- a/src/Shared/UnitTests/EngineTestEnvironment.cs
+++ b/src/Shared/UnitTests/EngineTestEnvironment.cs
@@ -195,8 +195,8 @@ public override void Revert()
         {
             var binaryLogger = new BinaryLogger();
             string binaryLoggerFilePath = Path.GetFullPath(Path.Combine(TestRoot, Guid.NewGuid().ToString() + ".binlog"));
-            var binaryLoggerParameters = new BinaryLoggerParameters($"ProjectImports=None;{binaryLoggerFilePath}");
-            binaryLogger.BinaryLoggerParameters = binaryLoggerParameters;
+            var binaryLoggerConfiguration = new BinaryLoggerConfiguration($"ProjectImports=None;{binaryLoggerFilePath}");
+            binaryLogger.BinaryLoggerConfiguration = binaryLoggerConfiguration;
 
             return (binaryLogger, null);
         }
