diff --git a/src/Framework/StringUtils.cs b/src/Framework/StringUtils.cs
index e5502ab7320..848c5e3d76a 100644
--- a/src/Framework/StringUtils.cs
+++ b/src/Framework/StringUtils.cs
@@ -31,4 +31,24 @@ internal static string GenerateRandomString(int length)
         string randomBase64String = Convert.ToBase64String(randomBytes).Replace('/', '_');
         return randomBase64String.Substring(0, length);
     }
+
+    /// <summary>
+    /// Removes last occurence of <paramref name="substring"/> from <paramref name="fromString"/>, if present.
+    /// </summary>
+    /// <param name="fromString">String to be altered.</param>
+    /// <param name="substring">String to be removed.</param>
+    /// <param name="comparison">The comparison to use for finding.</param>
+    /// <returns>The original string (if no occurrences found) or a new string, with last instance of <paramref name="substring"/> removed.</returns>
+    internal static string RemoveLastInstanceOf(this string fromString, string substring, StringComparison comparison = StringComparison.Ordinal)
+    {
+        int lastOccurrenceIndex = fromString.LastIndexOf(substring, StringComparison.Ordinal);
+
+        if (lastOccurrenceIndex != -1)
+        {
+            fromString = fromString.Substring(0, lastOccurrenceIndex) +
+                         fromString.Substring(lastOccurrenceIndex + substring.Length);
+        }
+
+        return fromString;
+    }
 }
diff --git a/src/Tasks/AssemblyDependency/ReferenceTable.cs b/src/Tasks/AssemblyDependency/ReferenceTable.cs
index 6813f2d4ded..de1a4b26b20 100644
--- a/src/Tasks/AssemblyDependency/ReferenceTable.cs
+++ b/src/Tasks/AssemblyDependency/ReferenceTable.cs
@@ -971,7 +971,8 @@ private void FindSatellites(
                     // Is there a candidate satellite in that folder?
                     string cultureName = Path.GetFileName(subDirectory);
 
-                    if (CultureInfoCache.IsValidCultureString(cultureName))
+                    // Custom or unknown cultures can be met as well
+                    if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14) || CultureInfoCache.IsValidCultureString(cultureName))
                     {
                         string satelliteAssembly = Path.Combine(subDirectory, satelliteFilename);
                         if (_fileExists(satelliteAssembly))
diff --git a/src/Tasks/CreateCSharpManifestResourceName.cs b/src/Tasks/CreateCSharpManifestResourceName.cs
index 7af1e8d5105..24aab41562e 100644
--- a/src/Tasks/CreateCSharpManifestResourceName.cs
+++ b/src/Tasks/CreateCSharpManifestResourceName.cs
@@ -101,12 +101,25 @@ internal static string CreateManifestNameImpl(
             }
 
             dependentUponFileName = FileUtilities.FixFilePath(dependentUponFileName);
-            Culture.ItemCultureInfo info = Culture.GetItemCultureInfo(embeddedFileName, dependentUponFileName, treatAsCultureNeutral);
+            Culture.ItemCultureInfo info;
 
-            // If the item has a culture override, respect that.
-            if (!string.IsNullOrEmpty(culture))
+            if (!string.IsNullOrEmpty(culture) && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14))
             {
-                info.culture = culture;
+                info = new Culture.ItemCultureInfo()
+                {
+                    culture = culture,
+                    cultureNeutralFilename =
+                        embeddedFileName.RemoveLastInstanceOf("." + culture, StringComparison.OrdinalIgnoreCase)
+                };
+            }
+            else
+            {
+                info = Culture.GetItemCultureInfo(embeddedFileName, dependentUponFileName, treatAsCultureNeutral);
+                // If the item has a culture override, respect that.
+                if (!string.IsNullOrEmpty(culture))
+                {
+                    info.culture = culture;
+                }
             }
 
             var manifestName = StringBuilderCache.Acquire();
