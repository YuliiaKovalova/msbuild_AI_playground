diff --git a/.vsts-dotnet-ci.yml b/.vsts-dotnet-ci.yml
index 5463ea9fffc..f60b38a4709 100644
--- a/.vsts-dotnet-ci.yml
+++ b/.vsts-dotnet-ci.yml
@@ -345,14 +345,13 @@ jobs:
     displayName: CI Build
     env:
         MSBUILDUSESERVER: "1"
-  - task: PowerShell@2
+  - task: Bash@3
     displayName: Process coverage reports
     continueOnError: true
     condition: eq(variables.onlyDocChanged, 0)
     inputs:
       filePath: $(Build.SourcesDirectory)/eng/process-coverage.sh
       arguments: -repoRoot $(Build.SourcesDirectory) -deleteCoverageReportDir
-      pwsh: true
   - task: PublishPipelineArtifact@1
     displayName: Publish Code Coverage Results
     condition: eq(variables.onlyDocChanged, 0)
@@ -431,14 +430,12 @@ jobs:
     displayName: CI Build
     env:
         MSBUILDUSESERVER: "1"
-  - task: PowerShell@2
+  - task: Bash@3
     displayName: Process coverage reports
     continueOnError: true
     condition: eq(variables.onlyDocChanged, 0)
     inputs:
-      filePath: $(Build.SourcesDirectory)/eng/process-coverage.ps1
-      arguments: -repoRoot $(Build.SourcesDirectory) -deleteCoverageReportDir
-      pwsh: true
+      filePath: $(Build.SourcesDirectory)/eng/process-coverage.sh
   - task: PublishPipelineArtifact@1
     displayName: Publish Code Coverage Results
     condition: eq(variables.onlyDocChanged, 0)
diff --git a/eng/restore-toolset.ps1 b/eng/restore-toolset.ps1
new file mode 100644
index 00000000000..a0774594d33
--- /dev/null
+++ b/eng/restore-toolset.ps1
@@ -0,0 +1,60 @@
+param (
+    [Switch]$skipVcpkg
+)
+
+. $PSScriptRoot\common\tools.ps1
+
+function InstallGlobalTool ($dotnetRoot, $toolName, $toolPath, $version) {
+  $dotnet = "$dotnetRoot\dotnet.exe"
+
+  if (-not $version) {
+    Write-Host "'$dotnet' tool install $toolName -v $verbosity --tool-path '$toolPath'"
+    & "$dotnet" tool install $toolName --prerelease -v $verbosity --tool-path "$toolPath"
+  } else {
+    Write-Host "'$dotnet' tool install $toolName --version $version -v $verbosity --tool-path '$toolPath'"
+    & "$dotnet" tool install $toolName --prerelease --version $version -v $verbosity --tool-path "$toolPath"
+  }
+}
+
+$dotnetRoot = InitializeDotNetCli -install:$true
+$Env:DOTNET_ROOT = $dotnetRoot
+$repoRoot = Join-Path $PSScriptRoot ".."
+$toolsDir = Join-Path $repoRoot ".tools"
+$dotnetCoverageDir = Join-Path $toolsDir "dotnet-coverage"
+$reportGeneratorDir = Join-Path $toolsDir "reportgenerator"
+
+if (!(Test-Path -Path $dotnetCoverageDir))
+{
+  InstallGlobalTool $dotnetRoot dotnet-coverage $dotnetCoverageDir
+}
+
+if (!(Test-Path -Path $reportGeneratorDir))
+{
+  InstallGlobalTool $dotnetRoot dotnet-reportgenerator-globaltool $reportGeneratorDir
+}
+
+if (!($skipVcpkg))
+{
+  $artifactsIntermediateDir = Join-Path $repoRoot (Join-Path "artifacts" "Intermediate")
+  if (!(Test-Path -Path $artifactsIntermediateDir))
+  {
+    New-Item -ItemType Directory -Force -Path $artifactsIntermediateDir
+  }
+
+  $vcpkgDir = Join-Path $artifactsIntermediateDir "vcpkg"
+  if (Test-Path -Path $vcpkgDir) {
+    cd $vcpkgDir
+    git pull
+    ./vcpkg upgrade
+  } else {
+    cd $artifactsIntermediateDir
+    $env:GIT_REDIRECT_STDERR="2>&1"
+    git clone https://github.com/Microsoft/vcpkg.git
+    cd $vcpkgDir
+    ./bootstrap-vcpkg.bat
+    ./vcpkg integrate install
+    ./vcpkg install zstd:x86-windows-static
+    ./vcpkg install zstd:x64-windows-static
+    ./vcpkg install zstd:arm64-windows-static
+  }
+}
diff --git a/eng/restore-toolset.sh b/eng/restore-toolset.sh
new file mode 100644
index 00000000000..3880e7fe7c4
--- /dev/null
+++ b/eng/restore-toolset.sh
@@ -0,0 +1,41 @@
+#!/usr/bin/env bash
+
+. "$eng_root/common/tools.sh"
+
+InitializeDotNetCli true
+dotnet_root=$_InitializeDotNetCli
+
+function InstallGlobalTool {
+  local package_name=$1
+  local toolpath=$2
+
+  echo "Installing $package_name..."
+  echo "You may need to restart your command shell if this is the first dotnet tool you have installed."
+  echo $($dotnet_root/dotnet tool install $package_name --prerelease -v $verbosity --tool-path "$toolpath")
+}
+
+function InstallGlobalToolWithVersion {
+  local package_name=$1
+  local toolpath=$2
+  local version=$3
+
+  echo "Installing $package_name..."
+  echo "You may need to restart your command shell if this is the first dotnet tool you have installed."
+  echo $($dotnet_root/dotnet tool install $package_name -v $verbosity --version $version --tool-path "$toolpath")
+}
+
+coverageToolsDir=$eng_root/../.tools
+dotnetCoverageDir=$coverageToolsDir/dotnet-coverage
+reportGeneratorDir=$coverageToolsDir/reportgenerator
+
+export DOTNET_ROOT=$dotnet_root
+
+if [ ! -d "$dotnetCoverageDir" ]; then
+  InstallGlobalTool "dotnet-coverage" "$dotnetCoverageDir"
+fi
+
+if [ ! -d "$reportGeneratorDir" ]; then
+  InstallGlobalTool "dotnet-reportgenerator-globaltool" "$reportGeneratorDir"
+fi
+
+
