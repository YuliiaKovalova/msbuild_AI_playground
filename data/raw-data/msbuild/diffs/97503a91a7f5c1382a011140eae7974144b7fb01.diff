diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index 3a53be7303a..296ed75df8f 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -136,11 +136,13 @@ private struct ParameterlessSwitchInfo
             internal ParameterlessSwitchInfo(
                 string[] switchNames,
                 ParameterlessSwitch parameterlessSwitch,
-                string duplicateSwitchErrorMessage)
+                string duplicateSwitchErrorMessage,
+                string resourceId)
             {
                 this.switchNames = switchNames;
                 this.duplicateSwitchErrorMessage = duplicateSwitchErrorMessage;
                 this.parameterlessSwitch = parameterlessSwitch;
+                this.resourceId = resourceId;
             }
 
             // names of the switch (without leading switch indicator)
@@ -150,6 +152,7 @@ internal ParameterlessSwitchInfo(
             internal string duplicateSwitchErrorMessage;
             // the switch id
             internal ParameterlessSwitch parameterlessSwitch;
+            internal string resourceId;
         }
 
         /// <summary>
@@ -177,7 +180,8 @@ internal ParameterizedSwitchInfo(
                 bool multipleParametersAllowed,
                 string missingParametersErrorMessage,
                 bool unquoteParameters,
-                bool emptyParametersAllowed)
+                bool emptyParametersAllowed,
+                string resourceId)
             {
                 this.switchNames = switchNames;
                 this.duplicateSwitchErrorMessage = duplicateSwitchErrorMessage;
@@ -186,6 +190,7 @@ internal ParameterizedSwitchInfo(
                 this.unquoteParameters = unquoteParameters;
                 this.parameterizedSwitch = parameterizedSwitch;
                 this.emptyParametersAllowed = emptyParametersAllowed;
+                this.resourceId = resourceId;
             }
 
             internal string[] switchNames;
@@ -195,6 +200,7 @@ internal ParameterizedSwitchInfo(
             internal bool unquoteParameters;
             internal ParameterizedSwitch parameterizedSwitch;
             internal bool emptyParametersAllowed;
+            internal string resourceId;
         }
 
         // map switches that do not take parameters to their identifiers (taken from ParameterlessSwitch enum)
@@ -202,26 +208,26 @@ internal ParameterizedSwitchInfo(
         private static readonly ParameterlessSwitchInfo[] s_parameterlessSwitchesMap =
         {
             //---------------------------------------------------------------------------------------------------------------------------------------------------
-            //                                          Switch Names                        Switch Id                             Dup Error  Light up key
+            //                                          Switch Names                        Switch Id                             Dup Error  Light up key    resourceId
             //---------------------------------------------------------------------------------------------------------------------------------------------------
-            new ParameterlessSwitchInfo(  new string[] { "help", "h", "?" },                         ParameterlessSwitch.Help,                  null),
-            new ParameterlessSwitchInfo(  new string[] { "version", "ver" },                         ParameterlessSwitch.Version,               null),
-            new ParameterlessSwitchInfo(  new string[] { "nologo" },                                 ParameterlessSwitch.NoLogo,                null),
-            new ParameterlessSwitchInfo(  new string[] { "noautoresponse", "noautorsp" },            ParameterlessSwitch.NoAutoResponse,        null),
-            new ParameterlessSwitchInfo(  new string[] { "noconsolelogger", "noconlog" },            ParameterlessSwitch.NoConsoleLogger,       null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger", "fl" },                       ParameterlessSwitch.FileLogger,            null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger1", "fl1" },                     ParameterlessSwitch.FileLogger1,           null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger2", "fl2" },                     ParameterlessSwitch.FileLogger2,           null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger3", "fl3" },                     ParameterlessSwitch.FileLogger3,           null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger4", "fl4" },                     ParameterlessSwitch.FileLogger4,           null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger5", "fl5" },                     ParameterlessSwitch.FileLogger5,           null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger6", "fl6" },                     ParameterlessSwitch.FileLogger6,           null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger7", "fl7" },                     ParameterlessSwitch.FileLogger7,           null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger8", "fl8" },                     ParameterlessSwitch.FileLogger8,           null),
-            new ParameterlessSwitchInfo(  new string[] { "filelogger9", "fl9" },                     ParameterlessSwitch.FileLogger9,           null),
-            new ParameterlessSwitchInfo(  new string[] { "distributedfilelogger", "dfl" },           ParameterlessSwitch.DistributedFileLogger, null),
+            new ParameterlessSwitchInfo(  new string[] { "help", "h", "?" },                         ParameterlessSwitch.Help,                  null,       "HelpMessage_4_HelpSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "version", "ver" },                         ParameterlessSwitch.Version,               null,       "HelpMessage_6_VersionSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "nologo" },                                 ParameterlessSwitch.NoLogo,                null,       "HelpMessage_5_NoLogoSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "noautoresponse", "noautorsp" },            ParameterlessSwitch.NoAutoResponse,        null,       "HelpMessage_8_NoAutoResponseSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "noconsolelogger", "noconlog" },            ParameterlessSwitch.NoConsoleLogger,       null,       "HelpMessage_14_NoConsoleLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger", "fl" },                       ParameterlessSwitch.FileLogger,            null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger1", "fl1" },                     ParameterlessSwitch.FileLogger1,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger2", "fl2" },                     ParameterlessSwitch.FileLogger2,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger3", "fl3" },                     ParameterlessSwitch.FileLogger3,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger4", "fl4" },                     ParameterlessSwitch.FileLogger4,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger5", "fl5" },                     ParameterlessSwitch.FileLogger5,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger6", "fl6" },                     ParameterlessSwitch.FileLogger6,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger7", "fl7" },                     ParameterlessSwitch.FileLogger7,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger8", "fl8" },                     ParameterlessSwitch.FileLogger8,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "filelogger9", "fl9" },                     ParameterlessSwitch.FileLogger9,           null,       "HelpMessage_20_FileLoggerSwitch"),
+            new ParameterlessSwitchInfo(  new string[] { "distributedfilelogger", "dfl" },           ParameterlessSwitch.DistributedFileLogger, null,       "HelpMessage_21_DistributedFileLoggerSwitch"),
 #if DEBUG
-            new ParameterlessSwitchInfo(  new string[] { "waitfordebugger", "wfd" },                 ParameterlessSwitch.WaitForDebugger,       null),
+            new ParameterlessSwitchInfo(  new string[] { "waitfordebugger", "wfd" },                 ParameterlessSwitch.WaitForDebugger,       null,       "HelpMessage_49_WaitForDebuggerSwitch"),
 #endif
         };
 
@@ -232,59 +238,59 @@ internal ParameterizedSwitchInfo(
             //------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
             //                                          Switch Names                            Switch Id                                       Duplicate Switch Error          Multi Params?   Missing Parameters Error           Unquote?    Empty?
             //------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-            new ParameterizedSwitchInfo(  new string[] { null },                                ParameterizedSwitch.Project,                    "DuplicateProjectSwitchError",  false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "target", "t"},                        ParameterizedSwitch.Target,                     null,                           true,           "MissingTargetError",                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "property", "p" },                     ParameterizedSwitch.Property,                   null,                           true,           "MissingPropertyError",                true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "logger", "l" },                       ParameterizedSwitch.Logger,                     null,                           false,          "MissingLoggerError",                  false,  false),
-            new ParameterizedSwitchInfo(  new string[] { "distributedlogger", "dl" },           ParameterizedSwitch.DistributedLogger,          null,                           false,          "MissingLoggerError",                  false,  false),
-            new ParameterizedSwitchInfo(  new string[] { "verbosity", "v" },                    ParameterizedSwitch.Verbosity,                  null,                           false,          "MissingVerbosityError",               true,   false),
+            new ParameterizedSwitchInfo(  new string[] { null },                                ParameterizedSwitch.Project,                    "DuplicateProjectSwitchError",  false,          null,                                  true,   false,   null),
+            new ParameterizedSwitchInfo(  new string[] { "target", "t"},                        ParameterizedSwitch.Target,                     null,                           true,           "MissingTargetError",                  true,   false,   "HelpMessage_9_TargetSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "property", "p" },                     ParameterizedSwitch.Property,                   null,                           true,           "MissingPropertyError",                true,   false,   "HelpMessage_10_PropertySwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "logger", "l" },                       ParameterizedSwitch.Logger,                     null,                           false,          "MissingLoggerError",                  false,  false,   "HelpMessage_11_LoggerSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "distributedlogger", "dl" },           ParameterizedSwitch.DistributedLogger,          null,                           false,          "MissingLoggerError",                  false,  false,   "HelpMessage_18_DistributedLoggerSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "verbosity", "v" },                    ParameterizedSwitch.Verbosity,                  null,                           false,          "MissingVerbosityError",               true,   false,   "HelpMessage_12_VerbositySwitch"),
 #if FEATURE_XML_SCHEMA_VALIDATION
-            new ParameterizedSwitchInfo(  new string[] { "validate", "val" },                   ParameterizedSwitch.Validate,                   null,                           false,          null,                                  true,   false),
+            new ParameterizedSwitchInfo(  new string[] { "validate", "val" },                   ParameterizedSwitch.Validate,                   null,                           false,          null,                                  true,   false,   "HelpMessage_15_ValidateSwitch"),
 #endif
-            new ParameterizedSwitchInfo(  new string[] { "consoleloggerparameters", "clp" },    ParameterizedSwitch.ConsoleLoggerParameters,    null,                           false,          "MissingConsoleLoggerParameterError",  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "nodemode", "nmode" },                 ParameterizedSwitch.NodeMode,                   null,                           false,          null,                                  false,  false),
-            new ParameterizedSwitchInfo(  new string[] { "maxcpucount", "m" },                  ParameterizedSwitch.MaxCPUCount,                null,                           false,          "MissingMaxCPUCountError",             true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "ignoreprojectextensions", "ignore" }, ParameterizedSwitch.IgnoreProjectExtensions,    null,                           true,           "MissingIgnoreProjectExtensionsError", true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "toolsversion","tv" },                 ParameterizedSwitch.ToolsVersion,               null,                           false,          "MissingToolsVersionError",            true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters", "flp" },       ParameterizedSwitch.FileLoggerParameters,       null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters1", "flp1" },     ParameterizedSwitch.FileLoggerParameters1,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters2", "flp2" },     ParameterizedSwitch.FileLoggerParameters2,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters3", "flp3" },     ParameterizedSwitch.FileLoggerParameters3,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters4", "flp4" },     ParameterizedSwitch.FileLoggerParameters4,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters5", "flp5" },     ParameterizedSwitch.FileLoggerParameters5,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters6", "flp6" },     ParameterizedSwitch.FileLoggerParameters6,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters7", "flp7" },     ParameterizedSwitch.FileLoggerParameters7,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters8", "flp8" },     ParameterizedSwitch.FileLoggerParameters8,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters9", "flp9" },     ParameterizedSwitch.FileLoggerParameters9,      null,                           false,          "MissingFileLoggerParameterError",     true,   false),
+            new ParameterizedSwitchInfo(  new string[] { "consoleloggerparameters", "clp" },    ParameterizedSwitch.ConsoleLoggerParameters,    null,                           false,          "MissingConsoleLoggerParameterError",  true,   false,   "HelpMessage_13_ConsoleLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "nodemode", "nmode" },                 ParameterizedSwitch.NodeMode,                   null,                           false,          null,                                  false,  false,   "HelpMessage_50_NodeModeSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "maxcpucount", "m" },                  ParameterizedSwitch.MaxCPUCount,                null,                           false,          "MissingMaxCPUCountError",             true,   false,   "HelpMessage_17_MaximumCPUSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "ignoreprojectextensions", "ignore" }, ParameterizedSwitch.IgnoreProjectExtensions,    null,                           true,           "MissingIgnoreProjectExtensionsError", true,   false,   "HelpMessage_19_IgnoreProjectExtensionsSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "toolsversion","tv" },                 ParameterizedSwitch.ToolsVersion,               null,                           false,          "MissingToolsVersionError",            true,   false,   "HelpMessage_23_To  olsVersionSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters", "flp" },       ParameterizedSwitch.FileLoggerParameters,       null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters1", "flp1" },     ParameterizedSwitch.FileLoggerParameters1,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters2", "flp2" },     ParameterizedSwitch.FileLoggerParameters2,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters3", "flp3" },     ParameterizedSwitch.FileLoggerParameters3,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters4", "flp4" },     ParameterizedSwitch.FileLoggerParameters4,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters5", "flp5" },     ParameterizedSwitch.FileLoggerParameters5,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters6", "flp6" },     ParameterizedSwitch.FileLoggerParameters6,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters7", "flp7" },     ParameterizedSwitch.FileLoggerParameters7,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters8", "flp8" },     ParameterizedSwitch.FileLoggerParameters8,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "fileloggerparameters9", "flp9" },     ParameterizedSwitch.FileLoggerParameters9,      null,                           false,          "MissingFileLoggerParameterError",     true,   false,   "HelpMessage_22_FileLoggerParametersSwitch"),
             // To not break existing use, keep supporting live logger switches
-            new ParameterizedSwitchInfo(  new string[] { "livelogger", "ll", "terminallogger", "tl" }, ParameterizedSwitch.TerminalLogger,      null,                           true,           null,                                  true,   true),
-            new ParameterizedSwitchInfo(  new string[] { "terminalloggerparameters", "tlp" },   ParameterizedSwitch.TerminalLoggerParameters,   null,                           false,          "MissingTerminalLoggerParameterError", true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "nodereuse", "nr" },                   ParameterizedSwitch.NodeReuse,                  null,                           false,          "MissingNodeReuseParameterError",      true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "preprocess", "pp" },                  ParameterizedSwitch.Preprocess,                 null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "targets", "ts" },                     ParameterizedSwitch.Targets,                    null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "warnaserror", "err" },                ParameterizedSwitch.WarningsAsErrors,           null,                           true,           null,                                  true,   true),
-            new ParameterizedSwitchInfo(  new string[] { "warnnotaserror", "noerr" },           ParameterizedSwitch.WarningsNotAsErrors,        null,                           true,           "MissingWarnNotAsErrorParameterError", true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "warnasmessage", "nowarn" },           ParameterizedSwitch.WarningsAsMessages,         null,                           true,           "MissingWarnAsMessageParameterError",  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "binarylogger", "bl" },                ParameterizedSwitch.BinaryLogger,               null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "restore", "r" },                      ParameterizedSwitch.Restore,                    null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "profileevaluation", "prof" },         ParameterizedSwitch.ProfileEvaluation,          null,                           false,          "MissingProfileParameterError",        true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "restoreproperty", "rp" },             ParameterizedSwitch.RestoreProperty,            null,                           true,           "MissingPropertyError",                true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "interactive" },                       ParameterizedSwitch.Interactive,                null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "isolateprojects", "isolate" },        ParameterizedSwitch.IsolateProjects,            null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "graphbuild", "graph" },               ParameterizedSwitch.GraphBuild,                 null,                           true,           null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "inputResultsCaches", "irc" },         ParameterizedSwitch.InputResultsCaches,         null,                           true,           null,                                  true,   true),
-            new ParameterizedSwitchInfo(  new string[] { "outputResultsCache", "orc" },         ParameterizedSwitch.OutputResultsCache,         "DuplicateOutputResultsCache",  false,          null,                                  true,   true),
+            new ParameterizedSwitchInfo(  new string[] { "livelogger", "ll", "terminallogger", "tl" }, ParameterizedSwitch.TerminalLogger,      null,                           true,           null,                                  true,   true,    "HelpMessage_47_TerminalLoggerSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "terminalloggerparameters", "tlp" },   ParameterizedSwitch.TerminalLoggerParameters,   null,                           false,          "MissingTerminalLoggerParameterError", true,   false,   "HelpMessage_48_TerminalLoggerParametersSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "nodereuse", "nr" },                   ParameterizedSwitch.NodeReuse,                  null,                           false,          "MissingNodeReuseParameterError",      true,   false,   "HelpMessage_24_NodeReuse"),
+            new ParameterizedSwitchInfo(  new string[] { "preprocess", "pp" },                  ParameterizedSwitch.Preprocess,                 null,                           false,          null,                                  true,   false,   "HelpMessage_25_PreprocessSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "targets", "ts" },                     ParameterizedSwitch.Targets,                    null,                           false,          null,                                  true,   false,   "HelpMessage_38_TargetsSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "warnaserror", "err" },                ParameterizedSwitch.WarningsAsErrors,           null,                           true,           null,                                  true,   true,    "HelpMessage_28_WarnAsErrorSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "warnnotaserror", "noerr" },           ParameterizedSwitch.WarningsNotAsErrors,        null,                           true,           "MissingWarnNotAsErrorParameterError", true,   false,   "HelpMessage_40_WarnNotAsErrorSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "warnasmessage", "nowarn" },           ParameterizedSwitch.WarningsAsMessages,         null,                           true,           "MissingWarnAsMessageParameterError",  true,   false,   "HelpMessage_29_WarnAsMessageSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "binarylogger", "bl" },                ParameterizedSwitch.BinaryLogger,               null,                           false,          null,                                  true,   false,   "HelpMessage_30_BinaryLoggerSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "restore", "r" },                      ParameterizedSwitch.Restore,                    null,                           false,          null,                                  true,   false,   "HelpMessage_31_RestoreSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "profileevaluation", "prof" },         ParameterizedSwitch.ProfileEvaluation,          null,                           false,          "MissingProfileParameterError",        true,   false,   "HelpMessage_32_ProfilerSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "restoreproperty", "rp" },             ParameterizedSwitch.RestoreProperty,            null,                           true,           "MissingPropertyError",                true,   false,   "HelpMessage_33_RestorePropertySwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "interactive" },                       ParameterizedSwitch.Interactive,                null,                           false,          null,                                  true,   false,   "HelpMessage_34_InteractiveSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "isolateprojects", "isolate" },        ParameterizedSwitch.IsolateProjects,            null,                           false,          null,                                  true,   false,   "HelpMessage_35_IsolateProjectsSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "graphbuild", "graph" },               ParameterizedSwitch.GraphBuild,                 null,                           true,           null,                                  true,   false,   "HelpMessage_36_GraphBuildSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "inputResultsCaches", "irc" },         ParameterizedSwitch.InputResultsCaches,         null,                           true,           null,                                  true,   true,    "HelpMessage_InputCachesFiles"),
+            new ParameterizedSwitchInfo(  new string[] { "outputResultsCache", "orc" },         ParameterizedSwitch.OutputResultsCache,         "DuplicateOutputResultsCache",  false,          null,                                  true,   true,    "HelpMessage_OutputCacheFile"),
 #if FEATURE_REPORTFILEACCESSES
-            new ParameterizedSwitchInfo(  new string[] { "reportfileaccesses" },                ParameterizedSwitch.ReportFileAccesses,         null,                           false,          null,                                  true,   false),
+            new ParameterizedSwitchInfo(  new string[] { "reportfileaccesses" },                ParameterizedSwitch.ReportFileAccesses,         null,                           false,          null,                                  true,   false,   "HelpMessage_42_ReportFileAccessesSwitch"),
 #endif
-            new ParameterizedSwitchInfo(  new string[] { "lowpriority", "low" },                ParameterizedSwitch.LowPriority,                null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "question", "q" },                     ParameterizedSwitch.Question,                   null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "detailedsummary", "ds" },             ParameterizedSwitch.DetailedSummary,            null,                           false,          null,                                  true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "getProperty" },                       ParameterizedSwitch.GetProperty,                null,                           true,           "MissingGetPropertyError",             true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "getItem" },                           ParameterizedSwitch.GetItem,                    null,                           true,           "MissingGetItemError",                 true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "getTargetResult" },                   ParameterizedSwitch.GetTargetResult,            null,                           true,           "MissingGetTargetResultError",         true,   false),
-            new ParameterizedSwitchInfo(  new string[] { "featureavailability", "fa" },         ParameterizedSwitch.FeatureAvailability,        null,                           true,           "MissingFeatureAvailabilityError",     true,   false),
-        };
+            new ParameterizedSwitchInfo(  new string[] { "lowpriority", "low" },                ParameterizedSwitch.LowPriority,                null,                           false,          null,                                  true,   false,   "HelpMessage_39_LowPrioritySwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "question", "q" },                     ParameterizedSwitch.Question,                   null,                           false,          null,                                  true,   false,   "HelpMessage_41_QuestionSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "detailedsummary", "ds" },             ParameterizedSwitch.DetailedSummary,            null,                           false,          null,                                  true,   false,   "HelpMessage_26_DetailedSummarySwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "getProperty" },                       ParameterizedSwitch.GetProperty,                null,                           true,           "MissingGetPropertyError",             true,   false,   "HelpMessage_43_GetPropertySwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "getItem" },                           ParameterizedSwitch.GetItem,                    null,                           true,           "MissingGetItemError",                 true,   false,   "HelpMessage_44_GetItemSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "getTargetResult" },                   ParameterizedSwitch.GetTargetResult,            null,                           true,           "MissingGetTargetResultError",         true,   false,   "HelpMessage_45_GetTargetResultSwitch"),
+            new ParameterizedSwitchInfo(  new string[] { "featureavailability", "fa" },         ParameterizedSwitch.FeatureAvailability,        null,                           true,           "MissingFeatureAvailabilityError",     true,   false,   "HelpMessage_46_FeatureAvailabilitySwitch")
+,        };
 
         /// <summary>
         /// Identifies/detects a switch that takes no parameters.
diff --git a/src/MSBuild/Resources/Strings.resx b/src/MSBuild/Resources/Strings.resx
index a8f93e5f609..800c4f34322 100644
--- a/src/MSBuild/Resources/Strings.resx
+++ b/src/MSBuild/Resources/Strings.resx
@@ -877,6 +877,102 @@
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </comment>
   </data>
+  <data name="HelpMessage_43_GetPropertySwitch" Visibility="Public">
+    <value>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </value>
+    <comment>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
+  <data name="HelpMessage_44_GetItemSwitch" Visibility="Public">
+    <value>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </value>
+    <comment>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
+  <data name="HelpMessage_45_GetTargetResultSwitch" Visibility="Public">
+    <value>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </value>
+    <comment>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
+  <data name="HelpMessage_46_FeatureAvailabilitySwitch" Visibility="Public">
+    <value>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </value>
+    <comment>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
+  <data name="HelpMessage_47_TerminalLoggerSwitch" Visibility="Public">
+    <value>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </value>
+    <comment>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
+  <data name="HelpMessage_48_TerminalLoggerParametersSwitch" Visibility="Public">
+    <value>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </value>
+    <comment>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
+  <data name="HelpMessage_49_WaitForDebuggerSwitch" Visibility="Public">
+    <value>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </value>
+    <comment>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
+  <data name="HelpMessage_50_NodeModeSwitch" Visibility="Public">
+    <value>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </value>
+    <comment>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </comment>
+  </data>
   <data name="InvalidConfigurationFile" Visibility="Public">
     <value>MSBUILD : Configuration error MSB1043: The application could not start. {0}</value>
     <comment>
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index 63f1e4b57e9..22e94f17bfc 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -122,6 +122,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index 594aafe0c99..2bcc837a8f0 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -122,6 +122,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index fdbbc390fb1..eea8117f6d1 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -121,6 +121,150 @@ Esta marca es experimental y puede que no funcione según lo previsto.
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 8834e00d9c3..80f76891234 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -121,6 +121,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index eb32ad8f7ea..68a2e901b32 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -121,6 +121,150 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index 9959eee142e..ad2478eb023 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -121,6 +121,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 1b37fe9bf0a..679dc9459f7 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -121,6 +121,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index 7c9f4c4f8db..b595cdf57f3 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -121,6 +121,150 @@ Ta flaga jest eksperymentalna i może nie działać zgodnie z oczekiwaniami.
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index 62fb9b8962e..44c4d8f4ab7 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -121,6 +121,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index 58cdfbad974..64ec9f03950 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -121,6 +121,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index 2feeaee0f2e..b3c553b99e2 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -121,6 +121,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index 048ca7aa3b2..dc416d7e715 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -121,6 +121,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index 4e65455c5bd..8d80ab1c2d0 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -121,6 +121,150 @@
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_43_GetPropertySwitch">
+        <source>  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </source>
+        <target state="new">  -getProperty:propertyName,...
+                    Write out the value of the property or properties after
+                    evaluation, without executing the build,or if either
+                    the -targets option or the -getTargetResult option is
+                    used, write out the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getProperty:" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_44_GetItemSwitch">
+        <source>  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </source>
+        <target state="new">  -getItem:itemName,...
+                    Write out the value of the item or items after evaluation
+                    without executing the build, or if either the -targets
+                    option or the -getTargetResult option is used, write out
+                    the values after the build.
+    </target>
+        <note>
+      LOCALIZATION: "-getItem" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_45_GetTargetResultSwitch">
+        <source>  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </source>
+        <target state="new">  -getTargetResult:targetName,...
+                    Write out the output values of the specified targets.
+    </target>
+        <note>
+      LOCALIZATION: "-getTargetResult" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_46_FeatureAvailabilitySwitch">
+        <source>  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </source>
+        <target state="new">  -featureavailability:featureName,...
+                    Check feature availability, The result is one of
+                    "Undefined", "Available", "NotAvailable" strings.
+                    (Short form: -fa)
+    </target>
+        <note>
+      LOCALIZATION: "-featureavailability" and "-fa" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_47_TerminalLoggerSwitch">
+        <source>  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </source>
+        <target state="new">  -terminallogger
+                    users are able to opt-in and use the TerminalLogger,
+                    EXCEPT when:
+                      The terminal does not support ANSI codes or color
+                      Output is redirected to a file or pipe
+                    (Short form: -tl)
+    </target>
+        <note>
+      LOCALIZATION: "-terminallogger" and "-tl" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_48_TerminalLoggerParametersSwitch">
+        <source>  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </source>
+        <target state="new">  -termionalLoggerParameters:default=[auto|false|true]
+                    users are able to opt-in and use the TerminalLogger.
+                    `true` forces TerminalLogger to be used even wwhen it would be disabled
+                    `false` forces TerminalLogger to not be used even when it would be enabled
+                    `auto` enables TerminalLogger when the terminal supports it and the session
+                     doesn't have redirected stdout/stderr
+                    (Short form: -tlp)
+                    Example:
+                      -termionalLoggerParameters:default=auto
+    </target>
+        <note>
+      LOCALIZATION: "-termionalLoggerParameters"  and "-tlp"should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_49_WaitForDebuggerSwitch">
+        <source>  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </source>
+        <target state="new">  -waitfordebugger
+                    Add wait for debugger command line switch (/wfd) in Debug build.
+                    (Short form: -wfd)
+    </target>
+        <note>
+      LOCALIZATION: "-waitfordebugger" and "-wfd" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
+    </note>
+      </trans-unit>
+      <trans-unit id="HelpMessage_50_NodeModeSwitch">
+        <source>  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </source>
+        <target state="new">  -nodemode:number
+                    It's used when MSBuild spawns a process, indicating that MSBuild
+                    should start up in "Out of process worker node" mode.
+                    (Short form: -nmode)
+                    Example:
+                       -nodemode:1
+    </target>
+        <note>
+      LOCALIZATION: "-nodemode" and "-nmode" should not be localized.
+      LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
     </note>
       </trans-unit>
       <trans-unit id="InvalidLowPriorityValue">
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 545fdbc9844..cf912bba001 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -2948,13 +2948,13 @@ private static string GetProjectDirectory(string[] projectSwitchParameters)
 
 
         /// <summary>
-        /// Identifies if there is rsp files near the project file 
+        /// Identifies if there is rsp files near the project file
         /// </summary>
         /// <returns>true if there autoresponse file was found</returns>
         private static bool CheckAndGatherProjectAutoResponseFile(CommandLineSwitches switchesFromAutoResponseFile, CommandLineSwitches commandLineSwitches, bool recursing, string commandLine)
         {
             bool found = false;
-           
+
             var projectDirectory = GetProjectDirectory(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.Project]);
 
             if (!recursing && !commandLineSwitches[CommandLineSwitches.ParameterlessSwitch.NoAutoResponse])
@@ -4512,6 +4512,14 @@ private static void ShowHelpMessage()
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_4_HelpSwitch"));
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_16_Examples"));
             Console.WriteLine(AssemblyResources.GetString("HelpMessage_37_DocsLink"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_43_GetPropertySwitch"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_44_GetItemSwitch"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_45_GetTargetResultSwitch"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_46_FeatureAvailabilitySwitch"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_47_TerminalLoggerSwitch"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_48_TerminalLoggerParametersSwitch"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_49_WaitForDebuggerSwitch"));
+            Console.WriteLine(AssemblyResources.GetString("HelpMessage_50_NodeModeSwitch"));
         }
 
         /// <summary>
