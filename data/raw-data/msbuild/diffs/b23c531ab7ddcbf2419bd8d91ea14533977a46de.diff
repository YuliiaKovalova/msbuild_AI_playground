diff --git a/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs b/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
index 507e20181e6..52e8b5e19f4 100644
--- a/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/SdkResolverLoader.cs
@@ -40,7 +40,7 @@ internal virtual IList<SdkResolver> LoadDefaultResolvers(LoggingContext loggingC
                 new List<SdkResolver> {new DefaultSdkResolver()}
                 : new List<SdkResolver>();
 
-            return resolvers.OrderBy(t => t.Priority).ToList();
+            return resolvers;
         }
 
         internal virtual IList<SdkResolver> LoadAllResolvers(LoggingContext loggingContext,
diff --git a/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs b/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
index 9b5083d1598..2a7f3684075 100644
--- a/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
@@ -206,22 +206,22 @@ private List<SdkResolver> GetResolvers(IList<SdkResolverManifest> resolversManif
             List<SdkResolver> resolvers = new List<SdkResolver>();
             foreach (var resolverManifest in resolversManifests)
             {
-                if (!_resolversDict.ContainsKey(resolverManifest))
+                if (!_resolversDict.TryGetValue(resolverManifest, out IList<SdkResolver> newResolvers))
                 {
                     lock (_lockObject)
                     {
-                        if (!_resolversDict.ContainsKey(resolverManifest))
+                        if (!_resolversDict.TryGetValue(resolverManifest, out newResolvers))
                         {
                             // Loading of the needed resolvers.
                             MSBuildEventSource.Log.SdkResolverServiceLoadResolversStart();
-                            IList<SdkResolver> newResolvers = _sdkResolverLoader.LoadResolversFromManifest(resolverManifest, loggingContext, sdkReferenceLocation);
+                            newResolvers = _sdkResolverLoader.LoadResolversFromManifest(resolverManifest, loggingContext, sdkReferenceLocation);
                             _resolversDict[resolverManifest] = newResolvers;
                             MSBuildEventSource.Log.SdkResolverServiceLoadResolversStop(newResolvers.Count);
                         }
                     }
                 }
 
-                resolvers.AddRange(_resolversDict[resolverManifest]);
+                resolvers.AddRange(newResolvers);
             }
             return resolvers.OrderBy(t => t.Priority).ToList();
         }
