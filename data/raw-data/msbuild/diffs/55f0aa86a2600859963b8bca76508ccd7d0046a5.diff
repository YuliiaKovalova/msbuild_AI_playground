diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index 6ae516d1d8c..1e4e9b38918 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -4873,8 +4873,8 @@ public void ExpandItem_ConvertToStringUsingInvariantCultureForNumberData()
                 var svSECultureInfo = new CultureInfo("sv-SE");
                 using (var env = TestEnvironment.Create())
                 {
-                    CultureInfo.CurrentCulture = svSECultureInfo;
-                    CultureInfo.CurrentUICulture = svSECultureInfo;
+                    currentThread.CurrentCulture = svSECultureInfo;
+                    currentThread.CurrentUICulture = svSECultureInfo;
                     var root = env.CreateFolder();
 
                     var projectFile = env.CreateFile(root, ".proj",
@@ -4901,6 +4901,12 @@ public void ExpandItem_ConvertToStringUsingInvariantCultureForNumberData()
         [Fact]
         public void ExpandItem_ConvertToStringUsingInvariantCultureForNumberData_RespectingChangeWave()
         {
+            // Note: Skipping the test since it is not a valid scenario when ICU mode is not used.
+            if (!ICUModeAvailable())
+            {
+                return;
+            }
+
             var currentThread = Thread.CurrentThread;
             var originalCulture = currentThread.CurrentCulture;
             var originalUICulture = currentThread.CurrentUICulture;
@@ -4911,8 +4917,8 @@ public void ExpandItem_ConvertToStringUsingInvariantCultureForNumberData_Respect
                 using (var env = TestEnvironment.Create())
                 {
                     env.SetEnvironmentVariable("MSBUILDDISABLEFEATURESFROMVERSION", ChangeWaves.Wave17_10.ToString());
-                    CultureInfo.CurrentCulture = svSECultureInfo;
-                    CultureInfo.CurrentUICulture = svSECultureInfo;
+                    currentThread.CurrentCulture = svSECultureInfo;
+                    currentThread.CurrentUICulture = svSECultureInfo;
                     var root = env.CreateFolder();
 
                     var projectFile = env.CreateFile(root, ".proj",
@@ -4937,5 +4943,17 @@ public void ExpandItem_ConvertToStringUsingInvariantCultureForNumberData_Respect
                 currentThread.CurrentUICulture = originalUICulture;
             }
         }
+
+        /// <summary>
+        /// Determines if ICU mode is enabled.
+        /// Copied from: https://learn.microsoft.com/en-us/dotnet/core/extensions/globalization-icu#determine-if-your-app-is-using-icu
+        /// </summary>
+        private static bool ICUModeAvailable()
+        {
+            SortVersion sortVersion = CultureInfo.InvariantCulture.CompareInfo.Version;
+            byte[] bytes = sortVersion.SortId.ToByteArray();
+            int version = bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
+            return version != 0 && version == sortVersion.FullVersion;
+        }
     }
 }
