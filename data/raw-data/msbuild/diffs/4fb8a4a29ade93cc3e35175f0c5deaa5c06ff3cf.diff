diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index cd21e2f26a8..25bb791ceb7 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1143,8 +1143,9 @@ private void EndBuildTelemetry()
                 .StartActivity("Build")?
                 .WithTags(_buildTelemetry)
                 .WithTags(_telemetryConsumingLogger?.WorkerNodeTelemetryData.AsActivityDataHolder(
-                    !Traits.IsEnvVarOneOrTrue("MSBUILDTELEMETRYEXCLUDETASKSDETAILS"),
-                    !Traits.IsEnvVarOneOrTrue("MSBUILDTELEMETRYEXCLUDETARGETSDETAILS")))
+                    includeTasksDetails: !Traits.ExcludeTasksDetailsFromTelemetry
+                    includeTargetDetails: false
+                ))
                 .WithStartTime(_buildTelemetry!.InnerStartAt)
                 .Dispose();
             OpenTelemetryManager.Instance.ForceFlush();
diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index 2b4dceb2d67..e79515c2365 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -141,7 +141,8 @@ public Traits()
         public bool SdkTelemetryOptOut = IsEnvVarOneOrTrue("DOTNET_CLI_TELEMETRY_OPTOUT");
         public bool FrameworkTelemetryOptOut = IsEnvVarOneOrTrue("MSBUILD_TELEMETRY_OPTOUT");
         public double? TelemetrySampleRateOverride = ParseDoubleFromEnvironmentVariable("MSBUILD_TELEMETRY_SAMPLE_RATE");
-        
+        public bool ExcludeTasksDetailsFromTelemetry = IsEnvVarOneOrTrue("MSBUILDTELEMETRYEXCLUDETASKSDETAILS");
+
         // for VS17.14
         public readonly bool TelemetryOptIn = Environment.GetEnvironmentVariable("MSBUILD_TELEMETRY_OPTIN") == "1";
 
