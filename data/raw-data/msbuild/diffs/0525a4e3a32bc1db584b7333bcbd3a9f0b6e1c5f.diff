diff --git a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
index 43d8b0b2016..29dce609aed 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
@@ -19,6 +19,7 @@
 using Xunit;
 using Xunit.Abstractions;
 using Xunit.NetCore.Extensions;
+using Xunit.Sdk;
 using FrameworkNameVersioning = System.Runtime.Versioning.FrameworkName;
 using SystemProcessorArchitecture = System.Reflection.ProcessorArchitecture;
 
@@ -8623,6 +8624,32 @@ public void SDKReferencesAreResolvedWithoutIO()
             rar._cache.IsDirty.ShouldBeFalse();
         }
 
+        [Fact]
+        public void LogsParentAssemblyForEveryConsideredAndRejectedSearchPath()
+        {
+            InitializeRARwithMockEngine(_output, out MockEngine mockEngine, out ResolveAssemblyReference rar);
+
+            rar.Assemblies = new ITaskItem[]
+            {
+                new TaskItem(@"C:\Program Files\dotnet\sdk\8.0.101\Microsoft.Build.dll"),
+                new TaskItem(@"Microsoft.Build.Framework, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
+            };
+
+            rar.SearchPaths = new string[]
+            {
+                "{CandidateAssemblyFiles}",
+                "{HintPathFromItem}",
+                "{TargetFrameworkDirectory}",
+                "{RawFileName}",
+            };
+
+            rar.Execute().ShouldBeTrue();
+
+            mockEngine.AssertLogContains(rar.Log.FormatResourceString("ResolveAssemblyReference.SearchPathAddedByParentAssembly",
+                @"C:\Program Files\dotnet\sdk\8.0.101",
+                @"C:\Program Files\dotnet\sdk\8.0.101\Microsoft.Build.dll"));
+        }
+
         [Fact]
         public void ManagedRuntimeVersionReaderSupportsWindowsRuntime()
         {
