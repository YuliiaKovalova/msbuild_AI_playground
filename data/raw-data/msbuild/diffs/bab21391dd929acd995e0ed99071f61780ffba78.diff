diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index 756e3f6f4ae..70efdfe7b1a 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -411,6 +411,8 @@ internal CommandLineSwitches()
             Debug.Assert(s_parameterizedSwitchesMap.Length == (int)ParameterizedSwitch.NumberOfParameterizedSwitches,
                 "The map of parameterized switches must have an entry for each switch in the ParameterizedSwitch enumeration.");
 
+            SwitchesFromResponseFiles ??= new();
+
             for (int i = 0; i < s_parameterlessSwitchesMap.Length; i++)
             {
                 Debug.Assert(i == (int)(s_parameterlessSwitchesMap[i].parameterlessSwitch),
diff --git a/src/MSBuild/PerformanceLogEventListener.cs b/src/MSBuild/PerformanceLogEventListener.cs
index 3e08da0d512..3659dd535de 100644
--- a/src/MSBuild/PerformanceLogEventListener.cs
+++ b/src/MSBuild/PerformanceLogEventListener.cs
@@ -55,10 +55,16 @@ internal static PerformanceLogEventListener Create()
                 // Check to see if we should enable the event listener.
                 string logDirectory = Environment.GetEnvironmentVariable(PerfLogDirEnvVar);
 
-                if (!string.IsNullOrEmpty(logDirectory) && Directory.CreateDirectory(logDirectory).Exists)
+                if (!string.IsNullOrEmpty(logDirectory))
                 {
-                    eventListener = new PerformanceLogEventListener();
-                    eventListener.Initialize(logDirectory);
+                    if (Directory.CreateDirectory(logDirectory).Exists)
+                    {
+                        eventListener = new PerformanceLogEventListener();
+                        eventListener.Initialize(logDirectory);
+                    }
+
+                    // Delete env var so new starting processes will not duplicate Event listening
+                    Environment.SetEnvironmentVariable(PerfLogDirEnvVar, null);
                 }
             }
             catch
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index fc2960a5dcd..270e0698453 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -306,6 +306,10 @@ string[] commandLine
                     ProcessNodeReuseSwitch(commandLineSwitches[CommandLineSwitches.ParameterizedSwitch.NodeReuse]) == false)
                 {
                     canRunServer = false;
+                    if (KnownTelemetry.BuildTelemetry != null)
+                    {
+                        KnownTelemetry.BuildTelemetry.ServerFallbackReason = "Arguments";
+                    }
                 }
             }
             catch (Exception ex)
