diff --git a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
index 81343548286..027d79e6239 100644
--- a/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
+++ b/src/Build/PublicAPI/net/PublicAPI.Shipped.txt
@@ -1047,10 +1047,6 @@ Microsoft.Build.Execution.BuildRequestData.ProjectInstance.get -> Microsoft.Buil
 Microsoft.Build.Execution.BuildRequestData.PropertiesToTransfer.get -> System.Collections.Generic.IEnumerable<string>
 Microsoft.Build.Execution.BuildRequestData.RequestedProjectState.get -> Microsoft.Build.Execution.RequestedProjectState
 Microsoft.Build.Execution.BuildRequestData.TargetNames.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Execution.BuildRequestData.InputResultsCacheFiles.get -> string[]
-Microsoft.Build.Execution.BuildRequestData.InputResultsCacheFiles.set -> void
-Microsoft.Build.Execution.BuildRequestData.OutputResultsCacheFile.get -> string
-Microsoft.Build.Execution.BuildRequestData.OutputResultsCacheFile.set -> void
 Microsoft.Build.Execution.BuildRequestDataFlags
 Microsoft.Build.Execution.BuildRequestDataFlags.ClearCachesAfterBuild = 8 -> Microsoft.Build.Execution.BuildRequestDataFlags
 Microsoft.Build.Execution.BuildRequestDataFlags.FailOnUnresolvedSdk = 128 -> Microsoft.Build.Execution.BuildRequestDataFlags
@@ -1374,7 +1370,6 @@ Microsoft.Build.Globbing.MSBuildGlobWithGaps.IsMatch(string stringToMatch) -> bo
 Microsoft.Build.Globbing.MSBuildGlobWithGaps.MainGlob.get -> Microsoft.Build.Globbing.IMSBuildGlob
 Microsoft.Build.Globbing.MSBuildGlobWithGaps.MSBuildGlobWithGaps(Microsoft.Build.Globbing.IMSBuildGlob mainGlob, params Microsoft.Build.Globbing.IMSBuildGlob[] gaps) -> void
 Microsoft.Build.Globbing.MSBuildGlobWithGaps.MSBuildGlobWithGaps(Microsoft.Build.Globbing.IMSBuildGlob mainGlob, System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> gaps) -> void
-Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate
 Microsoft.Build.Graph.GraphBuildOptions
 Microsoft.Build.Graph.GraphBuildOptions.Build.get -> bool
 Microsoft.Build.Graph.GraphBuildOptions.Build.init -> void
@@ -1384,7 +1379,6 @@ Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildOptions.get -> Microsoft.B
 Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild) -> void
 Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
 Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, System.Collections.Generic.ICollection<Microsoft.Build.Graph.ProjectGraphNode> startingNodes, Microsoft.Build.Graph.ProjectGraphNodeDirection direction = Microsoft.Build.Graph.ProjectGraphNodeDirection.Current, Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate graphBuildCacheFilePathDelegate = null) -> void
 Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild) -> void
 Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices) -> void
 Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraphEntryPoint projectGraphEntryPoint, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags) -> void
@@ -1398,10 +1392,6 @@ Microsoft.Build.Graph.GraphBuildRequestData.HostServices.get -> Microsoft.Build.
 Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraph.get -> Microsoft.Build.Graph.ProjectGraph
 Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraphEntryPoints.get -> System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphEntryPoint>
 Microsoft.Build.Graph.GraphBuildRequestData.TargetNames.get -> System.Collections.Generic.ICollection<string>
-Microsoft.Build.Graph.GraphBuildRequestData.StartingGraphNodes.get -> System.Collections.Generic.ICollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraphNodeDirection.get -> Microsoft.Build.Graph.ProjectGraphNodeDirection
-Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildCacheFilePath.get -> Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate
-Microsoft.Build.Graph.GraphBuildRequestData.IsolateProjects.get -> bool
 Microsoft.Build.Graph.GraphBuildResult
 Microsoft.Build.Graph.GraphBuildResult.CircularDependency.get -> bool
 Microsoft.Build.Graph.GraphBuildResult.Exception.get -> System.Exception
@@ -1458,13 +1448,6 @@ Microsoft.Build.Graph.ProjectGraphNode
 Microsoft.Build.Graph.ProjectGraphNode.ProjectInstance.get -> Microsoft.Build.Execution.ProjectInstance
 Microsoft.Build.Graph.ProjectGraphNode.ProjectReferences.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
 Microsoft.Build.Graph.ProjectGraphNode.ReferencingProjects.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraphVisitor
-Microsoft.Build.Graph.ProjectGraphVisitor.ProjectGraphVisitor() -> void
-Microsoft.Build.Graph.ProjectGraphVisitor.FindAll(Microsoft.Build.Graph.ProjectGraphNode graphNode, Microsoft.Build.Graph.ProjectGraphNodeDirection direction) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphNode>
-Microsoft.Build.Graph.ProjectGraphNodeDirection
-Microsoft.Build.Graph.ProjectGraphNodeDirection.Current = 0 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
-Microsoft.Build.Graph.ProjectGraphNodeDirection.Down = 1 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
-Microsoft.Build.Graph.ProjectGraphNodeDirection.Up = 2 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
 Microsoft.Build.Logging.BinaryLogger
 Microsoft.Build.Logging.BinaryLogger.BinaryLogger() -> void
 Microsoft.Build.Logging.BinaryLogger.CollectProjectImports.get -> Microsoft.Build.Logging.BinaryLogger.ProjectImportsCollectionMode
diff --git a/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt b/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
index 9281b0c3cf8..8104140eed7 100644
--- a/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
+++ b/src/Build/PublicAPI/net/PublicAPI.Unshipped.txt
@@ -1,5 +1,10 @@
 Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.get -> Microsoft.Build.FileSystem.IDirectoryCacheFactory
 Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.set -> void
+Microsoft.Build.Execution.BuildManager.LoadCachedResults(string[] cacheFiles) -> System.Collections.Generic.Dictionary<Microsoft.Build.Execution.BuildRequestData, Microsoft.Build.Execution.BuildResult>
+Microsoft.Build.Execution.BuildRequestData.InputResultsCacheFiles.get -> string[]
+Microsoft.Build.Execution.BuildRequestData.InputResultsCacheFiles.set -> void
+Microsoft.Build.Execution.BuildRequestData.OutputResultsCacheFile.get -> string
+Microsoft.Build.Execution.BuildRequestData.OutputResultsCacheFile.set -> void
 Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.PluginLoggerBase() -> void
 Microsoft.Build.FileSystem.FindPredicate
 Microsoft.Build.FileSystem.FindTransform<TResult>
@@ -10,4 +15,17 @@ Microsoft.Build.FileSystem.IDirectoryCache.EnumerateFiles<TResult>(string path,
 Microsoft.Build.FileSystem.IDirectoryCache.FileExists(string path) -> bool
 Microsoft.Build.FileSystem.IDirectoryCacheFactory
 Microsoft.Build.FileSystem.IDirectoryCacheFactory.GetDirectoryCacheForEvaluation(int evaluationId) -> Microsoft.Build.FileSystem.IDirectoryCache
+Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate
+Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildCacheFilePath.get -> Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate
+Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, System.Collections.Generic.ICollection<Microsoft.Build.Graph.ProjectGraphNode> startingNodes, Microsoft.Build.Graph.ProjectGraphNodeDirection direction = Microsoft.Build.Graph.ProjectGraphNodeDirection.Current, Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate graphBuildCacheFilePathDelegate = null) -> void
+Microsoft.Build.Graph.GraphBuildRequestData.IsolateProjects.get -> bool
+Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraphNodeDirection.get -> Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.GraphBuildRequestData.StartingGraphNodes.get -> System.Collections.Generic.ICollection<Microsoft.Build.Graph.ProjectGraphNode>
+Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.ProjectGraphNodeDirection.Current = 0 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.ProjectGraphNodeDirection.Down = 1 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.ProjectGraphNodeDirection.Up = 2 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.ProjectGraphVisitor
+Microsoft.Build.Graph.ProjectGraphVisitor.FindAll(Microsoft.Build.Graph.ProjectGraphNode graphNode, Microsoft.Build.Graph.ProjectGraphNodeDirection direction) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphNode>
+Microsoft.Build.Graph.ProjectGraphVisitor.ProjectGraphVisitor() -> void
 static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
diff --git a/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt b/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
index 218e7d4593d..8104140eed7 100644
--- a/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
+++ b/src/Build/PublicAPI/netstandard/PublicAPI.Unshipped.txt
@@ -1,5 +1,10 @@
 Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.get -> Microsoft.Build.FileSystem.IDirectoryCacheFactory
 Microsoft.Build.Definition.ProjectOptions.DirectoryCacheFactory.set -> void
+Microsoft.Build.Execution.BuildManager.LoadCachedResults(string[] cacheFiles) -> System.Collections.Generic.Dictionary<Microsoft.Build.Execution.BuildRequestData, Microsoft.Build.Execution.BuildResult>
+Microsoft.Build.Execution.BuildRequestData.InputResultsCacheFiles.get -> string[]
+Microsoft.Build.Execution.BuildRequestData.InputResultsCacheFiles.set -> void
+Microsoft.Build.Execution.BuildRequestData.OutputResultsCacheFile.get -> string
+Microsoft.Build.Execution.BuildRequestData.OutputResultsCacheFile.set -> void
 Microsoft.Build.Experimental.ProjectCache.PluginLoggerBase.PluginLoggerBase() -> void
 Microsoft.Build.FileSystem.FindPredicate
 Microsoft.Build.FileSystem.FindTransform<TResult>
@@ -10,4 +15,17 @@ Microsoft.Build.FileSystem.IDirectoryCache.EnumerateFiles<TResult>(string path,
 Microsoft.Build.FileSystem.IDirectoryCache.FileExists(string path) -> bool
 Microsoft.Build.FileSystem.IDirectoryCacheFactory
 Microsoft.Build.FileSystem.IDirectoryCacheFactory.GetDirectoryCacheForEvaluation(int evaluationId) -> Microsoft.Build.FileSystem.IDirectoryCache
-static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
\ No newline at end of file
+Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate
+Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildCacheFilePath.get -> Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate
+Microsoft.Build.Graph.GraphBuildRequestData.GraphBuildRequestData(Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.ICollection<string> targetsToBuild, Microsoft.Build.Execution.HostServices hostServices, Microsoft.Build.Execution.BuildRequestDataFlags flags, System.Collections.Generic.ICollection<Microsoft.Build.Graph.ProjectGraphNode> startingNodes, Microsoft.Build.Graph.ProjectGraphNodeDirection direction = Microsoft.Build.Graph.ProjectGraphNodeDirection.Current, Microsoft.Build.Graph.GraphBuildCacheFilePathDelegate graphBuildCacheFilePathDelegate = null) -> void
+Microsoft.Build.Graph.GraphBuildRequestData.IsolateProjects.get -> bool
+Microsoft.Build.Graph.GraphBuildRequestData.ProjectGraphNodeDirection.get -> Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.GraphBuildRequestData.StartingGraphNodes.get -> System.Collections.Generic.ICollection<Microsoft.Build.Graph.ProjectGraphNode>
+Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.ProjectGraphNodeDirection.Current = 0 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.ProjectGraphNodeDirection.Down = 1 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.ProjectGraphNodeDirection.Up = 2 -> Microsoft.Build.Graph.ProjectGraphNodeDirection
+Microsoft.Build.Graph.ProjectGraphVisitor
+Microsoft.Build.Graph.ProjectGraphVisitor.FindAll(Microsoft.Build.Graph.ProjectGraphNode graphNode, Microsoft.Build.Graph.ProjectGraphNodeDirection direction) -> System.Collections.Generic.IEnumerable<Microsoft.Build.Graph.ProjectGraphNode>
+Microsoft.Build.Graph.ProjectGraphVisitor.ProjectGraphVisitor() -> void
+static Microsoft.Build.Globbing.CompositeGlob.Create(System.Collections.Generic.IEnumerable<Microsoft.Build.Globbing.IMSBuildGlob> globs) -> Microsoft.Build.Globbing.IMSBuildGlob
