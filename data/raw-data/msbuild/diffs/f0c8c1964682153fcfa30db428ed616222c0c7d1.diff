diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
index 1e420ebcc03..ee0ab28bf8a 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
@@ -49,10 +49,13 @@ public void Shutdown()
     {
     }
 
-    }
-
     private void HandleProjectEvaluationFinishedEvent(ProjectEvaluationFinishedEventArgs eventArgs)
     {
+        if (isRestore)
+        {
+            return;
+        }
+
         if (!IsMetaProjFile(eventArgs.ProjectFile))
         {
             _buildCheckManager.ProcessEvaluationFinishedEventArgs(
@@ -65,12 +68,30 @@ private void HandleProjectEvaluationFinishedEvent(ProjectEvaluationFinishedEvent
 
     private void HandleProjectEvaluationStartedEvent(ProjectEvaluationStartedEventArgs eventArgs)
     {
+        if (eventArgs.IsRestore)
+        {
+            isRestore = true;
+            return;
+        }
+
         if (!IsMetaProjFile(eventArgs.ProjectFile))
         {
             _buildCheckManager.StartProjectEvaluation(BuildCheckDataSource.EventArgs, eventArgs.BuildEventContext!, eventArgs.ProjectFile!);
         }
     }
 
+    private void HandleProjectFinishedEvent(ProjectFinishedEventArgs projectFinishedEventArgs)
+    {
+        if (isRestore)
+        {
+            isRestore = false;
+        }
+        else
+        {
+            _buildCheckManager.EndProjectRequest(BuildCheckDataSource.EventArgs, projectFinishedEventArgs.BuildEventContext!);
+        }
+    }
+
     private bool IsMetaProjFile(string? projectFile) => !string.IsNullOrEmpty(projectFile) && projectFile!.EndsWith(".metaproj", StringComparison.OrdinalIgnoreCase);
 
     private void EventSource_AnyEventRaised(object sender, BuildEventArgs e)
@@ -105,8 +126,15 @@ private void EventSource_BuildFinished(object sender, BuildFinishedEventArgs e)
     {
         { typeof(ProjectEvaluationFinishedEventArgs), (BuildEventArgs e) => HandleProjectEvaluationFinishedEvent((ProjectEvaluationFinishedEventArgs) e) },
         { typeof(ProjectEvaluationStartedEventArgs), (BuildEventArgs e) => HandleProjectEvaluationStartedEvent((ProjectEvaluationStartedEventArgs) e) },
-        { typeof(ProjectStartedEventArgs), (BuildEventArgs e) => _buildCheckManager.StartProjectRequest(BuildCheckDataSource.EventArgs, e.BuildEventContext!) },
-        { typeof(ProjectFinishedEventArgs), (BuildEventArgs e) => _buildCheckManager.EndProjectRequest(BuildCheckDataSource.EventArgs, e.BuildEventContext!) },
+        { typeof(ProjectStartedEventArgs), (BuildEventArgs e) => 
+            {
+              if (!isRestore)
+              {
+                _buildCheckManager.StartProjectRequest(BuildCheckDataSource.EventArgs, e.BuildEventContext!);
+              }
+            }
+        },
+        { typeof(ProjectFinishedEventArgs), (BuildEventArgs e) => HandleProjectFinishedEvent((ProjectFinishedEventArgs) e) },
         { typeof(BuildCheckTracingEventArgs), (BuildEventArgs e) => _stats.Merge(((BuildCheckTracingEventArgs)e).TracingData, (span1, span2) => span1 + span2) },
         { typeof(BuildCheckAcquisitionEventArgs), (BuildEventArgs e) => _buildCheckManager.ProcessAnalyzerAcquisition(((BuildCheckAcquisitionEventArgs)e).ToAnalyzerAcquisitionData(), e.BuildEventContext!) },
     };
diff --git a/src/BuildCheck.UnitTests/EndToEndTests.cs b/src/BuildCheck.UnitTests/EndToEndTests.cs
index 86ae9d6fb46..85f5f495d4b 100644
--- a/src/BuildCheck.UnitTests/EndToEndTests.cs
+++ b/src/BuildCheck.UnitTests/EndToEndTests.cs
@@ -39,7 +39,7 @@ public void SampleAnalyzerIntegrationTest(bool buildInOutOfProcessNode, bool ana
         _env.SetEnvironmentVariable("MSBUILDNOINPROCNODE", buildInOutOfProcessNode ? "1" : "0");
         _env.SetEnvironmentVariable("MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION", "1");
         string output = RunnerUtilities.ExecBootstrapedMSBuild(
-            $"{Path.GetFileName(projectFile.Path)} /m:1 -nr:False -restore" +
+            $"{Path.GetFileName(projectFile.Path)} /m:1 /p:BuildProjectReferences=false -nr:False -restore" +
             (analysisRequested ? " -analyze" : string.Empty), out bool success, false, _env.Output);
         _env.Output.WriteLine(output);
         success.ShouldBeTrue();
