diff --git a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
index 9d84f59dd30..071af8327ee 100644
--- a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
+++ b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
@@ -1195,7 +1195,8 @@ public void ProcessWarnAsMessageSwitchEmpty()
         {
             CommandLineSwitches commandLineSwitches = new CommandLineSwitches();
 
-            string command = "{0}"; // This is a hack so the error message contains the exact resource string.
+            // Set "expanded" content to match the placeholder so the verify can use the exact resource string as "expected."
+            string command = "{0}";
             MSBuildApp.GatherCommandLineSwitches(new List<string>(new[] { "/warnasmessage" }), commandLineSwitches, command);
 
             VerifySwitchError(commandLineSwitches, "/warnasmessage", AssemblyResources.GetString("MissingWarnAsMessageParameterError"));
diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index 5510116f5e1..59cad0ce42f 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -396,7 +396,7 @@ private struct DetectedParameterizedSwitch
         private DetectedParameterizedSwitch[] _parameterizedSwitches;
         // NOTE: the above arrays are instance members because this class is not required to be a singleton
 
-        internal static Dictionary<string, string> SwitchesFromResponseFiles = new();
+        internal static List<(string path, string contents)> SwitchesFromResponseFiles = new();
 
         /// <summary>
         /// Default constructor.
@@ -807,9 +807,9 @@ internal void ThrowErrors()
                 else
                 {
                     StringBuilder sb = StringBuilderCache.Acquire();
-                    foreach (KeyValuePair<string, string> kvp in SwitchesFromResponseFiles)
+                    foreach ((string path, string contents) in SwitchesFromResponseFiles)
                     {
-                        sb.Append($"\n{ResourceUtilities.FormatResourceStringStripCodeAndKeyword("ResponseFileSwitchFromLocation", kvp.Value, kvp.Key)}");
+                        sb.Append($"\n{ResourceUtilities.FormatResourceStringStripCodeAndKeyword("ResponseFileSwitchFromLocation", contents, path)}");
                     }
                     CommandLineSwitchException.Throw("SwitchErrorWithArguments", _badCommandLineArg, ResourceUtilities.GetResourceString(_errorMessage), _commandLine, StringBuilderCache.GetStringAndRelease(sb));
                 }
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 0681743b709..ba59df0a19a 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1795,7 +1795,7 @@ private static void GatherResponseFileSwitch(string unquotedCommandLineArg, Comm
                             }
                         }
 
-                        CommandLineSwitches.SwitchesFromResponseFiles[responseFile] = string.Join(" ", argsFromResponseFile);
+                        CommandLineSwitches.SwitchesFromResponseFiles.Add((responseFile, string.Join(" ", argsFromResponseFile)));
 
                         GatherCommandLineSwitches(argsFromResponseFile, commandLineSwitches, commandLine);
                     }
