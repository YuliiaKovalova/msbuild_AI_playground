diff --git a/ref/Microsoft.Build.Tasks.Core/net/Microsoft.Build.Tasks.Core.cs b/ref/Microsoft.Build.Tasks.Core/net/Microsoft.Build.Tasks.Core.cs
index e6162435505..0c71f5d7390 100644
--- a/ref/Microsoft.Build.Tasks.Core/net/Microsoft.Build.Tasks.Core.cs
+++ b/ref/Microsoft.Build.Tasks.Core/net/Microsoft.Build.Tasks.Core.cs
@@ -173,7 +173,6 @@ public CombineXmlElements() { }
         [Microsoft.Build.Framework.OutputAttribute]
         public string Result { get { throw null; } set { } }
         public string RootElementName { get { throw null; } set { } }
-        public bool UseAttributeForTargetFrameworkInfoPropertyNames { get { throw null; } set { } }
         public Microsoft.Build.Framework.ITaskItem[] XmlElements { get { throw null; } set { } }
         public override bool Execute() { throw null; }
     }
diff --git a/ref/Microsoft.Build.Tasks.Core/netstandard/Microsoft.Build.Tasks.Core.cs b/ref/Microsoft.Build.Tasks.Core/netstandard/Microsoft.Build.Tasks.Core.cs
index d010f28ea1f..032e84fecf9 100644
--- a/ref/Microsoft.Build.Tasks.Core/netstandard/Microsoft.Build.Tasks.Core.cs
+++ b/ref/Microsoft.Build.Tasks.Core/netstandard/Microsoft.Build.Tasks.Core.cs
@@ -103,7 +103,6 @@ public CombineXmlElements() { }
         [Microsoft.Build.Framework.OutputAttribute]
         public string Result { get { throw null; } set { } }
         public string RootElementName { get { throw null; } set { } }
-        public bool UseAttributeForTargetFrameworkInfoPropertyNames { get { throw null; } set { } }
         public Microsoft.Build.Framework.ITaskItem[] XmlElements { get { throw null; } set { } }
         public override bool Execute() { throw null; }
     }
diff --git a/src/Tasks/CombineXmlElements.cs b/src/Tasks/CombineXmlElements.cs
index 5aa23454efe..214207b1b6e 100644
--- a/src/Tasks/CombineXmlElements.cs
+++ b/src/Tasks/CombineXmlElements.cs
@@ -2,7 +2,6 @@
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using Microsoft.Build.Framework;
-using Microsoft.Build.Shared;
 using System.Xml.Linq;
 
 namespace Microsoft.Build.Tasks
@@ -20,12 +19,7 @@ public class CombineXmlElements : TaskExtension
         /// <summary>
         /// The XML elements to include as children of the root element
         /// </summary>
-        public ITaskItem[] XmlElements { get; set; }
-
-        /// <summary>
-        /// Opts into or out of using the new schema with Property Name=... rather than just specifying the RootElementName.
-        /// </summary>
-        public bool UseAttributeForTargetFrameworkInfoPropertyNames { get; set; } = false;
+        public ITaskItem [] XmlElements { get; set; }
 
         /// <summary>
         /// The generated XML
@@ -37,9 +31,7 @@ public override bool Execute()
         {
             if (XmlElements != null)
             {
-                XElement root = UseAttributeForTargetFrameworkInfoPropertyNames ?
-                    new("Property", new XAttribute("Name", EscapingUtilities.Escape(RootElementName))) :
-                    new(RootElementName);
+                XElement root = new XElement(RootElementName);
 
                 foreach (var item in XmlElements)
                 {
diff --git a/src/Tasks/Microsoft.Common.CrossTargeting.targets b/src/Tasks/Microsoft.Common.CrossTargeting.targets
index 9a3c035d5ea..c7d553aecd3 100644
--- a/src/Tasks/Microsoft.Common.CrossTargeting.targets
+++ b/src/Tasks/Microsoft.Common.CrossTargeting.targets
@@ -29,14 +29,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <Error Condition="'$(IsCrossTargetingBuild)' != 'true'"
            Text="Internal MSBuild error: CrossTargeting GetTargetFrameworks target should only be used in cross targeting (outer) build" />
 
-    <PropertyGroup>
-      <_UseAttributeForTargetFrameworkInfoPropertyNames Condition="'$(_UseAttributeForTargetFrameworkInfoPropertyNames)' == ''">false</_UseAttributeForTargetFrameworkInfoPropertyNames>
-    </PropertyGroup>
-    
     <CombineXmlElements
       RootElementName="AdditionalProjectProperties"
-      XmlElements="@(_TargetFrameworkInfo->'%(AdditionalPropertiesFromProject)')"
-      UseAttributeForTargetFrameworkInfoPropertyNames="$(_UseAttributeForTargetFrameworkInfoPropertyNames)">
+      XmlElements="@(_TargetFrameworkInfo->'%(AdditionalPropertiesFromProject)')">
       <Output TaskParameter="Result"
         PropertyName="_AdditionalPropertiesFromProject"/>
     </CombineXmlElements>
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 53fc2339f87..1262c54d61a 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -1869,14 +1869,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <Error Condition="'$(IsCrossTargetingBuild)' == 'true'"
            Text="Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build" />
 
-    <PropertyGroup>
-      <_UseAttributeForTargetFrameworkInfoPropertyNames Condition="'$(_UseAttributeForTargetFrameworkInfoPropertyNames)' == ''">false</_UseAttributeForTargetFrameworkInfoPropertyNames>
-    </PropertyGroup>
-  
     <CombineXmlElements
       RootElementName="AdditionalProjectProperties"
-      XmlElements="@(_TargetFrameworkInfo->'%(AdditionalPropertiesFromProject)')"
-      UseAttributeForTargetFrameworkInfoPropertyNames="$(_UseAttributeForTargetFrameworkInfoPropertyNames)">
+      XmlElements="@(_TargetFrameworkInfo->'%(AdditionalPropertiesFromProject)')">
       <Output TaskParameter="Result"
         PropertyName="_AdditionalPropertiesFromProject"/>
     </CombineXmlElements>
