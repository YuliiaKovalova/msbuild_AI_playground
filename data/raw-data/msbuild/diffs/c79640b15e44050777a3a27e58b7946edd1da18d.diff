diff --git a/eng/cibuild_bootstrapped_msbuild.ps1 b/eng/cibuild_bootstrapped_msbuild.ps1
index b9c1cf4fe0c..72ee9cc9ad5 100644
--- a/eng/cibuild_bootstrapped_msbuild.ps1
+++ b/eng/cibuild_bootstrapped_msbuild.ps1
@@ -64,7 +64,15 @@ try {
 
   if ($buildStage1)
   {
-    & $PSScriptRoot\Common\Build.ps1 -restore -build -ci -msbuildEngine $msbuildEngine /p:CreateBootstrap=true @properties
+    # Run rests on Full Framework instead of the commented code below. 
+    if ($msbuildEngine -eq 'vs')
+    {
+        & $PSScriptRoot\Common\Build.ps1 -restore -build -test -ci -msbuildEngine $msbuildEngine /p:CreateBootstrap=true @properties
+    }
+    else
+    {
+        & $PSScriptRoot\Common\Build.ps1 -restore -build -ci -msbuildEngine $msbuildEngine /p:CreateBootstrap=true @properties
+    }
   }
 
   KillProcessesFromRepo
@@ -75,55 +83,56 @@ try {
   $dotnetToolPath = InitializeDotNetCli $true
   $dotnetExePath = Join-Path $dotnetToolPath "dotnet.exe"
 
-  if ($msbuildEngine -eq 'vs')
-  {
-    $buildToolPath = Join-Path $bootstrapRoot "net472\MSBuild\Current\Bin\MSBuild.exe"
-    $buildToolCommand = "";
-    $buildToolFramework = "net472"
-
-    if ($configuration -eq "Debug-MONO" -or $configuration -eq "Release-MONO")
-    {
-      # Copy MSBuild.dll to MSBuild.exe so we can run it without a host
-      $sourceDll = Join-Path $bootstrapRoot "net472\MSBuild\Current\Bin\MSBuild.dll"
-      Copy-Item -Path $sourceDll -Destination $msbuildToUse
-    }
-  }
-  else
+  # Comment the block in order to unblock security fix: https://github.com/dotnet/msbuild/pull/9868.
+  # if ($msbuildEngine -eq 'vs')
+  # {
+  #   $buildToolPath = Join-Path $bootstrapRoot "net472\MSBuild\Current\Bin\MSBuild.exe"
+  #   $buildToolCommand = "";
+  #   $buildToolFramework = "net472"
+  # 
+  #   if ($configuration -eq "Debug-MONO" -or $configuration -eq "Release-MONO")
+  #   {
+  #     # Copy MSBuild.dll to MSBuild.exe so we can run it without a host
+  #     $sourceDll = Join-Path $bootstrapRoot "net472\MSBuild\Current\Bin\MSBuild.dll"
+  #     Copy-Item -Path $sourceDll -Destination $msbuildToUse
+  #   }
+  # }
+  if ($msbuildEngine -ne 'vs')
   {
     $buildToolPath = $dotnetExePath
     $buildToolCommand = Join-Path $bootstrapRoot "net6.0\MSBuild\MSBuild.dll"
     $buildToolFramework = "netcoreapp3.1"
-  }
-
-  # Use separate artifacts folder for stage 2
-  # $env:ArtifactsDir = Join-Path $ArtifactsDir "2\"
-
-  & $dotnetExePath build-server shutdown
-
-  if ($buildStage1)
-  {
-    if (Test-Path $Stage1Dir)
+    # Use separate artifacts folder for stage 2
+    # $env:ArtifactsDir = Join-Path $ArtifactsDir "2\"
+    
+    & $dotnetExePath build-server shutdown
+    
+    if ($buildStage1)
     {
-      Remove-Item -Force -Recurse $Stage1Dir
-    }
-
-    Move-Item -Path $ArtifactsDir -Destination $Stage1Dir -Force
+      if (Test-Path $Stage1Dir)
+      {
+        Remove-Item -Force -Recurse $Stage1Dir
+      }
+    
+      Move-Item -Path $ArtifactsDir -Destination $Stage1Dir -Force
+      }
+      
+      $buildTool = @{ Path = $buildToolPath; Command = $buildToolCommand; Tool = $msbuildEngine; Framework = $buildToolFramework }
+      $global:_BuildTool = $buildTool
+      
+      # Ensure that debug bits fail fast, rather than hanging waiting for a debugger attach.
+      $env:MSBUILDDONOTLAUNCHDEBUGGER="true"
+      
+      # Opt into performance logging. https://github.com/dotnet/msbuild/issues/5900
+      $env:DOTNET_PERFLOG_DIR=$PerfLogDir
+    
+      # When using bootstrapped MSBuild:
+      # - Turn off node reuse (so that bootstrapped MSBuild processes don't stay running and lock files)
+      # - Do run tests
+      # - Don't try to create a bootstrap deployment
+      & $PSScriptRoot\Common\Build.ps1 -restore -build -test -ci /p:CreateBootstrap=false /nr:false @properties
   }
-
-  $buildTool = @{ Path = $buildToolPath; Command = $buildToolCommand; Tool = $msbuildEngine; Framework = $buildToolFramework }
-  $global:_BuildTool = $buildTool
-
-  # Ensure that debug bits fail fast, rather than hanging waiting for a debugger attach.
-  $env:MSBUILDDONOTLAUNCHDEBUGGER="true"
-
-  # Opt into performance logging. https://github.com/dotnet/msbuild/issues/5900
-  $env:DOTNET_PERFLOG_DIR=$PerfLogDir
-
-  # When using bootstrapped MSBuild:
-  # - Turn off node reuse (so that bootstrapped MSBuild processes don't stay running and lock files)
-  # - Do run tests
-  # - Don't try to create a bootstrap deployment
-  & $PSScriptRoot\Common\Build.ps1 -restore -build -test -ci /p:CreateBootstrap=false /nr:false @properties
+  
 
   exit $lastExitCode
 }
