diff --git a/src/Tasks.UnitTests/XmlPoke_Tests.cs b/src/Tasks.UnitTests/XmlPoke_Tests.cs
index 1d6a4a212af..88caa456fad 100644
--- a/src/Tasks.UnitTests/XmlPoke_Tests.cs
+++ b/src/Tasks.UnitTests/XmlPoke_Tests.cs
@@ -174,16 +174,26 @@ public void PokeMissingParams()
         public void XmlPokeWithEmptyValue()
         {
             string xmlInputPath;
+            string query = "//class/variable/@Name";
             Prepare(_xmlFileNoNs, out xmlInputPath);
-            string projectContents = @"
+            string projectContents = $"""
                 <Project ToolsVersion='msbuilddefaulttoolsversion'>
                 <Target Name='Poke'>
-                    <XmlPoke Value='' Query='//class/variable/@Name' XmlInputPath='{0}'/>
+                    <XmlPoke Value='' Query='{query}' XmlInputPath='{xmlInputPath}'/>
                 </Target>
-                </Project>";
-            projectContents = string.Format(projectContents, xmlInputPath);
+                </Project>
+                """;
 
             ObjectModelHelpers.BuildProjectExpectSuccess(projectContents);
+
+            string result = File.ReadAllText(xmlInputPath);
+            XmlDocument xmlDocument = new XmlDocument();
+            xmlDocument.LoadXml(result);
+            List<XmlAttribute> nodes = xmlDocument.SelectNodes(query)?.Cast<XmlAttribute>().ToList();
+            foreach (var node in nodes)
+            {
+                node.Value.ShouldBe(string.Empty);
+            }
         }
 
         [Fact]
diff --git a/src/Tasks/XmlPoke.cs b/src/Tasks/XmlPoke.cs
index 84ec8907e72..78f0fa6c50c 100644
--- a/src/Tasks/XmlPoke.cs
+++ b/src/Tasks/XmlPoke.cs
@@ -31,11 +31,6 @@ public class XmlPoke : TaskExtension
         /// </summary>
         private string _query;
 
-        /// <summary>
-        /// The property that this task will set.
-        /// </summary>
-        private ITaskItem _value;
-
         #endregion
 
         #region Properties
@@ -70,11 +65,7 @@ public string Query
         /// <summary>
         /// The value to be inserted into the specified location.
         /// </summary>        
-        public ITaskItem Value
-        {
-            get => _value;
-            set => _value = value;
-        }
+        public ITaskItem Value { get; set; }
 
         /// <summary>
         /// The namespaces for XPath query's prefixes.
@@ -91,10 +82,10 @@ public override bool Execute()
         {
             ErrorUtilities.VerifyThrowArgumentNull(_query, "Query");
             ErrorUtilities.VerifyThrowArgumentNull(_xmlInputPath, "XmlInputPath");
-            if (_value == null)
+            if (Value == null)
             {
                 // When Value is null, it means Value is not set or empty. Here we treat them all as empty.
-                _value = new TaskItem(String.Empty);
+                Value = new TaskItem(String.Empty);
             }
 
             // Load the XPath Document
@@ -163,12 +154,12 @@ public override bool Execute()
                 try
                 {
                     count++;
-                    iter.Current.InnerXml = _value.ItemSpec;
-                    Log.LogMessageFromResources(MessageImportance.Low, "XmlPoke.Replaced", iter.Current.Name, _value.ItemSpec);
+                    iter.Current.InnerXml = Value.ItemSpec;
+                    Log.LogMessageFromResources(MessageImportance.Low, "XmlPoke.Replaced", iter.Current.Name, Value.ItemSpec);
                 }
                 catch (Exception e) when (!ExceptionHandling.IsCriticalException(e))
                 {
-                    Log.LogErrorWithCodeFromResources("XmlPoke.PokeError", _value.ItemSpec, e.Message);
+                    Log.LogErrorWithCodeFromResources("XmlPoke.PokeError", Value.ItemSpec, e.Message);
                     return false;
                 }
             }
