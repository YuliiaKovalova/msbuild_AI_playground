diff --git a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
index 8d2d718b84f..08b13925ebe 100644
--- a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
+++ b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
@@ -62,11 +62,12 @@ public int RequestCores(int requestedCores)
             {
                 if (!NativeMethodsShared.IsWindows)
                 {
-                    return 0;
+                    // Since the current implementation of the cross-process resource count uses
+                    // named semaphores, it's not usable on non-Windows, so just return the
+                    // guaranteed resource.
+                    return 1;
                 }
 
-                // TODO: ErrorUtilities should be annotated so this can just be `ErrorUtilities.VerifyThrow`
-                // https://github.com/microsoft/msbuild/issues/5163
                 throw new InternalErrorException($"{nameof(ResourceManagerService)} was called while uninitialized");
             }
 
@@ -91,8 +92,13 @@ public void ReleaseCores(int coresToRelease)
         {
             if (s is null)
             {
-                // TODO: ErrorUtilities should be annotated so this can just be `ErrorUtilities.VerifyThrow`
-                // https://github.com/microsoft/msbuild/issues/5163
+                if (!NativeMethodsShared.IsWindows)
+                {
+                    // Since the current implementation of the cross-process resource count uses
+                    // named semaphores, it's not usable on non-Windows, so just continue.
+                    return;
+                }
+
                 throw new InternalErrorException($"{nameof(ResourceManagerService)} was called while uninitialized");
             }
 
