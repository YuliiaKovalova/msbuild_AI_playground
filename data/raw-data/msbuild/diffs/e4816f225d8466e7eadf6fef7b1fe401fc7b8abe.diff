diff --git a/src/Build/Utilities/FileSpecMatchTester.cs b/src/Build/Utilities/FileSpecMatchTester.cs
index c91234e397e..2b807b34095 100644
--- a/src/Build/Utilities/FileSpecMatchTester.cs
+++ b/src/Build/Utilities/FileSpecMatchTester.cs
@@ -43,7 +43,7 @@ public bool IsMatch(string fileToMatch)
                 return _regex.IsMatch(normalizedFileToMatch);
             }
 
-            return FileUtilities.ComparePathsNoThrow(_unescapedFileSpec, fileToMatch, _currentDirectory);
+            return FileUtilities.CaseInsensitiveComparePathsNoThrow(_unescapedFileSpec, fileToMatch, _currentDirectory);
         }
 
         // this method parses the glob and extracts the fixed directory part in order to normalize it and make it absolute
diff --git a/src/Shared/FileUtilities.cs b/src/Shared/FileUtilities.cs
index 6e6f789c2c1..0241d99d608 100644
--- a/src/Shared/FileUtilities.cs
+++ b/src/Shared/FileUtilities.cs
@@ -751,6 +751,28 @@ internal static bool ComparePathsNoThrow(string first, string second, string cur
             return string.Equals(firstFullPath, secondFullPath, PathComparison);
         }
 
+        /// <summary>
+        /// Compare if two paths, relative to the given currentDirectory are equal.
+        /// Does not throw IO exceptions. See <see cref="GetFullPathNoThrow(string)"/>
+        /// </summary>
+        /// <param name="first"></param>
+        /// <param name="second"></param>
+        /// <param name="currentDirectory"></param>
+        /// <returns></returns>
+        internal static bool CaseInsensitiveComparePathsNoThrow(string first, string second, string currentDirectory)
+        {
+            // perf: try comparing the bare strings first
+            if (string.Equals(first, second, StringComparer.OrdinalIgnoreCase))
+            {
+                return true;
+            }
+
+            var firstFullPath = NormalizePathForComparisonNoThrow(first, currentDirectory);
+            var secondFullPath = NormalizePathForComparisonNoThrow(second, currentDirectory);
+
+            return string.Equals(firstFullPath, secondFullPath, StringComparer.OrdinalIgnoreCase);
+        }
+
         /// <summary>
         /// Normalizes a path for path comparison
         /// Does not throw IO exceptions. See <see cref="GetFullPathNoThrow(string)"/>
