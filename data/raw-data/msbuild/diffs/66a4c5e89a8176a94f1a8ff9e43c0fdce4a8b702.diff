diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 9a994f7f192..b64fd0ee6e5 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -430,24 +430,32 @@ public void BeginBuild(BuildParameters parameters)
             {
                 if (parameters.LowPriority != _previousLowPriority)
                 {
-                    ProcessPriorityClass priority = parameters.LowPriority ? ProcessPriorityClass.BelowNormal : ProcessPriorityClass.Normal;
-                    IEnumerable<Process> processes = _nodeManager?.GetProcesses();
-                    if (processes is not null)
+                    if (NativeMethodsShared.IsWindows || parameters.LowPriority)
                     {
-                        foreach (Process p in processes)
+                        ProcessPriorityClass priority = parameters.LowPriority ? ProcessPriorityClass.BelowNormal : ProcessPriorityClass.Normal;
+                        IEnumerable<Process> processes = _nodeManager?.GetProcesses();
+                        if (processes is not null)
                         {
-                            UpdatePriority(p, priority);
+                            foreach (Process p in processes)
+                            {
+                                UpdatePriority(p, priority);
+                            }
                         }
-                    }
 
-                    processes = _taskHostNodeManager?.GetProcesses();
-                    if (processes is not null)
-                    {
-                        foreach (Process p in processes)
+                        processes = _taskHostNodeManager?.GetProcesses();
+                        if (processes is not null)
                         {
-                            UpdatePriority(p, priority);
+                            foreach (Process p in processes)
+                            {
+                                UpdatePriority(p, priority);
+                            }
                         }
                     }
+                    else
+                    {
+                        _nodeManager?.ShutdownAllNodes();
+                        _taskHostNodeManager?.ShutdownAllNodes();
+                    }
                }
             }
 
