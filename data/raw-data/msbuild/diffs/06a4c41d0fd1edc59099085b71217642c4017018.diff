diff --git a/src/Tasks.UnitTests/GetAssembliesMetadata_Tests.cs b/src/Tasks.UnitTests/GetAssembliesMetadata_Tests.cs
index 25ec1016e6e..8d50571656d 100644
--- a/src/Tasks.UnitTests/GetAssembliesMetadata_Tests.cs
+++ b/src/Tasks.UnitTests/GetAssembliesMetadata_Tests.cs
@@ -13,21 +13,33 @@
 using Shouldly;
 using Xunit;
 using Xunit.Sdk;
+using Microsoft.Build.UnitTests.Shared;
+using Xunit.Abstractions;
 
 namespace Microsoft.Build.Tasks.UnitTests
 {
     public class GetAssembliesMetadata_Tests
     {
-        private static string TestAssembliesPaths { get; } = Path.Combine(AppContext.BaseDirectory, "TestResources", "Assemblies");
+        private static string TestAssembliesPaths { get; } = Path.Combine(AppContext.BaseDirectory, "TestResources", "Projects");
+
+        private readonly ITestOutputHelper _testOutput;
+
+        public GetAssembliesMetadata_Tests(ITestOutputHelper testOutput)
+        {
+            _testOutput = testOutput;
+        }
 
         [Fact]
         public void CheckPresenceOfCustomCOMAssemblyAttributes()
         {
-            string assemblyPath = Path.Combine(TestAssembliesPaths, "Custom_COM.dll");
+            string testSolutionPath = Path.Combine(TestAssembliesPaths, "Custom_COM");
+            RunnerUtilities.ExecMSBuild(testSolutionPath, out bool success, _testOutput);
+            string assemblyPath = Path.Combine(testSolutionPath, "Custom_COM", "bin", "Debug", "Custom_COM.dll");
             GetAssembliesMetadata t = new() { AssemblyPaths = new[] { assemblyPath } };
 
             bool isSuccess = t.Execute();
 
+            success.ShouldBeTrue();
             isSuccess.ShouldBeTrue();
             t.AssembliesMetadata[0].ItemSpec.ShouldBe(assemblyPath);
             t.AssembliesMetadata[0].GetMetadata("AssemblyName").ShouldBe("Custom_COM");
@@ -38,7 +50,6 @@ public void CheckPresenceOfCustomCOMAssemblyAttributes()
             t.AssembliesMetadata[0].GetMetadata("MajorVersion").ShouldBe("1");
             t.AssembliesMetadata[0].GetMetadata("MinorVersion").ShouldBe("2");
             t.AssembliesMetadata[0].GetMetadata("PeKind").ShouldBe("1");
-            t.AssembliesMetadata[0].GetMetadata("Guid").ShouldBe("a48efb66-2596-4c6a-87ab-c8a765e54429");
             t.AssembliesMetadata[0].GetMetadata("BuildNumber").ShouldBe("3");
             t.AssembliesMetadata[0].GetMetadata("Description").ShouldBe("description for com");
             t.AssembliesMetadata[0].GetMetadata("Culture").ShouldBeEmpty();
@@ -66,7 +77,6 @@ public void CheckPresenceOfCOMAssemblyAttributes()
             t.AssembliesMetadata[0].GetMetadata("MajorVersion").ShouldBe("4");
             t.AssembliesMetadata[0].GetMetadata("MinorVersion").ShouldBe("0");
             t.AssembliesMetadata[0].GetMetadata("PeKind").ShouldBe("3");
-            t.AssembliesMetadata[0].GetMetadata("Guid").ShouldBe("BED7F4EA-1A96-11d2-8F08-00A0C9A6186D");
             t.AssembliesMetadata[0].GetMetadata("BuildNumber").ShouldBe("0");
             t.AssembliesMetadata[0].GetMetadata("Description").ShouldBe("mscorlib.dll");
             t.AssembliesMetadata[0].GetMetadata("Culture").ShouldBeEmpty();
diff --git a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
index bc7663a6906..d845b8cbbc2 100644
--- a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
+++ b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
@@ -20,6 +20,7 @@
     <ProjectReference Include="..\Framework\Microsoft.Build.Framework.csproj" />
     <ProjectReference Include="..\MSBuild\MSBuild.csproj" />
     <ProjectReference Include="..\Tasks\Microsoft.Build.Tasks.csproj" />
+    <ProjectReference Include="..\Utilities.UnitTests\Microsoft.Build.Utilities.UnitTests.csproj" />
     <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
     <ProjectReference Include="..\Xunit.NetCore.Extensions\Xunit.NetCore.Extensions.csproj" />
     <ProjectReference Include="..\Samples\PortableTask\PortableTask.csproj" ReferenceOutputAssembly="false" Private="false" />
@@ -76,6 +77,18 @@
     <None Include="..\Shared\UnitTests\xunit.runner.json">
       <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
     </None>
+    <None Include="TestResources\Projects\Custom_COM\Custom_COM\Class1.cs">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
+    <None Include="TestResources\Projects\Custom_COM\Custom_COM.sln">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
+    <None Include="TestResources\Projects\Custom_COM\Custom_COM\Custom_COM.csproj">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
+    <None Include="TestResources\Projects\Custom_COM\Custom_COM\Properties\AssemblyInfo.cs">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
   </ItemGroup>
 
   <ItemGroup>
@@ -148,7 +161,7 @@
 
   <ItemGroup>
     <None Update="ResourceHandling\*.txt" CopyToOutputDirectory="PreserveNewest" />
-    <None Update="TestResources\Assemblies\Custom_COM.dll">
+    <None Update="TestResources\Projects\Custom_COM\*">
       <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
     </None>
     <None Update="TestResources\lorem.bin">
diff --git a/src/Tasks.UnitTests/TestResources/Assemblies/Custom_COM.dll b/src/Tasks.UnitTests/TestResources/Assemblies/Custom_COM.dll
deleted file mode 100644
index af25630e33a..00000000000
Binary files a/src/Tasks.UnitTests/TestResources/Assemblies/Custom_COM.dll and /dev/null differ
diff --git a/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM.sln b/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM.sln
new file mode 100644
index 00000000000..b87b98a6c68
--- /dev/null
+++ b/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM.sln
@@ -0,0 +1,25 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio Version 17
+VisualStudioVersion = 17.8.34119.44
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Custom_COM", "Custom_COM\Custom_COM.csproj", "{A48EFB66-2596-4C6A-87AB-C8A765E54429}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Any CPU = Debug|Any CPU
+		Release|Any CPU = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{A48EFB66-2596-4C6A-87AB-C8A765E54429}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{A48EFB66-2596-4C6A-87AB-C8A765E54429}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{A48EFB66-2596-4C6A-87AB-C8A765E54429}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{A48EFB66-2596-4C6A-87AB-C8A765E54429}.Release|Any CPU.Build.0 = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+	GlobalSection(ExtensibilityGlobals) = postSolution
+		SolutionGuid = {3A8E37B3-7F2C-491C-9742-92319262C651}
+	EndGlobalSection
+EndGlobal
diff --git a/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Class1.cs b/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Class1.cs
new file mode 100644
index 00000000000..690d0f77113
--- /dev/null
+++ b/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Class1.cs
@@ -0,0 +1,19 @@
+﻿using System;
+using System.Reflection;
+using System.Runtime.InteropServices;
+
+namespace Custom_COM
+{
+    [Guid("D6F88E95-8A27-4ae6-B6DE-0542A0FC7039")]
+    [InterfaceType(ComInterfaceType.InterfaceIsIDispatch)]
+    public interface ITest
+    {
+    }
+
+    [Guid("13FE32AD-4BF8-495f-AB4D-6C61BD463EA4")]
+    [ClassInterface(ClassInterfaceType.None)]
+    [ProgId("Tester.Numbers")]
+    public class Test : ITest
+    {
+    }
+}
diff --git a/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Custom_COM.csproj b/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Custom_COM.csproj
new file mode 100644
index 00000000000..8c582aa7f52
--- /dev/null
+++ b/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Custom_COM.csproj
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{A48EFB66-2596-4C6A-87AB-C8A765E54429}</ProjectGuid>
+    <OutputType>Library</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>Custom_COM</RootNamespace>
+    <AssemblyName>Custom_COM</AssemblyName>
+    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
+    <FileAlignment>512</FileAlignment>
+    <Deterministic>true</Deterministic>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Core" />
+    <Reference Include="System.Xml.Linq" />
+    <Reference Include="System.Data.DataSetExtensions" />
+    <Reference Include="Microsoft.CSharp" />
+    <Reference Include="System.Data" />
+    <Reference Include="System.Net.Http" />
+    <Reference Include="System.Xml" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="Class1.cs" />
+    <Compile Include="Properties\AssemblyInfo.cs" />
+  </ItemGroup>
+  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
+</Project>
diff --git a/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Properties/AssemblyInfo.cs b/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Properties/AssemblyInfo.cs
new file mode 100644
index 00000000000..2748f64b066
--- /dev/null
+++ b/src/Tasks.UnitTests/TestResources/Projects/Custom_COM/Custom_COM/Properties/AssemblyInfo.cs
@@ -0,0 +1,38 @@
+﻿using System.Resources;
+using System.Reflection;
+using System.Runtime.CompilerServices;
+using System.Runtime.InteropServices;
+
+// General Information about an assembly is controlled through the following
+// set of attributes. Change these attribute values to modify the information
+// associated with an assembly.
+[assembly: AssemblyTitle("Custom_COM")]
+[assembly: AssemblyDescription("description for com")]
+[assembly: AssemblyConfiguration("")]
+[assembly: AssemblyCompany("MSFT")]
+[assembly: AssemblyProduct("Custom_COM")]
+[assembly: AssemblyCopyright("Copyright ©  2023")]
+[assembly: AssemblyTrademark("Mark")]
+[assembly: AssemblyCulture("")]
+
+// Setting ComVisible to false makes the types in this assembly not visible
+// to COM components.  If you need to access a type in this assembly from
+// COM, set the ComVisible attribute to true on that type.
+[assembly: ComVisible(true)]
+
+// The following GUID is for the ID of the typelib if this project is exposed to COM
+[assembly: Guid("a48efb66-2596-4c6a-87ab-c8a765e54429")]
+
+// Version information for an assembly consists of the following four values:
+//
+//      Major Version
+//      Minor Version
+//      Build Number
+//      Revision
+//
+// You can specify all the values or you can default the Build and Revision Numbers
+// by using the '*' as shown below:
+// [assembly: AssemblyVersion("1.0.*")]
+[assembly: AssemblyVersion("1.2.3.4")]
+[assembly: AssemblyFileVersion("1.2.3.4")]
+[assembly: NeutralResourcesLanguage("cs")]
diff --git a/src/Tasks/AssemblyDependency/AssemblyAttributes.cs b/src/Tasks/AssemblyDependency/AssemblyAttributes.cs
index ce69d8f4fc2..4e6fd111a27 100644
--- a/src/Tasks/AssemblyDependency/AssemblyAttributes.cs
+++ b/src/Tasks/AssemblyDependency/AssemblyAttributes.cs
@@ -44,7 +44,5 @@ internal sealed class AssemblyAttributes
         public bool IsImportedFromTypeLib { get; set; }
 
         public string TargetFrameworkMoniker { get; set; } = string.Empty;
-
-        public string Guid { get; set; } = string.Empty;
     }
 }
diff --git a/src/Tasks/AssemblyDependency/AssemblyInformation.cs b/src/Tasks/AssemblyDependency/AssemblyInformation.cs
index 7e665d1b045..91785df5c86 100644
--- a/src/Tasks/AssemblyDependency/AssemblyInformation.cs
+++ b/src/Tasks/AssemblyDependency/AssemblyInformation.cs
@@ -329,8 +329,8 @@ internal AssemblyAttributes GetAssemblyMetadata()
                 {
                     assemblyAttributes.Description = GetStringCustomAttribute(import2, assemblyScope, "System.Reflection.AssemblyDescriptionAttribute");
                     assemblyAttributes.TargetFrameworkMoniker = GetStringCustomAttribute(import2, assemblyScope, "System.Runtime.Versioning.TargetFrameworkAttribute");
-                    assemblyAttributes.Guid = GetStringCustomAttribute(import2, assemblyScope, "System.Runtime.InteropServices.GuidAttribute");
-                    if (!string.IsNullOrEmpty(assemblyAttributes.Guid))
+                    var guid = GetStringCustomAttribute(import2, assemblyScope, "System.Runtime.InteropServices.GuidAttribute");
+                    if (!string.IsNullOrEmpty(guid))
                     {
                         string importedFromTypeLibString = GetStringCustomAttribute(import2, assemblyScope, "System.Runtime.InteropServices.ImportedFromTypeLibAttribute");
                         if (!string.IsNullOrEmpty(importedFromTypeLibString))
diff --git a/src/Tasks/GetAssembliesMetadata.cs b/src/Tasks/GetAssembliesMetadata.cs
index 168cf890751..63f8d6425a2 100644
--- a/src/Tasks/GetAssembliesMetadata.cs
+++ b/src/Tasks/GetAssembliesMetadata.cs
@@ -19,6 +19,8 @@
 using Microsoft.Build.Tasks.AssemblyDependency;
 using Microsoft.Build.Utilities;
 
+#nullable enable
+
 namespace Microsoft.Build.Tasks
 {
     /// <summary>
@@ -104,7 +106,6 @@ IEnumerable<KeyValuePair<string, string>> EnumerateCommonMetadata()
                 yield return new KeyValuePair<string, string>(nameof(attributes.Culture), attributes.Culture);
                 yield return new KeyValuePair<string, string>(nameof(attributes.DefaultAlias), attributes.DefaultAlias);
                 yield return new KeyValuePair<string, string>(nameof(attributes.Description), attributes.Description);
-                yield return new KeyValuePair<string, string>(nameof(attributes.Guid), attributes.Guid);
                 yield return new KeyValuePair<string, string>(nameof(attributes.MajorVersion), attributes.MajorVersion.ToString());
                 yield return new KeyValuePair<string, string>(nameof(attributes.MinorVersion), attributes.MinorVersion.ToString());
                 yield return new KeyValuePair<string, string>(nameof(attributes.PeKind), attributes.PeKind.ToString());
