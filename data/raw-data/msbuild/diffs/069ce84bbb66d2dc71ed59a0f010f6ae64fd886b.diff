diff --git a/src/Build/Logging/ConsoleLogger.cs b/src/Build/Logging/ConsoleLogger.cs
index df141e46f87..543667811bf 100644
--- a/src/Build/Logging/ConsoleLogger.cs
+++ b/src/Build/Logging/ConsoleLogger.cs
@@ -9,7 +9,6 @@
 using BaseConsoleLogger = Microsoft.Build.BackEnd.Logging.BaseConsoleLogger;
 using SerialConsoleLogger = Microsoft.Build.BackEnd.Logging.SerialConsoleLogger;
 using ParallelConsoleLogger = Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger;
-using Microsoft.Build.Execution;
 
 #nullable disable
 
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 008df78e842..7e7fbd89a68 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -632,7 +632,7 @@ string[] commandLine
                     // that priority. Idle priority would prevent the build from proceeding as the user does normal actions.
                     try
                     {
-                        if (lowPriority && Process.GetCurrentProcess().PriorityClass != ProcessPriorityClass.Idle && !s_isServerNodeHosted)
+                        if (lowPriority && Process.GetCurrentProcess().PriorityClass != ProcessPriorityClass.Idle && !s_isServerNode)
                         {
                             Process.GetCurrentProcess().PriorityClass = ProcessPriorityClass.BelowNormal;
                         }
@@ -1963,7 +1963,7 @@ private static bool IsEnvironmentVariable(string envVar)
         /// <summary>
         /// Indicates that this process is working as a server.
         /// </summary>
-        private static bool s_isServerNodeHosted;
+        private static bool s_isServerNode;
 
         /// <summary>
         /// Parses the auto-response file (assumes the "/noautoresponse" switch is not specified on the command line), and combines the
@@ -2655,7 +2655,7 @@ private static void StartLocalNode(CommandLineSwitches commandLineSwitches)
 
                     OutOfProcServerNode node = new(buildFunction);
 
-                    s_isServerNodeHosted = true;
+                    s_isServerNode = true;
                     shutdownReason = node.Run(nodeReuse, lowpriority, out nodeException);
 
                     FileUtilities.ClearCacheDirectory();
@@ -3156,7 +3156,7 @@ List<ILogger> loggers
                 }
 
                 // Always use ANSI escape codes when the build is initiated by server
-                if (s_isServerNodeHosted)
+                if (s_isServerNode)
                 {
                     consoleParameters = AggregateParameters(consoleParameters, new[] { "FORCECONSOLECOLOR" });
                 }
