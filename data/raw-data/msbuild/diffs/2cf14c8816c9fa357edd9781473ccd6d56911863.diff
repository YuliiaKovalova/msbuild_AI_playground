diff --git a/src/Build/BackEnd/Node/OutOfProcNode.cs b/src/Build/BackEnd/Node/OutOfProcNode.cs
index 190f89399e9..5f03414e707 100644
--- a/src/Build/BackEnd/Node/OutOfProcNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcNode.cs
@@ -573,10 +573,12 @@ private void SendPacket(INodePacket packet)
             if (_nodeEndpoint.LinkStatus == LinkStatus.Active)
             {
                 _nodeEndpoint.SendData(packet);
-#if RUNTIME_TYPE_NETCORE
+
                 if (packet is LogMessagePacketBase logMessage)
                 {
-                    if (logMessage.EventType == LoggingEventType.CustomEvent && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_8))
+                    if (logMessage.EventType == LoggingEventType.CustomEvent
+                        && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_8)
+                        && Traits.Instance.EscapeHatches.EnableWarningOnCustomBuildEvent)
                     {
                         BuildEventArgs buildEvent = logMessage.NodeBuildEvent.Value.Value;
 
@@ -588,7 +590,6 @@ private void SendPacket(INodePacket packet)
                             buildEvent?.GetType().Name ?? string.Empty);
                     }
                 }
-#endif
             }
         }
 
diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index 871d648e4ea..a43de750089 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Globalization;
+using System.Text.RegularExpressions;
 
 #nullable disable
 
@@ -372,6 +373,29 @@ public SdkReferencePropertyExpansionMode? SdkReferencePropertyExpansion
             }
         }
 
+        /// <summary>
+        /// Allows displaying the deprecation warning for BinaryFormatter in your current environment.
+        /// </summary>
+        public bool EnableWarningOnCustomBuildEvent
+        {
+            get
+            {
+                var value = Environment.GetEnvironmentVariable("MSBUILDCUSTOMBUILDEVENTWARNING");
+
+                if (value == null)
+                {
+                    // If variable is not set explicitly, for .NETCORE warning appears.
+#if RUNTIME_TYPE_NETCORE
+                    return true;
+#else
+                    return false;
+#endif
+                }
+
+                return value == "1";
+            }
+        }
+
         private static bool? ParseNullableBoolFromEnvironmentVariable(string environmentVariable)
         {
             var value = Environment.GetEnvironmentVariable(environmentVariable);
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index 75d7c682f52..36c8adde9ad 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -1159,8 +1159,9 @@ private void SendBuildEvent(BuildEventArgs e)
                 LogMessagePacket logMessage = new LogMessagePacket(new KeyValuePair<int, BuildEventArgs>(_currentConfiguration.NodeId, e));
                 _nodeEndpoint.SendData(logMessage);
 
-#if RUNTIME_TYPE_NETCORE
-                if (logMessage.EventType == LoggingEventType.CustomEvent && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_8))
+                if (logMessage.EventType == LoggingEventType.CustomEvent
+                    && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_8)
+                    && Traits.Instance.EscapeHatches.EnableWarningOnCustomBuildEvent)
                 {
                     BuildEventArgs buildEvent = logMessage.NodeBuildEvent.Value.Value;
 
@@ -1171,7 +1172,6 @@ private void SendBuildEvent(BuildEventArgs e)
                         "DeprecatedEventSerialization",
                         buildEvent?.GetType().Name ?? string.Empty);
                 }
-#endif
             }
         }
 
