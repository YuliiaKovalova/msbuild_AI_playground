diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
index 7cff8c8289a..8c4b51d8b73 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
@@ -1117,12 +1117,12 @@ private BuildEventArgs ReadGeneratedFileUsedEventArgs()
         {
             var fields = ReadBuildEventArgsFields();
 
-            string? responseFilePath = ReadDeduplicatedString();
-            string? responseFileContent = ReadDeduplicatedString();
+            string? filePath = ReadDeduplicatedString();
+            string? content = ReadDeduplicatedString();
 
-            if (responseFilePath != null && responseFileContent != null)
+            if (filePath != null && content != null)
             {
-                var e = new GeneratedFileUsedEventArgs(responseFilePath, responseFileContent);
+                var e = new GeneratedFileUsedEventArgs(filePath, content);
                 SetCommonFields(e, fields);
                 return e;
             }
diff --git a/src/Shared/LogMessagePacketBase.cs b/src/Shared/LogMessagePacketBase.cs
index 00c13e3e54f..7d1976bcaea 100644
--- a/src/Shared/LogMessagePacketBase.cs
+++ b/src/Shared/LogMessagePacketBase.cs
@@ -1369,11 +1369,11 @@ private ResponseFileUsedEventArgs ReadResponseFileUsedEventFromStream(ITranslato
 
         private GeneratedFileUsedEventArgs ReadGeneratedFileUsedEventFromStream(ITranslator translator, string message, string helpKeyword, string senderName)
         {
-            string responseFilePath = String.Empty;
-            string responseFileContent = String.Empty;
-            translator.Translate(ref responseFilePath);
-            translator.Translate(ref responseFileContent);
-            GeneratedFileUsedEventArgs buildEvent = new GeneratedFileUsedEventArgs(responseFilePath, responseFileContent);
+            string filePath = String.Empty;
+            string content = String.Empty;
+            translator.Translate(ref filePath);
+            translator.Translate(ref content);
+            GeneratedFileUsedEventArgs buildEvent = new GeneratedFileUsedEventArgs(filePath, content);
 
 #if !CLR2COMPATIBILITY
             DateTime timestamp = default;
