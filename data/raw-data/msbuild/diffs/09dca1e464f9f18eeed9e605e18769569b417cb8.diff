diff --git a/src/Build/BackEnd/Node/OutOfProcNode.cs b/src/Build/BackEnd/Node/OutOfProcNode.cs
index afa0d2aec65..fac0b79f6d3 100644
--- a/src/Build/BackEnd/Node/OutOfProcNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcNode.cs
@@ -488,8 +488,9 @@ private NodeEngineShutdownReason HandleShutdown(out Exception exception)
                 {
                     Environment.SetEnvironmentVariable(entry.Key, entry.Value);
                 }
-            }
 
+                Traits.UpdateFromEnvironment();
+            }
             try
             {
                 // Shut down logging, which will cause all queued logging messages to be sent.
@@ -722,11 +723,12 @@ private void HandleNodeConfiguration(NodeConfiguration configuration)
                 }
             }
 
-            // Now set the new environment
+            // Now set the new environment and update Traits class accordingly
             foreach (KeyValuePair<string, string> environmentPair in _buildParameters.BuildProcessEnvironment)
             {
                 Environment.SetEnvironmentVariable(environmentPair.Key, environmentPair.Value);
             }
+            Traits.UpdateFromEnvironment();
 
             // We want to make sure the global project collection has the toolsets which were defined on the parent
             // so that any custom toolsets defined can be picked up by tasks who may use the global project collection but are
diff --git a/src/Build/BackEnd/Node/OutOfProcServerNode.cs b/src/Build/BackEnd/Node/OutOfProcServerNode.cs
index aa28f7213e0..6b2715903e7 100644
--- a/src/Build/BackEnd/Node/OutOfProcServerNode.cs
+++ b/src/Build/BackEnd/Node/OutOfProcServerNode.cs
@@ -9,6 +9,7 @@
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Execution;
+using Microsoft.Build.Framework;
 using Microsoft.Build.Framework.Telemetry;
 using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
@@ -357,7 +358,10 @@ private void HandleServerNodeBuildCommand(ServerNodeBuildCommand command)
 
             // Set build process context
             Directory.SetCurrentDirectory(command.StartupDirectory);
+
             CommunicationsUtilities.SetEnvironment(command.BuildProcessEnvironment);
+            Traits.UpdateFromEnvironment();
+
             Thread.CurrentThread.CurrentCulture = command.Culture;
             Thread.CurrentThread.CurrentUICulture = command.UICulture;
 
diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index daf68c5c7dc..afcb4153eb4 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -13,7 +13,7 @@ namespace Microsoft.Build.Framework
     /// </summary>
     internal class Traits
     {
-        private static readonly Traits _instance = new Traits();
+        private static Traits _instance = new Traits();
         public static Traits Instance
         {
             get
@@ -136,6 +136,15 @@ public Traits()
 
         public readonly bool InProcNodeDisabled = Environment.GetEnvironmentVariable("MSBUILDNOINPROCNODE") == "1";
 
+        public static void UpdateFromEnvironment()
+        {
+            // Re-create Traits instance to update values in Traits according to current environment.
+            if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10))
+            {
+                _instance = new Traits();
+            }
+        }
+
         private static int ParseIntFromEnvironmentVariableOrDefault(string environmentVariable, int defaultValue)
         {
             return int.TryParse(Environment.GetEnvironmentVariable(environmentVariable), out int result)
