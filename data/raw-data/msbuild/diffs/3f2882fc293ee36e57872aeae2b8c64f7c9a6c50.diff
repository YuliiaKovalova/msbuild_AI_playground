diff --git a/src/MSBuild.UnitTests/MSBuildServer_Tests.cs b/src/MSBuild.UnitTests/MSBuildServer_Tests.cs
index e6fa870d50e..4b84e5feec1 100644
--- a/src/MSBuild.UnitTests/MSBuildServer_Tests.cs
+++ b/src/MSBuild.UnitTests/MSBuildServer_Tests.cs
@@ -218,8 +218,12 @@ public void BuildsWhileBuildIsRunningOnServer()
         public void CanShutdownServerProcess(bool byBuildManager)
         {
             _env.SetEnvironmentVariable("MSBUILDUSESERVER", "1");
+
             TransientTestFile project = _env.CreateFile("testProject.proj", printPidContents);
 
+            // Just for sure close server, so previous server instances does not effect this run.
+            BuildManager.DefaultBuildManager.ShutdownAllNodes();
+
             // Start a server node and find its PID.
             string output = RunnerUtilities.ExecMSBuild(BuildEnvironmentHelper.Instance.CurrentMSBuildExePath, project.Path, out bool success, false, _output);
             success.ShouldBeTrue();
@@ -240,18 +244,7 @@ public void CanShutdownServerProcess(bool byBuildManager)
                 serverIsDown.ShouldBeTrue();
             }
 
-            if (serverProcess.WaitForExit(3000))
-            {
-                serverProcess.WaitForExit();
-            }
-
-            if (!NativeMethodsShared.IsWindows)
-            {
-                // For one reason or another on non Windows OS, it looks like if process dies it still take some time until
-                // owned mutexes are released.
-                // This was causing flaky tests. Lets wait a bit.
-                Thread.Sleep(1000);
-            }
+            serverProcess.WaitForExit(10_000);
 
             serverProcess.HasExited.ShouldBeTrue();
         }
diff --git a/src/Shared/CommunicationsUtilities.cs b/src/Shared/CommunicationsUtilities.cs
index 4bb48ed0ad7..f8106579fb7 100644
--- a/src/Shared/CommunicationsUtilities.cs
+++ b/src/Shared/CommunicationsUtilities.cs
@@ -676,9 +676,6 @@ internal static void Trace(string format, params object[] args)
         /// </summary>
         internal static void Trace(int nodeId, string format, params object[] args)
         {
-            // TODO: debug logging, delete before merge
-            Console.WriteLine(String.Format(CultureInfo.CurrentCulture, format, args));
-
             if (s_trace)
             {
                 lock (s_traceLock)
