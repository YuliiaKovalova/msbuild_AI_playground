diff --git a/src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs b/src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs
index 2be67ba43bb..78fe9a56240 100644
--- a/src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs
+++ b/src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs
@@ -76,7 +76,7 @@ private static bool TryExtractValue<T>(string key, Dictionary<string, string>? c
 
         if (!isParsed)
         {
-            ThrowIncorectValueEception(key, stringValue);
+            ThrowIncorectValueException(key, stringValue);
         }
 
         return isParsed;
@@ -101,13 +101,13 @@ private static bool TryExtractValue(string key, Dictionary<string, string>? conf
         
         if (!isParsed)
         {
-            ThrowIncorectValueEception(key, stringValue);
+            ThrowIncorectValueException(key, stringValue);
         }
 
         return isParsed;
     }
 
-    private static void ThrowIncorectValueEception(string key, string value)
+    private static void ThrowIncorectValueException(string key, string value)
     {
         throw new BuildCheckConfigurationException(
                 $"Incorrect value provided in config for key {key}: '{value}'",
diff --git a/src/Build/BuildCheck/Analyzers/SharedOutputPathAnalyzer.cs b/src/Build/BuildCheck/Analyzers/SharedOutputPathAnalyzer.cs
index 9ebf529abba..174fb305b83 100644
--- a/src/Build/BuildCheck/Analyzers/SharedOutputPathAnalyzer.cs
+++ b/src/Build/BuildCheck/Analyzers/SharedOutputPathAnalyzer.cs
@@ -12,8 +12,6 @@
 
 namespace Microsoft.Build.BuildCheck.Analyzers;
 
-
-
 internal sealed class SharedOutputPathAnalyzer : BuildAnalyzer
 {
     public static BuildAnalyzerRule SupportedRule = new BuildAnalyzerRule("BC0101", "ConflictingOutputPath",
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConfigurationErrorScope.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConfigurationErrorScope.cs
index beb3382152d..79ed49edb46 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConfigurationErrorScope.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConfigurationErrorScope.cs
@@ -1,12 +1,6 @@
 ï»¿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
-
 namespace Microsoft.Build.BuildCheck.Infrastructure
 {
     internal enum BuildCheckConfigurationErrorScope
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
index 8f345954e12..9be71d2a288 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
@@ -78,7 +78,6 @@ private void EventSource_BuildFinished(object sender, BuildFinishedEventArgs e)
         _stats.Merge(buildCheckManager.CreateTracingStats(), (span1, span2) => span1 + span2);
         string msg = string.Join(Environment.NewLine, _stats.Select(a => a.Key + ": " + a.Value));
 
-
         BuildEventContext buildEventContext = e.BuildEventContext ?? new BuildEventContext(
             BuildEventContext.InvalidNodeId, BuildEventContext.InvalidTargetId,
             BuildEventContext.InvalidProjectContextId, BuildEventContext.InvalidTaskId);
