diff --git a/src/Build.UnitTests/BackEnd/TaskRegistry_Tests.cs b/src/Build.UnitTests/BackEnd/TaskRegistry_Tests.cs
index 0b2e04494ff..164659e4a2a 100644
--- a/src/Build.UnitTests/BackEnd/TaskRegistry_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TaskRegistry_Tests.cs
@@ -706,9 +706,9 @@ public void OverriddenTask_MultipleOverridesCauseMSB4275()
                         Array.Empty<string>(),
                         null);
 
-                    var result = buildManager.Build(
+                    buildManager.Build(
                         parameters,
-                        request);
+                        request).OverallResult.ShouldBe<BuildResultCode>(BuildResultCode.Failure);
 
                     // We should see MSB4275: Multiple usingtask overrides with the same name
                     logger.AssertLogContains("MSB4275");
diff --git a/src/Build/Instance/TaskRegistry.cs b/src/Build/Instance/TaskRegistry.cs
index 2068e99c308..1b82af4f5a8 100644
--- a/src/Build/Instance/TaskRegistry.cs
+++ b/src/Build/Instance/TaskRegistry.cs
@@ -22,7 +22,6 @@
 using Microsoft.Build.Shared.FileSystem;
 
 using Microsoft.NET.StringTools;
-using System.Linq;
 
 #nullable disable
 
@@ -701,7 +700,8 @@ private void RegisterTask
             {
                 // Key the dictionary based on Unqualified task names
                 // This is to support partial matches on tasks like Foo.Bar and Baz.Bar
-                string unqualifiedTaskName = taskName.Split('.').Last();
+                string[] nameComponents = taskName.Split('.');
+                string unqualifiedTaskName = nameComponents[nameComponents.Length - 1];
 
                 // Is the task already registered?
                 if (overriddenTasks.TryGetValue(unqualifiedTaskName, out List<RegisteredTaskRecord> recs))
@@ -722,7 +722,7 @@ private void RegisterTask
                     List<RegisteredTaskRecord> unqualifiedTaskNameMatches = new();
                     unqualifiedTaskNameMatches.Add(newRecord);
                     overriddenTasks.Add(unqualifiedTaskName, unqualifiedTaskNameMatches);
-                    loggingService.LogComment(context, MessageImportance.Low, "OverrideUsingTaskElementCreated", taskName);
+                    loggingService.LogComment(context, MessageImportance.Low, "OverrideUsingTaskElementCreated", taskName, projectUsingTaskInXml.OverrideLocation);
                 }
             }
 
