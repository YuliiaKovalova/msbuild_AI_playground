diff --git a/src/Build/BackEnd/Components/Logging/LoggingService.cs b/src/Build/BackEnd/Components/Logging/LoggingService.cs
index ccb52379941..be9ebe30f17 100644
--- a/src/Build/BackEnd/Components/Logging/LoggingService.cs
+++ b/src/Build/BackEnd/Components/Logging/LoggingService.cs
@@ -1401,43 +1401,36 @@ void LoggingEventProc()
 
                 do
                 {
-                    lock (_lockObject)
+                    if (_eventQueue.TryDequeue(out object ev))
                     {
-                        if (_eventQueue.TryDequeue(out object ev))
+                        LoggingEventProcessor(ev);
+                        _dequeueEvent?.Set();
+                    }
+                    else
+                    {
+                        _emptyQueueEvent?.Set();
+
+                        if (!completeAdding.IsCancellationRequested && _eventQueue.IsEmpty)
                         {
-                            LoggingEventProcessor(ev);
-                            _dequeueEvent?.Set();
+                            WaitHandle.WaitAny(waitHandlesForNextEvent);
                         }
-                        else
-                        {
-                            _emptyQueueEvent?.Set();
 
-                            // Release lock before potentially long wait
-                            Monitor.Exit(_lockObject);
+                        lock (_lockObject)
+                        {
                             try
                             {
-                                // Only wait if we still need to
-                                if (!completeAdding.IsCancellationRequested && _eventQueue.IsEmpty)
-                                {
-                                    WaitHandle.WaitAny(waitHandlesForNextEvent);
-                                }
+                                _emptyQueueEvent?.Reset();
                             }
-                            finally
+                            catch (ObjectDisposedException)
                             {
-                                // Reacquire lock
-                                Monitor.Enter(_lockObject);
-
-                                // Reset the event if we are not shutting down
-                                _emptyQueueEvent?.Reset();
+                                // Might be thrown if the event was set as null in shutdown.
+                                break;
                             }
                         }
                     }
                 } while (!_eventQueue.IsEmpty || !completeAdding.IsCancellationRequested);
 
-                lock (_lockObject)
-                {
-                    _emptyQueueEvent?.Set();
-                }
+                _emptyQueueEvent?.Set();
             }
         }
 
