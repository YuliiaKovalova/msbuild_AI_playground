diff --git a/.config/1espt/PipelineAutobaseliningConfig.yml b/.config/1espt/PipelineAutobaseliningConfig.yml
index e2d487e929a..4b30629dd08 100644
--- a/.config/1espt/PipelineAutobaseliningConfig.yml
+++ b/.config/1espt/PipelineAutobaseliningConfig.yml
@@ -12,12 +12,30 @@ pipelines:
           lastModifiedDate: 2024-03-14
         armory:
           lastModifiedDate: 2024-03-14
-        policheck:
-          lastModifiedDate: 2024-10-09
+        policheck:
+          lastModifiedDate: 2024-10-09
       binary:
         credscan:
           lastModifiedDate: 2024-03-14
         binskim:
+          lastModifiedDate: 2024-11-27
+        spotbugs:
           lastModifiedDate: 2024-03-14
+  24295:
+    retail:
+      source:
+        credscan:
+          lastModifiedDate: 2024-11-06
+        eslint:
+          lastModifiedDate: 2024-11-06
+        psscriptanalyzer:
+          lastModifiedDate: 2024-11-06
+        armory:
+          lastModifiedDate: 2024-11-06
+      binary:
+        credscan:
+          lastModifiedDate: 2024-11-06
+        binskim:
+          lastModifiedDate: 2024-11-21
         spotbugs:
-          lastModifiedDate: 2024-03-14
+          lastModifiedDate: 2024-11-06
diff --git a/.config/git-merge-flow-config.jsonc b/.config/git-merge-flow-config.jsonc
index a6c94f2ea83..6650f6299ff 100644
--- a/.config/git-merge-flow-config.jsonc
+++ b/.config/git-merge-flow-config.jsonc
@@ -30,9 +30,13 @@
         "vs17.11": {
             "MergeToBranch": "vs17.12"
         },
-        // MSBuild latest release to main
+        // Automate opening PRs to merge msbuild's vs17.12 (SDK 9.0.1xx) into vs17.13 (SDK 9.0.2xx)
         "vs17.12": {
+            "MergeToBranch": "vs17.13"
+        },
+        // MSBuild latest release to main
+        "vs17.13": {
             "MergeToBranch": "main"
         }
     }
-}
\ No newline at end of file
+}
diff --git a/.config/guardian/.gdnbaselines b/.config/guardian/.gdnbaselines
index cd66fbded9f..c021f9636e6 100644
--- a/.config/guardian/.gdnbaselines
+++ b/.config/guardian/.gdnbaselines
@@ -1,54 +1,68 @@
-{
-  "properties": {
-    "helpUri": "https://eng.ms/docs/microsoft-security/security/azure-security/cloudai-security-fundamentals-engineering/security-integration/guardian-wiki/microsoft-guardian/general/baselines"
-  },
-  "version": "1.0.0",
-  "baselines": {
-    "default": {
-      "name": "default",
-      "createdDate": "2024-03-14 11:30:33Z",
-      "lastUpdatedDate": "2024-03-14 11:30:33Z"
-    }
-  },
-  "results": {
-    "24491acb7bf0f8b072d9fbd2f6efcf1bdf6e9506ff3f7a9f9c803445c55b7bd9": {
-      "signature": "24491acb7bf0f8b072d9fbd2f6efcf1bdf6e9506ff3f7a9f9c803445c55b7bd9",
-      "alternativeSignatures": [
-        "2dc3f5f5423a151deb6a74413f2798ade061c1f50519daeed42acfd2caebed03"
-      ],
-      "target": ".packages/drop.app/18.165.29912-buildid11693003/lib/net45/ContentStoreApp.Full/x64/BuildXLAria.dll",
-      "memberOf": [
-        "default"
-      ],
-      "tool": "binskim",
-      "ruleId": "BA2008",
-      "createdDate": "2024-06-19 17:22:41Z"
-    },
-    "1dc1a6797e20d1319df1cb8d4df5c6f6194ce4e87151bf801fb9bf2d038ccfaf": {
-      "signature": "1dc1a6797e20d1319df1cb8d4df5c6f6194ce4e87151bf801fb9bf2d038ccfaf",
-      "alternativeSignatures": [
-        "f52bc24a2feebdcb7b1192ac2debea8da9ca5d012a6719e905b16f979711ceca"
-      ],
-      "target": ".packages/drop.app/18.165.29912-buildid11693003/lib/net45/ContentStoreApp.Full/x64/BuildXLNatives.dll",
-      "memberOf": [
-        "default"
-      ],
-      "tool": "binskim",
-      "ruleId": "BA2008",
-      "createdDate": "2024-06-19 17:22:41Z"
-    },
-    "5bf3f552d54adcae12d7f1e79d47b5a9392c774f03943793cd1a0f7bb2eef28b": {
-      "signature": "5bf3f552d54adcae12d7f1e79d47b5a9392c774f03943793cd1a0f7bb2eef28b",
-      "alternativeSignatures": [
-        "ea4d59d18cbff7ffab4bb678927fc6fee763539a51cfbf5aae60ae1b8123a6ba"
-      ],
-      "target": ".packages/drop.app/18.165.29912-buildid11693003/lib/net45/ContentStoreApp.Full/x64/ClientTelemetry.dll",
-      "memberOf": [
-        "default"
-      ],
-      "tool": "binskim",
-      "ruleId": "BA2007",
-      "createdDate": "2024-06-19 17:22:41Z"
-    }
-  }
-}
+{
+  "properties": {
+    "helpUri": "https://eng.ms/docs/microsoft-security/security/azure-security/cloudai-security-fundamentals-engineering/security-integration/guardian-wiki/microsoft-guardian/general/baselines"
+  },
+  "version": "1.0.0",
+  "baselines": {
+    "default": {
+      "name": "default",
+      "createdDate": "2024-03-14 11:30:33Z",
+      "lastUpdatedDate": "2024-03-14 11:30:33Z"
+    }
+  },
+  "results": {
+    "24491acb7bf0f8b072d9fbd2f6efcf1bdf6e9506ff3f7a9f9c803445c55b7bd9": {
+      "signature": "24491acb7bf0f8b072d9fbd2f6efcf1bdf6e9506ff3f7a9f9c803445c55b7bd9",
+      "alternativeSignatures": [
+        "2dc3f5f5423a151deb6a74413f2798ade061c1f50519daeed42acfd2caebed03"
+      ],
+      "target": ".packages/drop.app/18.165.29912-buildid11693003/lib/net45/ContentStoreApp.Full/x64/BuildXLAria.dll",
+      "memberOf": [
+        "default"
+      ],
+      "tool": "binskim",
+      "ruleId": "BA2008",
+      "createdDate": "2024-06-19 17:22:41Z"
+    },
+    "1dc1a6797e20d1319df1cb8d4df5c6f6194ce4e87151bf801fb9bf2d038ccfaf": {
+      "signature": "1dc1a6797e20d1319df1cb8d4df5c6f6194ce4e87151bf801fb9bf2d038ccfaf",
+      "alternativeSignatures": [
+        "f52bc24a2feebdcb7b1192ac2debea8da9ca5d012a6719e905b16f979711ceca"
+      ],
+      "target": ".packages/drop.app/18.165.29912-buildid11693003/lib/net45/ContentStoreApp.Full/x64/BuildXLNatives.dll",
+      "memberOf": [
+        "default"
+      ],
+      "tool": "binskim",
+      "ruleId": "BA2008",
+      "createdDate": "2024-06-19 17:22:41Z"
+    },
+    "5bf3f552d54adcae12d7f1e79d47b5a9392c774f03943793cd1a0f7bb2eef28b": {
+      "signature": "5bf3f552d54adcae12d7f1e79d47b5a9392c774f03943793cd1a0f7bb2eef28b",
+      "alternativeSignatures": [
+        "ea4d59d18cbff7ffab4bb678927fc6fee763539a51cfbf5aae60ae1b8123a6ba"
+      ],
+      "target": ".packages/drop.app/18.165.29912-buildid11693003/lib/net45/ContentStoreApp.Full/x64/ClientTelemetry.dll",
+      "memberOf": [
+        "default"
+      ],
+      "tool": "binskim",
+      "ruleId": "BA2007",
+      "createdDate": "2024-06-19 17:22:41Z"
+    },
+    "1757d0179485ad6618415e151de2453f25d5484071f7bae328fa9ca9d4d54688": {
+      "signature": "1757d0179485ad6618415e151de2453f25d5484071f7bae328fa9ca9d4d54688",
+      "alternativeSignatures": [],
+      "target": "src/Tasks.UnitTests/TestResources/mycert.pfx",
+      "line": 1,
+      "memberOf": [
+        "default"
+      ],
+      "tool": "credscan",
+      "ruleId": "CSCAN-GENERAL0020",
+      "createdDate": "2024-11-06 10:51:54Z",
+      "expirationDate": "2025-04-25 11:21:52Z",
+      "justification": "This error is baselined with an expiration date of 180 days from 2024-11-06 11:21:52Z"
+    }
+  }
+}
\ No newline at end of file
diff --git a/.editorconfig b/.editorconfig
index 1ff2a060cb0..e64a0519df7 100644
--- a/.editorconfig
+++ b/.editorconfig
@@ -410,8 +410,10 @@ dotnet_diagnostic.IDE0290.severity = suggestion
 
 # Collection initialization can be simplified
 dotnet_diagnostic.IDE0300.severity = suggestion
+dotnet_diagnostic.IDE0303.severity = suggestion
 dotnet_diagnostic.IDE0301.severity = suggestion
 dotnet_diagnostic.IDE0305.severity = suggestion
+dotnet_diagnostic.IDE0306.severity = suggestion
 
 # Temporarily disable SA1010 "Opening square brackets should not be preceded by a space" until https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/3687 is fixed
 dotnet_diagnostic.SA1010.severity = none
@@ -445,4 +447,4 @@ dotnet_diagnostic.xUnit1031.severity = none
 # However to fix the warning for collections with 1 elements we should use Assert.Single() instead of Assert.Equal(1, collection.Count)
 # The latter brings incosistency in the codebase and some times in one test case.
 # So we are disabling this rule with respect to the above mentioned reasons.
-dotnet_diagnostic.xUnit2013.severity = none
\ No newline at end of file
+dotnet_diagnostic.xUnit2013.severity = none
diff --git a/.vsts-dotnet-ci.yml b/.vsts-dotnet-ci.yml
index 6df5156b632..60a757b7803 100644
--- a/.vsts-dotnet-ci.yml
+++ b/.vsts-dotnet-ci.yml
@@ -40,7 +40,6 @@ jobs:
     displayName: "Check if patch version is bumped up"
 
 - job: IfOnlyDocumentionChanged
-  dependsOn: CheckVersionBumpOnReleaseBranches
   displayName: "Check whether Test Results need to be executed"
   steps:
   - powershell: |
diff --git a/.vsts-dotnet.yml b/.vsts-dotnet.yml
index 1444313d595..bf994785873 100644
--- a/.vsts-dotnet.yml
+++ b/.vsts-dotnet.yml
@@ -34,7 +34,7 @@ variables:
     - name: SourceBranch
       value: ''
   - name: EnableReleaseOneLocBuild
-    value: true # Enable loc for vs17.13
+    value: true # Enable loc for vs17.14
   - name: Codeql.Enabled
     value: true
 
diff --git a/azure-pipelines/vs-insertion-experimental.yml b/azure-pipelines/vs-insertion-experimental.yml
index d74aad34d5f..ab2ce364131 100644
--- a/azure-pipelines/vs-insertion-experimental.yml
+++ b/azure-pipelines/vs-insertion-experimental.yml
@@ -1,13 +1,7 @@
+# Create an experimental VS insertion auto-triggered from exp/* branches to validate changes before merging to main
 trigger: none
-name: $(Date:yyyyMMdd).$(Rev:r) MSBuild Experimental VS Insertion
-variables:
-  InsertConfigValues: VS.ExternalAPIs.MSBuild=$(MSBuild_ExtApisPackageVersion)
-  InsertCustomScriptExecutionCommand: $(Pipeline.Workspace)\xsd\Update-MSBuildXsds.ps1
-  InsertDescription: Insert MSBuild $(Build.BuildNumber) from the branch $(Build.SourceBranchName) at commit $(Build.SourceVersion). Corresponding package version is $(MSBuild_ExtApisPackageVersion)
-  InsertJsonValues: Microsoft.Build.vsman{$(MSBuild_ExtApisPackageVersion)+$(Build.SourceVersion)}=https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/DotNet-msbuild-Trusted/$(Build.SourceBranchName)/$(Build.BuildNumber);Microsoft.Build.vsman,Microsoft.Build.Arm64.vsman{$(MSBuild_ExtApisPackageVersion)+$(Build.SourceVersion)}=https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/DotNet-msbuild-Trusted/$(Build.SourceBranchName)/$(Build.BuildNumber);Microsoft.Build.Arm64.vsman,Microsoft.Build.UnGAC.vsman=https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/DotNet-msbuild-Trusted/$(Build.SourceBranchName)/$(Build.Build.Number);Microsoft.Build.UnGAC.vsman
-  InsertPayloadName: MSBuild $(Build.SourceBranchName) $(Build.BuildNumber)
-  TeamName: msbuild
-  TeamEmail: msbuild@microsoft.com
+name: $(Date:yyyyMMdd).$(Rev:r)
+
 resources:
   pipelines:
   - pipeline: 'MSBuild'
@@ -22,31 +16,69 @@ resources:
     type: git
     name: 1ESPipelineTemplates/1ESPipelineTemplates
     ref: refs/tags/release
+
+parameters:
+  - name: TargetBranch
+    type: string
+    default: main
+    displayName: 'Insertion Target Branch (select for manual insertion)'
+    values:
+      - main
+      - rel/d17.14
+      - rel/d17.13
+      - rel/d17.12
+      - rel/d17.11
+      - rel/d17.10
+      - rel/d17.8
+      - rel/d17.6
+      - rel/d17.3
+      - rel/d17.0
+
+variables:
+  - name: TeamName
+    value: msbuild
+  - name: TeamEmail
+    value: msbtm@microsoft.com
+  - name: MSBuild_CI_BuildNumber
+    value: $(resources.pipeline.MSBuild.runName)
+  - name: MSBuild_CI_SourceVersion
+    value: $(resources.pipeline.MSBuild.sourceCommit)
+  - name: ArtifactPackagesPath
+    value: $(Build.ArtifactStagingDirectory)/PackageArtifacts
+
+  - name: MSBuildPackagePattern
+    value: '$(ArtifactPackagesPath)/Microsoft.Build.*.nupkg'
+  - name: StringToolsPackagePattern
+    value: '$(ArtifactPackagesPath)/Microsoft.NET.StringTools*.nupkg'
+  - name: ExternalAPIsPackagePattern
+    value: '$(ArtifactPackagesPath)/VS.ExternalAPIs.*.nupkg'
+
 extends:
   template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
   parameters:
     pool:
       name: VSEngSS-MicroBuild2022-1ES
-    customBuildTags:
-    - ES365AIMigrationTooling-Release
     stages:
-    - stage: Stage_1
-      displayName: Create VS PR
+    - stage: VSInsertion
+      displayName: VS insertion
+      variables:
+        VSDropPath: https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/DotNet-msbuild-Trusted/$(SourceBranchName)/$(MSBuild_CI_BuildNumber)
+        VSManVersionSuffix: $(MSBuild_ExtApisPackageVersion)+$(MSBuild_CI_SourceVersion)
+        StandardVSManPath: Microsoft.Build.vsman{$(VSManVersionSuffix)}=$(VSDropPath);Microsoft.Build.vsman
+        Arm64VSManPath: Microsoft.Build.Arm64.vsman{$(VSManVersionSuffix)}=$(VSDropPath);Microsoft.Build.Arm64.vsman
+        UnGACVSManPath: Microsoft.Build.UnGAC.vsman=$(VSDropPath);Microsoft.Build.UnGAC.vsman
+        InsertJsonValues: $(StandardVSManPath),$(Arm64VSManPath),$(UnGACVSManPath)
+        InsertConfigValues: VS.ExternalAPIs.MSBuild=$(MSBuild_ExtApisPackageVersion)
+        InsertCustomScriptExecutionCommand: $(Pipeline.Workspace)\xsd\Update-MSBuildXsds.ps1
+        InsertDescription: Insert MSBuild $(MSBuild_CI_BuildNumber) from the branch $(SourceBranchName) at commit $(MSBuild_CI_SourceVersion). Corresponding package version is $(MSBuild_ExtApisPackageVersion)
+        InsertPayloadName: '[Experimental] [Skip-SymbolCheck] MSBuild $(SourceBranchName) $(MSBuild_ExtApisPackageVersion)'
       jobs:
-      - job: Job_1
-        displayName: Run on agent
+      - job: PushPackagesAndInsert
+        displayName: Push Packages and Insert VS payload
         condition: succeeded()
         timeoutInMinutes: 0
         templateContext:
           inputs:
-          - input: pipelineArtifact
-            pipeline: 'MSBuild'
-            artifactName: 'BuildLogs_SourceBuild_Managed_Attempt1'
-            targetPath: '$(Pipeline.Workspace)/BuildLogs_SourceBuild_Managed_Attempt1'
-          - input: pipelineArtifact
-            pipeline: 'MSBuild'
-            artifactName: 'build_Windows_NT_SBOM'
-            targetPath: '$(Pipeline.Workspace)/build_Windows_NT_SBOM'
           - input: pipelineArtifact
             pipeline: 'MSBuild'
             artifactName: 'xsd'
@@ -55,9 +87,25 @@ extends:
             pipeline: 'MSBuild'
             artifactName: 'PackageArtifacts'
             targetPath: '$(Build.ArtifactStagingDirectory)/PackageArtifacts'
+            # the CI build creates a sourcebuild intermediate package that is not signed, remove it to avoid warning from Guardian
+            itemPattern: |
+              **
+              !**/Microsoft.SourceBuild.Intermediate*.nupkg
         steps:
         - task: Powershell@2
-          name: Powershell_1
+          name: SetSourceBranch
+          displayName: Set source branch name
+          inputs:
+            targetType: inline
+            script: |
+              # Extract the last section after the last '/'
+              $fullBranch = "$(resources.pipeline.MSBuild.sourceBranch)"
+              $branchSegments = $fullBranch -split '/'
+              $branch = $branchSegments[-1]
+              Write-Host "Setting drops branch to '$branch'"
+              Write-Host "##vso[task.setvariable variable=SourceBranchName]$branch"
+        - task: Powershell@2
+          name: PwshMungeExternalAPIsPkgVersion
           displayName: Munge ExternalAPIs package version
           inputs:
             targetType: inline
@@ -76,7 +124,7 @@ extends:
           displayName: 'Push MSBuild CoreXT packages'
           inputs:
             packageParentPath: '$(Build.ArtifactStagingDirectory)'
-            packagesToPush: $(Build.ArtifactStagingDirectory)/PackageArtifacts/Microsoft.Build.*.nupkg;$(Build.ArtifactStagingDirectory)/PackageArtifacts/Microsoft.NET.StringTools.*.nupkg;$(Build.ArtifactStagingDirectory)/PackageArtifacts/VS.ExternalAPIs.*.nupkg
+            packagesToPush: $(MSBuildPackagePattern);$(StringToolsPackagePattern);$(ExternalAPIsPackagePattern)
             nuGetFeedType: internal
             publishVstsFeed: VS
             allowPackageConflicts: true
@@ -84,11 +132,15 @@ extends:
           name: MicroBuildInsertVsPayload_4
           displayName: Insert VS Payload
           inputs:
-            PackagePropsValues: VS.ExternalAPIs.MSBuild=$(MSBuild_ExtApisPackageVersion);Microsoft.Build=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Framework=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Tasks.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Utilities.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.NET.StringTools=$(MicrosoftNETStringToolsPackageVersion)
             LinkWorkItemsToPR: true
-            TeamEmail: $(TeamEmail)
             TeamName: $(TeamName)
+            TeamEmail: $(TeamEmail)
+            TargetBranch: ${{ parameters.TargetBranch }}
+            InsertionPayloadName: $(InsertPayloadName)
+            PackagePropsValues: VS.ExternalAPIs.MSBuild=$(MSBuild_ExtApisPackageVersion);Microsoft.Build=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Framework=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Tasks.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Utilities.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.NET.StringTools=$(MicrosoftNETStringToolsPackageVersion)
+            InsertionDescription: $(InsertDescription)
+            ComponentJsonValues: $(InsertJsonValues)
+            DefaultConfigValues: $(InsertConfigValues)
             InsertionReviewers: MSBuild
-            TargetBranch: main
-            InsertionPayloadName: '[Experimental] [Skip-SymbolCheck] $(InsertPayloadName)'
-            InsertionBuildPolicy: Request Perf DDRITs
\ No newline at end of file
+            CustomScriptExecutionCommand: $(InsertCustomScriptExecutionCommand)
+            InsertionBuildPolicy: Request Perf DDRITs
diff --git a/azure-pipelines/vs-insertion.yml b/azure-pipelines/vs-insertion.yml
index a7fafc8da41..01178c98a5e 100644
--- a/azure-pipelines/vs-insertion.yml
+++ b/azure-pipelines/vs-insertion.yml
@@ -1,21 +1,46 @@
-# Create a VS insertion (DotNet-MSBuild-Trusted -> VS) from a build artifact on main or any servicing branch. 
+# Create a VS insertion (DotNet-MSBuild-Trusted -> VS) from a CI run on main or any servicing branch.
+# To achieve insertion automation, this pipeline definition yml has to be on servicing branches and main.
+
+
+# Runs in 3 modes: 
+# 1. daily main insertion from latest main CI.
+#   - can be disabled in the UI by adding a custom schedule for any branch. 
+# 2. trigger insert as a followup to a servicing CI run.
+#   - can be disabled in the UI by adding a custom CI trigger.
+# 3. manual insertion - select manually the TargetBranch and inserted CI run.
 trigger: none
+pr: none
 name: $(Date:yyyyMMdd).$(Rev:r)
 
 schedules:
-  - cron: '0 3 * * *'   # Runs every day at 3AM UTC
-    displayName: Daily VS insertion
+  - cron: '0 3 * * 1-5' # Runs every weekday at 3AM UTC
+    displayName: Daily VS insertion main
     branches:
       include:
         - main
-        - vs*
     always: false # Don't run if there are no code changes
 
+resources:
+  pipelines:
+  - pipeline: 'MSBuild'
+    project: 'DevDiv'
+    source: 'MSBuild'
+    branch: main # for daily main scheduled insertion
+    trigger:
+      branches:
+        include: # trigger as a followup to servicing CI
+          - vs*
+  repositories:
+  - repository: 1ESPipelineTemplates
+    type: git
+    name: 1ESPipelineTemplates/1ESPipelineTemplates
+    ref: refs/tags/release
+
 parameters:
   - name: TargetBranch
     default: auto
     type: string
-    displayName: 'Insertion Target Branch (recommended to use `auto`)'
+    displayName: 'Insertion Target Branch (select for manual insertion)'
     values:
       - auto
       - main
@@ -27,6 +52,11 @@ parameters:
       - rel/d17.6
       - rel/d17.3
       - rel/d17.0
+  - name: DropRetentionDays
+    default: 183
+    type: number
+    displayName: 'Drop Retention Days (do not set to < 90)'
+
 variables:
   # `auto` should work every time and selecting a branch in parameters is likely to fail due to incompatible versions in MSBuild and VS
   - name: AutoInsertTargetBranch
@@ -55,27 +85,24 @@ variables:
       value: ${{ parameters.TargetBranch }}
     ${{ else }}:
       value: $(AutoInsertTargetBranch)
-  - name: InsertPropsValues
-    #  servicing branches until 17.12 also include Microsoft.Build.Engine and Microsoft.Build.Conversion.Core
-    ${{ if or(eq(variables['Build.SourceBranchName'], 'vs17.0'),  eq(variables['Build.SourceBranchName'], 'vs17.3'), eq(variables['Build.SourceBranchName'], 'vs17.6'),  eq(variables['Build.SourceBranchName'], 'vs17.8'), eq(variables['Build.SourceBranchName'], 'vs17.10'), eq(variables['Build.SourceBranchName'], 'vs17.11'), eq(variables['Build.SourceBranchName'], 'vs17.12')) }}: 
-      value: VS.ExternalAPIs.MSBuild=$(MSBuild_ExtApisPackageVersion);Microsoft.Build=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Conversion.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Engine=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Framework=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Tasks.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Utilities.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.NET.StringTools=$(MicrosoftNETStringToolsPackageVersion)
-    ${{ else }}:
-      value: VS.ExternalAPIs.MSBuild=$(MSBuild_ExtApisPackageVersion);Microsoft.Build=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Framework=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Tasks.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.Build.Utilities.Core=$(MicrosoftNETStringToolsPackageVersion);Microsoft.NET.StringTools=$(MicrosoftNETStringToolsPackageVersion)
   - name:  TeamName
     value: msbuild
   - name: TeamEmail
-    value: msbuild@microsoft.com
+    value: msbtm@microsoft.com
+  - name: MSBuild_CI_BuildNumber
+    value: $(resources.pipeline.MSBuild.runName)
+  - name: MSBuild_CI_SourceVersion
+    value: $(resources.pipeline.MSBuild.sourceCommit)
+  - name: ArtifactPackagesPath
+    value: $(Build.ArtifactStagingDirectory)/PackageArtifacts
+  
+  - name: MSBuildPackagePattern 
+    value: '$(ArtifactPackagesPath)/Microsoft.Build.*.nupkg'
+  - name: StringToolsPackagePattern
+    value: '$(ArtifactPackagesPath)/Microsoft.NET.StringTools*.nupkg'
+  - name: ExternalAPIsPackagePattern
+    value: '$(ArtifactPackagesPath)/VS.ExternalAPIs.*.nupkg'
 
-resources:
-  pipelines:
-  - pipeline: 'MSBuild'
-    project: 'DevDiv'
-    source: 'MSBuild'
-  repositories:
-  - repository: 1ESPipelineTemplates
-    type: git
-    name: 1ESPipelineTemplates/1ESPipelineTemplates
-    ref: refs/tags/release
 extends:
   template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
   parameters:
@@ -102,45 +129,48 @@ extends:
                 Write-Error "InsertTargetBranch is not set, this means your're not inserting from main or a valid servicing branch."
                 exit 1
               }
+          # the insertion source branch corresponds to the branch on which the MSBuild pipeline ran
+        - task: PowerShell@2
+          name: SetSourceBranchName
+          inputs:
+            targetType: inline
+            script: |
+              # Extract the last section after the last '/'
+              $fullBranch = "$(resources.pipeline.MSBuild.sourceBranch)"
+              $branchSegments = $fullBranch -split '/'
+              $branch = $branchSegments[-1]
+              Write-Host "Setting source branch to '$branch'"
+              Write-Host "##vso[task.setvariable variable=SourceBranchName;isoutput=true]$branch"
         - task: MicroBuildRetainVstsDrops@1
           name: MicroBuildRetainVstsDrops_2
           displayName: Retain VSTS Drops
           inputs:
-            DropNames: Products/DevDiv/DotNet-msbuild-Trusted/$(Build.SourceBranchName)/$(Build.BuildNumber)
+            DropNames: Products/DevDiv/DotNet-msbuild-Trusted/$(SetSourceBranchName.SourceBranchName)/$(MSBuild_CI_BuildNumber)
             AccessToken: $(System.AccessToken)
             DropServiceUri: https://devdiv.artifacts.visualstudio.com/DefaultCollection
-            # retain servicing indefinitely, main only for 183 days
-            ${{ if eq(variables['InsertTargetBranch'], 'main') }}:
-              DropRetentionDays: 183
+            DropRetentionDays: ${{ parameters.DropRetentionDays }}
     - stage: VSInsertion
       displayName: VS insertion
       dependsOn: RetainBuild
       variables:
-          InsertConfigValues: VS.ExternalAPIs.MSBuild=$(MSBuild_ExtApisPackageVersion)
-          InsertCustomScriptExecutionCommand: $(Pipeline.Workspace)\xsd\Update-MSBuildXsds.ps1
-          InsertDescription: Insert MSBuild $(Build.BuildNumber) from the branch $(Build.SourceBranchName) at commit $(Build.SourceVersion). Corresponding package version is $(MSBuild_ExtApisPackageVersion)
-          InsertJsonValues: Microsoft.Build.vsman{$(MSBuild_ExtApisPackageVersion)+$(Build.SourceVersion)}=https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/DotNet-msbuild-Trusted/$(Build.SourceBranchName)/$(Build.BuildNumber);Microsoft.Build.vsman,Microsoft.Build.Arm64.vsman{$(MSBuild_ExtApisPackageVersion)+$(Build.SourceVersion)}=https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/DotNet-msbuild-Trusted/$(Build.SourceBranchName)/$(Build.BuildNumber);Microsoft.Build.Arm64.vsman,Microsoft.Build.UnGAC.vsman=https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/DotNet-msbuild-Trusted/$(Build.SourceBranchName)/$(Build.BuildNumber);Microsoft.Build.UnGAC.vsman
-          InsertPayloadName: MSBuild $(Build.SourceBranchName) $(Build.BuildNumber)
-          SymbolsAgentPath: $(Pipeline.Workspace)\$(Build.DefinitionName)\Symbols
-          SymbolsEmailContacts: raines
-          SymbolsFeatureName: MSBuild
-          SymbolsSymwebProject: DDE
-          SymbolsUncPath: '\\cpvsbuild\drops\MSBuild\symbols\$(Build.DefinitionName)\$(Build.BuildNumber)\symbols.archive'
+        SourceBranchName: $[ stageDependencies.RetainBuild.Job_1.outputs['SetSourceBranchName.SourceBranchName'] ]
+        VSDropPath: https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/DotNet-msbuild-Trusted/$(SourceBranchName)/$(MSBuild_CI_BuildNumber)
+        VSManVersionSuffix: $(MSBuild_ExtApisPackageVersion)+$(MSBuild_CI_SourceVersion)
+        StandardVSManPath: Microsoft.Build.vsman{$(VSManVersionSuffix)}=$(VSDropPath);Microsoft.Build.vsman
+        Arm64VSManPath: Microsoft.Build.Arm64.vsman{$(VSManVersionSuffix)}=$(VSDropPath);Microsoft.Build.Arm64.vsman
+        UnGACVSManPath: Microsoft.Build.UnGAC.vsman=$(VSDropPath);Microsoft.Build.UnGAC.vsman
+        InsertJsonValues: $(StandardVSManPath),$(Arm64VSManPath),$(UnGACVSManPath)
+        InsertConfigValues: VS.ExternalAPIs.MSBuild=$(MSBuild_ExtApisPackageVersion)
+        InsertCustomScriptExecutionCommand: $(Pipeline.Workspace)\xsd\Update-MSBuildXsds.ps1
+        InsertDescription: Insert MSBuild $(MSBuild_CI_BuildNumber) from the branch $(SourceBranchName) at commit $(MSBuild_CI_SourceVersion). Corresponding package version is $(MSBuild_ExtApisPackageVersion)
+        InsertPayloadName: 'MSBuild $(SourceBranchName) $(MSBuild_ExtApisPackageVersion)'
       jobs:
-      - job: PushPackages
-        displayName: Push Packages
+      - job: PushPackagesAndInsert
+        displayName: Push Packages and Insert VS payload
         condition: succeeded()
         timeoutInMinutes: 0
         templateContext:
           inputs:
-          - input: pipelineArtifact
-            pipeline: 'MSBuild'
-            artifactName: 'BuildLogs_SourceBuild_Managed_Attempt1'
-            targetPath: '$(Pipeline.Workspace)/BuildLogs_SourceBuild_Managed_Attempt1'
-          - input: pipelineArtifact
-            pipeline: 'MSBuild'
-            artifactName: 'build_Windows_NT_SBOM'
-            targetPath: '$(Pipeline.Workspace)/build_Windows_NT_SBOM'
           - input: pipelineArtifact
             pipeline: 'MSBuild'
             artifactName: 'xsd'
@@ -149,28 +179,53 @@ extends:
             pipeline: 'MSBuild'
             artifactName: 'PackageArtifacts'
             targetPath: '$(Build.ArtifactStagingDirectory)/PackageArtifacts'
+            # the CI build creates a sourcebuild intermediate package that is not signed, remove it to avoid warning from Guardian
+            itemPattern: |
+              **
+              !**/Microsoft.SourceBuild.Intermediate*.nupkg
         steps:
         - task: Powershell@2
           name: PwshMungeExternalAPIsPkgVersion
-          displayName: Munge ExternalAPIs package version
+          displayName: Munge ExternalAPIs package version and set props
           inputs:
             targetType: inline
             script: |
               $folder = "$(Build.ArtifactStagingDirectory)/PackageArtifacts/VS.ExternalAPIs.*.nupkg"
               $packageFile = Get-ChildItem -Path $folder -Filter VS.ExternalAPIs.*.nupkg | Select-Object -First 1
-              $packageVersion = $packageFile.BaseName.TrimStart("VS.ExternalAPIs.MSBuild")
-              Write-Host "Setting MSBuild_ExtApisPackageVersion to '$packageVersion'"
-              Write-Host "##vso[task.setvariable variable=MSBuild_ExtApisPackageVersion]$($packageVersion)"
+              $MSBuild_ExtApisPackageVersion = $packageFile.BaseName.TrimStart("VS.ExternalAPIs.MSBuild")
+              Write-Host "Setting MSBuild_ExtApisPackageVersion to '$MSBuild_ExtApisPackageVersion'"
+              Write-Host "##vso[task.setvariable variable=MSBuild_ExtApisPackageVersion]$($MSBuild_ExtApisPackageVersion)"
               $folder = "$(Build.ArtifactStagingDirectory)/PackageArtifacts/Microsoft.NET.StringTools*.nupkg"
               $packageFile = Get-ChildItem -Path $folder -Filter Microsoft.NET.StringTools*.nupkg | Select-Object -First 1
-              $packageVersion = $packageFile.BaseName.TrimStart("Microsoft.NET.StringTools")
-              Write-Host "Setting MicrosoftNETStringToolsPackageVersion to '$packageVersion'"
-              Write-Host "##vso[task.setvariable variable=MicrosoftNETStringToolsPackageVersion]$($packageVersion)"
+              $MicrosoftNETStringToolsPackageVersion = $packageFile.BaseName.TrimStart("Microsoft.NET.StringTools")
+              Write-Host "Setting MicrosoftNETStringToolsPackageVersion to '$MicrosoftNETStringToolsPackageVersion'"
+              Write-Host "##vso[task.setvariable variable=MicrosoftNETStringToolsPackageVersion]$($MicrosoftNETStringToolsPackageVersion)"
+              
+              $props = @(
+                      "VS.ExternalAPIs.MSBuild=$MSBuild_ExtApisPackageVersion",
+                      "Microsoft.Build=$MicrosoftNETStringToolsPackageVersion",
+                      "Microsoft.Build.Framework=$MicrosoftNETStringToolsPackageVersion",
+                      "Microsoft.Build.Tasks.Core=$MicrosoftNETStringToolsPackageVersion",
+                      "Microsoft.Build.Utilities.Core=$MicrosoftNETStringToolsPackageVersion",
+                      "Microsoft.NET.StringTools=$MicrosoftNETStringToolsPackageVersion"
+                  )
+              # servicing branches until 17.12 also include Microsoft.Build.Engine and Microsoft.Build.Conversion.Core
+              if ("$(InsertTargetBranch)" -in @("rel/d17.0", "rel/d17.3", "rel/d17.6", "rel/d17.8", "rel/d17.10", "rel/d17.11", "rel/d17.12"))
+
+              {
+                  $props += @(
+                      "Microsoft.Build.Conversion.Core=$MicrosoftNETStringToolsPackageVersion",
+                      "Microsoft.Build.Engine=$MicrosoftNETStringToolsPackageVersion"
+                  )
+              }
+              $propsValue = $props -join ";"
+              Write-Host "Setting InsertPackagePropsValues to '$propsValue'"
+              Write-Host "##vso[task.setvariable variable=InsertPackagePropsValues]$($propsValue)"
         - task: 1ES.PublishNuGet@1
           displayName: 'Push MSBuild CoreXT packages'
           inputs:
             packageParentPath: '$(Build.ArtifactStagingDirectory)'
-            packagesToPush: $(Build.ArtifactStagingDirectory)/PackageArtifacts/Microsoft.Build.*.nupkg;$(Build.ArtifactStagingDirectory)/PackageArtifacts/Microsoft.NET.StringTools.*.nupkg;$(Build.ArtifactStagingDirectory)/PackageArtifacts/VS.ExternalAPIs.*.nupkg
+            packagesToPush: $(MSBuildPackagePattern);$(StringToolsPackagePattern);$(ExternalAPIsPackagePattern)
             nuGetFeedType: internal
             publishVstsFeed: VS
             allowPackageConflicts: true
@@ -182,7 +237,7 @@ extends:
           displayName: 'Push MSBuild packages to VSSDK'
           inputs:
             packageParentPath: '$(Build.ArtifactStagingDirectory)'
-            packagesToPush: $(Build.ArtifactStagingDirectory)/PackageArtifacts/Microsoft.Build.*.nupkg;$(Build.ArtifactStagingDirectory)/PackageArtifacts/Microsoft.NET.StringTools*.nupkg
+            packagesToPush: $(MSBuildPackagePattern);$(StringToolsPackagePattern)
             nuGetFeedType: external
             publishFeedCredentials: azure-public/vssdk
             allowPackageConflicts: true
@@ -201,8 +256,10 @@ extends:
             TeamEmail: $(TeamEmail)
             TargetBranch: $(InsertTargetBranch)
             InsertionPayloadName: $(InsertPayloadName)
-            PackagePropsValues: $(InsertPropsValues)
+            PackagePropsValues: $(InsertPackagePropsValues)
             InsertionDescription: $(InsertDescription)
+            ComponentJsonValues: $(InsertJsonValues)
+            DefaultConfigValues: $(InsertConfigValues)
             InsertionReviewers: MSBuild,VS ProTools
             CustomScriptExecutionCommand: $(InsertCustomScriptExecutionCommand)
             AutoCompletePR: true
diff --git a/branding/MSBuild-Icon.png b/branding/MSBuild-Icon.png
index d769a8aa1d4..59bbbd8c00f 100644
Binary files a/branding/MSBuild-Icon.png and b/branding/MSBuild-Icon.png differ
diff --git a/branding/MSBuild-Logo.ai b/branding/MSBuild-Logo.ai
new file mode 100644
index 00000000000..0bf57689519
--- /dev/null
+++ b/branding/MSBuild-Logo.ai
@@ -0,0 +1,352 @@
+%PDF-1.6%����
+1 0 obj<</Metadata 2 0 R/OCProperties<</D<</ON[18 0 R]/Order 19 0 R/RBGroups[]>>/OCGs[18 0 R]>>/Pages 3 0 R/Type/Catalog>>endobj2 0 obj<</Length 16609/Subtype/XML/Type/Metadata>>stream
+<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
+<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c002 79.a6a6396, 2024/03/12-07:48:23        ">
+   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
+      <rdf:Description rdf:about=""
+            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
+            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
+            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
+            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
+            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
+            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
+            xmlns:dc="http://purl.org/dc/elements/1.1/"
+            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
+            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
+         <xmp:CreatorTool>Adobe Illustrator 28.7 (Windows)</xmp:CreatorTool>
+         <xmp:CreateDate>2024-12-02T06:56:21-07:00</xmp:CreateDate>
+         <xmp:ModifyDate>2024-12-02T06:56:22-08:00</xmp:ModifyDate>
+         <xmp:MetadataDate>2024-12-02T06:56:22-08:00</xmp:MetadataDate>
+         <xmp:Thumbnails>
+            <rdf:Alt>
+               <rdf:li rdf:parseType="Resource">
+                  <xmpGImg:width>232</xmpGImg:width>
+                  <xmpGImg:height>256</xmpGImg:height>
+                  <xmpGImg:format>JPEG</xmpGImg:format>
+                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqsmnhgTnK4RfE/wwiJPJUlu9fkYlbZeC/wA7bn6B0zJhgHVKXSXVxKaySM3sSafdlwiB&#xA;yVZXJKrRXl1Ef3crL7VqPuO2QMAeippaa7uFuVp/xYv8RlEsHcqaxyJIgdGDKehGUEUhdgV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtMyqCzEBR1J2GKpTe6/ElUtR6jfzn7I+Xj&#xA;mRDATzTSSTXE0785XLt4n+GZIiByVZXCrdcVbrirdcVbrgVWt7qe3blE5XxHY/MZGUQeap1Z6zBN&#xA;RJv3Unj+yfp7ZjTwkckJjlKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAX2tWtrVAf&#xA;VmH7C9Afc5bDCZKx+81K6uz+8aido12UZlwxiPJKGrlit4FbrirdcCt1xVuuKt1xVuuBW8VVT5gT&#xA;SLZ7m7uI4bKIVkedgiKK0+03TInDxmgN1Tvy/runa9o9vq2nOZLK6DGFyCtQrlCaMAeq5iZsUscj&#xA;GXMITDK1dirsVdirsVdirsVdirsVdirsVdirsVdiqHvNQtbROUz0Y/ZQbsfkMnDGZclY7f69dXNU&#xA;j/cxeAPxH5nMyGADnumkurlyW8Ct1xVuuKG64FbrirdcCt1xVsHFW64q8885/nR5e0P1LXTSNV1N&#xA;ajjG37iNv8uQfap/KvyJGbDT9nTnvL0x+1IDw3zR508xeZrn1tWumkRTWG1T4II+v2IxtXenI1bx&#xA;ObvDp4YxUQzAfV/5I/8AkrNA/wCMUv8Ayfkzke0/8Yl+OjWebOMwEOxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxVZNPDBGZJXCIOrE0wiJPJUg1DzKzVjsxxXp6rdfoHb6cy8em/nJpJHkeRi7sWY7liak5kgUl&#xA;quFW64FbrirdcCt1xVuuKt1wIbrirdcCsc82/mF5a8rxEX9x6l4RWOwho8zV6EitEHuxHtXMnBpJ&#xA;5eQ27008K85/mv5l8y87YP8Ao/S22+pQE1Yb/wB7Jsz9emy+2bzT6GGPfnLvZAMKzNS7FX2X+SP/&#xA;AJKzQP8AjFL/AMn5M4rtP/GJfjo1nmzhmCgsxAUCpJ6AZgIeeecPzk0TSOdrpIXU79agsp/0dD7u&#xA;Pt/JfvzcaTseeTefpj9rIRSnyl+eNvMy2vmSIW7k0W+gBMft6kfxMPmtfkMyNX2IRviN+RUxeqWt&#xA;3a3dulzazJPbyCscsbB0YeIYbZoZQMTRFFiq5FXYq7FXYq7FXYq4kAEk0A3JOKpNqHmS3hrHagTS&#xA;fz/sD+uZOPTk89k0xy6vLm6k9Sdy57DsPkO2ZkYCPJKlXJK3gVuuKt1xVvAreKt1wK3XFW8VQOta&#xA;/o+iWZvNVu47WAbAufiY/wAqKKsx9lGTx4pTNRFq8X85fnnqd96lp5dRtPtT8JvHobhh/kgVWP8A&#xA;E+4zc6fs2Md57n7GQDy6aaWaV5pnaSWQlpJHJZmY7kkncnNmBXJKzCrsVdir6k/L78w/Lvln8qdB&#xA;jupfXv8A0ZCljDQybzSEc+yDf9r6Ac5jU9n5M+okQKjfP4MCN2FebvzK8x+ZC0Mkn1TTj0soCQpH&#xA;/FjdX+nb2zcaTs3Hh3G8u8/jZkAxPNgl2Kp15a846/5cuPV0y5KRsay2z/FC/wDrJ/EUPvmLqdHj&#xA;zCpj49UEPavKH5u6BrfC2viNM1FtuErfuXP+RIadfBvxzmdX2Tkxbx9Uft+TExZ5mqYuxV2KuxVB&#xA;6lqttYR1kPKRvsRDqf6DLMeIy5KxTUNYvL0kO3CLtEuw+nxzPx4YxSggctS3XAreKt1xVvArdcVb&#xA;rireBW64qsmuILeF555FihjBaSVyFVVHUljsBiASaCvLfOP552FnztPLcYvLgbNfSgiBT/kLs0nz&#xA;2Hzzaafs0nee3kkB43rGt6trN617ql093cttzkPQVrxVRRVXfoopm4x44wFRFBkgcmrsVdiqvaWN&#xA;1dycIIy5/aboo+Z6DFWSaf5btYKPc0nl/l/YH0d/p+7FU4xV2FXYq7FXYq7FWaeT/wA0/MPl4pby&#xA;sdQ0xaD6rMx5Iv8AxVJuV+RqPbNZq+y8ebcemXf+tBD3Xyz5q0fzHp4vNNl5AbTQNQSRt/K6/wAe&#xA;hzldTpZ4ZcMgwITfMdCE1TUI7G0aZt36Rp4scsxYzI0rB57iW4maaVuTuak5s4xAFBksBwq3ireK&#xA;tg4FbxVuuKt1wK3XFW8VbrgV4P8AnrrWqyeY4tJdnj06CBJYoQaJI7k1kIHWlOIr0oadc3nZuOPB&#xA;xdWQeY5s0uxV2KuxV2Ks+tbaC2gSGCnpqNmH7X+V9OIVVwq7FXYq7FXYq7FXYq7FU18s+ZNS8u6t&#xA;FqVi9HTaWIk8JIz9pHA7H8OuY+p00c0DGSCH03oGuWOuaRb6nZNWC4WvE/aRhsyN7qds4jPglimY&#xA;S5hrLDfOOrSzawYY3pHaDgtOhY0Ln+H0ZsdJiAhZ6pCWwaip+GX4T/MOmXSx9yUaCCKg1B6EZWrd&#xA;cCt4q3irYOKt4FdirdcCt1xVvFWP+b/I2hearZU1BGS5iBFvdxGkiV3pvUMvsfwy/BqZYjtyUF4Z&#xA;5w/K7zJ5b53BT69pi7/XYATxX/i1Nynz3X3zd6fWwybcpdzIFh2ZiXYq7FXYqnOl+YpbZVhuFMsC&#xA;7Kw+2o8PcDFWSWt5bXUfqQSB1706j5jqMVVsKuxV2KuxV2KuxVa7oilnIUDucQCeSpfcaoTVYRQf&#xA;zn+AzJhg70vVf+cdvNUsWq3vl24kJhvEN1ahj0mjADgf60e/+xzQe0WkBgMo5x2Pu/t+9hIJ3czt&#xA;PcyzsfildnNfFjXMKMaACFOuSVVhupYT8B27qemRMQVTG3voZaAng/8AKe/yOUygQqKrlat1xVvF&#xA;XA4quwK7FW64q3gVuuKt4q8+84fk3oGsh7rSwul6id6Rr/o7mn7UY+z80+dDmfp+0Jw2l6h9qbeK&#xA;eZPKOv8Aly69DVbVolYkRXC/FDJT+Rxt9HXxGbnDnhkFxLK0my5XYq7FVSCeaCQSwuUcdGGKsg07&#xA;zOjUjvRwbtMo2O37Q7fRiqfI6OodGDI26spqD8iMVbwq7FXYqgrjUo0+GL428e2XQwk81S6WaWVu&#xA;UjVPYdhmTGIHJKnhVk35aXz2Xn7QZkNC17FCSP5Z29FvwfMHtPHxaeY/ok/LdB5PVK5zrB1cVdXF&#xA;XVxVFW+oyxUVvjTwPUfI5XLGCqZwXMMwqjb91PUfRlEokKrVyKuxVsHFWwcCt4q3XFW64Fbrirdc&#xA;VUbyys762e1vIEuLaUUkhlUOpHuDhjIxNjYq8m84/kWjepeeWJOLfaOmzNsfaKVunyf/AILNrp+0&#xA;uk/mkF5FqGnX+nXclpf28ltcxmjwyqVYeGx7Hsc20ZiQsGwyQ2SV2KuxVFWWpXdk9YHopNWjO6n5&#xA;jFWS6d5gtLqiS/uJj2Y/CT7N/XFUbcXsMNQTyf8AlH8cshjMlSu4vJpzQmidkHT6cyoYxFKhk1di&#xA;rsVTbyn/AMpTo3/Mdbf8nlzH1f8Acz/qn7kF7DXOYYOrirq4q6uKurirauykMpII6EdcFKmFtqxF&#xA;FnFR/OOv0jKpYu5UyjlSRQ6MGU9xlBFKvwK3irYOBW8VdXFV1cCt1xVvFW64FSrzD5W0LzDafVtV&#xA;tVnC19KX7MkZPdHG4/Ue+W4s0sZuJW3i3nH8ltb0nndaMW1SwFSYwP8ASUHug/vPmu/+Tm50/aMZ&#xA;bS9J+xkC84ZWVirAhgaEHYgjNilrFXYq7FU+h/uY/wDVH6s2EeQSvwq7FXYq7FU28p/8pTo3/Mdb&#xA;f8nlzH1f9zP+qfuQXr9c5hg6uKurirq4q6uKurirq4qqQ3EsLco2Knv4H5jAYg81TS11aJ6LN+7f&#xA;+b9k/wBMoliI5KmAIIqOhylW8VbBxVvArsVbrgVuuKt4q3XFW64FYl5y/Lbyz5jjkuLhBZahSo1C&#xA;EBWrSg9VdlkHTrv4EZl6fVzx7DcdygvnfzFo0mi6zdaZJMs7WzACZAQrKyh1NDuNm3zoMWTjiJM0&#xA;uyxXYqn0P9zH/qj9WbCPIJX4VdirsVdiqbeU/wDlKdG/5jrb/k8uY+r/ALmf9U/cgvXa5zLF1cVd&#xA;XFXVxV1cVdXFXVxV1cVdXFURbX9xbmimqd0PT+zISxgqnFpqVvcUUHhJ/I38D3zHljIQi8rVwOKr&#xA;sCuxVuuKt1wK3iqBvNYt4Kon72XwHQfM5bDCSqSXV9cXLVlao7INlH0ZlRgI8leE/mN/ymeo/wDP&#xA;H/kwmbjTf3YZhjWXq7FU+h/uY/8AVH6s2EeQSvwq7FXYq7FU28p/8pTo3/Mdbf8AJ5cx9X/cz/qn&#xA;7kF63XOaYurirq4q6uKurirq4q6uKurirq4q6uKuriqPtNYmiosv72PxP2h9PfKp4QeSE4t7uC4W&#xA;sTg+K9x8xmNKBHNVYHIq2DgVvFUPdahbWw/eN8fZBu2TjjMuSpLeavcXFVB9OI/sr1PzOZMMICoK&#xA;uWpdXFXiP5i/8plqH/PH/kwmbXTfQGQY3l6uxVPof7mP/VH6s2EeQSvwq7FXYq7FU28p/wDKU6N/&#xA;zHW3/J5cx9X/AHM/6p+5BesVzm2Lq4q6uKurirq4q6uKurirq4q6uKurirq4q6uKtq7KQykhh0I2&#xA;OClRcWr30dB6nIDswB/HrkDiiUK36fu/5I/nRv8AmrI+AFUJdWv5BQylR4LRfxG+SGKI6KhORO5O&#xA;WJdXFXVxV1cVeJ/mJ/ymOof88v8AkymbTTfQGQY5l6uxVPof7mP/AFR+rNhHkEr8KuxV2KuxVNvK&#xA;f/KU6N/zHW3/ACeXMfV/3M/6p+5BerVznGLq4q6uKurirq4q6uKurirq4q6uKurirq4q6uKurirq&#xA;4q6uKurirq4q6uKurirq4q8V/MP/AJTDUP8Anl/yZTNnpvoCQxzL0uxVPof7mP8A1R+rNhHkEr8K&#xA;uxV2KuxVNvKf/KU6N/zHW3/J5cx9X/cz/qn7kF6nXOdYurirq4q6uKurirq4q6uKurirq4q6uKur&#xA;irq4q6uKurirq4q6uKurirq4q6uKurirxf8AML/lMNQ/55f8mUzZaf6AyDHcvV2Kp9D/AHMf+qP1&#xA;ZsI8glfhV2KuxV2Kpt5T/wCUp0b/AJjrb/k8uY+r/uZ/1T9yC9RrnOsXVxV1cVdXFXVxVCatqMem&#xA;6bc30g5Lbxl+NaciPsrX3O2ShHiNK8r/AOVk+avrXrevH6XKv1b009On8taepT/ZVzP/AC0KTTN/&#xA;L35g6RqnGG4P1K9O3pyH4GP+Q+w+g0+nMbJpzHzC0yiuY6HVxV1cVdXFXVxV1cVdXFXVxV1cVdXF&#xA;XVxV1cVeI+c7yO880ahNH9j1PTB8fSUR1+nhm0wxqAZBJctV2Kp9D/cx/wCqP1ZsI8glfhV2KuxV&#xA;2Kpt5T/5SnRv+Y62/wCTy5j6v+5n/VP3IL0+uc8xdXFXVxV1cVdXFUi88n/nVNQ/1F/5OLl2D6wo&#xA;eLZsmTsVZL5e8+axpAWGQ/XLJdhBITyUUp8D7kfLcZRkwRl5FFPTND80aPrMdbOb98BV7aT4ZV/2&#xA;Pce4qMwp4jHmhNa5Wrq4q6uKurirq4q6uKurirq4q6uKsV85+c7fSraSztJA+qSLxAXf0g37Tf5V&#xA;Og+npmRhw8Rs8kgPI82CXYq7FU/h/uU/1R+rNhHkErsKuxV2KuxVNvKf/KU6N/zHW3/J5cx9X/cz&#xA;/qn7kF6bXOfYurirq4q6uKuriqReeD/zquof6i/8nFy3B9YUPGM2TJ2KuxVfFLLFIssTtHIhDI6k&#xA;hgR0II6YCFZt5f8AzMuoONvrCG4i6C5QASD/AFl2DfgfnmNk0wP0op6FYalY6hbi4sp1nhO3JT0P&#xA;WhHUH2OYcokbFCJrgV1cVdXFXVxV1cVQOq63pmlQetfTrEDXgnV3I7Ko3OSjAy5K858wfmNqV9yg&#xA;06tlanbmD++Yf6w+x/sfvzMx6cDnummIEkkkmpO5JzJS1irsVVIITNMsY25Hc+A7nDEWaVPiSSSe&#xA;p3zYAUlrFXYq7FXYqm3lP/lKdG/5jrb/AJPLmPq/7mf9U/cgvSq5oGLq4q6uKurirq4qkfnc/wDO&#xA;q6h/qL/ycXLcP1hIeNZsUuxV2KuxV2KorTtTv9OuBcWU7QSjYlTsR4MDsw9jkZRB2KvQNE/M6zlV&#xA;YtWjNvL/AMtEQLRn5ruy/RX6MxJ6Y9EUy6y1XTb4Vs7qKfapEbqxFfEA1H05QYkc0ImuRVBX+uaR&#xA;p4JvLyKEqKlCwL09kFWP0DJRgTyCsN138zhRodGi36fW5R890j/UW+7MmGm/nJpgd3eXV5cPcXUr&#xA;TTuatI5qTmUAAKCVHCrsVdiqtBazTn4B8PdzsBkoxJ5KmtrapboQN3b7bfwHtmXjx8PvSrZYrsVd&#xA;irsVdiqbeU/+Up0b/mOtv+Ty5j6v+5n/AFT9yC9OvIGtrue2eoaCRo2B8UYqf1Zz8JcQB72KjXJK&#xA;6uKurirq4qkfnY/86tf/AOov/Jxcsw/UEh45mxS7FXYq7FXYq7FXYq7FW+TcQtTxG4HbFWsVdirs&#xA;Vdiq6ON5GCopZj2GEC1TG30xQOU55H+QdPpOZEMHelHAAAACgHQDYDMgCldirsVdirsVdirsVZL+&#xA;WtjJe+ftBhQVK3sUxH+TA3rN/wAKhzB7Tnw6eZ/okfPZB5PYvzH0hrLXjdKtIL4eop7eoNnH6m+n&#xA;OY7Oy8WOusWAYpXNgl1cVdXFXVxVI/Op/wCdXv8A/UX/AImuWYfqCQ8ezYJdiqM0qxF5demxpGi8&#xA;5PGgIG30nCFT+TSdPeIR+iFA6MuzCvv3+nJ8IVJb3RbmCrxfvoh3A+IfMf0yJjSpdkVdirsVdirs&#xA;VdirsVR9vpcjUaf4F/l/a/sy6GEnmqYRxRxLxjUKvenf55kxgBySuySuxV2KuxV2KuxV2KuxV7J/&#xA;zjp5Xkn1W88yTJ/o9ohtbViOs0gBcr/qR7f7LOa9o9UBAYhzO5939v3MJF7V5l0GDW9Lks5CEk+3&#xA;by/ySDofkehzltNnOKfEGILxK/sbqwu5bS6jMc8R4up/WPEHtnT45iYscmSHrkldXFXVxVJPOh/5&#xA;1i//ANVf+JrluH6gkPIMz0uxVOPLP+9k/wDxhP8AxNMI5qn5y1VpwqgL3Sra5Jb+7lP7ajr8x3wG&#xA;FqkV1p91bEmRKp/vxd1+/t9OVGJCobArsVdiqKttOuJ6GnCM/tt4ew75OMCVTW3soLcfAKv3c9en&#xA;bwzJhjASqHLFawq1irsVdirsVdirsVdiqc+U/Kuq+Z9ah0vTo6ySGs0xB4RRg/FI58B+PTMbV6uG&#xA;CBnL+3yQTT628teXtP8AL2iWukWC0t7VePI/adiau7e7Ma551qdRLNkM5cy1kpnlCEm8x+VdM16A&#xA;LcL6dwg/c3KAc19j/MvtmTp9VLEduXckF5T5h8n6zojFp4/VtK/DdR1Ke3Lup+eb7T6uGXlz7mQK&#xA;R1zKV1cVSXzmf+dZvv8AVX/ia5Zi+oJeQ5npdiqceWf97J/+MJ/4mmEc1T85aq04VW4VW1I6ZJUL&#xA;Jp9jIQXgU08Kr9/GmRMAVU/0Xp/++B/wT/8ANWDwgq6OztYjWOJVNag9SD7E1OTEAErzlirThVYc&#xA;KtYVaxV2KuxV2KuxV2Ks98j/AJPeZ/M5juZUOm6Q1CbydTydf+KY9i3zNF981Ou7ZxYNh6p9w/SW&#xA;JlT6J8peTdC8q6aLHSYeAahnuH+KWVh+07bfQBsO2cXq9bk1EuKZ+HQMCbTzMRDsVdirTKrqVYBl&#xA;YUZTuCD2OIKsK8x/llp97zuNKIs7k7mE/wByx+Q3T6NvbNnp+0pR2nuPtSC811XR9T0q4+r38DQv&#xA;+yTurDxVhsfozd4s0cguJtkxjzkf+dZvv9Vf+JrmRi+oJeR5nJem/l/+Q3mzzP6d5fKdH0dqN9Yn&#xA;U+tIv/FUJod/5moPCuavV9q48Ww9UkGT0r8w/wAufKnk78v0i0a0C3D3cSz38tHuJBxc0Z6Cg2+y&#xA;oC+2YXZesyZtR6jtwnbp0QDu8fOdOyWnCq3Cq05JVpwqsOFVpwpWnCq04VWHCrWFWsVdirsVdiqf&#xA;+VPI3mXzTc+jpFoXiU0mu5Pggj/1n8fYVPtmJq9di04uZ+HVBNPfPI/5I+WvL/p3eogatqi7iSVf&#xA;3EZ/4riNakfzNX2pnIa7tzLm2j6Ifb82Bk9HzSMXYq7FXYq7FXYq7FUPfafZX9u1teQpPA3VHFR8&#xA;x4H3GThklA3E0VeXee/yYutR0+e30C4RRclV9K6YgRjmCSHUMWAHalfnm50vawH94PkyEkw/L/8A&#xA;Iryl5V9O8ukGr6ynxfW7hR6cbf8AFMJ5KtP5mq3gRmNq+1MmXYemP45lBk9JzWIedfnx/wAoQn/M&#xA;bF/xCTNz2F/f/wCaf0Mo83zwc7FmtOFVuFVpySrThVYcKrThStOFVpwqsOFWsKtYq7FUZpWkapq1&#xA;6llplrJd3Un2YolLH5nsB4k7ZXlzQxx4pmgr23yP/wA4+W8Pp3vmyUTydRpkDERj/jLKKFvku3uc&#xA;5bXe0JPpwiv6R/QP1sDJ7HZ2VnZW0drZwR21tEOMUMShEUeAVaAZzM5ykbkbLBWyKuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV51+fH/KEJ/zGxf8Qkzc9hf3/wDmn9DKPN88HOxZrThVbhVackq04VWHCq04&#xA;UrThVacKrDhVrCraI8jqiKXdyFVVFSSdgABiTSvVPI/5C65q3p3nmBm0qwO4t6D61IP9U1EX+y3/&#xA;AMnOf13b+PH6cfrl39P2/jdiZPdvLnlXQPLlkLPR7NLaM09RxvJIR3dzVmPzOclqdXkzS4pm2BKb&#xA;ZjodirsVdirsVdirsVdirsVdirsVdirsVdirH/PPlGLzVoL6W9w1swkWaGUAMA6AgclNKr8XY5ma&#xA;HVnBk46tINPnXzb5C8x+WJiNQt+VqTSK9iq0LeHxfsn2ahzstJr8Wcek793VsBtjZzNVbhVackq0&#xA;4VWHCq04UrThVacKrDhVmXkr8qPNPmpkmii+paWx+LULgEKR/wAVrs0n0be+a3W9rYdPsTxT7h+n&#xA;uQZU+gPJX5X+VvKaLLaQ/WdSpR9RuAGkqRQ+mOkY/wBXfxJzj9b2pm1GxNR7h+N2sm2XZrUOxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrJ4ILiF4Z41lhkBWSJwGVgeoKnYjDGRBsc1eVedPy&#xA;K0+8El55bcWVyasbGQkwMevwNu0Z9tx8s3+i7dlH05fUO/r+1kJPFta0LV9EvWstVtZLS4XcK42Y&#xA;fzIwqrD3U50+HPDLHigbDO0uOXqtOFVhwqtOFK04VTby15Q8w+Zbz6to9m9wVI9Wb7MUYPd5D8I+&#xA;XU9sx9TrMeCNzNfegl7t5I/Iry/o3p3mtldW1JaMI2H+ixt/kof7z5vt/kjOT13buTL6cfoj9v7P&#xA;h82Bk9OVVVQqgBQKADYADNCxbxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoD&#xA;WtB0fW7JrLVbWO7t23CuN1P8yMKMp9wcuw554pcUDRV415t/IHUYGe48tTi7h3Isrhgkq+yyGiN/&#xA;suP050uk7fidsoo945MxJ5lqnlfzHpTsuo6Zc2vHq0kTBD7h6cSPkc3uLVYsn0yB+LK0qOZCpxpP&#xA;krzZrEgTTtJuZwf92emUjHzkfig+k5jZdbhx/VID8dy29S8n/wDOPgVo7vzTcBgKH9G2xND7SSin&#xA;0hP+CzQ6z2h6YR/nH9A/X8mJk9j07TNP0yzjs9Pt47W1iFEhiUKo96Due5zmcmWU5cUjZYInIK7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
+               </rdf:li>
+            </rdf:Alt>
+         </xmp:Thumbnails>
+         <xmpTPg:NPages>1</xmpTPg:NPages>
+         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
+         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
+         <xmpTPg:MaxPageSize rdf:parseType="Resource">
+            <stDim:w>256.000000</stDim:w>
+            <stDim:h>256.000000</stDim:h>
+            <stDim:unit>Pixels</stDim:unit>
+         </xmpTPg:MaxPageSize>
+         <xmpTPg:PlateNames>
+            <rdf:Seq>
+               <rdf:li>Cyan</rdf:li>
+               <rdf:li>Magenta</rdf:li>
+               <rdf:li>Black</rdf:li>
+            </rdf:Seq>
+         </xmpTPg:PlateNames>
+         <xmpTPg:SwatchGroups>
+            <rdf:Seq>
+               <rdf:li rdf:parseType="Resource">
+                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
+                  <xmpG:groupType>0</xmpG:groupType>
+               </rdf:li>
+            </rdf:Seq>
+         </xmpTPg:SwatchGroups>
+         <illustrator:Type>Document</illustrator:Type>
+         <illustrator:CreatorSubTool>AIRobin</illustrator:CreatorSubTool>
+         <dc:format>application/pdf</dc:format>
+         <dc:title>
+            <rdf:Alt>
+               <rdf:li xml:lang="x-default">MSBuild</rdf:li>
+            </rdf:Alt>
+         </dc:title>
+         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
+         <xmpMM:DocumentID>uuid:2cd3e4c4-d910-43cb-aab9-0d6a971b2feb</xmpMM:DocumentID>
+         <xmpMM:InstanceID>uuid:c5a17121-3dda-42af-9dfb-fa7c0f1b1279</xmpMM:InstanceID>
+         <pdf:Producer>Adobe PDF library 17.00</pdf:Producer>
+      </rdf:Description>
+   </rdf:RDF>
+</x:xmpmeta>
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                                                                                                    
+                           
+<?xpacket end="w"?>
+endstreamendobj3 0 obj<</Count 1/Kids[5 0 R]/Type/Pages>>endobj5 0 obj<</ArtBox[21.3386 9.813 234.672 246.2]/BleedBox[0.0 0.0 256.0 256.0]/Contents 20 0 R/CropBox[0.0 0.0 256.0 256.0]/LastModified(D:20241202065621-07'00')/MediaBox[0.0 0.0 256.0 256.0]/Parent 3 0 R/Resources<</ExtGState<</GS0 21 0 R>>/Properties<</MC0 18 0 R>>/Shading<</Sh0 22 0 R/Sh1 23 0 R/Sh2 24 0 R>>>>/Thumb 25 0 R/TrimBox[0.0 0.0 256.0 256.0]/Type/Page/PieceInfo<</Illustrator 8 0 R>>>>endobj20 0 obj<</Filter/FlateDecode/Length 1256>>stream
+H�tWˎ9��W���uM6�S�r�܍���Y`����R��Nc�.�D�Q$5/�/ߧ���a{�R����¯��l����֐����z��u{��s
+_loAB�G���� �D�������&9�h�ǆ���Ɯ�/Ec�)�T]Т&�1�أ�Z>���ԗ+������$6�'�J	w�h���5��É�$ڔ�(�U�H$������.(Тz�=V��QZ��h��]m#Z�'�c7W�K�j,��]:4�\���(�{�G�E�Z���4�|_ �~.�Gr5tS�����#����t�oHD�GK�;#�cS�ɹ�c�J'�
+8��Ez�i�bf;w7��I� Tug�Z:ytݾm�n��y�T���I���K`�)Q��{P2Y`!N����P=�c� X������{�k�H��z·�����ɢ�8��l�Y�b��@����0e��$�m��
+�#���J�!!q^����PA6Ea�TdB��Lc�r�ݣ ���q�@DqJ�@K�Y=-kZ4�C�X3�,��%� 炟��ƹ�]��%�n�*��u`����ngt��~��
+���z/�1� ŉ�p��l8h��	N^����4�RoI����zNa4���7��4��=�ݗ���[
+?��_��;�R�j(��X'ȋyC��(I
+��"�C%J�m�&��g��.��T(C�@z�D�S@�?G�9�?��9	�)�)���~"��W�s����J�̹�"Bݸ�)�p`�id����n8�%��L�k�d��B���u���b�������x���E#x(����Y��,,��YZ�N��%R�/j��&�o��ƚ��&d�ݭ���!���~wk �Q(��tg�d4;(D���>Zsꝝ^�Ҁ�j:��#��V����>J� U�D���vT6�d.@z����4�>�g����ǡ�[����G���[xLq0��/f�����7-�	XT�g\a�Ӆ�L(aÀ@��G�9
+�ڜ̳&(���2D���S.��
+�m�|p ��BQ�"̂���čl�6�%���^V=�z�e�<�`��`8F�����}�D^'L���_���vE{��)�.�N����1�)�k�#���F�9�Wg��(`���:/�����o��?
+n�`�g�p��p��S�L}g|ϞZ��>l6F&��I2ϒ1�p~�>�2l{��Q�>�_�O��   ��   �� 	`{
+endstreamendobj25 0 obj<</BitsPerComponent 8/ColorSpace 26 0 R/Filter[/ASCII85Decode/FlateDecode]/Height 32/Length 364/Width 32>>stream
+8;WRp4gK_`&;6*#&KIZBoIcR`G?GS>$k_*:o>;8uDXclT_Q):-H5<m=J#o13<V"IN
+;=XWh^2hh0lc-5GR&aRcFr(KFYhmCJ<Rd[O4WsIh=*:JkcjJBT)d<@Fi;B>2cbOUJ
+A=h7i6q$u>:?Qnl5W^M..=\X,&*kDq#T_=f%ssfj,>:5Cs+-[@`QiNRR=0rKJHe:m
+h(05\:-iQ_^[p9jr.0&fr'M^D-WOil51;:2DlJ-T4WSe<'Zlpj+V&nRH).!VC]W$g
+kA0)YXF0TO4!!_f)p`_gNO>]bm00dp^@Mf^r0CYPJnB=XLRB7Jk8.O=olsM_8bse3
+HW_PWr`+APIfKHKs8N'!!<<'$!.+*D3<~>
+endstreamendobj8 0 obj<</LastModified(D:20241202065621-07'00')/Private 9 0 R>>endobj9 0 obj<</AIMetaData 10 0 R/AIPrivateData1 11 0 R/ContainerVersion 12/CreatorVersion 28/RoundtripStreamType 2/RoundtripVersion 24>>endobj10 0 obj<</Length 1341>>stream
+%!PS-Adobe-3.0 
+%%Creator: Adobe Illustrator(R) 24.0
+%%AI8_CreatorVersion: 28.7.3
+%%For: (David Hose) ()
+%%Title: (MSBuild.svg)
+%%CreationDate: 12/2/2024 6:56 AM
+%%Canvassize: 16383
+%%BoundingBox: 21 9 235 247
+%%HiResBoundingBox: 21.3386001586914 9.81300354003906 234.671997070313 246.200010299683
+%%DocumentProcessColors: Cyan Magenta Black
+%AI5_FileFormat 14.0
+%AI12_BuildNumber: 164
+%AI3_ColorUsage: Color
+%AI7_ImageSettings: 0
+%%RGBProcessColor: 0 0 0 ([Registration])
+%AI3_Cropmarks: 0 0 256 256
+%AI3_TemplateBox: 127.5 128.5 127.5 128.5
+%AI3_TileBox: -169.599999427795 -259.600036621094 425.600036621094 515.599999427795
+%AI3_DocumentPreview: None
+%AI5_ArtSize: 14400 14400
+%AI5_RulerUnits: 6
+%AI24_LargeCanvasScale: 1
+%AI9_ColorModel: 1
+%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
+%AI5_TargetResolution: 800
+%AI5_NumLayers: 1
+%AI17_Begin_Content_if_version_gt:24 4
+%AI10_OpenToVie: -884 713 1 0 0 0 2031 1153 18 0 0 208 179 0 0 0 1 1 0 1 1 0 1
+%AI17_Alternate_Content
+%AI9_OpenToView: -884 713 1 2031 1153 18 0 0 208 179 0 0 0 1 1 0 1 1 0 1
+%AI17_End_Versioned_Content
+%AI5_OpenViewLayers: 7
+%AI17_Begin_Content_if_version_gt:24 4
+%AI17_Alternate_Content
+%AI17_End_Versioned_Content
+%%PageOrigin:120 120
+%AI7_GridSettings: 1 2 1 2 0 0 1 0 0 1 0.5 0.5
+%AI9_Flatten: 1
+%AI12_CMSettings: 00.MS
+%%EndComments
+
+endstreamendobj11 0 obj<</Length 32762>>stream
+%AI24_ZStandard_Data(�/� XD$J�&�Dh��1�"�2�\�1�u��������S�%��L"  �    	�	�	!JvoVU2��Ce�~��z�B�+� �㟂�K��U7v���rkws9Y-�g����ې,�0�3�Jwn����>�6R��ʆe7T�s�� ��ƿù��8,�x�ò[��M��Χu�w��π�8~z����u{˗O����;�<÷�n�rʿ]h�Ƹm8s���o�V���q��P���(�}%���U�W^K��m�t�e��aY ��������+�%3����iX���i]�X�i<{5���i4�5 ��-h\�h��4�e���`��I1�|�R��8�!�0�N���&9z\G34Cr�'���q,sEZ�XV���-��a�C�-���	w�rS_EX`D������=w}v,�Q,�2,��w�=����eXV�f�eŲR}�E?zҗ���G}�U�z�s����$�4�DA,KA\�dA�Ї`�b8�dX�fx�h��j��l��.zCQG�K�OSQW���G?b8��8�#9��9�#:��:�#;r���ɐI�I�,I�<I�LI�\I��e/����LU]UV�k_�
+����:��Z��z�蚮꺮����zdC�-Y�=Y�MY�]Y�UQ5QQ�({��y��x��?����i������Z��YbY��/y���h�k�U0�M��Xv�!�{g�UŲ�,M4��M�I�Ųn�a�e����e��b�I� �S,3�r$E�C,�+��iO��Oҏ>���+��=\�z�!;���eW5�2�<��4O�,ϒ<�s<���g?�ɚ�j�fj�&j��Y��9��)������nr��lɖk��%Z��Y�%Y��X�eX��/W,I�q�)�XF�!�e��jO{��~v��c;���{Ｓ|�)G��Mn�|�"y�A�y�a�uS����=Yz%X������	r���H�#X�e���y�������°����h�#Y����������q��Uы]�f��{�C\��I��}�#+��J�hʢIM�DOESTEU�v���/K��)r2��CӋ /�r,A,�1�ݓ�Yv3��A��H�b8���K2�&�=��d9�`I�G��őEy�S��i��阒i��)��h��j��kʦ\�jW�
+��*��:��Z��z�������)��'h�%H�#(� �A�~���z֯~��G��Mo�ҏ^���{��}�j���^yUQ,�Q���F���P���Cs;�E��},=���{�l��a�-q�]�6� /�����I��aI���\��V�\I?��ؽ)z|�ei� �{ٽ9��w��d�d��-qZ��+��#Y�'��+�	�eX��X�eY��Y�eZ��Z�%7��M���$��H�4��4M�4Q35Us5W�5��O�'x��x�'y�gy��y�gz��z�'{r���(�����(��h��(�2.�a�e��%/YR%S%O�$Kr$E2$=�I~��H�#?E'XV�$�e"� �Iv\�tD�s,Gr�pG?��U1Q�K�G1C�Ȇk��i��gX�d8�c(�a�eX��e/�y�kX�Pi�o��Zh�[���֭�j �=b��� ϏQ�]�����5����vW�_3ݚ��/�V�W�S��݈�/���a7S��o�vc6 X%�(��h�q��©@{ � g�W�q�_8��t�1�f��ri�	 ߨO��ߠ<(xE��
+�c7]h��zW��o�}z� yU�	�Q���mu���Bc�����߯۾�3���]����G[ٯ�V���4�-��V=�~�Aîg���
+u� x4������&�������|�_s�ʰ�oJ%��d���z#�"���G5�s��8,�o��Zs��+�a�G�q�IK^����l���q�k^�/\�%�w���a\|���H >�_z� �߮\�;>Kd�&ٵ���k�ػ�A�5vR��A>�?�J�k��ܪR�R
+.���9-ɰ�%����fZ/��~ų�;�W��$v7f����k��(�W�n�zb߰���p���>K�g��|������ݏ#�9=S�M4I҇�i���cİ�d�&z���vc��?��Q�6�v[�\3��U����m;�V��}�W��K�� _�ڠ�]����z�|��]��V=�?�ْx99,c����[�*W���T���ϩm�\on��^�YM���9��z� '9i������M��P9{�Z�ͱ;�c	���;��㰌�&�^3��5��U��+�f�ǮA~ �m�dWsj���s���w�oW�g��
+`{o�P�f�A~|���2�Bc|{�h/�U��Y��2�#��ky����J���8,�^�5FgQϷ[��+�/�����u�qX�q|�����f����*ạ�!U�i8�e#��"m��󉗋����-�!�^9)���,��C���dٟJ��Ѥ{�(����8y;�ۖ��/�$2���>�=)�+P�R�>,/��T��`DY~0ZOg��/�!�	P8�i2���:�5�O�q�Z��wFȝ��I�.��a�?/����K��/�dᏁN1x|���>�j��a��	�����~\S��t"FX�vf � ��'E�^�e+�����r�fH��ĭ��9,�O��{��{�|#���x�D��2@�ɧ�òH��~Z��k����b����N�$u����/���Q/I	��.����%]���������p;Af�|���f��}!��@c'��e͘�v�i<�.ݘ,\��L��>�#s����jA�6�˚t�ga��*+�5[���6��m���3w�=�>��Ƀ0�����*��sX�.PJ޲Q�|=�svr"����2�d4��B��+M⤣`L�C�A�pN)��-�-'G>�,�e��L�W�5؁����?#�@��	�J`-�aA�k�D��Y2�63z��ޒcsؖ��a�cCxK���P�fYX96ׇV|ڃ?7�J�y�Na�R�|�K�:�����j;iҚ<�H:�4��C#�D�^Q:���褉�򟋀�L^9P�|������v��t}���2�KV�U���B�CXu���R�{��4\��W`�곽��f� "I��h������]PԂ�	%y���I�h�e�G�t����^��*�86��m^���V�ʱ��M�5鶎�{l��VcG�yG ������F2:-�/�l7
+�O�:�e����"�fV�S�<�g�H��$N����̚��`,�sR�$^>1PB�*N:u�x�B�}�;�(i'�Ψ����z�O�hXv���/gĥ��r	�j�(y��<��9�~�iC�ކ<��yڐ����|��6�oyfQ��Y��Y�̎&��4����p������$W'�4/�n�ִ��(�?�� �yE�q�{kT�߹���L�1�Ƿ�i:�m��f��Q_�`��iS���z�ܺ�}�>ͩ����T{���+ ���b�eף�/�q�w��R�ߧy�Fy��Z���ri������@�f?��uW�g����r�Fy���U}y%�z��س����<���l�cϦ�5M�? \�ڀ��~N}5����j����(�˷���m��R�-�������F����n9��4��T��5
+>y6��P�+�e�������B�^���8�}L׋��{�o�Z(���K�-ࣶ!��yR�M򌰪�)�r�1Z�N��h�eǱ{�p������*٭�ʥ�Ӽ�3�;��v����[>G���|���ͳY��o�ͤ꿉� x���,�p�J���f�� �Տi��_����7�nZ����}Nɗ�r7�v_ٽ=5�����u����� �{��eՓ�e���l85k�~i�+�*���|�lW[�^���c�v��5pc��dX�a��ܘ��[{����<��5�ɰ���<k���k�m�y���]�v��)Mv5�pmM�+ 4[{����_�ڷ�골�.
+��C�op�.��\8M����p����h���Z}���_�mgծF�;���Կ��m5�?�y�c�3�����p
+���^^yN�8R?���Y�5a�U� ��ٚkv�[�� �n;
+��<����^�fy�̧�{�ő�U�vOs�:��ô��d��ߵĪ��/�����	>��"U�f  ��ws4�.@�*GS$G���F��'w R6 )۽]��t˵!  ���_��~j��Y�������\�v�o�Pޖ㖀�]�J��Xt�v_���۔�;ˇ��:��}�7�g���Y�[J�;d4�O���s�����h�h�fZ/�������l�*�~�,�,�^����5�y9���p����_��-�����ӟT�/}��Z�v���U���ӽ��F��7�W�/��f4M�=~�`[�?�Қy9;�|�N�r.����^�A8v=�~�xFʹ=�3����y��>�N#��Q��4F�:g�Q?�-�z����A��@��"O�����O���Eo�o�Χ�>틇��3��aծf��6�^��V�Z�c�5�4�Q�$y�2,�N��������U�p}{>��H�L���v*�����_ӭ9��g��mk_���5�8�)��R�Y���E���S?S��h�߶��ܻ�i�w�`u�Ef�v;�-������C���e���`�~��ۿ�=9��9����|�3����=x���ݚ������w�g��=^��Ǯ߲��?���r���Z���aXj��e��+_��P.] ��8�#���
+�y �g��U��Q.+s$J����S��9��=��i=��;$<	ϫb�p�}���[�����*.���D�0]1�) ����D�6�S@�{r[,��t����?�ʞ�5���$
+o�|�%
+߾$
+_�Z�F�������O��*����
+�ߪ��焪بjb������3�ți;f�P}�zga���m�����#�$��Gܐ��>}^���it�P���}j']� K�ă���S�@d�0�;��.R"
+�@�"ŽK�R���MIkO��y�Fgٟ���Y��s��pG�P��?@��n� ��@(���8�p��^�N��@L+� @��2L�� @L���t�-!���,0V+;�_V�����;�/(�r�Nv�K"�[T%�=)Y\"�w���{r�&w�������c4�V�uU����
+kcBZ{����z��12�����0�A"��D���v\�q(����B�38&&o#*�(�qX6���ᥠE�pAoI�$
+�zHJ$�uiIq���Er�\$����nOE�3�79݀��U%�*i�i�R�#��QK�B��#�m~�cٟ��?�s/]8/W����%�s���-<"�d�ik�nځq���*8� }�@p��
+�a��ycN�t<Dt
+�����/��[]Pl���'�Şܲ��t��[T&o�]�����~��Ig!�uɪK_�v%Qx�y����]t
+Zs҂$
+O���˟��u�U��"4"*���PT�lt��Z�Q�UR����Ŷ'�lt��pM,%�6�&��,�t!)�j[��H��c�]aٖ	+��"=�RB�?;bB�!lK�8���Y��o1E���ΐ6Wp ��{5���g��C�C�5(�B�Jr�q#0���F��4����;�p���JdA�ʽnz�"F��_j>�,��,�����cKY�nۼ%��b ,��[rl��c�̠�:�hl�G��2$��虉|~=�<��9��9/i؁���T(��g�0�SqZ!��q�4u	��KS�KS��2�KW"t$z�D�W�B"QH��=�c]j�R;�, )�aٍ Q�$����5��\cp��1��k蠋ԺH���N��9,�Z����;\�=jC���ò����֞�)�p)R�w,�sI7�>/r6:�e���� ˞C�d�P;�C �9�!���H?���#j�	��=���5�����~�ڴ�֦�xD����S{F;����8�2@��n�!Q���(� �q 
+xo ��2 ��t
+��a�j'�e"@�'D1-N�!01�)��� AL˻,���"���b�F��岠��Y`��������C��_]��/x�'w�-�֜pXV��+�P�aY'3A�c`]P:��%B;�4�,�� B�kr;$%r)R�����y�j8���(��da��/N��dy����m���E��K�+� xi��n�@�+���¡�(��U���IǺ�i�q4t�O��?��%�>51�N:�v�X��BkN:�_}	,km�I�&������N��i���1�t	��}�&�j�(��z�sXF��I��̉M�U�p �ζy%6��t��q��?��q�_}hz6��qp�d�q뤵֮"��D�\�d�PkNX*��L:��$�?�1|Nl&�#w&G9z�hǍ_�_F)db�Q�`sX�,6�`�˶�R�^��lK׎P�Kl�G^%�ާ$��4��ؑ�.{� ��Fe$Ԏ�#�����8H�&)0؇ģ��P�,^ܔ�&@z����<8pZ�Ѻ��'>��� }�tO)�V�A?,7�/k�G�0nbt�VD@�a6���K��y$T�F�t
+�0�@P�����3�j�V��茓D ��#��H���w@�w�h��&
+��$�i;��a�+�=ʏ����?��M;K�H,����l�\5]�Wb\�M�@fͷiU8�@~�AK��AҴ ��$|@7D����p3�̀epb��4:��a�ʟ���g�u`��QFU/��'Ȧ[E�X��W��c�[�PC�
+=0�-��a��xy�x�]&���U2/XJ��*�L�0RNI���0�#�9���p�Q������vx�|ՐM�#�W�7���=���ܒ�l�w�x�&ʈ��A욱	|��`)��3���a���@(
+\� ������fx�.$�ZeG���(
+��v�S�
+5�e��-�c�=�DT ۲s
+%�	��3�(�4 �rXvе�P�R��ؖ��AZ��Z'X���l��x��ˁ���@��������\�%�%2�����ÉΤ�8,[�@S-I��"Z\I���S�YK�ò
+I��6-�C,�w'��+�7Tт���� ��T���)H�!iA�&���,�$�dp'�w�H�?M
+!%����@��!>����P�8&n��a��S��=*ߓ��:d6�e�H���@\D@1A$Up�D(%�i�<���ǀ�N��9,��� Bc��g ԥ��%�δ�
+�� =5e���<6��ll�+�Fࡺm�Pݶ��nCXX9��.	�����~@
+������^`s���F�As'@�k��LVm��6���E$R|��[rl`3����\@����V%m�d&Hɬ�@b������9|@���»[�6B�pX��-V�`v��ZcB��MNL���@*ş�����V�t�|�X��mfŪ �3���T��N�uX��@���h�cc�(�²!�w(���(Ū�*��+�	���U����[��48K�(1�r�?߼�8,{x�Z�Z�u��C��B�.U�|��a�2��(�|ح�W����SZ����O��\M?����$��.S>M7���/�����K��a�&��$���	z.��	�m��O��J���g#��Vb9,SX }NR�C���I�x;�$>-��<�O W���vE�GGX�[�	a�Ӆ�χ��<�Zq�m��Ćq�U�F���﨎�j��F�s�XY��^Pv�s�����Ri>�wU���G��=�e��WC�z��2�9,{�8,�G���e��U<!�@�@����_%�AVO�����a��Z�o��/�P�_(	ϷX�*[Ă���9[H����%V��f.�.��G�a�'�8,S�)�8���aY�ғ�òK�q�isl��fl�Ʊ����&���
+!�!`l��qX��]�M�h�6͙Q���1IX����nX�:ߡ��:Mr*���?>���I7�6�+463n'��ё`�GЪ��aY	erד����H��
+�e'Y�JkS�SK+R��(�<�9u�e���&��=T��8�c��0cSx��́6[��pl�Ʊ�T��&ݖQ|�ͳ��G�;6�Cu[�Cu#����m������Q�]oI:��S�zm _�������%@�B⤣Di�sX�L�M,�oqT�a�� =�$+Xh�҇Qt�a��t�V��B��Qm�+.�"T�,�z���9J\>���$��s����\+��@l����=���2��L���	�M*��!���lܗ�P8�b�)�^9,�ПT��4ZN���R9hv����,uV8�8	F��깇��[2Y��?8DG.�i�v�u
++o�|7��[� Ri9�?z��2�Ł��i	=T�aOh'��e��8��E2�)(�s��!q}Qo�H��2���q�^Q�F	4�[��T���Ču�����"T1}.��ZM�Z�?02WHkG<�nq0Y��s���G����@�s�$m��T�@��D(�ł���T:ȁQb�������&���iE����k���ذ��Xem�uQ��tU:���&R�	w�5�<����J��ӄ�[ރ�S���X\$�e���9Y��#�A�s��n�����#�G�M;3��z$N�ZU$lv��TD�~Ό���<X%vU0���s�؋d T�!����&����F��?Z(l-�E�Cu衎���0	��A��D<�����D��*����?�uN@&-ge-���$@H��?&O�dQR�$|(؂p����|�/�YQPp��E�~�@�S^爷�r� ���ఱ?�E&��Ƈ�32�
+�ӂT9�&T��� ��F��6V�my�/MR�gjE��GzM8����Ht�r�v|˶���qB@���i�2�T	:z���'��}��~�����������A�='��Tu���\�}	p�=.��f��D�|��oQ��Q�0C��cR <ӫVen���.��0"+���`�+�Zy�E�#�8�ԃ�F��Þ[ǅ*+�䔰��=Po˪îX�D�W���u��i��+o1�˃�*����pX��y#N��#8�����'�� �����O	3�p��� �L��c��aZφC�H�؈�DcS$�*)��R`y���u}w�	Ra/�ҫ��UGf�]k]ל���"��o�S�)��/0�8�8���ÀsX��(�x|�O�l��7A���~\�U�V��.�09-��3�U� �!�����g��F��@g�&��\�x�ʢ���FWl���m�����y�~b�w&u}���3���|Z�	�w�X�Pќ.�ku�-ʪpb[�eos?F{�	�_�q��,��3}^j````�����@COuCO�H��3�u�!%X��|>����_��/|�n� ́PL��hഈBk�p��m%B;����F��� !m���r��0(^�
+��LZ�͢�'�
+'a�)��$�W��	Ȯ;���LeG�Q!�mi�}
+��-��D��Ķ�,�Q�#��J��&�&|�vdG��rX֖�ɋTw5[� ;Ҟ���#|���CP26��aوh�Qx
+},�C��-�P��2�ò��]�`sXF7*��v��UsFa�@Y0V"�*��"�����[�Ā2.p��J��+�zD~�� eU$��6>���/�O?�� y���L�����F#��v/M�<��.�"N�(|*. �pI�<Qg�)N��QK�B�4u)R��)�C�
+�B�ĕU�&C��̌ @�  ��f����?.(NBL.0$,$�F��8 ��aRF��S�Av� W�9T����9m���4v3�H��h-r�v[7 �����-����k%�Q�1�K�%;�̀6g�!*�K"1���JO�̄
+/sm��1g�s��Fb�>Fg�^�20tE.�B5�>G�5��P.�[3�4�dճ������I$����s:##i]�L��� ��l�P��#߃���������V%q6�fs��������^�i������_g��.A�ĕB��[�H��/���P�Բ�xe�Z	V�t�*�+h:�j�5#��%o18q5X|i��8��,>5�YXqE�g��
+ǉg��9P1�֩����wq�t�tM���EѼ�Ή+�`^��)����ȬkI��t�K��7�WM)�j7�����eq�
+top����0=����D���J�w�����-#�@4��-l�x�$v��PE��%Oꥏ�.脸�������yK�ٟNb2Þ�����X/3r����ޅ�Z �����3�#ɛg`�G�q��z�3��
+&�Q�*����g@���Ωo� X,qP3���C����*�c����j�ѩ�k�^���p�Z�	q�{.�k��u��;�J�EPFjB��$��"JΫ ���$LT*V���U�*�ߥ����6�>Ak�$]NB��#�B�p�$���u��[c9��������\�@s����p\��ڦtW�Ee��Mw d/2�z����d7'�۽[�n-��@����'Ӄ^�P�e�D�	�t ��Ж]�PS>u��(/�ŷ��l�^q��-�,����A�/�0.益�[��גiI>ݰ/8����*mJ�$
+Z�QC�0�6%��.tl��QTLi�
+�"�A����p����^e6~�M� �5no�/9���cɛ�����\�n��i��
+F�I���62=�ia:�W/s�ݰ��dl��H�ҥ�ⴲ%q�������e�OR`<�lD����c�g�i= �ʍU%���z�K&��@
+folS�7d�����%�^���h�PC�&�HS�h^<$䷧����M;y�U�5%g�W��m,З6�)3�:v��t�*v�฼�?��<͑/�v���~,[�����o��ƹ=\�Z�d�I�npkȊ����M?yCc��*�M��y�>��޳yc�h��Έ�[��{��W�/*��b[S����{�GŌR�з��_��P�3*���o��{]R�%��Ի�&�vTl�S��Hq4i�F݉L�#��C���F�n��4j�	��[����ӄP�"�`\a�pp	�	N�p��P������RI��m:L�=�/}�Uh�P��o}Ͽ%�IJGEW�V�,��k��m�N���Z��-���"��!bD8��,z?k�Y�!�=��G�o�ڂUd�H���*rέ��ܕ��R��l��ω�n���
+%�b}�
+�݊�|��ZC�j�*{NÆ��C�/��NOU��<���.`�f�"�K=�M�pN��:�k��wA�,�@oRb�<�W��x ��S���+X�۩	X��/�&]Q�?'tk�%��E��,R����Y�q�q�eo��ۍ�����Ν�6Z�\��*`�u;�cG��#[UJ��ck�`� [�(5�&R��z1��ōuF�s�pݞ�@�|EܭNӘ��8���	"eXhZ�H���Eu�XT�	h���d=U�Re��_�H�7 @5{Z076UH,2�����T���tm��d#����JW1�.~�OC�&���e����ٺ��>���lFO��ӒLB�"&6�xV�W�X~��Lu�z���,�[��yf�h���W-s#7�}�E����bG8x;�ʝg&�ɺ��fv�r*	�z��U��OD�Y��X�F���_�@��/e��22��O�72;�,og��6z��'R˧�"{U�h,P6��ȗ�P-**Aֵ��Z��c ֶK��1�Y�T��r���>
+����x�{�J��?Ju:OmUУA(�����v�h`JW�������(�,�_��Wf.i|�]���(������k��������߮��8@�@	La_9q �l�U ����0d��^N���.�X��T��������� �U7����h�p��K�(�P��Ġ�)ap�'��
+o������)xC̀ qM�H�;��N ����XA�>�mDъjj��G�7�.�)	�A8�8��^���a��W�GV�0j����_���7��� $�NP}�8��#��2�$ޖ��n����.&�p��~"G�:�s�rM��-�����r���p�z�b+�~�8���>N[hxb���b6�j�,�$�&�k:�n�x���TYB0�.dx�<�HZ1��-�^�L
+4�����<�=���?{�.$���X����ᰕI������m>�3��]]�2ض���/ӎ��6����%��I�%[�8w��3��k�B�v1W��ds`+��qƏ�ޯN�i�O6��9!w�.�a���șx�1���[�a�_w�
+��׭Fؙ����++��+r�`���N`�C^"0k����a�K0,��01�&w�s�`��2����q��k]�a�+��-���IJ��y�D���k��a�XRO����[i5W�]�m��աՊ�Z!�S1�
+�?C�_�C>����j����s�0�%�բ��0䕆�y�+�3@܆��-�V?y@��_9Oc��C�V7���Z���� �c���nJ��H�a��V����g[]4�b'`��:M0�Lpp���F��b�7%
+����Œ}���xe�X�N�fWp�����ҏ�*h)�Iq����5��8�S�Wx��?�W�W��-"�q���@>l���QHE�>x���y�QZ�<gi��'��L�@O�o�7��;"E��M��k}�7`���N��|�]椢�r���i��� ^�P�� /V`$֒<�4��\d����H�<��mg.>%���tƺ�Hg]NK��	#�.�N`@���L�(_�r�Z!�⪹hR��r�q'�"cҼ����u���9���e���#C�AA p�N<���N��e�Ǔ�P't�'�5U.?ɾ.�c�f��K�b|��I�͙g&|��E+���ȧ�}y�/�.�Et` �͊.�����tۿ-v�tŗ� �6�Z��a �ʏ��H����&��U�5:�X[��l ��>uv]�[l�9�C���~m-���b��#��f;���t���?����a sJV%��+��rRbmC�Tl�@8������R�+lc����}Jܜ�M�n�CQp$>�w�A�ر�Ԙ� ��a��Ν��w�t6e�A��s�۰}3�傝v�8��g�����]];W7ƙ�Q��'F�Xim�����1TP�W��[T5���:��dR�H0����q�|��9�ً�=g�� m4�H��o��{��j��'+�x��=CL+���i�'����ਗ਼��k���GpPH3�E�<T4u�
+��9Z��.VJ7�@,<v�0�&k�%��;>�L��rM�"�$�L�0~�ڟ�e7�jqc�g^�G���!u�/�퉌�]#a�~,n�-G�m���)�sY���#�K.�����ߢh뾗|sz/�Z�D�T)$�,ͅ��ㅕ�t��Q5����y�\K���"%��߂
+�=B	�2�2�@�޷M#�0�BG��0]��3JZ��u������t��ɿ�p>r��x���i�v�+Pn��D���T��E�?�;�Gb0�u�r|����@��c"�i������wbkL�xr��k�0H��w�GA`���A��&��fh:�9�<�T��L�X�������%���:v�|�� c�u��قgg�l�-Oօ�}�<���rZͣh�ߊz�)���h ��|��/�P���������9a�Ղ������7G)~4<�έlP���6�!�:5�IM!G��a�O 5 T�X�[���]]�.P�UJ�ڑ�8�Cc���X��[���:A-�-����w���r���kH��3�ȄxM�TUz��W�ͨ´'|rWen�A�vq�υ��q�C>|����i��N��5�� GE�\ɆeO�����)��u�h��M}�2�7qf�_�JW$��H��9�< �~��D;�ջ�-�p2�&�ı,%j�V��f�Y�Y+N,�o�d�I7�Y����_X%@�7֫�l��Z��q��ذ��3�V��"P�zĬ@�V����@U2�vy��@!����x��
+&�WſSe�q��zG�hzk%��G�#q�ţS�K�����S���͓a��N�GXw)%&C4���E ��)��M9��%HNS�o(&�\G�Z��\l�k���O��<Bb�xT�c���F�U];����deAC}�[��Z��Z��U$){6|�nD��1I:�Zi����G��*ƪܚ�hQVx9tg/G�0�$�@&-�9I =�q�)�7�%.��#�L�� vP$\z@᫻R��]����rb&����.���F�d���{���"5[��o��a]�C`o���>'�^�b2+p���
+��c����H�i��ɕ_Y��׊]������-l���K�ZJ��w��:�p��=��u�ҖB;|o;�	nΔD�'{g˥�3��+F�N3Ǻ������[0ose�k�>��P>�`����`/��mX��`��R�J�l��:^0]vH��`���݂E���ϣ��`8/دB�J,�+�e'%'��uο0�؂����0�^V��`(��k�BB\����d�?��a5���Ĵ��l0�=߃ K��C���JW��layx��aWpGϿ9BI7���f���D]fm���EO��y*Zq̓�dN�\��/�E)0�ϵl�S����N���!�r��ك��;�e7t�#�W݁�f }�Ϡu[v�<���p^�.m���"a/�H]&��O���@�-9:�A@�U���H�l�s�p��h?��H{�M4mR���u����5&��M�'�;h��YĤ��^J��Wi��?�*4�k���j����Ji��#ljL��}��,�`�S
+�h����	���v%X �t���-[��vu��?\i�ù��{y-VR7v��@5��Aw�u���3��f�g�,�a~�YL���=�a�xҶ�20PL�rS�|/�g<��k�}��;c0���\%�RZP�{�/ϻ���/b����;I5��f�I��Z���G�;�x�l�,���v�BOxr2�y�8H�������ڇ`%�*�N���f�l �nLKCc��T������Ϣs9ˀ{{\��P� C�Io�&�o�����d[�����{��5�I��!�X9�H�Ԣ/�P/�3a�������\%@6	~>��J���/=���#�#i���P�*�z䤴|���?�9�+�������Z�=���z,�A����y�����/�}*�Y4j�j���lAn���M�Z�G���å�X�Y��%��K1�p�gR �I�>��4��"���Ĥ�eu?�l�=hزs���#MFd�¢	�W��\�`��B74�F����JD���#l�^��ih(��K�t�|mѱ1 ��b���|�Bx�6�{M
+ͭ���]A+��W�@@��s00�mx�K�x��KI&v�W��{����5���T
+�����v���)hт���rD�W���B,a�~���-B�TPGt��'3?���8�sY�MBWU'���+��R��OYl~��"�X����	Z`��G������TB#�F�oB�K���s�q�w���(�-c^�c>;��4#(��Gv��Z5c��Ox�X��4Q�E(�b���Ѻ���Y�����a!�S�D��F}K�������r.�$����ٸ�������NS���_�Kͽ�k'�k��(�&ہ�n��`DS{>�N[�PL�t=���U�DFPƝg����m�P��g2����0I��G\��"�u�
+q
+*V��f]�-V�#��|8��me_�q�٥[�Y2	�����Nw_�r�F��$P�$W�iY�P�����&���	���&��r���7m	MP��'L)s.!''��%�&-J���p��I��D�����l���f��h�nI�L��	,��7��9!%rmQ�VL�7��Lv��y�/����-���4d��`�(�Q�1l��oIg�g�c��g^�3�8�PZ�ĺ�`t_�0�y�8��>?�
+%^4�O��q<�D������I1>�'M̫�M�>1��qW��<��9޾NE8�0�F\���]�����;�ѣ���X�F�B���߾�_sm����Qɠ���������%��R�ij�6pӘZ�B
+�%��r���hL�����ES�%W����B����R?�1+����i~�l�j��\�����CO�F] ���x��	[I�׎icqaJ�\�T���3`q	S��y@�p@ ��u�.�8��\�^xnƴs�I��g�
+'r�$��E�n��"�^�F�E�O���0�Y��^Lt4�Y����t�PG��Ef���}�)-)���Aŷ���~m�D%�� �^���jR{yG��!� �쀹!��aG��(�z�#�����AdNP�e�N�\۴Ý8٘>��@;/����l�Ž�E�S����R��C�&�-']{R#DK�sw�����7�A��ΰ�%��,H�Z�E~����gi�M<UW�n�l��?������;��䔂�Fډٓ�Q��E7 Z��&7B&�ɢ�m,�]�pH�]�BH�~p�,���G��*.�ޝJ ��ʀ��b��ꑿ^.y;�[L��I��{��
+�]y����2
+*����~�?t �@������'��\n�:�iF��dP3H��'�#b*2�wI|����j�tq
+��U{�D�03�b�<b��[�	<���Wtg-bU"���-m�&��?U�9�2=�P�u�|�)���i���Y������!�)qef��`��k���0�L?B�Lcq/u�L�_ֆZQ�(�1L��c��i�$�1��i�f�XЊ񠔬�Z���)�A"�˶� C��Y�R���S^��L��y5OC�l�"��Wsʖ��CZݙ(ʠӯm)c�-
+.t��:�x�ݯ����c�h�X.p�Cf�@H��p��0�A�_�X��G�~�9���d��O(��S�����D���1�*K��b�opu25�\}e���z�4_�M~<������8׉B��g<��^��EY���V�	�Ld��w6贝D�xѨ�� ���1��jƤ�N����=҂WXf�˓/ڴ.WO��"��N�޲�E�qJ�.E���3��g��I2l@�/Z����Ր�:��m�;۵2����L�#�9/��q��w��$M�h)6^t�*7�����8�E�%d2z�+`��Fa}߆�p�Ew��|���C��N!^�,~#O2���Ec� e4V*����h5��H�~�y����c�.���Xb�����>�
+h=L!T��3�;����O���5΢]7*�"���stB�A>v��g�(�EK��fm�u���p���2Zӟό����9��Ffgm�DZ#w�v�	�*8�{�xU~d�����)rp���� �ѕwf��Ep�z���T��A�*L���?wP?�~���Yl��SXU���q��_{V�$0��A���	hN�6FKr>�B�C͗��k�B�[�M~�%;��sOU=g:1^�Ɲ3�xv�؛�qpW)4�y���9}lLu���2�K���/�h�tg��w���^�ה��?y�X����I���Ç0����6vM쑩h�8�A��r1��ɰ��+	Gm�+��;:�E��b�f�q{�E�m(��4]W&�G7����[K����R=�����,(�~�=����xT�d�]�U$G
+˞
+����%BRv�7s�k7(MCfm�L��O�h��'(�d(��>4Z�Kfύf��%W�TZ����_B*�Y���d����F;�=����ޓ���\��Mi�3�h��vר>Đ1�ot�� =߄U���i��z��һ�W sL���'��bOϿ`������[3Yg5%_��������V��B�h���#͘&��wI���� 7��8��Q+$����s5K�rs4Am���x֧�g��
+�9��ad���G*�fm>�29v~5�1��s4W��a�b�5S��~M/em:Y#� �9���%����זv�X+-P�M���\�������� ����B��֫�˞���5�������@r?�n� �.���\��m�w ��ԵE�Fu܄�{N�Sۗ�����lV���1�-Ԝ95��;���:���j���e��9������+S�U(��3��;�Y�&��M�Ů�X��㸪MFP<:*f	$.�Ppآ.V����ܟ�gP>�&H�W���
+���	@^0J���y��$�E8A��!#�V6��Ր�O@#͒�~)qB�"`T�@@����2�D�SjH��K^L�H|e�[�Y�����$D��@�z\T}l��6~��TX�	";�[��J}j��(t��?���V�<G�أ����f� R�:� ���i�=MU:�hE��pB�`�m��3�zu)�Y��I��=���B0v8�v�wJf�g8`��G=�Y���x�C	9C�!է�m�"y�$�b>�@�*
+���~�͡��!�2?��+�޾������|�_�q73��C�K7"s��Z��}3�7X�a�w�d��0Բk6��S�3p�U�(��4]	��^78/\ڄ�{>���o.w^A2����*�0���g.����1��O�^Z�QK��ɏz�/Ѣ$^C_�L�ǰ���ȃG�O�j��Ol����D��~��^��\�^E�<&�H��৲WRO8�Y��@���4�[��(���aLw�F����U�)��K�FY�[1`���B�$��@�P5պsN��{��J���Ƴ�v**�%]K�`��z7�Y��m��Ň躁�;%Q�=Ϊ��.�R�c� ,��	�wî� �ͩ�������9��<Yo��Y��yC�/��;���<��h�t�%�)�R+ݍ���$A�.���Q.Tk�;��C��>�$�~r-�f�낁�sN9������� f�`% �7?��6�����y'�zJ���,"掀,��m	�w ���2G��鸡�Z�B?��� rC�i�"�4_t���/BS�z���C
+���ew��2܌p��r�lY���hq�i����O!j�N�֐��0��� Q��6Ϩ���wRO��np
+��H/ڜy91�_^A:fI^�ϳ�V���O��� �v�-����m�;4��
+�i��p[}l��l�����[M�4T=��Plz���hj��x���#W�����²{�����*0���kTB��>�'6\Wd�0/P��4�ȠM����2{�W6Q�҉F�kO�a���(dPe�ㄡ�~d]��cJ�D��_n~C�|Oh���,$�L�qCi�I�o��*\������
+V= ��>*%�AFEԗ�\ '�\�?�S�k�%�>�7Yu+J�kg�+9����C�tлeF �1A[HELN��	Ϭ/��۱�t�bTL��e֙*�v���T�ki�ԅ����<79��|��sV�^i���;H#� �b>c:F�Ϯ�^�_��8�a��z���7�}�5R����%� �J�R	����	(n���@8+͜�,�T��wf�BsA8,&?��,��o�J��*�5\x�ߙ�~ f$G7��_Ւ�]�B9�(lqh�UeCznI��H��!�|[��:B3I��0�f>\��u��J
+:8r�3Dz�}�?�+g�`'b������Qz��>�VaDH�v�����-h�R%L��U|�	o ����
+�����&���O��� �99J��u �X/����ዕm��y��҉��F�x)�;a�\�<� �V��*��5��7��ښ�Ag�l��{�x�,P����j�j��L]�(��w�K�m�wIF5!��9|z�܇�[$򆶁@�O��K��AS�"�k
+��ȥV%C��a��N W�*��< &�h��(��$��`���B�B!�ҁ�B����N�������jY�j9���iϮ3:��#~ښ��:�����v�@t��,T�B���<�R��J5d�z�y��$�dQI`"s ���ƽ�
+m�ܓ��׳��䈢(12yD�	?d��$������3��(��ːyp��n �",��x�d��%� ��Cb$O�l�FV�P)D�ظͦF!�T;#'BL�s0�]���qV0$O�M�>�H�\���O�]������v�Cb�@��q%�;k��)ww"����p��1F���=�[�GU�q]%2��4��"�oY��
+`�R��l֕'x��H��X�
+��h�K�(�P��M�	�\r����U�,�^��;3ա����XQ��c�k�8._�>	&b��ϣ$�d�M����$�X�C���,�i�3_h��P��zi#�NIk�S�t��ӆ� ������^J�T�
+JH�C���8�=
+���H�l����0�Iz[�|d���������7�Q�u ��H�����m�|E[T�� �+h
+�&�"!�!z��'@ދ{E�.�i��4���䟥	�I�)�AU�FΌf
+�@R�O{���Yo�F}`�d�Yf>�u�]u�g�#��ȌJw�R��t��Iϊϰ���zŲ�(Ù�����M��k��D�o6�v{�r�9�$jA���*�"ձ�+��'[!�ua�^��k'�m��2�[s-����1�v����Q.)�|T��׀�b��N�CQ���j���w��a�c󔦷���Ӿ?rg������ek��Y�WήeC����m��]��J���|��y��! b4Π}�������X^y�y�?�ɟ/ʑ`�0`>����5�8��B�/
+��!���M~�m�~K/�.H�1�h`y��?�9���V�z�N�P�=J���TY2�/�p^��g�<�OG`�
+G[Կ�^��u�.�V���79��}J������٦#���!|j\�3;�j��J���E��aP�'������$��ok̶_b������_��iO��
+�v�N3�V��dW� !,���m�������p߭�TS�B�� 9�	�m�,���<m0���)�!O&KXH% �?P�:�U#V��V�����?��IX>�5��E�p�P8|?Q�71aL�E�<� �o�註�i�� y
+ܵ���>�+Ht����'���ݱ{�`Qڒt�+PT��Z��Ԫ
+|���A"K��醩sfY k� ��F\C@Ͼ�d�U��F�%3�]�(S�;��U����wk���CV�n#,�^s_!�v~e���~OV�:�A�Rf��\���w�s��H=ׂ�ܠד�1gP�[����<쀋����-�^�����SHC�H��j�!��L%DG|�8D��{g��t��I޷"|�m`�=$gg��� �O�m���d
+�c�9*�Zw�$�d*pڴEr���	�,ЯѵkVdJn�+��s�jwˇў�,�J&�i�v�lB����d�����	�?��Kg�[P����+_��<:��d��|T[!�����^ek�j�_��O�@O�cX��c�H�M�B� �.(���$N�[0��Ch��%K��ls�p(�H����N����NdvXs(̞5r(�&�,�Ҡ�����k��3��|��z�|pN}Z�	_ ��M�_��q���5�Te9Λ܄ �U��7���\qلp�Hb��z1y3K�(P�'8��_���P�s�M4 	\/#GH�b�A��d-�.N�O��4�:���t 3��:�=�=t[�Q�.�S���#�	o]�S�'�2�;2W��T�o��X�I��xȯz?�3�� 6t�lI&����ђ|oJn#3	ޗ�q�r�m,��su{����Z���S��</�
+���jJ�����e�1u���b�����2'wd�B�c&4 T�_k��R�}�.�]�z�F�����ԥ�3 ���wE|L�� L��xޅ���!�R����6]"���cYO8 ͆r��S���-�h?�d��9i��u8�fv�,�tΰ��5|z�mn�0+�gX1'���%�8�@��<Jl�X'��,%�w�uR8^��z[�J|����F/���X��'�����HĞ��c��#*
+ku^��g-�����(�e�,�@W-�aUlo�ō����t��m� ��3'�T"�(6�%u�����ٛ�U��t4�b2�����G" = �BK/j��껙*�#����Hu������r��U���
+}b�}5u���o��6yD��0Z�%��ZuK��m
+wb���Q�V�����a�H���b�F�������"������<�{�Lr�i$q��͒:��ުӓW�����dEM�"���J2}��)4k�07����x. ���x��O���U�^�]%�j<sLM�3��L_rWf�UAf������ߒەC- =�,�!p�X<G����5��'*!F��sU�B��)C�%�䡓ŋ->�*�諳���N|.�c��u���P��Ubid@���D��b,pSbp��n��?�<؇%,kБ��*�+F����B�t	������:���"U1�~�:c����g�{��p��q��
+��L���D����"(�T�P�E0?��ke����H{~��*m���s[�w�H�7ǥ����!�c��ԓj�C��P	W��[.�%��u<,����R@�mɥY4�0��I���n'�vnr�F�嵢����4����]��X��&�`@�}���2�s�|�` Ʀ�	~��H1���LF�E2?�0��$�{�������s����]��`bV5��5���k[�ܲp,�7���$`{㵔���J`�E�6����-�#�qC�t��di���Uـ����`��̛����p�Ml�ʷ���8���h`�G�:K>�^#�{���أ��l��!��EE��"a�gM���oW»2bg�qDx.=�����c'9W���Vg��"��?VF�E��j���AGO����d���+0GYG9ڠ��\J�}�n�pX0�����L�J˪�&�0�`A�BL���2��,�>(�j�%rF�c� �E�S@��А:.�Z���x����Y�)���� ��r���Z��������� g�S���I�X�G(��R��w������yR�_̓)��9��t���]��޵��)r�p����^޹פ����u���;zK�[��g�Ԍ����'��G��^ŷ;�|��S��eq����!�Yڙ+	��vZ���������-���G+��[����"�'�*���KWvIN�àd$����\��h���Ų�V�u
+���m�a��Mkz0�_@�~����F'd\XW���1h3�+'��.�#�6J/�O7[Ca�skA��A����KZ��8�9=x5���T�$H�{3�#��%"Y"�7 Y1t O�}#�l��ʍ��]+��6.5��J��"�+�ӗܹ�v=��k֔D����ܣ�M�To�ZI�hd ������@¥��H�H��� ���M1�*UD:WN��/�r�lm�i#��(m�-hT;�Q��K���I��=�� ��������$"X����'1�i�MM�����:�J�R����P���#K4R��TKL�F�b��t(f<�f6�����;��Dn�>6+�9�n��#�i�'��͊�j��U[��₷�7n&$,��y�»Uκ�
+`rԡ�5~��P�aE*es����Y��nȩ�(i�������-{𾻂�J+���8�"�aN���z�K����-}���;cT6����e1+�S+��J�8u����h�u`M�tp� ������"�$
+���@p˘2�����|�!��ћ��i���}(�� �sH1r�+ M{j�
+I�L�#�9H�2�{�Ƥ^������$� ���Ȯ R{����(;��&�o�ߏ�>ŀ�����,�3Rk��Ķ���	w&���zZ��wT��cϹ�`6ޑ�(WH����\�=u����d̗�u||�ŭ�3r�k�<ӷkz%8���s�VÕ5�	��L�{Q�%G�[T�,����z'&�v������-�N�T~�y��	; �M?�8 0��k���ŏY[�P�)�*����%����J;!t�ܲ/��CIH�h�*�k����gb����i.�%��g���U��sͲ ^���u��X�����A#i8w��	�K2\څ��l��%�}���r���[�������2�sxб
+�`�{emvH"��ߩ=J�-�E�f�)����lg��T��k��zѵ|��`8h`�_�@ܯ�������L&xlO�|��#Y����9|8�����6��>�1����ڂǹW�����]�n�g�I�U�Y�Z�6^����$ �%�� ��}�T����H�`$%����`���b�Z��ת�͕5�'2�=�]͍�e�ƤK��o�4�����-���$�"-�y��J��Q>c\+� �S}��|��[�]B��; :p��U�6�j�x�
+7�m��͏b�N1;��<�l�oR�Ш���������@�U:ـ�����<�7��-���E;]7<>kI����	U��q�v`��]��0�[}sf%�7ӵê{������zW3���Hs`	r���?h��<������֎����5)��I�����Y.��8T��75��N���AtD��h�@��q>]l�PO�P��?�7�IcG������
+�2# ء�1�ΛCe��{_�������3�1�F��n��|���dV@!��R��D��$t���r�1ͅ/յ?c��W�-oO���n��Cmu�)��mGW�J���"�P'�l&��o���Jq�;#��!~z�Ȓ�S�n�*���$q�<�w��K|��1�?�O�&-�I?����ި����h]+W����{��ǻ�2?�\(R6�0+)�(��z���74C�셞h#�S�\i�;R�>��땿�y���J�t�U�{�~����O*�����OeK�Πt�P{u�"͞JR"�
+	˂BL����~s5t��Tf�#����D�������0r�+n�S�|�ȁ�V�Ij��������4{偂�0D;�*w���5F�|��0�;`��\/Ð�\'9��KS1�KX��|L�v�!=�}�L�Xb�O�&���:D���3������2�:��u�v5��Nf�JD�����x����	�Υ*/u�J}�/�$L����pW�s��}	������{�$�7�!�,����K��2�_�Լ����z�f���T��� �$�4/�DF�  �3�uQ�]�q��*R��\��ܻ""R�6�|g   �   ��� ����lg�e�\�(��M���������:Z���Ks��T�2x��d��2I4x8L��Y���q:LŢ��d��j�‥)�r���KʤiʒH@քU��A�p�@�p�i��L�DC�	,v��"2-SR6�2��o8�	b:��ز5�KIK���\.)�.�P�2xl��*hIh!񡠚م,c�2�t�6|˸�r���(iǡ�C��{6FJr�PRҌ�P����ĐH'�����䣆Q6� l^ Q��#\>��`��" �yR��Υ� w�
+�8��8���J˔�ES��|��T���D��e� �2-AI]���3����8J8%�ش̓)B�Q�[� ���6-P0dV��`D�@�dGl([���-�@@��L�e�����oY^�B��1e	�i�ҹ�/��D1�F@�h� #I��6�
+����h��d�a*͉�*"�Q�1� �)��}AtkG|�t��X�t{!�h�@�z"����ʔ�&��B`���ja��Kp-/"F$�&f���i�U�e-���*�2FƖ�ʷ,%6��T�Q\�c��@�>���|�HXc�cW���G��o�3Q5�o�I(c߲W߲���e��a��i�	��`|���
+���
+߲D�h�FR�D����:@�x��4�@2m6��NB��S�pD\I�B�ӰYO�o��=�uu��`�`��b�c·,>4|�6�[���x�љ�-s�k·�)L�|˘�1����n H��S�t�4%� �2N�PIED�����#;e(���0���C�|�bĎHɵt"��U ��k���C9е�h�9J�o�Ӡh����JP+����L���EIi;p�P���Eb�$���) x��%EQR�Z$��m!ۨ���F�	�!I+<#��� ��t�D�/��)('�I}&ae�l��0ks�L�b�T,�칭������s��by�0ފe��K�bQ@q�:R��v`	�Ã�)"���@XV,N�F1M��:a��c��/W���j	��r`ԁ� �T,��D!#��hq8����g�����f��Pm6�
+Rnd�8h4����LŢ�h"�LD��`*���%@R(��F�U��?���e�@00 @����RmV@�I�!Ii�"%մ$��!��f:HN��_Pma��p�H�b��D��*"�%00a@, |0��0d����)��}TO�xh� ID*� ��E�4�K��KMP��<&%((		��
+=��܈J	���~	B%�����6�n Ā�0R8�,�3�!��F�J���'��,A&$7&߲�%@+l(��$�@@��yL�RѰ�\L	)�Fc�栴# ��m��@�D FGGN%}ePW�aV#��Cˀ� �V���%f�5�-s�o�jX�T�0!%&�7�2B�"(� q�@Y8-�D��[F�-�,2D<4��3�,��-�Z-D�1X�R���@K�,H4�ʔa=,������`�l�`eJ�E��v6FJ�����ZqE�c��)�?��1�*@ ��J�$J`�xi�QdhY�BڢA,	I��QȆ���$2T���!c�6�@E�P��j���;�R<�L�zSrV�\���9��)Q�N%-9<�G�)mJy�p��i;5d��YH�)'a�2A�I�����֜��ɷ�S�!i�-㐼Z�ɘ^�����n�x�J+���1�湠�(�l�E ɖ]
+<<�K
+#�sq\t.����"�@�.��\\��q1�x>�������#�M�V�*�
+�b�2b��ـ��j8V �4%%EpPh!/�dJ� �_/��b.B�E�I�N��&���(h)��t3�P��S`C�6��j�H' ,*��a�+�m '��E��T,����4�D�e��Fh��A�.=�V,�P�r:�&�����n�nv�"R��������>Uv���S�̜�k��X���l����/z���m�v&������L�v/9����kg2T�������qd���C����"T�ba�
+�}���A�:�>�d_u����_������;�'L�����|ױba��_�_�t�����=�[�o=F���V�e��d����ۛ�>&�Lf]t�|a�rz�*�?�?������5S]�F�}��� +��u;JB*����aq�Ŏ���A�|�	�cױ3�ﲃ�p�������b�q#C�̅�2�5B�o����c��u�~��ẏ��U��~��{���{�Ω/�c��c�s3��=��>�3�A�>b�2����a&���������0];����/3;��	�ո1v�;t�X��E����~��۽|�`���v��X?��&;��TǪX/'�n�Gw���	+�F7���6�����*����=3{�Fl������5�n/�̄�F��e?��g���S��f���T��[��>�{}����ݭ:?����}�0>�{�;|�s��o:�Ն��]ݾb�w��Ou
+�����*g�{��[=f�vwoO����w������2Y�K��	��cv&���_1�p�5*;���k�X��䷏u3�Ņ�Ib���D<pb���\'(��Kk�x h�x`- x�D*W�d��Uqzɟ߭�ߏ���ikf̅�߻ϳ��B�#�TM���03z�?fvu��cFΏ�9�������t�bՃ��U��7�>����]�e����ucf��E��}��1k��W����u���=U�����V�_�vofv�������|O�3��P�lN��GX��V�.�����[+�z���m��
+_d�/3߻�������S;��ww��*|�߯��v��r��sp{1#�&l�1Y;�G��w_�Nׇ�_�.Gu1���53��]�����ɺ�ŏ�o���5�k����9���/��ׄϤ]�V,��/5cw���G��jL�|���7��p�Kf�o���鿬OU�o?�09�>M�����[��jo����_W�=�U�S_T݌��S�Ⱦ�_�Sv�����#��z�S��1~6�K��0����ggu��Z__�_���S9jf�ֆ��}�?>�����;��Vu99�{]|�|���7���b�r&�>_�������j���W����W,6|O7�}�Ř��&X�V,)l���V,�Pvt����uR� `ą�
+aY���Ⱥ���5���W��WW���t���G��5z��6Ia�qa��}�����T��`_���0�:1�`���݊�c�-�|����d�cȑ��9��2#C4�4C@0  ��&�pEl�@�ơ�H�&1��(b�2�B������(:�ha.��R�[���	Nr|�(os��N�.��F�D�Ar{3�X�)9n�$7�P��V�o�^j��n�D��,1�,.C"�f�Ĕ��"q�S������3���ߊҊn�f@�J�G4�i����\J8���q�Lĕ��hz�:�� �HՂ] ���
+ۊ�/c�z�n�g�I��+{�6[�B�6�$0J�Ao^����=��"��F�xrҌR"��'J�=��Z����P���B��H�������	N��8�����T٪L<�	�YZ��aQ���i��u� d)3�Ϣ�&�0(`��6y1=��N��[�ݒH�0��:�g�����6!-Vfm����zߌxv�Q���%�B@Q�0,-	ʾ[��Y�g�xҥ����n�L�R0'�0�եt4�ά�����x�PXbBR-�.�)�p�hM��d�n��Q�g�DA��rՏ���q�-z,�2R�r�/UFTA��;�|U���I(�Uw���y�\��[_��"�5��Lr��:�w6K1foq/��!I���$yP�un 'j�)8�x*iߵ��+
+�!�qN_�%�����}��n�1^Y�����>���cWZ�:�'�6]�Y� :�K�T/�g�]�ذ�a��q�4�^q����� ���!�[��|��4%�.csF³rY��7\(-W��Ma  �N�؇ˌK��6)��U�5�f+oQ�S��ƪT���3���23:W�N~Ҡ�R�ꌑ�x��d��+�h�d�C���9	@	��p,��I��}s���C�BI�k����!bX��n}�(��U��0�	��Է>�,Gڥ$s"a��eqPى�A�!�g��A2F�]�s��]M�C�N戠��e��;��zk��ࡑ�Cϊ x8�x����!d�U�:��P(��c�,���(ft71gG�%)+�p�h��:��lSX�*K3
+s�P�.M� �Z�B�WG?$Bl/��\�]]-�bQԺ�������M
+��A�|X���ʊ�HFD9A#BV�W�8tT�D���.����Сc�-���f��lc}�ˏs��V�xr��� �{���!;*����R���Y|zJ�ǁ\��� ��w�]јA{�t�#�k���)�Eb��O�ʏ�E�G2ŏȅ�?����N-���%�D��pO�7�
+�J�S��t
++�s�)��UN��N]m,���\��~F$��Z�T�S>�fש��GO�����8�Tѩ!�f����t��T4�������13�2d����?� �G�'�#�A��WIjؖL\2գu��V��rEynD%#R�W���>����|[�$J�'���b���&�|K-*v�o�)�@APOB�¶�Mt�i���`�z���c���IU1��#�E����@���C�mX�GU
+�Z�w�
+/�g�/��O��[�cFT�BPk�!��f�>������g=�&a�h���0s�v��b�����m�1
+&���U8���HS�@�3@4�(: �~�h����cdL�`��"d�Ñ�-c��#404���LmT���*��M7����ߠ�3Y`2�Z�q�����*����-�:b*1���n���e�l} J�`_4��P��4'����@Z'5ᗃ�1�e6-��*�jks�!���%5�cן	�
+|nmS������H�*QcB�<>�]-�|DL0�,��\<�kW�H���ˉ��SR��y��g��wCq��Ah�d�9��99��y�}i�'�Ó�#�Ybve�V"������t��
+�|�$�3�r��(([��&�/K��CBmc�Qu6SV/�M��2�y0&����$�(��7Z�U*C��dYh����?�'������?Vr4`�3�c�ЦMw6m�d1�=$M���c�!���)C����3�'�%������e�-s�~�����(���o���wB&��c@���G��h	�h���AXb6W���y�c�o:}u�v%i��3�h�e�P���D�A�֫�)�1��e����o@+�fv�����ڤ�Pp�r$�gN^��}T��#QP���|�_EO�a�V�ǜ�n���^�:�Y�7�|����T�!Q7C�Rv�T��6��_צ����	Z�����\�T+gAWݫ�^�y.$��Sx��c���V�ֳg�'���p\��6�+A˞c_$������({�t3���6P�~?y��>�s�6J�C
+g�1���i&5"?ֶ�3�Y�ȿ�����*frF3[��h��9�|2�o�)5W�"N
+RJ�b�O�iRj)�n��Lۖ1��֤�:�������-ùΔT��_����)��)�@��t��A����*zʝzC����ڽ�������S�
+�S�Sq�G2l�A����٧���>�#��6�P�X�,/���=Y���C7\C�Z�Ry�e]���V�&R\tø~S�~{�(�7{�#���\6�b��"&W1m�r��j9��1H19�����Q���
+��ʃ��1[��R�_�(A��������4���!/HG�����B%�R!���!a���9+0�H�m���-v��P���C�	�hu8�4l�o�2_�qd�}��D׼�%�����\�/�Pu󭜛p^���I|:<�]~�*m="���H��r�`�,�F=�f;R7����j�,�������A�������x>�P���d�O�\}�����Y�2h�,(���aW�Y\��6�h&���7�6�Vl���4P+��/���iIY<���{�}?a�\~�B�K��x��h�o%"2��d�=e�gR��0W�S��Dq谻L�3ϰ4���&�IS��쥭l�h?*�����9��v(r,u� ��y��kVF!���녟2?����5�h1��{�W��N,�+�&4�%u��݈>J�_g3|&�lzH�8���'��j|f�x^�&��[�Ɍ��I�Y��˳�?�Vl�%��F�5�H67��ȋÞ���e������6S+<p��=?��:�R�.�7;��xf����|� �ճ��MyƏt%D?Z���8Yys3��sS��-���h	�����l*W�q��R���eג�& 0m)�x|V3�aƤF:֞)�+'�"eՏ��C�-�
+��h�u?p̃"K��vuk̄�a�>D�'��EP�h=��խ�h��Xw��_S$&����&�I���K���_���Nw���ʵ4���:id��� ��tet�p���N���栗��уSTsQ����u����נ��[���X��Cv���|%�<��\����Q����H���A��!�V����'OX+��y鍅������Z� 
+T�`#~9�-y�(���gpQ�����	�Uq�,��dl�+S{�/N
+@S� �C/$���$T�f�^�^�$w؊�w��*�wQ���|����5�!�Hùl7���� V!E����W���J�>+�=�
+"�`���үj���آZ1��LlG\;]���.hp@k*"�(?X�gK �sڃ
+endstreamendobj26 0 obj[/Indexed/DeviceRGB 255 27 0 R]endobj27 0 obj<</Filter[/ASCII85Decode/FlateDecode]/Length 441>>stream
+8;X]O>EqN@%''O_@%e@?J;%+8(9e>X=MR6S?i^YgA3=].HDXF.R$lIL@"pJ+EP(%0
+b]6ajmNZn*!='OQZeQ^Y*,=]?C.B+\Ulg9dhD*"iC[;*=3`oP1[!S^)?1)IZ4dup`
+E1r!/,*0[*9.aFIR2&b-C#s<Xl5FH@[<=!#6V)uDBXnIr.F>oRZ7Dl%MLY\.?d>Mn
+6%Q2oYfNRF$$+ON<+]RUJmC0I<jlL.oXisZ;SYU[/7#<&37rclQKqeJe#,UF7Rgb1
+VNWFKf>nDZ4OTs0S!saG>GGKUlQ*Q?45:CI&4J'_2j<etJICj7e7nPMb=O6S7UOH<
+PO7r\I.Hu&e0d&E<.')fERr/l+*W,)q^D*ai5<uuLX.7g/>$XKrcYp0n+Xl_nU*O(
+l[$6Nn+Z_Nq0]s7hs]`XX$6Ra!<<'!!!*'!!rrmPX()~>
+endstreamendobj22 0 obj<</AntiAlias false/ColorSpace/DeviceRGB/Coords[0.0 0.0 1.0 0.0]/Domain[0.0 1.0]/Extend[true true]/Function 28 0 R/ShadingType 2>>endobj23 0 obj<</AntiAlias false/ColorSpace/DeviceRGB/Coords[0.0 0.0 1.0 0.0]/Domain[0.0 1.0]/Extend[true true]/Function 29 0 R/ShadingType 2>>endobj24 0 obj<</AntiAlias false/ColorSpace/DeviceRGB/Coords[0.0 0.0 1.0 0.0]/Domain[0.0 1.0]/Extend[true true]/Function 30 0 R/ShadingType 2>>endobj30 0 obj<</Bounds[0.388723]/Domain[0.0 1.0]/Encode[0.0 1.0 0.0 1.0]/FunctionType 3/Functions[31 0 R 32 0 R]>>endobj31 0 obj<</C0[0.356863 0.207843 0.870588]/C1[0.356863 0.207843 0.870588]/Domain[0.0 1.0]/FunctionType 2/N 1.0>>endobj32 0 obj<</C0[0.356863 0.207843 0.870588]/C1[0.454902 0.333333 0.866667]/Domain[0.0 1.0]/FunctionType 2/N 1.0>>endobj29 0 obj<</Bounds[]/Domain[0.0 1.0]/Encode[0.0 1.0]/FunctionType 3/Functions[33 0 R]>>endobj33 0 obj<</C0[0.862745 0.835294 0.964706]/C1[0.796078 0.74902 0.94902]/Domain[0.0 1.0]/FunctionType 2/N 1.0>>endobj28 0 obj<</Bounds[]/Domain[0.0 1.0]/Encode[0.0 1.0]/FunctionType 3/Functions[34 0 R]>>endobj34 0 obj<</C0[0.72549 0.666667 0.933333]/C1[0.592157 0.501961 0.898039]/Domain[0.0 1.0]/FunctionType 2/N 1.0>>endobj18 0 obj<</Intent 35 0 R/Name(Layer 1)/Type/OCG/Usage 36 0 R>>endobj35 0 obj[/View/Design]endobj36 0 obj<</CreatorInfo<</Creator(Adobe Illustrator 28.7)/Subtype/Artwork>>>>endobj21 0 obj<</AIS false/BM/Normal/CA 1.0/OP false/OPM 1/SA true/SMask/None/Type/ExtGState/ca 1.0/op false>>endobj19 0 obj[18 0 R]endobj37 0 obj<</CreationDate(D:20241202065621-07'00')/Creator(Adobe Illustrator 28.7 \(Windows\))/ModDate(D:20241202065622-08'00')/Producer(Adobe PDF library 17.00)/Title(MSBuild)>>endobjxref
+0 38
+0000000004 65535 f
+0000000016 00000 n
+0000000147 00000 n
+0000016834 00000 n
+0000000000 00000 f
+0000016885 00000 n
+0000000000 00000 f
+0000000000 00000 f
+0000019124 00000 n
+0000019196 00000 n
+0000019336 00000 n
+0000020729 00000 n
+0000000000 00000 f
+0000000000 00000 f
+0000000000 00000 f
+0000000000 00000 f
+0000000000 00000 f
+0000000000 00000 f
+0000055342 00000 n
+0000055642 00000 n
+0000017291 00000 n
+0000055529 00000 n
+0000054119 00000 n
+0000054265 00000 n
+0000054411 00000 n
+0000018618 00000 n
+0000053544 00000 n
+0000053592 00000 n
+0000055128 00000 n
+0000054915 00000 n
+0000054557 00000 n
+0000054675 00000 n
+0000054795 00000 n
+0000055010 00000 n
+0000055223 00000 n
+0000055413 00000 n
+0000055444 00000 n
+0000055667 00000 n
+trailer
+<</Size 38/Root 1 0 R/Info 37 0 R/ID[<20BBAF9A28AAD548B06851A831FC5364><134D1AC41AF67442B67C503709D794CC>]>>
+startxref
+55852
+%%EOF
diff --git a/branding/MSBuild-Logo.png b/branding/MSBuild-Logo.png
index db9a1a45003..3f3d81f9c93 100644
Binary files a/branding/MSBuild-Logo.png and b/branding/MSBuild-Logo.png differ
diff --git a/branding/MSBuild-Logo.svg b/branding/MSBuild-Logo.svg
new file mode 100644
index 00000000000..a22d1d16142
--- /dev/null
+++ b/branding/MSBuild-Logo.svg
@@ -0,0 +1,21 @@
+<svg width="256" height="256" viewBox="0 0 256 256" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path d="M157.317 61.7813L170.613 54.0853V29.4453L114.661 61.7867C111.109 63.84 111.109 68.9707 114.661 71.024L170.667 103.365V143.408C170.667 149.125 167.616 154.405 162.667 157.264L144 168.043C134.096 173.76 121.893 173.76 111.995 168.043L72 144.944C68.4427 142.891 64 145.456 64 149.563V214.245L85.3333 201.925V186.523C85.3333 182.416 89.776 179.851 93.3333 181.904L111.995 192.683C121.899 198.4 134.096 198.4 144 192.683L184 169.584C188.949 166.725 192 161.445 192 155.728V91.0453L157.323 71.0187C153.771 68.9653 153.765 63.84 157.323 61.7867L157.317 61.7813Z" fill="#4122AA"/>
+<path d="M144.005 118.757C134.101 124.475 121.904 124.475 112 118.757L85.3386 103.36L74.672 97.2267L64.0053 91.04L25.6053 68.8533C22.8853 73.6 21.3386 79.1467 21.3386 84.9067V171.093C21.3386 182.453 27.312 192.96 37.1253 198.667C37.1786 198.72 37.2853 198.773 37.3386 198.827L64.0053 214.24V149.579C64.0053 145.467 68.4586 142.901 72.016 144.965L74.672 146.507L85.3386 152.64L112 168.037C121.904 173.755 134.101 173.755 144.005 168.037L162.672 157.259C167.621 154.4 170.672 149.12 170.672 143.403V103.36L144.011 118.757H144.005Z" fill="url(#paint0_linear_2607_2191)"/>
+<path d="M170.667 103.36L144.005 118.757C134.101 124.475 121.904 124.475 112 118.757L85.3387 103.36L74.672 97.2267L64.0053 91.04L25.6053 68.8533C28.3253 64.16 32.2187 60.2133 37.0187 57.3867C37.1253 57.28 37.232 57.2267 37.3387 57.1733L112 14.08C121.92 8.37332 134.08 8.37332 144 14.08L170.613 29.44L114.661 61.7813C111.109 63.8347 111.109 68.9653 114.661 71.0187L170.667 103.36Z" fill="url(#paint1_linear_2607_2191)"/>
+<path d="M230.4 68.8533L192 91.04L157.323 71.0133C153.771 68.96 153.765 63.8347 157.323 61.7813L170.619 54.0853L192.005 41.7653L218.672 57.1787C218.725 57.232 218.832 57.2853 218.885 57.3387C223.739 60.1653 227.632 64.1653 230.405 68.8587L230.4 68.8533Z" fill="#7455DD"/>
+<path d="M230.4 68.8533L192 91.04V155.744C192 161.451 188.96 166.72 184.027 169.584L143.995 192.683C134.096 198.395 121.899 198.395 112 192.677L93.3386 181.899C89.7813 179.845 85.3386 182.411 85.3386 186.517V226.56L112.005 241.92C116.965 244.8 122.459 246.187 128.005 246.187C133.552 246.187 139.045 244.8 144.005 241.92L218.672 198.827C218.779 198.773 218.885 198.72 218.992 198.613C228.752 192.907 234.672 182.453 234.672 171.093V84.9067C234.672 79.1467 233.12 73.6 230.4 68.8533Z" fill="url(#paint2_linear_2607_2191)"/>
+<defs>
+<linearGradient id="paint0_linear_2607_2191" x1="96.0053" y1="61.6377" x2="96.0053" y2="214.24" gradientUnits="userSpaceOnUse">
+<stop stop-color="#B9AAEE"/>
+<stop offset="1" stop-color="#9780E5"/>
+</linearGradient>
+<linearGradient id="paint1_linear_2607_2191" x1="135.892" y1="10.6667" x2="65.2841" y2="99.1983" gradientUnits="userSpaceOnUse">
+<stop stop-color="#DCD5F6"/>
+<stop offset="1" stop-color="#CBBFF2"/>
+</linearGradient>
+<linearGradient id="paint2_linear_2607_2191" x1="234.672" y1="231.995" x2="52.9831" y2="231.995" gradientUnits="userSpaceOnUse">
+<stop offset="0.388723" stop-color="#5B35DE"/>
+<stop offset="1" stop-color="#7455DD"/>
+</linearGradient>
+</defs>
+</svg>
diff --git a/branding/MSBuild-NuGet-Icon.png b/branding/MSBuild-NuGet-Icon.png
index b502fda8f5d..ddb55a0ee3b 100644
Binary files a/branding/MSBuild-NuGet-Icon.png and b/branding/MSBuild-NuGet-Icon.png differ
diff --git a/branding/README.md b/branding/README.md
index 0f63eb314e4..d954e6f3bef 100644
--- a/branding/README.md
+++ b/branding/README.md
@@ -1,16 +1,29 @@
 # Branding
 
-This folder contains images used for branding MSBuild in various places.  If you add a new image, please indicate where it is used.
+This folder contains MSBuild brand images.
 
-## MSBuild-Icon.png ![MSBuild-NuGet-Icon.png](MSBuild-Icon.png?raw=true)
-This image is the original graphic used for creating the MSBuild icon.  It was placed here from its original location but is not currently used by anything.
+## MSBuild-Logo.svg
 
-## MSBuild-Logo.png ![MSBuild-NuGet-Icon.png](MSBuild-Logo.png?raw=true)
-This image is an original graphic created by Immo Landwerth.  It can be used for images where the size is required to be larger than the MSBuild-Icon.png.
+A vector-based version of the logo that scales to any resolution.
 
-## MSBuild-NuGet-Icon.png ![MSBuild-NuGet-Icon.png](MSBuild-NuGet-Icon.png?raw=true)
-This image is used by the NuGet packages as the ``<iconUrl />``.  Its raw location in this repo is used by the forwarding link [https://aka.ms/msbuildicon](https://aka.ms/msbuildicon).  If it is moved, please update the link.
+![MSBuild-Logo.svg](MSBuild-Logo.svg?raw=true)
 
-If the below image loads, then the forwarding link is working.
+## MSBuild-Icon.png
 
-![MSBuild-NuGet-Icon from the forwarding link](https://aka.ms/msbuildicon)
\ No newline at end of file
+A 40x40px version of the MSBuild logo.
+
+![MSBuild-NuGet-Icon.png](MSBuild-Icon.png?raw=true)
+
+## MSBuild-Logo.png
+
+A 256x256px version of the MSBuild logo.
+
+![MSBuild-Logo.png](MSBuild-Logo.png?raw=true)
+
+## MSBuild-NuGet-Icon.png
+
+A 128x128px version of the MSBuild logo, intended for use in NuGet packages.
+
+![MSBuild-NuGet-Icon from the forwarding link](https://aka.ms/msbuildicon)
+
+The URL [https://aka.ms/msbuildicon](https://aka.ms/msbuildicon) redirects to this file on github.com. If the above image loads, then the forwarding link works. If not, please update the link.
diff --git a/documentation/Logging-behavior.md b/documentation/Logging-behavior.md
new file mode 100644
index 00000000000..ee71a236c05
--- /dev/null
+++ b/documentation/Logging-behavior.md
@@ -0,0 +1,50 @@
+## Logging behavior
+MSBuild has a few different built-in loggers, which have different behaviors depending on verbosity. For more information on loggers you can visit the [Microsoft Learn page](https://learn.microsoft.com/visualstudio/msbuild/obtaining-build-logs-with-msbuild), or take a look at the [high-level overview of MSBuild](https://github.com/dotnet/msbuild/blob/main/documentation/High-level-overview.md#diagnosability--loggers).
+
+If you are expecting to see a certain type of message (like test logs) but are unable to find it in one of our loggers, check if the verbosity is correct and if the message has the correct type and importance.
+
+### Message types
+There are various types of messages within MSBuild with different importances and purposes.
+Some message types are built-in within the engine, such as  `errors`, `warnings`, and MSBuild engine information. Others are custom messages, that can come either from the engine or other sources, and are selected and displayed based on the `importance` of the message. There can be high, normal, and low importance messages being displayed. More detail on which messages are displayed on individual loggers are on their respective sections.
+
+For more information on custom messages please reference the Microsoft Learn page for the MSBuild [Message](https://learn.microsoft.com/visualstudio/msbuild/message-task) Task.
+
+### Terminal logger
+Terminal logger is a new feature which improves the console experience for end users by focusing the output on the diagnostics raised from a build for each project. It also allows users to see at-a-glance information about how the engine is building their projects at any time. It is opinionated and explicitly hides some build messages and output to deliver a more streamlined end-user experience. Users that need more detailed output should use the [console logger](#console-logger) or a [binary log](#binary-logger-build-logger) along with the [Structured Log Viewer](https://msbuildlog.com/) to drive their investigations.
+For more information on how the terminal logger behaves see the [dotnet build options](https://learn.microsoft.com/dotnet/core/tools/dotnet-build#options) under `-tl`.
+
+To specify verbosity the `-verbosity` flag or `/tlp:verbosity={verbosity level}`
+
+| Verbosity                  | Quiet | Minimal | Normal | Detailed | Diagnostic |
+| ---------                  | ----- | ------- | ------ | -------- | ---------- |
+| Errors                     |&check;| &check; | &check;| &check;  |   &check;  |
+| Warnings                   |&check;| &check; | &check;| &check;  |   &check;  |
+| High-importance messages   |       |         |        | &check;  |   &check;  |
+| Normal-importance messages |
+| Low-importance messages    |
+| MSBuild engine information |
+
+### Binary logger / build logger
+The binary logger does not have a verbosity option. It includes all messages, projects and files from the build by default. It is intended to be a tooling-friendly way to get detailed information about what happened during a build, for analysis or automated processing.
+
+You can find more information about the binlogs on [MSBuild Github Documentation](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md).
+
+### Console logger
+Console logger refers to the logger that outputs to the console in VS or the terminal that is being used. It is not the default logger after the [.NET 9 update](https://learn.microsoft.com/en-us/dotnet/core/compatibility/sdk/9.0/terminal-logger) but still can be accessed by opting out of the Terminal Logger feature.
+
+The console logger is a 1:1 textual representation of the data that are emitted during the build. It attempts small amounts of formatting, but it writes received messages from all of the worker nodes in an unbuffered format so can be difficult to follow the chain of execution.
+
+The console logger defaults to normal verbosity, and can be overriden by passing the `-verbosity` attribute, or passing the `verbosity` property to the console logger `clp:verbosity={verbosity level}`.
+
+| Verbosity                  | Quiet | Minimal | Normal | Detailed | Diagnostic |
+| ---------                  | ----- | ------- | ------ | -------- | ---------- |
+| Errors                     |&check;| &check; | &check;| &check;  | &check;    |
+| Warnings                   |&check;| &check; | &check;| &check;  | &check;    |
+| High-importance messages   |       | &check; | &check;| &check;  | &check;    |
+| Normal-importance messages |       |         | &check;| &check;  | &check;    |
+| Low-importance messages    |       |         |        | &check;  | &check;    |
+| MSBuild engine information |       |         |        |          |            |
+
+### File logger
+The File logger saves all the build data to a file. It's verbosity is determined by passing the `verbosity` parameter to the `flp` attribute, or the default is set to `diagnostic`, and it follows the same message display rules as the console logger.
+
diff --git a/documentation/release-checklist.md b/documentation/release-checklist.md
index 1e5ab0b3f87..207e0ae8d32 100644
--- a/documentation/release-checklist.md
+++ b/documentation/release-checklist.md
@@ -13,19 +13,23 @@
 
 ## At release time
 Before starting the process:
-- [ ] If the release is being cut more than a few days before the VS-side snap, do these two steps. Otherwise check them off.
-  - [ ]  Modify the VS insertion so that it flows from MSBuild `vs{{THIS_RELEASE_VERSION}}` to VS `main` [in the MSBuild-release-branch release definition](https://dev.azure.com/devdiv/DevDiv/_release?definitionId=1319&view=mine&_a=releases). Alternatively, if the release being cut no more than couple of weeks, disable the scheduled releases and create releases from `vs{{THIS_RELEASE_VERSION}}` manually until the VS-side snap: Edit -> Schedule set under Artifacts -> disable toggle
-AND
-  - [ ]  Disable automated run of [the MSBuild-main-branch release definition](https://dev.azure.com/devdiv/DevDiv/_release?definitionId=2153&view=mine&_a=releases) (because our {{NEXT_VERSION}} builds don't have a place to go in VS yet)
+- [ ] If the release is being cut more than a few days before the VS-side snap, run insertions manually OR redirect MSBuild release branch
+  - [ ]  Disable scheduled run of [MSBuild VS Insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) (our {{NEXT_VERSION}} builds don't have a place to go in VS yet) by: Edit -> ... -> Triggers -> add a schedule on a dead branch (this overrides the YAML defined once-per-day schedule for main). Manual pipeline run: select as input resource the to-be-inserted "MSBuild" pipeline run on branch `vs{{THIS_RELEASE_VERSION}}` and VS TargetBranch `main`.
+OR
+  - [ ]  If the release is being cut more than couple of weeks modify [YAML](https://github.com/dotnet/msbuild/tree/main/azure-pipelines/vs-insertion.yml) (and merge to affected MSBuild branches) of the [VS insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) so that it schedules insertions from MSBuild `vs{{THIS_RELEASE_VERSION}}` to VS `main`. Keep scheduled daily insertions to simplify your workflow and exclude `vs{{THIS_RELEASE_VERSION}}` from triggering insertion on each commit.
 
 ### Branching from main
 - [ ]  If the new version's branch was created before the Visual Studio fork: fast-forward merge the correct commit (the one that is currently inserted to VS main) to the `vs{{THIS_RELEASE_VERSION}}` branch \
 e.g.: `git push upstream 2e6f2ff7ea311214255b6b2ca5cc0554fba1b345:refs/heads/vs17.10` \
 _(This is for the case where we create the branch too early and want it to be based actually on a different commit. If you waited until a good point in time with `main` in a clean state, just branch off and you are done. The branch should point to a good, recent spot, so the final-branding PR goes in on top of the right set of commits.)_
 - [ ]  Update the branch merge flow in `.config/git-merge-flow-config.jsonc` file to have the currently-in-servicing branches.
-- [ ]  Create {{NEXT_VERSION}} branding PR (in main) including public API baseline package version change: {{URL_OF_NEXT_VERSION_BRANDING_PR}}. 
+- [ ]  Create {{NEXT_VERSION}} branding PR (in main) including public API baseline package version change: {{URL_OF_NEXT_VERSION_BRANDING_PR}}.
   - In the file `eng/Versions.props` Update the `VersionPrefix` to `{{NEXT_VERSION}}` and `PackageValidationBaselineVersion` set to a latest internally available {{THIS_RELEASE_VERSION}} preview version in the [internal dnceng dotnet-tools feed](https://dev.azure.com/dnceng/internal/_artifacts/feed/dotnet-tools-internal). It might be needed to update `CompatibilitySuppressions.xml` files. See [this documentation](https://learn.microsoft.com/en-us/dotnet/fundamentals/apicompat/overview) for more details. You can update `CompatibilitySuppressions.xml` files by running
-`dotnet pack MSBuild.Dev.slnf /p:ApiCompatGenerateSuppressionFile=true`. 
+`dotnet pack MSBuild.Dev.slnf /p:ApiCompatGenerateSuppressionFile=true`.
+  - [ ]  When VS main snaps to {{THIS_RELEASE_VERSION}} and updates its version to {{NEXT_VERSION}}, modify the [MSBuild VS Insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) YAML so that it flows from MSBuild main to VS main.
+    - [ ]  Update AutoTargetBranch selection in the [YAML](../azure-pipelines/vs-insertion.yml) (add to parameters and make new AutoTargetBranch rule by copying it from existing ones) of the [MSBuild VS Insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) to insert MSBuild `vs{{THIS_RELEASE_VERSION}}` to the corresponding VS branch `rel/d{{THIS_RELEASE_VERSION}}`.
+    - [ ] Add `rel/d{{THIS_RELEASE_VERSION}}` case to TargetBranch parameter in [Experimental insertion](../azure-pipelines/vs-insertion-experimental.yml)
+    - [ ] Set scheduled insertion for main and remove exclusion of `vs{{THIS_RELEASE_VERSION}}` triggering on each commit if added earlier.
 - [ ]  Merge {{NEXT_VERSION}} branding PR
 
 ### Adjust DARC channels and subscriptions
@@ -56,12 +60,10 @@ if it is not, `darc add-default-channel  --channel "VS {{THIS_RELEASE_VERSION}}"
 
 ### Adjust pipelines / releases
 - [ ]  Fix OptProf data flow for the new vs{{THIS_RELEASE_VERSION}} branch
-  - [ ] Run the [official build](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=9434) for vs{{THIS_RELEASE_VERSION}} without OptProf (set `SkipApplyOptimizationData` variable in 'Advanced options' section of the 'Run pipeline' menu to `true`) or alternatively with the latest Opt-Prof collected for the main branch (set `Optional OptProfDrop Override` to the drop path of the collected data, which could be found in the logs of the pipeline: Windows_NT -> Build -> search for `OptimizationData`). 
+  - [ ] Run the [official build](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=9434) for vs{{THIS_RELEASE_VERSION}} without OptProf (set `SkipApplyOptimizationData` variable in 'Advanced options' section of the 'Run pipeline' menu to `true`) or alternatively with the latest Opt-Prof collected for the main branch (set `Optional OptProfDrop Override` to the drop path of the collected data, which could be found in the logs of the pipeline: Windows_NT -> Build -> search for `OptimizationData`).
   - [ ] Check that the [OptProf data collection](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=17389) pipeline run is triggered for vs{{THIS_RELEASE_VERSION}}. If not, run manually ('Run pipeline' in upper right)
   - [ ] Run the [official build](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=9434) for vs{{THIS_RELEASE_VERSION}} with no extra customization - OptProf should succeed now
-- [ ]  When VS main snaps to {{THIS_RELEASE_VERSION}} and updates its version to {{NEXT_VERSION}}, turn on / modify the VS insertion so that it flows from MSBuild main to VS main.
-  - [ ]  Update the [release-branch insertion release definition](https://dev.azure.com/devdiv/DevDiv/_releaseDefinition?definitionId=2153&_a=definition-variables) to have `InsertTargetBranch` `rel/d{{THIS_RELEASE_VERSION}}`.
-- [ ]  Turn [the release pipeline](https://dev.azure.com/devdiv/DevDiv/_release?definitionId=2153&view=mine&_a=releases) back on.
+- [ ] Restore [MSBuild VS Insertion pipeline](https://devdiv.visualstudio.com/DevDiv/_build?definitionId=24295) to the default [YAML](https://github.com/dotnet/msbuild/tree/main/azure-pipelines/vs-insertion.yml) defined schedule, by removing all triggers from Edit -> ... -> Triggers.
 
 ### Configure localization
 - [ ]  Create {{THIS_RELEASE_VERSION}} localization ticket: https://aka.ms/ceChangeLocConfig (requesting to switch localization from {{PREVIOUS_RELEASE_VERSION}} to {{THIS_RELEASE_VERSION}}): {{URL_OF_LOCALIZATION_TICKET}}
@@ -93,7 +95,7 @@ Timing based on the [(Microsoft-internal) release schedule](https://dev.azure.co
     - Microsoft.Build.Tasks.Core.{{THIS_RELEASE_EXACT_VERSION}}.nupkg
     - Microsoft.NET.StringTools.{{THIS_RELEASE_EXACT_VERSION}}.nupkg
     - Microsoft.Build.Templates.{{THIS_RELEASE_EXACT_VERSION}}.nupkg
-     
+
   **Note:** Microsoft.Build.Conversion.Core and Microsoft.Build.Engine are **not** part of the list. Microsoft.Build.Templates **is** part of the list. Those 3 packages are a difference to the historic publishing list.
 
 - [ ]  Publish docs: submit reference request at https://aka.ms/publishondocs
diff --git a/documentation/specs/BuildCheck/Codes.md b/documentation/specs/BuildCheck/Codes.md
index f52c4f47317..9845c431061 100644
--- a/documentation/specs/BuildCheck/Codes.md
+++ b/documentation/specs/BuildCheck/Codes.md
@@ -2,22 +2,28 @@
 
 Report codes are chosen to conform to suggested guidelines. Those guidelines are currently in revew: https://github.com/dotnet/msbuild/pull/10088
 
-| Diagnostic&nbsp;Code | Default Severity | Reason |
-|:-----|-------|----------|
-| [BC0101](#bc0101---shared-output-path) | Warning | Shared output path. |
-| [BC0102](#bc0102---double-writes) | Warning | Double writes. |
-| [BC0103](#bc0103---used-environment-variable) | Suggestion | Used environment variable. |
-| [BC0201](#bc0201---usage-of-undefined-property) | Warning | Usage of undefined property. |
-| [BC0202](#bc0202---property-first-declared-after-it-was-used) | Warning | Property first declared after it was used. |
-| [BC0203](#bc0203----property-declared-but-never-used) | Suggestion | Property declared but never used. |
-
-
-To enable verbose logging in order to troubleshoot issue(s), enable [binary logging](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md#msbuild-binary-log-overview)
-
-_Cmd:_
-```cmd
-dotnet build -bl -check
-```
+| Diagnostic&nbsp;Code | Default Severity | Default Scope | Available from SDK | Reason |
+|:-----|-------|-------|-------|----------|
+| [BC0101](#bc0101---shared-output-path) | Warning | N/A | 9.0.100 | Shared output path. |
+| [BC0102](#bc0102---double-writes) | Warning | N/A | 9.0.100 | Double writes. |
+| [BC0103](#bc0103---used-environment-variable) | Suggestion | Project | 9.0.100 | Used environment variable. |
+| [BC0104](#bc0104---projectreference-is-preferred-to-reference) | Warning | N/A | 9.0.200 | ProjectReference is preferred to Reference. |
+| [BC0105](#bc0105---embeddedresource-should-specify-culture-metadata) | Warning | N/A | 9.0.200 | Culture specific EmbeddedResource should specify Culture metadata. |
+| [BC0106](#bc0106---copytooutputdirectoryalways-should-be-avoided) | Warning | N/A | 9.0.200 | CopyToOutputDirectory='Always' should be avoided. |
+| [BC0107](#bc0107---targetframework-and-targetframeworks-specified-together) | Warning | N/A | 9.0.200 | TargetFramework and TargetFrameworks specified together. |
+| [BC0201](#bc0201---usage-of-undefined-property) | Warning | Project | 9.0.100 | Usage of undefined property. |
+| [BC0202](#bc0202---property-first-declared-after-it-was-used) | Warning | Project | 9.0.100 | Property first declared after it was used. |
+| [BC0203](#bc0203----property-declared-but-never-used) | None | Project | 9.0.100 | Property declared but never used. |
+
+
+Notes: 
+ * What does the 'N/A' scope mean? The scope of checks are only applicable and configurable in cases where evaluation-time data are being used and the source of the data is determinable and available. Otherwise the scope of whole build is always checked.
+ * How can you alter the default configuration? [Please check the Configuration section of the BuildCheck documentation](./BuildCheck.md#sample-configuration)
+ * To enable verbose logging in order to troubleshoot issue(s), enable [binary logging](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Binary-Log.md#msbuild-binary-log-overview
+   _Cmd:_
+   ```cmd
+   dotnet build -bl -check
+   ```
 
 <a name="BC0101"></a>
 ## BC0101 - Shared output path.
@@ -48,6 +54,78 @@ Relying on environment variables introduces variability and unpredictability, as
 
 This practice can result in inconsistent build outcomes and makes debugging difficult, since environment variables are external to project files and build scripts. To ensure consistent and reproducible builds, avoid using environment variables. Instead, explicitly pass properties using the /p option, which offers better control and traceability.
 
+<a name="BC0104"></a>
+## BC0104 - ProjectReference is preferred to Reference.
+
+"A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'."
+
+It is not recommended to reference project outputs. Such practice leads to losing the explicit dependency between the projects. Build then might not order the projects properly, which can lead to randomly missing reference and hence undeterministic build.
+
+If you need to achieve more advanced dependency behavior - check [Controlling Dependencies Behavior](https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Controlling-Dependencies-Behavior.md) document. If neither suits your needs - then you might need to disable this check for your build or for particular projects.
+
+<a name="BC0105"></a>
+## BC0105 - EmbeddedResource should specify Culture metadata.
+
+"It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation."
+
+[`EmbeddedResource` item](https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items#embeddedresource) has a `Culture` and `WithCulture` metadata that are strongly recommended to be used - to prevent MSBuild to need to 'guess' the culture from the file extension - which may be dependent on the current OS/Runtime available cultures and hence it can lead to nondeterministic build.
+
+Examples:
+ * `<EmbeddedResource Update = "Resource1.xyz.resx" Culture="xyz" />` This indicates the culture to the MSBuild engine and the culture will be respected. No diagnostic (warning) is issued ([see below for exceptions](#RespectAlreadyAssignedItemCulture)).
+ * `<EmbeddedResource Update = "Resource1.xyz.resx" WithCulture="false" />` This indicates to the MSBuild engine that the file is culture neutral and the extension should not be treated as culture indicator. No diagnostic (warning)  is issued.
+ * `<EmbeddedResource Update = "Resource1.xyz.resx" />` MSBuild infers the culture from the extra extension ('xyz') and if it is known to [`System.Globalization.CultureInfo`](https://learn.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo) it is being used as the resource culture. The `BC0105` diagnostic is emitted (if BuildCheck is enabled and BC0105 is not disabled)
+ * `<EmbeddedResource Update = "Resource1.resx" />` MSBuild infers that the resource is culture neutral. No diagnostic (warning)  is issued.
+
+<a name="RespectAlreadyAssignedItemCulture"></a>
+**Note:** In Full Framework version of MSBuild (msbuild.exe, Visual Studio) and in .NET SDK prior 9.0 a global or project specific property `RespectAlreadyAssignedItemCulture` needs to be set to `'true'` in order for the explicit `Culture` metadata to be respected. Otherwise the explicit culture will be overwritten by MSBuild engine and if different from the extension - a `MSB3002` warning is emitted (`"MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set."`)
+
+<a name="BC0106"></a>
+## BC0106 - CopyToOutputDirectory='Always' should be avoided.
+
+"Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying."
+
+[`CopyToOutputDirectory` metadata](https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items) can take the values:
+ * `Never`
+ * `Always`
+ * `PreserveNewest`
+ * `IfDifferent`
+
+`Always` is not recommended, as it causes the files to be copied in every build, even when the destination file content is identical to the source.
+
+Before the introduction of `IfDifferent`, `Always` was needed to work around cases where the destination file could have changed between builds (e.g. an asset that can be changed during test run, but needs to be reset by the build). `IfDifferent` preserves this behavior without unnecessary copying.
+
+In order to avoid the need to change copy metadata for a large number of items, it's now possible to specify the `SkipUnchangedFilesOnCopyAlways` property in order to flip all copy behavior of `CopyToOutputDirectory=Always` to behave identically to `CopyToOutputDirectory=IfDifferent`:
+
+```xml
+<PropertyGroup>
+    <SkipUnchangedFilesOnCopyAlways>True</SkipUnchangedFilesOnCopyAlways>
+</PropertyGroup>
+
+<ItemGroup>
+    <None Include="File1.txt" CopyToOutputDirectory="Always" />
+    <None Include="File2.txt" CopyToOutputDirectory="IfDifferent" />
+</ItemGroup>
+```
+
+Both items in above example are treated same and no BC0106 diagnostic is issued.
+
+<a name="BC0107"></a>
+## BC0107 - TargetFramework and TargetFrameworks specified together.
+
+"'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time."
+
+When building a .NET project - you can specify target framework of the resulting output (for more info see [the documentation](https://learn.microsoft.com/en-us/dotnet/standard/frameworks#how-to-specify-a-target-framework)).
+
+When using `TargetFrameworks` property - you are instructing the build to produce output per each specified target framework.
+
+If you specify `TargetFramework` you are instructing the build to produce a single output for that particualar target framework. `TargetFramework` gets precedence even if `TargetFrameworks` is specified - which might seem as if `TargetFrameworks` was ignored.
+
+`BC0107` doesn't apply if you explicitly choose to build a single target of multitargeted build:
+
+```
+dotnet build my-multi-target.csproj /p:TargetFramework=net9.0
+```
+
 <a name="BC0201"></a>
 ## BC0201 - Usage of undefined property.
 
@@ -91,7 +169,7 @@ If `BC0202` and [BC0201](#BC0201) are both enabled - then `BC0201` reports only
 
 This check indicates that a property was defined in the observed scope (by default it's the project file only) and it was then not used anywhere in the build.
 
-This is a runtime check, not a static analysis check - so it can have false positives - for this reasons it's currently only suggestion.
+This is a runtime check, not a static analysis check - so it can have false positives - for this reasons it's currently not enabled by defaut.
 
 Common cases of false positives:
  * Property not used in a particular build might be needed in a build with different conditions or a build of a different target (e.g. `dotnet pack /check` or `dotnet build /t:pack /check` accesses some additional properties as compared to ordinary `dotnet build /check`).
@@ -103,4 +181,4 @@ Common cases of false positives:
 <BR/>
 
 ### Related Resources
-* [BuildCheck documentation](https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck.md)
+* [BuildCheck documentation](./BuildCheck.md)
diff --git a/documentation/specs/BuildCheck/CustomBuildCheck.md b/documentation/specs/BuildCheck/CustomBuildCheck.md
new file mode 100644
index 00000000000..314060c5e92
--- /dev/null
+++ b/documentation/specs/BuildCheck/CustomBuildCheck.md
@@ -0,0 +1,142 @@
+# MSBuild Custom Build Checks Guide
+
+## Overview
+Custom build checks in MSBuild provide developers with an extensibility point to implement specific validation and reporting during the build process.
+
+## Step-by-Step Custom Check Creation
+
+### 1. Understand the Motivation
+Before creating a custom check, identify your specific project needs, e.g.:
+- Do you need to enforce version constraints?
+- Are there security concerns with certain configurations?
+- Do you want to maintain consistent project properties?
+Depending on this, different MSBuild project stages can be considered (Evaluation, Build or Post Build events.)
+
+### 2. Install Prerequisites
+- Install .NET SDK 9 or higher
+
+- Install MSBuild Custom Check Template
+```powershell
+dotnet new install Microsoft.Build.Templates
+```
+
+### 3. Instantiate Project Template
+```powershell
+dotnet new msbuildcheck -n MyCustomBuildChecks
+```
+
+### 4. Examine Template Structure
+- Inherit from the MSBuild API base class (Microsoft.Build.Experimental.BuildCheck.Check) as already done by the template as otherwise your checks won't be registered during build runtime
+- <CustomCheckName>.props file contains the intrinsic function "RegisterBuildCheck" that is picked by MSBuild and is an entry point to the check.
+- <CustomCheckName>.csproj file has a custom target `AddNuGetDlls` included for copying 3rd party assemblies in the final package
+
+### 5. Define Rule Identification
+Key components for making your check discoverable:
+- Unique Rule ID (critical for system recognition)
+- Clear, descriptive title
+- Comprehensive description
+- Actionable recommendation message
+
+### 6. Choose Build Stage for Monitoring
+Custom checks can monitor different build stages:
+- Project Evaluation Build Time (most common)
+- Access project properties
+- Track and validate configurations
+
+### 7. Implement Check Logic
+```csharp
+public sealed class MaxVersionCheck : Check
+{
+    // Define allowed versions
+    private static Dictionary<string, Version> propertiesToAllowedVersion = new Dictionary<string, Version>()
+    {
+        { "ProductVersion", new Version(6, 0, 0) }
+    };
+
+    // Unique Rule Identifier
+    private const string RuleId = "BC123";
+
+    // Define Rule with Detailed Information
+    public static CheckRule SupportedRule = new CheckRule(
+        RuleId,
+        "NoForbiddenProjectProperties",
+        "Prevent unauthorized version usage",
+        "The version '{0}' for property '{1}' is forbidden. Use version '{2}' instead.",
+        new CheckConfiguration(Severity = CheckResultSeverity.Warning));
+
+    // Registration Method
+    public override void RegisterActions(IBuildCheckRegistrationContext registrationContext)
+    {
+        registrationContext.RegisterEvaluatedPropertiesAction(EvaluatedPropertiesAction);
+    }
+
+    // Validation Logic
+    private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
+    {
+        foreach (var property in propertiesToAllowedVersion)
+        {
+            if (context.Data.EvaluatedProperties.TryGetValue(property.Key, out string value))
+            {
+                if (Version.TryParse(value, out Version version) && version > property.Value)
+                {
+                    context.ReportResult(BuildCheckResult.Create(
+                        SupportedRule,
+                        ElementLocation.EmptyLocation,
+                        value,
+                        property.Key,
+                        property.Value.ToString()));
+                }
+            }
+        }
+    }
+}
+```
+
+### 8. Configure via .editorconfig
+```editorconfig
+# Custom check configuration
+build_check.BC123.severity = error
+```
+
+### 9. Package and Distribute
+- Compile as a NuGet package
+- Integrate into project build process
+- Add as a PackageReference to the checked project
+
+## Practical Considerations
+
+### Security and Vulnerability Prevention
+- Version constraints can prevent:
+  - Using outdated or vulnerable package versions
+  - Breaking dependencies in product files
+  - Introducing security risks
+
+### Performance Tips
+- Keep checks lightweight
+- Focus on specific, targeted validations
+- Minimize build time overhead
+
+## Real-World Use Cases
+- Enforce version constraints
+- Prevent security vulnerabilities
+- Manage dependency consistency
+- Validate project configurations
+
+## Contribution and Feedback
+The MSBuild team welcomes:
+- Community testing
+- Feature feedback
+- Repository contributions
+- Issue reporting
+
+## Limitations
+- Performance-conscious checks
+- Limited to specific build stages
+
+## Conclusion
+Custom build checks provide a powerful mechanism to enforce project-specific rules, enhance build quality, and maintain consistent development practices.
+
+## Getting Help
+- [MSBuild documentation](https://github.com/dotnet/msbuild/tree/main/documentation/)
+- [GitHub discussions](https://github.com/dotnet/msbuild/discussions)
+- [GitHub repository issues](https://github.com/dotnet/msbuild/issues)
\ No newline at end of file
diff --git a/documentation/specs/proposed/MSBuild_Server_onepager.md b/documentation/specs/proposed/MSBuild_Server_onepager.md
new file mode 100644
index 00000000000..d7ad41556c0
--- /dev/null
+++ b/documentation/specs/proposed/MSBuild_Server_onepager.md
@@ -0,0 +1,79 @@
+## MSBuild Server
+
+MSBuild server aims to create a persistent entry node for the MSBuild process
+that we would communicate with via a thin client. We want to get from
+the current state of “spawn a complete process for every CLI invocation”
+to “we have a server process in the background and we only spawn a small
+CLI handler that will tell the server what to build”.
+This project is based on an already existing project: [MSBuild Server](https://github.com/dotnet/msbuild/blob/main/documentation/MSBuild-Server.md). 
+We need to re-enable it and figure out the way forward.
+
+### Goals and Motivation
+
+Currently all the MSBuild processes are persistent, except for the entry
+point process which lives only for the duration of the build. Restarting
+this process with each and every build leads to some overhead due to
+startup costs like jitting. It also leads to a loss of continuity mainly
+due to the absence of caching.
+
+The primary aim of the MSBuild server is to reduce this startup
+overhead.
+
+The secondary aim of this project is to enable us to introduce more
+advanced caching and potentially some other performance optimizations
+further down the line. However these aren’t in the current scope.
+
+### Impact
+
+Small performance improvement in the short term. Enabling further
+optimizations in the long term. (these improvements are for the Dev Kit
+and inner loop CLI scenarios)
+
+Getting closer to the possibility of decoupling from Visual Studio. VS is currently 
+acting as a MSBuild server in some ways - they are a persistent process that  invokes 
+portions of the MSBuild. We ideally want to transition into "VS calls our server 
+instead" relation, to make our behavior consistent for both VS and CLI based
+builds.
+
+### Stakeholders
+
+MSBuild Team. Successful handover means turning on the
+feature, dogfooding it for long enough to ensure we have reasonable
+certainty that nothing breaks and then rolling it out.
+We should cooperate with our close repositories like SDK and roslyn 
+to get them to opt in before we roll the feature out.
+
+### Risks
+
+The project was already attempted once, however it was postponed because
+it surfaced a group of bugs that weren’t previously visible due to the
+processes not being persistent. One such example is Nuget authentication caching,
+which was a non-isue for a non persistent process but became a blocker
+due to the cache not being refreshable in-process.
+Most of those bugs should be solved by now, however we can run into some 
+new ones. Unfortunately the nature of the bugs means that these won't become
+apparent until we start with the dogfooding.
+
+### Cost
+Note that these are mostly my rough guess based on my limited knowledge.
+
+A week to figure out how to turn on the MSBuild Server in a way that
+will enable us to dogfood it properly **plus** some overhead for the
+review loop.
+
+A month of developer time for bugfixes assuming that nothing goes
+terribly wrong.
+
+Some PM time to communicate with appropriate teams to ask them for help
+with dogfooding.
+
+### Plan
+
+- In a first month we should aim to get the MSBuild server dogfooded for
+  our MSBuild repository inner development loop. (Coding + review + setting up)
+
+- Second month we will monitor it and fix anything that crops up.
+
+- After that we start dogfooding internally in our neighbor repositories(SDK, roslyn)
+ for as long as we feel   necessary to ensure everything works as intended. I would 
+ give this period one to three months of monitoring + bugfixing when necessary.
diff --git a/documentation/specs/proposed/RAR_caching_onepager.md b/documentation/specs/proposed/RAR_caching_onepager.md
new file mode 100644
index 00000000000..38143dd9a3b
--- /dev/null
+++ b/documentation/specs/proposed/RAR_caching_onepager.md
@@ -0,0 +1,60 @@
+## RAR caching
+RAR(Resolving of Assembly references) is an optimization for the step in 
+every build where we need to gather the graph of assembly references and pass
+them to the compiler. This process is highly cacheable as the references
+don’t change all that often. Currently we have some limited caching in
+place however the way nodes are assigned work results in frequent cache
+misses.
+
+### Goals and motivations
+
+1ES team wants to isolate their File I/O related to the RAR caching which is causing
+issues to their debugging efforts. This is mostly due to the fact that MSBuild is pulling
+files from all nodes at once which results in a tangled mess of IO that is hard to debug.
+
+Our motivation is a possible performance gain however we’re fine with
+the change as long as the impact is not negative.
+
+### Impact
+
+The only impact we’re concerned about is the performance. There will be
+a tension between the gains from caching and costs due to the IPC from
+the process that will act as the cache repository. We need to ensure
+that this balance will be a net positive performance wise.
+
+### Stakeholders
+
+1ES team, Tomas Bartonek, Rainer Sigwald
+
+1ES team will provide the initial cache implementation. We will review
+their PRs and do the performance evaluations. Handover will be
+successful if nothing breaks and we meet our performance requirements
+(no regression or better still an improvement).
+
+### Risks
+
+Some time ago Roman Konecny estimated the RAR caching to not be worth it
+performance wise. 1ES team claims to have created an implementation that
+will either improve or not change the performance. We need to validate
+this claim and push back in case we find performance regression.
+Thorough testing will be needed especially to ensure the performance
+is not impacted.
+
+The risk is having to figure out a different way to help 1ES team to
+isolate their File I/Os if the caching hurts the performance. This could
+result in a larger project requiring more involvement on our side.
+
+### Cost
+
+Week for reviewing the provided PR. Additional two weeks for performance
+testing conditional on the Perfstar infrastructure being functional.
+Some communication overhead
+
+## Plan
+
+1ES team creates the PR wih the RAR cache implementation.
+
+We review the PR with a special emphasis on the performance side of
+things.
+Then we merge the changes. There is no expected follow up beyond the
+usual maintenance for our codebase.
diff --git a/documentation/specs/proposed/telemetry-onepager.md b/documentation/specs/proposed/telemetry-onepager.md
new file mode 100644
index 00000000000..5bc8f22f9ce
--- /dev/null
+++ b/documentation/specs/proposed/telemetry-onepager.md
@@ -0,0 +1,77 @@
+# Telemetry 
+
+We want to implement telemetry collection for VS/MSBuild.exe scenarios where we are currently not collecting data. VS OpenTelemetry initiative provides a good opportunity to use their infrastructure and library. 
+There is some data we collect via SDK which we want to make accessible.
+
+## Goals and Motivation 
+
+We have limited data about usage of MSBuild by our customers in VS and no data about usage of standalone msbuild.exe.
+This limits us in prioritization of features and scenarios to optimize performance for. 
+Over time we want to have comprehensive insight into how MSBuild is used in all scenarios. Collecting such a data without any constraints nor limitations would however be prohibitively expensive (from the data storage PoV and possibly as well from the client side performance impact PoV). Ability to sample / configure the collection is an important factor in deciding the instrumentation and collection tech stack. Implementing telemetry via VS OpenTelemetry initiative would give us this ability in the future.
+
+Goal: To have relevant data in that is actionable for decisions about development. Measuring real world performance impact of features (e.g. BuildCheck). Easily extensible telemetry infrastructure if we want to measure a new datapoint.
+
+## Impact 
+- Better planning of deployment of forces in MSBuild by product/team management.
+- Customers can subscribe to telemetry locally to have data in standardized OpenTelemetry format
+
+## Stakeholders 
+- @Jan(Krivanek|Provaznik) design and implementation of telemetry via VS OTel. @ - using data we already have from SDK.
+- @maridematte - documenting + dashboarding currently existing datapoints.
+- MSBuild Team+Management – want insights from builds in VS
+- VS OpenTelemetry team – provide support for VS OpenTelemetry collector library, want successful adoption 
+- SourceBuild – consulting and approving usage of OpenTelemetry 
+- MSBuild PM @baronfel – representing customers who want to monitor their builds locally
+
+### V1 Successful handover
+- Shipped to Visual Studio
+- Data queryable in Kusto
+- Dashboards (even for pre-existing data - not introduced by this work)
+- Customers are able to monitor with OpenTelemetry collector of choice (can be cut)
+
+## Risks 
+- Performance regression risks - it's another thing MSBuild would do and if the perf hit would be too bad it would need mitigation effort.
+- It introduces a closed source dependency for VS and MSBuild.exe distribution methods which requires workarounds to remain compatible with SourceBuild policy (conditional compilation/build). 
+- Using a new VS API - might have gaps
+- storage costs 
+- Potential additional costs and delays due to compliance with SourceBuild/VS data.
+
+## V1 Cost 
+5 months of .5 developer's effort ~ 50 dev days (dd)
+
+20-30dd JanPro OTel design + implementation, 10-15dd JanK design + implementation, 5-10dd Mariana/someone getting available data in order/"data science"/dashboards + external documentation
+
+Uncertainties:
+It’s an exploratory project for VS OpenTelemetry, we'll be their first OSS component, so there might come up issues. SourceBuild compliance could introduce delays.
+
+## Plan 
+### V1 scope
+- Collected data point definition
+- Instrumented data points (as an example how the instrumentation and collection works)
+- Telemetry sent to VS Telemetry in acceptable quantity
+- Dashboards for collected data
+- Hooking of customer's telemetry collection
+- Documenting and leveraging pre-existing telemetry
+
+#### Out of scope
+- Unifying telemetry for SDK MSBuild and MSBuild.exe/VS MSBuild.
+- Thorough instrumentation of MSBuild
+- Using MSBuild server
+- Distributed tracing
+
+### Detailed cost
+- Prototyping the libraries/mechanism for collecting telemetry data (month 1) 10dd
+
+- Defining usful data points (month 1) 5dd
+
+- Design and approval of hooking VSTelemetry collectors and OTel collectors  (month 2) 10dd
+
+- Formalizing, agreeing to sourcebuild and other external requirements (month 2) 5dd
+
+- Instrumenting MSBuild with defined datapoints (month 3) 7dd
+
+- Creating dashboards/insights (month 4) 5dd
+
+- Documenting for customers how to hook their own telemetry collection (month 4) 3dd
+
+- Buffer for discovered issues (VSData Platform, SourceBuild, OpenTelemetry) and more investments (month 5) 5dd
diff --git a/documentation/wiki/ChangeWaves.md b/documentation/wiki/ChangeWaves.md
index 5df8c06508f..1dfe8a21f13 100644
--- a/documentation/wiki/ChangeWaves.md
+++ b/documentation/wiki/ChangeWaves.md
@@ -6,6 +6,7 @@ Opt-out is a better approach for us because we'd likely get limited feedback whe
 
 ## How do they work?
 The opt-out comes in the form of setting the environment variable `MSBUILDDISABLEFEATURESFROMVERSION` to the Change Wave (or version) that contains the feature you want **disabled**. This version happens to be the version of MSBuild that the features were developed for. See the mapping of change waves to features below.
+The opt-out should be just a *temporary* workaround for a problem - as the feature will anyways become permanent eventually. For this reason - **please make sure to create or upvote a bug describing the issue making you opt-out**.
 
 ## When do they become permanent?
 A wave of features is set to "rotate out" (i.e. become standard functionality) two bands after its release. For example, wave 16.8 stayed opt-out through wave 16.10, becoming standard functionality when wave 17.0 is introduced.
@@ -25,6 +26,7 @@ A wave of features is set to "rotate out" (i.e. become standard functionality) t
 
 ### 17.14
 - [.SLNX support - use the new parser for .sln and .slnx](https://github.com/dotnet/msbuild/pull/10836)
+- [Support custom culture in RAR](https://github.com/dotnet/msbuild/pull/11000)
 
 ### 17.12
 - [Log TaskParameterEvent for scalar parameters](https://github.com/dotnet/msbuild/pull/9908)
diff --git a/documentation/wiki/Interactions-with-the-internal-repository.md b/documentation/wiki/Interactions-with-the-internal-repository.md
index 916ac2bd78d..3720f6a23d5 100644
--- a/documentation/wiki/Interactions-with-the-internal-repository.md
+++ b/documentation/wiki/Interactions-with-the-internal-repository.md
@@ -2,9 +2,9 @@
 
 MSbuild got forked from an internal Microsoft repository. Although the Github repository is the official one, where development takes place, there are still some left-over connections to the internal one. This page attempts to document these.
 
-Changes to these files need to be migrated back into the internal repo because that's where they are localized:
-- [src/XMakeCommandLine/Microsoft.Build.Core.xsd](https://github.com/dotnet/msbuild/blob/main/src/XMakeCommandLine/Microsoft.Build.Core.xsd)
-- [src/XMakeCommandLine/Microsoft.Build.CommonTypes.xsd](https://github.com/dotnet/msbuild/blob/main/src/XMakeCommandLine/Microsoft.Build.CommonTypes.xsd)
+Changes to these files are automatically migrated back into the internal repo because that's where they are localized:
+- [src/XMakeCommandLine/Microsoft.Build.Core.xsd](https://github.com/dotnet/msbuild/blob/main/src/MSBuild/MSBuild/Microsoft.Build.Core.xsd)
+- [src/XMakeCommandLine/Microsoft.Build.CommonTypes.xsd](https://github.com/dotnet/msbuild/blob/main/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd)
 
 There should be no changes to the following files. They are shipped from the internal repo. The github ones are stale.
 - [all XamlRules](https://github.com/dotnet/msbuild/tree/main/src/XMakeTasks/XamlRules)
\ No newline at end of file
diff --git a/eng/TestAssets.targets b/eng/TestAssets.targets
index ba55fe7b907..797bd751c93 100644
--- a/eng/TestAssets.targets
+++ b/eng/TestAssets.targets
@@ -18,17 +18,20 @@
   </Target>
   
   <Target Name="MSBuildPackagesForTests"
-          AfterTargets="BootstrapFull"
+          AfterTargets="$(BootstrapDependsOn)"
           DependsOnTargets="GetSourceFilesForPacking"
           Inputs="@(ProjectsToPack);@(SourceFilesForPacking)"
           Outputs="$(ArtifactsNonShippingPackagesDir)\Microsoft.Build.$(Version).nupkg;$(ArtifactsNonShippingPackagesDir)\Microsoft.Build.Framework.$(Version).nupkg;$(ArtifactsNonShippingPackagesDir)\Microsoft.NET.StringTools.$(Version).nupkg">
     
-    <MSBuild Projects="@(ProjectsToPack)"
+<!--
+  Temporarily disabling the packing within bootstrap build, until #11090 is resolved
+<MSBuild Projects="@(ProjectsToPack)"
              Targets="Pack"
              Properties="PackageOutputPath=$(ArtifactsNonShippingPackagesDir);PackageVersion=$(PackageVersion)"
              BuildInParallel="true">
       <Output TaskParameter="TargetOutputs" ItemName="PackageOutputs" />
     </MSBuild>
+-->
     
   </Target>
 </Project>
diff --git a/eng/Version.Details.xml b/eng/Version.Details.xml
index 73882e1a675..c64ab81a7b8 100644
--- a/eng/Version.Details.xml
+++ b/eng/Version.Details.xml
@@ -2,9 +2,9 @@
 <Dependencies>
   <ProductDependencies>
     <!-- Intermediate is necessary for source build. -->
-    <Dependency Name="Microsoft.SourceBuild.Intermediate.source-build-reference-packages" Version="9.0.0-alpha.1.24517.1">
+    <Dependency Name="Microsoft.SourceBuild.Intermediate.source-build-reference-packages" Version="9.0.0-alpha.1.24619.1">
       <Uri>https://github.com/dotnet/source-build-reference-packages</Uri>
-      <Sha>a2ad736b86ce484df4d2dfc967bd29cd9d1b5de9</Sha>
+      <Sha>e2b1d16fd66540b3a5813ec0ac1fd166688c3e0a</Sha>
       <SourceBuild RepoName="source-build-reference-packages" ManagedOnly="true" />
     </Dependency>
     <!-- Necessary for source-build. This allows the live version of the package to be used by source-build. -->
@@ -71,36 +71,36 @@
     </Dependency>
   </ProductDependencies>
   <ToolsetDependencies>
-    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="9.0.0-beta.24516.2">
+    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="9.0.0-beta.24572.2">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>3c393bbd85ae16ddddba20d0b75035b0c6f1a52d</Sha>
+      <Sha>b41381d5cd633471265e9cd72e933a7048e03062</Sha>
     </Dependency>
     <!-- Intermediate is necessary for source build. -->
-    <Dependency Name="Microsoft.SourceBuild.Intermediate.arcade" Version="9.0.0-beta.24516.2">
+    <Dependency Name="Microsoft.SourceBuild.Intermediate.arcade" Version="9.0.0-beta.24572.2">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>3c393bbd85ae16ddddba20d0b75035b0c6f1a52d</Sha>
+      <Sha>b41381d5cd633471265e9cd72e933a7048e03062</Sha>
       <SourceBuild RepoName="arcade" ManagedOnly="true" />
     </Dependency>
-    <Dependency Name="Microsoft.DotNet.XliffTasks" Version="9.0.0-beta.24516.2">
+    <Dependency Name="Microsoft.DotNet.XliffTasks" Version="9.0.0-beta.24572.2">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>3c393bbd85ae16ddddba20d0b75035b0c6f1a52d</Sha>
+      <Sha>b41381d5cd633471265e9cd72e933a7048e03062</Sha>
     </Dependency>
-    <Dependency Name="NuGet.Build.Tasks" Version="6.13.0-preview.1.52">
+    <Dependency Name="NuGet.Build.Tasks" Version="6.13.0-rc.106">
       <Uri>https://github.com/nuget/nuget.client</Uri>
-      <Sha>edb1d2f0a148e80a1b2c86bc930ca55f09635aa4</Sha>
+      <Sha>949031c79ea7f5c15b59f31e26d5355fb23795ca</Sha>
     </Dependency>
-    <Dependency Name="Microsoft.Net.Compilers.Toolset" Version="4.13.0-2.24557.8">
+    <Dependency Name="Microsoft.Net.Compilers.Toolset" Version="4.13.0-3.24614.4">
       <Uri>https://github.com/dotnet/roslyn</Uri>
-      <Sha>8fd7f94b052e88f2360cd0b6e81f75220fad8771</Sha>
+      <Sha>633f34af4fe019eaf0c2e830bdc07c891ecd49f7</Sha>
     </Dependency>
-    <Dependency Name="Microsoft.SourceBuild.Intermediate.roslyn" Version="4.13.0-2.24557.8">
+    <Dependency Name="Microsoft.SourceBuild.Intermediate.roslyn" Version="4.13.0-3.24614.4">
       <Uri>https://github.com/dotnet/roslyn</Uri>
-      <Sha>8fd7f94b052e88f2360cd0b6e81f75220fad8771</Sha>
+      <Sha>633f34af4fe019eaf0c2e830bdc07c891ecd49f7</Sha>
       <SourceBuild RepoName="roslyn" ManagedOnly="true" />
     </Dependency>
-    <Dependency Name="Microsoft.DotNet.XUnitExtensions" Version="9.0.0-beta.24516.2">
+    <Dependency Name="Microsoft.DotNet.XUnitExtensions" Version="9.0.0-beta.24572.2">
       <Uri>https://github.com/dotnet/arcade</Uri>
-      <Sha>3c393bbd85ae16ddddba20d0b75035b0c6f1a52d</Sha>
+      <Sha>b41381d5cd633471265e9cd72e933a7048e03062</Sha>
     </Dependency>
   </ToolsetDependencies>
 </Dependencies>
diff --git a/eng/Versions.props b/eng/Versions.props
index 63339376b4d..e8973451aaa 100644
--- a/eng/Versions.props
+++ b/eng/Versions.props
@@ -2,8 +2,8 @@
 <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
 <Project>
   <PropertyGroup>
-    <VersionPrefix>17.13.0</VersionPrefix>
-    <PackageValidationBaselineVersion>17.12.6</PackageValidationBaselineVersion>
+    <VersionPrefix>17.14.0</VersionPrefix>
+    <PackageValidationBaselineVersion>17.13.0-preview-24611-01</PackageValidationBaselineVersion>
     <AssemblyVersion>15.1.0.0</AssemblyVersion>
     <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
     <DotNetUseShippingVersions>true</DotNetUseShippingVersions>
@@ -20,23 +20,34 @@
     <UsingToolVSSDK>true</UsingToolVSSDK>
   </PropertyGroup>
   <!-- Production Dependencies -->
-  <PropertyGroup>
-    <MicrosoftIORedistVersion>6.0.1</MicrosoftIORedistVersion>
-    <MicrosoftVisualStudioSolutionPersistenceVersion>1.0.9</MicrosoftVisualStudioSolutionPersistenceVersion>
-    <SystemCollectionsImmutableVersion>8.0.0</SystemCollectionsImmutableVersion>
-    <SystemConfigurationConfigurationManagerVersion>8.0.0</SystemConfigurationConfigurationManagerVersion>
-    <SystemFormatsAsn1Version>8.0.1</SystemFormatsAsn1Version>
+  <!-- Condition consumption of maintenance-packages dependencies based on source build.
+       This is to prevent "package downgrade" errors coming from other packages that are
+       already consuming the newest version of these same dependencies. -->
+  <PropertyGroup Condition="'$(DotNetBuildSourceOnly)' == 'true'">
+    <!-- Use newest package versions. -->
+    <SystemMemoryVersion>4.6.0</SystemMemoryVersion>
+    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(DotNetBuildSourceOnly)' != 'true'">
+    <!-- Keep using older versions. Upgrade carefully. -->
     <!--
         Modifying the version of System.Memory is very high impact and causes downstream breaks in third-party tooling that uses the MSBuild API.
         When updating the version of System.Memory file a breaking change here: https://github.com/dotnet/docs/issues/new?assignees=gewarren&labels=breaking-change%2CPri1%2Cdoc-idea&template=breaking-change.yml&title=%5BBreaking+change%5D%3A+
         and follow the guidelines written here (internal-link): https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/1796/How-to-add-a-Known-Issue
     -->
     <SystemMemoryVersion>4.5.5</SystemMemoryVersion>
+    <SystemRuntimeCompilerServicesUnsafeVersion>6.0.0</SystemRuntimeCompilerServicesUnsafeVersion>
+  </PropertyGroup>
+  <PropertyGroup>
+    <MicrosoftIORedistVersion>6.0.1</MicrosoftIORedistVersion>
+    <MicrosoftVisualStudioSolutionPersistenceVersion>1.0.9</MicrosoftVisualStudioSolutionPersistenceVersion>
+    <SystemCollectionsImmutableVersion>8.0.0</SystemCollectionsImmutableVersion>
+    <SystemConfigurationConfigurationManagerVersion>8.0.0</SystemConfigurationConfigurationManagerVersion>
+    <SystemFormatsAsn1Version>8.0.1</SystemFormatsAsn1Version>
     <SystemNetHttpVersion>4.3.4</SystemNetHttpVersion>
     <SystemReflectionMetadataLoadContextVersion>8.0.0</SystemReflectionMetadataLoadContextVersion>
     <SystemReflectionMetadataVersion>8.0.0</SystemReflectionMetadataVersion>
     <SystemResourcesExtensionsVersion>8.0.0</SystemResourcesExtensionsVersion>
-    <SystemRuntimeCompilerServicesUnsafeVersion>6.0.0</SystemRuntimeCompilerServicesUnsafeVersion>
     <SystemSecurityPrincipalWindowsVersion>5.0.0</SystemSecurityPrincipalWindowsVersion>
     <SystemTextEncodingCodePagesVersion>7.0.0</SystemTextEncodingCodePagesVersion>
     <SystemTextRegularExpressionsVersion>4.3.1</SystemTextRegularExpressionsVersion>
@@ -50,12 +61,12 @@
          Otherwise, this version of dotnet will not be installed and the build will error out. -->
     <DotNetCliVersion>$([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)..\global.json')), '"dotnet": "([^"]*)"').Groups.get_Item(1))</DotNetCliVersion>
     <MicrosoftCodeAnalysisCollectionsVersion>4.2.0-1.22102.8</MicrosoftCodeAnalysisCollectionsVersion>
-    <MicrosoftDotNetXUnitExtensionsVersion>9.0.0-beta.24516.2</MicrosoftDotNetXUnitExtensionsVersion>
-    <MicrosoftNetCompilersToolsetVersion>4.13.0-2.24557.8</MicrosoftNetCompilersToolsetVersion>
-    <NuGetBuildTasksVersion>6.13.0-preview.1.52</NuGetBuildTasksVersion>
+    <MicrosoftDotNetXUnitExtensionsVersion>9.0.0-beta.24572.2</MicrosoftDotNetXUnitExtensionsVersion>
+    <MicrosoftNetCompilersToolsetVersion>4.13.0-3.24614.4</MicrosoftNetCompilersToolsetVersion>
+    <NuGetBuildTasksVersion>6.13.0-rc.106</NuGetBuildTasksVersion>
   </PropertyGroup>
   <PropertyGroup Condition="!$(TargetFramework.StartsWith('net4'))">
-    <BootstrapSdkVersion>9.0.200-preview.0.24523.19</BootstrapSdkVersion>
+    <BootstrapSdkVersion>9.0.200-preview.0.24603.3</BootstrapSdkVersion>
   </PropertyGroup>
   <Target Name="OverrideArcadeFileVersion" AfterTargets="_InitializeAssemblyVersion">
     <!-- See https://github.com/dotnet/arcade/issues/3386
diff --git a/eng/common/sdk-task.ps1 b/eng/common/sdk-task.ps1
index aab40de3fd9..4f0546dce12 100644
--- a/eng/common/sdk-task.ps1
+++ b/eng/common/sdk-task.ps1
@@ -64,7 +64,7 @@ try {
       $GlobalJson.tools | Add-Member -Name "vs" -Value (ConvertFrom-Json "{ `"version`": `"16.5`" }") -MemberType NoteProperty
     }
     if( -not ($GlobalJson.tools.PSObject.Properties.Name -match "xcopy-msbuild" )) {
-      $GlobalJson.tools | Add-Member -Name "xcopy-msbuild" -Value "17.10.0-pre.4.0" -MemberType NoteProperty
+      $GlobalJson.tools | Add-Member -Name "xcopy-msbuild" -Value "17.12.0" -MemberType NoteProperty
     }
     if ($GlobalJson.tools."xcopy-msbuild".Trim() -ine "none") {
         $xcopyMSBuildToolsFolder = InitializeXCopyMSBuild $GlobalJson.tools."xcopy-msbuild" -install $true
diff --git a/eng/common/sdl/NuGet.config b/eng/common/sdl/NuGet.config
index 5bfbb02ef04..3849bdb3cf5 100644
--- a/eng/common/sdl/NuGet.config
+++ b/eng/common/sdl/NuGet.config
@@ -5,11 +5,11 @@
   </solution>
   <packageSources>
     <clear />
-    <add key="guardian" value="https://pkgs.dev.azure.com/dnceng/_packaging/Guardian1ESPTUpstreamOrgFeed/nuget/v3/index.json" />
+    <add key="guardian" value="https://securitytools.pkgs.visualstudio.com/_packaging/Guardian/nuget/v3/index.json" />
   </packageSources>
   <packageSourceMapping>
     <packageSource key="guardian">
-      <package pattern="Microsoft.Guardian.Cli.win-x64" />
+      <package pattern="microsoft.guardian.cli" />
     </packageSource>
   </packageSourceMapping>
   <disabledPackageSources>
diff --git a/eng/common/sdl/execute-all-sdl-tools.ps1 b/eng/common/sdl/execute-all-sdl-tools.ps1
index 81ded5b7f47..4715d75e974 100644
--- a/eng/common/sdl/execute-all-sdl-tools.ps1
+++ b/eng/common/sdl/execute-all-sdl-tools.ps1
@@ -6,6 +6,7 @@ Param(
   [string] $BranchName=$env:BUILD_SOURCEBRANCH,                                                  # Optional: name of branch or version of gdn settings; defaults to master
   [string] $SourceDirectory=$env:BUILD_SOURCESDIRECTORY,                                         # Required: the directory where source files are located
   [string] $ArtifactsDirectory = (Join-Path $env:BUILD_ARTIFACTSTAGINGDIRECTORY ('artifacts')),  # Required: the directory where build artifacts are located
+  [string] $AzureDevOpsAccessToken,                                                              # Required: access token for dnceng; should be provided via KeyVault
 
   # Optional: list of SDL tools to run on source code. See 'configure-sdl-tool.ps1' for tools list
   # format.
@@ -74,7 +75,7 @@ try {
   }
 
   Exec-BlockVerbosely {
-    & $(Join-Path $PSScriptRoot 'init-sdl.ps1') -GuardianCliLocation $guardianCliLocation -Repository $RepoName -BranchName $BranchName -WorkingDirectory $workingDirectory -GuardianLoggerLevel $GuardianLoggerLevel
+    & $(Join-Path $PSScriptRoot 'init-sdl.ps1') -GuardianCliLocation $guardianCliLocation -Repository $RepoName -BranchName $BranchName -WorkingDirectory $workingDirectory -AzureDevOpsAccessToken $AzureDevOpsAccessToken -GuardianLoggerLevel $GuardianLoggerLevel
   }
   $gdnFolder = Join-Path $workingDirectory '.gdn'
 
@@ -103,6 +104,7 @@ try {
           -TargetDirectory $targetDirectory `
           -GdnFolder $gdnFolder `
           -ToolsList $tools `
+          -AzureDevOpsAccessToken $AzureDevOpsAccessToken `
           -GuardianLoggerLevel $GuardianLoggerLevel `
           -CrScanAdditionalRunConfigParams $CrScanAdditionalRunConfigParams `
           -PoliCheckAdditionalRunConfigParams $PoliCheckAdditionalRunConfigParams `
diff --git a/eng/common/sdl/init-sdl.ps1 b/eng/common/sdl/init-sdl.ps1
index 588ff8e22fb..3ac1d92b370 100644
--- a/eng/common/sdl/init-sdl.ps1
+++ b/eng/common/sdl/init-sdl.ps1
@@ -3,6 +3,7 @@ Param(
   [string] $Repository,
   [string] $BranchName='master',
   [string] $WorkingDirectory,
+  [string] $AzureDevOpsAccessToken,
   [string] $GuardianLoggerLevel='Standard'
 )
 
@@ -20,7 +21,14 @@ $ci = $true
 # Don't display the console progress UI - it's a huge perf hit
 $ProgressPreference = 'SilentlyContinue'
 
+# Construct basic auth from AzDO access token; construct URI to the repository's gdn folder stored in that repository; construct location of zip file
+$encodedPat = [Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(":$AzureDevOpsAccessToken"))
+$escapedRepository = [Uri]::EscapeDataString("/$Repository/$BranchName/.gdn")
+$uri = "https://dev.azure.com/dnceng/internal/_apis/git/repositories/sdl-tool-cfg/Items?path=$escapedRepository&versionDescriptor[versionOptions]=0&`$format=zip&api-version=5.0"
+$zipFile = "$WorkingDirectory/gdn.zip"
+
 Add-Type -AssemblyName System.IO.Compression.FileSystem
+$gdnFolder = (Join-Path $WorkingDirectory '.gdn')
 
 try {
   # if the folder does not exist, we'll do a guardian init and push it to the remote repository
diff --git a/eng/common/sdl/sdl.ps1 b/eng/common/sdl/sdl.ps1
index 7fe603fe995..648c5068d7d 100644
--- a/eng/common/sdl/sdl.ps1
+++ b/eng/common/sdl/sdl.ps1
@@ -4,8 +4,6 @@ function Install-Gdn {
         [Parameter(Mandatory=$true)]
         [string]$Path,
 
-        [string]$Source = "https://pkgs.dev.azure.com/dnceng/_packaging/Guardian1ESPTUpstreamOrgFeed/nuget/v3/index.json",
-
         # If omitted, install the latest version of Guardian, otherwise install that specific version.
         [string]$Version
     )
@@ -21,7 +19,7 @@ function Install-Gdn {
     $ci = $true
     . $PSScriptRoot\..\tools.ps1
 
-    $argumentList = @("install", "Microsoft.Guardian.Cli.win-x64", "-Source $Source", "-OutputDirectory $Path", "-NonInteractive", "-NoCache")
+    $argumentList = @("install", "Microsoft.Guardian.Cli", "-Source https://securitytools.pkgs.visualstudio.com/_packaging/Guardian/nuget/v3/index.json", "-OutputDirectory $Path", "-NonInteractive", "-NoCache")
 
     if ($Version) {
         $argumentList += "-Version $Version"
diff --git a/eng/common/templates-official/steps/get-delegation-sas.yml b/eng/common/templates-official/steps/get-delegation-sas.yml
index bd4f01e64ce..c5a9c1f8275 100644
--- a/eng/common/templates-official/steps/get-delegation-sas.yml
+++ b/eng/common/templates-official/steps/get-delegation-sas.yml
@@ -4,4 +4,4 @@ steps:
     is1ESPipeline: true
 
     ${{ each parameter in parameters }}:
-      ${{ parameter.key }}: ${{ parameter.value }}
\ No newline at end of file
+      ${{ parameter.key }}: ${{ parameter.value }}
diff --git a/eng/common/templates/steps/get-delegation-sas.yml b/eng/common/templates/steps/get-delegation-sas.yml
index 808f3174635..83760c9798e 100644
--- a/eng/common/templates/steps/get-delegation-sas.yml
+++ b/eng/common/templates/steps/get-delegation-sas.yml
@@ -4,4 +4,4 @@ steps:
     is1ESPipeline: false
 
     ${{ each parameter in parameters }}:
-      ${{ parameter.key }}: ${{ parameter.value }}
\ No newline at end of file
+      ${{ parameter.key }}: ${{ parameter.value }}
diff --git a/eng/common/tools.ps1 b/eng/common/tools.ps1
index 22954477a57..aa94fb17459 100644
--- a/eng/common/tools.ps1
+++ b/eng/common/tools.ps1
@@ -383,8 +383,8 @@ function InitializeVisualStudioMSBuild([bool]$install, [object]$vsRequirements =
 
   # If the version of msbuild is going to be xcopied,
   # use this version. Version matches a package here:
-  # https://dev.azure.com/dnceng/public/_artifacts/feed/dotnet-eng/NuGet/Microsoft.DotNet.Arcade.MSBuild.Xcopy/versions/17.10.0-pre.4.0
-  $defaultXCopyMSBuildVersion = '17.10.0-pre.4.0'
+  # https://dev.azure.com/dnceng/public/_artifacts/feed/dotnet-eng/NuGet/Microsoft.DotNet.Arcade.MSBuild.Xcopy/versions/17.12.0
+  $defaultXCopyMSBuildVersion = '17.12.0'
 
   if (!$vsRequirements) {
     if (Get-Member -InputObject $GlobalJson.tools -Name 'vs') {
diff --git a/eng/dependabot/Packages.props b/eng/dependabot/Packages.props
index 4aab28833bb..7393d570b66 100644
--- a/eng/dependabot/Packages.props
+++ b/eng/dependabot/Packages.props
@@ -19,7 +19,7 @@
     <PackageVersion Include="LargeAddressAware" Version="1.0.5" />
     <PackageVersion Update="LargeAddressAware" Condition="'$(LargeAddressAwareVersion)' != ''" Version="$(LargeAddressAwareVersion)" />
 
-    <PackageVersion Include="Microsoft.BuildXL.Processes" Version="0.1.0-20240606.3" />
+    <PackageVersion Include="Microsoft.BuildXL.Processes" Version="0.1.0-20241105.3" />
     <PackageVersion Update="Microsoft.BuildXL.Processes" Condition="'$(BuildXLProcessesVersion)' != ''" Version="$(BuildXLProcessesVersion)" />
 
     <PackageVersion Include="Microsoft.VisualStudio.Setup.Configuration.Interop" Version="3.8.2112" />
diff --git a/global.json b/global.json
index 03cd1994123..ce078f63210 100644
--- a/global.json
+++ b/global.json
@@ -3,13 +3,13 @@
     "allowPrerelease": true
   },
   "tools": {
-    "dotnet": "9.0.100-rc.2.24474.11",
+    "dotnet": "9.0.100",
     "vs": {
-      "version": "17.10.0"
+      "version": "17.12.0"
     },
-    "xcopy-msbuild": "17.10.0-pre.4.0"
+    "xcopy-msbuild": "17.12.0"
   },
   "msbuild-sdks": {
-    "Microsoft.DotNet.Arcade.Sdk": "9.0.0-beta.24516.2"
+    "Microsoft.DotNet.Arcade.Sdk": "9.0.0-beta.24572.2"
   }
 }
diff --git a/src/Build.OM.UnitTests/Definition/Project_Tests.cs b/src/Build.OM.UnitTests/Definition/Project_Tests.cs
index c08c7f83bf7..42b01b5496e 100644
--- a/src/Build.OM.UnitTests/Definition/Project_Tests.cs
+++ b/src/Build.OM.UnitTests/Definition/Project_Tests.cs
@@ -4244,6 +4244,55 @@ public void ProjectTargetNamesAreEnumerable()
             project.Targets.Keys.ShouldBe(new[] { "t" });
         }
 
+        /// <summary>
+        /// Test that the ImportedProjectNotFound error message
+        /// contains the unevaluated value of the project attribute.
+        /// </summary>
+        [Fact]
+        public void ImportNotFound()
+        {
+            const string PropertyName = "SomeProperty";
+            const string PropertyValue = "Import";
+            const string ImportValue = $"$({PropertyName})DoesNotExist";
+            const string ErrorCode = "MSB4019"; // ImportedProjectNotFound
+
+            string file = null;
+
+            try
+            {
+                using ProjectCollection collection = new ProjectCollection();
+                MockLogger logger = new MockLogger();
+                collection.RegisterLogger(logger);
+
+                Project project = new Project(collection);
+                project.Xml.AddProperty(PropertyName, PropertyValue);
+                project.Xml.AddImport(ImportValue);
+
+                file = FileUtilities.GetTemporaryFileName();
+                project.Save(file);
+
+                Assert.Throws<InvalidProjectFileException>(() => project.ReevaluateIfNecessary());
+
+                // Find and test the error event record.
+                // logger.AssertLogContains() will find multiple strings but not within the same line
+                bool hasErrorCode = false;
+                foreach (var error in logger.Errors)
+                {
+                    if (error.Code == ErrorCode)
+                    {
+                        hasErrorCode = true;
+                        Assert.Contains(ImportValue, error.Message);
+                        break;
+                    }
+                }
+                Assert.True(hasErrorCode);
+            }
+            finally
+            {
+                File.Delete(file);
+            }
+        }
+
         private static void AssertGlobResult(GlobResultList expected, string project)
         {
             var globs = ObjectModelHelpers.CreateInMemoryProject(project).GetAllGlobs();
diff --git a/src/Build.UnitTests/BackEnd/NodePackets_Tests.cs b/src/Build.UnitTests/BackEnd/NodePackets_Tests.cs
index c249a953174..d98332159c9 100644
--- a/src/Build.UnitTests/BackEnd/NodePackets_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/NodePackets_Tests.cs
@@ -289,31 +289,31 @@ public void TestTranslation()
                     CreateTargetSkipped(),
                     new ExtendedBuildErrorEventArgs("extError", "SubCategoryForSchemaValidationErrors", "MSB4000", "file", 1, 2, 3, 4, "message", "help", "sender", DateTime.UtcNow, "arg1")
                     {
-                        ExtendedData = "{'long-json':'mostly-strings'}",
+                        ExtendedData = /*lang=json*/ "{'long-json':'mostly-strings'}",
                         ExtendedMetadata = new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } },
                         BuildEventContext = new BuildEventContext(1, 2, 3, 4, 5, 6, 7)
                     },
                     new ExtendedBuildWarningEventArgs("extWarn", "SubCategoryForSchemaValidationErrors", "MSB4000", "file", 1, 2, 3, 4, "message", "help", "sender", DateTime.UtcNow, "arg1")
                     {
-                        ExtendedData = "{'long-json':'mostly-strings'}",
+                        ExtendedData = /*lang=json*/ "{'long-json':'mostly-strings'}",
                         ExtendedMetadata = new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } },
                         BuildEventContext = new BuildEventContext(1, 2, 3, 4, 5, 6, 7)
                     },
                     new ExtendedBuildMessageEventArgs("extWarn", "SubCategoryForSchemaValidationErrors", "MSB4000", "file", 1, 2, 3, 4, "message", "help", "sender", MessageImportance.Normal, DateTime.UtcNow, "arg1")
                     {
-                        ExtendedData = "{'long-json':'mostly-strings'}",
+                        ExtendedData = /*lang=json*/ "{'long-json':'mostly-strings'}",
                         ExtendedMetadata = new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } },
                         BuildEventContext = new BuildEventContext(1, 2, 3, 4, 5, 6, 7)
                     },
                     new ExtendedCustomBuildEventArgs("extCustom", "message", "help", "sender", DateTime.UtcNow, "arg1")
                     {
-                        ExtendedData = "{'long-json':'mostly-strings'}",
+                        ExtendedData = /*lang=json*/ "{'long-json':'mostly-strings'}",
                         ExtendedMetadata = new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } },
                         BuildEventContext = new BuildEventContext(1, 2, 3, 4, 5, 6, 7)
                     },
                     new ExtendedCriticalBuildMessageEventArgs("extCritMsg", "Subcategory", "Code", "File", 1, 2, 3, 4, "{0}", "HelpKeyword", "Sender", DateTime.Now, "arg1")
                     {
-                        ExtendedData = "{'long-json':'mostly-strings'}",
+                        ExtendedData = /*lang=json*/ "{'long-json':'mostly-strings'}",
                         ExtendedMetadata = new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } },
                         BuildEventContext = new BuildEventContext(1, 2, 3, 4, 5, 6, 7)
                     },
diff --git a/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs b/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
index 62e842a2558..4a891408cc9 100644
--- a/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/SdkResolverService_Tests.cs
@@ -3,9 +3,11 @@
 
 using System;
 using System.Collections.Generic;
+using System.Configuration;
 using System.Diagnostics.Tracing;
 using System.Linq;
 using System.Text.RegularExpressions;
+using System.Threading;
 using System.Threading.Tasks;
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.BackEnd.SdkResolution;
@@ -25,7 +27,7 @@
 
 namespace Microsoft.Build.Engine.UnitTests.BackEnd
 {
-    public class SdkResolverService_Tests : IDisposable
+    public class SdkResolverService_Tests
     {
         private readonly MockLogger _logger;
         private readonly LoggingContext _loggingContext;
@@ -41,20 +43,16 @@ public SdkResolverService_Tests()
                 new BuildEventContext(0, 0, BuildEventContext.InvalidProjectContextId, 0, 0));
         }
 
-        public void Dispose()
-        {
-            SdkResolverService.Instance.InitializeForTests();
-        }
-
         [Fact]
         // Scenario: Sdk is not resolved.
         public void AssertAllResolverErrorsLoggedWhenSdkNotResolved()
         {
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeResolversWithPatterns: true));
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy(includeResolversWithPatterns: true));
 
             SdkReference sdk = new SdkReference("notfound", "referencedVersion", "minimumVersion");
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Success.ShouldBeFalse();
             result.ShouldNotBeNull();
@@ -84,7 +82,8 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi
         {
             var sdk = new SdkReference("foo", "1.0.0", null);
 
-            SdkResolverService.Instance.InitializeForTests(
+            var service = new SdkResolverService();
+            service.InitializeForTests(
                 null,
                 new List<SdkResolver>
                 {
@@ -96,7 +95,7 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi
                             Enumerable.Empty<string>()))
                 });
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Path.ShouldBe("path");
 
@@ -107,12 +106,13 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi
         [Fact]
         public void AssertResolverThrows()
         {
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeErrorResolver: true));
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy(includeErrorResolver: true));
 
             SdkReference sdk = new SdkReference("1sdkName", "version1", "minimumVersion");
 
             // When an SDK resolver throws, the expander will catch it and stop the build.
-            SdkResolverException e = Should.Throw<SdkResolverException>(() => SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true));
+            SdkResolverException e = Should.Throw<SdkResolverException>(() => service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true));
             e.Resolver.Name.ShouldBe("MockSdkResolverThrows");
             e.Sdk.Name.ShouldBe("1sdkName");
         }
@@ -122,11 +122,12 @@ public void AssertResolverThrows()
         // and it successfully resolves sdk.
         public void AssertSecondResolverWithPatternCanResolve()
         {
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeResolversWithPatterns: true));
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy(includeResolversWithPatterns: true));
 
             SdkReference sdk = new SdkReference("2sdkName", "referencedVersion", "minimumVersion");
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Path.ShouldBe("resolverpathwithresolvablesdkpattern2");
             _logger.BuildMessageEvents.Select(i => i.Message).ShouldContain("MockSdkResolverWithResolvableSdkPattern2 running");
@@ -134,16 +135,63 @@ public void AssertSecondResolverWithPatternCanResolve()
             _logger.BuildMessageEvents.Select(i => i.Message).ShouldNotContain("MockSdkResolver2 running");
         }
 
+#if DEBUG
+        internal string TryResolveSdk(SdkResolverService service)
+        {
+            var message = "";
+            SdkReference sdk = new SdkReference("2sdkName", "referencedVersion", "minimumVersion");
+            try
+            {
+                service.ResolveSdk(BuildEventContext.InvalidSubmissionId,
+                                                        sdk,
+                                                        _loggingContext,
+                                                        new MockElementLocation("file"),
+                                                        "sln",
+                                                        "projectPath",
+                                                        interactive: false,
+                                                        isRunningInVisualStudio: false,
+                                                        failOnUnresolvedSdk: true);
+            }
+            catch (Exception e)
+            {
+                message = e.ToString();
+            }
+            return message;
+        }
+
+
+        [Fact]
+        // Scenario: we want to test that we solved the contention described here: https://github.com/dotnet/msbuild/issues/7927#issuecomment-1232470838
+        public async Task AssertResolverPopulationContentionNotPresent()
+        {
+            var service = new SdkResolverServiceTextExtension();
+            service.InitializeForTests(new MockLoaderStrategy(includeResolversWithPatterns: true));
+
+            SdkReference sdk = new SdkReference("2sdkName", "referencedVersion", "minimumVersion");
+
+            var res1 = Task.Run(() => TryResolveSdk(service));
+
+            Thread.Sleep(200);
+            var res2 = Task.Run(() => TryResolveSdk(service));
+            string message1 = await res1;
+            string message2 = await res2;
+
+            Assert.Equal("", message1);
+            Assert.Equal("", message2);
+        }
+#endif
+
         [Fact]
         // Scenario: MockSdkResolverWithResolvableSdkPattern1 is a specific resolver, it is loaded but did not resolve sdk.
         // MockSdkResolver1 is a general resolver (i.e. resolver without pattern), it resolves sdk on a fallback.
         public void AssertFirstResolverCanResolve()
         {
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy());
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy());
 
             SdkReference sdk = new SdkReference("1sdkName", "referencedVersion", "minimumVersion");
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Path.ShouldBe("resolverpath1");
             _logger.BuildMessageEvents.Select(i => i.Message).ShouldContain("MockSdkResolver1 running");
@@ -155,11 +203,12 @@ public void AssertFirstResolverCanResolve()
         // becuase MockSdkResolver1 is general and MockSdkResolverWithResolvableSdkPattern1 is specific.
         public void AssertFirstResolverWithPatternCanResolve()
         {
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(includeResolversWithPatterns: true));
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy(includeResolversWithPatterns: true));
 
             SdkReference sdk = new SdkReference("11sdkName", "referencedVersion", "minimumVersion");
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Path.ShouldBe("resolverpathwithresolvablesdkpattern1");
             _logger.BuildMessageEvents.Select(i => i.Message).ShouldContain("MockSdkResolverWithResolvableSdkPattern1 running");
@@ -169,10 +218,11 @@ public void AssertFirstResolverWithPatternCanResolve()
         [Fact]
         public void AssertSdkResolutionMessagesAreLogged()
         {
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy());
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy());
             SdkReference sdk = new SdkReference("1sdkName", "referencedVersion", "minimumVersion");
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             // First resolver attempted to resolve, but failed.
             _logger.BuildMessageEvents.Select(i => i.Message).ShouldContain(ResourceUtilities.FormatResourceStringStripCodeAndKeyword("SDKResolverAttempt", nameof(MockResolverReturnsNull), sdk.ToString(), "null",
@@ -185,11 +235,12 @@ public void AssertSdkResolutionMessagesAreLogged()
         public void AssertSdkResolutionMessagesAreLoggedInEventSource()
         {
             using var eventSourceTestListener = new EventSourceTestHelper();
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy(false, false, true));
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy(false, false, true));
             var sdkName = Guid.NewGuid().ToString();
             SdkReference sdk = new SdkReference(sdkName, "referencedVersion", "minimumVersion");
 
-            SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
             var eventsLogged = eventSourceTestListener.GetEvents();
             eventsLogged.ShouldContain(x => x.EventId == 64); // Start of the sdk resolve
             eventsLogged.ShouldContain(x => x.EventId == 65 && x.Payload[1].ToString() == sdkName);
@@ -198,13 +249,14 @@ public void AssertSdkResolutionMessagesAreLoggedInEventSource()
         [Fact]
         public void AssertFirstResolverErrorsSupressedWhenResolved()
         {
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy());
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy());
 
             // 2sdkName will cause MockSdkResolver1 to fail with an error reason. The error will not
             // be logged because MockSdkResolver2 will succeed.
             SdkReference sdk = new SdkReference("2sdkName", "version2", "minimumVersion");
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Path.ShouldBe("resolverpath2");
 
@@ -222,15 +274,16 @@ public void AssertResolverHasStatePreserved()
         {
             const int submissionId = 5;
 
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy());
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy());
 
             SdkReference sdk = new SdkReference("othersdk", "1.0", "minimumVersion");
 
             // First call should not know state
-            SdkResolverService.Instance.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("resolverpath");
+            service.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("resolverpath");
 
             // Second call should have received state
-            SdkResolverService.Instance.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe(MockSdkResolverWithState.Expected);
+            service.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe(MockSdkResolverWithState.Expected);
         }
 
         [Fact]
@@ -238,15 +291,16 @@ public void AssertResolverStateNotPreserved()
         {
             const int submissionId = BuildEventContext.InvalidSubmissionId;
 
-            SdkResolverService.Instance.InitializeForTests(new MockLoaderStrategy());
+            var service = new SdkResolverService();
+            service.InitializeForTests(new MockLoaderStrategy());
 
             SdkReference sdk = new SdkReference("othersdk", "1.0", "minimumVersion");
 
             // First call should not know state
-            SdkResolverService.Instance.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("resolverpath");
+            service.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("resolverpath");
 
             // Second call should have received state
-            SdkResolverService.Instance.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("resolverpath");
+            service.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("resolverpath");
         }
 
         [Fact]
@@ -255,11 +309,12 @@ public void AssertResolversLoadedIfDefaultResolverSucceeds()
             const int submissionId = BuildEventContext.InvalidSubmissionId;
 
             MockLoaderStrategy mockLoaderStrategy = new MockLoaderStrategy(includeDefaultResolver: true);
-            SdkResolverService.Instance.InitializeForTests(mockLoaderStrategy);
+            var service = new SdkResolverService();
+            service.InitializeForTests(mockLoaderStrategy);
 
             SdkReference sdk = new SdkReference("notfound", "1.0", "minimumVersion");
 
-            SdkResolverService.Instance.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("defaultpath");
+            service.ResolveSdk(submissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true).Path.ShouldBe("defaultpath");
 
 #if NETCOREAPP
             // On Core, we check the default resolver *first*, so regular resolvers are not loaded.
@@ -388,9 +443,10 @@ public void SdkResolverCanReturnNoPaths(bool includePropertiesAndItems)
                     itemsToAdd,
                     warnings: null));
 
-            SdkResolverService.Instance.InitializeForTests(null, new List<SdkResolver>() { resolver });
+            var service = new SdkResolverService();
+            service.InitializeForTests(null, new List<SdkResolver>() { resolver });
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Success.ShouldBeTrue();
             result.Path.ShouldBeNull();
@@ -424,9 +480,10 @@ public void SdkResultCanReturnPropertiesAndItems()
                     itemsToAdd,
                     warnings: null));
 
-            SdkResolverService.Instance.InitializeForTests(null, new List<SdkResolver>() { resolver });
+            var service = new SdkResolverService();
+            service.InitializeForTests(null, new List<SdkResolver>() { resolver });
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Success.ShouldBeTrue();
             result.Path.ShouldBe(expectedPath);
@@ -470,9 +527,10 @@ public void SdkResultCanReturnMultiplePaths(bool includePropertiesAndItems)
                     itemsToAdd,
                     warnings: null));
 
-            SdkResolverService.Instance.InitializeForTests(null, new List<SdkResolver>() { resolver });
+            var service = new SdkResolverService();
+            service.InitializeForTests(null, new List<SdkResolver>() { resolver });
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Success.ShouldBeTrue();
 
@@ -515,9 +573,10 @@ public void AssertResolutionWarnsIfResolvedVersionIsDifferentFromReferencedVersi
                     itemsToAdd,
                     warnings: null));
 
-            SdkResolverService.Instance.InitializeForTests(null, new List<SdkResolver>() { resolver });
+            var service = new SdkResolverService();
+            service.InitializeForTests(null, new List<SdkResolver>() { resolver });
 
-            var result = SdkResolverService.Instance.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
+            var result = service.ResolveSdk(BuildEventContext.InvalidSubmissionId, sdk, _loggingContext, new MockElementLocation("file"), "sln", "projectPath", interactive: false, isRunningInVisualStudio: false, failOnUnresolvedSdk: true);
 
             result.Success.ShouldBeTrue();
 
@@ -639,6 +698,44 @@ public void IsRunningInVisualStudioIsSetForResolverContext()
             isRunningInVisualStudio.ShouldBeTrue();
         }
 
+        internal sealed class SdkResolverServiceTextExtension : SdkResolverService
+        {
+
+            internal bool _fake_initialization = false;
+            internal IReadOnlyList<SdkResolverManifest> _fakeManifestRegistry;
+
+            internal override void WaitIfTestRequires()
+            {
+                if (_fake_initialization)
+                {
+                    Thread.Sleep(10);
+                }
+            }
+            internal override IReadOnlyList<SdkResolverManifest> GetResolverManifests(ElementLocation location)
+            {
+                return _fakeManifestRegistry;
+            }
+
+            internal override void InitializeForTests(SdkResolverLoader resolverLoader = null, IReadOnlyList<SdkResolver> resolvers = null)
+            {
+                if (resolverLoader != null)
+                {
+                    _sdkResolverLoader = resolverLoader;
+                    _fake_initialization = true;
+                    List<SdkResolverManifest> manifests = new List<SdkResolverManifest>();
+                    for (int i = 1; i != 20; i++)
+                    {
+                        var man = new SdkResolverManifest(DisplayName: "TestResolversManifest", Path: null, ResolvableSdkRegex: new Regex("abc"));
+                        manifests.Add(man);
+                        man = new SdkResolverManifest(DisplayName: "TestResolversManifest", Path: null, null);
+                        manifests.Add(man);
+                    }
+                    _fakeManifestRegistry = manifests.AsReadOnly();
+                    return;
+                }
+            }
+        }
+
         private sealed class MockLoaderStrategy : SdkResolverLoader
         {
             private List<SdkResolver> _resolvers;
diff --git a/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs b/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
index e18407ee9ed..707587dd7b8 100644
--- a/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
+++ b/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
@@ -341,7 +341,7 @@ public void RoundtripExtendedErrorEventArgs_SerializedAsError(bool withOptionalD
                 DateTime.Parse("9/1/2021 12:02:07 PM"),
                 withOptionalData ? new object[] { "argument0" } : null)
             {
-                ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+                ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
                 ExtendedMetadata = withOptionalData ? new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } } : null,
                 BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
             };
@@ -414,7 +414,7 @@ public void RoundtripExtendedWarningEventArgs_SerializedAsWarning(bool withOptio
                 DateTime.Parse("9/1/2021 12:02:07 PM"),
                 withOptionalData ? new object[] { "argument0" } : null)
             {
-                ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+                ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
                 ExtendedMetadata = withOptionalData ? new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } } : null,
                 BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
             };
@@ -490,7 +490,7 @@ public void RoundtripExtendedBuildMessageEventArgs_SerializedAsMessage(bool with
                 DateTime.Parse("12/12/2015 06:11:56 PM"),
                 withOptionalData ? new object[] { "argument0" } : null)
             {
-                ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+                ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
                 ExtendedMetadata = withOptionalData ? new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } } : null,
                 BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
             };
@@ -578,7 +578,7 @@ public void ExtendedCustomBuildEventArgs_SerializedAsMessage(bool withOptionalDa
                 eventTimestamp: withOptionalData ? DateTime.Parse("3/1/2017 11:11:56 AM") : DateTime.Now,
                 messageArgs: withOptionalData ? new object[] { "arg0val", "arg1val" } : null)
             {
-                ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+                ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
                 ExtendedMetadata = withOptionalData ? new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } } : null,
                 BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
             };
@@ -673,7 +673,7 @@ public void RoundtripExtendedCriticalBuildMessageEventArgs(bool withOptionalData
                 DateTime.Parse("12/12/2015 06:11:56 PM"),
                 withOptionalData ? new object[] { "argument0" } : null)
             {
-                ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+                ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
                 ExtendedMetadata = withOptionalData ? new Dictionary<string, string> { { "m1", "v1" }, { "m2", "v2" } } : null,
                 BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
             };
diff --git a/src/Build.UnitTests/Construction/SolutionFilter_Tests.cs b/src/Build.UnitTests/Construction/SolutionFilter_Tests.cs
index 1b988d17b0c..6d2a8f9ad1a 100644
--- a/src/Build.UnitTests/Construction/SolutionFilter_Tests.cs
+++ b/src/Build.UnitTests/Construction/SolutionFilter_Tests.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Collections.Generic;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using System.Linq;
 using System.Threading;
@@ -108,18 +109,19 @@ public void SolutionFilterFiltersProjects(bool graphBuild)
                     EndGlobal
                     """);
                 TransientTestFile filterFile = testEnvironment.CreateFile(folder, "solutionFilter.slnf",
-                    @"
-                {
-                  ""solution"": {
-                    // I'm a comment
-                    ""path"": "".\\SimpleProject\\SimpleProject.sln"",
-                    ""projects"": [
-                    /* ""..\\ClassLibrary\\ClassLibrary\\ClassLibrary.csproj"", */
-                      ""SimpleProject\\SimpleProject.csproj"",
-                    ]
-                    }
-                }
-                ");
+                    /*lang=json*/
+                                  """
+                                  {
+                                    "solution": {
+                                      // I'm a comment
+                                      "path": ".\\SimpleProject\\SimpleProject.sln",
+                                      "projects": [
+                                      /* "..\\ClassLibrary\\ClassLibrary\\ClassLibrary.csproj", */
+                                        "SimpleProject\\SimpleProject.csproj",
+                                      ]
+                                      }
+                                  }
+                                  """);
                 Directory.GetCurrentDirectory().ShouldNotBe(Path.GetDirectoryName(filterFile.Path));
                 if (graphBuild)
                 {
@@ -151,59 +153,59 @@ public void SolutionFilterFiltersProjects(bool graphBuild)
         }
 
         [Theory]
-        [InlineData(@"
-                {
-                  ""solution"": {
-                    ""path"": ""C:\\notAPath\\MSBuild.Dev.sln"",
-                    ""projects2"": [
-                      ""src\\Build\\Microsoft.Build.csproj"",
-                      ""src\\Framework\\Microsoft.Build.Framework.csproj"",
-                      ""src\\MSBuild\\MSBuild.csproj"",
-                      ""src\\Tasks.UnitTests\\Microsoft.Build.Tasks.UnitTests.csproj""
-                    ]
-                    }
+        [InlineData(/*lang=json,strict*/ """
+            {
+              "solution": {
+                "path": "C:\\notAPath\\MSBuild.Dev.sln",
+                "projects2": [
+                  "src\\Build\\Microsoft.Build.csproj",
+                  "src\\Framework\\Microsoft.Build.Framework.csproj",
+                  "src\\MSBuild\\MSBuild.csproj",
+                  "src\\Tasks.UnitTests\\Microsoft.Build.Tasks.UnitTests.csproj"
+                ]
                 }
-                ", "MSBuild.SolutionFilterJsonParsingError")]
-        [InlineData(@"
-                [{
-                  ""solution"": {
-                    ""path"": ""C:\\notAPath\\MSBuild.Dev.sln"",
-                    ""projects"": [
-                      ""src\\Build\\Microsoft.Build.csproj"",
-                      ""src\\Framework\\Microsoft.Build.Framework.csproj"",
-                      ""src\\MSBuild\\MSBuild.csproj"",
-                      ""src\\Tasks.UnitTests\\Microsoft.Build.Tasks.UnitTests.csproj""
-                    ]
-                    }
-                }]
-                ", "MSBuild.SolutionFilterJsonParsingError")]
-        [InlineData(@"
-                {
-                  ""solution"": {
-                    ""path"": ""C:\\notAPath\\MSBuild.Dev.sln"",
-                    ""projects"": [
-                      {""path"": ""src\\Build\\Microsoft.Build.csproj""},
-                      {""path"": ""src\\Framework\\Microsoft.Build.Framework.csproj""},
-                      {""path"": ""src\\MSBuild\\MSBuild.csproj""},
-                      {""path"": ""src\\Tasks.UnitTests\\Microsoft.Build.Tasks.UnitTests.csproj""}
-                    ]
-                    }
+            }
+            """, "MSBuild.SolutionFilterJsonParsingError")]
+        [InlineData(/*lang=json,strict*/ """
+            [{
+              "solution": {
+                "path": "C:\\notAPath\\MSBuild.Dev.sln",
+                "projects": [
+                  "src\\Build\\Microsoft.Build.csproj",
+                  "src\\Framework\\Microsoft.Build.Framework.csproj",
+                  "src\\MSBuild\\MSBuild.csproj",
+                  "src\\Tasks.UnitTests\\Microsoft.Build.Tasks.UnitTests.csproj"
+                ]
                 }
-                ", "MSBuild.SolutionFilterJsonParsingError")]
-        [InlineData(@"
-                {
-                  ""solution"": {
-                    ""path"": ""C:\\notAPath2\\MSBuild.Dev.sln"",
-                    ""projects"": [
-                      {""path"": ""src\\Build\\Microsoft.Build.csproj""},
-                      {""path"": ""src\\Framework\\Microsoft.Build.Framework.csproj""},
-                      {""path"": ""src\\MSBuild\\MSBuild.csproj""},
-                      {""path"": ""src\\Tasks.UnitTests\\Microsoft.Build.Tasks.UnitTests.csproj""}
-                    ]
-                    }
+            }]
+            """, "MSBuild.SolutionFilterJsonParsingError")]
+        [InlineData(/*lang=json,strict*/ """
+            {
+              "solution": {
+                "path": "C:\\notAPath\\MSBuild.Dev.sln",
+                "projects": [
+                  {"path": "src\\Build\\Microsoft.Build.csproj"},
+                  {"path": "src\\Framework\\Microsoft.Build.Framework.csproj"},
+                  {"path": "src\\MSBuild\\MSBuild.csproj"},
+                  {"path": "src\\Tasks.UnitTests\\Microsoft.Build.Tasks.UnitTests.csproj"}
+                ]
+                }
+            }
+            """, "MSBuild.SolutionFilterJsonParsingError")]
+        [InlineData(/*lang=json,strict*/ """
+            {
+              "solution": {
+                "path": "C:\\notAPath2\\MSBuild.Dev.sln",
+                "projects": [
+                  {"path": "src\\Build\\Microsoft.Build.csproj"},
+                  {"path": "src\\Framework\\Microsoft.Build.Framework.csproj"},
+                  {"path": "src\\MSBuild\\MSBuild.csproj"},
+                  {"path": "src\\Tasks.UnitTests\\Microsoft.Build.Tasks.UnitTests.csproj"}
+                ]
                 }
-                ", "MSBuild.SolutionFilterMissingSolutionError")]
-        public void InvalidSolutionFilters(string slnfValue, string exceptionReason)
+            }
+            """, "MSBuild.SolutionFilterMissingSolutionError")]
+        public void InvalidSolutionFilters([StringSyntax(StringSyntaxAttribute.Json)] string slnfValue, string exceptionReason)
         {
             Assert.False(File.Exists("C:\\notAPath2\\MSBuild.Dev.sln"));
             using (TestEnvironment testEnvironment = TestEnvironment.Create())
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 4ee166bb5e2..10cf3577bf1 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -37,6 +37,7 @@
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.Debugging;
 using Microsoft.NET.StringTools;
+using ExceptionHandling = Microsoft.Build.Shared.ExceptionHandling;
 using ForwardingLoggerRecord = Microsoft.Build.Logging.ForwardingLoggerRecord;
 using LoggerDescription = Microsoft.Build.Logging.LoggerDescription;
 
@@ -819,6 +820,15 @@ void Callback(object? state)
             ThreadPoolExtensions.QueueThreadPoolWorkItemWithCulture(Callback, parentThreadCulture, parentThreadUICulture);
         }
 
+        /// <summary>
+        /// Point in time snapshot of all worker processes leveraged by this BuildManager.
+        /// This is meant to be used by VS. External users should not this is only best-effort, point-in-time functionality
+        ///  without guarantee of 100% correctness and safety.
+        /// </summary>
+        /// <returns>Enumeration of <see cref="Process"/> objects that were valid during the time of call to this function.</returns>
+        public IEnumerable<Process> GetWorkerProcesses()
+            => (_nodeManager?.GetProcesses() ?? []).Concat(_taskHostNodeManager?.GetProcesses() ?? []);
+
         /// <summary>
         /// Clears out all of the cached information.
         /// </summary>
@@ -1985,7 +1995,12 @@ private Dictionary<ProjectGraphNode, BuildResult> BuildGraph(
             IReadOnlyDictionary<ProjectGraphNode, ImmutableList<string>> targetsPerNode,
             GraphBuildRequestData graphBuildRequestData)
         {
-            using var waitHandle = new AutoResetEvent(true);
+            // The handle is used within captured async scope. If error occurs during the build
+            //  and we return from the function before async call signals - it causes unhandled ObjectDisposedException
+            //  upon attempt to signal the handle (and hence unfinished logs).
+#pragma warning disable CA2000
+            var waitHandle = new AutoResetEvent(true);
+#pragma warning restore CA2000
             var graphBuildStateLock = new object();
 
             var blockedNodes = new HashSet<ProjectGraphNode>(projectGraph.ProjectNodes);
diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProc.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProc.cs
index 3fb64eb9fb4..dbafe43db2a 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProc.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProc.cs
@@ -1,4 +1,4 @@
-﻿// Licensed to the .NET Foundation under one or more agreements.
+// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
@@ -94,7 +94,7 @@ public IList<NodeInfo> CreateNodes(int nextNodeId, INodePacketFactory factory, F
             // want to start up just a standard MSBuild out-of-proc node.
             // Note: We need to always pass /nodeReuse to ensure the value for /nodeReuse from msbuild.rsp
             // (next to msbuild.exe) is ignored.
-            string commandLineArgs = $"/nologo /nodemode:1 /nodeReuse:{ComponentHost.BuildParameters.EnableNodeReuse.ToString().ToLower()} /low:{ComponentHost.BuildParameters.LowPriority.ToString().ToLower()}";
+            string commandLineArgs = $"/noautoresponse /nologo /nodemode:1 /nodeReuse:{ComponentHost.BuildParameters.EnableNodeReuse.ToString().ToLower()} /low:{ComponentHost.BuildParameters.LowPriority.ToString().ToLower()}";
 
             CommunicationsUtilities.Trace("Starting to acquire {1} new or existing node(s) to establish nodes from ID {0} to {2}...", nextNodeId, numberOfNodesToCreate, nextNodeId + numberOfNodesToCreate - 1);
 
diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
index 2395b09f44d..87602148672 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcBase.cs
@@ -152,7 +152,7 @@ protected void ShutdownAllNodes(bool nodeReuse, NodeContextTerminateDelegate ter
             string msbuildtaskhostExeName = NodeProviderOutOfProcTaskHost.TaskHostNameForClr2TaskHost;
 
             // Search for all instances of msbuildtaskhost process and add them to the process list
-            nodeProcesses.AddRange(new List<Process>(Process.GetProcessesByName(Path.GetFileNameWithoutExtension(msbuildtaskhostExeName))));
+            nodeProcesses.AddRange(Process.GetProcessesByName(Path.GetFileNameWithoutExtension(msbuildtaskhostExeName)));
 
             // For all processes in the list, send signal to terminate if able to connect
             foreach (Process nodeProcess in nodeProcesses)
diff --git a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
index 446f5ef644f..bd1cb0fd8d7 100644
--- a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
@@ -22,6 +22,7 @@
 using Microsoft.Build.Graph;
 using Microsoft.Build.Internal;
 using Microsoft.Build.Shared;
+using ExceptionHandling = Microsoft.Build.Shared.ExceptionHandling;
 
 namespace Microsoft.Build.Experimental.ProjectCache
 {
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs b/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
index deafed17428..0a556c14034 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TargetBuilder.cs
@@ -484,7 +484,7 @@ private async Task ProcessTargetStack(ITaskBuilder taskBuilder)
                             // Execute all of the tasks on this target.
                             MSBuildEventSource.Log.TargetStart(currentTargetEntry.Name);
                             await currentTargetEntry.ExecuteTarget(taskBuilder, _requestEntry, _projectLoggingContext, _cancellationToken);
-                            MSBuildEventSource.Log.TargetStop(currentTargetEntry.Name);
+                            MSBuildEventSource.Log.TargetStop(currentTargetEntry.Name, currentTargetEntry.Result?.ResultCode.ToString() ?? string.Empty);
                         }
 
                         break;
diff --git a/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs b/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
index 8eda48978c8..a9ea6b37548 100644
--- a/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
+++ b/src/Build/BackEnd/Components/SdkResolution/SdkResolverService.cs
@@ -48,12 +48,12 @@ internal class SdkResolverService : ISdkResolverService
         /// <summary>
         /// Stores the list of manifests of specific SDK resolvers which could be loaded.
         /// </summary>
-        private IList<SdkResolverManifest> _specificResolversManifestsRegistry;
+        protected IReadOnlyList<SdkResolverManifest> _specificResolversManifestsRegistry;
 
         /// <summary>
         /// Stores the list of manifests of general SDK resolvers which could be loaded.
         /// </summary>
-        private IList<SdkResolverManifest> _generalResolversManifestsRegistry;
+        protected IReadOnlyList<SdkResolverManifest> _generalResolversManifestsRegistry;
 
         /// <summary>
         /// Stores an <see cref="SdkResolverLoader"/> which can load registered SDK resolvers.
@@ -62,7 +62,7 @@ internal class SdkResolverService : ISdkResolverService
         /// Unless the 17.10 changewave is disabled, we use a singleton instance because the set of SDK resolvers
         /// is not expected to change during the lifetime of the process.
         /// </remarks>
-        private SdkResolverLoader _sdkResolverLoader = ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10)
+        protected SdkResolverLoader _sdkResolverLoader = ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10)
             ? CachingSdkResolverLoader.Instance
             : new SdkResolverLoader();
 
@@ -178,6 +178,7 @@ private SdkResult ResolveSdkUsingResolversWithPatternsFirst(int submissionId, Sd
             List<SdkResolverManifest> matchingResolversManifests = new();
             foreach (SdkResolverManifest manifest in _specificResolversManifestsRegistry)
             {
+                WaitIfTestRequires(); 
                 try
                 {
                     if (manifest.ResolvableSdkRegex.IsMatch(sdk.Name))
@@ -258,7 +259,7 @@ private SdkResult ResolveSdkUsingResolversWithPatternsFirst(int submissionId, Sd
             return new SdkResult(sdk, null, null);
         }
 
-        private List<SdkResolver> GetResolvers(IList<SdkResolverManifest> resolversManifests, LoggingContext loggingContext, ElementLocation sdkReferenceLocation)
+        private List<SdkResolver> GetResolvers(IReadOnlyList<SdkResolverManifest> resolversManifests, LoggingContext loggingContext, ElementLocation sdkReferenceLocation)
         {
             // Create a sorted by priority list of resolvers. Load them if needed.
             List<SdkResolver> resolvers = new List<SdkResolver>();
@@ -387,12 +388,18 @@ private bool TryResolveSdkUsingSpecifiedResolvers(
             return false;
         }
 
+        internal virtual void WaitIfTestRequires() { }
+
+        // This is a convenience wrapper that we override for one test so that we don't introduce unnecessary #if DEBUG
+        // segments into the production code.
+        internal virtual IReadOnlyList<SdkResolverManifest> GetResolverManifests(ElementLocation location) => _sdkResolverLoader.GetResolversManifests(location);
+
         /// <summary>
         /// Used for unit tests only.  This is currently only called through reflection in Microsoft.Build.Engine.UnitTests.TransientSdkResolution.CallResetForTests
         /// </summary>
         /// <param name="resolverLoader">An <see cref="SdkResolverLoader"/> to use for loading SDK resolvers.</param>
         /// <param name="resolvers">Explicit set of SdkResolvers to use for all SDK resolution.</param>
-        internal void InitializeForTests(SdkResolverLoader resolverLoader = null, IReadOnlyList<SdkResolver> resolvers = null)
+        internal virtual void InitializeForTests(SdkResolverLoader resolverLoader = null, IReadOnlyList<SdkResolver> resolvers = null)
         {
             if (resolverLoader != null)
             {
@@ -403,19 +410,21 @@ internal void InitializeForTests(SdkResolverLoader resolverLoader = null, IReadO
                 _sdkResolverLoader = CachingSdkResolverLoader.Instance;
             }
 
-            _specificResolversManifestsRegistry = null;
-            _generalResolversManifestsRegistry = null;
+            List<SdkResolverManifest> specificResolversManifestsRegistry = null;
+            List<SdkResolverManifest> generalResolversManifestsRegistry = null;
             _manifestToResolvers = null;
 
             if (resolvers != null)
             {
-                _specificResolversManifestsRegistry = new List<SdkResolverManifest>();
-                _generalResolversManifestsRegistry = new List<SdkResolverManifest>();
+                specificResolversManifestsRegistry = new List<SdkResolverManifest>();
+                generalResolversManifestsRegistry = new List<SdkResolverManifest>();
                 _manifestToResolvers = new Dictionary<SdkResolverManifest, IReadOnlyList<SdkResolver>>();
 
                 SdkResolverManifest sdkResolverManifest = new SdkResolverManifest(DisplayName: "TestResolversManifest", Path: null, ResolvableSdkRegex: null);
-                _generalResolversManifestsRegistry.Add(sdkResolverManifest);
+                generalResolversManifestsRegistry.Add(sdkResolverManifest);
                 _manifestToResolvers[sdkResolverManifest] = resolvers;
+                _generalResolversManifestsRegistry = generalResolversManifestsRegistry.AsReadOnly();
+                _specificResolversManifestsRegistry = specificResolversManifestsRegistry.AsReadOnly();
             }
         }
 
@@ -466,8 +475,7 @@ private void RegisterResolversManifests(ElementLocation location)
                     return;
                 }
 
-                var allResolversManifests = _sdkResolverLoader.GetResolversManifests(location);
-
+                IReadOnlyList<SdkResolverManifest> allResolversManifests = GetResolverManifests(location);
                 _manifestToResolvers = new Dictionary<SdkResolverManifest, IReadOnlyList<SdkResolver>>();
 
                 SdkResolverManifest sdkDefaultResolversManifest = null;
@@ -484,24 +492,37 @@ private void RegisterResolversManifests(ElementLocation location)
                     }
                 }
 
+                var specificResolversManifestsRegistry = new List<SdkResolverManifest>();
+                var generalResolversManifestsRegistry = new List<SdkResolverManifest>();
+
                 // Break the list of all resolvers manifests into two parts: manifests with specific and general resolvers.
-                _specificResolversManifestsRegistry = new List<SdkResolverManifest>();
-                _generalResolversManifestsRegistry = new List<SdkResolverManifest>();
+                // Since the collections are meant to be immutable, we have to only ever assign them when they're complete.
+                // Otherwise race can happen, see https://github.com/dotnet/msbuild/issues/7927
                 foreach (SdkResolverManifest manifest in allResolversManifests)
                 {
+                    WaitIfTestRequires();
+
                     if (manifest.ResolvableSdkRegex == null)
                     {
-                        _generalResolversManifestsRegistry.Add(manifest);
+                        generalResolversManifestsRegistry.Add(manifest);
                     }
                     else
                     {
-                        _specificResolversManifestsRegistry.Add(manifest);
+                        specificResolversManifestsRegistry.Add(manifest);
                     }
                 }
                 if (sdkDefaultResolversManifest != null)
                 {
-                    _generalResolversManifestsRegistry.Add(sdkDefaultResolversManifest);
+                    generalResolversManifestsRegistry.Add(sdkDefaultResolversManifest);
                 }
+
+                // Until this is set(and this is under lock), the ResolveSdkUsingResolversWithPatternsFirst will always
+                // enter if branch leaving to this section.
+                // Then it will wait at the lock and return after we release it since the collections we have filled them before releasing the lock.
+                // The collections are never modified after this point.
+                // So I've made them ReadOnly
+                _specificResolversManifestsRegistry = specificResolversManifestsRegistry.AsReadOnly();
+                _generalResolversManifestsRegistry = generalResolversManifestsRegistry.AsReadOnly();
             }
         }
 
diff --git a/src/Build/BuildCheck/.editorconfig b/src/Build/BuildCheck/.editorconfig
index 731ad1c1785..6b3ef97bf14 100644
--- a/src/Build/BuildCheck/.editorconfig
+++ b/src/Build/BuildCheck/.editorconfig
@@ -1,2 +1,3 @@
 [*.cs]
 csharp_style_namespace_declarations = file_scoped:warning
+dotnet_diagnostic.IDE0005.severity = warning
diff --git a/src/Build/BuildCheck/API/BuildCheckResult.cs b/src/Build/BuildCheck/API/BuildCheckResult.cs
index 6471d717056..2da2ad2d585 100644
--- a/src/Build/BuildCheck/API/BuildCheckResult.cs
+++ b/src/Build/BuildCheck/API/BuildCheckResult.cs
@@ -2,7 +2,6 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using Microsoft.Build.Construction;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 
@@ -18,6 +17,9 @@ public sealed class BuildCheckResult : IBuildCheckResult
 {
     public static BuildCheckResult Create(CheckRule rule, IMSBuildElementLocation location, params string[] messageArgs) => new BuildCheckResult(rule, location, messageArgs);
 
+    internal static BuildCheckResult CreateBuiltIn(CheckRule rule, IMSBuildElementLocation location,
+        params string[] messageArgs) => new BuildCheckResult(rule, location, messageArgs) { _isBuiltIn = true };
+
     public BuildCheckResult(CheckRule checkConfig, IMSBuildElementLocation location, string[] messageArgs)
     {
         CheckRule = checkConfig;
@@ -29,13 +31,15 @@ internal BuildEventArgs ToEventArgs(CheckResultSeverity severity)
         => severity switch
         {
             CheckResultSeverity.Suggestion => new BuildCheckResultMessage(this),
-            CheckResultSeverity.Warning => new BuildCheckResultWarning(this, CheckRule.Id),
-            CheckResultSeverity.Error => new BuildCheckResultError(this, CheckRule.Id),
+            CheckResultSeverity.Warning => new BuildCheckResultWarning(this),
+            CheckResultSeverity.Error => new BuildCheckResultError(this),
             _ => throw new ArgumentOutOfRangeException(nameof(severity), severity, null),
         };
 
     public CheckRule CheckRule { get; }
 
+    public string Code => CheckRule.Id;
+
     /// <summary>
     /// Optional location of the finding (in near future we might need to support multiple locations).
     /// </summary>
@@ -47,9 +51,14 @@ internal BuildEventArgs ToEventArgs(CheckResultSeverity severity)
 
     public string MessageFormat => CheckRule.MessageFormat;
 
-    // Here we will provide different link for built-in rules and custom rules - once we have the base classes differentiated.
     public string FormatMessage() =>
-        _message ??= $"https://aka.ms/buildcheck/codes#{CheckRule.Id} - {string.Format(CheckRule.MessageFormat, MessageArgs)}";
+        _message ??= _isBuiltIn
+            // Builtin rules get unified helplink.
+            ? $"https://aka.ms/buildcheck/codes#{CheckRule.Id} - {string.Format(CheckRule.MessageFormat, MessageArgs)}"
+            // Custom rules can provide their own helplink.
+            : (!string.IsNullOrEmpty(CheckRule.HelpLinkUri) ? $"{CheckRule.HelpLinkUri} - " : null) +
+              string.Format(CheckRule.MessageFormat, MessageArgs);
 
     private string? _message;
+    private bool _isBuiltIn;
 }
diff --git a/src/Build/BuildCheck/API/Check.cs b/src/Build/BuildCheck/API/Check.cs
index 55c1d87a950..22a009981e6 100644
--- a/src/Build/BuildCheck/API/Check.cs
+++ b/src/Build/BuildCheck/API/Check.cs
@@ -3,8 +3,6 @@
 
 using System;
 using System.Collections.Generic;
-using System.Collections.Immutable;
-using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 
 namespace Microsoft.Build.Experimental.BuildCheck;
 
diff --git a/src/Build/BuildCheck/API/CheckConfiguration.cs b/src/Build/BuildCheck/API/CheckConfiguration.cs
index bffded87b66..2ce65e86956 100644
--- a/src/Build/BuildCheck/API/CheckConfiguration.cs
+++ b/src/Build/BuildCheck/API/CheckConfiguration.cs
@@ -1,7 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
 using System.Collections.Generic;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 using Microsoft.Build.Experimental.BuildCheck.Utilities;
diff --git a/src/Build/BuildCheck/API/CheckRule.cs b/src/Build/BuildCheck/API/CheckRule.cs
index 3fdf97bbc44..c37615ae9b5 100644
--- a/src/Build/BuildCheck/API/CheckRule.cs
+++ b/src/Build/BuildCheck/API/CheckRule.cs
@@ -10,6 +10,39 @@ namespace Microsoft.Build.Experimental.BuildCheck;
 /// </summary>
 public class CheckRule
 {
+    /// <summary>
+    /// Creates the descriptor of the BuildCheck rule
+    /// </summary>
+    /// <param name="id">The id of the rule - used to denote the violation in the outputs</param>
+    /// <param name="title">The title of the rule - currently unused</param>
+    /// <param name="description">The detailed description of the rule - currently unused</param>
+    /// <param name="messageFormat">The message format to be used during reporting the violation.</param>
+    /// <param name="defaultConfiguration">The default config of this rule - applicable if user doesn't specify custom values in .editorconfig.</param>
+    /// <param name="helpLinkUri">Optional link to more detailed help for the violation.</param>
+    public CheckRule(
+        string id,
+        string title,
+        string description,
+        string messageFormat,
+        CheckConfiguration defaultConfiguration,
+        string helpLinkUri)
+    {
+        Id = id;
+        Title = title;
+        Description = description;
+        MessageFormat = messageFormat;
+        DefaultConfiguration = defaultConfiguration;
+        HelpLinkUri = helpLinkUri;
+    }
+
+    /// <summary>
+    /// Creates the descriptor of the BuildCheck rule
+    /// </summary>
+    /// <param name="id">The id of the rule - used to denote the violation in the outputs</param>
+    /// <param name="title">The title of the rule - currently unused</param>
+    /// <param name="description">The detailed description of the rule - currently unused</param>
+    /// <param name="messageFormat">The message format to be used during reporting the violation.</param>
+    /// <param name="defaultConfiguration">The default config of this rule - applicable if user doesn't specify custom values in .editorconfig.</param>
     public CheckRule(
         string id,
         string title,
@@ -51,6 +84,8 @@ public CheckRule(
     /// </summary>
     public string MessageFormat { get; }
 
+    public string HelpLinkUri { get; } = string.Empty;
+
     /// <summary>
     /// The default configuration - overridable by the user via .editorconfig.
     /// If no user specified configuration is provided, this default will be used.
diff --git a/src/Build/BuildCheck/API/ConfigurationContext.cs b/src/Build/BuildCheck/API/ConfigurationContext.cs
index 86a52ae1a11..936139ff310 100644
--- a/src/Build/BuildCheck/API/ConfigurationContext.cs
+++ b/src/Build/BuildCheck/API/ConfigurationContext.cs
@@ -1,9 +1,7 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
 using System.Collections.Generic;
-using System.Linq;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 
 namespace Microsoft.Build.Experimental.BuildCheck;
diff --git a/src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs b/src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs
index 7bf44e40de2..0903d3a53e9 100644
--- a/src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs
+++ b/src/Build/BuildCheck/API/IBuildCheckRegistrationContext.cs
@@ -9,8 +9,11 @@ public interface IBuildCheckRegistrationContext
 {
     void RegisterEvaluatedPropertiesAction(Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>> evaluatedPropertiesAction);
 
+    [Obsolete("Use RegisterEvaluatedItemsAction to obtain evaluated items of a project.", false)]
     void RegisterParsedItemsAction(Action<BuildCheckDataContext<ParsedItemsCheckData>> parsedItemsAction);
 
+    void RegisterEvaluatedItemsAction(Action<BuildCheckDataContext<EvaluatedItemsCheckData>> evaluatedItemsAction);
+
     void RegisterTaskInvocationAction(Action<BuildCheckDataContext<TaskInvocationCheckData>> taskInvocationAction);
 
     void RegisterEnvironmentVariableReadAction(Action<BuildCheckDataContext<EnvironmentVariableCheckData>> environmentVariableAction);
diff --git a/src/Build/BuildCheck/API/InternalCheck.cs b/src/Build/BuildCheck/API/WorkerNodeCheck.cs
similarity index 93%
rename from src/Build/BuildCheck/API/InternalCheck.cs
rename to src/Build/BuildCheck/API/WorkerNodeCheck.cs
index 242c513e655..b5c8f597d30 100644
--- a/src/Build/BuildCheck/API/InternalCheck.cs
+++ b/src/Build/BuildCheck/API/WorkerNodeCheck.cs
@@ -2,11 +2,10 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using Microsoft.Build.Experimental.BuildCheck;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Checks;
 
-internal abstract class InternalCheck : Check
+internal abstract class WorkerNodeCheck : Check
 {
     /// <summary>
     /// Used by the implementors to subscribe to data and events they are interested in.
diff --git a/src/Build/BuildCheck/Acquisition/BuildCheckAcquisitionModule.cs b/src/Build/BuildCheck/Acquisition/BuildCheckAcquisitionModule.cs
index 7083d50aa8d..ccedf3bab7f 100644
--- a/src/Build/BuildCheck/Acquisition/BuildCheckAcquisitionModule.cs
+++ b/src/Build/BuildCheck/Acquisition/BuildCheckAcquisitionModule.cs
@@ -7,8 +7,9 @@
 using System.Reflection;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 using Microsoft.Build.Framework;
-using Microsoft.Build.Framework.Telemetry;
+#if FEATURE_ASSEMBLYLOADCONTEXT
 using Microsoft.Build.Shared;
+#endif
 
 namespace Microsoft.Build.Experimental.BuildCheck.Acquisition;
 
diff --git a/src/Build/BuildCheck/Acquisition/CheckAcquisitionData.cs b/src/Build/BuildCheck/Acquisition/CheckAcquisitionData.cs
index 74a0c87be38..4b9fab08901 100644
--- a/src/Build/BuildCheck/Acquisition/CheckAcquisitionData.cs
+++ b/src/Build/BuildCheck/Acquisition/CheckAcquisitionData.cs
@@ -1,13 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
-using Microsoft.Build.Experimental.BuildCheck;
-
 namespace Microsoft.Build.Experimental.BuildCheck.Acquisition;
 
 // https://github.com/dotnet/msbuild/issues/9633
diff --git a/src/Build/BuildCheck/Acquisition/IBuildCheckAcquisitionModule.cs b/src/Build/BuildCheck/Acquisition/IBuildCheckAcquisitionModule.cs
index 245736ca67a..4715209c972 100644
--- a/src/Build/BuildCheck/Acquisition/IBuildCheckAcquisitionModule.cs
+++ b/src/Build/BuildCheck/Acquisition/IBuildCheckAcquisitionModule.cs
@@ -3,7 +3,6 @@
 
 using System.Collections.Generic;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
-using Microsoft.Build.Framework;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Acquisition;
 
diff --git a/src/Build/BuildCheck/Checks/CopyAlwaysCheck.cs b/src/Build/BuildCheck/Checks/CopyAlwaysCheck.cs
new file mode 100644
index 00000000000..1d0565cb84f
--- /dev/null
+++ b/src/Build/BuildCheck/Checks/CopyAlwaysCheck.cs
@@ -0,0 +1,94 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.Collections.Generic;
+using System.IO;
+using Microsoft.Build.Collections;
+using Microsoft.Build.Construction;
+using Microsoft.Build.Framework;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Experimental.BuildCheck.Checks;
+internal class CopyAlwaysCheck : Check
+{
+    private const string RuleId = "BC0106";
+    public static CheckRule SupportedRule = new CheckRule(RuleId, "AvoidCopyAlways",
+        ResourceUtilities.GetResourceString("BuildCheck_BC0106_Title")!,
+        ResourceUtilities.GetResourceString("BuildCheck_BC0106_MessageFmt")!,
+        new CheckConfiguration() { RuleId = RuleId, Severity = CheckResultSeverity.Warning });
+
+    public override string FriendlyName => "MSBuild.CopyAlwaysCheck";
+
+    public override IReadOnlyList<CheckRule> SupportedRules { get; } = [SupportedRule];
+
+    public override void Initialize(ConfigurationContext configurationContext)
+    {
+        /* This is it - no custom configuration */
+    }
+
+    public override void RegisterActions(IBuildCheckRegistrationContext registrationContext)
+    {
+        registrationContext.RegisterEvaluatedPropertiesAction(EvaluatedPropertiesAction);
+        registrationContext.RegisterEvaluatedItemsAction(EvaluatedItemsAction);
+    }
+
+    internal override bool IsBuiltIn => true;
+
+    private readonly HashSet<string> _projectsSeen = new(MSBuildNameIgnoreCaseComparer.Default);
+
+    private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
+    {
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects.
+        // We want to do the same prevention for both registered actions: EvaluatedPropertiesAction and EvaluatedItemsAction.
+        //  To avoid the need to have separate hashset for each of those functions - we use a single one and we use the fact that
+        //  both functions are always called after each other (EvaluatedPropertiesAction first, then EvaluatedItemsAction),
+        //  so this function just checks the hashset (not to prevent execution of EvaluatedItemsAction) and EvaluatedItemsAction
+        //  updates the hashset.
+        if (_projectsSeen.Contains(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        context.Data.EvaluatedProperties.TryGetValue("SkipUnchangedFilesOnCopyAlways", out string? skipUnchanged);
+
+        if (skipUnchanged.IsMSBuildTrueString())
+        {
+            // Now we know that copy logic is optimized - so we do not need to check items. Avoiding the items check by inserting into lookup.
+            _projectsSeen.Add(context.Data.ProjectFilePath);
+        }
+    }
+
+    private void EvaluatedItemsAction(BuildCheckDataContext<EvaluatedItemsCheckData> context)
+    {
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects.
+        if (!_projectsSeen.Add(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        foreach (ItemData itemData in context.Data.EnumerateItemsOfTypes([ItemNames.Content, ItemNames.Compile, ItemNames.None, ItemNames.EmbeddedResource]))
+        {
+            foreach (KeyValuePair<string, string> keyValuePair in itemData.EnumerateMetadata())
+            {
+                if (MSBuildNameIgnoreCaseComparer.Default.Equals(keyValuePair.Key, ItemMetadataNames.copyToOutputDirectory))
+                {
+                    if (MSBuildNameIgnoreCaseComparer.Default.Equals(keyValuePair.Value, ItemMetadataNames.copyAlways))
+                    {
+                        // Project {0} specifies '{0}' item '{1}', ...
+                        context.ReportResult(BuildCheckResult.Create(
+                            SupportedRule,
+                            // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
+                            ElementLocation.EmptyLocation,
+                            Path.GetFileName(context.Data.ProjectFilePath),
+                            itemData.Type,
+                            itemData.EvaluatedInclude));
+                    }
+
+                    break;
+                }
+            }
+        }
+    }
+}
diff --git a/src/Build/BuildCheck/Checks/DoubleWritesCheck.cs b/src/Build/BuildCheck/Checks/DoubleWritesCheck.cs
index 25d99b2bb91..d2320616e71 100644
--- a/src/Build/BuildCheck/Checks/DoubleWritesCheck.cs
+++ b/src/Build/BuildCheck/Checks/DoubleWritesCheck.cs
@@ -3,13 +3,10 @@
 
 using System;
 using System.Collections.Generic;
-using System.Collections.Immutable;
-using System.Diagnostics;
+#if !FEATURE_MSIOREDIST
 using System.IO;
+#endif
 using System.Linq;
-using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
-using Microsoft.Build.Construction;
-using Microsoft.Build.Experimental.BuildCheck;
 using Microsoft.Build.Shared;
 using static Microsoft.Build.Experimental.BuildCheck.TaskInvocationCheckData;
 
@@ -114,7 +111,7 @@ private void CheckWrite(BuildCheckDataContext<TaskInvocationCheckData> context,
 
             if (_filesWritten.TryGetValue(fileBeingWritten, out (string projectFilePath, string taskName) existingEntry))
             {
-                context.ReportResult(BuildCheckResult.Create(
+                context.ReportResult(BuildCheckResult.CreateBuiltIn(
                     SupportedRule,
                     context.Data.TaskInvocationLocation,
                     context.Data.TaskName,
diff --git a/src/Build/BuildCheck/Checks/EmbeddedResourceCheck.cs b/src/Build/BuildCheck/Checks/EmbeddedResourceCheck.cs
new file mode 100644
index 00000000000..aaeda56eaa6
--- /dev/null
+++ b/src/Build/BuildCheck/Checks/EmbeddedResourceCheck.cs
@@ -0,0 +1,115 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.IO;
+using System.Collections.Generic;
+using Microsoft.Build.Collections;
+using Microsoft.Build.Construction;
+using Microsoft.Build.Framework;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Experimental.BuildCheck.Checks;
+internal class EmbeddedResourceCheck : Check
+{
+    private const string RuleId = "BC0105";
+    public static CheckRule SupportedRule = new CheckRule(RuleId, "EmbeddedResourceCulture",
+        ResourceUtilities.GetResourceString("BuildCheck_BC0105_Title")!,
+        ResourceUtilities.GetResourceString("BuildCheck_BC0105_MessageFmt")!,
+        new CheckConfiguration() { RuleId = RuleId, Severity = CheckResultSeverity.Warning });
+
+    public override string FriendlyName => "MSBuild.EmbeddedResourceCulture";
+
+    public override IReadOnlyList<CheckRule> SupportedRules { get; } = [SupportedRule];
+
+    public override void Initialize(ConfigurationContext configurationContext)
+    {
+        /* This is it - no custom configuration */
+    }
+
+    public override void RegisterActions(IBuildCheckRegistrationContext registrationContext)
+    {
+        registrationContext.RegisterEvaluatedItemsAction(EvaluatedItemsAction);
+    }
+
+    internal override bool IsBuiltIn => true;
+
+    private readonly HashSet<string> _projects = new(MSBuildNameIgnoreCaseComparer.Default);
+
+    private void EvaluatedItemsAction(BuildCheckDataContext<EvaluatedItemsCheckData> context)
+    {
+        // Deduplication
+        if (!_projects.Add(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        foreach (ItemData itemData in context.Data.EnumerateItemsOfType(ItemNames.EmbeddedResource))
+        {
+            string evaluatedEmbedItem = itemData.EvaluatedInclude;
+            bool hasDoubleExtension = HasDoubleExtension(evaluatedEmbedItem);
+
+            if (!hasDoubleExtension)
+            {
+                continue;
+            }
+
+            bool hasNeededMetadata = false;
+            foreach (KeyValuePair<string, string> keyValuePair in itemData.EnumerateMetadata())
+            {
+                if (MSBuildNameIgnoreCaseComparer.Default.Equals(keyValuePair.Key, ItemMetadataNames.culture))
+                {
+                    hasNeededMetadata = true;
+                    break;
+                }
+
+                if (MSBuildNameIgnoreCaseComparer.Default.Equals(keyValuePair.Key, ItemMetadataNames.withCulture) &&
+                    keyValuePair.Value.IsMSBuildFalseString())
+                {
+                    hasNeededMetadata = true;
+                    break;
+                }
+            }
+
+            if (!hasNeededMetadata)
+            {
+                context.ReportResult(BuildCheckResult.Create(
+                    SupportedRule,
+                    // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
+                    ElementLocation.EmptyLocation,
+                    Path.GetFileName(context.Data.ProjectFilePath),
+                    evaluatedEmbedItem,
+                    GetSupposedCultureExtension(evaluatedEmbedItem)));
+            }
+        }
+    }
+
+    private static bool HasDoubleExtension(string s)
+    {
+        const char extensionSeparator = '.';
+        int firstIndex;
+        return
+            !string.IsNullOrEmpty(s) &&
+            (firstIndex = s.IndexOf(extensionSeparator)) > -1 &&
+            // We need at least 2 chars for this extension - separator and one char of extension,
+            // so next extension can start closest 2 chars from this one
+            // (this is to grace handle double dot - which is not double extension)
+            firstIndex + 2 <= s.Length &&
+            s.IndexOf(extensionSeparator, firstIndex + 2) > -1;
+    }
+
+    /// <summary>
+    /// Returns the extension that is supposed to implicitly denote the culture.
+    /// This is mimicking the behavior of Microsoft.Build.Tasks.Culture.GetItemCultureInfo
+    /// </summary>
+    private string GetSupposedCultureExtension(string s)
+    {
+        // If the item is defined as "Strings.en-US.resx", then we want to arrive to 'en-US'
+
+        string extension = Path.GetExtension(Path.GetFileNameWithoutExtension(s));
+        if (extension.Length > 1)
+        {
+            extension = extension.Substring(1);
+        }
+        return extension;
+    }
+}
diff --git a/src/Build/BuildCheck/Checks/NoEnvironmentVariablePropertyCheck.cs b/src/Build/BuildCheck/Checks/NoEnvironmentVariablePropertyCheck.cs
index 30049c3f7ca..6e7c2bc3174 100644
--- a/src/Build/BuildCheck/Checks/NoEnvironmentVariablePropertyCheck.cs
+++ b/src/Build/BuildCheck/Checks/NoEnvironmentVariablePropertyCheck.cs
@@ -63,7 +63,7 @@ private void ProcessEnvironmentVariableReadAction(BuildCheckDataContext<Environm
             }
             else if (CheckScopeClassifier.IsActionInObservedScope(_scope, context.Data.EnvironmentVariableLocation.File, context.Data.ProjectFilePath))
             {
-                context.ReportResult(BuildCheckResult.Create(
+                context.ReportResult(BuildCheckResult.CreateBuiltIn(
                     SupportedRule,
                     context.Data.EnvironmentVariableLocation,
                     GetFormattedMessage(context.Data.EnvironmentVariableName, context.Data.EnvironmentVariableValue)));
@@ -88,7 +88,7 @@ private void HandleScopeReadiness()
                 continue;
             }
 
-            context.ReportResult(BuildCheckResult.Create(
+            context.ReportResult(BuildCheckResult.CreateBuiltIn(
                 SupportedRule,
                 context.Data.EnvironmentVariableLocation,
                 GetFormattedMessage(context.Data.EnvironmentVariableName, context.Data.EnvironmentVariableValue)));
diff --git a/src/Build/BuildCheck/Checks/PreferProjectReferenceCheck.cs b/src/Build/BuildCheck/Checks/PreferProjectReferenceCheck.cs
new file mode 100644
index 00000000000..85bbc9d8ba6
--- /dev/null
+++ b/src/Build/BuildCheck/Checks/PreferProjectReferenceCheck.cs
@@ -0,0 +1,109 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.Collections.Generic;
+using System.IO;
+using Microsoft.Build.Collections;
+using Microsoft.Build.Construction;
+using Microsoft.Build.Framework;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Experimental.BuildCheck.Checks;
+internal class PreferProjectReferenceCheck : Check
+{
+    private const string RuleId = "BC0104";
+    public static CheckRule SupportedRule = new CheckRule(RuleId, "PreferProjectReference",
+        ResourceUtilities.GetResourceString("BuildCheck_BC0104_Title")!,
+        ResourceUtilities.GetResourceString("BuildCheck_BC0104_MessageFmt")!,
+        new CheckConfiguration() { RuleId = RuleId, Severity = CheckResultSeverity.Warning });
+
+    public override string FriendlyName => "MSBuild.PreferProjectReferenceCheck";
+
+    public override IReadOnlyList<CheckRule> SupportedRules { get; } = [SupportedRule];
+
+    public override void Initialize(ConfigurationContext configurationContext)
+    {
+        /* This is it - no custom configuration */
+    }
+
+    public override void RegisterActions(IBuildCheckRegistrationContext registrationContext)
+    {
+        registrationContext.RegisterEvaluatedPropertiesAction(EvaluatedPropertiesAction);
+        registrationContext.RegisterEvaluatedItemsAction(EvaluatedItemsAction);
+    }
+
+    internal override bool IsBuiltIn => true;
+
+    private readonly Dictionary<string, (string, string)> _projectsPerReferencePath = new(MSBuildNameIgnoreCaseComparer.Default);
+    private readonly Dictionary<string, string> _projectsPerOutputPath = new(MSBuildNameIgnoreCaseComparer.Default);
+    private readonly HashSet<string> _projectsSeen = new(MSBuildNameIgnoreCaseComparer.Default);
+
+    private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
+    {
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects.
+        // We want to do the same prevention for both registered actions: EvaluatedPropertiesAction and EvaluatedItemsAction.
+        //  To avoid the need to have separate hashset for each of those functions - we use a single one and we use the fact that
+        //  both functions are always called after each other (EvaluatedPropertiesAction first, then EvaluatedItemsAction),
+        //  so this function just checks the hashset (not to prevent execution of EvaluatedItemsAction) and EvaluatedItemsAction
+        //  updates the hashset.
+        if (_projectsSeen.Contains(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        string? targetPath;
+
+        context.Data.EvaluatedProperties.TryGetValue(ItemMetadataNames.targetPath, out targetPath);
+
+        if (string.IsNullOrEmpty(targetPath))
+        {
+            return;
+        }
+
+        targetPath = BuildCheckUtilities.RootEvaluatedPath(targetPath, context.Data.ProjectFilePath);
+
+        _projectsPerOutputPath[targetPath] = context.Data.ProjectFilePath;
+
+        (string, string) projectProducingOutput;
+        if (_projectsPerReferencePath.TryGetValue(targetPath, out projectProducingOutput))
+        {
+            context.ReportResult(BuildCheckResult.Create(
+                SupportedRule,
+                // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
+                ElementLocation.EmptyLocation,
+                Path.GetFileName(context.Data.ProjectFilePath),
+                Path.GetFileName(projectProducingOutput.Item1),
+                projectProducingOutput.Item2));
+        }
+    }
+
+    private void EvaluatedItemsAction(BuildCheckDataContext<EvaluatedItemsCheckData> context)
+    {
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects.
+        if (!_projectsSeen.Add(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        foreach (ItemData itemData in context.Data.EnumerateItemsOfType(ItemNames.Reference))
+        {
+            string evaluatedReferencePath = itemData.EvaluatedInclude;
+            string referenceFullPath = BuildCheckUtilities.RootEvaluatedPath(evaluatedReferencePath, context.Data.ProjectFilePath);
+
+            _projectsPerReferencePath[referenceFullPath] = (context.Data.ProjectFilePath, evaluatedReferencePath);
+            string? projectReferencedViaOutput;
+            if (_projectsPerOutputPath.TryGetValue(referenceFullPath, out projectReferencedViaOutput))
+            {
+                context.ReportResult(BuildCheckResult.Create(
+                    SupportedRule,
+                    // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
+                    ElementLocation.EmptyLocation,
+                    Path.GetFileName(projectReferencedViaOutput),
+                    Path.GetFileName(context.Data.ProjectFilePath),
+                    evaluatedReferencePath));
+            }
+        }
+    }
+}
diff --git a/src/Build/BuildCheck/Checks/PropertiesUsageCheck.cs b/src/Build/BuildCheck/Checks/PropertiesUsageCheck.cs
index e2e01caf5e7..4223747f472 100644
--- a/src/Build/BuildCheck/Checks/PropertiesUsageCheck.cs
+++ b/src/Build/BuildCheck/Checks/PropertiesUsageCheck.cs
@@ -3,33 +3,31 @@
 
 using System;
 using System.Collections.Generic;
-using System.Diagnostics;
 using System.Linq;
 using Microsoft.Build.BuildCheck.Infrastructure;
 using Microsoft.Build.Collections;
 using Microsoft.Build.Evaluation;
-using Microsoft.Build.Experimental.BuildCheck;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 using Microsoft.Build.Shared;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Checks;
 
-internal class PropertiesUsageCheck : InternalCheck
+internal class PropertiesUsageCheck : WorkerNodeCheck
 {
     private static readonly CheckRule _usedBeforeInitializedRule = new CheckRule("BC0201", "PropertyUsedBeforeDeclared",
         ResourceUtilities.GetResourceString("BuildCheck_BC0201_Title")!,
         ResourceUtilities.GetResourceString("BuildCheck_BC0201_MessageFmt")!,
-        new CheckConfiguration() { Severity = CheckResultSeverity.Warning, EvaluationCheckScope = EvaluationCheckScope.ProjectFileOnly });
+        new CheckConfiguration() { RuleId = "BC0201", Severity = CheckResultSeverity.Warning, EvaluationCheckScope = EvaluationCheckScope.ProjectFileOnly });
 
     private static readonly CheckRule _initializedAfterUsedRule = new CheckRule("BC0202", "PropertyDeclaredAfterUsed",
         ResourceUtilities.GetResourceString("BuildCheck_BC0202_Title")!,
         ResourceUtilities.GetResourceString("BuildCheck_BC0202_MessageFmt")!,
-        new CheckConfiguration() { Severity = CheckResultSeverity.Warning, EvaluationCheckScope = EvaluationCheckScope.ProjectFileOnly });
+        new CheckConfiguration() { RuleId = "BC0202", Severity = CheckResultSeverity.Warning, EvaluationCheckScope = EvaluationCheckScope.ProjectFileOnly });
 
     private static readonly CheckRule _unusedPropertyRule = new CheckRule("BC0203", "UnusedPropertyDeclared",
         ResourceUtilities.GetResourceString("BuildCheck_BC0203_Title")!,
         ResourceUtilities.GetResourceString("BuildCheck_BC0203_MessageFmt")!,
-        new CheckConfiguration() { Severity = CheckResultSeverity.Suggestion, EvaluationCheckScope = EvaluationCheckScope.ProjectFileOnly });
+        new CheckConfiguration() { RuleId = "BC0203", Severity = CheckResultSeverity.None, EvaluationCheckScope = EvaluationCheckScope.ProjectFileOnly });
 
     internal static readonly IReadOnlyList<CheckRule> SupportedRulesList = [_usedBeforeInitializedRule, _initializedAfterUsedRule, _unusedPropertyRule];
 
@@ -148,7 +146,7 @@ private void ProcessPropertyWrite(BuildCheckDataContext<PropertyWriteData> conte
             {
                 _uninitializedReadsInScope.Remove(writeData.PropertyName);
 
-                context.ReportResult(BuildCheckResult.Create(
+                context.ReportResult(BuildCheckResult.CreateBuiltIn(
                     _initializedAfterUsedRule,
                     uninitInScopeReadLocation,
                     writeData.PropertyName, writeData.ElementLocation?.LocationString ?? string.Empty));
@@ -160,7 +158,7 @@ private void ProcessPropertyWrite(BuildCheckDataContext<PropertyWriteData> conte
             {
                 _uninitializedReadsOutOfScope.Remove(writeData.PropertyName);
 
-                context.ReportResult(BuildCheckResult.Create(
+                context.ReportResult(BuildCheckResult.CreateBuiltIn(
                     _initializedAfterUsedRule,
                     uninitOutScopeReadLocation,
                     writeData.PropertyName, writeData.ElementLocation?.LocationString ?? string.Empty));
@@ -205,7 +203,7 @@ private void ProcessPropertyRead(BuildCheckDataContext<PropertyReadData> context
                          readData.ElementLocation, readData.ProjectFilePath))
             {
                 // report immediately
-                context.ReportResult(BuildCheckResult.Create(
+                context.ReportResult(BuildCheckResult.CreateBuiltIn(
                     _usedBeforeInitializedRule,
                     readData.ElementLocation,
                     readData.PropertyName));
@@ -220,7 +218,7 @@ private void DoneWithProject(BuildCheckDataContext<ProjectRequestProcessingDoneD
         {
             if (propWithLocation.Value != null && !_readProperties.Contains(propWithLocation.Key))
             {
-                context.ReportResult(BuildCheckResult.Create(
+                context.ReportResult(BuildCheckResult.CreateBuiltIn(
                     _unusedPropertyRule,
                     propWithLocation.Value,
                     propWithLocation.Key));
@@ -231,7 +229,7 @@ private void DoneWithProject(BuildCheckDataContext<ProjectRequestProcessingDoneD
         //  uninitialized reads immediately (instead we wait if they are attempted to be initialized late).
         foreach (var uninitializedRead in _uninitializedReadsInScope)
         {
-            context.ReportResult(BuildCheckResult.Create(
+            context.ReportResult(BuildCheckResult.CreateBuiltIn(
                 _usedBeforeInitializedRule,
                 uninitializedRead.Value,
                 uninitializedRead.Key));
diff --git a/src/Build/BuildCheck/Checks/SharedOutputPathCheck.cs b/src/Build/BuildCheck/Checks/SharedOutputPathCheck.cs
index e01f62ab787..fe80a4ded80 100644
--- a/src/Build/BuildCheck/Checks/SharedOutputPathCheck.cs
+++ b/src/Build/BuildCheck/Checks/SharedOutputPathCheck.cs
@@ -1,15 +1,11 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
 using System.Collections.Generic;
-using System.Collections.Immutable;
-using System.Diagnostics;
 using System.IO;
-using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 using Microsoft.Build.Construction;
-using Microsoft.Build.Experimental.BuildCheck;
 using Microsoft.Build.Shared;
+using Microsoft.Build.Collections;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Checks;
 
@@ -37,12 +33,14 @@ public override void RegisterActions(IBuildCheckRegistrationContext registration
 
     internal override bool IsBuiltIn => true;
 
-    private readonly Dictionary<string, string> _projectsPerOutputPath = new(StringComparer.CurrentCultureIgnoreCase);
-    private readonly HashSet<string> _projects = new(StringComparer.CurrentCultureIgnoreCase);
+    private readonly Dictionary<string, string> _projectsPerOutputPath = new(MSBuildNameIgnoreCaseComparer.Default);
+    private readonly HashSet<string> _projectsSeen = new(MSBuildNameIgnoreCaseComparer.Default);
 
     private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
     {
-        if (!_projects.Add(context.Data.ProjectFilePath))
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects
+        if (!_projectsSeen.Add(context.Data.ProjectFilePath))
         {
             return;
         }
@@ -56,8 +54,8 @@ private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedProperties
         // Check objPath only if it is different from binPath
         if (
             !string.IsNullOrEmpty(objPath) && !string.IsNullOrEmpty(absoluteBinPath) &&
-            !objPath.Equals(binPath, StringComparison.CurrentCultureIgnoreCase)
-            && !objPath.Equals(absoluteBinPath, StringComparison.CurrentCultureIgnoreCase)
+            !MSBuildNameIgnoreCaseComparer.Default.Equals(objPath, binPath)
+            && !MSBuildNameIgnoreCaseComparer.Default.Equals(objPath, absoluteBinPath)
         )
         {
             CheckAndAddFullOutputPath(objPath, context);
@@ -72,20 +70,13 @@ private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedProperties
         }
 
         string projectPath = context.Data.ProjectFilePath;
-
-        if (!Path.IsPathRooted(path))
-        {
-            path = Path.Combine(Path.GetDirectoryName(projectPath)!, path);
-        }
-
-        // Normalize the path to avoid false negatives due to different path representations.
-        path = FileUtilities.NormalizePath(path);
+        path = BuildCheckUtilities.RootEvaluatedPath(path!, projectPath);
 
         if (_projectsPerOutputPath.TryGetValue(path!, out string? conflictingProject))
         {
-            context.ReportResult(BuildCheckResult.Create(
+            context.ReportResult(BuildCheckResult.CreateBuiltIn(
                 SupportedRule,
-                // Populating precise location tracked via https://github.com/orgs/dotnet/projects/373/views/1?pane=issue&itemId=58661732
+                // Populating precise location tracked via https://github.com/dotnet/msbuild/issues/10383
                 ElementLocation.EmptyLocation,
                 Path.GetFileName(projectPath),
                 Path.GetFileName(conflictingProject),
diff --git a/src/Build/BuildCheck/Checks/TargetFrameworkConfusionCheck.cs b/src/Build/BuildCheck/Checks/TargetFrameworkConfusionCheck.cs
new file mode 100644
index 00000000000..11918a93c95
--- /dev/null
+++ b/src/Build/BuildCheck/Checks/TargetFrameworkConfusionCheck.cs
@@ -0,0 +1,62 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.Collections.Generic;
+using System.IO;
+using Microsoft.Build.Collections;
+using Microsoft.Build.Construction;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Experimental.BuildCheck.Checks;
+internal class TargetFrameworkConfusionCheck : Check
+{
+    private const string RuleId = "BC0107";
+    public static CheckRule SupportedRule = new CheckRule(RuleId, "TargetFrameworkConfusion",
+        ResourceUtilities.GetResourceString("BuildCheck_BC0107_Title")!,
+        ResourceUtilities.GetResourceString("BuildCheck_BC0107_MessageFmt")!,
+        new CheckConfiguration() { RuleId = RuleId, Severity = CheckResultSeverity.Warning });
+
+    public override string FriendlyName => "MSBuild.TargetFrameworkConfusion";
+
+    public override IReadOnlyList<CheckRule> SupportedRules { get; } = [SupportedRule];
+
+    public override void Initialize(ConfigurationContext configurationContext)
+    {
+        /* This is it - no custom configuration */
+    }
+
+    public override void RegisterActions(IBuildCheckRegistrationContext registrationContext)
+    {
+        registrationContext.RegisterEvaluatedPropertiesAction(EvaluatedPropertiesAction);
+    }
+
+    internal override bool IsBuiltIn => true;
+
+    private readonly HashSet<string> _projectsSeen = new(MSBuildNameIgnoreCaseComparer.Default);
+
+    private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
+    {
+        // We want to avoid repeated checking of a same project (as it might be evaluated multiple times)
+        //  for this reason we use a hashset with already seen projects.
+        if (!_projectsSeen.Add(context.Data.ProjectFilePath))
+        {
+            return;
+        }
+
+        string? frameworks;
+        string? framework;
+        if (context.Data.EvaluatedProperties.TryGetValue(PropertyNames.TargetFrameworks, out frameworks) &&
+            context.Data.EvaluatedProperties.TryGetValue(PropertyNames.TargetFramework, out framework) &&
+            !context.Data.GlobalProperties.ContainsKey(PropertyNames.TargetFramework))
+        {
+            // {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}'
+            context.ReportResult(BuildCheckResult.Create(
+                SupportedRule,
+                // Populating precise location tracked via https://github.com/orgs/dotnet/projects/373/views/1?pane=issue&itemId=58661732
+                ElementLocation.EmptyLocation,
+                Path.GetFileName(context.Data.ProjectFilePath),
+                frameworks,
+                framework));
+        }
+    }
+}
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckBuildEventHandler.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckBuildEventHandler.cs
index 00cfedb15c0..b2e0055006e 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckBuildEventHandler.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckBuildEventHandler.cs
@@ -91,6 +91,7 @@ private void HandleProjectEvaluationStartedEvent(ProjectEvaluationStartedEventAr
                 eventArgs.ProjectFile!);
 
             _buildCheckManager.ProcessProjectEvaluationStarted(
+                BuildCheckDataSource.EventArgs,
                 checkContext,
                 eventArgs.ProjectFile!);
         }
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckCentralContext.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckCentralContext.cs
index d9ca747fc60..c9ce50476ea 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckCentralContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckCentralContext.cs
@@ -5,6 +5,7 @@
 using System.Collections.Generic;
 using System.Linq;
 using Microsoft.Build.BuildCheck.Infrastructure;
+using Microsoft.Build.Shared;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 
@@ -15,15 +16,20 @@ internal sealed class BuildCheckCentralContext
 {
     private readonly IConfigurationProvider _configurationProvider;
 
-    public BuildCheckCentralContext(IConfigurationProvider configurationProvider, Action<ICheckContext> removeThrottledChecks)
+    public BuildCheckCentralContext(
+        IConfigurationProvider configurationProvider,
+        Action<List<CheckWrapper>?, ICheckContext> removeCheck)
     {
         _configurationProvider = configurationProvider;
-        _removeThrottledChecks = removeThrottledChecks;
+        _removeChecks = removeCheck;
     }
 
     private record CallbackRegistry(
         List<(CheckWrapper, Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>>)> EvaluatedPropertiesActions,
+#pragma warning disable CS0618 // Type or member is obsolete
         List<(CheckWrapper, Action<BuildCheckDataContext<ParsedItemsCheckData>>)> ParsedItemsActions,
+#pragma warning restore CS0618 // Type or member is obsolete
+        List<(CheckWrapper, Action<BuildCheckDataContext<EvaluatedItemsCheckData>>)> EvaluatedItemsActions,
         List<(CheckWrapper, Action<BuildCheckDataContext<TaskInvocationCheckData>>)> TaskInvocationActions,
         List<(CheckWrapper, Action<BuildCheckDataContext<PropertyReadData>>)> PropertyReadActions,
         List<(CheckWrapper, Action<BuildCheckDataContext<PropertyWriteData>>)> PropertyWriteActions,
@@ -33,7 +39,7 @@ private record CallbackRegistry(
         List<(CheckWrapper, Action<BuildCheckDataContext<ProjectImportedCheckData>>)> ProjectImportedCheckDataActions)
     {
         public CallbackRegistry()
-            : this([], [], [], [], [], [], [], [], [])
+            : this([], [], [], [], [], [], [], [], [], [])
         {
         }
 
@@ -41,6 +47,7 @@ internal void DeregisterCheck(CheckWrapper check)
         {
             EvaluatedPropertiesActions.RemoveAll(a => a.Item1 == check);
             ParsedItemsActions.RemoveAll(a => a.Item1 == check);
+            EvaluatedItemsActions.RemoveAll(a => a.Item1 == check);
             PropertyReadActions.RemoveAll(a => a.Item1 == check);
             PropertyWriteActions.RemoveAll(a => a.Item1 == check);
             ProjectRequestProcessingDoneActions.RemoveAll(a => a.Item1 == check);
@@ -50,7 +57,8 @@ internal void DeregisterCheck(CheckWrapper check)
 
     // In a future we can have callbacks per project as well
     private readonly CallbackRegistry _globalCallbacks = new();
-    private readonly Action<ICheckContext> _removeThrottledChecks;
+    private readonly Action<List<CheckWrapper>?, ICheckContext> _removeChecks;
+
 
     // This we can potentially use to subscribe for receiving evaluated props in the
     //  build event args. However - this needs to be done early on, when checks might not be known yet
@@ -74,9 +82,14 @@ internal void RegisterEvaluatedPropertiesAction(CheckWrapper check, Action<Build
         //  (it was being communicated via MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION)
         => RegisterAction(check, evaluatedPropertiesAction, _globalCallbacks.EvaluatedPropertiesActions);
 
+#pragma warning disable CS0618 // Type or member is obsolete
     internal void RegisterParsedItemsAction(CheckWrapper check, Action<BuildCheckDataContext<ParsedItemsCheckData>> parsedItemsAction)
+#pragma warning restore CS0618 // Type or member is obsolete
         => RegisterAction(check, parsedItemsAction, _globalCallbacks.ParsedItemsActions);
 
+    internal void RegisterEvaluatedItemsAction(CheckWrapper check, Action<BuildCheckDataContext<EvaluatedItemsCheckData>> parsedItemsAction)
+        => RegisterAction(check, parsedItemsAction, _globalCallbacks.EvaluatedItemsActions);
+
     internal void RegisterTaskInvocationAction(CheckWrapper check, Action<BuildCheckDataContext<TaskInvocationCheckData>> taskInvocationAction)
         => RegisterAction(check, taskInvocationAction, _globalCallbacks.TaskInvocationActions);
 
@@ -130,13 +143,23 @@ internal void RunEvaluatedPropertiesActions(
         => RunRegisteredActions(_globalCallbacks.EvaluatedPropertiesActions, evaluatedPropertiesCheckData, checkContext, resultHandler);
 
     internal void RunParsedItemsActions(
+#pragma warning disable CS0618 // Type or member is obsolete
         ParsedItemsCheckData parsedItemsCheckData,
+#pragma warning restore CS0618 // Type or member is obsolete
         ICheckContext checkContext,
         Action<CheckWrapper, ICheckContext, CheckConfigurationEffective[], BuildCheckResult>
             resultHandler)
         => RunRegisteredActions(_globalCallbacks.ParsedItemsActions, parsedItemsCheckData,
             checkContext, resultHandler);
 
+    internal void RunEvaluatedItemsActions(
+        EvaluatedItemsCheckData evaluatedItemsCheckData,
+        ICheckContext checkContext,
+        Action<CheckWrapper, ICheckContext, CheckConfigurationEffective[], BuildCheckResult>
+            resultHandler)
+        => RunRegisteredActions(_globalCallbacks.EvaluatedItemsActions, evaluatedItemsCheckData,
+            checkContext, resultHandler);
+
     internal void RunTaskInvocationActions(
         TaskInvocationCheckData taskInvocationCheckData,
         ICheckContext checkContext,
@@ -189,6 +212,7 @@ private void RunRegisteredActions<T>(
     where T : CheckData
     {
         string projectFullPath = checkData.ProjectFilePath;
+        List<CheckWrapper>? checksToRemove = null;
 
         foreach (var checkCallback in registeredCallbacks)
         {
@@ -219,7 +243,6 @@ private void RunRegisteredActions<T>(
             // Here we might want to check the configPerRule[0].EvaluationsCheckScope - if the input data supports that
             // The decision and implementation depends on the outcome of the investigation tracked in:
             // https://github.com/orgs/dotnet/projects/373/views/1?pane=issue&itemId=57851137
-
             BuildCheckDataContext<T> context = new BuildCheckDataContext<T>(
                 checkCallback.Item1,
                 checkContext,
@@ -227,9 +250,24 @@ private void RunRegisteredActions<T>(
                 resultHandler,
                 checkData);
 
-            checkCallback.Item2(context);
+            try
+            {
+                checkCallback.Item2(context);
+            }
+            catch (Exception e)
+            {
+                checkContext.DispatchAsWarningFromText(
+                    null,
+                    null,
+                    null,
+                    new BuildEventFileInfo(projectFullPath),
+                    $"The check '{checkCallback.Item1.Check.FriendlyName}' threw an exception while executing a registered action with message: {e.Message}");
+
+                checksToRemove = checksToRemove ?? new List<CheckWrapper>();
+                checksToRemove.Add(checkCallback.Item1);
+            }
         }
 
-        _removeThrottledChecks(checkContext);
+        _removeChecks(checksToRemove, checkContext);
     }
 }
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConfigurationException.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConfigurationException.cs
index 98c04bb78f5..a653049d5dc 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConfigurationException.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConfigurationException.cs
@@ -2,10 +2,6 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
index 7e581e2979d..9e8782ae9ee 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
@@ -1,13 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using Microsoft.Build.BackEnd.Logging;
-using Microsoft.Build.Experimental.BuildCheck;
-using Microsoft.Build.Experimental.BuildCheck.Acquisition;
-using Microsoft.Build.Experimental.BuildCheck.Utilities;
 using Microsoft.Build.Framework;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure;
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
index 1ebd4c20522..cc9ee125ac1 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
@@ -74,7 +74,7 @@ internal BuildCheckManager()
         {
             _checkRegistry = new List<CheckFactoryContext>();
             _acquisitionModule = new BuildCheckAcquisitionModule();
-            _buildCheckCentralContext = new(_configurationProvider, RemoveThrottledChecks);
+            _buildCheckCentralContext = new(_configurationProvider, RemoveChecksAfterExecutedActions);
             _buildEventsProcessor = new(_buildCheckCentralContext);
         }
 
@@ -129,19 +129,34 @@ public void ProcessCheckAcquisition(
 
         private static T Construct<T>() where T : new() => new();
 
-        private static readonly (string[] ruleIds, bool defaultEnablement, CheckFactory factory)[][] s_builtInFactoriesPerDataSource =
+        /// <summary>
+        /// The builtin check factory definition
+        /// </summary>
+        /// <param name="RuleIds">The rule ids that the check is able to emit.</param>
+        /// <param name="DefaultEnablement">Is it enabled by default?</param>
+        /// <param name="Factory">Factory method to create the check.</param>
+        internal readonly record struct BuiltInCheckFactory(
+            string[] RuleIds,
+            bool DefaultEnablement,
+            CheckFactory Factory);
+
+        private static readonly BuiltInCheckFactory[][] s_builtInFactoriesPerDataSource =
         [
 
             // BuildCheckDataSource.EventArgs
             [
-                ([SharedOutputPathCheck.SupportedRule.Id], SharedOutputPathCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<SharedOutputPathCheck>),
-                ([DoubleWritesCheck.SupportedRule.Id], DoubleWritesCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<DoubleWritesCheck>),
-                ([NoEnvironmentVariablePropertyCheck.SupportedRule.Id], NoEnvironmentVariablePropertyCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<NoEnvironmentVariablePropertyCheck>)
+                new BuiltInCheckFactory([SharedOutputPathCheck.SupportedRule.Id], SharedOutputPathCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<SharedOutputPathCheck>),
+                new BuiltInCheckFactory([PreferProjectReferenceCheck.SupportedRule.Id], PreferProjectReferenceCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<PreferProjectReferenceCheck>),
+                new BuiltInCheckFactory([CopyAlwaysCheck.SupportedRule.Id], CopyAlwaysCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<CopyAlwaysCheck>),
+                new BuiltInCheckFactory([DoubleWritesCheck.SupportedRule.Id], DoubleWritesCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<DoubleWritesCheck>),
+                new BuiltInCheckFactory([NoEnvironmentVariablePropertyCheck.SupportedRule.Id], NoEnvironmentVariablePropertyCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<NoEnvironmentVariablePropertyCheck>),
+                new BuiltInCheckFactory([EmbeddedResourceCheck.SupportedRule.Id], EmbeddedResourceCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<EmbeddedResourceCheck>),
+                new BuiltInCheckFactory([TargetFrameworkConfusionCheck.SupportedRule.Id], TargetFrameworkConfusionCheck.SupportedRule.DefaultConfiguration.IsEnabled ?? false, Construct<TargetFrameworkConfusionCheck>),
             ],
 
             // BuildCheckDataSource.Execution
             [
-                (PropertiesUsageCheck.SupportedRulesList.Select(r => r.Id).ToArray(),
+                new BuiltInCheckFactory(PropertiesUsageCheck.SupportedRulesList.Select(r => r.Id).ToArray(),
                     PropertiesUsageCheck.SupportedRulesList.Any(r => r.DefaultConfiguration.IsEnabled ?? false),
                     Construct<PropertiesUsageCheck>)
             ]
@@ -150,19 +165,19 @@ private static readonly (string[] ruleIds, bool defaultEnablement, CheckFactory
         /// <summary>
         /// For tests only. TODO: Remove when check acquisition is done.
         /// </summary>
-        internal static (string[] ruleIds, bool defaultEnablement, CheckFactory factory)[][]? s_testFactoriesPerDataSource;
+        internal static BuiltInCheckFactory[][]? s_testFactoriesPerDataSource;
 
         private void RegisterBuiltInChecks(BuildCheckDataSource buildCheckDataSource)
         {
             _checkRegistry.AddRange(
                 s_builtInFactoriesPerDataSource[(int)buildCheckDataSource]
-                    .Select(v => new CheckFactoryContext(v.factory, v.ruleIds, v.defaultEnablement)));
+                    .Select(v => new CheckFactoryContext(v.Factory, v.RuleIds, v.DefaultEnablement)));
 
             if (s_testFactoriesPerDataSource is not null)
             {
                 _checkRegistry.AddRange(
                     s_testFactoriesPerDataSource[(int)buildCheckDataSource]
-                        .Select(v => new CheckFactoryContext(v.factory, v.ruleIds, v.defaultEnablement)));
+                        .Select(v => new CheckFactoryContext(v.Factory, v.RuleIds, v.DefaultEnablement)));
             }
         }
 
@@ -272,7 +287,15 @@ private void SetupSingleCheck(CheckFactoryContext checkFactoryContext, string pr
                 // Create the wrapper and register to central context
                 wrapper.StartNewProject(projectFullPath, configurations, userEditorConfigs);
                 var wrappedContext = new CheckRegistrationContext(wrapper, _buildCheckCentralContext);
-                check.RegisterActions(wrappedContext);
+                try
+                {
+                    check.RegisterActions(wrappedContext);
+                }
+                catch (Exception e)
+                {
+                    string message = $"The check '{check.FriendlyName}' failed to register actions with the following message: '{e.Message}'";
+                    throw new BuildCheckConfigurationException(message, e);
+                }
             }
             else
             {
@@ -331,12 +354,25 @@ private void RemoveInvalidChecks(List<CheckFactoryContext> checksToRemove, IChec
             }
         }
 
-        public void RemoveThrottledChecks(ICheckContext checkContext)
+        public void RemoveChecksAfterExecutedActions(List<CheckWrapper>? checksToRemove, ICheckContext checkContext)
         {
-            foreach (var checkToRemove in _checkRegistry.FindAll(c => c.MaterializedCheck?.IsThrottled ?? false))
+            if (checksToRemove is not null)
             {
-                checkContext.DispatchAsCommentFromText(MessageImportance.Normal, $"Dismounting check '{checkToRemove.FriendlyName}'. The check has exceeded the maximum number of results allowed. Any additional results will not be displayed.");
-                RemoveCheck(checkToRemove);
+                foreach (CheckWrapper check in checksToRemove)
+                {
+                    var checkFactory = _checkRegistry.Find(c => c.MaterializedCheck == check);
+                    if (checkFactory is not null)
+                    {
+                        checkContext.DispatchAsCommentFromText(MessageImportance.High, $"Dismounting check '{check.Check.FriendlyName}'. The check has thrown an unhandled exception while executing registered actions.");
+                        RemoveCheck(checkFactory);
+                    }
+                }
+            }
+
+            foreach (var throttledCheck in _checkRegistry.FindAll(c => c.MaterializedCheck?.IsThrottled ?? false))
+            {
+                checkContext.DispatchAsCommentFromText(MessageImportance.Normal, $"Dismounting check '{throttledCheck.FriendlyName}'. The check has exceeded the maximum number of results allowed. Any additional results will not be displayed.");
+                RemoveCheck(throttledCheck);
             }
         }
 
@@ -363,7 +399,7 @@ public void ProcessEvaluationFinishedEventArgs(
             if (!IsInProcNode)
             {
                 propertiesLookup =
-                    BuildEventsProcessor.ExtractPropertiesLookup(evaluationFinishedEventArgs);
+                    BuildEventsProcessor.ExtractEvaluatedPropertiesLookup(evaluationFinishedEventArgs);
                 Func<string, string?> getPropertyValue = p =>
                     propertiesLookup.TryGetValue(p, out string? value) ? value : null;
 
@@ -376,12 +412,10 @@ public void ProcessEvaluationFinishedEventArgs(
             {
                 if (importedProjects != null && TryGetProjectFullPath(checkContext.BuildEventContext, out string projectPath))
                 {
-                    lock (importedProjects)
+                    foreach (string importedProject in importedProjects)
                     {
-                        foreach (string importedProject in importedProjects)
-                        {
-                            _buildEventsProcessor.ProcessProjectImportedEventArgs(checkContext, projectPath, importedProject);
-                        }
+                        _buildEventsProcessor.ProcessProjectImportedEventArgs(checkContext, projectPath,
+                            importedProject);
                     }
                 }
             }
@@ -469,8 +503,9 @@ public void FinalizeProcessing(LoggingContext loggingContext)
 
         private readonly ConcurrentDictionary<int, string> _projectsByInstanceId = new();
         private readonly ConcurrentDictionary<int, string> _projectsByEvaluationId = new();
-
-        private readonly ConcurrentDictionary<int, HashSet<string>> _deferredProjectEvalIdToImportedProjects = new();
+        // We are receiving project imported data only from the logger events - hence always in a single threaded context
+        //  (https://github.com/dotnet/msbuild/blob/main/documentation/wiki/Logging-Internals.md)
+        private readonly Dictionary<int, HashSet<string>> _deferredProjectEvalIdToImportedProjects = new();
 
         /// <summary>
         /// This method fetches the project full path from the context id.
@@ -537,12 +572,22 @@ public void ProjectFirstEncountered(
             SetupChecksForNewProject(projectFullPath, checkContext);
         }
 
+        public void ProcessProjectEvaluationStarted(ICheckContext checkContext, string projectFullPath)
+            => ProcessProjectEvaluationStarted(BuildCheckDataSource.BuildExecution, checkContext, projectFullPath);
+
         public void ProcessProjectEvaluationStarted(
+            BuildCheckDataSource buildCheckDataSource,
             ICheckContext checkContext,
             string projectFullPath)
         {
             _projectsByEvaluationId[checkContext.BuildEventContext.EvaluationId] = projectFullPath;
-            _deferredProjectEvalIdToImportedProjects.TryAdd(checkContext.BuildEventContext.EvaluationId, [projectFullPath]);
+            // We are receiving project imported data only from the logger events
+            if (buildCheckDataSource == BuildCheckDataSource.EventArgs &&
+                !_deferredProjectEvalIdToImportedProjects.ContainsKey(checkContext.BuildEventContext.EvaluationId))
+            {
+                _deferredProjectEvalIdToImportedProjects.Add(checkContext.BuildEventContext.EvaluationId,
+                    [projectFullPath]);
+            }
         }
 
         /*
@@ -577,24 +622,17 @@ public void StartProjectRequest(ICheckContext checkContext, string projectFullPa
         private readonly Dictionary<int, List<BuildEventArgs>> _deferredEvalDiagnostics = new();
 
         /// <summary>
-        /// Propagates a newly imported project file to all projects that import the original project file.
-        /// This method ensures that if Project A imports Project B, and Project B now imports Project C,
-        /// then Project A will also show Project C as an import.
+        /// Registers the logic import by a project file.
         /// </summary>
         /// <param name="evaluationId">The evaluation id is associated with the root project path.</param>
-        /// <param name="originalProjectFile">The path of the project file that is importing a new project.</param>
-        /// <param name="newImportedProjectFile">The path of the newly imported project file.</param>
-        private void PropagateImport(int evaluationId, string originalProjectFile, string newImportedProjectFile)
+        /// <param name="importingProjectFile">The path of the project file that is importing a new project.</param>
+        /// <param name="importedFile">The path of the imported project file.</param>
+        private void PropagateImport(int evaluationId, string importingProjectFile, string importedFile)
         {
-            if (_deferredProjectEvalIdToImportedProjects.TryGetValue(evaluationId, out HashSet<string>? importedProjects))
+            if (_deferredProjectEvalIdToImportedProjects.TryGetValue(evaluationId,
+                    out HashSet<string>? importedProjects))
             {
-                lock (importedProjects)
-                {
-                    if (importedProjects.Contains(originalProjectFile))
-                    {
-                        importedProjects.Add(newImportedProjectFile);
-                    }
-                }
+                importedProjects.Add(importedFile);
             }
         }
 
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckReplayModeConnector.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckReplayModeConnector.cs
index 515b050a8cc..0c2dd47faad 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckReplayModeConnector.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckReplayModeConnector.cs
@@ -1,11 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.Execution;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
diff --git a/src/Build/BuildCheck/Infrastructure/BuildEventsProcessor.cs b/src/Build/BuildCheck/Infrastructure/BuildEventsProcessor.cs
index 3ab917a4850..c11bbf46671 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildEventsProcessor.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildEventsProcessor.cs
@@ -44,11 +44,18 @@ public TaskKey(BuildEventContext context)
     /// </summary>
     private readonly Dictionary<TaskKey, ExecutingTaskData> _tasksBeingExecuted = [];
 
-    internal static Dictionary<string, string> ExtractPropertiesLookup(ProjectEvaluationFinishedEventArgs evaluationFinishedEventArgs)
+    internal static Dictionary<string, string> ExtractEvaluatedPropertiesLookup(
+        ProjectEvaluationFinishedEventArgs evaluationFinishedEventArgs)
+        => ExtractPropertiesLookup(evaluationFinishedEventArgs.Properties);
+
+    private static Dictionary<string, string> ExtractPropertiesLookup(System.Collections.IEnumerable? propertiesFromEventArgs)
     {
         Dictionary<string, string> propertiesLookup = new Dictionary<string, string>();
-        Internal.Utilities.EnumerateProperties(evaluationFinishedEventArgs.Properties, propertiesLookup,
-            static (dict, kvp) => dict.Add(kvp.Key, kvp.Value));
+        if (propertiesFromEventArgs != null)
+        {
+            Internal.Utilities.EnumerateProperties(propertiesFromEventArgs, propertiesLookup,
+                static (dict, kvp) => dict.Add(kvp.Key, kvp.Value));
+        }
 
         return propertiesLookup;
     }
@@ -61,12 +68,14 @@ internal void ProcessEvaluationFinishedEventArgs(
     {
         if (_buildCheckCentralContext.HasEvaluatedPropertiesActions)
         {
-            propertiesLookup ??= ExtractPropertiesLookup(evaluationFinishedEventArgs);
+            propertiesLookup ??= ExtractEvaluatedPropertiesLookup(evaluationFinishedEventArgs);
+            var globalPropertiesLookup = ExtractPropertiesLookup(evaluationFinishedEventArgs.GlobalProperties);
 
             EvaluatedPropertiesCheckData checkData =
                 new(evaluationFinishedEventArgs.ProjectFile!,
                     evaluationFinishedEventArgs.BuildEventContext?.ProjectInstanceId,
-                    propertiesLookup!);
+                    propertiesLookup!,
+                    globalPropertiesLookup);
 
             _buildCheckCentralContext.RunEvaluatedPropertiesActions(checkData, checkContext, ReportResult);
         }
@@ -77,13 +86,17 @@ internal void ProcessEvaluationFinishedEventArgs(
                 evaluationFinishedEventArgs.ProjectFile!, /*unused*/
                 null, /*unused*/null, _cache, false /*Not explicitly loaded - unused*/);
 
+#pragma warning disable CS0618 // Type or member is obsolete
             ParsedItemsCheckData itemsCheckData = new(
+#pragma warning restore CS0618 // Type or member is obsolete
                 evaluationFinishedEventArgs.ProjectFile!,
                 evaluationFinishedEventArgs.BuildEventContext?.ProjectInstanceId,
                 new ItemsHolder(xml.Items, xml.ItemGroups));
 
             _buildCheckCentralContext.RunParsedItemsActions(itemsCheckData, checkContext, ReportResult);
         }
+
+        _buildCheckCentralContext.RunEvaluatedItemsActions(new EvaluatedItemsCheckData(evaluationFinishedEventArgs), checkContext, ReportResult);
     }
 
     /// <summary>
diff --git a/src/Build/BuildCheck/Infrastructure/CheckConfigurationEffective.cs b/src/Build/BuildCheck/Infrastructure/CheckConfigurationEffective.cs
index 0f857dad631..ffc0f6aeafc 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckConfigurationEffective.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckConfigurationEffective.cs
@@ -2,7 +2,6 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using Microsoft.Build.Experimental.BuildCheck;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 
diff --git a/src/Build/BuildCheck/Infrastructure/CheckContext/CheckDispatchingContext.cs b/src/Build/BuildCheck/Infrastructure/CheckContext/CheckDispatchingContext.cs
index e079df368d7..db34c92ce40 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckContext/CheckDispatchingContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckContext/CheckDispatchingContext.cs
@@ -2,11 +2,6 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
-using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.BackEnd.Shared;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Logging;
diff --git a/src/Build/BuildCheck/Infrastructure/CheckContext/CheckLoggingContext.cs b/src/Build/BuildCheck/Infrastructure/CheckContext/CheckLoggingContext.cs
index 13f308d2283..594182f8c32 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckContext/CheckLoggingContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckContext/CheckLoggingContext.cs
@@ -3,9 +3,6 @@
 
 using System;
 using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Framework.Telemetry;
diff --git a/src/Build/BuildCheck/Infrastructure/CheckContext/CheckLoggingContextFactory.cs b/src/Build/BuildCheck/Infrastructure/CheckContext/CheckLoggingContextFactory.cs
index 5f429c94b02..a313a5fc473 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckContext/CheckLoggingContextFactory.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckContext/CheckLoggingContextFactory.cs
@@ -1,11 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Framework;
 
diff --git a/src/Build/BuildCheck/Infrastructure/CheckContext/ICheckContext.cs b/src/Build/BuildCheck/Infrastructure/CheckContext/ICheckContext.cs
index 8cfa8b5b820..2f2660da1a8 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckContext/ICheckContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckContext/ICheckContext.cs
@@ -2,10 +2,6 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
 
diff --git a/src/Build/BuildCheck/Infrastructure/CheckRegistrationContext.cs b/src/Build/BuildCheck/Infrastructure/CheckRegistrationContext.cs
index 4ec9cd0a3a5..a3ec42eb469 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckRegistrationContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckRegistrationContext.cs
@@ -15,9 +15,14 @@ public void RegisterEnvironmentVariableReadAction(Action<BuildCheckDataContext<E
     public void RegisterEvaluatedPropertiesAction(Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>> evaluatedPropertiesAction) =>
         buildCheckCentralContext.RegisterEvaluatedPropertiesAction(checkWrapper, evaluatedPropertiesAction);
 
+#pragma warning disable CS0618 // Type or member is obsolete
     public void RegisterParsedItemsAction(Action<BuildCheckDataContext<ParsedItemsCheckData>> parsedItemsAction) =>
+#pragma warning restore CS0618 // Type or member is obsolete
         buildCheckCentralContext.RegisterParsedItemsAction(checkWrapper, parsedItemsAction);
 
+    public void RegisterEvaluatedItemsAction(Action<BuildCheckDataContext<EvaluatedItemsCheckData>> evaluatedItemsAction) =>
+        buildCheckCentralContext.RegisterEvaluatedItemsAction(checkWrapper, evaluatedItemsAction);
+
     public void RegisterTaskInvocationAction(Action<BuildCheckDataContext<TaskInvocationCheckData>> taskInvocationAction) =>
         buildCheckCentralContext.RegisterTaskInvocationAction(checkWrapper, taskInvocationAction);
 
diff --git a/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs b/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs
index 3f37852b585..c22bdbd0a0c 100644
--- a/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs
+++ b/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs
@@ -5,8 +5,6 @@
 using System.Collections.Generic;
 using System.Diagnostics;
 using System.Linq;
-using Microsoft.Build.BackEnd.Logging;
-using Microsoft.Build.Experimental.BuildCheck;
 using Microsoft.Build.Framework;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure;
diff --git a/src/Build/BuildCheck/Infrastructure/ConfigurationProvider.cs b/src/Build/BuildCheck/Infrastructure/ConfigurationProvider.cs
index f7fe9fd1e35..e0179b29c5d 100644
--- a/src/Build/BuildCheck/Infrastructure/ConfigurationProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/ConfigurationProvider.cs
@@ -5,7 +5,6 @@
 using System.Collections.Generic;
 using System.Linq;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure.EditorConfig;
-using Microsoft.Build.Experimental.BuildCheck;
 using System.Collections.Concurrent;
 using Microsoft.Build.Experimental.BuildCheck.Utilities;
 using Microsoft.Build.BuildCheck.Infrastructure;
diff --git a/src/Build/BuildCheck/Infrastructure/CustomConfigurationData.cs b/src/Build/BuildCheck/Infrastructure/CustomConfigurationData.cs
index 13cf12f0485..499c68edc5d 100644
--- a/src/Build/BuildCheck/Infrastructure/CustomConfigurationData.cs
+++ b/src/Build/BuildCheck/Infrastructure/CustomConfigurationData.cs
@@ -3,10 +3,6 @@
 
 using System;
 using System.Collections.Generic;
-using System.Diagnostics.CodeAnalysis;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 
 namespace Microsoft.Build.Experimental.BuildCheck;
 
diff --git a/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigFile.cs b/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigFile.cs
index f445cc008f6..e40d33efb34 100644
--- a/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigFile.cs
+++ b/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigFile.cs
@@ -9,14 +9,9 @@
 //  3. Remove the FilePath and receive only the text
 
 using System;
-using System.Collections.Generic;
 using System.Collections.Immutable;
 using System.Diagnostics;
-using System.IO;
-using System.Linq;
-using System.Text;
 using System.Text.RegularExpressions;
-using System.Threading.Tasks;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure.EditorConfig;
 
diff --git a/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigGlobsMatcher.cs b/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigGlobsMatcher.cs
index 60df42cb36d..5ae35d5ea75 100644
--- a/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigGlobsMatcher.cs
+++ b/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigGlobsMatcher.cs
@@ -9,15 +9,12 @@
 //  2. Exceptions. Wrap in try/catch blocks for proper reporting
 
 
-using System;
 using System.Collections.Generic;
 using System.Collections.Immutable;
 using System.Diagnostics;
 using System.IO;
-using System.Linq;
 using System.Text;
 using System.Text.RegularExpressions;
-using System.Threading.Tasks;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure.EditorConfig;
 
diff --git a/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigParser.cs b/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigParser.cs
index f4847834252..56b0842acf7 100644
--- a/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigParser.cs
+++ b/src/Build/BuildCheck/Infrastructure/EditorConfig/EditorConfigParser.cs
@@ -2,14 +2,9 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using System.Collections;
 using System.Collections.Concurrent;
 using System.Collections.Generic;
-using System.Drawing.Design;
 using System.IO;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 using Microsoft.Build.Shared;
 using static Microsoft.Build.Experimental.BuildCheck.Infrastructure.EditorConfig.EditorConfigGlobsMatcher;
 
diff --git a/src/Build/BuildCheck/Infrastructure/IBuildCheckManager.cs b/src/Build/BuildCheck/Infrastructure/IBuildCheckManager.cs
index 8971403ed22..82ddf65489e 100644
--- a/src/Build/BuildCheck/Infrastructure/IBuildCheckManager.cs
+++ b/src/Build/BuildCheck/Infrastructure/IBuildCheckManager.cs
@@ -74,7 +74,7 @@ void ProcessTaskParameterEventArgs(
     //  - but we still need to know about it, hence the dedicated event.
     void ProjectFirstEncountered(BuildCheckDataSource buildCheckDataSource, ICheckContext analysisContext, string projectFullPath);
 
-    void ProcessProjectEvaluationStarted(ICheckContext checksContext, string projectFullPath);
+    void ProcessProjectEvaluationStarted(BuildCheckDataSource buildCheckDataSource, ICheckContext checksContext, string projectFullPath);
 
     void EndProjectEvaluation(BuildEventContext buildEventContext);
 
diff --git a/src/Build/BuildCheck/Infrastructure/IBuildCheckManagerProvider.cs b/src/Build/BuildCheck/Infrastructure/IBuildCheckManagerProvider.cs
index 45eb5acea41..20825f70033 100644
--- a/src/Build/BuildCheck/Infrastructure/IBuildCheckManagerProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/IBuildCheckManagerProvider.cs
@@ -1,11 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 using Microsoft.Build.BackEnd;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure;
diff --git a/src/Build/BuildCheck/Infrastructure/NullBuildCheckManager.cs b/src/Build/BuildCheck/Infrastructure/NullBuildCheckManager.cs
index bcbe2075e84..f262903c187 100644
--- a/src/Build/BuildCheck/Infrastructure/NullBuildCheckManager.cs
+++ b/src/Build/BuildCheck/Infrastructure/NullBuildCheckManager.cs
@@ -61,6 +61,10 @@ public void ProjectFirstEncountered(BuildCheckDataSource buildCheckDataSource, I
     }
 
     public void ProcessProjectEvaluationStarted(ICheckContext checkContext, string projectFullPath)
+    { 
+    }
+
+    public void ProcessProjectEvaluationStarted(BuildCheckDataSource buildCheckDataSource, ICheckContext checkContext, string projectFullPath)
     {
     }
 
diff --git a/src/Build/BuildCheck/Infrastructure/NullBuildCheckManagerProvider.cs b/src/Build/BuildCheck/Infrastructure/NullBuildCheckManagerProvider.cs
index 33da469ac5f..31a192dc67e 100644
--- a/src/Build/BuildCheck/Infrastructure/NullBuildCheckManagerProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/NullBuildCheckManagerProvider.cs
@@ -1,14 +1,7 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 using Microsoft.Build.BackEnd;
-using Microsoft.Build.Experimental.BuildCheck;
-using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 
diff --git a/src/Build/BuildCheck/Infrastructure/TracingReporter.cs b/src/Build/BuildCheck/Infrastructure/TracingReporter.cs
index 05bb2f33cdc..d5f3f59d602 100644
--- a/src/Build/BuildCheck/Infrastructure/TracingReporter.cs
+++ b/src/Build/BuildCheck/Infrastructure/TracingReporter.cs
@@ -3,11 +3,7 @@
 
 using System;
 using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
 using Microsoft.Build.Experimental.BuildCheck.Utilities;
-using Microsoft.Build.Experimental.BuildCheck;
 
 namespace Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 
diff --git a/src/Build/BuildCheck/OM/BuildCheckDataContext.cs b/src/Build/BuildCheck/OM/BuildCheckDataContext.cs
index fd33666fbd9..b4ead9bb81b 100644
--- a/src/Build/BuildCheck/OM/BuildCheckDataContext.cs
+++ b/src/Build/BuildCheck/OM/BuildCheckDataContext.cs
@@ -2,14 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
-using Microsoft.Build.BackEnd.Logging;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
-using Microsoft.Build.Experimental;
-using Microsoft.Build.Framework;
 using System.IO;
 
 namespace Microsoft.Build.Experimental.BuildCheck;
diff --git a/src/Build/BuildCheck/OM/EvaluatedPropertiesCheckData.cs b/src/Build/BuildCheck/OM/EvaluatedPropertiesCheckData.cs
index fdf60017a4a..e681d01d7bd 100644
--- a/src/Build/BuildCheck/OM/EvaluatedPropertiesCheckData.cs
+++ b/src/Build/BuildCheck/OM/EvaluatedPropertiesCheckData.cs
@@ -13,11 +13,18 @@ public class EvaluatedPropertiesCheckData : CheckData
     internal EvaluatedPropertiesCheckData(
         string projectFilePath,
         int? projectConfigurationId,
-        IReadOnlyDictionary<string, string> evaluatedProperties)
-        : base(projectFilePath, projectConfigurationId) => EvaluatedProperties = evaluatedProperties;
+        IReadOnlyDictionary<string, string> evaluatedProperties,
+        IReadOnlyDictionary<string, string> globalProperties)
+        : base(projectFilePath, projectConfigurationId)
+        => (EvaluatedProperties, GlobalProperties) = (evaluatedProperties, globalProperties);
 
     /// <summary>
     /// Gets the evaluated properties of the project.
     /// </summary>
     public IReadOnlyDictionary<string, string> EvaluatedProperties { get; }
+
+    /// <summary>
+    /// Gets the global properties passed to the project.
+    /// </summary>
+    public IReadOnlyDictionary<string, string> GlobalProperties { get; }
 }
diff --git a/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs b/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
index 46c295514c3..c24ba4bda1d 100644
--- a/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
+++ b/src/Build/BuildCheck/OM/ParsedItemsCheckData.cs
@@ -7,6 +7,7 @@
 using Microsoft.Build.Collections;
 using Microsoft.Build.Construction;
 using Microsoft.Build.Framework;
+using Microsoft.Build.Logging;
 
 namespace Microsoft.Build.Experimental.BuildCheck;
 
@@ -40,9 +41,11 @@ public IEnumerable<ProjectItemElement> GetItemsOfType(string itemType)
 }
 
 /// <summary>
-/// BuildCheck OM data representing the evaluated items of a project.
+/// BuildCheck OM data representing the evaluated items of a project - but only those defined within the project!.
+/// No explicit nor implicit imports are regarded. If you are looking the get all evaluated items - use <see cref="EvaluatedItemsCheckData"/>
 /// </summary>
-public class ParsedItemsCheckData : CheckData
+[Obsolete("Use EvaluatedItemsData for access to evaluated items.", false)]
+public sealed class ParsedItemsCheckData : CheckData
 {
     internal ParsedItemsCheckData(
         string projectFilePath,
@@ -53,6 +56,36 @@ internal ParsedItemsCheckData(
     public ItemsHolder ItemsHolder { get; }
 }
 
+/// <summary>
+/// BuildCheck OM data representing the evaluated items of a project.
+/// </summary>
+public sealed class EvaluatedItemsCheckData : CheckData
+{
+    internal EvaluatedItemsCheckData(
+        ProjectEvaluationFinishedEventArgs evaluationFinishedEventArgs)
+        : base(evaluationFinishedEventArgs.ProjectFile!, evaluationFinishedEventArgs.BuildEventContext?.ProjectInstanceId)
+    {
+        _evaluationFinishedEventArgs = evaluationFinishedEventArgs;
+    }
+
+    private readonly ProjectEvaluationFinishedEventArgs _evaluationFinishedEventArgs;
+
+    /// <summary>
+    /// Lazy enumerates evaluated items for a current project.
+    /// </summary>
+    public IEnumerable<ItemData> EvaluatedItems => _evaluationFinishedEventArgs.EnumerateItems();
+
+    /// <summary>
+    /// Lazy enumerates evaluated items for a current project. Only items with matching type will be returned (case-insensitive, MSBuild valid names only).
+    /// </summary>
+    public IEnumerable<ItemData> EnumerateItemsOfType(string typeName) => _evaluationFinishedEventArgs.EnumerateItemsOfType(typeName);
+
+    /// <summary>
+    /// Lazy enumerates evaluated items for a current project. Only items with matching type will be returned (case-insensitive, MSBuild valid names only, matching any type from the given list).
+    /// </summary>
+    public IEnumerable<ItemData> EnumerateItemsOfTypes(string[] typeNames) => _evaluationFinishedEventArgs.EnumerateItemsOfTypes(typeNames);
+}
+
 /// <summary>
 /// BuildCheck OM data representing a task executed by a project.
 /// </summary>
diff --git a/src/Build/BuildCheck/OM/ProjectImportedCheckData.cs b/src/Build/BuildCheck/OM/ProjectImportedCheckData.cs
index e4172f52215..db7fdaaa591 100644
--- a/src/Build/BuildCheck/OM/ProjectImportedCheckData.cs
+++ b/src/Build/BuildCheck/OM/ProjectImportedCheckData.cs
@@ -1,8 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using Microsoft.Build.Experimental.BuildCheck;
-
 namespace Microsoft.Build.Experimental.BuildCheck;
 
 /// <summary>
diff --git a/src/Build/BuildCheck/OM/ProjectRequestProcessingDoneData.cs b/src/Build/BuildCheck/OM/ProjectRequestProcessingDoneData.cs
index 3fa36d4cde5..962713e88df 100644
--- a/src/Build/BuildCheck/OM/ProjectRequestProcessingDoneData.cs
+++ b/src/Build/BuildCheck/OM/ProjectRequestProcessingDoneData.cs
@@ -1,8 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using Microsoft.Build.Experimental.BuildCheck;
-
 namespace Microsoft.Build.Experimental.BuildCheck;
 
 /// <summary>
diff --git a/src/Build/BuildCheck/OM/PropertyReadData.cs b/src/Build/BuildCheck/OM/PropertyReadData.cs
index 3599b381a5d..531f9fdc4a4 100644
--- a/src/Build/BuildCheck/OM/PropertyReadData.cs
+++ b/src/Build/BuildCheck/OM/PropertyReadData.cs
@@ -3,7 +3,6 @@
 
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 using Microsoft.Build.Evaluation;
-using Microsoft.Build.Experimental.BuildCheck;
 using Microsoft.Build.Shared;
 
 namespace Microsoft.Build.Experimental.BuildCheck;
diff --git a/src/Build/BuildCheck/OM/PropertyWriteData.cs b/src/Build/BuildCheck/OM/PropertyWriteData.cs
index c15ac695031..bfdbad4ff74 100644
--- a/src/Build/BuildCheck/OM/PropertyWriteData.cs
+++ b/src/Build/BuildCheck/OM/PropertyWriteData.cs
@@ -1,7 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using Microsoft.Build.Experimental.BuildCheck;
 using Microsoft.Build.Experimental.BuildCheck.Infrastructure;
 using Microsoft.Build.Shared;
 
diff --git a/src/Build/BuildCheck/Utilities/BuildCheckUtilities.cs b/src/Build/BuildCheck/Utilities/BuildCheckUtilities.cs
new file mode 100644
index 00000000000..01461b7c9ef
--- /dev/null
+++ b/src/Build/BuildCheck/Utilities/BuildCheckUtilities.cs
@@ -0,0 +1,22 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.IO;
+using Microsoft.Build.Shared;
+
+namespace Microsoft.Build.Experimental.BuildCheck;
+
+internal static class BuildCheckUtilities
+{
+    internal static string RootEvaluatedPath(string path, string projectFilePath)
+    {
+        if (!Path.IsPathRooted(path))
+        {
+            path = Path.Combine(Path.GetDirectoryName(projectFilePath)!, path);
+        }
+        // Normalize the path to avoid false negatives due to different path representations.
+        path = FileUtilities.NormalizePath(path)!;
+
+        return path;
+    }
+}
diff --git a/src/Build/BuildCheck/Utilities/Constants.cs b/src/Build/BuildCheck/Utilities/Constants.cs
index a95f02452e5..e556a6aa37f 100644
--- a/src/Build/BuildCheck/Utilities/Constants.cs
+++ b/src/Build/BuildCheck/Utilities/Constants.cs
@@ -1,12 +1,6 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
-
 namespace Microsoft.Build.Experimental.BuildCheck.Utilities;
 
 /// <summary>
diff --git a/src/Build/CompatibilitySuppressions.xml b/src/Build/CompatibilitySuppressions.xml
index 9335aedb11f..32ca2f65e88 100644
--- a/src/Build/CompatibilitySuppressions.xml
+++ b/src/Build/CompatibilitySuppressions.xml
@@ -1,25 +1,4 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <!-- https://learn.microsoft.com/dotnet/fundamentals/package-validation/diagnostic-ids -->
 <Suppressions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterProjectImportedAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.ProjectImportedCheckData}})</Target>
-    <Left>lib/net472/Microsoft.Build.dll</Left>
-    <Right>lib/net472/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterProjectImportedAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.ProjectImportedCheckData}})</Target>
-    <Left>lib/net9.0/Microsoft.Build.dll</Left>
-    <Right>lib/net9.0/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
-  <Suppression>
-    <DiagnosticId>CP0006</DiagnosticId>
-    <Target>M:Microsoft.Build.Experimental.BuildCheck.IBuildCheckRegistrationContext.RegisterProjectImportedAction(System.Action{Microsoft.Build.Experimental.BuildCheck.BuildCheckDataContext{Microsoft.Build.Experimental.BuildCheck.ProjectImportedCheckData}})</Target>
-    <Left>ref/net9.0/Microsoft.Build.dll</Left>
-    <Right>ref/net9.0/Microsoft.Build.dll</Right>
-    <IsBaselineSuppression>true</IsBaselineSuppression>
-  </Suppression>
 </Suppressions>
\ No newline at end of file
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index d2ef5ebb151..daf8d0ea71b 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -2239,7 +2239,7 @@ private LoadImportsResult ExpandAndLoadImportsFromUnescapedImportExpression(stri
                             VerifyVSDistributionPath(importElement.Project, importLocationInProject);
 
                             ProjectErrorUtilities.ThrowInvalidProject(importLocationInProject, "ImportedProjectNotFound",
-                                                                      importFileUnescaped, importExpressionEscaped);
+                                                                      importFileUnescaped, unescapedExpression, importExpressionEscaped);
                         }
                         else
                         {
diff --git a/src/Build/Evaluation/Expander.cs b/src/Build/Evaluation/Expander.cs
index aef481962ab..05ad3902a6f 100644
--- a/src/Build/Evaluation/Expander.cs
+++ b/src/Build/Evaluation/Expander.cs
@@ -129,7 +129,7 @@ internal enum ExpanderOptions
     /// </remarks>
     /// <typeparam name="P">Type of the properties used.</typeparam>
     /// <typeparam name="I">Type of the items used.</typeparam>
-    internal class Expander<P, I>
+    internal partial class Expander<P, I>
         where P : class, IProperty
         where I : class, IItem
     {
@@ -952,7 +952,7 @@ internal static string ExpandMetadataLeaveEscaped(string expression, IMetadataTa
                         // if there are no item vectors in the string
                         // run a simpler Regex to find item metadata references
                         MetadataMatchEvaluator matchEvaluator = new MetadataMatchEvaluator(metadata, options, elementLocation, loggingContext);
-                        result = RegularExpressions.ItemMetadataPattern.Value.Replace(expression, new MatchEvaluator(matchEvaluator.ExpandSingleMetadata));
+                        result = RegularExpressions.ItemMetadataRegex.Replace(expression, new MatchEvaluator(matchEvaluator.ExpandSingleMetadata));
                     }
                     else
                     {
@@ -983,7 +983,7 @@ internal static string ExpandMetadataLeaveEscaped(string expression, IMetadataTa
                                 // Extract the part of the expression that appears before the item vector expression
                                 // e.g. the ABC in ABC@(foo->'%(FullPath)')
                                 string subExpressionToReplaceIn = expression.Substring(start, itemVectorExpressions[n].Index - start);
-                                string replacementResult = RegularExpressions.NonTransformItemMetadataPattern.Value.Replace(subExpressionToReplaceIn, new MatchEvaluator(matchEvaluator.ExpandSingleMetadata));
+                                string replacementResult = RegularExpressions.NonTransformItemMetadataRegex.Replace(subExpressionToReplaceIn, new MatchEvaluator(matchEvaluator.ExpandSingleMetadata));
 
                                 // Append the metadata replacement
                                 finalResultBuilder.Append(replacementResult);
@@ -991,7 +991,7 @@ internal static string ExpandMetadataLeaveEscaped(string expression, IMetadataTa
                                 // Expand any metadata that appears in the item vector expression's separator
                                 if (itemVectorExpressions[n].Separator != null)
                                 {
-                                    vectorExpression = RegularExpressions.NonTransformItemMetadataPattern.Value.Replace(itemVectorExpressions[n].Value, new MatchEvaluator(matchEvaluator.ExpandSingleMetadata), -1, itemVectorExpressions[n].SeparatorStart);
+                                    vectorExpression = RegularExpressions.NonTransformItemMetadataRegex.Replace(itemVectorExpressions[n].Value, new MatchEvaluator(matchEvaluator.ExpandSingleMetadata), -1, itemVectorExpressions[n].SeparatorStart);
                                 }
 
                                 // Append the item vector expression as is
@@ -1008,7 +1008,7 @@ internal static string ExpandMetadataLeaveEscaped(string expression, IMetadataTa
                         if (start < expression.Length)
                         {
                             string subExpressionToReplaceIn = expression.Substring(start);
-                            string replacementResult = RegularExpressions.NonTransformItemMetadataPattern.Value.Replace(subExpressionToReplaceIn, new MatchEvaluator(matchEvaluator.ExpandSingleMetadata));
+                            string replacementResult = RegularExpressions.NonTransformItemMetadataRegex.Replace(subExpressionToReplaceIn, new MatchEvaluator(matchEvaluator.ExpandSingleMetadata));
 
                             finalResultBuilder.Append(replacementResult);
                         }
@@ -2719,7 +2719,7 @@ internal static IEnumerable<KeyValuePair<string, S>> ExpandQuotedExpressionFunct
                         {
                             matchEvaluator = new MetadataMatchEvaluator(item.Key, item.Value, elementLocation);
 
-                            include = RegularExpressions.ItemMetadataPattern.Value.Replace(arguments[0], matchEvaluator.GetMetadataValueFromMatch);
+                            include = RegularExpressions.ItemMetadataRegex.Replace(arguments[0], matchEvaluator.GetMetadataValueFromMatch);
                         }
 
                         // Include may be empty. Historically we have created items with empty include
@@ -3086,13 +3086,19 @@ internal string GetMetadataValueFromMatch(Match match)
         /// Regular expressions used by the expander.
         /// The expander currently uses regular expressions rather than a parser to do its work.
         /// </summary>
-        private static class RegularExpressions
+        private static partial class RegularExpressions
         {
             /**************************************************************************************************************************
             * WARNING: The regular expressions below MUST be kept in sync with the expressions in the ProjectWriter class -- if the
             * description of an item vector changes, the expressions must be updated in both places.
             *************************************************************************************************************************/
 
+
+
+#if NET7_0_OR_GREATER
+            [GeneratedRegex(ItemMetadataSpecification, RegexOptions.IgnorePatternWhitespace | RegexOptions.ExplicitCapture)]
+            internal static partial Regex ItemMetadataPattern();
+#else
             /// <summary>
             /// Regular expression used to match item metadata references embedded in strings.
             /// For example, %(Compile.DependsOn) or %(DependsOn).
@@ -3100,10 +3106,23 @@ private static class RegularExpressions
             internal static readonly Lazy<Regex> ItemMetadataPattern = new Lazy<Regex>(
                 () => new Regex(ItemMetadataSpecification,
                     RegexOptions.IgnorePatternWhitespace | RegexOptions.ExplicitCapture | RegexOptions.Compiled));
+#endif
 
-            /// <summary>
-            /// Name of the group matching the "name" of a metadatum.
-            /// </summary>
+            internal static Regex ItemMetadataRegex
+            {
+                get
+                {
+#if NET7_0_OR_GREATER
+                    return ItemMetadataPattern();
+#else
+                    return ItemMetadataPattern.Value;
+#endif
+                }
+            }
+
+                /// <summary>
+                /// Name of the group matching the "name" of a metadatum.
+                /// </summary>
             internal const string NameGroup = "NAME";
 
             /// <summary>
@@ -3116,18 +3135,35 @@ private static class RegularExpressions
             /// </summary>
             internal const string ItemTypeGroup = "ITEM_TYPE";
 
+            internal const string NonTransformItemMetadataSpecification = @"((?<=" + ItemVectorWithTransformLHS + @")" + ItemMetadataSpecification + @"(?!" +
+                                                                ItemVectorWithTransformRHS + @")) | ((?<!" + ItemVectorWithTransformLHS + @")" +
+                                                                ItemMetadataSpecification + @"(?=" + ItemVectorWithTransformRHS + @")) | ((?<!" +
+                                                                ItemVectorWithTransformLHS + @")" + ItemMetadataSpecification + @"(?!" +
+                                                                ItemVectorWithTransformRHS + @"))";
+
+#if NET7_0_OR_GREATER
+            [GeneratedRegex(NonTransformItemMetadataSpecification, RegexOptions.IgnorePatternWhitespace | RegexOptions.ExplicitCapture)]
+            internal static partial Regex NonTransformItemMetadataPattern();
+#else
             /// <summary>
             /// regular expression used to match item metadata references outside of item vector transforms.
             /// </summary>
             /// <remarks>PERF WARNING: this Regex is complex and tends to run slowly.</remarks>
             internal static readonly Lazy<Regex> NonTransformItemMetadataPattern = new Lazy<Regex>(
-                () => new Regex(
-                    @"((?<=" + ItemVectorWithTransformLHS + @")" + ItemMetadataSpecification + @"(?!" +
-                    ItemVectorWithTransformRHS + @")) | ((?<!" + ItemVectorWithTransformLHS + @")" +
-                    ItemMetadataSpecification + @"(?=" + ItemVectorWithTransformRHS + @")) | ((?<!" +
-                    ItemVectorWithTransformLHS + @")" + ItemMetadataSpecification + @"(?!" +
-                    ItemVectorWithTransformRHS + @"))",
-                    RegexOptions.IgnorePatternWhitespace | RegexOptions.ExplicitCapture | RegexOptions.Compiled));
+                () => new Regex(NonTransformItemMetadataSpecification,
+                                RegexOptions.IgnorePatternWhitespace | RegexOptions.ExplicitCapture | RegexOptions.Compiled));
+#endif
+            internal static Regex NonTransformItemMetadataRegex
+            {
+                get
+                {
+#if NET7_0_OR_GREATER
+                    return NonTransformItemMetadataPattern();
+#else
+                    return NonTransformItemMetadataPattern.Value;
+#endif
+                }
+            }
 
             /// <summary>
             /// Complete description of an item metadata reference, including the optional qualifying item type.
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
index 9fd2cd14812..0b97024c472 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
@@ -324,7 +324,7 @@ void HandleError(FormatErrorMessage msgFactory, bool noThrow, ReaderErrorType re
                 BinaryLogRecordKind.UninitializedPropertyRead => ReadUninitializedPropertyReadEventArgs(),
                 BinaryLogRecordKind.PropertyInitialValueSet => ReadPropertyInitialValueSetEventArgs(),
                 BinaryLogRecordKind.AssemblyLoad => ReadAssemblyLoadEventArgs(),
-                BinaryLogRecordKind.BuildCheckMessage => ReadBuildCheckMessageEventArgs(),
+                BinaryLogRecordKind.BuildCheckMessage => ReadBuildMessageEventArgs(),
                 BinaryLogRecordKind.BuildCheckWarning => ReadBuildWarningEventArgs(),
                 BinaryLogRecordKind.BuildCheckError => ReadBuildErrorEventArgs(),
                 BinaryLogRecordKind.BuildCheckTracing => ReadBuildCheckTracingEventArgs(),
@@ -1223,15 +1223,6 @@ private BuildEventArgs ReadPropertyInitialValueSetEventArgs()
             return e;
         }
 
-        private BuildEventArgs ReadBuildCheckMessageEventArgs()
-        {
-            var fields = ReadBuildEventArgsFields();
-            var e = new BuildCheckResultMessage(fields.Message);
-            SetCommonFields(e, fields);
-
-            return e;
-        }
-
         private AssemblyLoadBuildEventArgs ReadAssemblyLoadEventArgs()
         {
             var fields = ReadBuildEventArgsFields(readImportance: false);
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
index 77121b29b21..dba52023339 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsWriter.cs
@@ -323,27 +323,6 @@ private BinaryLogRecordKind Write(ProjectEvaluationStartedEventArgs e)
             return BinaryLogRecordKind.ProjectEvaluationStarted;
         }
 
-        private BinaryLogRecordKind Write(BuildCheckResultMessage e)
-        {
-            WriteBuildEventArgsFields(e, writeMessage: true);
-
-            return BinaryLogRecordKind.BuildCheckMessage;
-        }
-
-        private BinaryLogRecordKind Write(BuildCheckResultWarning e)
-        {
-            WriteBuildEventArgsFields(e, writeMessage: true);
-
-            return BinaryLogRecordKind.BuildCheckWarning;
-        }
-
-        private BinaryLogRecordKind Write(BuildCheckResultError e)
-        {
-            WriteBuildEventArgsFields(e, writeMessage: true);
-
-            return BinaryLogRecordKind.BuildCheckError;
-        }
-
         private BinaryLogRecordKind Write(BuildCheckTracingEventArgs e)
         {
             WriteBuildEventArgsFields(e, writeMessage: false);
@@ -537,7 +516,6 @@ private BinaryLogRecordKind Write(BuildMessageEventArgs e)
                 case PropertyInitialValueSetEventArgs propertyInitialValueSet: return Write(propertyInitialValueSet);
                 case CriticalBuildMessageEventArgs criticalBuildMessage: return Write(criticalBuildMessage);
                 case AssemblyLoadBuildEventArgs assemblyLoad: return Write(assemblyLoad);
-                case BuildCheckResultMessage buildCheckMessage: return Write(buildCheckMessage);
 
                 default: // actual BuildMessageEventArgs
                     WriteMessageFields(e, writeImportance: true);
diff --git a/src/Build/Logging/BuildEventArgsExtensions.cs b/src/Build/Logging/BuildEventArgsExtensions.cs
index e65ffcd7902..33b971eefc1 100644
--- a/src/Build/Logging/BuildEventArgsExtensions.cs
+++ b/src/Build/Logging/BuildEventArgsExtensions.cs
@@ -45,6 +45,15 @@ public static IEnumerable<ItemData> EnumerateItemsOfType(
         this ProjectEvaluationFinishedEventArgs eventArgs, string typeName)
         => EnumerateItemsOfType(eventArgs.Items, typeName);
 
+    /// <summary>
+    /// Lazy enumerates and partially strong types items from Items property. Only items with any matching type will be returned (case-insensitive, MSBuild valid names only).
+    /// The actual item value is proxied via accessor methods - to be able to provide defined interface
+    /// </summary>
+    /// <returns></returns>
+    public static IEnumerable<ItemData> EnumerateItemsOfTypes(
+        this ProjectEvaluationFinishedEventArgs eventArgs, string[] typeNames)
+        => EnumerateItemsOfTypes(eventArgs.Items, typeNames);
+
     /// <summary>
     /// Lazy enumerates and strong types items from Items property.
     /// The actual item value is proxied via accessor methods - to be able to provide defined interface
@@ -62,6 +71,15 @@ public static IEnumerable<ItemData> EnumerateItemsOfType(
         this ProjectStartedEventArgs eventArgs, string typeName)
         => EnumerateItemsOfType(eventArgs.Items, typeName);
 
+    /// <summary>
+    /// Lazy enumerates and partially strong types items from Items property. Only items with any matching type will be returned (case-insensitive, MSBuild valid names only).
+    /// The actual item value is proxied via accessor methods - to be able to provide defined interface
+    /// </summary>
+    /// <returns></returns>
+    public static IEnumerable<ItemData> EnumerateItemsOfTypes(
+        this ProjectStartedEventArgs eventArgs, string[] typeNames)
+        => EnumerateItemsOfTypes(eventArgs.Items, typeNames);
+
     private static IEnumerable<PropertyData> EnumerateProperties(IEnumerable? properties)
         => Internal.Utilities.EnumerateProperties(properties);
 
@@ -70,4 +88,7 @@ private static IEnumerable<ItemData> EnumerateItems(IEnumerable? items)
 
     private static IEnumerable<ItemData> EnumerateItemsOfType(IEnumerable? items, string typeName)
         => Internal.Utilities.EnumerateItemsOfType(items, typeName);
+
+    private static IEnumerable<ItemData> EnumerateItemsOfTypes(IEnumerable? items, string[] typeNames)
+        => Internal.Utilities.EnumerateItemsOfTypes(items, typeNames);
 }
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 7b95b38a8af..2f6a8ee8a5a 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -88,6 +88,9 @@
     <Compile Include="..\Shared\StringExtensions.cs">
       <Link>SharedUtilities\StringExtensions.cs</Link>
     </Compile>
+    <Compile Include="..\Shared\StringUtils.cs">
+      <Link>SharedUtilities\StringUtils.cs</Link>
+    </Compile>
     <Compile Include="..\Shared\ReadOnlyEmptyCollection.cs">
       <Link>Collections\ReadOnlyEmptyCollection.cs</Link>
     </Compile>
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index 54661e23651..01ebc97d203 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -534,7 +534,7 @@
     <comment>{StrBegin="MSB4101: "}</comment>
   </data>
   <data name="ImportedProjectNotFound" xml:space="preserve">
-    <value>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</value>
+    <value>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</value>
     <comment>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</comment>
   </data>
   <data name="ImportedProjectFromVSDistribution" xml:space="preserve">
@@ -2168,6 +2168,36 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
     <value>'{0}' with value: '{1}'</value>
 	<comment>Will be used as a parameter {0} in previous message.</comment>
   </data>
+  <data name="BuildCheck_BC0104_Title" xml:space="preserve">
+    <value>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</value>
+  </data>
+  <data name="BuildCheck_BC0104_MessageFmt" xml:space="preserve">
+    <value>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</value>
+  </data>
+  <data name="BuildCheck_BC0105_Title" xml:space="preserve">
+    <value>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</value>
+	  <comment>Terms in quotes are not to be translated.</comment>
+  </data>
+  <data name="BuildCheck_BC0105_MessageFmt" xml:space="preserve">
+    <value>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</value>
+	  <comment>Terms in quotes are not to be translated.</comment>
+  </data>
+  <data name="BuildCheck_BC0106_Title" xml:space="preserve">
+    <value>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</value>
+	  <comment>Terms in quotes are not to be translated.</comment>
+  </data>
+  <data name="BuildCheck_BC0106_MessageFmt" xml:space="preserve">
+    <value>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</value>
+	  <comment>Terms in quotes are not to be translated.</comment>
+  </data>
+  <data name="BuildCheck_BC0107_Title" xml:space="preserve">
+    <value>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</value>
+	  <comment>Terms in quotes are not to be translated.</comment>
+  </data>
+  <data name="BuildCheck_BC0107_MessageFmt" xml:space="preserve">
+    <value>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</value>
+	  <comment>Terms in quotes are not to be translated.</comment>
+  </data>
   <data name="BuildCheck_BC0201_Title" xml:space="preserve">
     <value>A property that is accessed should be declared first.</value>
   </data>
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index c7bfcf054a0..aedbdc18a6e 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -171,6 +171,46 @@
         <target state="translated">Během sestavování by se neměla používat žádná implicitní vlastnost odvozená z proměnné prostředí.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">Projekt {0} odkazuje na výstup projektu {1}. Odkazovaná cesta: {2}. Místo toho by se měla použít položka ProjectReference.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">Na projekt by se nemělo odkazovat přes Reference na jeho výstup, ale přímo přes ProjectReference.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">Projekt {0} určuje položku EmbeddedResource {1}, která má pravděpodobně příponu určující jazykovou verzi ({2}), ale nejsou zadána explicitní metadata Culture ani WithCulture=false.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">Doporučujeme u položky EmbeddedResource zadat explicitní metadata Culture nebo metadata WithCulture=false, aby se zabránilo chybnému nebo nedeterministickému odhadu jazykové verze.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">{0} projektu určuje vlastnost TargetFrameworks '{1}' a vlastnost TargetFramework '{2}' současně. To způsobí, že se TargetFrameworks bude ignorovat a sestavení se bude chovat jako jednocílový.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">Vlastnosti TargetFramework (singular) a TargetFrameworks (plural) by se neměly zadává ve skriptech současně.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">{0} projektu určuje '{1}' položku '{2}', která má Vlastnost CopyToOutputDirectory nastavenou na hodnotu Always. Změňte metadata nebo použijte vlastnost CopyToOutputDirectory.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Nezadávejte always pro CopyToOutputDirectory, protože to může způsobit nepotřebné operace kopírování během sestavování. Pokud chcete používat efektivnější kopírování, použijte hodnotu metadat PreserveNeexport nebo IfDifferent, nebo nastavte vlastnost SkipUnchangedFilesOnCopyAlways na true.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">K vlastnosti: {0} bylo přistupováno, ale nebyla nikdy inicializována.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">Bylo nalezeno více přetížení pro metodu {0} s tímto počtem parametrů: {1}. To v současné době není podporováno.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Chyby: {3}</target>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: Importovaný projekt {0} se nenašel. Ověřte, jestli je výraz v deklaraci Import {1} správný a jestli soubor existuje na disku.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: Importovaný projekt {0} se nenašel. Ověřte, jestli je výraz v deklaraci Import {1}, který se vyhodnotil na {2}, správný a jestli soubor existuje na disku.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index a43127ade78..0811ddc620d 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -171,6 +171,46 @@
         <target state="translated">Während der Erstellung sollte keine implizite Eigenschaft verwendet werden, die von einer Umgebungsvariablen abgeleitet ist.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">Das Projekt "{0}" verweist auf die Ausgabe eines Projekts "{1}". Pfad, auf den verwiesen wird: {2}. Stattdessen sollte ProjectReference verwendet werden.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">Auf ein Projekt darf nicht über "Reference" auf seine Ausgabe verwiesen werden, sondern direkt über "ProjectReference".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">Projekt {0} gibt das Element „EmbeddedResource“ „{1}“ an, das möglicherweise eine Kulturerweiterung („{2}“) aufweist, aber explizite „Culture“- oder „WithCulture=false“-Metadaten nicht angegeben werden.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">Es wird empfohlen, explizite „Culture“-Metadaten oder „WithCulture=false“-Metadaten mit dem Element „EmbeddedResource“ anzugeben, um eine falsche oder nicht deterministische Kulturschätzung zu vermeiden.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">Das Projekt {0} gibt die Eigenschaft "TargetFrameworks" '{1}' und die Eigenschaft "TargetFramework" '{2}' gleichzeitig an. Dies führt dazu, dass "TargetFrameworks" ignoriert wird, und der Build verhält sich als Einzelziel.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">Die Eigenschaften "TargetFramework" (Singular) und "TargetFrameworks" (plural) dürfen nicht gleichzeitig in den Skripts angegeben werden.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">Projekt {0} gibt '{1}' Element '{2}' an, für das "CopyToOutputDirectory" auf "Always" festgelegt ist. Ändern Sie die Metadaten, oder verwenden Sie die CopyToOutputDirectory-Eigenschaft.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Vermeiden Sie die Angabe von "Always" für "CopyToOutputDirectory", da dies zu unnötigen Kopiervorgängen während des Buildvorgangs führen kann. Verwenden Sie den Metadatenwert "PreserveNewest" oder "IfDifferent", oder legen Sie die Eigenschaft "SkipUnchangedFilesOnCopyAlways" auf TRUE fest, um effektiveres Kopieren zu verwenden.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Auf die Eigenschaft „{0}“ wurde zugegriffen, sie wurde jedoch nie initialisiert.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">Es wurden mehrere Überladungen für die Methode „{0}“ mit {1} Parametern gefunden. Dies wird derzeit nicht unterstützt.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Fehler: {3}</target>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: Das importierte Projekt "{0}" wurde nicht gefunden. Stellen Sie sicher, dass der Ausdruck in der Import-Deklaration "{1}" richtig ist und dass die Datei auf dem Datenträger vorhanden ist.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: Das importierte Projekt „{0}“ wurde nicht gefunden. Stellen Sie sicher, dass der Ausdruck in der Importdeklaration „{1}“, der als „{2}“ ausgewertet wurde, richtig ist und dass die Datei auf dem Datenträger vorhanden ist.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index 3af6950b952..04f23fad994 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -171,6 +171,46 @@
         <target state="translated">No se debe usar ninguna propiedad implícita derivada de una variable de entorno durante la compilación.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">El proyecto {0} hace referencia a la salida de un proyecto {1}. Ruta de acceso a la que se hace referencia: {2}. En su lugar, se debe usar ProjectReference.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">No se debe hacer referencia a un proyecto a través de "Reference" a su salida, sino directamente a través de "ProjectReference".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">El proyecto {0} especifica el elemento "EmbeddedResource" "{1}", que posiblemente tiene una extensión de denotación de referencia cultural ("{2}"), pero no se especifican los metadatos explícitos "Culture" ni "WithCulture=false".</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">Se recomienda especificar metadatos "Culture" explícitos o metadatos "WithCulture=false" con el elemento "EmbeddedResource" para evitar una estimación incorrecta o no determinista de la referencia cultural.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">El {0} del proyecto especifica la propiedad 'TargetFrameworks' '{1}' y la propiedad 'TargetFramework' '{2}' al mismo tiempo. Esto hará que se omitió "TargetFrameworks" y la compilación se comportará como de destino único.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">Las propiedades 'TargetFramework' (singular) y 'TargetFrameworks' (plural) no deben especificarse en los scripts al mismo tiempo.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">El {0} de proyecto especifica '{1}' elemento '{2}', que tiene 'CopyToOutputDirectory' establecido como 'Always'. Cambie los metadatos o use la propiedad "CopyToOutputDirectory".</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Evite especificar "Always" para "CopyToOutputDirectory", ya que esto puede provocar operaciones de copia innecesarias durante la compilación. Use el valor de metadatos "PreserveNewest" o "IfDifferent", o establezca la propiedad "SkipUnchangedFilesOnCopyAlways" en true para usar una copia más eficaz.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Propiedad: se obtuvo acceso a "{0}", pero nunca se inicializó.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">Encontradas múltiples sobrecargas para el método "{0}" con {1} parámetro(s). Esto no se admite actualmente.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Errores: {3}</target>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: No se encontró el proyecto "{0}" importado. Confirme que la expresión de la declaración Import "{1}" es correcta y que el archivo existe en el disco.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: No se encontró el proyecto "{0}" importado. Confirme que la expresión de la declaración Import "{1}", que se evaluó como "{2}", es correcta y que el archivo existe en el disco.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index 3b6e2fb82aa..03d2c206515 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -171,6 +171,46 @@
         <target state="translated">Aucune propriété implicite dérivée d'une variable d'environnement ne doit être utilisée pendant la construction.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">Project {0} référence la sortie d’un projet {1}. Chemin d’accès référencé : {2}. ProjectReference doit être utilisé à la place.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">Un projet ne doit pas être référencé via « Reference » à sa sortie, mais directement via « ProjectReference ».</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">Project {0} spécifie l’élément « EmbeddedResource »{1}« qui a éventuellement une extension de culture indiquant ( »{2}« ), mais les métadonnées explicites « Culture » et « WithCulture=false » ne sont pas spécifiées.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">Il est recommandé de spécifier des métadonnées 'Culture' explicites ou des métadonnées 'WithCulture=false' avec l’élément 'EmbeddedResource' afin d’éviter une estimation de culture incorrecte ou non déterministe.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">Project {0} spécifie la propriété « TargetFrameworks » '{1}' et la propriété « TargetFramework » '{2}' en même temps. Cela va entraîner l’ignoré de 'TargetFrameworks', et la build se comportera en tant que targeted unique.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">Les propriétés 'TargetFramework' (singulier) et 'TargetFrameworks' (plural) ne doivent pas être spécifiées dans les scripts en même temps.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">Project {0} spécifie '{1}' '{2}' d’élément pour lequel 'CopyToOutputDirectory' a la valeur 'Always'. Modifiez les métadonnées ou utilisez la propriété 'CopyToOutputDirectory'.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Évitez de spécifier 'Always' pour 'CopyToOutputDirectory', car cela peut entraîner des opérations de copie inutiles pendant la génération. Utilisez la valeur de métadonnées 'PreserveNerid' ou 'IfDifferent', ou définissez la propriété 'SkipUnchangedFilesOnCopyAlways' sur true pour utiliser une copie plus efficace.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Propriété : « {0} » a été consultée, mais elle n'a jamais été initialisée.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">Plusieurs surcharges ont été trouvées pour la méthode « {0} » avec le(s) paramètre(s) {1}. Cela n’est actuellement pas pris en charge.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Erreurs : {3}</target>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: le projet importé "{0}" est introuvable. Vérifiez que l'expression de la déclaration Import "{1}" est correcte et que le fichier existe sur le disque.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: le projet importé « {0} » est introuvable. Confirmez que l'expression dans la déclaration d'importation « {1} », qui a été évaluée à « {2} », est correcte et que le fichier existe sur le disque.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index f417d787857..6f5de49cd62 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -171,6 +171,46 @@
         <target state="translated">Durante la compilazione non deve essere usata alcuna proprietà implicita derivata da una variabile di ambiente.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">Il progetto {0} fa riferimento all'output di un progetto {1}. Percorso di riferimento: {2}. Usare invece ProjectReference.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">Un progetto non può fare riferimento al relativo output tramite 'Reference', ma direttamente tramite 'ProjectReference'.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">Il progetto {0} specifica l'elemento 'EmbeddedResource' '{1}', che potrebbe contenere un'estensione per la denotazione delle impostazioni cultura ('{2}'), tuttavia i metadati espliciti 'Culture' e 'WithCulture=false' non sono specificati.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">È consigliabile specificare i metadati 'Culture' espliciti o i metadati 'WithCulture=false' con l'elemento 'EmbeddedResource' per evitare una stima errata o non deterministica delle impostazioni cultura.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">Project {0} specifica la proprietà 'TargetFrameworks' '{1}' e la proprietà 'TargetFramework' '{2}' contemporaneamente. In questo modo 'TargetFrameworks' verrà ignorato e la compilazione funzionerà come destinazione singola.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">Le proprietà 'TargetFramework' (singolare) e 'TargetFrameworks' (plural) non devono essere specificate contemporaneamente negli script.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">Project {0} specifica '{1}' elemento '{2}' per cui 'CopyToOutputDirectory' è impostato su 'Always'. Modificare i metadati o usare la proprietà 'CopyToOutputDirectory'.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Evitare di specificare 'Always' per 'CopyToOutputDirectory' perché ciò può causare operazioni di copia non necessarie durante la compilazione. Usare il valore dei metadati 'PreserveNewest' o 'IfDifferent' oppure impostare la proprietà 'SkipUnchangedFilesOnCopyAlways' su true per utilizzare una copia più efficace.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">È stato eseguito l'accesso alla proprietà '{0}', ma non è mai stata inizializzata.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">Trovati più overload per il metodo "{0}" con i parametri {1}. Questo non è attualmente supportato.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Errori: {3}</target>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: il progetto importato "{0}" non è stato trovato. Verificare che l'espressione nella dichiarazione Import "{1}" sia corretta e che il file sia presente sul disco.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: il progetto importato "{0}" non è stato trovato. Verificare che l'espressione nella dichiarazione Import "{1}", che ha restituito "{2}", sia corretta e che il file sia presente sul disco.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 9d8854c98a7..a7cffdb452b 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -171,6 +171,46 @@
         <target state="translated">ビルド中に環境変数から派生した暗黙的なプロパティを使用しないでください。</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">プロジェクト {0} は、プロジェクト {1} の出力を参照します。参照パス: {2}。代わりに ProjectReference を使用する必要があります。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">プロジェクトは、出力に対する 'Reference' を介して参照するのではなく、'ProjectReference' を介して直接参照する必要があります。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">Project {0} では 'EmbeddedResource' 項目 '{1}' が指定されています。これには、拡張機能 ('{2}') を示すカルチャが含まれている可能性がありますが、明示的な 'Culture' または 'WithCulture=false' メタデータが指定されていません。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">不適切または非決定論的なカルチャ推定を回避するために、明示的な 'Culture' メタデータ、または 'EmbeddedResource' 項目を含む 'WithCulture=false' メタデータを指定することをお勧めします。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">プロジェクト {0} では、'TargetFrameworks' プロパティ '{1}' と 'TargetFramework' プロパティを同時に指定 '{2}'。これにより、'TargetFrameworks' が無視され、ビルドは単一のターゲットとして動作します。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">スクリプトでは、'TargetFramework' (単数) プロパティと 'TargetFrameworks' (plural) プロパティを同時に指定することはできません。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">プロジェクト {0} では、'CopyToOutputDirectory' が '常に' に設定されている項目 '{2}' '{1}' 指定します。メタデータを変更するか、'CopyToOutputDirectory' プロパティを使用してください。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">ビルド中に不要なコピー操作が発生する可能性があるため、'CopyToOutputDirectory' に 'Always' を指定しないでください。より効果的なコピーを使用するには、'PreserveNewest' または 'IfDifferent' メタデータ値を使用するか、'SkipUnchangedFilesOnCopyAlways' プロパティを true に設定してください。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">プロパティ: '{0}' にアクセスしましたが、初期化されませんでした。</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">{1} パラメーターを持つメソッド "{0}" に対して複数のオーバーロードが見つかりました。これは現在サポートされていません。</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Errors: {3}</source>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: インポートされたプロジェクト "{0}" が見つかりませんでした。Import 宣言 "{1}" の式が正しいことと、ファイルがディスク上に存在することを確認してください。</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: インポートされたプロジェクト "{0}" が見つかりませんでした。"{2}" に評価された Import 宣言 "{1}" の式が正しいことと、ファイルがディスク上に存在することを確認してください。</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index f53fc8db9ac..ea4cf1e5e17 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -171,6 +171,46 @@
         <target state="translated">빌드하는 동안 환경 변수에서 파생된 암시적 속성을 사용하면 안 됩니다.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">{0} 프로젝트가 {1} 프로젝트의 출력을 참조합니다. 참조된 경로: {2}. ProjectReference를 대신 사용해야 합니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">프로젝트는 ''Reference''를 통해 출력을 참조하지 말고 ''ProjectReference''를 통해 직접 참조해야 합니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">프로젝트 {0}에서 확장명('{2}')을 나타내는 문화권이 있을 수 있는 'EmbeddedResource' 항목 '{1}'을(를) 지정하지만 명시적인 'Culture' 또는 'WithCulture=false' 메타데이터가 지정되지 않았습니다.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">잘못되거나 비결정적인 문화권 추정을 방지하려면 명시적인 'Culture' 메타데이터 또는 'EmbeddedResource' 항목과 함께 'WithCulture=false' 메타데이터를 지정하는 것이 좋습니다.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">프로젝트 {0} 'TargetFrameworks' 속성 '{1}' 및 'TargetFramework' 속성을 동시에 '{2}' 지정합니다. 이렇게 하면 'TargetFrameworks'가 무시되고 빌드가 단일 대상으로 동작합니다.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">스크립트에서 'TargetFramework'(단수) 및 'TargetFrameworks'(plural) 속성을 동시에 지정하면 안 됩니다.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">프로젝트 {0} 'CopyToOutputDirectory'가 'Always'로 설정된 '{1}' 항목 '{2}' 지정합니다. 메타데이터를 변경하거나 'CopyToOutputDirectory' 속성을 사용하십시오.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">빌드하는 동안 불필요한 복사 작업이 발생할 수 있으므로 'CopyToOutputDirectory'에 대해 'Always'를 지정하지 마세요. 'PreserveNewest' 또는 'IfDifferent' 메타데이터 값을 사용하거나' SkipUnchangedFilesOnCopyAlways' 속성을 true로 설정하여 보다 효과적인 복사를 사용합니다.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">속성: '{0}'에 액세스했지만 초기화되지 않았습니다.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">{1} 매개 변수가 있는 "{0}" 메서드에 오버로드가 여러 개 발견되었습니다. 이는 현재 지원되지 않습니다.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Errors: {3}</source>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: 가져온 프로젝트 "{0}"을(를) 찾을 수 없습니다. Import 선언 "{1}"의 식이 올바르고 디스크에 파일이 있는지 확인하세요.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: 가져온 프로젝트 "{0}"을(를) 찾을 수 없습니다. "{2}"(으)로 평가된 Import 선언 "{1}의 식이 올바르고 파일이 디스크에 있는지 확인합니다.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index 48325a8a2b3..7368ab692a4 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -171,6 +171,46 @@
         <target state="translated">Podczas kompilacji nie należy używać żadnej niejawnej właściwości pochodzącej ze zmiennej środowiskowej.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">Projekt {0} odwołuje się do danych wyjściowych projektu {1}. Ścieżka, do której istnieje odwołanie: {2}. Zamiast tego należy użyć elementu ProjectReference.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">Do projektu nie należy odwoływać się poprzez opcję „Odwołanie” do jego danych wyjściowych, ale raczej bezpośrednio poprzez opcję „Odwołanie do projektu”.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">Projekt {0} określa element „EmbeddedResource” „{1}”, który może mieć rozszerzenie oznaczające kulturę („{2}”), ale nie określono jawnych metadanych „Culture” ani „WithCulture=false”.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">Zaleca się określenie wyraźnych metadanych „Culture” lub metadanych „WithCulture=false” z elementem „EmbeddedResource” w celu uniknięcia błędnego lub niedeterministycznego oszacowania kultury.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">Program Project {0} określa właściwość "TargetFrameworks" '{1}' i właściwość "TargetFramework" '{2}' jednocześnie. Spowoduje to zignorowanie elementu "TargetFrameworks" i kompilacja będzie działać jako element docelowy.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">Właściwości "TargetFramework" (liczba pojedyncza) i "TargetFrameworks" (liczba mnoga) nie powinny być określone w skryptach jednocześnie.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">Program Project {0} określa '{2}' elementu '{1}', który ma parametr "CopyToOutputDirectory" ustawiony na wartość "Always". Zmień metadane lub użyj właściwości CopyToOutputDirectory.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Unikaj określania opcji "Always" dla elementu "CopyToOutputDirectory", ponieważ może to prowadzić do niepotrzebnych operacji kopiowania podczas kompilacji. Użyj wartości metadanych "PreserveNewest" lub "IfDifferent" albo ustaw właściwość "SkipUnchangedFilesOnCopyAlways" na wartość true, aby zastosować bardziej efektywne kopiowanie.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Właściwość: uzyskano dostęp do „{0}”, ale nigdy nie dokonano inicjacji.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">Znaleziono wiele przeciążeń dla metody „{0}” z {1} parametrem/parametrami. Obecnie nie jest to obsługiwane.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Błędy: {3}</target>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: Nie znaleziono zaimportowanego projektu „{0}”. Upewnij się, że wyrażenie w deklaracji Import „{1}” jest poprawne i że plik istnieje na dysku.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: Nie znaleziono zaimportowanego projektu „{0}”. Upewnij się, że wyrażenie w deklaracji importu „{1}”, która została oceniona na „{2}” jest poprawne i czy plik istnieje na dysku.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index f542a273cec..ca42d3fd3b5 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -171,6 +171,46 @@
         <target state="translated">Nenhuma propriedade implícita derivada de uma variável de ambiente deve ser usada durante o build.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">O projeto {0} faz referência à saída de um projeto {1}. Caminho referenciado: {2}. Em vez disso, ProjectReference deve ser usado.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">Um projeto não deve ser referenciado por meio de "Referência" à sua saída, mas diretamente por meio de "ProjectReference".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">O projeto {0} especifica o item 'EmbeddedResource' '{1}', que possivelmente tem uma cultura que indica extensão ('{2}'), mas os metadados 'Culture' e 'WithCulture=false' explícitos não são especificados.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">É recomendável especificar metadados explícitos de 'Culture' ou metadados 'WithCulture=false' com o item 'EmbeddedResource' para evitar estimativas de cultura incorretas ou não determinísticas.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">O {0} especifica as propriedades 'TargetFrameworks' '{1}' e 'TargetFramework' '{2}' ao mesmo tempo. Isso fará com que 'TargetFrameworks' seja ignorado e a compilação se comportará como destino único.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">As propriedades 'TargetFramework' (singular) e 'TargetFrameworks' (plural) não devem ser especificadas nos scripts ao mesmo tempo.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">O {0} especifica '{1}' item '{2}', que tem 'CopyToOutputDirectory' definido como 'Always'. Altere os metadados ou use a propriedade 'CopyToOutputDirectory'.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Evite especificar 'Always' para 'CopyToOutputDirectory', pois isso pode levar a operações de cópia desnecessárias durante o build. Use o valor de metadados 'PreserveNewest' ou 'IfDifferent' ou defina a propriedade 'SkipUnchangedFilesOnCopyAlways' como true para empregar uma cópia mais eficaz.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Propriedade: "{0}" foi acessada, mas nunca foi inicializada.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">Foram encontradas várias sobrecargas para o método "{0}" com parâmetros {1}. No momento, não há suporte para isso.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Erros: {3}</target>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: o projeto importado "{0}" não foi localizado. Confirme se a expressão na declaração Import "{1}" está correta e se o arquivo existe no disco.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: O projeto importado "{0}" não foi encontrado. Confirme se a expressão na declaração de Importação "{1}", que foi avaliada como "{2}", está correta e se o arquivo existe no disco.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index 515b9b7252d..b71f34444ac 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -171,6 +171,46 @@
         <target state="translated">Во время сборки не следует использовать неявные свойства, полученные из переменной среды.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">Проект {0} ссылается на выходные данные проекта {1}. Указанный по ссылке путь: {2}. Вместо этого следует использовать ProjectReference.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">На проект следует ссылаться не с помощью параметра "Reference" для его выходных данных, а непосредственно посредством "ProjectReference".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">Проект {0} указывает элемент "EmbeddedResource" "{1}", который может содержать расширение для обозначения языка и региональных параметров ("{2}"), но явные метаданные "Culture" или "WithCulture=false" не указаны.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">Рекомендуется указать явные метаданные "Culture" или "WithCulture=false" с элементом "EmbeddedResource", чтобы избежать неверной или недетерминированной оценки языка и региональных параметров.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">В {0} проекта одновременно указаны свойства "TargetFrameworks" '{1}' и "TargetFramework" '{2}'. Это приведет к пропуску TargetFrameworks и к работе сборки как к одному целевому объекту.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">Свойства TargetFramework (в единственном числе) и TargetFrameworks (plural) не должны указываться в скриптах одновременно.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">Project {0} указывает '{1}' элемент '{2}', для которого параметр CopyToOutputDirectory имеет значение "Always". Измените метаданные или используйте свойство CopyToOutputDirectory.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Не указывайте "Always" для "CopyToOutputDirectory", так как это может привести к ненужным операциям копирования во время сборки. Используйте значение метаданных PreserveNewest или IfDifferent или задайте свойству SkipUnchangedFilesOnCopyAlways значение true, чтобы использовать более эффективное копирование.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">Свойство: к "{0}" получен доступ, но он не инициализирован.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">Обнаружено несколько перегрузок для метода "{0}" с параметрами {1}. Это сейчас не поддерживается.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Errors: {3}</source>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: импортированный проект "{0}" не найден. Проверьте правильность выражения в объявлении Import "{1}" и наличие файла на диске.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: импортированный проект "{0}" не найден. Проверьте правильность выражения в объявлении Import "{1}", вычисленное в "{2}", и наличие файла на диске.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index 2c69cd00afe..6fac3602911 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -171,6 +171,46 @@
         <target state="translated">Derleme sırasında bir ortam değişkeninden türetilen hiçbir örtük özellik kullanılmamalıdır.</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">{0} projesi bir {1} projesinin çıkışına referans başvuru yapar. Başvurulan yol:{2}. Bunun yerine ProjectReference kullanılmalıdır.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">Bir projeye, çıkışına 'Reference' aracılığıyla değil doğrudan 'ProjectReference' aracılığıyla başvurulmalıdır.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">{0} projesi büyük olasılıkla kültür belirtme uzantısı ('{2}') olan '{1}' 'EmbeddedResource' öğesini belirtiyor ancak açık 'Culture' veya 'WithCulture=false' meta verileri belirtilmedi.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">Yanlış veya belirsiz kültür tahminlerini önlemek için 'EmbeddedResource' öğesiyle açık 'Culture' meta verisinin veya 'WithCulture=false' meta verisinin belirtilmesi önerilir.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">Proje {0} aynı anda 'TargetFrameworks' '{1}' ve 'TargetFramework' '{2}' 'TargetFramework' özelliğini belirtir. Bu, 'TargetFrameworks' yoksayılır ve derleme tek hedefli olarak davranır.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">Komut dosyalarında aynı anda 'TargetFramework' (tekil) ve 'TargetFrameworks' (plural) özellikleri belirtilmemelidir.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">Project {0}, '{1}' 'CopyToOutputDirectory' '{2}' 'Always' olarak ayarlanmış bir öğe belirtir. Meta verileri değiştirin veya 'CopyToOutputDirectory' özelliğini kullanın.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">Derleme sırasında gereksiz kopyalama işlemlerine yol açacağından 'CopyToOutputDirectory' için 'Always' belirtmeyi önle. Daha etkili kopyalamayı kullanmak için 'PreserveNewest' veya 'IfDifferent' meta veri değerini kullanın veya 'SkipUnchangedFilesOnCopyAlways' özelliğini true olarak ayarlayın.</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">'{0}' özelliğine erişildi, ancak hiç başlatılmadı.</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">{1} parametreye sahip "{0}" yöntemi için birden çok aşırı yükleme bulundu. Bu şu anda desteklenmiyor.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Hatalar: {3}</target>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: İçeri aktarılan "{0}" projesi bulunamadı. "{1}" Import bildirimindeki ifadenin doğru olduğunu ve dosyanın diskte bulunduğunu onaylayın.</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: İçe aktarılan "{0}" projesi bulunamadı. "{2}" olarak değerlendirilen "{1}" İçe Aktarma bildirimindeki ifadenin doğru olduğunu ve dosyanın diskte mevcut olduğunu onaylayın.</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index ffb8d1ceb94..ee5a584ca3f 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -171,6 +171,46 @@
         <target state="translated">在生成过程中，不应使用派生自环境变量的隐式属性。</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">项目 {0} 引用项目 {1} 的输出。引用的路径: {2}。应转而使用 ProjectReference。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">不得通过 "Reference" 引用项目的输出来引用项目，而是应通过 "ProjectReference" 直接引用。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">项目 {0} 指定 "EmbeddedResource" 项“{1}”，该项可能有表示扩展(“{2}”)的区域性，但未指定显示 "Culture" 和 "WithCulture=false" 元数据。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">建议在有 "EmbeddedResource" 项时指定显式 "Culture" 元数据或指定 "WithCulture=false" 元数据，以避免错误或不确定的区域性估计。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">Project {0} 同时指定“TargetFrameworks”属性 '{1}' 和“TargetFramework”属性 '{2}'。这将导致忽略 “TargetFrameworks”，并且生成的行为将作为单一目标。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">不应同时在脚本中指定单数) 和 “TargetFrameworks” (复数) 属性 (TargetFramework”。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">Project {0} 指定将 “CopyToOutputDirectory” 设置为 “Always” 的 '{1}' 项 '{2}'。更改元数据或使用 “CopyToOutputDirectory” 属性。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">避免为 “CopyToOutputDirectory” 指定 “Always”，因为这可能会导致生成过程中出现不必要的复制操作。使用 “PreserveNewest” 或 “IfDifferent” 元数据值，或将 “SkipUnchangedFilesOnCopyAlways” 属性设置为 true 以使用更有效的复制。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">已访问属性“{0}”，但从未将其初始化过。</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">找到包含参数“{1}”的方法“{0}”的多个重载。当前不支持此操作。</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Errors: {3}</source>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: 找不到导入的项目“{0}”。请确认 Import 声明“{1}”中的表达式正确，且文件位于磁盘上。</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: 找不到导入的项目“{0}”。请确认 Import 声明“{1}”中计算结果为“{2}”的表达式正确无误且该文件位于磁盘上。</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index 219bc0451db..ce59918f2c4 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -171,6 +171,46 @@
         <target state="translated">組建期間不應使用衍生自環境變數的隱含屬性。</target>
         <note />
       </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_MessageFmt">
+        <source>Project {0} references output of a project {1}. Referenced path: {2}. ProjectReference should be used instead.</source>
+        <target state="translated">專案 {0} 會參照專案 {1} 的輸出。參照的路徑: {2}。應該改用 ProjectReference。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0104_Title">
+        <source>A project should not be referenced via 'Reference' to its output, but rather directly via 'ProjectReference'.</source>
+        <target state="translated">專案不應透過 'Reference' 來參照其輸出，而應直接透過 'ProjectReference'。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_MessageFmt">
+        <source>Project {0} specifies 'EmbeddedResource' item '{1}', that has possibly a culture denoting extension ('{2}'), but explicit 'Culture' nor 'WithCulture=false' metadata are not specified.</source>
+        <target state="translated">專案 {0} 指定的 'EmbeddedResource' 項目 '{1}' 可能具有代表文化特性的附檔名 ('{2}')，但未指定明確的 'Culture' 和 'WithCulture=false' 中繼資料。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0105_Title">
+        <source>It is recommended to specify explicit 'Culture' metadata, or 'WithCulture=false' metadata with 'EmbeddedResource' item in order to avoid wrong or nondeterministic culture estimation.</source>
+        <target state="translated">建議在 'EmbeddedResource' 項目指定明確的 'Culture' 中繼資料或 'WithCulture=false' 中繼資料，以避免錯誤或非決定性的文化特性推估。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_MessageFmt">
+        <source>Project {0} specifies 'TargetFrameworks' property '{1}' and 'TargetFramework' property '{2}' at the same time. This will lead to 'TargetFrameworks' being ignored and build will behave as single-targeted.</source>
+        <target state="translated">Project {0} 同時指定 'TargetFrameworks' 屬性 '{1}' 與 'TargetFramework' 属性 '{2}'。這會導致忽略 『TargetFrameworks』，而且組建將以單一目標方式執行。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0107_Title">
+        <source>'TargetFramework' (singular) and 'TargetFrameworks' (plural) properties should not be specified in the scripts at the same time.</source>
+        <target state="translated">腳本中不應同時指定單數) 和 'TargetFrameworks' (複數) 屬性的 'TargetFramework' (。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_MessageFmt">
+        <source>Project {0} specifies '{1}' item '{2}', that has 'CopyToOutputDirectory' set as 'Always'. Change the metadata or use 'CopyToOutputDirectory' property.</source>
+        <target state="translated">Project {0} 指定 '{1}' 設為 'Always' 的 'CopyToOutputDirectory' '{2}' 專案。變更元數據或使用 'CopyToOutputDirectory' 屬性。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
+      <trans-unit id="BuildCheck_BC0106_Title">
+        <source>Avoid specifying 'Always' for 'CopyToOutputDirectory' as this can lead to unnecessary copy operations during build. Use 'PreserveNewest' or 'IfDifferent' metadata value, or set the 'SkipUnchangedFilesOnCopyAlways' property to true to employ more effective copying.</source>
+        <target state="translated">避免為 'CopyToOutputDirectory' 指定 'Always'，因為這可能會在建置期間導致不必要的複製作業。請使用 『PreserveNewest』 或 'IfDifferent' 元數據值，或將 'SkipUnchangedFilesOnCopyAlways' 属性設定為 true，以採用較有效的複製。</target>
+        <note>Terms in quotes are not to be translated.</note>
+      </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
         <target state="translated">已存取屬性: '{0}'，但從未初始化。</target>
@@ -289,7 +329,7 @@
       </trans-unit>
       <trans-unit id="CouldNotDifferentiateBetweenCompatibleMethods">
         <source>Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</source>
-        <target state="new">Found multiple overloads for method "{0}" with {1} parameter(s). That is currently not supported.</target>
+        <target state="translated">在具有 {1} 參數的方法 "{0}" 發現多個多載。目前不支援此功能。</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
@@ -1191,8 +1231,8 @@ Errors: {3}</source>
         <note>{StrBegin="MSB4101: "}</note>
       </trans-unit>
       <trans-unit id="ImportedProjectNotFound">
-        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}" is correct, and that the file exists on disk.</source>
-        <target state="translated">MSB4019: 找不到匯入的專案 "{0}"。請確認 Import 宣告 "{1}" 中的運算式正確，以及該檔案位於磁碟中。</target>
+        <source>MSB4019: The imported project "{0}" was not found. Confirm that the expression in the Import declaration "{1}", which evaluated to "{2}", is correct, and that the file exists on disk.</source>
+        <target state="translated">MSB4019: 找不到 Import 專案 "{0}"。請確認 Import 宣告 "{1}" (其中評估為 "{2}") 中的運算式正確，且該檔案位於磁碟中。</target>
         <note>{StrBegin="MSB4019: "}LOCALIZATION: &lt;Import&gt; should not be localized.</note>
       </trans-unit>
       <trans-unit id="ImportedProjectFromExtensionsPathNotFoundFromAppConfig">
diff --git a/src/Build/Utilities/EngineFileUtilities.cs b/src/Build/Utilities/EngineFileUtilities.cs
index 82724a46b03..ec2fbc4f242 100644
--- a/src/Build/Utilities/EngineFileUtilities.cs
+++ b/src/Build/Utilities/EngineFileUtilities.cs
@@ -32,7 +32,9 @@ static EngineFileUtilities()
             }
         }
 
-        // used by test to reset regexes
+        /// <summary>
+        /// Test only: repopulate lazy wildcard regexes from the environment.
+        /// </summary>
         internal static void CaptureLazyWildcardRegexes()
         {
             s_lazyWildCardExpansionRegexes = PopulateRegexFromEnvironment();
diff --git a/src/Build/Utilities/Utilities.cs b/src/Build/Utilities/Utilities.cs
index 6811def46cd..f68d76b00c1 100644
--- a/src/Build/Utilities/Utilities.cs
+++ b/src/Build/Utilities/Utilities.cs
@@ -758,7 +758,38 @@ public static IEnumerable<ItemData> EnumerateItemsOfType(IEnumerable items, stri
             }
             else
             {
-                return CastItemsOneByOne(items, typeName);
+                return CastItemsOneByOne(items, [typeName]);
+            }
+        }
+
+        /// <summary>
+        /// Enumerates the given nongeneric enumeration and tries to match or wrap appropriate item types.
+        /// Only items with matching type (case insensitive, MSBuild valid names only) will be returned.
+        /// </summary>
+        public static IEnumerable<ItemData> EnumerateItemsOfTypes(IEnumerable items, string[] typeNames)
+        {
+            if (items == null)
+            {
+                return [];
+            }
+
+            if (items is ItemDictionary<ProjectItemInstance> projectItemInstanceDictionary)
+            {
+                return typeNames.Select(typeName =>
+                    projectItemInstanceDictionary[typeName]
+                        .Select(i => new ItemData(i.ItemType, (IItemData)i)))
+                        .SelectMany(j => j);
+            }
+            else if (items is ItemDictionary<ProjectItem> projectItemDictionary)
+            {
+                return typeNames.Select(typeName =>
+                        projectItemDictionary[typeName]
+                            .Select(i => new ItemData(i.ItemType, (IItemData)i)))
+                    .SelectMany(j => j);
+            }
+            else
+            {
+                return CastItemsOneByOne(items, typeNames);
             }
         }
 
@@ -777,9 +808,9 @@ public static void EnumerateItems(IEnumerable items, Action<DictionaryEntry> cal
         /// Enumerates the nongeneric items and attempts to cast them.
         /// </summary>
         /// <param name="items">Nongeneric list of items.</param>
-        /// <param name="itemTypeNameToFetch">If not null, only the items with matching type (case insensitive, MSBuild valid names only) will be returned.</param>
+        /// <param name="itemTypeNamesToFetch">If not null, only the items with matching type (case insensitive, MSBuild valid names only) will be returned.</param>
         /// <returns></returns>
-        private static IEnumerable<ItemData> CastItemsOneByOne(IEnumerable items, string itemTypeNameToFetch)
+        private static IEnumerable<ItemData> CastItemsOneByOne(IEnumerable items, string[] itemTypeNamesToFetch)
         {
             foreach (var item in items)
             {
@@ -809,7 +840,7 @@ private static IEnumerable<ItemData> CastItemsOneByOne(IEnumerable items, string
                 }
 
                 // if itemTypeNameToFetch was not set - then return all items
-                if (itemValue != null && (itemTypeNameToFetch == null || MSBuildNameIgnoreCaseComparer.Default.Equals(itemType, itemTypeNameToFetch)))
+                if (itemValue != null && (itemTypeNamesToFetch == null || itemTypeNamesToFetch.Any(tp => MSBuildNameIgnoreCaseComparer.Default.Equals(itemType, tp))))
                 {
                     // The ProjectEvaluationFinishedEventArgs.Items are currently assigned only in Evaluator.Evaluate()
                     //  where the only types that can be assigned are ProjectItem or ProjectItemInstance
diff --git a/src/BuildCheck.UnitTests/EndToEndTests.cs b/src/BuildCheck.UnitTests/EndToEndTests.cs
index eaee6543cec..545bb46ef57 100644
--- a/src/BuildCheck.UnitTests/EndToEndTests.cs
+++ b/src/BuildCheck.UnitTests/EndToEndTests.cs
@@ -1,16 +1,18 @@
-﻿// Licensed to the .NET Foundation under one or more agreements.
+// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
 using System.Collections.Generic;
 using System.IO;
 using System.Linq;
+using System.Text.Json.Nodes;
 using System.Text.RegularExpressions;
 using System.Xml;
 using Microsoft.Build.Experimental.BuildCheck;
 using Microsoft.Build.Shared;
 using Microsoft.Build.UnitTests;
 using Microsoft.Build.UnitTests.Shared;
+using Microsoft.VisualStudio.TestPlatform.Utilities;
 using Shouldly;
 using Xunit;
 using Xunit.Abstractions;
@@ -63,6 +65,257 @@ public void PropertiesUsageAnalyzerTest(bool buildInOutOfProcessNode)
         Regex.Matches(output, "BC0203 .* Property").Count.ShouldBe(2);
     }
 
+    [Theory]
+    // The culture is not set explicitly, but the extension is a known culture
+    //  - a buildcheck warning will occur, but otherwise works
+    [InlineData(
+        "cs",
+        "cs",
+        """<EmbeddedResource Update = "Resource1.cs.resx" />""",
+        false,
+        "warning BC0105: .* 'Resource1\\.cs\\.resx'",
+        true)]
+    // The culture is not set explicitly, and is not a known culture
+    //  - a buildcheck warning will occur, and resource is not recognized as culture specific - won't be copied around
+    [InlineData(
+        "xyz",
+        "xyz",
+        """<EmbeddedResource Update = "Resource1.xyz.resx" />""",
+        false,
+        "warning BC0105: .* 'Resource1\\.xyz\\.resx'",
+        false)]
+    // The culture is explicitly set, and it is not a known culture, but $(RespectAlreadyAssignedItemCulture) is set to true
+    //  - no warning will occur, and resource is recognized as culture specific - and copied around
+    [InlineData(
+        "xyz",
+        "xyz",
+        """<EmbeddedResource Update = "Resource1.xyz.resx" Culture="xyz" />""",
+        true,
+        "",
+        true)]
+    // The culture is explicitly set, and it is not a known culture and $(RespectAlreadyAssignedItemCulture) is not set to true
+    //  - so culture is overwritten, and resource is not recognized as culture specific - won't be copied around
+    [InlineData(
+        "xyz",
+        "zyx",
+        """<EmbeddedResource Update = "Resource1.zyx.resx" Culture="xyz" />""",
+        false,
+        "warning MSB3002: Explicitly set culture .* was overwritten",
+        false)]
+    // The culture is explicitly set, and it is not a known culture, but $(RespectAlreadyAssignedItemCulture) is set to true
+    //  - no warning will occur, and resource is recognized as culture specific - and copied around
+    [InlineData(
+        "xyz",
+        "zyx",
+        """<EmbeddedResource Update = "Resource1.zyx.resx" Culture="xyz" />""",
+        true,
+        "",
+        true)]
+    public void EmbeddedResourceCheckTest(
+        string culture,
+        string resourceExtension,
+        string resourceElement,
+        bool respectAssignedCulturePropSet,
+        string expectedDiagnostic,
+        bool resourceExpectedToBeRecognizedAsSatelite)
+    {
+        EmbedResourceTestOutput output = RunEmbeddedResourceTest(resourceElement, resourceExtension, respectAssignedCulturePropSet);
+
+        int expectedWarningsCount = 0;
+        // each finding should be found just once - but reported twice, due to summary
+        if (!string.IsNullOrEmpty(expectedDiagnostic))
+        {
+            Regex.Matches(output.LogOutput, expectedDiagnostic).Count.ShouldBe(2);
+            expectedWarningsCount = 1;
+        }
+
+        AssertHasResourceForCulture("en", true);
+        AssertHasResourceForCulture(culture, resourceExpectedToBeRecognizedAsSatelite);
+        output.DepsJsonResources.Count.ShouldBe(resourceExpectedToBeRecognizedAsSatelite ? 2 : 1);
+        GetWarningsCount(output.LogOutput).ShouldBe(expectedWarningsCount);
+
+        void AssertHasResourceForCulture(string culture, bool isResourceExpected)
+        {
+            KeyValuePair<string, JsonNode?> resource = output.DepsJsonResources.FirstOrDefault(
+                o => o.Value?["locale"]?.ToString().Equals(culture, StringComparison.Ordinal) ?? false);
+            // if not found - the KVP will be default
+            resource.Equals(default(KeyValuePair<string, JsonNode?>)).ShouldBe(!isResourceExpected,
+                $"Resource for culture {culture} was {(isResourceExpected ? "not " : "")}found in deps.json:{Environment.NewLine}{output.DepsJsonResources.ToString()}");
+
+            if (isResourceExpected)
+            {
+                resource.Key.ShouldBeEquivalentTo($"{culture}/ReferencedProject.resources.dll",
+                    $"Unexpected resource for culture {culture} was found in deps.json:{Environment.NewLine}{output.DepsJsonResources.ToString()}");
+            }
+        }
+    }
+
+    private readonly record struct EmbedResourceTestOutput(String LogOutput, JsonObject DepsJsonResources);
+
+    private EmbedResourceTestOutput RunEmbeddedResourceTest(string resourceXmlToAdd, string resourceExtension, bool respectCulture)
+    {
+        string testAssetsFolderName = "EmbeddedResourceTest";
+        const string entryProjectName = "EntryProject";
+        const string referencedProjectName = "ReferencedProject";
+        const string templateToReplace = "###EmbeddedResourceToAdd";
+        TransientTestFolder workFolder = _env.CreateFolder(createFolder: true);
+
+        CopyFilesRecursively(Path.Combine(TestAssetsRootPath, testAssetsFolderName), workFolder.Path);
+        ReplaceStringInFile(Path.Combine(workFolder.Path, referencedProjectName, $"{referencedProjectName}.csproj"),
+            templateToReplace, resourceXmlToAdd);
+        File.Copy(
+            Path.Combine(workFolder.Path, referencedProjectName, "Resource1.resx"),
+            Path.Combine(workFolder.Path, referencedProjectName, $"Resource1.{resourceExtension}.resx"));
+
+        _env.SetCurrentDirectory(Path.Combine(workFolder.Path, entryProjectName));
+
+        string output = RunnerUtilities.ExecBootstrapedMSBuild("-check -restore /p:RespectCulture=" + (respectCulture ? "True" : "\"\""), out bool success);
+        _env.Output.WriteLine(output);
+        _env.Output.WriteLine("=========================");
+        success.ShouldBeTrue();
+
+        string[] depsFiles = Directory.GetFiles(Path.Combine(workFolder.Path, entryProjectName), $"{entryProjectName}.deps.json", SearchOption.AllDirectories);
+        depsFiles.Length.ShouldBe(1);
+
+        JsonNode? depsJson = JsonObject.Parse(File.ReadAllText(depsFiles[0]));
+
+        depsJson.ShouldNotBeNull("Valid deps.json file expected");
+
+        var resources = depsJson!["targets"]?.AsObject().First().Value?[$"{referencedProjectName}/1.0.0"]?["resources"]?.AsObject();
+
+        resources.ShouldNotBeNull("Expected deps.json with 'resources' section");
+
+        return new(output, resources);
+
+        void ReplaceStringInFile(string filePath, string original, string replacement)
+        {
+            File.Exists(filePath).ShouldBeTrue($"File {filePath} expected to exist.");
+            string text = File.ReadAllText(filePath);
+            text = text.Replace(original, replacement);
+            File.WriteAllText(filePath, text);
+        }
+    }
+
+    private static void CopyFilesRecursively(string sourcePath, string targetPath)
+    {
+        // First Create all directories
+        foreach (string dirPath in Directory.GetDirectories(sourcePath, "*", SearchOption.AllDirectories))
+        {
+            Directory.CreateDirectory(dirPath.Replace(sourcePath, targetPath));
+        }
+
+        // Then copy all the files & Replaces any files with the same name
+        foreach (string newPath in Directory.GetFiles(sourcePath, "*", SearchOption.AllDirectories))
+        {
+            File.Copy(newPath, newPath.Replace(sourcePath, targetPath), true);
+        }
+    }
+
+    private static int GetWarningsCount(string output)
+    {
+        Regex regex = new Regex(@"(\d+) Warning\(s\)");
+        Match match = regex.Match(output);
+        match.Success.ShouldBeTrue("Expected Warnings section not found in the build output.");
+        return int.Parse(match.Groups[1].Value);
+    }
+
+    private readonly record struct CopyTestOutput(
+        String LogOutput,
+        string File1Path,
+        string File2Path,
+        DateTime File1WriteUtc,
+        DateTime File2WriteUtc,
+        DateTime File1AccessUtc,
+        DateTime File2AccessUtc);
+
+    private CopyTestOutput RunCopyToOutputTest(bool restore, bool skipUnchangedDuringCopy)
+    {
+        string output = RunnerUtilities.ExecBootstrapedMSBuild($"-check {(restore ? "-restore" : null)} /p:SkipUnchanged={(skipUnchangedDuringCopy ? "True" : "\"\"")}", out bool success);
+        _env.Output.WriteLine(output);
+        _env.Output.WriteLine("=========================");
+        success.ShouldBeTrue();
+
+        // We should get warning only if we didn't opted-into the new behavior
+        if (!skipUnchangedDuringCopy)
+        {
+            string expectedDiagnostic = "warning BC0106: .* that has 'CopyToOutputDirectory' set as 'Always'";
+            Regex.Matches(output, expectedDiagnostic).Count.ShouldBe(2);
+        }
+
+        GetWarningsCount(output).ShouldBe(skipUnchangedDuringCopy ? 0 : 1);
+
+        string[] outFile1 = Directory.GetFiles(".", "File1.txt", SearchOption.AllDirectories);
+        outFile1.Length.ShouldBe(1);
+
+        string[] outFile2 = Directory.GetFiles(".", "File2.txt", SearchOption.AllDirectories);
+        outFile2.Length.ShouldBe(1);
+
+        // File.Copy does reuse LastWriteTime of source file
+        return new(
+            output,
+            outFile1[0],
+            outFile2[0],
+            File.GetLastWriteTimeUtc(outFile1[0]),
+            File.GetLastWriteTimeUtc(outFile2[0]),
+            File.GetLastAccessTimeUtc(outFile1[0]),
+            File.GetLastAccessTimeUtc(outFile2[0]));
+    }
+
+    [Theory]
+    [InlineData(false)]
+    [InlineData(true)]
+    public void CopyToOutputTest(bool skipUnchangedDuringCopy)
+    {
+        string testAssetsFolderName = "CopyAlwaysTest";
+        const string entryProjectName = "EntryProject";
+        TransientTestFolder workFolder = _env.CreateFolder(createFolder: true);
+
+        CopyFilesRecursively(Path.Combine(TestAssetsRootPath, testAssetsFolderName), workFolder.Path);
+
+        _env.SetCurrentDirectory(Path.Combine(workFolder.Path, entryProjectName));
+
+        var output1 = RunCopyToOutputTest(true, skipUnchangedDuringCopy);
+
+        // Run again - just Always should be copied
+        // Careful - unix based OS might not update access time on writes. 
+
+        var output2 = RunCopyToOutputTest(false, skipUnchangedDuringCopy);
+
+        // CopyToOutputDirectory="Always"
+        if (skipUnchangedDuringCopy)
+        {
+            output2.File1AccessUtc.ShouldBeEquivalentTo(output1.File1AccessUtc);
+            output2.File1WriteUtc.ShouldBeEquivalentTo(output1.File1WriteUtc);
+        }
+        else
+        {
+            output2.File1WriteUtc.ShouldBeEquivalentTo(output1.File1WriteUtc);
+        }
+        // CopyToOutputDirectory="IfDifferent"
+        output2.File2AccessUtc.ShouldBeEquivalentTo(output1.File2AccessUtc);
+        output2.File2WriteUtc.ShouldBeEquivalentTo(output1.File2WriteUtc);
+
+        // Change both in output
+
+        File.WriteAllLines(output2.File1Path, ["foo"]);
+        File.WriteAllLines(output2.File2Path, ["foo"]);
+
+        DateTime file1WriteUtc = File.GetLastWriteTimeUtc(output2.File1Path);
+        DateTime file2WriteUtc = File.GetLastWriteTimeUtc(output2.File2Path);
+
+        file1WriteUtc.ShouldBeGreaterThan(output2.File1WriteUtc);
+        file2WriteUtc.ShouldBeGreaterThan(output2.File2WriteUtc);
+
+        // Run again - both should be copied
+
+        var output3 = RunCopyToOutputTest(false, skipUnchangedDuringCopy);
+
+        // We are now overwriting the newer file in output with the older file from sources.
+        // Which is wanted - as we want to copy on any difference.
+        output3.File1WriteUtc.ShouldBeLessThan(file1WriteUtc);
+        output3.File2WriteUtc.ShouldBeLessThan(file2WriteUtc);
+    }
+
 
     [Theory]
     [InlineData(true, true)]
@@ -106,6 +359,48 @@ public void WarningsCountExceedsLimitTest(bool buildInOutOfProcessNode, bool lim
         }
     }
 
+    [Theory]
+    [InlineData("""<TargetFramework>net9.0</TargetFramework>""", "", false)]
+    [InlineData("""<TargetFrameworks>net9.0;net472</TargetFrameworks>""", "", false)]
+    [InlineData("""<TargetFrameworks>net9.0;net472</TargetFrameworks>""", " /p:TargetFramework=net9.0", false)]
+    [InlineData("""<TargetFramework>net9.0</TargetFramework><TargetFrameworks>net9.0;net472</TargetFrameworks>""", "", true)]
+    public void TFMConfusionCheckTest(string tfmString, string cliSuffix, bool shouldTriggerCheck)
+    {
+        const string testAssetsFolderName = "TFMConfusionCheck";
+        const string projectName = testAssetsFolderName;
+        const string templateToReplace = "###TFM";
+        TransientTestFolder workFolder = _env.CreateFolder(createFolder: true);
+
+        CopyFilesRecursively(Path.Combine(TestAssetsRootPath, testAssetsFolderName), workFolder.Path);
+        ReplaceStringInFile(Path.Combine(workFolder.Path, $"{projectName}.csproj"),
+            templateToReplace, tfmString);
+
+        _env.SetCurrentDirectory(workFolder.Path);
+
+        string output = RunnerUtilities.ExecBootstrapedMSBuild($"-check -restore" + cliSuffix, out bool success);
+        _env.Output.WriteLine(output);
+        _env.Output.WriteLine("=========================");
+        success.ShouldBeTrue();
+
+        int expectedWarningsCount = 0;
+        if (shouldTriggerCheck)
+        {
+            expectedWarningsCount = 1;
+            string expectedDiagnostic = "warning BC0107: .* specifies 'TargetFrameworks' property";
+            Regex.Matches(output, expectedDiagnostic).Count.ShouldBe(2);
+        }
+
+        GetWarningsCount(output).ShouldBe(expectedWarningsCount);
+
+        void ReplaceStringInFile(string filePath, string original, string replacement)
+        {
+            File.Exists(filePath).ShouldBeTrue($"File {filePath} expected to exist.");
+            string text = File.ReadAllText(filePath);
+            text = text.Replace(original, replacement);
+            File.WriteAllText(filePath, text);
+        }
+    }
+
 
     [Fact]
     public void ConfigChangeReflectedOnReuse()
@@ -187,12 +482,14 @@ public void SampleCheckIntegrationTest_CheckOnBuild(bool buildInOutOfProcessNode
             output.ShouldContain("BC0101");
             output.ShouldContain("BC0102");
             output.ShouldContain("BC0103");
+            output.ShouldContain("BC0104");
         }
         else
         {
             output.ShouldNotContain("BC0101");
             output.ShouldNotContain("BC0102");
             output.ShouldNotContain("BC0103");
+            output.ShouldNotContain("BC0104");
         }
     }
 
@@ -234,7 +531,7 @@ public void SampleCheckIntegrationTest_ReplayBinaryLogOfCheckedBuild(bool buildI
         // The conflicting outputs warning appears - but only if check was requested
         if (checkRequested)
         {
-            output.ShouldContain("BC0101");
+            output.ShouldContain(FormatExpectedDiagOutput("BC0101", BC0101Severity));
             output.ShouldContain("BC0102");
             output.ShouldContain("BC0103");
         }
@@ -244,6 +541,12 @@ public void SampleCheckIntegrationTest_ReplayBinaryLogOfCheckedBuild(bool buildI
             output.ShouldNotContain("BC0102");
             output.ShouldNotContain("BC0103");
         }
+
+        string FormatExpectedDiagOutput(string code, string severity)
+        {
+            string msbuildSeverity = severity.Equals("suggestion") ? "message" : severity;
+            return $"{msbuildSeverity} {code}: https://aka.ms/buildcheck/codes#{code}";
+        }
     }
 
     [Theory]
@@ -276,7 +579,7 @@ public void EditorConfig_SeverityAppliedCorrectly(string BC0101Severity, string?
         }
     }
 
-    [Fact(Skip = "https://github.com/dotnet/msbuild/issues/10702")]
+    [Fact(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
     public void CheckHasAccessToAllConfigs()
     {
         using (var env = TestEnvironment.Create())
@@ -454,7 +757,7 @@ public void NoEnvironmentVariableProperty_DeferredProcessing(bool warnAsError, b
         }
     }
 
-    [Theory(Skip = "https://github.com/dotnet/msbuild/issues/10702")]
+    [Theory(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
     [InlineData("CheckCandidate", new[] { "CustomRule1", "CustomRule2" })]
     [InlineData("CheckCandidateWithMultipleChecksInjected", new[] { "CustomRule1", "CustomRule2", "CustomRule3" }, true)]
     public void CustomCheckTest_NoEditorConfig(string checkCandidate, string[] expectedRegisteredRules, bool expectedRejectedChecks = false)
@@ -487,9 +790,9 @@ public void CustomCheckTest_NoEditorConfig(string checkCandidate, string[] expec
         }
     }
 
-    [Theory(Skip = "https://github.com/dotnet/msbuild/issues/10702")]
-    [InlineData("CheckCandidate", "X01234", "error", "error X01234")]
-    [InlineData("CheckCandidateWithMultipleChecksInjected", "X01234", "warning", "warning X01234")]
+    [Theory(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
+    [InlineData("CheckCandidate", "X01234", "error", "error X01234: http://samplelink.com/X01234")]
+    [InlineData("CheckCandidateWithMultipleChecksInjected", "X01234", "warning", "warning X01234: http://samplelink.com/X01234")]
     public void CustomCheckTest_WithEditorConfig(string checkCandidate, string ruleId, string severity, string expectedMessage)
     {
         using (var env = TestEnvironment.Create())
@@ -514,13 +817,11 @@ public void CustomCheckTest_WithEditorConfig(string checkCandidate, string ruleI
         }
     }
 
-    [Theory(Skip = "https://github.com/dotnet/msbuild/issues/10702")]
-    [InlineData("X01236", "Something went wrong initializing")]
-    // These tests are for failure one different points, will be addressed in a different PR
-    // https://github.com/dotnet/msbuild/issues/10522
-    // [InlineData("X01237", "message")]
-    // [InlineData("X01238", "message")]
-    public void CustomChecksFailGracefully(string ruleId, string expectedMessage)
+    [Theory(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
+    [InlineData("X01236", "ErrorOnInitializeCheck", "Something went wrong initializing")]
+    [InlineData("X01237", "ErrorOnRegisteredAction", "something went wrong when executing registered action")]
+    [InlineData("X01238", "ErrorWhenRegisteringActions", "something went wrong when registering actions")]
+    public void CustomChecksFailGracefully(string ruleId, string friendlyName, string expectedMessage)
     {
         using (var env = TestEnvironment.Create())
         {
@@ -541,6 +842,7 @@ public void CustomChecksFailGracefully(string ruleId, string expectedMessage)
             success.ShouldBeTrue();
             projectCheckBuildLog.ShouldContain(expectedMessage);
             projectCheckBuildLog.ShouldNotContain("This check should have been disabled");
+            projectCheckBuildLog.ShouldContain($"Dismounting check '{friendlyName}'");
 
             // Cleanup
             File.Delete(editorConfigName);
@@ -564,6 +866,35 @@ public void DoesNotRunOnRestore(bool buildInOutOfProcessNode)
         output.ShouldNotContain("BC0103");
     }
 
+#if NET
+    [Fact(Skip = "To unblock: https://github.com/dotnet/msbuild/issues/11090")]
+    public void TestBuildCheckTemplate()
+    {
+        TransientTestFolder workFolder = _env.CreateFolder(createFolder: true);
+        var nugetTemplateName = "nugetTemplate.config";
+        var nugetTemplatePath = Path.Combine(TestAssetsRootPath, "CheckCandidate", nugetTemplateName);
+        File.Copy(nugetTemplatePath, Path.Combine(workFolder.Path, nugetTemplateName));
+        AddCustomDataSourceToNugetConfig(workFolder.Path);
+
+        var ExecuteDotnetCommand = (string parameters) =>
+        {
+            string output = RunnerUtilities.RunProcessAndGetOutput("dotnet", parameters, out bool success);
+            return output;
+        };
+
+        var buildCheckTemplatePath = Path.Combine(BuildCheckUnitTestsConstants.RepoRoot, "template_feed", "content", "Microsoft.CheckTemplate");
+        var templateShortName = "msbuildcheck";
+        var projectName = "BuildCheck";
+        var installLog = ExecuteDotnetCommand($"new install {buildCheckTemplatePath}");
+        installLog.ShouldContain($"Success: {buildCheckTemplatePath} installed the following templates:");
+        var creationLog = ExecuteDotnetCommand($"new {templateShortName} -n {projectName} --MicrosoftBuildVersion {BuildCheckUnitTestsConstants.MicrosoftBuildPackageVersion} -o {workFolder.Path} ");
+        creationLog.ShouldContain("The template \"MSBuild custom check skeleton project.\" was created successfully.");
+        var buildLog = ExecuteDotnetCommand($"build {workFolder.Path}");
+        buildLog.ShouldContain("Build succeeded.");
+        ExecuteDotnetCommand($"new -u {buildCheckTemplatePath}");
+    }
+#endif
+
     private void AddCustomDataSourceToNugetConfig(string checkCandidatePath)
     {
         var nugetTemplatePath = Path.Combine(checkCandidatePath, "nugetTemplate.config");
@@ -633,7 +964,6 @@ private void PrepareSampleProjectsAndConfig(
         _env.SetCurrentDirectory(Path.GetDirectoryName(projectFile.Path));
 
         _env.SetEnvironmentVariable("MSBUILDNOINPROCNODE", buildInOutOfProcessNode ? "1" : "0");
-        _env.SetEnvironmentVariable("MSBUILDLOGPROPERTIESANDITEMSAFTEREVALUATION", "1");
 
         // Needed for testing check BC0103
         _env.SetEnvironmentVariable("TestFromTarget", "FromTarget");
diff --git a/src/BuildCheck.UnitTests/Microsoft.Build.BuildCheck.UnitTests.csproj b/src/BuildCheck.UnitTests/Microsoft.Build.BuildCheck.UnitTests.csproj
index 27bf2a1542b..7cb6452f124 100644
--- a/src/BuildCheck.UnitTests/Microsoft.Build.BuildCheck.UnitTests.csproj
+++ b/src/BuildCheck.UnitTests/Microsoft.Build.BuildCheck.UnitTests.csproj
@@ -46,4 +46,31 @@
     </None>
   </ItemGroup>
 
+  <ItemGroup>
+    <Compile Include="..\Shared\IsExternalInit.cs" />
+  </ItemGroup>
+
+  <Target Name="AddGeneratedFile" BeforeTargets="BeforeCompile;CoreCompile" Inputs="$(MSBuildAllProjects)" Outputs="$(IntermediateOutputPath)BuildCheckUnitTestsConstants.cs">
+    <PropertyGroup>
+      <GeneratedText>
+        <![CDATA[
+namespace Microsoft.Build.BuildCheck.UnitTests
+{
+    internal sealed class BuildCheckUnitTestsConstants
+    {
+        public const string MicrosoftBuildPackageVersion = @"$(Version)"%3B
+        public const string RepoRoot = @"$(RepoRoot)"%3B
+    }
+}
+      ]]>
+      </GeneratedText>
+      <GeneratedFilePath>$(IntermediateOutputPath)BuildCheckUnitTestsConstants.cs</GeneratedFilePath>
+    </PropertyGroup>
+    <ItemGroup>
+      <Compile Include="$(GeneratedFilePath)" />
+      <FileWrites Include="$(GeneratedFilePath)" />
+    </ItemGroup>
+    <WriteLinesToFile Lines="$(GeneratedText)" File="$(GeneratedFilePath)" WriteOnlyWhenDifferent="true" Overwrite="true" />
+  </Target>
+
 </Project>
diff --git a/src/BuildCheck.UnitTests/MockBuildCheckRegistrationContext.cs b/src/BuildCheck.UnitTests/MockBuildCheckRegistrationContext.cs
index ced7415118d..1a81d44c7c9 100644
--- a/src/BuildCheck.UnitTests/MockBuildCheckRegistrationContext.cs
+++ b/src/BuildCheck.UnitTests/MockBuildCheckRegistrationContext.cs
@@ -17,7 +17,10 @@ internal sealed class MockBuildCheckRegistrationContext : IBuildCheckRegistratio
 
         public void RegisterEvaluatedPropertiesAction(Action<BuildCheckDataContext<EvaluatedPropertiesCheckData>> evaluatedPropertiesAction)
             => _evaluatedPropertiesAction += evaluatedPropertiesAction;
+#pragma warning disable CS0618 // Type or member is obsolete
         public void RegisterParsedItemsAction(Action<BuildCheckDataContext<ParsedItemsCheckData>> parsedItemsAction) => throw new NotImplementedException();
+#pragma warning restore CS0618 // Type or member is obsolete
+        public void RegisterEvaluatedItemsAction(Action<BuildCheckDataContext<EvaluatedItemsCheckData>> evaluatedItemsAction) => throw new NotImplementedException();
 
         public void RegisterTaskInvocationAction(Action<BuildCheckDataContext<TaskInvocationCheckData>> taskInvocationAction)
             => _taskInvocationAction += taskInvocationAction;
diff --git a/src/BuildCheck.UnitTests/SharedOutputPathCheck_Tests.cs b/src/BuildCheck.UnitTests/SharedOutputPathCheck_Tests.cs
index e3bc5adab4f..6c11e099561 100644
--- a/src/BuildCheck.UnitTests/SharedOutputPathCheck_Tests.cs
+++ b/src/BuildCheck.UnitTests/SharedOutputPathCheck_Tests.cs
@@ -30,7 +30,8 @@ private EvaluatedPropertiesCheckData MakeEvaluatedPropertiesAction(
             return new EvaluatedPropertiesCheckData(
                 projectFile,
                 null,
-                evaluatedProperties ?? new Dictionary<string, string>());
+                evaluatedProperties ?? new Dictionary<string, string>(),
+                new Dictionary<string, string>());
         }
 
         [Fact]
diff --git a/src/BuildCheck.UnitTests/TaskInvocationAnalysisDataTests.cs b/src/BuildCheck.UnitTests/TaskInvocationAnalysisDataTests.cs
index e764f20cae5..10e6a9fcf9c 100644
--- a/src/BuildCheck.UnitTests/TaskInvocationAnalysisDataTests.cs
+++ b/src/BuildCheck.UnitTests/TaskInvocationAnalysisDataTests.cs
@@ -64,7 +64,7 @@ public TaskInvocationCheckDataTests(ITestOutputHelper output)
             [
                 // BuildCheckDataSource.EventArgs
                 [
-                    ([TestCheck.SupportedRule.Id], true, () => s_testCheck = new TestCheck()),
+                    new ([TestCheck.SupportedRule.Id], true, () => s_testCheck = new TestCheck()),
                 ],
                 // BuildCheckDataSource.Execution
                 [],
diff --git a/src/BuildCheck.UnitTests/TestAssets/Common/CommonTest.targets b/src/BuildCheck.UnitTests/TestAssets/Common/CommonTest.targets
index a1ea76b439e..55b9dba5cad 100644
--- a/src/BuildCheck.UnitTests/TestAssets/Common/CommonTest.targets
+++ b/src/BuildCheck.UnitTests/TestAssets/Common/CommonTest.targets
@@ -1,33 +1,17 @@
 <Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
 
   <Target Name="AddNuGetDlls" BeforeTargets="_GetPackageFiles">
-    <!-- Resolve the project references to get their output DLL paths -->
-    <ItemGroup>
-      <ResolvedProjectReference Include="@(ReferencePath)" Condition="%(ReferencePath.ReferenceSourceTarget) == 'ProjectReference'">
-        <OutputPath>%(ReferencePath.OriginalItemSpec)</OutputPath>
-      </ResolvedProjectReference>
-
-      <!-- Add the DLL produced by the referenced project to the _PackagesToPack list -->
-      <_PackagesToPack Include="@(ResolvedProjectReference->'%(OutputPath)')">
-          <NuGetPackageId>@(ResolvedProjectReference->'%(AssemblyName)')</NuGetPackageId>
-      </_PackagesToPack>
-    </ItemGroup>
-    
-    <!-- Merge the collection of PackageReference and Assemblies using the NuGetPackageId key.
-       This produces a new list containing the DLL path and the "IncludeInPackage" metadata-->
-    <JoinItems Left="@(ResolvedCompileFileDefinitions)" LeftKey="NuGetPackageId" LeftMetadata="*" Right="@(ProjectReference)" RightKey="" RightMetadata="*" ItemSpecToUse="Left">
+    <!-- Merge the collection of PackageReference and Assemblies using the NuGetPackageId key. This produces a new list containing the DLL path and the "IncludeInPackage" metadata-->
+    <JoinItems Left="@(ResolvedCompileFileDefinitions)" LeftKey="NuGetPackageId" LeftMetadata="*" Right="@(PackageReference)" RightKey="" RightMetadata="*" ItemSpecToUse="Left">
       <Output TaskParameter="JoinResult" ItemName="_PackagesToPack" />
     </JoinItems>
 
     <ItemGroup>
-      <Message Importance="High" Text="Adding DLLs from the following packages: @(_PackagesToPack->'%(NuGetPackageId)')" />
-
-      <!-- Remove NETStandard DLLs -->
-      <_PackagesToPack Remove="@(_PackagesToPack)" Condition="%(NuGetPackageId) == 'NETStandard.Library'" />
-      <_PackagesToPack Remove="@(_PackagesToPack)" Condition="%(_PackagesToPack.IncludeInPackage) != 'true'" />
+      <!-- Remove packages, except those with IncludeInPackage=true -->
+      <_PackagesToPack Remove="@(_PackagesToPack)" Condition="'%(_PackagesToPack.IncludeInPackage)' != 'true'" />
     </ItemGroup>
 
-    <Message Importance="High" Text="Adding DLLs from the following packages: @(ResolvedProjectReferences->'%(OutputPath)%(AssemblyName).dll')" />
+    <Message Importance="High" Text="Adding DLLs from the following packages: @(_PackagesToPack->'%(NuGetPackageId)')" />
 
     <ItemGroup>
       <!-- Update the collection of items to pack with the DLLs from the NuGet packages -->
@@ -37,5 +21,4 @@
       <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="build" Visible="false" />
     </ItemGroup>
   </Target>
-
 </Project>
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/Directory.Build.props b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/Directory.Build.props
new file mode 100644
index 00000000000..be6dfe73b2c
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/Directory.Build.props
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project>
+
+  <PropertyGroup>
+    <SkipUnchangedFilesOnCopyAlways>$(SkipUnchanged)</SkipUnchangedFilesOnCopyAlways>
+  </PropertyGroup>
+
+</Project>
\ No newline at end of file
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/EntryProject/EntryProject.csproj b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/EntryProject/EntryProject.csproj
new file mode 100644
index 00000000000..1ac36d043de
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/EntryProject/EntryProject.csproj
@@ -0,0 +1,13 @@
+﻿<Project Sdk="Microsoft.NET.Sdk">
+
+  <PropertyGroup>
+    <TargetFramework>net9.0</TargetFramework>
+    <ImplicitUsings>enable</ImplicitUsings>
+    <Nullable>enable</Nullable>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <ProjectReference Include="..\ReferencedProject\ReferencedProject.csproj" />
+  </ItemGroup>
+
+</Project>
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/File1.txt b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/File1.txt
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/File2.txt b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/File2.txt
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/ReferencedProject.csproj b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/ReferencedProject.csproj
new file mode 100644
index 00000000000..7b9f7116c8f
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/CopyAlwaysTest/ReferencedProject/ReferencedProject.csproj
@@ -0,0 +1,14 @@
+<Project Sdk="Microsoft.NET.Sdk">
+
+  <PropertyGroup>
+    <TargetFramework>net9.0</TargetFramework>
+    <ImplicitUsings>enable</ImplicitUsings>
+    <Nullable>enable</Nullable>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <None Include="File1.txt" CopyToOutputDirectory="Always" />
+    <None Include="File2.txt" CopyToOutputDirectory="IfDifferent" />
+  </ItemGroup>
+
+</Project>
diff --git a/src/BuildCheck.UnitTests/TestAssets/CustomCheck/Check1.cs b/src/BuildCheck.UnitTests/TestAssets/CustomCheck/Check1.cs
index a02c34afc7c..c2673d5b508 100644
--- a/src/BuildCheck.UnitTests/TestAssets/CustomCheck/Check1.cs
+++ b/src/BuildCheck.UnitTests/TestAssets/CustomCheck/Check1.cs
@@ -14,7 +14,8 @@ public sealed class Check1 : Check
             "Title",
             "Description",
             "Message format: {0}",
-            new CheckConfiguration());
+            new CheckConfiguration(),
+            "http://samplelink.com/X01234");
 
         public override string FriendlyName => "CustomRule1";
 
diff --git a/src/BuildCheck.UnitTests/TestAssets/CustomCheck/CustomCheck.csproj b/src/BuildCheck.UnitTests/TestAssets/CustomCheck/CustomCheck.csproj
index fc81bc53eb5..b8481f7c7cf 100644
--- a/src/BuildCheck.UnitTests/TestAssets/CustomCheck/CustomCheck.csproj
+++ b/src/BuildCheck.UnitTests/TestAssets/CustomCheck/CustomCheck.csproj
@@ -9,9 +9,9 @@
 
   <ItemGroup>
     <None Include="CustomCheck.props" Pack="true" PackagePath="build\CustomCheck.props" />
-    <Content Include="README.md" />
+    <None Include="README.md" />
   </ItemGroup>
 
   <Import Project="..\Common\CommonTest.targets" />
-
+  
 </Project>
diff --git a/src/BuildCheck.UnitTests/TestAssets/CustomCheck2/CustomCheck2.csproj b/src/BuildCheck.UnitTests/TestAssets/CustomCheck2/CustomCheck2.csproj
index 5d4396dea07..c5c53ea556a 100644
--- a/src/BuildCheck.UnitTests/TestAssets/CustomCheck2/CustomCheck2.csproj
+++ b/src/BuildCheck.UnitTests/TestAssets/CustomCheck2/CustomCheck2.csproj
@@ -9,7 +9,7 @@
 
   <ItemGroup>
     <None Include="CustomCheck2.props" Pack="true" PackagePath="build\CustomCheck2.props" />
-    <Content Include="README.md" />
+    <None Include="README.md" />
   </ItemGroup>
 
   <Import Project="..\Common\CommonTest.targets" />
diff --git a/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/EntryProject/EntryProject.csproj b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/EntryProject/EntryProject.csproj
new file mode 100644
index 00000000000..1ac36d043de
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/EntryProject/EntryProject.csproj
@@ -0,0 +1,13 @@
+﻿<Project Sdk="Microsoft.NET.Sdk">
+
+  <PropertyGroup>
+    <TargetFramework>net9.0</TargetFramework>
+    <ImplicitUsings>enable</ImplicitUsings>
+    <Nullable>enable</Nullable>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <ProjectReference Include="..\ReferencedProject\ReferencedProject.csproj" />
+  </ItemGroup>
+
+</Project>
diff --git a/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/ReferencedProject.csproj b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/ReferencedProject.csproj
new file mode 100644
index 00000000000..4208181be80
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/ReferencedProject.csproj
@@ -0,0 +1,24 @@
+<Project Sdk="Microsoft.NET.Sdk">
+
+  <PropertyGroup>
+    <!-- Target net8.0 - as from net9.0 the RespectAlreadyAssignedItemCulture is added by common targets. -->
+    <TargetFramework>net8.0</TargetFramework>
+    <ImplicitUsings>enable</ImplicitUsings>
+    <Nullable>enable</Nullable>
+  </PropertyGroup>
+
+  <PropertyGroup>
+    <RespectAlreadyAssignedItemCulture>$(RespectCulture)</RespectAlreadyAssignedItemCulture>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <EmbeddedResource Update="Resource1.resx">
+    </EmbeddedResource>
+    <EmbeddedResource Update="Resource1.en.resx">
+      <Culture>en</Culture>
+      <LogicalName>Test.en.resources</LogicalName>
+    </EmbeddedResource>
+    ###EmbeddedResourceToAdd
+  </ItemGroup>
+
+</Project>
diff --git a/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/Resource1.en.resx b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/Resource1.en.resx
new file mode 100644
index 00000000000..1af7de150c9
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/Resource1.en.resx
@@ -0,0 +1,120 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+</root>
\ No newline at end of file
diff --git a/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/Resource1.resx b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/Resource1.resx
new file mode 100644
index 00000000000..1af7de150c9
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/EmbeddedResourceTest/ReferencedProject/Resource1.resx
@@ -0,0 +1,120 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+</root>
\ No newline at end of file
diff --git a/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorCustomCheck.csproj b/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorCustomCheck.csproj
index 8bce5a83d8c..debf007db43 100644
--- a/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorCustomCheck.csproj
+++ b/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorCustomCheck.csproj
@@ -9,7 +9,7 @@
 
   <ItemGroup>
     <None Include="ErrorCustomCheck.props" Pack="true" PackagePath="build\ErrorCustomCheck.props" />
-    <Content Include="README.md" />
+    <None Include="README.md" />
   </ItemGroup>
 
   <Import Project="..\Common\CommonTest.targets" />
diff --git a/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorOnRegisteredAction.cs b/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorOnRegisteredAction.cs
index 1593dc9b997..3dc02bb7cca 100644
--- a/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorOnRegisteredAction.cs
+++ b/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorOnRegisteredAction.cs
@@ -17,7 +17,7 @@ public sealed class ErrorOnRegisteredAction : Check
             "Message format: {0}",
             new CheckConfiguration());
 
-        public override string FriendlyName => "ErrorOnEvaluatedPropertiesCheck";
+        public override string FriendlyName => "ErrorOnRegisteredAction";
 
         public override IReadOnlyList<CheckRule> SupportedRules { get; } = new List<CheckRule>() { SupportedRule };
 
@@ -33,7 +33,7 @@ public override void RegisterActions(IBuildCheckRegistrationContext registration
 
         private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
         {
-            throw new Exception("something went wrong");
+            throw new Exception("something went wrong when executing registered action");
         }
     }
 }
diff --git a/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorWhenRegisteringActions.cs b/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorWhenRegisteringActions.cs
index 9b3f5f0cf05..a7967dce1cb 100644
--- a/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorWhenRegisteringActions.cs
+++ b/src/BuildCheck.UnitTests/TestAssets/ErrorCustomCheck/ErrorWhenRegisteringActions.cs
@@ -17,7 +17,7 @@ public sealed class ErrorWhenRegisteringActions : Check
             "Message format: {0}",
             new CheckConfiguration());
 
-        public override string FriendlyName => "ErrorOnEvaluatedPropertiesCheck";
+        public override string FriendlyName => "ErrorWhenRegisteringActions";
 
         public override IReadOnlyList<CheckRule> SupportedRules { get; } = new List<CheckRule>() { SupportedRule };
 
@@ -29,7 +29,7 @@ public override void Initialize(ConfigurationContext configurationContext)
         public override void RegisterActions(IBuildCheckRegistrationContext registrationContext)
         {
             registrationContext.RegisterEvaluatedPropertiesAction(EvaluatedPropertiesAction);
-            throw new Exception("something went wrong");
+            throw new Exception("something went wrong when registering actions");
         }
 
         private void EvaluatedPropertiesAction(BuildCheckDataContext<EvaluatedPropertiesCheckData> context)
diff --git a/src/BuildCheck.UnitTests/TestAssets/InvalidCustomCheck/InvalidCustomCheck.csproj b/src/BuildCheck.UnitTests/TestAssets/InvalidCustomCheck/InvalidCustomCheck.csproj
index 81c7c28efe7..ecffc920560 100644
--- a/src/BuildCheck.UnitTests/TestAssets/InvalidCustomCheck/InvalidCustomCheck.csproj
+++ b/src/BuildCheck.UnitTests/TestAssets/InvalidCustomCheck/InvalidCustomCheck.csproj
@@ -9,7 +9,7 @@
 
   <ItemGroup>
     <None Include="InvalidCustomCheck.props" Pack="true" PackagePath="build\InvalidCustomCheck.props" />
-    <Content Include="README.md" />
+    <None Include="README.md" />
   </ItemGroup>
 
   <Import Project="..\Common\CommonTest.targets" />
diff --git a/src/BuildCheck.UnitTests/TestAssets/SampleCheckIntegrationTest/Project2.csproj b/src/BuildCheck.UnitTests/TestAssets/SampleCheckIntegrationTest/Project2.csproj
index b8355528363..fe539035baa 100644
--- a/src/BuildCheck.UnitTests/TestAssets/SampleCheckIntegrationTest/Project2.csproj
+++ b/src/BuildCheck.UnitTests/TestAssets/SampleCheckIntegrationTest/Project2.csproj
@@ -11,7 +11,7 @@
     </PropertyGroup>
                     
     <ItemGroup>
-        <Reference Include="bin/Project1.dll" />
+        <Reference Include="bin/$(Configuration)/$(TargetFramework)/Project1.dll" />
     </ItemGroup>
                     
     <Target Name="Hello">
diff --git a/src/BuildCheck.UnitTests/TestAssets/TFMConfusionCheck/TFMConfusionCheck.csproj b/src/BuildCheck.UnitTests/TestAssets/TFMConfusionCheck/TFMConfusionCheck.csproj
new file mode 100644
index 00000000000..fd2515558a3
--- /dev/null
+++ b/src/BuildCheck.UnitTests/TestAssets/TFMConfusionCheck/TFMConfusionCheck.csproj
@@ -0,0 +1,7 @@
+<Project Sdk="Microsoft.NET.Sdk">
+                
+   <PropertyGroup>
+       ###TFM
+   </PropertyGroup>
+                
+</Project>
diff --git a/src/Framework.UnitTests/ExtendedBuildEventArgs_Tests.cs b/src/Framework.UnitTests/ExtendedBuildEventArgs_Tests.cs
index 259d5ea5f58..47a7bbe5b54 100644
--- a/src/Framework.UnitTests/ExtendedBuildEventArgs_Tests.cs
+++ b/src/Framework.UnitTests/ExtendedBuildEventArgs_Tests.cs
@@ -24,7 +24,7 @@ public void ExtendedCustomBuildEventArgs_SerializationDeserialization(bool withO
             eventTimestamp: withOptionalData ? DateTime.Parse("3/1/2017 11:11:56 AM") : DateTime.Now,
             messageArgs: withOptionalData ? new object[] { "arg0val", "arg1val" } : null)
         {
-            ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+            ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
             ExtendedMetadata = withOptionalData ? new Dictionary<string, string?> { { "m1", "v1" }, { "m2", "v2" } } : null,
             BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
         };
@@ -62,7 +62,7 @@ public void ExtendedErrorEventArgs_SerializationDeserialization(bool withOptiona
             eventTimestamp: withOptionalData ? DateTime.Parse("3/1/2017 11:11:56 AM") : DateTime.Now,
             messageArgs: withOptionalData ? new object[] { "arg0val", "arg1val" } : null)
         {
-            ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+            ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
             ExtendedMetadata = withOptionalData ? new Dictionary<string, string?> { { "m1", "v1" }, { "m2", "v2" } } : null,
             BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
         };
@@ -101,7 +101,7 @@ public void ExtendedWarningEventArgs_SerializationDeserialization(bool withOptio
             eventTimestamp: withOptionalData ? DateTime.Parse("3/1/2017 11:11:56 AM") : DateTime.Now,
             messageArgs: withOptionalData ? new object[] { "arg0val", "arg1val" } : null)
         {
-            ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+            ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
             ExtendedMetadata = withOptionalData ? new Dictionary<string, string?> { { "m1", "v1" }, { "m2", "v2" } } : null,
             BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
         };
@@ -139,7 +139,7 @@ public void ExtendedMessageEventArgs_SerializationDeserialization(bool withOptio
             eventTimestamp: withOptionalData ? DateTime.Parse("3/1/2017 11:11:56 AM") : DateTime.Now,
             messageArgs: withOptionalData ? new object[] { "arg0val", "arg1val" } : null)
         {
-            ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+            ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
             ExtendedMetadata = withOptionalData ? new Dictionary<string, string?> { { "m1", "v1" }, { "m2", "v2" } } : null,
             BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
         };
@@ -176,7 +176,7 @@ public void ExtendedCriticalMessageEventArgs_SerializationDeserialization(bool w
             eventTimestamp: withOptionalData ? DateTime.Parse("3/1/2017 11:11:56 AM") : DateTime.Now,
             messageArgs: withOptionalData ? new object[] { "arg0val", "arg1val" } : null)
         {
-            ExtendedData = withOptionalData ? "{'long-json':'mostly-strings'}" : null,
+            ExtendedData = withOptionalData ? /*lang=json*/ "{'long-json':'mostly-strings'}" : null,
             ExtendedMetadata = withOptionalData ? new Dictionary<string, string?> { { "m1", "v1" }, { "m2", "v2" } } : null,
             BuildEventContext = withOptionalData ? new BuildEventContext(1, 2, 3, 4, 5, 6, 7) : null,
         };
diff --git a/src/Framework/BuildCheck/BuildCheckEventArgs.cs b/src/Framework/BuildCheck/BuildCheckEventArgs.cs
index c6929b3c19e..442b519894e 100644
--- a/src/Framework/BuildCheck/BuildCheckEventArgs.cs
+++ b/src/Framework/BuildCheck/BuildCheckEventArgs.cs
@@ -172,14 +172,10 @@ internal override void CreateFromStream(BinaryReader reader, int version)
 
 internal sealed class BuildCheckResultWarning : BuildWarningEventArgs
 {
-    public BuildCheckResultWarning(IBuildCheckResult result, string code)
-        : base(code: code, file: result.Location.File, lineNumber: result.Location.Line, columnNumber: result.Location.Column, message: result.FormatMessage()) =>
+    public BuildCheckResultWarning(IBuildCheckResult result)
+        : base(code: result.Code, file: result.Location.File, lineNumber: result.Location.Line, columnNumber: result.Location.Column, message: result.FormatMessage()) =>
         RawMessage = result.FormatMessage();
 
-    internal BuildCheckResultWarning(string formattedMessage, string code)
-        : base(code: code, file: null, lineNumber: 0, columnNumber: 0, message: formattedMessage) =>
-        RawMessage = formattedMessage;
-
     internal BuildCheckResultWarning() { }
 
     internal override void WriteToStream(BinaryWriter writer)
@@ -199,14 +195,10 @@ internal override void CreateFromStream(BinaryReader reader, int version)
 
 internal sealed class BuildCheckResultError : BuildErrorEventArgs
 {
-    public BuildCheckResultError(IBuildCheckResult result, string code)
-        : base(code: code, file: result.Location.File, lineNumber: result.Location.Line, columnNumber: result.Location.Column, message: result.FormatMessage())
+    public BuildCheckResultError(IBuildCheckResult result)
+        : base(code: result.Code, file: result.Location.File, lineNumber: result.Location.Line, columnNumber: result.Location.Column, message: result.FormatMessage())
         => RawMessage = result.FormatMessage();
 
-    internal BuildCheckResultError(string formattedMessage, string code)
-        : base(code: code, file: null, lineNumber: 0, columnNumber: 0, message: formattedMessage)
-        => RawMessage = formattedMessage;
-
     internal BuildCheckResultError() { }
 
     internal override void WriteToStream(BinaryWriter writer)
@@ -227,10 +219,9 @@ internal override void CreateFromStream(BinaryReader reader, int version)
 internal sealed class BuildCheckResultMessage : BuildMessageEventArgs
 {
     public BuildCheckResultMessage(IBuildCheckResult result)
-        : base(message: result.FormatMessage(), file: result.Location.File, lineNumber: result.Location.Line, columnNumber: result.Location.Column, MessageImportance.High)
+        : base(code: result.Code, file: result.Location.File, lineNumber: result.Location.Line, columnNumber: result.Location.Column, message: result.FormatMessage())
         => RawMessage = result.FormatMessage();
 
-
     internal BuildCheckResultMessage(string formattedMessage) => RawMessage = formattedMessage;
 
     internal BuildCheckResultMessage() { }
diff --git a/src/Framework/BuildCheck/IBuildCheckResult.cs b/src/Framework/BuildCheck/IBuildCheckResult.cs
index 4f7043b771b..916abd8b70d 100644
--- a/src/Framework/BuildCheck/IBuildCheckResult.cs
+++ b/src/Framework/BuildCheck/IBuildCheckResult.cs
@@ -15,6 +15,11 @@ internal interface IBuildCheckResult
     /// </summary>
     string LocationString { get; }
 
+    /// <summary>
+    /// The short code of the diagnostic - e.g. 'BC0201'
+    /// </summary>
+    string Code { get; }
+
     /// <summary>
     /// Location of the finding.
     /// </summary>
diff --git a/src/Framework/BuildErrorEventArgs.cs b/src/Framework/BuildErrorEventArgs.cs
index 1b793121678..97cb5b1f1df 100644
--- a/src/Framework/BuildErrorEventArgs.cs
+++ b/src/Framework/BuildErrorEventArgs.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using Microsoft.Build.Shared;
 
@@ -149,7 +150,7 @@ public BuildErrorEventArgs(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             string helpKeyword,
             string senderName,
             DateTime eventTimestamp,
@@ -183,10 +184,10 @@ public BuildErrorEventArgs(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             string helpKeyword,
             string senderName,
-            string helpLink,
+            [StringSyntax(StringSyntaxAttribute.Uri)] string helpLink,
             DateTime eventTimestamp,
             params object[] messageArgs)
             : base(message, helpKeyword, senderName, eventTimestamp, messageArgs)
diff --git a/src/Framework/BuildMessageEventArgs.cs b/src/Framework/BuildMessageEventArgs.cs
index 37d6ff1c3d1..20a1898bea2 100644
--- a/src/Framework/BuildMessageEventArgs.cs
+++ b/src/Framework/BuildMessageEventArgs.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using System.Runtime.Serialization;
 using Microsoft.Build.Shared;
@@ -98,7 +99,7 @@ public BuildMessageEventArgs(
         /// <param name="eventTimestamp">Timestamp when event was created</param>
         /// <param name="messageArgs">message arguments</param>
         public BuildMessageEventArgs(
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             string helpKeyword,
             string senderName,
             MessageImportance importance,
@@ -109,6 +110,28 @@ public BuildMessageEventArgs(
             // do nothing
         }
 
+        /// <summary>
+        /// This constructor allows event data without ends to be initialized.
+        /// </summary>
+        /// <param name="code">event code</param>
+        /// <param name="file">file associated with the event</param>
+        /// <param name="lineNumber">line number (0 if not applicable)</param>
+        /// <param name="columnNumber">column number (0 if not applicable)</param>
+        /// <param name="message">text message</param>
+        protected BuildMessageEventArgs(
+            string code,
+            string message,
+            string file,
+            int lineNumber,
+            int columnNumber)
+            : base(message, helpKeyword: null, senderName: null)
+        {
+            this.code = code;
+            this.file = file;
+            this.lineNumber = lineNumber;
+            this.columnNumber = columnNumber;
+        }
+
         /// <summary>
         /// This constructor allows all event data to be initialized
         /// </summary>
@@ -197,7 +220,7 @@ public BuildMessageEventArgs(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             string helpKeyword,
             string senderName,
             MessageImportance importance,
diff --git a/src/Framework/BuildWarningEventArgs.cs b/src/Framework/BuildWarningEventArgs.cs
index 7cd5ec1f09d..543281e8c26 100644
--- a/src/Framework/BuildWarningEventArgs.cs
+++ b/src/Framework/BuildWarningEventArgs.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using Microsoft.Build.Shared;
 
@@ -112,7 +113,7 @@ public BuildWarningEventArgs(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             string helpKeyword,
             string senderName,
             DateTime eventTimestamp,
@@ -145,10 +146,10 @@ public BuildWarningEventArgs(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             string helpKeyword,
             string senderName,
-            string helpLink,
+            [StringSyntax(StringSyntaxAttribute.Uri)] string helpLink,
             DateTime eventTimestamp,
             params object[] messageArgs)
             : base(message, helpKeyword, senderName, eventTimestamp, messageArgs)
diff --git a/src/Framework/CriticalBuildMessageEventArgs.cs b/src/Framework/CriticalBuildMessageEventArgs.cs
index 765e05fe857..613240347c4 100644
--- a/src/Framework/CriticalBuildMessageEventArgs.cs
+++ b/src/Framework/CriticalBuildMessageEventArgs.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics.CodeAnalysis;
 
 #nullable disable
 
@@ -102,7 +103,7 @@ public CriticalBuildMessageEventArgs(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             string helpKeyword,
             string senderName,
             DateTime eventTimestamp,
diff --git a/src/Framework/CustomBuildEventArgs.cs b/src/Framework/CustomBuildEventArgs.cs
index fe6cbc087b8..85d59389d3f 100644
--- a/src/Framework/CustomBuildEventArgs.cs
+++ b/src/Framework/CustomBuildEventArgs.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics.CodeAnalysis;
 
 #nullable disable
 
@@ -71,7 +72,7 @@ protected CustomBuildEventArgs(
         /// <param name="eventTimestamp">Timestamp when event was created</param>
         /// <param name="messageArgs">Message arguments</param>
         protected CustomBuildEventArgs(
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             string helpKeyword,
             string senderName,
             DateTime eventTimestamp,
diff --git a/src/Framework/EncodingUtilities.cs b/src/Framework/EncodingUtilities.cs
index 4ee4679dd3f..342e07d3d67 100644
--- a/src/Framework/EncodingUtilities.cs
+++ b/src/Framework/EncodingUtilities.cs
@@ -30,6 +30,7 @@ internal static class EncodingUtilities
         internal const string UseUtf8Never = "NEVER";
         internal const string UseUtf8Detect = "DETECT";
         internal const string UseUtf8System = "SYSTEM";
+        internal const string UseUtf8True = "TRUE";
 
         /// <summary>
         /// Get the current system locale code page, OEM version. OEM code pages are used for console-based input/output
@@ -241,6 +242,7 @@ internal static Encoding BatchFileEncoding(string contents, string encodingSpeci
             switch (useUtf8.ToUpperInvariant())
             {
                 case EncodingUtilities.UseUtf8Always:
+                case EncodingUtilities.UseUtf8True:
                     return EncodingUtilities.Utf8WithoutBom;
                 case EncodingUtilities.UseUtf8Never:
                 case EncodingUtilities.UseUtf8System:
diff --git a/src/Framework/ExtendedBuildErrorEventArgs.cs b/src/Framework/ExtendedBuildErrorEventArgs.cs
index 85d10939236..54f558432b1 100644
--- a/src/Framework/ExtendedBuildErrorEventArgs.cs
+++ b/src/Framework/ExtendedBuildErrorEventArgs.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Collections.Generic;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using Microsoft.Build.Shared;
 
@@ -88,7 +89,7 @@ public ExtendedBuildErrorEventArgs(string type, string? subcategory, string? cod
     /// <param name="eventTimestamp">Timestamp when event was created</param>
     /// <param name="messageArgs">message arguments</param>
     public ExtendedBuildErrorEventArgs(string type, string? subcategory, string? code, string? file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber,
-        string? message, string? helpKeyword, string? senderName, DateTime eventTimestamp, params object[]? messageArgs)
+        [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string? message, string? helpKeyword, string? senderName, DateTime eventTimestamp, params object[]? messageArgs)
         : base(subcategory, code, file, lineNumber, columnNumber, endLineNumber, endColumnNumber, message, helpKeyword, senderName, eventTimestamp, messageArgs) => ExtendedType = type;
 
     /// <summary>
@@ -109,7 +110,7 @@ public ExtendedBuildErrorEventArgs(string type, string? subcategory, string? cod
     /// <param name="eventTimestamp">Timestamp when event was created</param>
     /// <param name="messageArgs">message arguments</param>
     public ExtendedBuildErrorEventArgs(string type, string? subcategory, string? code, string? file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber,
-        string? message, string? helpKeyword, string? senderName, string? helpLink, DateTime eventTimestamp, params object[]? messageArgs)
+        [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string? message, string? helpKeyword, string? senderName, [StringSyntax(StringSyntaxAttribute.Uri)] string? helpLink, DateTime eventTimestamp, params object[]? messageArgs)
         : base(subcategory, code, file, lineNumber, columnNumber, endLineNumber, endColumnNumber, message, helpKeyword, senderName, helpLink, eventTimestamp, messageArgs) => ExtendedType = type;
 
     internal override void WriteToStream(BinaryWriter writer)
diff --git a/src/Framework/ExtendedBuildWarningEventArgs.cs b/src/Framework/ExtendedBuildWarningEventArgs.cs
index 9481d2bfbdc..2d9a163eb15 100644
--- a/src/Framework/ExtendedBuildWarningEventArgs.cs
+++ b/src/Framework/ExtendedBuildWarningEventArgs.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Collections.Generic;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using Microsoft.Build.Shared;
 
@@ -88,7 +89,7 @@ public ExtendedBuildWarningEventArgs(string type, string? subcategory, string? c
     /// <param name="eventTimestamp">Timestamp when event was created</param>
     /// <param name="messageArgs">message arguments</param>
     public ExtendedBuildWarningEventArgs(string type, string? subcategory, string? code, string? file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber,
-        string? message, string? helpKeyword, string? senderName, DateTime eventTimestamp, params object[]? messageArgs)
+        [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string? message, string? helpKeyword, string? senderName, DateTime eventTimestamp, params object[]? messageArgs)
         : base(subcategory, code, file, lineNumber, columnNumber, endLineNumber, endColumnNumber, message, helpKeyword, senderName, eventTimestamp, messageArgs) => ExtendedType = type;
 
     /// <summary>
@@ -109,7 +110,7 @@ public ExtendedBuildWarningEventArgs(string type, string? subcategory, string? c
     /// <param name="eventTimestamp">Timestamp when event was created</param>
     /// <param name="messageArgs">message arguments</param>
     public ExtendedBuildWarningEventArgs(string type, string? subcategory, string? code, string? file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber,
-        string? message, string? helpKeyword, string? senderName, string? helpLink, DateTime eventTimestamp, params object[]? messageArgs)
+        [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string? message, string? helpKeyword, string? senderName, [StringSyntax(StringSyntaxAttribute.Uri)] string? helpLink, DateTime eventTimestamp, params object[]? messageArgs)
         : base(subcategory, code, file, lineNumber, columnNumber, endLineNumber, endColumnNumber, message, helpKeyword, senderName, helpLink, eventTimestamp, messageArgs) => ExtendedType = type;
 
     internal override void WriteToStream(BinaryWriter writer)
diff --git a/src/Framework/LazyFormattedBuildEventArgs.cs b/src/Framework/LazyFormattedBuildEventArgs.cs
index 06c3b333aff..cec763dd257 100644
--- a/src/Framework/LazyFormattedBuildEventArgs.cs
+++ b/src/Framework/LazyFormattedBuildEventArgs.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics.CodeAnalysis;
 using System.Globalization;
 using System.IO;
 
@@ -41,7 +42,7 @@ private protected override string? FormattedMessage
         /// <param name="helpKeyword">help keyword.</param>
         /// <param name="senderName">name of event sender.</param>
         public LazyFormattedBuildEventArgs(
-            string? message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string? message,
             string? helpKeyword,
             string? senderName)
             : this(message, helpKeyword, senderName, DateTime.Now, null)
@@ -57,7 +58,7 @@ public LazyFormattedBuildEventArgs(
         /// <param name="eventTimestamp">Timestamp when event was created.</param>
         /// <param name="messageArgs">Message arguments.</param>
         public LazyFormattedBuildEventArgs(
-            string? message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string? message,
             string? helpKeyword,
             string? senderName,
             DateTime eventTimestamp,
@@ -164,7 +165,7 @@ internal override void CreateFromStream(BinaryReader reader, Int32 version)
         /// <param name="unformatted">The string to format.</param>
         /// <param name="args">Optional arguments for formatting the given string.</param>
         /// <returns>The formatted string.</returns>
-        private static string FormatString(string unformatted, params object[] args)
+        private static string FormatString([StringSyntax(StringSyntaxAttribute.CompositeFormat)] string unformatted, params object[] args)
         {
             // Based on the one in Shared/ResourceUtilities.
             string formatted = unformatted;
diff --git a/src/Framework/MSBuildEventSource.cs b/src/Framework/MSBuildEventSource.cs
index efe948081a3..4b403ebdf1d 100644
--- a/src/Framework/MSBuildEventSource.cs
+++ b/src/Framework/MSBuildEventSource.cs
@@ -362,10 +362,11 @@ public void TargetStart(string targetName)
         }
 
         /// <param name="targetName">The name of the target being executed.</param>
-        [Event(44, Keywords = Keywords.All | Keywords.PerformanceLog)]
-        public void TargetStop(string targetName)
+        /// <param name="result">Target stop result.</param>
+        [Event(44, Keywords = Keywords.All | Keywords.PerformanceLog, Version = 1)]
+        public void TargetStop(string targetName, string result)
         {
-            WriteEvent(44, targetName);
+            WriteEvent(44, targetName, result);
         }
 
         /// <summary>
diff --git a/src/Framework/Polyfills/StringSyntaxAttribute.cs b/src/Framework/Polyfills/StringSyntaxAttribute.cs
new file mode 100644
index 00000000000..4bfd1bb40cd
--- /dev/null
+++ b/src/Framework/Polyfills/StringSyntaxAttribute.cs
@@ -0,0 +1,70 @@
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+#if !NET
+
+using System;
+
+[AttributeUsage(AttributeTargets.Parameter | AttributeTargets.Field | AttributeTargets.Property, AllowMultiple = false, Inherited = false)]
+internal sealed class StringSyntaxAttribute : Attribute
+{
+    /// <summary>Initializes the <see cref="StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
+    /// <param name="syntax">The syntax identifier.</param>
+    public StringSyntaxAttribute(string syntax)
+    {
+        Syntax = syntax;
+        Arguments = [];
+    }
+
+    /// <summary>Initializes the <see cref="StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
+    /// <param name="syntax">The syntax identifier.</param>
+    /// <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
+    public StringSyntaxAttribute(string syntax, params object?[] arguments)
+    {
+        Syntax = syntax;
+        Arguments = arguments;
+    }
+
+    /// <summary>Gets the identifier of the syntax used.</summary>
+    public string Syntax { get; }
+
+    /// <summary>Optional arguments associated with the specific syntax employed.</summary>
+    public object?[] Arguments { get; }
+
+    /// <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
+    public const string CompositeFormat = nameof(CompositeFormat);
+
+    /// <summary>The syntax identifier for strings containing date format specifiers.</summary>
+    public const string DateOnlyFormat = nameof(DateOnlyFormat);
+
+    /// <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
+    public const string DateTimeFormat = nameof(DateTimeFormat);
+
+    /// <summary>The syntax identifier for strings containing <see cref="Enum"/> format specifiers.</summary>
+    public const string EnumFormat = nameof(EnumFormat);
+
+    /// <summary>The syntax identifier for strings containing <see cref="Guid"/> format specifiers.</summary>
+    public const string GuidFormat = nameof(GuidFormat);
+
+    /// <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
+    public const string Json = nameof(Json);
+
+    /// <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
+    public const string NumericFormat = nameof(NumericFormat);
+
+    /// <summary>The syntax identifier for strings containing regular expressions.</summary>
+    public const string Regex = nameof(Regex);
+
+    /// <summary>The syntax identifier for strings containing time format specifiers.</summary>
+    public const string TimeOnlyFormat = nameof(TimeOnlyFormat);
+
+    /// <summary>The syntax identifier for strings containing <see cref="TimeSpan"/> format specifiers.</summary>
+    public const string TimeSpanFormat = nameof(TimeSpanFormat);
+
+    /// <summary>The syntax identifier for strings containing URIs.</summary>
+    public const string Uri = nameof(Uri);
+
+    /// <summary>The syntax identifier for strings containing XML.</summary>
+    public const string Xml = nameof(Xml);
+}
+#endif
diff --git a/src/Framework/ProjectImportedEventArgs.cs b/src/Framework/ProjectImportedEventArgs.cs
index b51b4711e70..4884d1bcf23 100644
--- a/src/Framework/ProjectImportedEventArgs.cs
+++ b/src/Framework/ProjectImportedEventArgs.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using Microsoft.Build.Shared;
 
@@ -28,7 +29,7 @@ public ProjectImportedEventArgs()
         public ProjectImportedEventArgs(
             int lineNumber,
             int columnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             params object[] messageArgs)
             : base(
                   subcategory: null,
diff --git a/src/Framework/StringUtils.cs b/src/Framework/StringUtils.cs
deleted file mode 100644
index e5502ab7320..00000000000
--- a/src/Framework/StringUtils.cs
+++ /dev/null
@@ -1,34 +0,0 @@
-﻿// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-using System;
-
-namespace Microsoft.Build.Framework;
-
-internal static class StringUtils
-{
-    /// <summary>
-    /// Generates a random string of the specified length.
-    /// The generated string is suitable for use in file paths.
-    /// The randomness distribution is given by the System.Random.
-    /// </summary>
-    /// <param name="length"></param>
-    /// <returns></returns>
-    internal static string GenerateRandomString(int length)
-    {
-        // Base64, 2^6 = 64
-        const int eachStringCharEncodesBites = 6;
-        const int eachByteHasBits = 8;
-        const double bytesNumNeededForSingleStringChar = eachStringCharEncodesBites / (double)eachByteHasBits;
-
-        int randomBytesNeeded = (int)Math.Ceiling(length * bytesNumNeededForSingleStringChar);
-        Random random = new();
-
-        byte[] randomBytes = new byte[randomBytesNeeded];
-        random.NextBytes(randomBytes);
-        // Base64: [A-Z], [a-z], [0-9], +, /, =
-        // We are replacing '/' to get a valid path
-        string randomBase64String = Convert.ToBase64String(randomBytes).Replace('/', '_');
-        return randomBase64String.Substring(0, length);
-    }
-}
diff --git a/src/Framework/TargetSkippedEventArgs.cs b/src/Framework/TargetSkippedEventArgs.cs
index 22b2a4a1a0e..8536d2bec8a 100644
--- a/src/Framework/TargetSkippedEventArgs.cs
+++ b/src/Framework/TargetSkippedEventArgs.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 
 using System;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using Microsoft.Build.Shared;
 
@@ -57,7 +58,7 @@ public TargetSkippedEventArgs()
         /// Initializes a new instance of the TargetSkippedEventArgs class.
         /// </summary>
         public TargetSkippedEventArgs(
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             params object[] messageArgs)
             : base(
                   subcategory: null,
diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Linux.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Linux.verified.txt
new file mode 100644
index 00000000000..7e88eaa0b95
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Linux.verified.txt
@@ -0,0 +1,12 @@
+﻿]9;4;3;\  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+[?25l[1F
+[?25h
+Build summary:
+  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+
+Build [31;1mfailed with 1 error(s) and 1 warning(s)[m in 5.0s
+]9;4;0;\
\ No newline at end of file
diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.OSX.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.OSX.verified.txt
new file mode 100644
index 00000000000..42a61e2fbbb
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.OSX.verified.txt
@@ -0,0 +1,12 @@
+﻿  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+[?25l[1F
+[?25h
+Build summary:
+  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+
+Build [31;1mfailed with 1 error(s) and 1 warning(s)[m in 5.0s
+
diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Windows.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Windows.verified.txt
new file mode 100644
index 00000000000..7e88eaa0b95
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintDetailedBuildSummary_FailedWithErrorAndWarning.Windows.verified.txt
@@ -0,0 +1,12 @@
+﻿]9;4;3;\  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+[?25l[1F
+[?25h
+Build summary:
+  project [31;1mfailed with 1 error(s) and 1 warning(s)[m (0.2s)
+    directory/[1mfile[m(1,2,3,4): [33;1mwarning[m [33;1mAA0000[m: Warning!
+    directory/[1mfile[m(1,2,3,4): [31;1merror[m [31;1mAA0000[m: Error!
+
+Build [31;1mfailed with 1 error(s) and 1 warning(s)[m in 5.0s
+]9;4;0;\
\ No newline at end of file
diff --git a/src/MSBuild.UnitTests/TerminalLogger_Tests.cs b/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
index bfcf0ddf585..a97f2c683cc 100644
--- a/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
+++ b/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
@@ -414,6 +414,26 @@ public Task PrintBuildSummary_FailedWithErrors()
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
 
+        [Fact]
+        public Task PrintDetailedBuildSummary_FailedWithErrorAndWarning()
+        {
+            string? originalParameters = _terminallogger.Parameters;
+            _terminallogger.Parameters = "SUMMARY";
+            _terminallogger.ParseParameters();
+
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, () =>
+            {
+                WarningRaised?.Invoke(_eventSender, MakeWarningEventArgs("Warning!"));
+                ErrorRaised?.Invoke(_eventSender, MakeErrorEventArgs("Error!"));
+            });
+
+            // Restore original parameters
+            _terminallogger.Parameters = originalParameters;
+            _terminallogger.ParseParameters();
+
+            return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
+        }
+
         [Fact]
         public Task PrintBuildSummary_FailedWithErrorsAndWarnings()
         {
diff --git a/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd b/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
index fba9b94c7bb..607f6acafe9 100644
--- a/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
+++ b/src/MSBuild/MSBuild/Microsoft.Build.CommonTypes.xsd
@@ -768,6 +768,7 @@ elementFormDefault="qualified">
                                         <xs:enumeration value="Never" />
                                         <xs:enumeration value="Always" />
                                         <xs:enumeration value="PreserveNewest" />
+                                        <xs:enumeration value="IfDifferent" />
                                     </xs:restriction>
                                 </xs:simpleType>
                             </xs:element>
@@ -787,6 +788,7 @@ elementFormDefault="qualified">
                                 <xs:enumeration value="Never" />
                                 <xs:enumeration value="Always" />
                                 <xs:enumeration value="PreserveNewest" />
+                                <xs:enumeration value="IfDifferent" />
                             </xs:restriction>
                         </xs:simpleType>
                     </xs:attribute>
@@ -836,6 +838,7 @@ elementFormDefault="qualified">
                                         <xs:enumeration value="Never" />
                                         <xs:enumeration value="Always" />
                                         <xs:enumeration value="PreserveNewest" />
+                                        <xs:enumeration value="IfDifferent" />
                                     </xs:restriction>
                                 </xs:simpleType>
                             </xs:element>
@@ -855,6 +858,7 @@ elementFormDefault="qualified">
                                 <xs:enumeration value="Never" />
                                 <xs:enumeration value="Always" />
                                 <xs:enumeration value="PreserveNewest" />
+                                <xs:enumeration value="IfDifferent" />
                             </xs:restriction>
                         </xs:simpleType>
                     </xs:attribute>
@@ -906,6 +910,7 @@ elementFormDefault="qualified">
                                         <xs:enumeration value="Never" />
                                         <xs:enumeration value="Always" />
                                         <xs:enumeration value="PreserveNewest" />
+                                        <xs:enumeration value="IfDifferent" />
                                     </xs:restriction>
                                 </xs:simpleType>
                             </xs:element>
@@ -918,6 +923,7 @@ elementFormDefault="qualified">
                                         <xs:enumeration value="Never" />
                                         <xs:enumeration value="Always" />
                                         <xs:enumeration value="PreserveNewest" />
+                                        <xs:enumeration value="IfDifferent" />
                                     </xs:restriction>
                                 </xs:simpleType>
                             </xs:element>
@@ -936,6 +942,7 @@ elementFormDefault="qualified">
                                 <xs:enumeration value="Never" />
                                 <xs:enumeration value="Always" />
                                 <xs:enumeration value="PreserveNewest" />
+                                <xs:enumeration value="IfDifferent" />
                             </xs:restriction>
                         </xs:simpleType>
                     </xs:attribute>
@@ -976,6 +983,7 @@ elementFormDefault="qualified">
                                         <xs:enumeration value="Never" />
                                         <xs:enumeration value="Always" />
                                         <xs:enumeration value="PreserveNewest" />
+                                        <xs:enumeration value="IfDifferent" />
                                     </xs:restriction>
                                 </xs:simpleType>
                             </xs:element>
@@ -994,6 +1002,7 @@ elementFormDefault="qualified">
                                 <xs:enumeration value="Never" />
                                 <xs:enumeration value="Always" />
                                 <xs:enumeration value="PreserveNewest" />
+                                <xs:enumeration value="IfDifferent" />
                             </xs:restriction>
                         </xs:simpleType>
                     </xs:attribute>
@@ -1034,6 +1043,7 @@ elementFormDefault="qualified">
                                         <xs:enumeration value="Never" />
                                         <xs:enumeration value="Always" />
                                         <xs:enumeration value="PreserveNewest" />
+                                        <xs:enumeration value="IfDifferent" />
                                     </xs:restriction>
                                 </xs:simpleType>
                             </xs:element>
@@ -1052,6 +1062,7 @@ elementFormDefault="qualified">
                                 <xs:enumeration value="Never" />
                                 <xs:enumeration value="Always" />
                                 <xs:enumeration value="PreserveNewest" />
+                                <xs:enumeration value="IfDifferent" />
                             </xs:restriction>
                         </xs:simpleType>
                     </xs:attribute>
@@ -1092,6 +1103,7 @@ elementFormDefault="qualified">
                                         <xs:enumeration value="Never" />
                                         <xs:enumeration value="Always" />
                                         <xs:enumeration value="PreserveNewest" />
+                                        <xs:enumeration value="IfDifferent" />
                                     </xs:restriction>
                                 </xs:simpleType>
                             </xs:element>
@@ -1104,6 +1116,7 @@ elementFormDefault="qualified">
                                 <xs:enumeration value="Never" />
                                 <xs:enumeration value="Always" />
                                 <xs:enumeration value="PreserveNewest" />
+                                <xs:enumeration value="IfDifferent" />
                             </xs:restriction>
                         </xs:simpleType>
                     </xs:attribute>
@@ -1144,6 +1157,7 @@ elementFormDefault="qualified">
                                         <xs:enumeration value="Never" />
                                         <xs:enumeration value="Always" />
                                         <xs:enumeration value="PreserveNewest" />
+                                        <xs:enumeration value="IfDifferent" />
                                     </xs:restriction>
                                 </xs:simpleType>
                             </xs:element>
@@ -2185,7 +2199,7 @@ elementFormDefault="qualified">
     <xs:element name="UseWindowsForms" type="msb:boolean" substitutionGroup="msb:Property" />
     <xs:element name="UseWPF" type="msb:boolean" substitutionGroup="msb:Property" />
     <xs:element name="UseVSHostingProcess" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
-    <xs:element name="UTF8OutPut" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
+    <xs:element name="UTF8Output" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="VCTargetsPath" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="VSTO_TrustAssembliesLocation" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>
     <xs:element name="WarningLevel" type="msb:StringPropertyType" substitutionGroup="msb:Property">
@@ -2279,6 +2293,111 @@ elementFormDefault="qualified">
         </xs:annotation>
     </xs:element>
 
+    <!-- ======================== TESTING PROPERTIES ======================== -->
+    <xs:element name="UseVSTest" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="UseVSTest" _locComment="" -->Set to 'true' to use VSTest. The default is 'false' which uses MSTest runner. This property is only applicable when using MSTest.Sdk.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="EnableMSTestRunner" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnableMSTestRunner" _locComment="" -->Enables or disables the use of the MSTest runner. The default is 'true' when using MSTest.Sdk, and 'false' otherwise. Supported in MSTest 3.2 and later versions.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="GenerateTestingPlatformEntryPoint" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="GenerateTestingPlatformEntryPoint" _locComment="" -->Set this property to 'false' to disable the automatic generation of entry point for Microsoft.Testing.Platform.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="GenerateSelfRegisteredExtensions" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="GenerateSelfRegisteredExtensions" _locComment="" -->Set this property to 'false' to disable auto registration of extensions through the 'AddSelfRegisteredExtensions'.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="GenerateProgramFile" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="GenerateProgramFile" _locComment="" -->Set this property to 'false' to disable the automatic generation of entry point for VSTest.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <!-- Not documenting DisableTestingPlatformServerCapability intentionally for now. We don't expect any one to need it. -->
+    <xs:element name="TestingExtensionsProfile" substitutionGroup="msb:Property">
+      <xs:annotation>
+        <xs:documentation><!-- _locID_text="TestingExtensionsProfile" _locComment="" -->Controls the set of extensions that are enabled. Note that 'AllMicrosoft' enables all extensions, even those with a restrictive license.</xs:documentation>
+      </xs:annotation>
+      <xs:simpleType>
+        <xs:restriction base="xs:string">
+          <xs:enumeration value="Default" />
+          <xs:enumeration value="None" />
+          <xs:enumeration value="AllMicrosoft" />
+        </xs:restriction>
+      </xs:simpleType>
+    </xs:element>
+    <xs:element name="EnableMicrosoftTestingExtensionsCrashDump" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnableMicrosoftTestingExtensionsCrashDump" _locComment="" -->Enables the Microsoft.Testing.Extensions.CrashDump extension. This is not supported by VSTest.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="EnableMicrosoftTestingExtensionsCodeCoverage" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnableMicrosoftTestingExtensionsCodeCoverage" _locComment="" -->Enables the Microsoft.Testing.Extensions.CodeCoverage extension. This is not supported by VSTest</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="EnableMicrosoftTestingExtensionsTrxReport" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnableMicrosoftTestingExtensionsTrxReport" _locComment="" -->Enables the Microsoft.Testing.Extensions.TrxReport extension. This is not supported by VSTest.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="EnableMicrosoftTestingExtensionsHangDump" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnableMicrosoftTestingExtensionsHangDump" _locComment="" -->Enables the Microsoft.Testing.Extensions.HangDump extension. This is not supported by VSTest.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="EnableMicrosoftTestingExtensionsHotReload" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnableMicrosoftTestingExtensionsHotReload" _locComment="" -->Enables the Microsoft.Testing.Extensions.HotReload extension (it has restrictive license). This is not supported by VSTest.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="EnableMicrosoftTestingExtensionsRetry" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnableMicrosoftTestingExtensionsRetry" _locComment="" -->Enables the Microsoft.Testing.Extensions.Retry extension (it has restrictive license). This is not supported by VSTest.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="EnableAspireTesting" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnableAspireTesting" _locComment="" -->Enables the testing support for .NET Aspire application model. This adds a reference to 'Aspire.Hosting.Testing' NuGet package.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="EnablePlaywright" type="msb:boolean" substitutionGroup="msb:Property">
+        <xs:annotation>
+            <xs:documentation><!-- _locID_text="EnablePlaywright" _locComment="" -->Enables end-to-end testing for modern web apps using Playwright. This adds a reference to 'Microsoft.Playwright.MSTest' NuGet package.</xs:documentation>
+        </xs:annotation>
+    </xs:element>
+    <xs:element name="IsTestingPlatformApplication" type="msb:boolean" substitutionGroup="msb:Property">
+      <xs:annotation>
+        <xs:documentation><!-- _locID_text="IsTestingPlatformApplication" _locComment="" -->Controls whether the application is a test application. Set it to 'false' in a non-test project that references a test project to avoid error CS8892.</xs:documentation>
+      </xs:annotation>
+    </xs:element>
+    <xs:element name="TestingPlatformCommandLineArguments" type="msb:StringPropertyType" substitutionGroup="msb:Property">
+      <xs:annotation>
+        <xs:documentation><!-- _locID_text="TestingPlatformCommandLineArguments" _locComment="" -->The command-line arguments to pass for the test executable. This is not supported by VSTest.</xs:documentation>
+      </xs:annotation>
+    </xs:element>
+    <xs:element name="TestingPlatformCaptureOutput" type="msb:boolean" substitutionGroup="msb:Property">
+      <xs:annotation>
+        <xs:documentation><!-- _locID_text="TestingPlatformCaptureOutput" _locComment="" -->This property controls whether all console output that a test executable writes is captured and hidden from the user when you use 'dotnet test' to run 'Microsoft.Testing.Platform' tests. By default, the console output is hidden. This is not supported by VSTest.</xs:documentation>
+      </xs:annotation>
+    </xs:element>
+    <xs:element name="TestingPlatformDotnetTestSupport" type="msb:boolean" substitutionGroup="msb:Property">
+      <xs:annotation>
+        <xs:documentation><!-- _locID_text="TestingPlatformDotnetTestSupport" _locComment="" -->This property controls whether VSTest is used when you use 'dotnet test' to run tests. If you set this property to 'true', VSTest is disabled and all 'Microsoft.Testing.Platform' tests are run directly. This is not supported by VSTest.</xs:documentation>
+      </xs:annotation>
+    </xs:element>
+    <xs:element name="TestingPlatformShowTestsFailure" type="msb:boolean" substitutionGroup="msb:Property">
+      <xs:annotation>
+        <xs:documentation><!-- _locID_text="TestingPlatformShowTestsFailure" _locComment="" -->This property controls whether a single failure or all errors in a failed test are reported when you use `dotnet test` to run tests. By default, test failures are summarized into a log file, and a single failure per test project is reported to MSBuild. To show errors per failed test, set this property to 'true'. This is not supported by VSTest.</xs:documentation>
+      </xs:annotation>
+    </xs:element>
+
     <!-- ======================== gRPC properties ======================== -->
     <xs:element name="DisableProtobufDesignTimeBuild" type="msb:boolean" substitutionGroup="msb:Property">
         <xs:annotation>
diff --git a/src/MSBuild/Resources/Strings.resx b/src/MSBuild/Resources/Strings.resx
index 0a0ac48dc13..ece0160d846 100644
--- a/src/MSBuild/Resources/Strings.resx
+++ b/src/MSBuild/Resources/Strings.resx
@@ -1661,6 +1661,12 @@
       's' should reflect the localized abbreviation for seconds
     </comment>
   </data>
+  <data name="BuildSummary" xml:space="preserve">
+    <value>Build summary:</value>
+    <comment>
+      A header used by Terminal Logger to introduce the build summary.
+    </comment>
+  </data>
   <data name="BuildResult_FailedWithErrors" xml:space="preserve">
     <value>failed with {0} error(s)</value>
     <comment>
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index f3239abb2cb..cf608d268e5 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -65,6 +65,13 @@
         <target state="translated">akce proběhla úspěšně s {0} upozorněním(i).</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Souhrn sestavení:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index d7fb58897c7..8cdef174367 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -65,6 +65,13 @@
         <target state="translated">erfolgreich mit {0} Warnung(en)</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Build-Zusammenfassung:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index fc01707fc5d..ed508d49fd7 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -65,6 +65,13 @@
         <target state="translated">correcto con {0} advertencias</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Resumen de la compilación:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 83094e546db..eec15d4d2ff 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -65,6 +65,13 @@
         <target state="translated">a réussi avec {0} avertissement(s)</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Résumé de la build :</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index 6c513308d99..1700cf2e875 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -65,6 +65,13 @@
         <target state="translated">completato con {0} avvisi</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Riepilogo build:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index 6755b1fc171..0681526a4e5 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -65,6 +65,13 @@
         <target state="translated">{0} 件の警告付きで成功しました</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">ビルドの概要:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 9e8b9de1dfa..276327b19c2 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -65,6 +65,13 @@
         <target state="translated">{0} 경고와 함께 성공</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">빌드 요약:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index 815886c7de9..36da70fd656 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -65,6 +65,13 @@
         <target state="translated">zakończono powodzeniem, z ostrzeżeniami w liczbie: {0}</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Podsumowanie kompilacji:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index d5738d0f8e9..44f14597a37 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -65,6 +65,13 @@
         <target state="translated">êxito(s) com {0} aviso(s)</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Resumo da compilação:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index eabd3b267b5..3e5f3a5c98f 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -65,6 +65,13 @@
         <target state="translated">успешно выполнено с предупреждениями ({0})</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Сводка сборки:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index eb4eb23bfba..62c19884023 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -65,6 +65,13 @@
         <target state="translated">{0} uyarıyla başarılı oldu</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">Derleme özeti:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index 3f343348633..464d639afcd 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -65,6 +65,13 @@
         <target state="translated">成功，出现 {0} 警告</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">生成摘要:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index f14b8436e8b..43815fdeb50 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -65,6 +65,13 @@
         <target state="translated">成功但有 {0} 個警告</target>
         <note>
       Part of Terminal Logger summary message: "Build {BuildResult_X} in {duration}s"
+    </note>
+      </trans-unit>
+      <trans-unit id="BuildSummary">
+        <source>Build summary:</source>
+        <target state="translated">組建摘要:</target>
+        <note>
+      A header used by Terminal Logger to introduce the build summary.
     </note>
       </trans-unit>
       <trans-unit id="CommandLine">
diff --git a/src/MSBuild/TerminalLogger/Project.cs b/src/MSBuild/TerminalLogger/Project.cs
index eabfd989c3e..e32d3686dc7 100644
--- a/src/MSBuild/TerminalLogger/Project.cs
+++ b/src/MSBuild/TerminalLogger/Project.cs
@@ -4,6 +4,7 @@
 using System;
 using System.Collections.Generic;
 using System.Diagnostics;
+using System.Linq;
 
 namespace Microsoft.Build.Logging.TerminalLogger;
 
@@ -12,12 +13,15 @@ namespace Microsoft.Build.Logging.TerminalLogger;
 /// </summary>
 internal sealed class Project
 {
+    private List<BuildMessage>? _buildMessages;
+
     /// <summary>
     /// Initialized a new <see cref="Project"/> with the given <paramref name="targetFramework"/>.
     /// </summary>
     /// <param name="targetFramework">The target framework of the project or null if not multi-targeting.</param>
-    public Project(string? targetFramework, StopwatchAbstraction? stopwatch)
+    public Project(string projectFile, string? targetFramework, StopwatchAbstraction? stopwatch)
     {
+        File = projectFile;
         TargetFramework = targetFramework;
 
         if (stopwatch is not null)
@@ -31,6 +35,8 @@ public Project(string? targetFramework, StopwatchAbstraction? stopwatch)
         }
     }
 
+    public string File { get; }
+
     /// <summary>
     /// A stopwatch to time the build of the project.
     /// </summary>
@@ -56,17 +62,59 @@ public Project(string? targetFramework, StopwatchAbstraction? stopwatch)
     /// </summary>
     public bool IsCachePluginProject { get; set; }
 
+    /// <summary>
+    /// True if project built successfully; otherwise false.
+    /// </summary>
+    public bool Succeeded { get; set; }
+
+    /// <summary>
+    /// The number of errors raised during the build of the project.
+    /// </summary>
+    public int ErrorCount { get; private set; }
+
+    /// <summary>
+    /// The number of warnings raised during the build of the project.
+    /// </summary>
+    public int WarningCount { get; private set; }
+
+    /// <summary>
+    /// True when the project has error or warning build messages; otherwise false.
+    /// </summary>
+    public bool HasErrorsOrWarnings => ErrorCount > 0 || WarningCount > 0;
+
     /// <summary>
     /// A lazily initialized list of build messages/warnings/errors raised during the build.
     /// </summary>
-    public List<BuildMessage>? BuildMessages { get; private set; }
+    public IReadOnlyList<BuildMessage>? BuildMessages => _buildMessages;
 
     /// <summary>
     /// Adds a build message of the given severity to <see cref="BuildMessages"/>.
     /// </summary>
     public void AddBuildMessage(MessageSeverity severity, string message)
     {
-        BuildMessages ??= new List<BuildMessage>();
-        BuildMessages.Add(new BuildMessage(severity, message));
+        _buildMessages ??= new List<BuildMessage>();
+        _buildMessages.Add(new BuildMessage(severity, message));
+
+        if (severity == MessageSeverity.Error)
+        {
+            ErrorCount++;
+        }
+        else if (severity == MessageSeverity.Warning)
+        {
+            WarningCount++;
+        }
+    }
+
+    /// <summary>
+    /// Filters the build messages to only include errors and warnings.
+    /// </summary>
+    /// <returns>A sequence of error and warning build messages.</returns>
+    public IEnumerable<BuildMessage> GetBuildErrorAndWarningMessages()
+    {
+        return BuildMessages is null ?
+            Enumerable.Empty<BuildMessage>() :
+            BuildMessages.Where(message =>
+                message.Severity == MessageSeverity.Error ||
+                message.Severity == MessageSeverity.Warning);
     }
 }
diff --git a/src/MSBuild/TerminalLogger/TerminalLogger.cs b/src/MSBuild/TerminalLogger/TerminalLogger.cs
index 85a4baf1e08..d4dc4346cf9 100644
--- a/src/MSBuild/TerminalLogger/TerminalLogger.cs
+++ b/src/MSBuild/TerminalLogger/TerminalLogger.cs
@@ -221,6 +221,11 @@ public ProjectContext(BuildEventContext context)
     /// </summary>
     private bool _showCommandLine = false;
 
+    /// <summary>
+    /// Indicates whether to show the build summary.
+    /// </summary>
+    private bool? _showSummary;
+
     private uint? _originalConsoleMode;
 
     /// <summary>
@@ -320,6 +325,12 @@ private void ApplyParameter(string parameterName, string? parameterValue)
             case "SHOWCOMMANDLINE":
                 TryApplyShowCommandLineParameter(parameterValue);
                 break;
+            case "SUMMARY":
+                _showSummary = true;
+                break;
+            case "NOSUMMARY":
+                _showSummary = false;
+                break;
         }
     }
 
@@ -334,9 +345,7 @@ private void ApplyVerbosityParameter(string? parameterValue)
         }
         else
         {
-            string errorCode;
-            string helpKeyword;
-            string message = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(out errorCode, out helpKeyword, "InvalidVerbosity", parameterValue);
+            string message = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(out string errorCode, out string helpKeyword, "InvalidVerbosity", parameterValue);
             throw new LoggerException(message, null, errorCode, helpKeyword);
         }
     }
@@ -401,15 +410,13 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
         _cts.Cancel();
         _refresher?.Join();
 
-        _projects.Clear();
-
         Terminal.BeginUpdate();
         try
         {
             if (Verbosity > LoggerVerbosity.Quiet)
             {
                 string duration = (e.Timestamp - _buildStartTime).TotalSeconds.ToString("F1");
-                string buildResult = RenderBuildResult(e.Succeeded, _buildErrorsCount, _buildWarningsCount);
+                string buildResult = GetBuildResultString(e.Succeeded, _buildErrorsCount, _buildWarningsCount);
 
                 Terminal.WriteLine("");
                 if (_testRunSummaries.Any())
@@ -437,6 +444,11 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
                     Terminal.WriteLine(string.Join(CultureInfo.CurrentCulture.TextInfo.ListSeparator + " ", summaryAndTotalText, failedText, passedText, skippedText, durationText));
                 }
 
+                if (_showSummary == true)
+                {
+                    RenderBuildSummary();
+                }
+
                 if (_restoreFailed)
                 {
                     Terminal.WriteLine(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("RestoreCompleteWithMessage",
@@ -461,6 +473,7 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
             Terminal.EndUpdate();
         }
 
+        _projects.Clear();
         _testRunSummaries.Clear();
         _buildErrorsCount = 0;
         _buildWarningsCount = 0;
@@ -469,6 +482,33 @@ private void BuildFinished(object sender, BuildFinishedEventArgs e)
         _testEndTime = null;
     }
 
+    private void RenderBuildSummary()
+    {
+        if (_buildErrorsCount == 0 && _buildWarningsCount == 0)
+        {
+            // No errors/warnings to display.
+            return;
+        }
+
+        Terminal.WriteLine(ResourceUtilities.GetResourceString("BuildSummary"));
+
+        foreach (Project project in _projects.Values.Where(p => p.HasErrorsOrWarnings))
+        {
+            string duration = project.Stopwatch.ElapsedSeconds.ToString("F1");
+            string buildResult = GetBuildResultString(project.Succeeded, project.ErrorCount, project.WarningCount);
+            string projectHeader = GetProjectFinishedHeader(project, buildResult, duration);
+
+            Terminal.WriteLine(projectHeader);
+
+            foreach (BuildMessage buildMessage in project.GetBuildErrorAndWarningMessages())
+            {
+                Terminal.WriteLine($"{DoubleIndentation}{buildMessage.Message}");
+            }
+        }
+
+        Terminal.WriteLine(string.Empty);
+    }
+
     private void StatusEventRaised(object sender, BuildStatusEventArgs e)
     {
         if (e is BuildCanceledEventArgs buildCanceledEventArgs)
@@ -496,7 +536,7 @@ private void ProjectStarted(object sender, ProjectStartedEventArgs e)
             {
                 targetFramework = null;
             }
-            _projects[c] = new(targetFramework, CreateStopwatch?.Invoke());
+            _projects[c] = new(e.ProjectFile!, targetFramework, CreateStopwatch?.Invoke());
 
             // First ever restore in the build is starting.
             if (e.TargetNames == "Restore" && !_restoreFinished)
@@ -535,6 +575,8 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
 
         if (_projects.TryGetValue(c, out Project? project))
         {
+            project.Succeeded = e.Succeeded;
+            project.Stopwatch.Stop();
             lock (_lock)
             {
                 Terminal.BeginUpdate();
@@ -545,26 +587,16 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
                     string duration = project.Stopwatch.ElapsedSeconds.ToString("F1");
                     ReadOnlyMemory<char>? outputPath = project.OutputPath;
 
-                    string projectFile = e.ProjectFile is not null ?
-                        Path.GetFileNameWithoutExtension(e.ProjectFile) :
-                        string.Empty;
-
                     // Build result. One of 'failed', 'succeeded with warnings', or 'succeeded' depending on the build result and diagnostic messages
                     // reported during build.
-                    int countErrors = project.BuildMessages?.Count(m => m.Severity == MessageSeverity.Error) ?? 0;
-                    int countWarnings = project.BuildMessages?.Count(m => m.Severity == MessageSeverity.Warning) ?? 0;
-
-                    string buildResult = RenderBuildResult(e.Succeeded, countErrors, countWarnings);
-
-                    bool haveErrors = countErrors > 0;
-                    bool haveWarnings = countWarnings > 0;
+                    string buildResult = GetBuildResultString(project.Succeeded, project.ErrorCount, project.WarningCount);
 
                     // Check if we're done restoring.
                     if (c == _restoreContext)
                     {
                         if (e.Succeeded)
                         {
-                            if (haveErrors || haveWarnings)
+                            if (project.HasErrorsOrWarnings)
                             {
                                 Terminal.WriteLine(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("RestoreCompleteWithMessage",
                                     buildResult,
@@ -591,46 +623,8 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
                     else if (project.OutputPath is not null || project.BuildMessages is not null || project.IsTestProject)
                     {
                         // Show project build complete and its output
-                        if (project.IsTestProject)
-                        {
-                            if (string.IsNullOrEmpty(project.TargetFramework))
-                            {
-                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("TestProjectFinished_NoTF",
-                                    Indentation,
-                                    projectFile,
-                                    buildResult,
-                                    duration));
-                            }
-                            else
-                            {
-                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("TestProjectFinished_WithTF",
-                                    Indentation,
-                                    projectFile,
-                                    AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
-                                    buildResult,
-                                    duration));
-                            }
-                        }
-                        else
-                        {
-                            if (string.IsNullOrEmpty(project.TargetFramework))
-                            {
-                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectFinished_NoTF",
-                                    Indentation,
-                                    projectFile,
-                                    buildResult,
-                                    duration));
-                            }
-                            else
-                            {
-                                Terminal.Write(ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectFinished_WithTF",
-                                    Indentation,
-                                    projectFile,
-                                    AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
-                                    buildResult,
-                                    duration));
-                            }
-                        }
+                        string projectFinishedHeader = GetProjectFinishedHeader(project, buildResult, duration);
+                        Terminal.Write(projectFinishedHeader);
 
                         // Print the output path as a link if we have it.
                         if (outputPath is not null)
@@ -685,8 +679,8 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
                         }
                     }
 
-                    _buildErrorsCount += countErrors;
-                    _buildWarningsCount += countWarnings;
+                    _buildErrorsCount += project.ErrorCount;
+                    _buildWarningsCount += project.WarningCount;
 
                     DisplayNodes();
                 }
@@ -698,6 +692,35 @@ private void ProjectFinished(object sender, ProjectFinishedEventArgs e)
         }
     }
 
+    private static string GetProjectFinishedHeader(Project project, string buildResult, string duration)
+    {
+        string projectFile = project.File is not null ?
+            Path.GetFileNameWithoutExtension(project.File) :
+            string.Empty;
+
+        if (string.IsNullOrEmpty(project.TargetFramework))
+        {
+            string resourceName = project.IsTestProject ? "TestProjectFinished_NoTF" : "ProjectFinished_NoTF";
+
+            return ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(resourceName,
+                Indentation,
+                projectFile,
+                buildResult,
+                duration);
+        }
+        else
+        {
+            string resourceName = project.IsTestProject ? "TestProjectFinished_WithTF" : "ProjectFinished_WithTF";
+
+            return ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(resourceName,
+                Indentation,
+                projectFile,
+                AnsiCodes.Colorize(project.TargetFramework, TargetFrameworkColor),
+                buildResult,
+                duration);
+        }
+    }
+
     /// <summary>
     /// The <see cref="IEventSource.TargetStarted"/> callback.
     /// </summary>
@@ -1051,12 +1074,12 @@ private void EraseNodes()
     #region Helpers
 
     /// <summary>
-    /// Print a build result summary to the output.
+    /// Construct a build result summary string.
     /// </summary>
     /// <param name="succeeded">True if the build completed with success.</param>
     /// <param name="hasError">True if the build has logged at least one error.</param>
     /// <param name="hasWarning">True if the build has logged at least one warning.</param>
-    private string RenderBuildResult(bool succeeded, int countErrors, int countWarnings)
+    private static string GetBuildResultString(bool succeeded, int countErrors, int countWarnings)
     {
         if (!succeeded)
         {
diff --git a/src/Shared/Constants.cs b/src/Shared/Constants.cs
index e0ac6bae417..1139c492224 100644
--- a/src/Shared/Constants.cs
+++ b/src/Shared/Constants.cs
@@ -142,6 +142,8 @@ internal static class PropertyNames
 
         internal const string InnerBuildProperty = nameof(InnerBuildProperty);
         internal const string InnerBuildPropertyValues = nameof(InnerBuildPropertyValues);
+        internal const string TargetFrameworks = nameof(TargetFrameworks);
+        internal const string TargetFramework = nameof(TargetFramework);
     }
 
     // TODO: Remove these when VS gets updated to setup project cache plugins.
@@ -205,6 +207,8 @@ internal static class ItemMetadataNames
         internal const string publicKeyToken = "PublicKeyToken";
         internal const string culture = "Culture";
         internal const string withCulture = "WithCulture";
+        internal const string copyToOutputDirectory = "CopyToOutputDirectory";
+        internal const string copyAlways = "Always";
 
         /// <summary>
         /// The output path for a given item.
@@ -234,4 +238,16 @@ internal static class ItemMetadataNames
         internal const string AdditionalPropertiesMetadataName = "AdditionalProperties";
         internal const string ProjectConfigurationDescription = "ProjectConfigurationDescription";
     }
+
+    /// <summary>
+    /// Constants naming well-known items.
+    /// </summary>
+    internal static class ItemNames
+    {
+        internal const string Compile = "Compile";
+        internal const string Content = "Content";
+        internal const string EmbeddedResource = "EmbeddedResource";
+        internal const string None = "None";
+        internal const string Reference = "Reference";
+    }
 }
diff --git a/src/Shared/StringExtensions.cs b/src/Shared/StringExtensions.cs
index 7f7c41f8ebc..6ca90bbf3d1 100644
--- a/src/Shared/StringExtensions.cs
+++ b/src/Shared/StringExtensions.cs
@@ -92,5 +92,22 @@ public static void WriteLine(this TextWriter writer, ReadOnlySpan<char> buffer)
             writer.WriteLine(buffer.ToString());
         }
 #endif
+
+        /// <summary>
+        /// Converts a string to a bool.  We consider "true/false", "on/off", and
+        /// "yes/no" to be valid boolean representations in the XML. The '!' prefix for negation is allowed as well.
+        /// Unrecognized values lead to exception
+        /// </summary>
+        /// <exception cref="ArgumentException">Thrown when given argument is unrecognized MSBuild boolean string.</exception>
+        public static bool IsMSBuildTrueString(this string msbuildString) =>
+            ConversionUtilities.ConvertStringToBool(msbuildString, nullOrWhitespaceIsFalse: true);
+
+        /// <summary>
+        /// Converts a string to a bool.  We consider "true/false", "on/off", and
+        /// "yes/no" to be valid boolean representations in the XML. The '!' prefix for negation is allowed as well.
+        /// Unrecognized values lead to exception
+        /// </summary>
+        /// <exception cref="ArgumentException">Thrown when given argument is unrecognized MSBuild boolean string.</exception>
+        public static bool IsMSBuildFalseString(this string msbuildString) => !IsMSBuildTrueString(msbuildString);
     }
 }
diff --git a/src/Shared/StringUtils.cs b/src/Shared/StringUtils.cs
new file mode 100644
index 00000000000..10152956f27
--- /dev/null
+++ b/src/Shared/StringUtils.cs
@@ -0,0 +1,57 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System;
+
+namespace Microsoft.Build.Shared
+{
+    internal static class StringUtils
+    {
+        /// <summary>
+        /// Generates a random string of the specified length.
+        /// The generated string is suitable for use in file paths.
+        /// The randomness distribution is given by the System.Random.
+        /// </summary>
+        /// <param name="length">The length of the string.</param>
+        /// <returns>Random generated string of the specified length.</returns>
+        public static string GenerateRandomString(int length)
+        {
+            // Base64, 2^6 = 64
+            const int eachStringCharEncodesBites = 6;
+            const int eachByteHasBits = 8;
+            const double bytesNumNeededForSingleStringChar = eachStringCharEncodesBites / (double)eachByteHasBits;
+
+            int randomBytesNeeded = (int)Math.Ceiling(length * bytesNumNeededForSingleStringChar);
+            Random random = new();
+
+            byte[] randomBytes = new byte[randomBytesNeeded];
+            random.NextBytes(randomBytes);
+
+            // Base64: [A-Z], [a-z], [0-9], +, /, =
+            // We are replacing '/' to get a valid path
+            string randomBase64String = Convert.ToBase64String(randomBytes).Replace('/', '_');
+
+            return randomBase64String.Substring(0, length);
+        }
+
+        /// <summary>
+        /// Removes last occurrence of <paramref name="substring"/> from <paramref name="fromString"/>, if present.
+        /// </summary>
+        /// <param name="fromString">String to be altered.</param>
+        /// <param name="substring">String to be removed.</param>
+        /// <param name="comparison">The comparison to use for finding.</param>
+        /// <returns>The original string (if no occurrences found) or a new string, with last instance of <paramref name="substring"/> removed.</returns>
+        public static string RemoveLastInstanceOf(this string fromString, string substring, StringComparison comparison = StringComparison.Ordinal)
+        {
+            int lastOccurrenceIndex = fromString.LastIndexOf(substring, comparison);
+
+            if (lastOccurrenceIndex != -1)
+            {
+                fromString = fromString.Substring(0, lastOccurrenceIndex) +
+                             fromString.Substring(lastOccurrenceIndex + substring.Length);
+            }
+
+            return fromString;
+        }
+    }
+}
diff --git a/src/Shared/TaskLoggingHelper.cs b/src/Shared/TaskLoggingHelper.cs
index ebdfc1c2f2b..979319e5d36 100644
--- a/src/Shared/TaskLoggingHelper.cs
+++ b/src/Shared/TaskLoggingHelper.cs
@@ -4,6 +4,7 @@
 using System;
 using System.Collections.Generic;
 using System.Diagnostics;
+using System.Diagnostics.CodeAnalysis;
 using System.Globalization;
 using System.IO;
 using System.Resources;
@@ -219,7 +220,7 @@ public virtual string FormatResourceString(string resourceName, params object[]
         /// <param name="args">Arguments for formatting.</param>
         /// <returns>The formatted string.</returns>
         /// <exception cref="ArgumentNullException">Thrown when <c>unformatted</c> is null.</exception>
-        public virtual string FormatString(string unformatted, params object[] args)
+        public virtual string FormatString([StringSyntax(StringSyntaxAttribute.CompositeFormat)] string unformatted, params object[] args)
         {
             ErrorUtilities.VerifyThrowArgumentNull(unformatted);
 
@@ -265,7 +266,7 @@ public bool LogsMessagesOfImportance(MessageImportance importance)
         /// <param name="message">The message string.</param>
         /// <param name="messageArgs">Optional arguments for formatting the message string.</param>
         /// <exception cref="ArgumentNullException">Thrown when <c>message</c> is null.</exception>
-        public void LogMessage(string message, params object[] messageArgs)
+        public void LogMessage([StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message, params object[] messageArgs)
         {
             // This API is poorly designed, because parameters misordered like LogMessage(message, MessageImportance.High)
             // will use this overload, ignore the importance and accidentally format the string.
@@ -287,7 +288,7 @@ public void LogMessage(string message, params object[] messageArgs)
         /// <param name="message">The message string.</param>
         /// <param name="messageArgs">Optional arguments for formatting the message string.</param>
         /// <exception cref="ArgumentNullException">Thrown when <c>message</c> is null.</exception>
-        public void LogMessage(MessageImportance importance, string message, params object[] messageArgs)
+        public void LogMessage(MessageImportance importance, [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message, params object[] messageArgs)
         {
             // No lock needed, as BuildEngine methods from v4.5 onwards are thread safe.
             ErrorUtilities.VerifyThrowArgumentNull(message);
@@ -356,7 +357,7 @@ public void LogMessage(
             int endLineNumber,
             int endColumnNumber,
             MessageImportance importance,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             params object[] messageArgs)
         {
             // No lock needed, as BuildEngine methods from v4.5 onwards are thread safe.
@@ -418,7 +419,7 @@ public void LogCriticalMessage(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             params object[] messageArgs)
         {
             // No lock needed, as BuildEngine methods from v4.5 onwards are thread safe.
@@ -632,7 +633,7 @@ public void LogCommandLine(MessageImportance importance, string commandLine)
         /// <param name="message">The message string.</param>
         /// <param name="messageArgs">Optional arguments for formatting the message string.</param>
         /// <exception cref="ArgumentNullException">Thrown when <c>message</c> is null.</exception>
-        public void LogError(string message, params object[] messageArgs)
+        public void LogError([StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message, params object[] messageArgs)
         {
             LogError(null, null, null, null, null, 0, 0, 0, 0, message, messageArgs);
         }
@@ -661,7 +662,7 @@ public void LogError(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             params object[] messageArgs)
         {
             LogError(subcategory, errorCode, helpKeyword, null, file, lineNumber, columnNumber, endLineNumber, endColumnNumber, message, messageArgs);
@@ -687,13 +688,13 @@ public void LogError(
             string subcategory,
             string errorCode,
             string helpKeyword,
-            string helpLink,
+            [StringSyntax(StringSyntaxAttribute.Uri)] string helpLink,
             string file,
             int lineNumber,
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             params object[] messageArgs)
         {
             // No lock needed, as BuildEngine methods from v4.5 onwards are thread safe.
@@ -983,7 +984,7 @@ public void LogErrorFromException(Exception exception, bool showStackTrace, bool
         /// <param name="message">The message string.</param>
         /// <param name="messageArgs">Optional arguments for formatting the message string.</param>
         /// <exception cref="ArgumentNullException">Thrown when <c>message</c> is null.</exception>
-        public void LogWarning(string message, params object[] messageArgs)
+        public void LogWarning([StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message, params object[] messageArgs)
         {
             LogWarning(null, null, null, null, 0, 0, 0, 0, message, messageArgs);
         }
@@ -1012,7 +1013,7 @@ public void LogWarning(
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             params object[] messageArgs)
         {
             LogWarning(subcategory, warningCode, helpKeyword, null, file, lineNumber, columnNumber, endLineNumber, endColumnNumber, message, messageArgs);
@@ -1038,13 +1039,13 @@ public void LogWarning(
             string subcategory,
             string warningCode,
             string helpKeyword,
-            string helpLink,
+            [StringSyntax(StringSyntaxAttribute.Uri)] string helpLink,
             string file,
             int lineNumber,
             int columnNumber,
             int endLineNumber,
             int endColumnNumber,
-            string message,
+            [StringSyntax(StringSyntaxAttribute.CompositeFormat)] string message,
             params object[] messageArgs)
         {
             // No lock needed, as BuildEngine methods from v4.5 onwards are thread safe.
diff --git a/src/Shared/XMakeElements.cs b/src/Shared/XMakeElements.cs
index 15938e97587..991feb5796c 100644
--- a/src/Shared/XMakeElements.cs
+++ b/src/Shared/XMakeElements.cs
@@ -35,25 +35,25 @@ internal static class XMakeElements
         internal const string usingTaskBody = "Task";
         internal const string sdk = "Sdk";
 
-        internal static readonly char[] InvalidTargetNameCharacters = { '$', '@', '(', ')', '%', '*', '?', '.' };
+        internal static readonly char[] InvalidTargetNameCharacters = [ '$', '@', '(', ')', '%', '*', '?', '.' ];
 
         // Names that cannot be used as property or item names because they are reserved
-        internal static readonly HashSet<string> ReservedItemNames = new HashSet<string>
-        {
-            // XMakeElements.project, "Project" is not reserved, because unfortunately ProjectReference items already use it as metadata name.
-            XMakeElements.visualStudioProject,
-            XMakeElements.target,
-            XMakeElements.propertyGroup,
-            XMakeElements.output,
-            XMakeElements.itemGroup,
-            XMakeElements.usingTask,
-            XMakeElements.projectExtensions,
-            XMakeElements.onError,
-            // XMakeElements.import "Import" items are used by Visual Basic projects
-            XMakeElements.importGroup,
-            XMakeElements.choose,
-            XMakeElements.when,
-            XMakeElements.otherwise
-        };
+        internal static readonly HashSet<string> ReservedItemNames =
+        [
+            // project, "Project" is not reserved, because unfortunately ProjectReference items already use it as metadata name.
+            visualStudioProject,
+            target,
+            propertyGroup,
+            output,
+            itemGroup,
+            usingTask,
+            projectExtensions,
+            onError,
+            // import, "Import" items are used by Visual Basic projects
+            importGroup,
+            choose,
+            when,
+            otherwise,
+        ];
     }
 }
diff --git a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
index 38842eb5eba..164f91774e0 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
@@ -4888,37 +4888,28 @@ public void Regress276548_AssemblyNameDifferentThanFusionName()
         [Fact]
         public void Regress314573_VeryLongPaths()
         {
-            string veryLongPath = @"C:\" + new String('a', 260);
-            string veryLongFile = veryLongPath + "\\A.dll";
+            string veryLongPath = @"C:\" + new string('a', 260);
+            string veryLongFile = veryLongPath + @"\A.dll";
 
             ResolveAssemblyReference t = new ResolveAssemblyReference();
 
-            MockEngine e = new MockEngine(_output);
+            MockEngine e = new (_output);
             t.BuildEngine = e;
 
-            t.Assemblies = new ITaskItem[]
-            {
-                new TaskItem("A")                    // Resolved by HintPath
-            };
+            t.Assemblies = [new TaskItem("A")]; // Resolved by HintPath
             t.Assemblies[0].SetMetadata(
                 "HintPath",
                 veryLongFile);
 
-            t.SearchPaths = new string[]
-            {
-                "{HintPathFromItem}"
-            };
-
-            t.AssemblyFiles = new ITaskItem[]
-            {
-                new TaskItem(veryLongFile)            // Resolved as File Reference
-            };
+            t.SearchPaths = ["{HintPathFromItem}"];
 
-            Execute(t);
+            t.AssemblyFiles = [new TaskItem(veryLongFile)]; // Resolved as File Reference
 
-            Assert.Equal(1, e.Warnings); // "One warning expected in this scenario." // Couldn't find dependencies for {HintPathFromItem}-resolved item.
-            Assert.Equal(0, e.Errors); // "No errors expected in this scenario."
-            Assert.Empty(t.ResolvedFiles);  // This test used to have 1 here. But that was because the mock GetAssemblyName was not accurately throwing an exception for non-existent files.
+            e.ShouldSatisfyAllConditions(
+                () => Execute(t).ShouldBeTrue(),
+                () => e.Warnings.ShouldBe(1, "One warning expected in this scenario."), // Couldn't find dependencies for {HintPathFromItem}-resolved item.
+                () => e.Errors.ShouldBe(0, "No errors expected in this scenario."),
+                () => t.ResolvedFiles.ShouldBeEmpty());
         }
 
         /// <summary>
diff --git a/src/Tasks.UnitTests/CodeTaskFactoryTests.cs b/src/Tasks.UnitTests/CodeTaskFactoryTests.cs
index 45abf799bd9..62d695d5632 100644
--- a/src/Tasks.UnitTests/CodeTaskFactoryTests.cs
+++ b/src/Tasks.UnitTests/CodeTaskFactoryTests.cs
@@ -283,30 +283,34 @@ public void EmptySource()
         /// <summary>
         /// Verify we get an error if a reference is missing an include attribute is set but it is empty
         /// </summary>
-        [Fact]
-        public void EmptyReferenceInclude()
+        [Theory]
+        [InlineData("")]
+        [InlineData("Include=\"\"")]
+        [InlineData("Include=\" \"")]
+        public void EmptyReferenceInclude(string includeSetting)
         {
-            string projectFileContents = @"
+            string taskName = "CustomTaskFromCodeFactory_EmptyReferenceInclude";
+            string projectFileContents = @$"
                     <Project ToolsVersion='msbuilddefaulttoolsversion'>
-                        <UsingTask TaskName=`CustomTaskFromCodeFactory_EmptyReferenceInclude` TaskFactory=`CodeTaskFactory` AssemblyFile=`$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll` >
+                        <UsingTask TaskName=`{taskName}` TaskFactory=`CodeTaskFactory` AssemblyFile=`$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll` >
                          <ParameterGroup>
                              <Text/>
                           </ParameterGroup>
                             <Task>
-                                 <Reference/>
+                                 <Reference {includeSetting}/>
                                 <Code>
                                        Log.LogMessage(MessageImportance.High, Text);
                                 </Code>
                             </Task>
                         </UsingTask>
                         <Target Name=`Build`>
-                            <CustomTaskFromCodeFactory_EmptyReferenceInclude/>
+                            <{taskName}/>
                         </Target>
                     </Project>";
 
             MockLogger mockLogger = Helpers.BuildProjectWithNewOMExpectFailure(projectFileContents, false);
-            string unformattedMessage = ResourceUtilities.GetResourceString("CodeTaskFactory.AttributeEmpty");
-            mockLogger.AssertLogContains(String.Format(unformattedMessage, "Include"));
+            string unformattedMessage = ResourceUtilities.GetResourceString("CodeTaskFactory.AttributeEmptyWithTaskElement");
+            mockLogger.AssertLogContains(String.Format(unformattedMessage, "Include", "Reference", taskName));
         }
 
         /// <summary>
diff --git a/src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs b/src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs
index c03a9e2cde1..cc020da8904 100644
--- a/src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs
+++ b/src/Tasks.UnitTests/MSBuildInternalMessage_Tests.cs
@@ -1,6 +1,7 @@
 ﻿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
+using System.IO;
 using Microsoft.Build.Evaluation;
 using Microsoft.Build.Shared;
 using Microsoft.Build.UnitTests;
@@ -17,8 +18,8 @@ public class MSBuildInternalMessage_Tests
         public MSBuildInternalMessage_Tests(ITestOutputHelper testOutput) => _testOutput = testOutput;
 
         [Theory]
-        [InlineData(true, true, "CommonTarget.Prefer32BitAndPreferNativeArm64Enabled", false)]
-        [InlineData(false, false, "CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled", true, new[] { "Release" })]
+        [InlineData(true, true, "CommonSdk.Prefer32BitAndPreferNativeArm64Enabled", false)]
+        [InlineData(false, false, "CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled", true, new[] { "Release" })]
         public void E2EScenarioTests(bool prefer32, bool isPlatformAnyCpu, string expectedResourceName, bool isNetWarningExpected, string[]? formatArgs = null)
         {
             using (TestEnvironment env = TestEnvironment.Create())
@@ -59,5 +60,233 @@ public void E2EScenarioTests(bool prefer32, bool isPlatformAnyCpu, string expect
                 }
             }
         }
+
+        [Theory]
+        [InlineData(true, "CommonSdk.BaseIntermediateOutputPathMismatchWarning")]
+        [InlineData(false, "CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse")]
+
+        public void BaseIntermediateOutputPathMisMatchWarning(bool isInitialMSBuildProjectExtensionsPathEmpty, string expectedResourceName)
+        {
+            using (TestEnvironment env = TestEnvironment.Create())
+            {
+                var outputPath = env.CreateFolder().Path;
+                string projectContent = $"""
+                <Project>
+                    <Import Project="$(MSBuildBinPath)\Microsoft.Common.props" />
+
+                    <PropertyGroup>
+                        <EnableBaseIntermediateOutputPathMismatchWarning>true</EnableBaseIntermediateOutputPathMismatchWarning>
+                        <_InitialMSBuildProjectExtensionsPath>{(isInitialMSBuildProjectExtensionsPathEmpty ? "" : "obj")}</_InitialMSBuildProjectExtensionsPath>
+                        <MSBuildProjectExtensionsPath></MSBuildProjectExtensionsPath>
+                        <BaseIntermediateOutputPath>obj\Debug\</BaseIntermediateOutputPath>
+                    </PropertyGroup>
+
+                    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+                </Project>
+                """;
+
+                var projectFile = env.CreateFile(env.CreateFolder(), "test.csproj", projectContent).Path;
+                Project project = ObjectModelHelpers.LoadProjectFileInTempProjectDirectory(projectFile, touchProject: false);
+
+                string expectedBuildMessage = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(expectedResourceName);
+                MockLogger logger = new MockLogger(_testOutput);
+
+                project.Build(logger);
+                if (!isInitialMSBuildProjectExtensionsPathEmpty)
+                {
+                    logger.Errors[0].RawMessage.ShouldBe(expectedBuildMessage);
+                }
+                else
+                {
+                    logger.Warnings[0].RawMessage.ShouldBe(expectedBuildMessage);
+                }
+            }
+        }
+
+        [Theory]
+        [InlineData("SetGenerateManifests", "CommonSdk.GenerateManifestsOnlyForExe", false)]
+        [InlineData("SetGenerateManifests", "CommonSdk.SigningKeyRequired", true)]
+        [InlineData("_DeploymentUnpublishable", "CommonSdk.DeploymentUnpublishable")]
+        [InlineData("Run", "CommonSdk.RunTargetDependsOnMessage")]
+        [InlineData("GetTargetFrameworks", "CommonSdk.CrossTargetingGetTargetFrameworks")]
+        [InlineData("ResolveProjectReferences", "CommonSdk.NonExistentProjectReference")]
+        [InlineData("ResolveProjectReferences", "CommonSdk.NonExistentProjectReference", true, false)]
+        public void RunTargetExtError(string targetName, string expectedResourceName, bool outputTypeIsExe = true, bool errorOnMissingProjectReference = true)
+        {
+            using (TestEnvironment env = TestEnvironment.Create())
+            {
+                var outputPath = env.CreateFolder().Path;
+                string projectContent = $"""
+                <Project DefaultTargets="{targetName}">
+                    <Import Project="$(MSBuildBinPath)\Microsoft.Common.props" />
+
+                    <PropertyGroup>
+                        <TargetExt>.txt</TargetExt>
+                        <OutputPath>bin</OutputPath>
+                        <OutputType>{(outputTypeIsExe ? "" : "txt")}</OutputType>
+                        <_DeploymentSignClickOnceManifests>true</_DeploymentSignClickOnceManifests>
+                        <ManifestCertificateThumbprint></ManifestCertificateThumbprint>
+                        <ManifestKeyFile></ManifestKeyFile>
+                        <TargetFrameworks>netcoreapp3.1;net6.0;net7.0</TargetFrameworks>
+                        <ErrorOnMissingProjectReference>{errorOnMissingProjectReference}</ErrorOnMissingProjectReference>
+                    </PropertyGroup>
+
+                    <ItemGroup>
+                        <ProjectReference Include="NonExistent.csproj" />
+                    </ItemGroup>
+
+                    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets"/>
+
+                </Project>
+                """;
+
+                var projectFile = env.CreateFile(env.CreateFolder(), "test.csproj", projectContent).Path;
+                Project project = ObjectModelHelpers.LoadProjectFileInTempProjectDirectory(projectFile, touchProject: false);
+
+                MockLogger logger = new MockLogger(_testOutput);
+
+                string expectedBuildMessage = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(expectedResourceName);
+
+                project.Build(logger);
+                if (expectedResourceName == "CommonSdk.DeploymentUnpublishable")
+                {
+                    logger.FullLog.Contains(expectedBuildMessage);
+                }
+                else if (expectedResourceName == "CommonSdk.RunTargetDependsOnMessage")
+                {
+                    var targetPathParameter = expectedResourceName == "CommonSdk.DeploymentUnpublishable" ? "" : Path.Combine(project.DirectoryPath, "bin", "test.txt");
+                    expectedBuildMessage = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(expectedResourceName, targetPathParameter);
+                    logger.Errors[0].RawMessage.ShouldBe(expectedBuildMessage);
+                }
+                else if (expectedResourceName == "CommonSdk.NonExistentProjectReference")
+                {
+                    expectedBuildMessage = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(expectedResourceName, "NonExistent.csproj");
+                    if (errorOnMissingProjectReference)
+                    {
+                        logger.Errors[0].RawMessage.ShouldBe(expectedBuildMessage);
+                    }
+                    else
+                    {
+                        logger.Warnings[0].RawMessage.ShouldBe(expectedBuildMessage);
+                    }
+                }
+                else
+                {
+                    logger.Errors[0].RawMessage.ShouldBe(expectedBuildMessage);
+                }
+            }
+        }
+
+        /// <summary>
+        /// SkipInvalidConfigurations is true, the output is warning, otherwise is error.
+        /// BuildingInsideVisualStudio is true, the resourceName is CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio, otherwise is CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio
+        /// </summary>
+        /// <param name="expectedResourceName"></param>
+        /// <param name="skipInvalidConfigurations"></param>
+        /// <param name="buildingInsideVisualStudio"></param>
+        [Theory]
+        [InlineData("CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio", false, true)]
+        [InlineData("CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio", true, false)]
+        [InlineData("CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio", false, false)]
+        [InlineData("CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio", true, true)]
+        public void CheckForInvalidConfigurationAndPlatformTargetMessage(string expectedResourceName, bool skipInvalidConfigurations, bool buildingInsideVisualStudio)
+        {
+            using (TestEnvironment env = TestEnvironment.Create())
+            {
+                var outputPath = env.CreateFolder().Path;
+                var fileName = "test.csproj";
+                var configuration = "Release";
+                var platform = "Release";
+                string projectContent = $"""
+                <Project DefaultTargets="Build">
+                    <Import Project="$(MSBuildBinPath)\Microsoft.Common.props" />
+
+                    <PropertyGroup>
+                         <SkipInvalidConfigurations>{skipInvalidConfigurations}</SkipInvalidConfigurations>
+                         <BuildingInsideVisualStudio>{buildingInsideVisualStudio}</BuildingInsideVisualStudio>
+                         <BaseOutputPathWasSpecified>false</BaseOutputPathWasSpecified>
+                         <_OutputPathWasMissing>true</_OutputPathWasMissing>
+                         <Configuration>{configuration}</Configuration>
+                         <Platform>{platform}</Platform>
+                    </PropertyGroup>
+
+                    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets"/>
+
+                </Project>
+                """;
+
+                var projectFile = env.CreateFile(env.CreateFolder(), fileName, projectContent).Path;
+                Project project = ObjectModelHelpers.LoadProjectFileInTempProjectDirectory(projectFile, touchProject: false);
+
+                MockLogger logger = new MockLogger(_testOutput);
+
+                string expectedBuildMessage = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(expectedResourceName, fileName, configuration, platform);
+
+                project.Build(logger);
+                if (skipInvalidConfigurations)
+                {
+                    logger.Warnings[0].RawMessage.ShouldBe(expectedBuildMessage);
+                }
+                else
+                {
+                    logger.Errors[0].RawMessage.ShouldBe(expectedBuildMessage);
+                }
+            }
+        }
+
+        [Theory]
+        [InlineData("MSB9000", "ResxWithNoCulture", "SplitResourcesByCulture", "CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage"),]
+        [InlineData("MSB9001", "ResxWithCulture", "SplitResourcesByCulture", "CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage")]
+        [InlineData("MSB9002", "NonResxWithCulture", "SplitResourcesByCulture", "CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage")]
+        [InlineData("MSB9003", "NonResxWithNoCulture", "SplitResourcesByCulture", "CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage")]
+        [InlineData("MSB9004", "ManifestResourceWithNoCulture", "_GenerateCompileInputs", "CommonSdk.ManifestResourceWithNoCultureWarning")]
+        [InlineData("MSB9005", "ManifestNonResxWithNoCultureOnDisk", "_GenerateCompileInputs", "CommonSdk.ManifestResourceWithNoCultureWarning")]
+        [InlineData("MSB9006", "ManifestResourceWithCulture", "_GenerateSatelliteAssemblyInputs", "CommonSdk.ManifestResourceWithNoCultureWarning")]
+        [InlineData("MSB9007", "ManifestNonResxWithCultureOnDisk", "_GenerateSatelliteAssemblyInputs", "CommonSdk.ManifestResourceWithNoCultureWarning")]
+        public void ResourcesByCultureWarningMessage(string warningNumber, string itemName, string targetName, string resourceName)
+        {
+            using (TestEnvironment env = TestEnvironment.Create())
+            {
+                var outputPath = env.CreateFolder().Path;
+                string projectContent = $"""
+                <Project DefaultTargets="{targetName}">
+                    <Import Project="$(MSBuildBinPath)\Microsoft.Common.props" />
+
+                    <ItemGroup>
+                        <{itemName} Include="Value1" />
+                    </ItemGroup>
+
+                    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets"/>
+                </Project>
+                """;
+
+                var projectFile = env.CreateFile(env.CreateFolder(), "test.csproj", projectContent).Path;
+                Project project = ObjectModelHelpers.LoadProjectFileInTempProjectDirectory(projectFile, touchProject: false);
+
+                MockLogger logger = new MockLogger(_testOutput);
+                object[] args = [warningNumber, itemName];
+                if (warningNumber == "MSB9004")
+                {
+                    args = [warningNumber, itemName, "false", "Resx"];
+                }
+                else if (warningNumber == "MSB9005")
+                {
+                    args = [warningNumber, itemName, "false", "Non-Resx"];
+                }
+                else if (warningNumber == "MSB9006")
+                {
+                    args = [warningNumber, itemName, "true", "Resx"];
+                }
+                else if (warningNumber == "MSB9007")
+                {
+                    args = [warningNumber, itemName, "true", "Non-Resx"];
+                }
+
+                string expectedBuildMessage = ResourceUtilities.FormatResourceStringStripCodeAndKeyword(resourceName, args);
+
+                project.Build(logger);
+                logger.Warnings[0].RawMessage.ShouldBe(expectedBuildMessage);
+            }
+        }
     }
 }
diff --git a/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs b/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
index 56932332dfa..a77f9d5759e 100644
--- a/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
+++ b/src/Tasks.UnitTests/RoslynCodeTaskFactory_Tests.cs
@@ -438,12 +438,15 @@ public void EmptyCodeElement()
                 expectedErrorMessage: "You must specify source code within the Code element or a path to a file containing source code.");
         }
 
-        [Fact]
-        public void EmptyIncludeAttributeOnReferenceElement()
+        [Theory]
+        [InlineData("")]
+        [InlineData("Include=\"\"")]
+        [InlineData("Include=\" \"")]
+        public void EmptyIncludeAttributeOnReferenceElement(string includeSetting)
         {
             TryLoadTaskBodyAndExpectFailure(
-                taskBody: "<Reference Include=\"\" />",
-                expectedErrorMessage: "The \"Include\" attribute of the <Reference> element has been set but is empty. If the \"Include\" attribute is set it must not be empty.");
+                taskBody: $"<Reference {includeSetting} />",
+                expectedErrorMessage: $"The \"Include\" attribute of the <Reference> element in the task \"{TaskName}\" has been set but is empty. Make sure the attribute has a proper value.");
         }
 
         [Fact]
diff --git a/src/Tasks/AssemblyDependency/ReferenceTable.cs b/src/Tasks/AssemblyDependency/ReferenceTable.cs
index 6813f2d4ded..de1a4b26b20 100644
--- a/src/Tasks/AssemblyDependency/ReferenceTable.cs
+++ b/src/Tasks/AssemblyDependency/ReferenceTable.cs
@@ -971,7 +971,8 @@ private void FindSatellites(
                     // Is there a candidate satellite in that folder?
                     string cultureName = Path.GetFileName(subDirectory);
 
-                    if (CultureInfoCache.IsValidCultureString(cultureName))
+                    // Custom or unknown cultures can be met as well
+                    if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14) || CultureInfoCache.IsValidCultureString(cultureName))
                     {
                         string satelliteAssembly = Path.Combine(subDirectory, satelliteFilename);
                         if (_fileExists(satelliteAssembly))
diff --git a/src/Tasks/AssignCulture.cs b/src/Tasks/AssignCulture.cs
index d416f96b4c0..c5b39e5675c 100644
--- a/src/Tasks/AssignCulture.cs
+++ b/src/Tasks/AssignCulture.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Collections.Generic;
+using Microsoft.Build.Collections;
 #if DEBUG
 using System.Diagnostics;
 #endif
@@ -158,6 +159,20 @@ public override bool Execute()
                             // https://github.com/dotnet/msbuild/issues/3064
                             ConversionUtilities.ValidBooleanFalse(AssignedFiles[i].GetMetadata(ItemMetadataNames.withCulture)));
 
+                        // The culture was explicitly specified, but not opted in via 'RespectAlreadyAssignedItemCulture' and different will be used
+                        if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14) &&
+                            !string.IsNullOrEmpty(existingCulture) &&
+                            !MSBuildNameIgnoreCaseComparer.Default.Equals(existingCulture, info.culture))
+                        {
+                            Log.LogWarningWithCodeFromResources("AssignCulture.CultureOverwritten",
+                                existingCulture, AssignedFiles[i].ItemSpec, info.culture);
+                            // Remove the culture if it's not recognized
+                            if (string.IsNullOrEmpty(info.culture))
+                            {
+                                AssignedFiles[i].RemoveMetadata(ItemMetadataNames.culture);
+                            }
+                        }
+
                         if (!string.IsNullOrEmpty(info.culture))
                         {
                             AssignedFiles[i].SetMetadata(ItemMetadataNames.culture, info.culture);
diff --git a/src/Tasks/CodeTaskFactory.cs b/src/Tasks/CodeTaskFactory.cs
index cd6952401b3..203efd6b0d6 100644
--- a/src/Tasks/CodeTaskFactory.cs
+++ b/src/Tasks/CodeTaskFactory.cs
@@ -436,9 +436,9 @@ private List<string> ExtractReferencedAssemblies()
                     return null;
                 }
 
-                if (attribute == null || attribute.Value.Length == 0)
+                if (string.IsNullOrWhiteSpace(attribute?.Value))
                 {
-                    _log.LogErrorWithCodeFromResources("CodeTaskFactory.AttributeEmpty", "Include");
+                    _log.LogErrorWithCodeFromResources("CodeTaskFactory.AttributeEmptyWithTaskElement", "Include", "Reference", _nameOfTask);
                     return null;
                 }
 
diff --git a/src/Tasks/CreateCSharpManifestResourceName.cs b/src/Tasks/CreateCSharpManifestResourceName.cs
index 7af1e8d5105..6f3b6b5a06d 100644
--- a/src/Tasks/CreateCSharpManifestResourceName.cs
+++ b/src/Tasks/CreateCSharpManifestResourceName.cs
@@ -101,12 +101,26 @@ internal static string CreateManifestNameImpl(
             }
 
             dependentUponFileName = FileUtilities.FixFilePath(dependentUponFileName);
-            Culture.ItemCultureInfo info = Culture.GetItemCultureInfo(embeddedFileName, dependentUponFileName, treatAsCultureNeutral);
+            Culture.ItemCultureInfo info;
 
-            // If the item has a culture override, respect that.
-            if (!string.IsNullOrEmpty(culture))
+            if (!string.IsNullOrEmpty(culture) && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14))
             {
-                info.culture = culture;
+                info = new Culture.ItemCultureInfo()
+                {
+                    culture = culture,
+                    cultureNeutralFilename =
+                        embeddedFileName.RemoveLastInstanceOf("." + culture, StringComparison.OrdinalIgnoreCase),
+                };
+            }
+            else
+            {
+                info = Culture.GetItemCultureInfo(embeddedFileName, dependentUponFileName, treatAsCultureNeutral);
+                // If the item has a culture override, respect that.
+                // We need to recheck here due to changewave in condition above - after Wave17_14 removal, this should be unconditional.
+                if (!string.IsNullOrEmpty(culture))
+                {
+                    info.culture = culture;
+                }
             }
 
             var manifestName = StringBuilderCache.Acquire();
diff --git a/src/Tasks/CreateVisualBasicManifestResourceName.cs b/src/Tasks/CreateVisualBasicManifestResourceName.cs
index b73a9a9f41d..0115685336f 100644
--- a/src/Tasks/CreateVisualBasicManifestResourceName.cs
+++ b/src/Tasks/CreateVisualBasicManifestResourceName.cs
@@ -99,12 +99,27 @@ internal static string CreateManifestNameImpl(
                 embeddedFileName = fileName;
             }
 
-            Culture.ItemCultureInfo info = Culture.GetItemCultureInfo(embeddedFileName, dependentUponFileName, treatAsCultureNeutral);
+            dependentUponFileName = FileUtilities.FixFilePath(dependentUponFileName);
+            Culture.ItemCultureInfo info;
 
-            // If the item has a culture override, respect that.
-            if (!string.IsNullOrEmpty(culture))
+            if (!string.IsNullOrEmpty(culture) && ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_14))
             {
-                info.culture = culture;
+                info = new Culture.ItemCultureInfo()
+                {
+                    culture = culture,
+                    cultureNeutralFilename =
+                        embeddedFileName.RemoveLastInstanceOf("." + culture, StringComparison.OrdinalIgnoreCase)
+                };
+            }
+            else
+            {
+                info = Culture.GetItemCultureInfo(embeddedFileName, dependentUponFileName, treatAsCultureNeutral);
+                // If the item has a culture override, respect that.
+                // We need to recheck here due to changewave in condition above - after Wave17_14 removal, this should be unconditional.
+                if (!string.IsNullOrEmpty(culture))
+                {
+                    info.culture = culture;
+                }
             }
 
             var manifestName = StringBuilderCache.Acquire();
diff --git a/src/Tasks/Error.cs b/src/Tasks/Error.cs
index 8cbca5f2ebd..9d5ad2ab386 100644
--- a/src/Tasks/Error.cs
+++ b/src/Tasks/Error.cs
@@ -3,6 +3,8 @@
 
 #nullable disable
 
+using System.Diagnostics.CodeAnalysis;
+
 namespace Microsoft.Build.Tasks
 {
     /// <summary>
@@ -36,6 +38,7 @@ public sealed class Error : TaskExtension
         /// <summary>
         /// A link pointing to more information about the error
         /// </summary>
+        [StringSyntax(StringSyntaxAttribute.Uri)]
         public string HelpLink { get; set; }
 
         /// <summary>
diff --git a/src/Tasks/Exec.cs b/src/Tasks/Exec.cs
index f241972e4c3..cf87ebedec1 100644
--- a/src/Tasks/Exec.cs
+++ b/src/Tasks/Exec.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Collections.Generic;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using System.Text;
 using System.Text.RegularExpressions;
@@ -94,6 +95,7 @@ public string Command
         /// use to spot error lines in the tool output. This is
         /// useful for tools that produce unusually formatted output
         /// </summary>
+        [StringSyntax(StringSyntaxAttribute.Regex)]
         public string CustomErrorRegularExpression
         {
             get => _customErrorRegex;
@@ -105,6 +107,7 @@ public string CustomErrorRegularExpression
         /// use to spot warning lines in the tool output. This is
         /// useful for tools that produce unusually formatted output
         /// </summary>
+        [StringSyntax(StringSyntaxAttribute.Regex)]
         public string CustomWarningRegularExpression
         {
             get => _customWarningRegex;
diff --git a/src/Tasks/MSBuildInternalMessage.cs b/src/Tasks/MSBuildInternalMessage.cs
index 9e54fa38c34..3ba6368b347 100644
--- a/src/Tasks/MSBuildInternalMessage.cs
+++ b/src/Tasks/MSBuildInternalMessage.cs
@@ -76,7 +76,7 @@ public override bool Execute()
                 }
             }
 
-            Log.LogErrorFromResources("CommonTarget.SpecifiedSeverityDoesNotExist", Severity);
+            Log.LogErrorFromResources("CommonSdk.SpecifiedSeverityDoesNotExist", Severity);
 
             return !Log.HasLoggedErrors;
         }
diff --git a/src/Tasks/Microsoft.Build.Tasks.csproj b/src/Tasks/Microsoft.Build.Tasks.csproj
index a6f26407daf..9c4db39cb77 100644
--- a/src/Tasks/Microsoft.Build.Tasks.csproj
+++ b/src/Tasks/Microsoft.Build.Tasks.csproj
@@ -111,6 +111,9 @@
     <Compile Include="..\Shared\FileUtilities.cs">
       <Link>FileUtilities.cs</Link>
     </Compile>
+    <Compile Include="..\Shared\StringUtils.cs">
+      <Link>StringUtils.cs</Link>
+    </Compile>
     <Compile Include="..\Shared\EscapingUtilities.cs">
       <Link>EscapingUtilities.cs</Link>
     </Compile>
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 27e477d539d..ae0d804b1b9 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -202,8 +202,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         we're in legacy mode and we shall assume the current Configuration/Platform combination as invalid.
         Whether this is considered an error or a warning depends on the value of $(SkipInvalidConfigurations).
     -->
-    <_InvalidConfigurationError Condition=" '$(SkipInvalidConfigurations)' != 'true' ">true</_InvalidConfigurationError>
-    <_InvalidConfigurationWarning Condition=" '$(SkipInvalidConfigurations)' == 'true' ">true</_InvalidConfigurationWarning>
+    <_InvalidConfigurationMessageSeverity Condition=" '$(SkipInvalidConfigurations)' == 'true' ">Warning</_InvalidConfigurationMessageSeverity>
+    <_InvalidConfigurationMessageSeverity Condition=" '$(SkipInvalidConfigurations)' != 'true' ">Error</_InvalidConfigurationMessageSeverity>
   </PropertyGroup>
 
   <!--
@@ -836,21 +836,19 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       BeforeTargets="$(BuildDependsOn);Build;$(RebuildDependsOn);Rebuild;$(CleanDependsOn);Clean">
 
     <PropertyGroup>
-      <_InvalidConfigurationMessageText>The BaseOutputPath/OutputPath property is not set for project '$(MSBuildProjectFile)'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='$(_OriginalConfiguration)'  Platform='$(_OriginalPlatform)'.</_InvalidConfigurationMessageText>
-      <_InvalidConfigurationMessageText Condition="'$(BuildingInsideVisualStudio)' == 'true'">$(_InvalidConfigurationMessageText)  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</_InvalidConfigurationMessageText>
-      <_InvalidConfigurationMessageText Condition="'$(BuildingInsideVisualStudio)' != 'true'">$(_InvalidConfigurationMessageText)  You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</_InvalidConfigurationMessageText>
+      <_InvalidConfigurationMessageResourceName Condition=" '$(BuildingInsideVisualStudio)' == 'true' ">CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio</_InvalidConfigurationMessageResourceName>
+      <_InvalidConfigurationMessageResourceName Condition=" '$(BuildingInsideVisualStudio)' != 'true' ">CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio</_InvalidConfigurationMessageResourceName>
     </PropertyGroup>
 
-    <Error Condition=" '$(_InvalidConfigurationError)' == 'true' " Text="$(_InvalidConfigurationMessageText)"/>
-    <Warning Condition=" '$(_InvalidConfigurationWarning)' == 'true' " Text="$(_InvalidConfigurationMessageText)"/>
+    <MSBuildInternalMessage Condition="'$(_InvalidConfigurationMessageSeverity)' != ''" ResourceName="$(_InvalidConfigurationMessageResourceName)" Severity="$(_InvalidConfigurationMessageSeverity)" FormatArguments="$(MSBuildProjectFile);$(_OriginalConfiguration);$(_OriginalPlatform)"/>
 
     <Message Condition="'$(DesignTimeBuild)' != 'true'" Text="Configuration=$(Configuration)" Importance="Low" />
     <Message Condition="'$(DesignTimeBuild)' != 'true'" Text="Platform=$(Platform)" Importance="Low" />
 
     <!-- Although we try to ensure a trailing slash, it's possible to circumvent this if the property is set on the command line -->
-    <Error Condition="'$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)')" Text="The OutDir property must end with a trailing slash." />
-    <Error Condition="'$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)')" Text="The IntermediateOutputPath must end with a trailing slash." />
-    <Error Condition="'$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)')" Text="The BaseIntermediateOutputPath must end with a trailing slash." />
+    <MSBuildInternalMessage Condition="'$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)')" ResourceName="CommonSdk.PropertyWithTrailingSlash"  Severity="Error" FormatArguments="OutDir"/>
+    <MSBuildInternalMessage Condition="'$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)')" ResourceName="CommonSdk.PropertyWithTrailingSlash"  Severity="Error" FormatArguments="IntermediateOutputPath"/>
+    <MSBuildInternalMessage Condition="'$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)')" ResourceName="CommonSdk.PropertyWithTrailingSlash"  Severity="Error" FormatArguments="BaseIntermediateOutputPath"/>
 
     <!-- Also update the value of PlatformTargetAsMSBuildArchitecture per the value of Prefer32Bit.  We are doing
          this here because Prefer32Bit may be set anywhere in the targets, so we can't depend on it having the
@@ -859,24 +857,25 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       <PlatformTargetAsMSBuildArchitecture>x86</PlatformTargetAsMSBuildArchitecture>
     </PropertyGroup>
 
-    <MSBuildInternalMessage Condition=" '$(Prefer32Bit)' == 'true' and '$(PreferNativeArm64)' == 'true' " ResourceName="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled" Severity="Error"/>
+    <MSBuildInternalMessage Condition=" '$(Prefer32Bit)' == 'true' and '$(PreferNativeArm64)' == 'true' " ResourceName="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled" Severity="Error"/>
 
-    <MSBuildInternalMessage Condition=" '$(NoWin32Manifest)' == 'true' and '$(PreferNativeArm64)' == 'true' " ResourceName="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled" Severity="Error"/>
+    <MSBuildInternalMessage Condition=" '$(NoWin32Manifest)' == 'true' and '$(PreferNativeArm64)' == 'true' " ResourceName="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled" Severity="Error"/>
 
-    <MSBuildInternalMessage Condition=" '$(PreferNativeArm64)' == 'true' and '$(Platform)' != 'AnyCPU' " ResourceName="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled" Severity="Warning" FormatArguments="$(Platform)" />
+    <MSBuildInternalMessage Condition=" '$(PreferNativeArm64)' == 'true' and '$(Platform)' != 'AnyCPU' " ResourceName="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled" Severity="Warning" FormatArguments="$(Platform)" />
 
     <!--
-      Log an error if the user set MSBuildProjectExtensionsPath in the body of a project. In an SDK style project
+      Log an error MSB3540 if the user set MSBuildProjectExtensionsPath in the body of a project. In an SDK style project
       if you set a value in the body, the value is not used by the top implicit import but is used by the bottom.
       This can lead to confusing behavior and builds can fail for obscure reasons.
     -->
-    <Error Condition=" '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' "
-           Code="MSB3540"
-           Text="The value of the property &quot;MSBuildProjectExtensionsPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"
-            />
+    <MSBuildInternalMessage
+      Condition=" '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' "
+      ResourceName="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse"
+      Severity="Error"
+    />
 
     <!--
-      Log a warning if:
+      Log a warning MSB3539 if:
         1. $(EnableBaseIntermediateOutputPathMismatchWarning) is 'true'
         2. $(BaseIntermediateOutputPath) was set in the body of a project after its default value was set in Microsoft.Common.props
         3. $(BaseIntermediateOutputPath) is not the same as $(MSBuildProjectExtensionsPath)
@@ -885,10 +884,11 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       MSBuild does not know if $(BaseIntermediateOutputPath) changing would cause problems so tools like NuGet must set $(EnableBaseIntermediateOutputPathMismatchWarning)
       to 'true'.
     -->
-    <Warning Condition=" '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' "
-             Code="MSB3539"
-             Text="The value of the property &quot;BaseIntermediateOutputPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the &quot;MSBuildProjectExtensionsPath&quot; instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"
-             />
+    <MSBuildInternalMessage
+      Condition=" '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' "
+      ResourceName="CommonSdk.BaseIntermediateOutputPathMismatchWarning"
+      Severity="Warning"
+    />
   </Target>
 
   <!--
@@ -1137,7 +1137,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       Name="Run"
       DependsOnTargets="$(RunDependsOn)">
 
-    <Error Text="Cannot run '$(TargetPath)' because project output type is not '.exe'" Condition="'$(TargetExt)'!='.exe'"/>
+    <MSBuildInternalMessage Condition="'$(TargetExt)'!='.exe'" ResourceName="CommonSdk.RunTargetDependsOnMessage" Severity="Error" FormatArguments="$(TargetPath)"/>
     <Exec Command="$(TargetPath) $(StartArguments)" WorkingDirectory="$(OutDir)" Condition=" '$(StartWorkingDirectory)' == '' "/>
     <Exec Command="$(TargetPath) $(StartArguments)" WorkingDirectory="$(StartWorkingDirectory)" Condition=" '$(StartWorkingDirectory)' != '' "/>
 
@@ -1964,8 +1964,10 @@ Copyright (C) Microsoft Corporation. All rights reserved.
           DependsOnTargets="GetTargetFrameworksWithPlatformForSingleTargetFramework"
           Returns="@(_ThisProjectBuildMetadata)">
 
-    <Error Condition="'$(IsCrossTargetingBuild)' == 'true'"
-           Text="Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build" />
+    <MSBuildInternalMessage Condition="'$(IsCrossTargetingBuild)' == 'true'"
+      ResourceName="CommonSdk.CrossTargetingGetTargetFrameworks"
+      Severity="Error"
+    />
 
     <CombineXmlElements
       RootElementName="AdditionalProjectProperties"
@@ -2121,8 +2123,11 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         ContinueOnError="!$(BuildingProject)"
         RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)">
 
-      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedProjectReferencePaths" Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)'=='true'"/>
-      <Output TaskParameter="TargetOutputs" ItemName="%(_MSBuildProjectReferenceExistent.OutputItemType)" Condition="'%(_MSBuildProjectReferenceExistent.OutputItemType)' != ''"/>
+      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedProjectReferencePaths"
+        Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)'=='true'" />
+      <Output TaskParameter="TargetOutputs"
+        ItemName="%(_MSBuildProjectReferenceExistent.OutputItemType)"
+        Condition="'%(_MSBuildProjectReferenceExistent.OutputItemType)' != ''" />
 
     </MSBuild>
 
@@ -2138,8 +2143,11 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         ContinueOnError="$(ContinueOnError)"
         RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)">
 
-      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedProjectReferencePaths" Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)'=='true' or '$(DesignTimeBuild)' == 'true'"/>
-      <Output TaskParameter="TargetOutputs" ItemName="%(_MSBuildProjectReferenceExistent.OutputItemType)" Condition="'%(_MSBuildProjectReferenceExistent.OutputItemType)' != ''"/>
+      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedProjectReferencePaths"
+        Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)'=='true' or '$(DesignTimeBuild)' == 'true'" />
+      <Output TaskParameter="TargetOutputs"
+        ItemName="%(_MSBuildProjectReferenceExistent.OutputItemType)"
+        Condition="'%(_MSBuildProjectReferenceExistent.OutputItemType)' != ''" />
 
     </MSBuild>
 
@@ -2156,11 +2164,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         SkipNonexistentTargets="true"
         RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)">
 
-      <Output TaskParameter="TargetOutputs" ItemName="NativeReference" Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)' == 'true'"/>
+      <Output TaskParameter="TargetOutputs" ItemName="NativeReference"
+        Condition="'%(_MSBuildProjectReferenceExistent.ReferenceOutputAssembly)' == 'true'" />
     </MSBuild>
 
     <ItemGroup>
-      <_ResolvedProjectReferencePaths Remove="@(_ResolvedProjectReferencePaths)" Condition="'%(_ResolvedProjectReferencePaths.ResolveableAssembly)' == 'false'" />
+      <_ResolvedProjectReferencePaths Remove="@(_ResolvedProjectReferencePaths)"
+        Condition="'%(_ResolvedProjectReferencePaths.ResolveableAssembly)' == 'false'" />
       <!--
           Copy OriginalItemSpec to OriginalProjectReferenceItemSpec, so that when ResolveAssemblyReferences
           takes these items and resolves them to ReferencePath, we can still recover the _real_ OriginalItemSpec
@@ -2171,16 +2181,17 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       </_ResolvedProjectReferencePaths>
     </ItemGroup>
 
-    <!-- Issue a warning or error for each non-existent project. -->
-    <Warning
-        Text="The referenced project '%(_MSBuildProjectReferenceNonexistent.Identity)' does not exist."
-        Code="MSB9008"
-        Condition="'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '' and '$(ErrorOnMissingProjectReference)' != 'True'"/>
-
-    <Error
-        Text="The referenced project '%(_MSBuildProjectReferenceNonexistent.Identity)' does not exist."
-        Code="MSB9008"
-        Condition="'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '' and '$(ErrorOnMissingProjectReference)' == 'True'"/>
+    <!-- Issue a warning or error MSB9008 for each non-existent project. -->
+    <PropertyGroup>
+      <_NonExistentProjectReferenceSeverity  Condition="'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '' and '$(ErrorOnMissingProjectReference)' != 'True'">Warning</_NonExistentProjectReferenceSeverity>
+      <_NonExistentProjectReferenceSeverity  Condition="'@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '' and '$(ErrorOnMissingProjectReference)' == 'True'">Error</_NonExistentProjectReferenceSeverity>
+    </PropertyGroup>
+    <MSBuildInternalMessage
+      Condition="'$(_NonExistentProjectReferenceSeverity)' != ''"
+      ResourceName="CommonSdk.NonExistentProjectReference"
+      Severity="$(_NonExistentProjectReferenceSeverity)"
+      FormatArguments="@(_MSBuildProjectReferenceNonexistent->'%(Identity)')"
+    />
 
   </Target>
 
@@ -2557,6 +2568,24 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       <AppConfig Condition="$(_NewGenerateBindingRedirectsIntermediateAppConfig) == 'true'">$(_GenerateBindingRedirectsIntermediateAppConfig)</AppConfig>
     </PropertyGroup>
 
+    <PropertyGroup>
+      <ConfigFileExists Condition="Exists('@(AppConfigWithTargetPath->'$(OutDir)%(TargetPath)')')">true</ConfigFileExists>
+      <HasNoBindingRedirects Condition="'@(SuggestedBindingRedirects)' == ''">true</HasNoBindingRedirects>
+    </PropertyGroup>
+
+    <!-- Overwrites .config file with a App.config content if RAR returned empty @(SuggestedBindingRedirects). -->
+    <Copy
+      SourceFiles="@(AppConfigWithTargetPath->'%(FullPath)')"
+      DestinationFiles="$(_GenerateBindingRedirectsIntermediateAppConfig)"
+      SkipUnchangedFiles="true"
+      Condition="'$(ConfigFileExists)' == 'true' and '$(HasNoBindingRedirects)' == 'true'">
+      <Output TaskParameter="CopiedFiles" ItemName="FileWrites"/>
+    </Copy>
+    <Touch
+      Files="$(_GenerateBindingRedirectsIntermediateAppConfig)"
+      AlwaysCreate="true"
+      Condition="'$(ConfigFileExists)' == 'true' and '$(HasNoBindingRedirects)' == 'true'"/>
+
     <ItemGroup Condition="$(_NewGenerateBindingRedirectsIntermediateAppConfig) == 'true'">
       <AppConfigWithTargetPath Remove="@(AppConfigWithTargetPath)" />
       <AppConfigWithTargetPath Include="$(AppConfig)">
@@ -3260,10 +3289,10 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       <RespectAlreadyAssignedItemCulture Condition="'$(RespectAlreadyAssignedItemCulture)' == ''">false</RespectAlreadyAssignedItemCulture>
     </PropertyGroup>
 
-    <Warning Condition="'@(ResxWithNoCulture)'!=''" Code="MSB9000" Text="ResxWithNoCulture item type is deprecated. Use EmbeddedResource items instead."/>
-    <Warning Condition="'@(ResxWithCulture)'!=''" Code="MSB9001" Text="ResxWithCulture item type is deprecated. Use EmbeddedResource items instead."/>
-    <Warning Condition="'@(NonResxWithCulture)'!=''" Code="MSB9002" Text="NonResxWithCulture item type is deprecated. Use EmbeddedResource items instead."/>
-    <Warning Condition="'@(NonResxWithNoCulture)'!=''" Code="MSB9003" Text="NonResxWithNoCulture item type is deprecated. Use EmbeddedResource items instead."/>
+    <MSBuildInternalMessage Condition="'@(ResxWithNoCulture)'!=''" ResourceName="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage" Severity="Warning" FormatArguments="MSB9000;ResxWithNoCulture" />
+    <MSBuildInternalMessage Condition="'@(ResxWithCulture)'!=''" ResourceName="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage" Severity="Warning" FormatArguments="MSB9001;ResxWithCulture" />
+    <MSBuildInternalMessage Condition="'@(NonResxWithCulture)'!=''" ResourceName="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage" Severity="Warning" FormatArguments="MSB9002;NonResxWithCulture" />
+    <MSBuildInternalMessage Condition="'@(NonResxWithNoCulture)'!=''" ResourceName="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage" Severity="Warning" FormatArguments="MSB9003;NonResxWithNoCulture" />
 
     <ItemGroup>
       <_LicxFile Include="@(EmbeddedResource)" Condition="'%(Extension)'=='.licx'"/>
@@ -3637,8 +3666,16 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     -->
   <Target Name="_GenerateCompileInputs">
 
-    <Warning Condition="'@(ManifestResourceWithNoCulture)'!='' and '%(ManifestResourceWithNoCulture.EmittedForCompatibilityOnly)'==''" Code="MSB9004" Text="ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName."/>
-    <Warning Condition="'@(ManifestNonResxWithNoCultureOnDisk)'!='' and '%(ManifestNonResxWithNoCultureOnDisk.EmittedForCompatibilityOnly)'==''" Code="MSB9005" Text="ManifestNonResxWithNoCultureOnDisk item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Non-Resx', and optional LogicalName."/>
+    <MSBuildInternalMessage
+      Condition="'@(ManifestResourceWithNoCulture)'!='' and '%(ManifestResourceWithNoCulture.EmittedForCompatibilityOnly)'==''"
+      ResourceName="CommonSdk.ManifestResourceWithNoCultureWarning"
+      Severity="Warning"
+      FormatArguments="MSB9004;ManifestResourceWithNoCulture;false;Resx" />
+    <MSBuildInternalMessage
+      Condition="'@(ManifestNonResxWithNoCultureOnDisk)'!='' and '%(ManifestNonResxWithNoCultureOnDisk.EmittedForCompatibilityOnly)'==''"
+      ResourceName="CommonSdk.ManifestResourceWithNoCultureWarning"
+      Severity="Warning"
+      FormatArguments="MSB9005;ManifestNonResxWithNoCultureOnDisk;false;Non-Resx" />
 
     <ItemGroup>
 
@@ -3989,8 +4026,16 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     -->
   <Target Name="_GenerateSatelliteAssemblyInputs">
 
-    <Warning Condition="'@(ManifestResourceWithCulture)'!='' and '%(ManifestResourceWithCulture.EmittedForCompatibilityOnly)'==''" Code="MSB9006" Text="ManifestResourceWithCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='true', Type='Resx', and optional LogicalName."/>
-    <Warning Condition="'@(ManifestNonResxWithCultureOnDisk)'!='' and '%(ManifestNonResxWithCultureOnDisk.EmittedForCompatibilityOnly)'==''" Code="MSB9007" Text="ManifestNonResxWithCultureOnDisk item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='true', Type='Non-Resx', and optional LogicalName."/>
+    <MSBuildInternalMessage
+      Condition="'@(ManifestResourceWithCulture)'!='' and '%(ManifestResourceWithCulture.EmittedForCompatibilityOnly)'==''"
+      ResourceName="CommonSdk.ManifestResourceWithNoCultureWarning"
+      Severity="Warning"
+      FormatArguments="MSB9006;ManifestResourceWithCulture;true;Resx" />
+    <MSBuildInternalMessage
+      Condition="'@(ManifestNonResxWithCultureOnDisk)'!='' and '%(ManifestNonResxWithCultureOnDisk.EmittedForCompatibilityOnly)'==''"
+      ResourceName="CommonSdk.ManifestResourceWithNoCultureWarning"
+      Severity="Warning"
+      FormatArguments="MSB9007;ManifestNonResxWithCultureOnDisk;true;Non-Resx" />
 
     <ItemGroup>
       <!-- _SatelliteAssemblyResourceInputs is the list of TLDA inputs that should trigger CreateSatelliteAssemblies, so listed as inputs to that target -->
@@ -4566,7 +4611,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         The PublishProtocol property is available only in .NET>=5 so we will used that to exclude .NET FX 4.X case.
       -->
       <!-- Include items from None group for publishing -->
-      <_ClickOnceNoneItemsTemp Include="@(_NoneWithTargetPath->WithoutMetadataValue('CopyToPublishDirectory', 'Never')->'%(TargetPath)')" Condition="'$(PublishProtocol)'=='Clickonce' And ('%(_NoneWithTargetPath.CopyToOutputDirectory)'=='Always' or '%(_NoneWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest')">
+      <_ClickOnceNoneItemsTemp Include="@(_NoneWithTargetPath->WithoutMetadataValue('CopyToPublishDirectory', 'Never')->'%(TargetPath)')" Condition="'$(PublishProtocol)'=='Clickonce' And ('%(_NoneWithTargetPath.CopyToOutputDirectory)'=='Always' or '%(_NoneWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest' or '%(_NoneWithTargetPath.CopyToOutputDirectory)'=='IfDifferent')">
         <SavedIdentity>%(Identity)</SavedIdentity>
       </_ClickOnceNoneItemsTemp>
       <_ClickOnceNoneItems Include="@(_ClickOnceNoneItemsTemp->'%(SavedIdentity)')" Condition="'%(Identity)'=='@(PublishFile)' Or '%(Extension)'=='.exe' Or '%(Extension)'=='.dll'" />
@@ -5075,7 +5120,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       DependsOnTargets="
             GetCopyToOutputDirectoryItems;
             _CopyOutOfDateSourceItemsToOutputDirectory;
-            _CopyOutOfDateSourceItemsToOutputDirectoryAlways"/>
+            _CopyOutOfDateSourceItemsToOutputDirectoryAlways;
+            _CopyDifferingSourceItemsToOutputDirectory"/>
   <!--
     ============================================================
                                         GetCopyToOutputDirectoryItems
@@ -5156,6 +5202,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ItemGroup>
       <_CopyToOutputDirectoryTransitiveItems   KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_AllChildProjectItemsWithTargetPath->'%(FullPath)')" Condition="'%(_AllChildProjectItemsWithTargetPath.CopyToOutputDirectory)'=='Always'"/>
       <_CopyToOutputDirectoryTransitiveItems   KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_AllChildProjectItemsWithTargetPath->'%(FullPath)')" Condition="'%(_AllChildProjectItemsWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest'"/>
+      <_CopyToOutputDirectoryTransitiveItems   KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_AllChildProjectItemsWithTargetPath->'%(FullPath)')" Condition="'%(_AllChildProjectItemsWithTargetPath.CopyToOutputDirectory)'=='IfDifferent'"/>
     </ItemGroup>
 
     <!-- Remove items which we will never again use - they just sit around taking up memory otherwise -->
@@ -5167,15 +5214,17 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ItemGroup>
       <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(ContentWithTargetPath->'%(FullPath)')" Condition="'%(ContentWithTargetPath.CopyToOutputDirectory)'=='Always' AND '%(ContentWithTargetPath.MSBuildSourceProjectFile)'!=''"/>
       <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(ContentWithTargetPath->'%(FullPath)')" Condition="'%(ContentWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest' AND '%(ContentWithTargetPath.MSBuildSourceProjectFile)'!=''"/>
+      <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(ContentWithTargetPath->'%(FullPath)')" Condition="'%(ContentWithTargetPath.CopyToOutputDirectory)'=='IfDifferent' AND '%(ContentWithTargetPath.MSBuildSourceProjectFile)'!=''"/>
     </ItemGroup>
 
     <ItemGroup>
       <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(EmbeddedResource->'%(FullPath)')" Condition="'%(EmbeddedResource.CopyToOutputDirectory)'=='Always' AND '%(EmbeddedResource.MSBuildSourceProjectFile)'!=''"/>
       <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(EmbeddedResource->'%(FullPath)')" Condition="'%(EmbeddedResource.CopyToOutputDirectory)'=='PreserveNewest' AND '%(EmbeddedResource.MSBuildSourceProjectFile)'!=''"/>
+        <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(EmbeddedResource->'%(FullPath)')" Condition="'%(EmbeddedResource.CopyToOutputDirectory)'=='IfDifferent' AND '%(EmbeddedResource.MSBuildSourceProjectFile)'!=''"/>
     </ItemGroup>
 
     <ItemGroup>
-      <_CompileItemsToCopy Include="@(Compile->'%(FullPath)')" Condition="('%(Compile.CopyToOutputDirectory)'=='Always' or '%(Compile.CopyToOutputDirectory)'=='PreserveNewest') AND '%(Compile.MSBuildSourceProjectFile)'!=''"/>
+      <_CompileItemsToCopy Include="@(Compile->'%(FullPath)')" Condition="('%(Compile.CopyToOutputDirectory)'=='Always' or '%(Compile.CopyToOutputDirectory)'=='PreserveNewest' or '%(Compile.CopyToOutputDirectory)'=='IfDifferent') AND '%(Compile.MSBuildSourceProjectFile)'!=''"/>
     </ItemGroup>
 
     <AssignTargetPath Files="@(_CompileItemsToCopy)" RootFolder="$(MSBuildProjectDirectory)">
@@ -5185,11 +5234,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ItemGroup>
       <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_CompileItemsToCopyWithTargetPath)" Condition="'%(_CompileItemsToCopyWithTargetPath.CopyToOutputDirectory)'=='Always'"/>
       <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_CompileItemsToCopyWithTargetPath)" Condition="'%(_CompileItemsToCopyWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest'"/>
+      <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_CompileItemsToCopyWithTargetPath)" Condition="'%(_CompileItemsToCopyWithTargetPath.CopyToOutputDirectory)'=='IfDifferent'"/>
     </ItemGroup>
 
     <ItemGroup>
       <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_NoneWithTargetPath->'%(FullPath)')" Condition="'%(_NoneWithTargetPath.CopyToOutputDirectory)'=='Always' AND '%(_NoneWithTargetPath.MSBuildSourceProjectFile)'!=''"/>
       <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_NoneWithTargetPath->'%(FullPath)')" Condition="'%(_NoneWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest' AND '%(_NoneWithTargetPath.MSBuildSourceProjectFile)'!=''"/>
+      <_CopyToOutputDirectoryTransitiveItems       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_NoneWithTargetPath->'%(FullPath)')" Condition="'%(_NoneWithTargetPath.CopyToOutputDirectory)'=='IfDifferent' AND '%(_NoneWithTargetPath.MSBuildSourceProjectFile)'!=''"/>
     </ItemGroup>
 
   </Target>
@@ -5202,15 +5253,17 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ItemGroup>
       <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(ContentWithTargetPath->'%(FullPath)')" Condition="'%(ContentWithTargetPath.CopyToOutputDirectory)'=='Always' AND '%(ContentWithTargetPath.MSBuildSourceProjectFile)'==''"/>
       <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(ContentWithTargetPath->'%(FullPath)')" Condition="'%(ContentWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest' AND '%(ContentWithTargetPath.MSBuildSourceProjectFile)'==''"/>
+      <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(ContentWithTargetPath->'%(FullPath)')" Condition="'%(ContentWithTargetPath.CopyToOutputDirectory)'=='IfDifferent' AND '%(ContentWithTargetPath.MSBuildSourceProjectFile)'==''"/>
     </ItemGroup>
 
     <ItemGroup>
       <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(EmbeddedResource->'%(FullPath)')" Condition="'%(EmbeddedResource.CopyToOutputDirectory)'=='Always' AND '%(EmbeddedResource.MSBuildSourceProjectFile)'==''"/>
       <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(EmbeddedResource->'%(FullPath)')" Condition="'%(EmbeddedResource.CopyToOutputDirectory)'=='PreserveNewest' AND '%(EmbeddedResource.MSBuildSourceProjectFile)'==''"/>
+      <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(EmbeddedResource->'%(FullPath)')" Condition="'%(EmbeddedResource.CopyToOutputDirectory)'=='IfDifferent' AND '%(EmbeddedResource.MSBuildSourceProjectFile)'==''"/>
     </ItemGroup>
 
     <ItemGroup>
-      <_CompileItemsToCopy Include="@(Compile->'%(FullPath)')" Condition="('%(Compile.CopyToOutputDirectory)'=='Always' or '%(Compile.CopyToOutputDirectory)'=='PreserveNewest') AND '%(Compile.MSBuildSourceProjectFile)'==''"/>
+      <_CompileItemsToCopy Include="@(Compile->'%(FullPath)')" Condition="('%(Compile.CopyToOutputDirectory)'=='Always' or '%(Compile.CopyToOutputDirectory)'=='PreserveNewest' or '%(Compile.CopyToOutputDirectory)'=='IfDifferent') AND '%(Compile.MSBuildSourceProjectFile)'==''"/>
     </ItemGroup>
 
     <AssignTargetPath Files="@(_CompileItemsToCopy)" RootFolder="$(MSBuildProjectDirectory)">
@@ -5220,11 +5273,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ItemGroup>
       <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_CompileItemsToCopyWithTargetPath)" Condition="'%(_CompileItemsToCopyWithTargetPath.CopyToOutputDirectory)'=='Always'"/>
       <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_CompileItemsToCopyWithTargetPath)" Condition="'%(_CompileItemsToCopyWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest'"/>
+      <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_CompileItemsToCopyWithTargetPath)" Condition="'%(_CompileItemsToCopyWithTargetPath.CopyToOutputDirectory)'=='IfDifferent'"/>
     </ItemGroup>
 
     <ItemGroup>
       <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_NoneWithTargetPath->'%(FullPath)')" Condition="'%(_NoneWithTargetPath.CopyToOutputDirectory)'=='Always' AND '%(_NoneWithTargetPath.MSBuildSourceProjectFile)'==''"/>
       <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_NoneWithTargetPath->'%(FullPath)')" Condition="'%(_NoneWithTargetPath.CopyToOutputDirectory)'=='PreserveNewest' AND '%(_NoneWithTargetPath.MSBuildSourceProjectFile)'==''"/>
+      <_ThisProjectItemsToCopyToOutputDirectory       KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_NoneWithTargetPath->'%(FullPath)')" Condition="'%(_NoneWithTargetPath.CopyToOutputDirectory)'=='IfDifferent' AND '%(_NoneWithTargetPath.MSBuildSourceProjectFile)'==''"/>
     </ItemGroup>
 
   </Target>
@@ -5252,23 +5307,28 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ItemGroup>
       <_TransitiveItemsToCopyToOutputDirectoryAlways               KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_TransitiveItemsToCopyToOutputDirectory->'%(FullPath)')" Condition="'%(_TransitiveItemsToCopyToOutputDirectory.CopyToOutputDirectory)'=='Always'"/>
       <_TransitiveItemsToCopyToOutputDirectoryPreserveNewest       KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_TransitiveItemsToCopyToOutputDirectory->'%(FullPath)')" Condition="'%(_TransitiveItemsToCopyToOutputDirectory.CopyToOutputDirectory)'=='PreserveNewest'"/>
+      <_TransitiveItemsToCopyToOutputDirectoryIfDifferent          KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_TransitiveItemsToCopyToOutputDirectory->'%(FullPath)')" Condition="'%(_TransitiveItemsToCopyToOutputDirectory.CopyToOutputDirectory)'=='IfDifferent'"/>
 
       <_ThisProjectItemsToCopyToOutputDirectoryAlways              KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_ThisProjectItemsToCopyToOutputDirectory->'%(FullPath)')" Condition="'%(_ThisProjectItemsToCopyToOutputDirectory.CopyToOutputDirectory)'=='Always'"/>
       <_ThisProjectItemsToCopyToOutputDirectoryPreserveNewest      KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_ThisProjectItemsToCopyToOutputDirectory->'%(FullPath)')" Condition="'%(_ThisProjectItemsToCopyToOutputDirectory.CopyToOutputDirectory)'=='PreserveNewest'"/>
+      <_ThisProjectItemsToCopyToOutputDirectoryIfDifferent         KeepDuplicates=" '$(_GCTODIKeepDuplicates)' != 'false' " KeepMetadata="$(_GCTODIKeepMetadata)" Include="@(_ThisProjectItemsToCopyToOutputDirectory->'%(FullPath)')" Condition="'%(_ThisProjectItemsToCopyToOutputDirectory.CopyToOutputDirectory)'=='IfDifferent'"/>
 
       <!-- Append the items from this project last so that they will be copied last. -->
       <_SourceItemsToCopyToOutputDirectoryAlways                   Include="@(_TransitiveItemsToCopyToOutputDirectoryAlways);@(_ThisProjectItemsToCopyToOutputDirectoryAlways)"/>
       <_SourceItemsToCopyToOutputDirectory                         Include="@(_TransitiveItemsToCopyToOutputDirectoryPreserveNewest);@(_ThisProjectItemsToCopyToOutputDirectoryPreserveNewest)"/>
+      <_SourceItemsToCopyToOutputDirectoryIfDifferent              Include="@(_TransitiveItemsToCopyToOutputDirectoryIfDifferent);@(_ThisProjectItemsToCopyToOutputDirectoryIfDifferent)"/>
 
-      <AllItemsFullPathWithTargetPath                              Include="@(_SourceItemsToCopyToOutputDirectoryAlways->'%(FullPath)');@(_SourceItemsToCopyToOutputDirectory->'%(FullPath)')"/>
+      <AllItemsFullPathWithTargetPath                              Include="@(_SourceItemsToCopyToOutputDirectoryAlways->'%(FullPath)');@(_SourceItemsToCopyToOutputDirectory->'%(FullPath)');@(_SourceItemsToCopyToOutputDirectoryIfDifferent->'%(FullPath)')"/>
 
       <!-- Empty intermediate items to release memory -->
       <_TransitiveItemsToCopyToOutputDirectoryAlways               Remove="@(_TransitiveItemsToCopyToOutputDirectoryAlways)"/>
       <_TransitiveItemsToCopyToOutputDirectoryPreserveNewest       Remove="@(_TransitiveItemsToCopyToOutputDirectoryPreserveNewest)"/>
+      <_TransitiveItemsToCopyToOutputDirectoryIfDifferent          Remove="@(_TransitiveItemsToCopyToOutputDirectoryIfDifferent)"/>
 
       <_ThisProjectItemsToCopyToOutputDirectoryAlways              Remove="@(_ThisProjectItemsToCopyToOutputDirectoryAlways)"/>
       <_ThisProjectItemsToCopyToOutputDirectoryPreserveNewest      Remove="@(_ThisProjectItemsToCopyToOutputDirectoryPreserveNewest)"/>
       <_ThisProjectItemsToCopyToOutputDirectory                    Remove="@(_ThisProjectItemsToCopyToOutputDirectory)"/>
+      <_ThisProjectItemsToCopyToOutputDirectoryIfDifferent         Remove="@(_ThisProjectItemsToCopyToOutputDirectoryIfDifferent)"/>
     </ItemGroup>
 
   </Target>
@@ -5317,8 +5377,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       Outputs="@(_SourceItemsToCopyToOutputDirectory->'$(OutDir)%(TargetPath)')">
 
     <!--
-        Not using SkipUnchangedFiles="true" because the application may want to change
-        one of these files and not have an incremental build replace it.
+        Not using SkipUnchangedFiles="true" because the items we pass in are already only those that have newer timestampts in the source (determined by _GetCopyToOutputDirectoryItemsFromThisProject).
         -->
     <Copy
         SourceFiles = "@(_SourceItemsToCopyToOutputDirectory)"
@@ -5348,12 +5407,17 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       Condition=" '@(_SourceItemsToCopyToOutputDirectoryAlways)' != '' ">
 
     <!--
-        Not using SkipUnchangedFiles="true" because the application may want to change
-        one of these files and not have an incremental build replace it.
+        Not using SkipUnchangedFiles="true" by default for backwards compatibility.
         -->
+        
+    <PropertyGroup>
+      <SkipUnchangedFilesOnCopyAlways Condition="'$(SkipUnchangedFilesOnCopyAlways)' == ''">false</SkipUnchangedFilesOnCopyAlways>
+    </PropertyGroup>
+        
     <Copy
         SourceFiles = "@(_SourceItemsToCopyToOutputDirectoryAlways)"
         DestinationFiles = "@(_SourceItemsToCopyToOutputDirectoryAlways->'$(OutDir)%(TargetPath)')"
+        SkipUnchangedFiles="$(SkipUnchangedFilesOnCopyAlways)"
         OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
         Retries="$(CopyRetryCount)"
         RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
@@ -5367,6 +5431,37 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   </Target>
 
+  <!--
+    ============================================================
+                                        _CopyDifferingSourceItemsToOutputDirectory
+
+    Copy files that have the CopyToOutputDirectory attribute set to 'IfDifferent'.
+    ============================================================
+    -->
+  <Target
+      Name="_CopyDifferingSourceItemsToOutputDirectory"
+      Condition=" '@(_SourceItemsToCopyToOutputDirectoryIfDifferent)' != '' ">
+
+    <!--
+        Using SkipUnchangedFiles="true" because we want only differing files.
+        -->
+    <Copy
+        SourceFiles = "@(_SourceItemsToCopyToOutputDirectoryIfDifferent)"
+        DestinationFiles = "@(_SourceItemsToCopyToOutputDirectoryIfDifferent->'$(OutDir)%(TargetPath)')"
+        SkipUnchangedFiles="true"
+        OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
+        Retries="$(CopyRetryCount)"
+        RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
+        UseHardlinksIfPossible="$(CreateHardLinksForAdditionalFilesIfPossible)"
+        UseSymboliclinksIfPossible="$(CreateSymbolicLinksForAdditionalFilesIfPossible)"
+            >
+
+      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
+
+    </Copy>
+
+  </Target>
+  
   <!--
     ============================================================
                                         _CopyAppConfigFile
@@ -5984,7 +6079,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   <Target
       Name="_DeploymentUnpublishable">
 
-    <Message Text="Skipping unpublishable project."/>
+    <MSBuildInternalMessage ResourceName="CommonSdk.DeploymentUnpublishable" Severity="Message"/>
 
   </Target>
 
@@ -5998,8 +6093,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   <Target
       Name="SetGenerateManifests">
 
-    <Error Condition="'$(OutputType)'!='winexe' and '$(OutputType)'!='exe' and '$(OutputType)'!='appcontainerexe'" Text="Publish is only valid for 'Windows Application' or 'Console Application' project types."/>
-    <Error Condition="'$(_DeploymentSignClickOnceManifests)'=='true' and '$(ManifestCertificateThumbprint)'=='' and '$(ManifestKeyFile)'==''" Text="A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project."/>
+    <MSBuildInternalMessage Condition="'$(OutputType)'!='winexe' and '$(OutputType)'!='exe' and '$(OutputType)'!='appcontainerexe'" ResourceName="CommonSdk.GenerateManifestsOnlyForExe" Severity="Error"/>
+    <MSBuildInternalMessage Condition="'$(_DeploymentSignClickOnceManifests)'=='true' and '$(ManifestCertificateThumbprint)'=='' and '$(ManifestKeyFile)'==''" ResourceName="CommonSdk.SigningKeyRequired" Severity="Error"/>
 
     <PropertyGroup>
       <GenerateClickOnceManifests>true</GenerateClickOnceManifests>
@@ -6604,7 +6699,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       Returns="@(SDKRedistOutputGroupOutput)"
       DependsOnTargets="$(SDKRedistOutputGroupDependsOn)">
 
-       <!-- This list starts with the least specific files to the most specific so that later files can overwrite earlier files-->
+    <!-- This list starts with the least specific files to the most specific so that later files can overwrite earlier files-->
     <ItemGroup>
       <SDKRedistOutputGroupOutput Include="@(ResolvedRedistFiles)"/>
     </ItemGroup>
diff --git a/src/Tasks/Resources/Strings.resx b/src/Tasks/Resources/Strings.resx
index 56fb3f5170b..341e85c7e55 100644
--- a/src/Tasks/Resources/Strings.resx
+++ b/src/Tasks/Resources/Strings.resx
@@ -149,6 +149,13 @@
   <data name="AssignCulture.Comment">
     <value>Culture of "{0}" was assigned to file "{1}".</value>
   </data>
+  <data name="AssignCulture.CultureOverwritten">
+    <value>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</value>
+    <comment>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</comment>
+  </data>
   <!--
         The AxImp message bucket is: MSB3656 - MSB3660.
 
@@ -2480,6 +2487,10 @@
     <value>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element has been set but is empty. If the "{0}" attribute is set it must not be empty.</value>
     <comment>{StrBegin="MSB3752: "}</comment>
   </data>
+  <data name="CodeTaskFactory.AttributeEmptyWithTaskElement" xml:space="preserve">
+    <value>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</value>
+    <comment>{StrBegin="MSB3752: "}</comment>
+  </data>
   <data name="CodeTaskFactory.NeedsITaskInterface" xml:space="preserve">
     <value>MSB3753: The task could not be instantiated because it does not implement the ITask interface. Make sure the task implements the Microsoft.Build.Framework.ITask interface.</value>
     <comment>{StrBegin="MSB3753: "}</comment>
@@ -3034,23 +3045,79 @@
   <!--
         MSB9901 - MSB9990   MSBuild common targets messages
   -->
-  <data name="CommonTarget.SpecifiedSeverityDoesNotExist">
+  <data name="CommonSdk.SpecifiedSeverityDoesNotExist">
     <value>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</value>
     <comment>{StrBegin="MSB9901: "}</comment>
   </data>
-  <data name="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+  <data name="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
     <value>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</value>
     <comment>{StrBegin="MSB9902: "}</comment>
   </data>
-  <data name="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+  <data name="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
     <value>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</value>
     <comment>{StrBegin="MSB9903: "}</comment>
   </data>
-  <data name="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+  <data name="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
     <value>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</value>
     <comment>{StrBegin="MSB9904: "}</comment>
   </data>
 
+  <data name="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+    <value>MSB3539: The value of the property &quot;BaseIntermediateOutputPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the &quot;MSBuildProjectExtensionsPath&quot; instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</value>
+    <comment>{StrBegin="MSB3539: "} </comment>
+  </data>
+
+  <data name="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+    <value>MSB3540: The value of the property &quot;MSBuildProjectExtensionsPath&quot; was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</value>
+    <comment>{StrBegin="MSB3540: "}</comment>
+  </data>
+
+  <data name="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+    <value>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</value>
+    <comment>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</comment>
+  </data>
+
+  <data name="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+    <value>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</value>
+    <comment>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</comment>
+  </data>
+
+  <data name="CommonSdk.ManifestResourceWithNoCultureWarning">
+    <value>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</value>
+  </data>
+
+  <data name="CommonSdk.PropertyWithTrailingSlash">
+    <value>The {0} must end with a trailing slash.</value>
+  </data>
+
+  <data name="CommonSdk.DeploymentUnpublishable">
+    <value>Skipping unpublishable project.</value>
+  </data>
+
+  <data name="CommonSdk.GenerateManifestsOnlyForExe">
+    <value>Publish is only valid for 'Windows Application' or 'Console Application' project types.</value>
+  </data>
+
+  <data name="CommonSdk.SigningKeyRequired">
+    <value>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</value>
+  </data>
+
+  <data name="CommonSdk.RunTargetDependsOnMessage">
+    <value>Cannot run '{0}' because project output type is not '.exe'</value>
+  </data>
+
+  <data name="CommonSdk.CrossTargetingGetTargetFrameworks">
+    <value>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</value>
+  </data>
+
+  <data name="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+    <value>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</value>
+  </data>
+
+  <data name="CommonSdk.NonExistentProjectReference">
+    <value>MSB9008: The referenced project {0} does not exist.</value>
+  </data>
+
   <!--
         The tasks message bucket is: MSB3001 - MSB3999
 
@@ -3142,7 +3209,7 @@
 
             MSB4000 - MSB4200   Portable targets & tasks (vsproject\flavors\portable\msbuild)
             MSB9000 - MSB9900   MSBuild targets files (C++)
-            
+
             MSB9901 - MSB9990   MSBuild common targets messages
 
         The following codes are not longer used but have shipped so should not be reused:
diff --git a/src/Tasks/Resources/xlf/Strings.cs.xlf b/src/Tasks/Resources/xlf/Strings.cs.xlf
index e4d7888b40c..ed494375293 100644
--- a/src/Tasks/Resources/xlf/Strings.cs.xlf
+++ b/src/Tasks/Resources/xlf/Strings.cs.xlf
@@ -37,6 +37,14 @@
         <target state="translated">Došlo k potížím při analýze atributu newVersion. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: Explicitně nastavená jazyková verze {0} pro položku {1} byla přepsána odvozenou jazykovou verzí {2}, protože nebyla nastavena vlastnost RespectAlreadyAssignedItemCulture.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">Mapování platformy {0} v seznamu mapování platforem {1} má chybný tvar.  Smí se předat jenom seznam dvojic řetězcových konstant oddělených znakem =, které jsou od sebe odděleny středníkem, např. foo=bar;foo2=bar2.</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: Pozdržené podepisování požaduje, aby byl určen alespoň veřejný klíč.  Zadejte veřejný klíč pomocí vlastnosti KeyFile nebo KeyContainer, nebo zakažte pozdržené podepisování.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: Atribut {0} elementu &lt;{1}&gt; v úloze{2} byl nastaven, ale je prázdný. Ujistěte se, že atribut má správnou hodnotu.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: Hodnota {0} není nastavena nebo je prázdná. Pokud {1} má hodnotu false, nezapomeňte pro hodnotu {0} nastavit neprázdnou hodnotu.</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: Hodnota {0} není nastaven. Pokud {1} má hodnotu true, nezapomeňte nastavit hodnotu pro {0}.</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: Hodnota vlastnosti BaseIntermediateOutputPath byla po použití nástrojem MSBuild upravena, což může vést k neočekávaným výsledkům sestavení. Nástroje jako NuGet budou místo toho zapisovat výstupy do cesty určené parametrem MSBuildProjectExtensionsPath. Chcete-li nastavit tuto vlastnost, je třeba provést před importem souboru Microsoft.Common.props, například pomocí vlastnosti Directory.Build.props.  Další informace najdete na https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">Vnitřní chyba MSBuild: Cíl GetTargetFrameworks, který není CrossTargeting, by se neměl používat v sestavení křížového cílení (vnějšího)</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Přeskakuje se nepublikovatelný projekt.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">Publikování je platné jenom pro typy projektů Aplikace pro Windows nebo Konzolová aplikace.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">Vlastnost BaseOutputPath/OutputPath není nastavena pro '{0}' projektu.  Zkontrolujte prosím, jestli jste pro tento projekt zadali platnou kombinaci konfigurace a platformy.  Configuration='{1}' Platform='{2}'. Tato chyba se může zobrazit i v případě, že se některý jiný projekt pokouší sledovat odkaz mezi projekty na tento projekt, projekt se uvolnil nebo není zahrnutý v řešení a odkazující projekt se nestaví pomocí stejné nebo ekvivalentní konfigurace nebo platformy.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">Vlastnost BaseOutputPath/OutputPath není nastavena pro '{0}' projektu.  Zkontrolujte prosím, jestli jste pro tento projekt zadali platnou kombinaci konfigurace a platformy.  Configuration='{1}' Platform='{2}'. Tato zpráva se vám může zobrazit, protože se pokoušíte sestavit projekt bez souboru řešení a zadali jste jinou než výchozí konfiguraci nebo platformu, která pro tento projekt neexistuje.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: Hodnota vlastnosti MSBuildProjectExtensionsPath byla po použití nástrojem MSBuild upravena, což může vést k neočekávaným výsledkům sestavení.  Chcete-li nastavit tuto vlastnost, je třeba provést před importem souboru Microsoft.Common.props, například pomocí vlastnosti Directory.Build.props.  Další informace najdete na https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} typ položky je zastaralý. Místo toho vygeneruje položky EmbeddedResource s metadaty WithCulture='{2}', Type='{3}' a optional LogicalName.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: Možnost PreferNativeArm64 vyžaduje manifest aplikace Win32 a vzájemně se vylučuje s možností NoWin32Manifest.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: Odkazovaný projekt {0} neexistuje.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: Pokud je povolená možnost PreferNativeArm64, ujistěte se, že je platforma nastavená na AnyCPU. Aktuální platforma: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: Možnosti Prefer32Bit a PreferNativeArm64 se vzájemně vylučují. Povolte prosím jenom jednu z nich.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">{0} musí končit koncovým lomítkem.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">Nelze spustit '{0}', protože typ výstupu projektu není '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">K publikování tohoto projektu se vyžaduje podpisový klíč. Zadejte hodnotu ManifestKeyFile nebo ManifestCertificateThumbprint. Publikováním z Visual Studio se automaticky nakonfiguruje podpisový klíč pro tento projekt.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: Zadaná závažnost není relevantní: {0} pro zprávu: {1}.</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} typ položky je zastaralý. Použijte místo toho položky EmbeddedResource.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: Závažná chyba: víc než {0} argumentů příkazového řádku</target>
diff --git a/src/Tasks/Resources/xlf/Strings.de.xlf b/src/Tasks/Resources/xlf/Strings.de.xlf
index 24f91f6a13f..8bd7effeaef 100644
--- a/src/Tasks/Resources/xlf/Strings.de.xlf
+++ b/src/Tasks/Resources/xlf/Strings.de.xlf
@@ -37,6 +37,14 @@
         <target state="translated">Problem beim Analysieren des newVersion-Attributs. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: Die explizite Festlegung der Kultur „{0}“ für das Element „{1}“ wurde mit der abgeleiteten Kultur „{2}“ überschrieben, da die RespectAlreadyAssignedItemCulture-Eigenschaft nicht festgelegt wurde.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">Die Plattformzuordnung "{0}" in der Plattformzuordnungsliste "{1}" ist falsch formatiert.  Übergeben Sie nur eine durch Semikolons getrennte Liste von konstanten Zeichenfolgenwerten, die durch "=" getrennt sind, z. B. "foo=bar;foo2=bar2".</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: Für verzögertes Signieren muss mindestens ein öffentlicher Schlüssel angegeben werden.  Geben Sie entweder einen öffentlichen Schlüssel mithilfe der KeyFile- oder KeyContainer-Eigenschaft an, oder deaktivieren Sie verzögertes Signieren.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: Das Attribut „{0}“ des &lt;{1}&gt;-Elements in der Aufgabe „{2}“ wurde festgelegt, ist aber leer. Stellen Sie sicher, dass das Attribut einen richtigen Wert aufweist.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: „{0}“ ist nicht festgelegt oder leer. Wenn {1} falsch ist, legen Sie für „{0}“ auf keinen Fall einen leeren Wert fest.</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: „{0}“ ist nicht festgelegt. Wenn {1} wahr ist, legen Sie auf jeden Fall einen Wert für „{0}“ fest.</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: Der Wert der Eigenschaft "BaseIntermediateOutputPath" wurde geändert, nachdem er von MSBuild verwendet wurde. Dies kann zu unerwarteten Buildergebnissen führen. Tools wie NuGet schreiben stattdessen Ausgaben in den durch "MSBuildProjectExtensionsPath" angegebenen Pfad. Um diese Eigenschaft festzulegen, müssen Sie dies tun, bevor Microsoft.Common.props importiert wird, z. B. mithilfe von Directory.Build.props.  Weitere Informationen finden Sie unter https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">Interner MSBuild-Fehler: Das Nicht-CrossTargeting-GetTargetFrameworks-Ziel darf nicht im Cross-Targeting-Build (outer) verwendet werden.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Nicht veröffentlichungsfähiges Projekt wird übersprungen.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">Die Veröffentlichung ist nur für Projekttypen vom Typ "Windows-Anwendung" oder "Konsolenanwendung" gültig.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">Die Eigenschaft "BaseOutputPath/OutputPath" ist für das Projekt '{0}' nicht festgelegt.  Stellen Sie sicher, dass Sie eine gültige Kombination aus Konfiguration und Plattform für dieses Projekt angegeben haben.  Configuration='{1}' Platform='{2}'. Dieser Fehler kann auch auftreten, wenn ein anderes Projekt versucht, einem Projekt-zu-Projekt-Verweis auf dieses Projekt zu folgen, dieses Projekt entladen wurde oder nicht in der Projektmappe enthalten ist und das verweisende Projekt nicht mit derselben oder einer äquivalenten Konfiguration oder Plattform erstellt wird.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">Die Eigenschaft "BaseOutputPath/OutputPath" ist für das Projekt '{0}' nicht festgelegt.  Stellen Sie sicher, dass Sie eine gültige Kombination aus Konfiguration und Plattform für dieses Projekt angegeben haben.  Configuration='{1}' Platform='{2}'. Diese Meldung wird möglicherweise angezeigt, weil Sie versuchen, ein Projekt ohne Projektmappendatei zu erstellen, und eine nicht standardmäßige Konfiguration oder Plattform angegeben haben, die für dieses Projekt nicht vorhanden ist.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: Der Wert der Eigenschaft "MSBuildProjectExtensionsPath" wurde geändert, nachdem sie von MSBuild verwendet wurde. Dies kann zu unerwarteten Buildergebnissen führen.  Um diese Eigenschaft festzulegen, müssen Sie dies tun, bevor Microsoft.Common.props importiert wird, z. B. mithilfe von Directory.Build.props.  Weitere Informationen finden Sie unter https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} Elementtyp ist veraltet. Geben Sie stattdessen EmbeddedResource-Elemente mit den Metadaten WithCulture='{2}', Type='{3}' und optional LogicalName aus.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: "PreferNativeArm64" erfordert ein Win32-Anwendungsmanifest und schließt sich mit "NoWin32Manifest" gegenseitig aus.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: Das referenzierte Projekt {0} ist nicht vorhanden.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: Wenn "PreferNativeArm64" aktiviert ist, stellen Sie sicher, dass die Plattform auf AnyCPU festgelegt ist. Aktuelle Plattform: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: Die Optionen "Prefer32Bit" und "PreferNativeArm64" schließen sich gegenseitig aus. Aktivieren Sie nur eine.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">Die {0} muss mit einem nachstehenden Schrägstrich enden.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">'{0}' kann nicht ausgeführt werden, da der Projektausgabetyp nicht '.exe' ist.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">Zum Veröffentlichen dieses Projekts ist ein Signaturschlüssel erforderlich. Geben Sie einen ManifestKeyFile- oder ManifestCertificateThumbprint-Wert an. Durch die Veröffentlichung über Visual Studio wird automatisch ein Signaturschlüssel für dieses Projekt konfiguriert.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: Der angegebene Schweregrad ist nicht relevant: "{0}" für die Nachricht: "{1}".</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} Elementtyp ist veraltet. Verwenden Sie stattdessen EmbeddedResource-Elemente.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: Schwerwiegender Fehler: mehr als {0} Befehlszeilenargumente.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.es.xlf b/src/Tasks/Resources/xlf/Strings.es.xlf
index c51dcaf045a..15ef00ad1aa 100644
--- a/src/Tasks/Resources/xlf/Strings.es.xlf
+++ b/src/Tasks/Resources/xlf/Strings.es.xlf
@@ -37,6 +37,14 @@
         <target state="translated">Error al analizar el atributo newVersion. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: Establecer explícitamente la referencia cultural "{0}" para el elemento "{1}" se sobrescribió con la referencia cultural deducida "{2}", porque no se estableció la propiedad 'RespectAlreadyAssignedItemCulture'.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">El formato de la asignación de plataforma "{0}" de la lista de asignaciones de plataforma "{1}" es incorrecto.  Pase solamente una lista de valores de cadena constantes delimitados por signos de punto y coma y separados por "=", p. ej., "foo=bar;foo2=bar2".</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: La firma retardada requiere que se especifique al menos una clave pública.  Proporcione una clave pública mediante las propiedades KeyFile o KeyContainer, o deshabilite la firma retardada.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: el atributo "{0}" del elemento &lt;{1}&gt; de la tarea "{2}" se ha establecido, pero está vacío. Asegúrese de que el atributo tiene un valor correcto.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: "{0}" no se ha establecido o está vacío. Cuando {1} sea false, asegúrese de establecer un valor que no esté vacío para "{0}".</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: "{0}" no se ha establecido. Cuando {1} sea true, asegúrese de establecer un valor para "{0}".</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: el valor de la propiedad "BaseIntermediateOutputPath" se modificó después de que MSBuild lo usara, lo que puede dar lugar a resultados de compilación inesperados. Las herramientas como NuGet escribirán las salidas en la ruta de acceso especificada por "MSBuildProjectExtensionsPath" en su lugar. Para establecer esta propiedad, debe hacerlo antes de importar Microsoft.Common.props, por ejemplo, mediante Directory.Build.props.  Para obtener más información, visite https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">Error interno de MSBuild: el destino GetTargetFrameworks que no es CrossTargeting no debe usarse en la compilación de destinatarios cruzados (externo).</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Omitiendo el proyecto que no se puede publicar.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">La publicación solo es válida para los tipos de proyecto "Aplicación de Windows" o "Aplicación de consola".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">La propiedad BaseOutputPath/OutputPath no está establecida para el proyecto '{0}'.  Asegúrese de que ha especificado una combinación válida de configuración y plataforma para este proyecto.  Configuration='{1}' Platform='{2}'. Este error también puede aparecer si otro proyecto está intentando seguir una referencia de proyecto a proyecto a este proyecto, este proyecto se ha descargado o no está incluido en la solución y el proyecto al que hace referencia no se compila con la misma configuración o plataforma, o si es equivalente.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">La propiedad BaseOutputPath/OutputPath no está establecida para el proyecto '{0}'.  Asegúrese de que ha especificado una combinación válida de configuración y plataforma para este proyecto.  Configuration='{1}' Platform='{2}'. Puede que vea este mensaje porque está intentando compilar un proyecto sin un archivo de solución y ha especificado una plataforma o configuración no predeterminada que no existe para este proyecto.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: el valor de la propiedad "MSBuildProjectExtensionsPath" se modificó después de que MSBuild lo usara, lo que puede dar lugar a resultados de compilación inesperados.  Para establecer esta propiedad, debe hacerlo antes de importar Microsoft.Common.props, por ejemplo, mediante Directory.Build.props.  Para obtener más información, visite https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} tipo de elemento está en desuso. Emita elementos EmbeddedResource en su lugar, con los metadatos WithCulture='{2}', Type='{3}' y LogicalName opcional.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 requiere un manifiesto de aplicación Win32 y se excluye mutuamente con NoWin32Manifest.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: el {0} de proyecto al que se hace referencia no existe.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: cuando PreferNativeArm64 esté habilitado, asegúrese de que la plataforma está establecida en AnyCPU. Plataforma actual: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: las opciones Prefer32Bit y PreferNativeArm64 se excluyen mutuamente. Habilite solo una.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">El {0} debe terminar con una barra diagonal final.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">No se puede ejecutar '{0}' porque el tipo de salida del proyecto no es '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">Se requiere una clave de firma para publicar este proyecto. Especifique un valor manifestKeyFile o ManifestCertificateThumbprint. La publicación desde Visual Studio configurará automáticamente una clave de firma para este proyecto.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: la gravedad especificada no es relevante: '{0}' para el mensaje: '{1}'.</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} tipo de elemento está en desuso. Use los elementos EmbeddedResource en su lugar.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: Error irrecuperable: más de {0} argumentos de línea de comandos.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.fr.xlf b/src/Tasks/Resources/xlf/Strings.fr.xlf
index 97da601672e..023466072c9 100644
--- a/src/Tasks/Resources/xlf/Strings.fr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.fr.xlf
@@ -37,6 +37,14 @@
         <target state="translated">Un problème s'est produit lors de l'analyse de l'attribut newVersion. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: la culture « {0} » définie explicitement pour l’élément « {1} » a été remplacée par la culture déduite « {2} » ,car la propriété « RespectAlreadyAssignedItemCulture » n’a pas été définie.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">Le mappage de plateforme "{0}" de la liste de mappage de plateforme "{1}" est incorrect.  Passez uniquement une liste séparée par des points-virgules contenant des valeurs de chaîne constantes séparées par "=" (par exemple, "foo=bar;foo2=bar2").</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: La signature différée nécessite qu'au moins une clé publique soit spécifiée.  Indiquez une clé publique à l'aide des propriétés KeyFile ou KeyContainer, ou désactivez la signature différée.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: l’attribut « {0} » de l’élément &lt;{1}&gt; de la tâche « {2} »a été défini mais est vide. Assurez-vous que l’attribut a une valeur appropriée.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: « {0} » n’est pas défini ou vide. Quand la valeur de {1} est false, veillez à définir une valeur non vide pour « {0} ».</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: « {{0}0} » n’est pas défini. Lorsque {1} la valeur est true, veillez à définir une valeur pour «{0} ».</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: la valeur de la propriété « BaseIntermediateOutputPath » a été modifiée après son utilisation par MSBuild, ce qui peut entraîner des résultats de build inattendus. Les outils tels que NuGet écrivent des sorties dans le chemin spécifié par « MSBuildProjectExtensionsPath » à la place. Pour définir cette propriété, il faut vous y prendre avant l'importation de Microsoft.Common.props, par exemple en utilisant Directory.Build.props.  Pour plus d’informations, visitez https://go.microsoft.com/fwlink/?linkid=869650 »</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">Erreur MSBuild interne : la cible GetTargetFrameworks non CrossTargeting ne doit pas être utilisée dans la build de ciblage croisé (externe)</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Projet non disponible ignoré.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">La publication n’est valide que pour les types de projet 'Application Windows' ou 'Application console'.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">La propriété BaseOutputPath/OutputPath n’est pas définie pour le projet '{0}'.  Veuillez case activée pour vous assurer que vous avez spécifié une combinaison valide de configuration et de plateforme pour ce projet.  Configuration='{1}' Plateforme='{2}'. Cette erreur peut également se produire si un autre projet tente de suivre une référence projet à projet à ce projet, que ce projet a été déchargé ou n’est pas inclus dans la solution, et que le projet de référence ne génère pas à l’aide d’une configuration ou d’une plateforme identique ou équivalente.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">La propriété BaseOutputPath/OutputPath n’est pas définie pour le projet '{0}'.  Veuillez case activée pour vous assurer que vous avez spécifié une combinaison valide de configuration et de plateforme pour ce projet.  Configuration='{1}' Plateforme='{2}'. Vous voyez peut-être ce message, car vous essayez de générer un projet sans fichier solution et vous avez spécifié une configuration ou une plateforme qui n’existe pas par défaut pour ce projet.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: la valeur de la propriété « MSBuildProjectExtensionsPath » a été modifiée après son utilisation par MSBuild, ce qui peut entraîner des résultats de build inattendus.  Pour définir cette propriété, il faut vous y prendre avant l'importation de Microsoft.Common.props, par exemple en utilisant Directory.Build.props.  Pour plus d’informations, veuillez consulter https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0} : {1} type d’élément est déconseillé. Émettez des éléments EmbeddedResource à la place, avec des métadonnées WithCulture='{2}', Type='{3}' et LogicalName facultatif.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 nécessite un manifeste d’application Win32 et s’exclue mutuellement de NoWin32Manifest.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: le projet {0} référencé n’existe pas.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: lorsque PreferNativeArm64 est activé, vérifiez que la plateforme est définie sur AnyCPU. Plateforme actuelle : {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: les options Prefer32Bit et PreferNativeArm64 s’excluent mutuellement. N’activez qu’un seul.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">Le {0} doit se terminer par une barre oblique de fin.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">Impossible d’exécuter '{0}', car le type de sortie du projet n’est pas '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">Une clé de signature est nécessaire pour publier ce projet. Spécifiez une valeur ManifestKeyFile ou ManifestCertificateThumbprint. La publication à partir de Visual Studio configurera automatiquement une clé de signature pour ce projet.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: la gravité spécifiée n’est pas pertinente : «{0}» pour le message : «{1}».</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0} : {1} type d’élément est déconseillé. Utilisez des éléments EmbeddedResource à la place.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: Erreur fatale : plus de {0} arguments de ligne de commande.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.it.xlf b/src/Tasks/Resources/xlf/Strings.it.xlf
index 931335b4567..8724e9b865a 100644
--- a/src/Tasks/Resources/xlf/Strings.it.xlf
+++ b/src/Tasks/Resources/xlf/Strings.it.xlf
@@ -37,6 +37,14 @@
         <target state="translated">Problema durante l'analisi dell'attributo newVersion. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: La cultura "{0}" impostata in maniera esplicita per l'elemento "{1}" è stata sovrascritta con la cultura dedotta "{2}" perché la proprietà 'RespectAlreadyAssignedItemCulture' non è stata impostata.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">Il mapping di piattaforma "{0}" nell'elenco dei mapping di piattaforma "{1}" non è valido. Passare solo un elenco di valori stringa costanti delimitati da punti e virgola e separati da "=", ad esempio "foo=bar;foo2=bar2".</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: la firma ritardata richiede che sia specificata almeno una chiave pubblica. Fornire una chiave pubblica usando le proprietà KeyFile o KeyContainer oppure disabilitare la firma ritardata.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: l'attributo "{0}" dell'elemento &lt;{1}&gt; nell‘attività "{2}" è stato impostato ma è vuoto. Verificare che l'attributo abbia un valore corretto.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: '{0}' non è impostato o è vuoto. Quando {1} è false, assicurarsi di impostare un valore non vuoto per '{0}'.</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: '{0}' non è impostato. Quando {1} è true, assicurarsi di impostare un valore per '{0}'.</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: il valore della proprietà "BaseIntermediateOutputPath" è stato modificato dopo essere stato usato da MSBuild e questo può causare risultati di compilazione imprevisti. Strumenti come NuGet scriveranno gli output nel percorso specificato da "MSBuildProjectExtensionsPath". Per impostare questa proprietà, è necessario eseguire questa operazione prima di importare Microsoft.Common.props, ad esempio usando Directory.Build.props.  Per altre informazioni, visita https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">Errore interno di MSBuild: la destinazione GetTargetFrameworks non CrossTargeting non deve essere usata nella compilazione cross-targeting (esterna)</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Il progetto non pubblicato verrà ignorato.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">La pubblicazione è valida solo per i tipi di progetto 'Applicazione Windows' o 'Applicazione console'.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">La proprietà BaseOutputPath/OutputPath non è impostata per il progetto '{0}'.  Assicurarsi di aver specificato una combinazione valida di Configurazione e Piattaforma per questo progetto.  Configuration='{1}' Platform='{2}'. Questo errore può verificarsi anche se un altro progetto sta tentando di seguire un riferimento da progetto a progetto a questo progetto, se il progetto è stato scaricato o non è incluso nella soluzione e il progetto di riferimento non viene compilato usando la stessa configurazione o una piattaforma equivalente.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">La proprietà BaseOutputPath/OutputPath non è impostata per il progetto '{0}'.  Assicurarsi di aver specificato una combinazione valida di Configurazione e Piattaforma per questo progetto.  Configuration='{1}' Platform='{2}'. È possibile che questo messaggio venga visualizzato perché si sta tentando di compilare un progetto senza un file di soluzione e si è specificata una configurazione o una piattaforma non predefinita che non esiste per questo progetto.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: il valore della proprietà "MSBuildProjectExtensionsPath" è stato modificato dopo essere stato usato da MSBuild e questo può causare risultati di compilazione imprevisti.  Per impostare questa proprietà, è necessario eseguire questa operazione prima di importare Microsoft.Common.props, ad esempio usando Directory.Build.props.  Per altre informazioni, visitare https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} tipo di elemento è deprecato. Creare gli elementi EmbeddedResource con i metadati WithCulture='{2}', Type='{3}' e LogicalName facoltativo.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 richiede un manifesto dell'applicazione Win32 e si esclude a vicenda con NoWin32Manifest.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: il {0} del progetto a cui si fa riferimento non esiste.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: quando l'opzione PreferNativeArm64 è abilitata, assicurarsi che la piattaforma sia impostata su AnyCPU. Piattaforma corrente: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: le opzioni Prefer32Bit e PreferNativeArm64 si escludono a vicenda. Abilitarne solo una.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">Il {0} deve terminare con una barra finale.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">Non è possibile eseguire '{0}' perché il tipo di output del progetto non è '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">Per pubblicare il progetto, è necessaria una chiave di firma. Specificare un valore ManifestKeyFile o ManifestCertificateThumbprint. La pubblicazione da Visual Studio configurerà automaticamente una chiave di firma per questo progetto.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: la gravità specificata non è rilevante: "{0}" per il messaggio: "{1}".</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} tipo di elemento è deprecato. Usare gli elementi EmbeddedResource.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: Errore irreversibile: più di {0} argomenti della riga di comando.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ja.xlf b/src/Tasks/Resources/xlf/Strings.ja.xlf
index 14d2d33a370..fb42f9471c7 100644
--- a/src/Tasks/Resources/xlf/Strings.ja.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ja.xlf
@@ -37,6 +37,14 @@
         <target state="translated">newVersion 属性の解析中に問題が発生しました。{0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: 'RespectAlreadyAssignedItemCulture' プロパティが設定されていなかったため、アイテム "{0}" の明示的に設定されたカルチャ "{1}" は、推定カルチャ "{2}" で上書きされました。</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">プラットフォーム マッピング リスト "{1}" のプラットフォーム マッピング "{0}" の形式が正しくありません。定数文字列値が "=" で分けられたセミコロン区切りリストのみ渡してください (例: "foo=bar;foo2=bar2")。</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: 遅延署名には、最低でも 1 つの公開キーを指定する必要があります。KeyFile または KeyContainer プロパティを使用して公開キーを提供するか、遅延署名を無効にしてください。</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: タスク "{2}" の &lt;{1}&gt; 要素の "{0}" 属性が設定されていますが、空です。属性に適切な値があることを確認します。</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: '{0}' が設定されていないか、空です。{1} が false の場合は、'{0}' に空でない値を設定してください。</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: '{0}' が設定されていません。{1} が true の場合は、必ず '{0}' の値を設定してください。</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: プロパティ "BaseIntermediateOutputPath" の値は MSBuild で使用された後に変更されたため、予期しないビルド結果が発生する可能性があります。NuGet などのツールは、代わりに "MSBuildProjectExtensionsPath" で指定されたパスに出力を書き込みます。このプロパティを設定するには、たとえば Directory.Build.props を使用して Microsoft.Common.props をインポートする前に設定する必要があります。 詳細については、https://go.microsoft.com/fwlink/?linkid=869650 をご覧ください。</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">内部 MSBuild エラー: CrossTargeting 以外の GetTargetFrameworks ターゲットをクロス ターゲット (外部) ビルドで使用することはできません</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">発行できないプロジェクトをスキップしています。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">発行は、'Windows アプリケーション' または 'コンソール アプリケーション' プロジェクトの種類に対してのみ有効です。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">プロジェクト '{0}' に BaseOutputPath/OutputPath プロパティが設定されていません。 このプロジェクトの構成とプラットフォームの有効な組み合わせが指定されていることを確認チェック。 Configuration='{1}' Platform='{2}'。このエラーは、他のプロジェクトがこのプロジェクトへのプロジェクト間参照に従おうとしている場合、このプロジェクトがアンロードされたか、ソリューションに含まれていない場合、および参照元のプロジェクトが同じまたは同等の構成またはプラットフォームを使用してビルドされていない場合にも表示されます。</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">プロジェクト '{0}' に BaseOutputPath/OutputPath プロパティが設定されていません。 このプロジェクトの構成とプラットフォームの有効な組み合わせが指定されていることを確認チェック。 Configuration='{1}' Platform='{2}'。ソリューション ファイルを使用せずにプロジェクトをビルドしようとして、このプロジェクトに存在しない既定以外の構成またはプラットフォームを指定したため、このメッセージが表示される可能性があります。</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: プロパティ "MSBuildProjectExtensionsPath" の値は、MSBuild によって使用された後に変更されたため、予期しないビルド結果が発生する可能性があります。 このプロパティを設定するには、たとえば Directory.Build.props を使用して Microsoft.Common.props をインポートする前に設定する必要があります。 詳細については、https://go.microsoft.com/fwlink/?linkid=869650 にアクセスしてください</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} 項目の種類は非推奨です。代わりに、メタデータ WithCulture='{2}'、Type='{3}'、およびオプションの LogicalName を使用して EmbeddedResource 項目を生成します。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 は、Win32 アプリケーション マニフェストを必要とし、NoWin32Manifest と相互に排他的です。</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: 参照されているプロジェクト {0} が存在しません。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: PreferNativeArm64 が有効である場合、プラットフォームが AnyCPU に設定されていることを確認してください。現在のプラットフォーム: {0}。</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: Prefer32Bit オプションと PreferNativeArm64 オプションは相互に排他的です。1 つだけ有効にしてください。</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">{0} の末尾はスラッシュにする必要があります。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">プロジェクト出力の種類が '.exe' されていないため、'{0}' を実行できません</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">このプロジェクトを公開するには、署名キーが必要です。ManifestKeyFile または ManifestCertificateThumbprint の値を指定してください。Visual Studioから発行すると、このプロジェクトの署名キーが自動的に構成されます。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: 指定された重要度に関連性がありません: メッセージの '{0}': '{1}'。</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} 項目の種類は非推奨です。代わりに EmbeddedResource 項目を使用してください。</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: 致命的なエラー: コマンド ライン引数が {0} を超えています。</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ko.xlf b/src/Tasks/Resources/xlf/Strings.ko.xlf
index 8200d6303e3..488674964ff 100644
--- a/src/Tasks/Resources/xlf/Strings.ko.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ko.xlf
@@ -37,6 +37,14 @@
         <target state="translated">newVersion 특성을 구문 분석하는 동안 문제가 발생했습니다. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: 'RespectAlreadyAssignedItemCulture' 속성이 설정되지 않았기 때문에 항목 "{1}"에 대해 명시적으로 설정된 문화권 "{0}"을(를) 유추된 문화권 "{2}"(으)로 덮어썼습니다.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">플랫폼 매핑 목록 "{1}"에 있는 플랫폼 매핑 "{0}"의 형식이 잘못되었습니다.  세미콜론으로 구분된 상수 문자열 값 목록만 "="로 구분하여 전달하세요. 예: "foo=bar;foo2=bar2"</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: 서명을 연기하려면 적어도 공개 키를 지정해야 합니다.  KeyFile 또는 KeyContainer 속성을 사용하여 공개 키를 제공하거나 서명 연기를 비활성화하세요.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: "{2}" 작업에서 &lt;{1}&gt; 요소의 "{0}" 특성이 설정되었지만 비어 있습니다. 특성에 적절한 값이 있는지 확인합니다.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: '{0}'이(가) 설정되지 않았거나 비어 있습니다. {1}이(가) false인 경우 '{0}'에 비어 있지 않은 값을 설정해야 합니다.</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: '{0}'이(가) 설정되지 않았습니다. {1}이(가) true인 경우 '{0}'에 값을 설정해야 합니다.</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: "BaseIntermediateOutputPath" 속성의 값이 MSBuild에서 사용된 후 수정되었으며, 이로 인해 예기치 않은 빌드 결과가 발생할 수 있습니다. NuGet과 같은 도구는 대신 "MSBuildProjectExtensionsPath"로 지정된 경로에 출력을 씁니다. 이 속성을 설정하려면 Microsoft.Common.props를 가져오기 전에 먼저 설정해야 합니다(예: Directory.Build.props 사용).  자세한 내용은 https://go.microsoft.com/fwlink/?linkid=869650"를 참조하세요.</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">내부 MSBuild 오류: 교차 대상(외부) 빌드에 CrossTargeting이 아닌 GetTargetFrameworks 대상을 사용하면 안 됩니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">게시할 수 없는 프로젝트를 건너뛰는 중입니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">게시는 'Windows 응용 프로그램' 또는 '콘솔 응용 프로그램' 프로젝트 형식에 대해서만 유효합니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">프로젝트 '{0}' BaseOutputPath/OutputPath 속성이 설정되지 않았습니다.  검사 이 프로젝트에 대해 올바른 구성 및 플랫폼 조합을 지정했는지 확인하세요.  구성='{1}' 플랫폼='{2}'. 이 오류는 다른 프로젝트에서 이 프로젝트에 대한 프로젝트 간 참조를 따르려고 하거나, 이 프로젝트가 언로드되었거나 솔루션에 포함되지 않았으며, 참조하는 프로젝트가 동일하거나 동등한 구성 또는 플랫폼을 사용하여 빌드되지 않는 경우에도 나타날 수 있습니다.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">프로젝트 '{0}' BaseOutputPath/OutputPath 속성이 설정되지 않았습니다.  검사 이 프로젝트에 대해 올바른 구성 및 플랫폼 조합을 지정했는지 확인하세요.  구성='{1}' 플랫폼='{2}'. 솔루션 파일 없이 프로젝트를 빌드하려고 하는데 이 프로젝트에 대해 존재하지 않는 기본값이 아닌 구성 또는 플랫폼을 지정했기 때문에 이 메시지가 표시될 수 있습니다.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: "MSBuildProjectExtensionsPath" 속성의 값이 MSBuild에서 사용된 후 수정되어 예기치 않은 빌드 결과가 발생할 수 있습니다.  이 속성을 설정하려면 Microsoft.Common.props를 가져오기 전에 먼저 설정해야 합니다(예: Directory.Build.props 사용).  자세한 내용은 https://go.microsoft.com/fwlink/?linkid=869650 참조하세요.</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} 항목 형식은 사용되지 않습니다. Metadata WithCulture='{2}', Type='{3}' 및 선택적 LogicalName을 사용하여 EmbeddedResource 항목을 내보내세요.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64에는 Win32 애플리케이션 매니페스트가 필요하며 NoWin32Manifest와 함께 사용할 수 없습니다.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: 참조된 프로젝트 {0} 없습니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: PreferNativeArm64를 사용하도록 설정한 경우 플랫폼이 AnyCPU로 설정되어 있는지 확인합니다. 현재 플랫폼: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: Prefer32Bit 및 PreferNativeArm64 옵션은 함께 사용할 수 없습니다. 하나만 사용하도록 설정하세요.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">{0} 후행 슬래시로 끝나야 합니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">프로젝트 출력 형식이 '.exe' 않으므로 '{0}' 실행할 수 없습니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">이 프로젝트를 게시하려면 서명 키가 필요합니다. ManifestKeyFile 또는 ManifestCertificateThumbprint 값을 지정하십시오. Visual Studio 게시하면 이 프로젝트에 대한 서명 키가 자동으로 구성됩니다.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: 지정한 심각도가 관련되지 않습니다. '{1}' 메시지의 '{0}'.</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} 항목 형식은 사용되지 않습니다. EmbeddedResource 항목을 대신 사용합니다.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: 심각한 오류: 명령줄 인수가 {0}개를 넘었습니다.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.pl.xlf b/src/Tasks/Resources/xlf/Strings.pl.xlf
index ffa383198a1..1be6493ac7e 100644
--- a/src/Tasks/Resources/xlf/Strings.pl.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pl.xlf
@@ -37,6 +37,14 @@
         <target state="translated">Wystąpił problem z analizowaniem atrybutu newVersion. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: jawnie ustawiona kultura „{0}” dla elementu „{1}” została zastąpiona wywnioskowaną kulturą „{2}”, ponieważ nie ustawiono właściwości „RespectAlreadyAssignedItemCulture”.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">Mapowanie platformy „{0}” na liście mapowania platform „{1}” ma zły format.  Przekaż tylko listę stałych wartości ciągów rozdzielonych znakiem „=” i oddzielonych średnikami (np. „foo=bar;foo2=bar2”).</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: Podpisywanie opóźnione wymaga określenia przynajmniej klucza publicznego.  Podaj klucz publiczny przy użyciu właściwości KeyFile lub KeyContainer albo wyłącz podpisywanie opóźnione.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: Atrybut „{0}” elementu &lt;{1}&gt; w zadaniu „{2}” został ustawiony, ale jest pusty. Upewnij się, że atrybut ma poprawną wartość.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: „{0}” nie jest ustawiony ani pusty. Jeśli {1} ma wartość false, ustaw wartość, która nie jest pusta dla „{0}”.</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: nie ustawiono „{0}”. Jeśli {1} ma wartość true, upewnij się, że ustawiono wartość dla „{0}”.</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: Wartość właściwości "BaseIntermediateOutputPath" została zmodyfikowana po użyciu przez program MSBuild, co może prowadzić do nieoczekiwanych wyników kompilacji. Narzędzia, takie jak NuGet, będą zamiast tego zapisywać dane wyjściowe w ścieżce określonej przez parametr "MSBuildProjectExtensionsPath". Aby ustawić tę właściwość, należy to zrobić przed zaimportowaniem elementu Microsoft.Common.props, na przykład za pomocą metody Directory.Build.props.  Aby uzyskać więcej informacji, odwiedź stronę https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">Wewnętrzny błąd MSBuild: element docelowy GetTargetFrameworks inny niż CrossTargeting nie powinien być używany w kompilacji typu cross targeting (zewnętrznej)</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Pomijanie projektu, który można cofnąć publikowania.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">Publikowanie jest prawidłowe tylko dla typów projektów "Aplikacja systemu Windows" lub "Aplikacja konsoli".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">Właściwość BaseOutputPath/OutputPath nie jest ustawiona dla '{0}' projektu.  Upewnij się, że określono prawidłową kombinację konfiguracji i platformy dla tego projektu.  Configuration='{1}' Platform='{2}'. Ten błąd może również wystąpić, jeśli inny projekt próbuje wykonać odwołanie między projektami do tego projektu, ten projekt został zwolniony lub nie jest uwzględniony w rozwiązaniu, a projekt odwołujący się nie kompiluje się przy użyciu tej samej lub równoważnej konfiguracji lub platformy.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">Właściwość BaseOutputPath/OutputPath nie jest ustawiona dla '{0}' projektu.  Upewnij się, że określono prawidłową kombinację konfiguracji i platformy dla tego projektu.  Configuration='{1}' Platform='{2}'. Być może widzisz ten komunikat, ponieważ próbujesz skompilować projekt bez pliku rozwiązania i określono inną niż domyślna konfigurację lub platformę, która nie istnieje dla tego projektu.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: Wartość właściwości "MSBuildProjectExtensionsPath" została zmodyfikowana po użyciu przez program MSBuild, co może prowadzić do nieoczekiwanych wyników kompilacji.  Aby ustawić tę właściwość, należy to zrobić przed zaimportowaniem elementu Microsoft.Common.props, na przykład za pomocą metody Directory.Build.props.  Aby uzyskać więcej informacji, odwiedź stronę https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: typ elementu {1} jest przestarzały. Zamiast tego emituj elementy EmbeddedResource z parametrami WithCulture='{2}', Type='{3}' i opcjonalną nazwą logiczną.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: element PreferNativeArm64 wymaga manifestu aplikacji Win32 i wzajemnie się wyklucza z elementem NoWin32Manifest.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: {0} projektu, do którego istnieje odwołanie, nie istnieje.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: po włączeniu elementu PreferNativeArm64 upewnij się, że platforma ma wartość AnyCPU. Bieżąca platforma: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: opcje Prefer32Bit i PreferNativeArm64 wykluczają się wzajemnie. Włącz tylko jedną.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">{0} musi kończyć się ukośnikiem końcowym.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">Nie można uruchomić '{0}', ponieważ typ wyjściowy projektu nie jest '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">Do opublikowania tego projektu jest wymagany klucz podpisywania. Określ wartość ManifestKeyFile lub ManifestCertificateThumbprint. Opublikowanie z Visual Studio spowoduje automatyczne skonfigurowanie klucza podpisywania dla tego projektu.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: określona ważność nie jest istotna: „{0}” dla komunikatu: „{1}”.</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: typ elementu {1} jest przestarzały. Zamiast tego użyj elementów EmbeddedResource.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: Błąd krytyczny: liczba argumentów wiersza polecenia większa niż {0}.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
index b1fbdae6b1e..dbf2d3b1507 100644
--- a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
@@ -37,6 +37,14 @@
         <target state="translated">Houve um problema ao analisar o atributo newVersion. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: a cultura "{0}" explicitamente definida para o item "{1}" foi substituída pela cultura inferida "{2}", porque a propriedade "RespectAlreadyAssignedItemCulture" não foi definida.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">O mapeamento de plataforma "{0}" da lista de mapeamentos de plataforma "{1}" está malformado.  Passe apenas uma lista delimitada por ponto e vírgula de valores de cadeia de caracteres constantes separados por "=", por exemplo, "foo=bar;foo2=bar2".</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: A assinatura atrasada requer que pelo menos uma chave pública seja especificada.  Forneça uma chave pública usando as propriedades KeyFile ou KeyContainer ou desabilite a assinatura atrasada.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: o atributo "{0}" do elemento &lt;{1}&gt; na tarefa "{2}" foi definido, mas está vazio. Verifique se o atributo tem um valor adequado.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: '{0}' não está definido ou está vazio. Quando {1} for falso, certifique-se de definir um valor não vazio para '{0}'.</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: '{0}' não está definido. Quando {1} for verdadeiro, certifique-se de definir um valor para '{0}'.</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: o valor da propriedade "BaseIntermediateOutputPath" foi modificado depois de ser usado pelo MSBuild, o que pode levar a resultados de build inesperados. Ferramentas como o NuGet gravarão saídas no caminho especificado por "MSBuildProjectExtensionsPath". Para definir esta propriedade, você deve fazer isso antes que Microsoft.Common.props seja importado, por exemplo, usando Directory.Build.props.  Para obter mais informações, visite https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">Erro interno do MSBuild: o destino GetTargetFrameworks sem Direcionamento Cruzado não deve ser usado no build de direcionamento cruzado (externo)</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Ignorando projeto não publicável.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">A publicação só é válida para tipos de projeto 'Aplicativo do Windows' ou 'Aplicativo de Console'.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">A propriedade BaseOutputPath/OutputPath não está definida para o projeto '{0}'.  Verifique marcar se você especificou uma combinação válida de Configuração e Plataforma para este projeto.  Configuration='{1}' Platform='{2}'. Este erro também poderá aparecer se algum outro projeto estiver tentando seguir uma referência de projeto a projeto para este projeto, este projeto tiver sido descarregado ou não estiver incluído na solução, e o projeto de referência não compilar usando a mesma Configuração ou uma Configuração ou Plataforma equivalente.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">A propriedade BaseOutputPath/OutputPath não está definida para o projeto '{0}'.  Verifique marcar se você especificou uma combinação válida de Configuração e Plataforma para este projeto.  Configuration='{1}' Platform='{2}'. Você pode estar vendo esta mensagem porque está tentando criar um projeto sem um arquivo de solução e especificou uma Configuração ou Plataforma não padrão que não existe para este projeto.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: o valor da propriedade "MSBuildProjectExtensionsPath" foi modificado depois de ser usado pelo MSBuild, o que pode levar a resultados de build inesperados.  Para definir esta propriedade, você deve fazer isso antes que Microsoft.Common.props seja importado, por exemplo, usando Directory.Build.props.  Para obter mais informações, visite https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} tipo de item foi preterido. Emita itens EmbeddedResource em vez disso, com metadados WithCulture='{2}', Type='{3}' e LogicalName opcional.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 requer um manifesto do aplicativo Win32 e é mutuamente exclusiva com NoWin32Manifest.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: o projeto referenciado {0} não existe.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: Quando PreferNativeArm64 estiver habilitado, certifique-se de que a Plataforma esteja definida como AnyCPU. Plataforma Atual: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: As opções Prefer32Bit e PreferNativeArm64 são mutuamente exclusivas. Habilite apenas um.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">O {0} deve terminar com uma barra à direita.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">Não é possível '{0}' porque o tipo de saída do projeto não '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">Uma chave de assinatura é necessária para publicar este projeto. Especifique um valor ManifestKeyFile ou ManifestCertificateThumbprint. A publicação do Visual Studio configurará automaticamente uma chave de assinatura para este projeto.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: A gravidade especificada não é relevante: '{0}' para a mensagem: '{1}'.</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} tipo de item foi preterido. Use itens EmbeddedResource.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: Erro Fatal: mais de {0} argumentos de linha de comando.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.ru.xlf b/src/Tasks/Resources/xlf/Strings.ru.xlf
index 7dd8f4c5939..1458e4be35d 100644
--- a/src/Tasks/Resources/xlf/Strings.ru.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ru.xlf
@@ -37,6 +37,14 @@
         <target state="translated">При синтаксическом анализе атрибута newVersion произошла ошибка. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: явно заданные язык и региональные параметры "{0}" для элемента "{1}" перезаписаны подразумеваемыми языком и региональными параметрами "{2}", поскольку свойство "RespectAlreadyAssignedItemCulture" не установлено.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">Неправильный формат сопоставления платформы "{0}" в списке сопоставлений платформ "{1}".  Данные должны передаваться только в виде списка, разделенного точкой с запятой, строковых констант, разделенных знаком "=". Например, "foo=bar;foo2=bar2".</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: для отложенного подписывания необходимо указать хотя бы один открытый ключ.  Укажите открытый ключ с помощью свойства KeyFile или KeyContainer либо отключите отложенное подписывание.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: атрибут "{0}" элемента &lt;{1}&gt; в задаче "{2}" установлен, но пуст. Предоставьте правильное значение атрибута.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: "{0}" не настроено или пусто. Если для {1} присвоено значение false, настройте непустое значение для "{0}".</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: "{0}" не настроено. Если для {1} присвоено значение true, настройте значение для "{0}".</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: значение свойства "BaseIntermediateOutputPath" было изменено после использования MSBuild, что может привести к непредвиденным результатам сборки. Такие инструменты, как NuGet, будут записывать выходные данные по пути, указанному в "MSBuildProjectExtensionsPath". Чтобы задать это свойство, необходимо сделать это перед импортом Microsoft.Common.props, например с помощью Directory.Build.props.  Дополнительные сведения см. в https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">Внутренняя ошибка MSBuild: целевой объект GetTargetFrameworks, отличный от CrossTargeting, не должен использоваться при межнаправленной (внешней) сборке</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Пропуск неопубликуемого проекта.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">Публикация допустима только для типов проектов "Приложение Windows" или "Консольное приложение".</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">Свойство BaseOutputPath/OutputPath не задано для проекта '{0}'.  Убедитесь проверка что для этого проекта указано допустимое сочетание конфигурации и платформы.  Configuration='{1}' Platform='{2}'. Эта ошибка также может появиться, если другой проект пытается подписаться на ссылку проекта на этот проект, этот проект был выгружен или не включен в решение, а ссылающийся проект не выполняет сборку с использованием той же или эквивалентной конфигурации или платформы.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">Свойство BaseOutputPath/OutputPath не задано для проекта '{0}'.  Убедитесь проверка что для этого проекта указано допустимое сочетание конфигурации и платформы.  Configuration='{1}' Platform='{2}'. Возможно, это сообщение отображается, так как вы пытаетесь создать проект без файла решения и указали нестандартную конфигурацию или платформу, которые не существуют для этого проекта.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: значение свойства "MSBuildProjectExtensionsPath" было изменено после его использования MSBuild, что может привести к непредвиденным результатам сборки.  Чтобы задать это свойство, необходимо сделать это перед импортом Microsoft.Common.props, например с помощью Directory.Build.props.  Дополнительные сведения см. в https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} элементов является нерекомендуемым. Вместо этого выдайте элементы EmbeddedResource с метаданными WithCulture='{2}', Type='{3}' и необязательным LogicalName.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 требует манифеста приложения Win32 и является взаимоисключающим с NoWin32Manifest.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: указанный проект {0} не существует.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: если включен PreferNativeArm64, установите для платформы значение AnyCPU. Текущая платформа: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: параметры Prefer32Bit и PreferNativeArm64 являются взаимоисключающими. Включите только один.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">Имя {0} заканчиваться конечной косой чертой.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">Не удается '{0}', так как тип выходных данных проекта '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">Для публикации этого проекта требуется ключ подписывания. Укажите значение ManifestKeyFile или ManifestCertificateThumbprint. При публикации Visual Studio будет автоматически настроен ключ подписывания для этого проекта.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: Указанная серьезность не релевантна: "{0}" для сообщения: "{1}".</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} элементов является нерекомендуемым. Используйте элементы EmbeddedResource.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: неустранимая ошибка: число аргументов командной строки превышает {0}.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.tr.xlf b/src/Tasks/Resources/xlf/Strings.tr.xlf
index ffec1acd85d..5e21f464b5d 100644
--- a/src/Tasks/Resources/xlf/Strings.tr.xlf
+++ b/src/Tasks/Resources/xlf/Strings.tr.xlf
@@ -37,6 +37,14 @@
         <target state="translated">newVersion özniteliğinin ayrıştırılmasında bir sorun oluştu. {0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: 'RespectAlreadyAssignedItemCulture' özelliği ayarlanmadığından, “{1}” öğesi için açıkça ayarlanan “{0}” kültürünün üzerine çıkarsanan “{2}” kültürü yazıldı.</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">"{1}" platform eşleme listesindeki "{0}" platform eşlemesinin biçimi bozuk.  Lütfen yalnızca "=" ile ayrılan ve noktalı virgül ile sınırlandırılmış bir sabit dize değerleri listesi geçirin. Örneğin, "foo=bar;foo2=bar2".</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: Gecikmeli imzalama, en azından bir ortak anahtar belirtilmesini gerektirir.  Lütfen KeyFile veya KeyContainer özelliklerini kullanarak bir ortak anahtar sağlayın veya gecikmeli imzalamayı devre dışı bırakın.</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: "{2}" görevindeki &lt;{1}&gt; öğesinin "{0}" özniteliği ayarlanmış ancak boş. Özniteliğin uygun bir değere sahip olduğundan emin olun.</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: '{0}' ayarlanmamış veya boş. {1} yanlış olduğunda, '{0}' için boş olmayan bir değer ayarlandığından emin olun.</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: '{0}' ayarlanmamış. {1} doğru olduğunda, '{0}' için bir değer ayarlandığından emin olun.</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: MSBuild tarafından kullanıldıktan sonra "BaseIntermediateOutputPath" özelliğinin değeri değiştirildi. Bu, beklenmeyen derleme sonuçlarına neden olabilir. NuGet gibi araçlar bunun yerine çıkışları "MSBuildProjectExtensionsPath" tarafından belirtilen yola yazacak. Bu özelliği ayarlamak için, Microsoft.Common.props içeri aktarılmadan önce , örneğin Directory.Build.props kullanarak bunu seçmelisiniz.  Daha fazla bilgi için lütfen şu adresi ziyaret https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">İç MSBuild hatası: CrossTargeting Olmayan GetTargetFrameworks hedefi, çapraz hedefleme (dış) derlemesinde kullanılmamelidir</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">Yayımdan kaldırılabilir proje atlanıyor.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">Yayımlama yalnızca 'Windows Uygulaması' veya 'Konsol Uygulaması' proje türleri için geçerlidir.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">BaseOutputPath/OutputPath özelliği proje koleksiyonu için '{0}'.  Lütfen bu proje için geçerli bir Yapılandırma ve Platform bileşimi belirtmiş olduğunuzdan emin olun.  Configuration='{1}' Platform='{2}'. Bu hata, başka bir proje bu projeye bir projeden projeye başvuru izlemeye çalışırken, bu proje kaldırıldıysa veya çözüme dahil edilmezse ve başvuran proje aynı ya da eşdeğer bir Yapılandırma veya Platform kullanılarak derlenemedi ise de bu hata görünür.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">BaseOutputPath/OutputPath özelliği proje koleksiyonu için '{0}'.  Lütfen bu proje için geçerli bir Yapılandırma ve Platform bileşimi belirtmiş olduğunuzdan emin olun.  Configuration='{1}' Platform='{2}'. Çözüm dosyası olmadan bir proje derlemeye çalıştığınız ve bu proje için varolmayan bir Yapılandırma veya Platform belirtmeye çalıştığınız için bu iletiyi görüyor olabilirsiniz.</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: MSBuild tarafından kullanılmadan sonra "MSBuildProjectExtensionsPath" özelliğinin değeri değiştirildi. Bu, beklenmeyen derleme sonuçlarına neden olabilir.  Bu özelliği ayarlamak için, Microsoft.Common.props içeri aktarılmadan önce , örneğin Directory.Build.props kullanarak bunu seçmelisiniz.  Daha fazla bilgi için lütfen şu adresi ziyaret https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}: {1} öğe türü kullanım dışı. Bunun yerine WithCulture='{2}', Type='{3}' ve isteğe bağlı LogicalName meta verileriyle EmbeddedResource öğelerini göster.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 bir Win32 uygulama bildirimi gerektirir ve NoWin32Manifest ile birbirini dışlar.</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: Başvurulan {0} yok.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: PreferNativeArm64 etkinleştirildiğinde, Platformun AnyCPU olarak ayarlandığından emin olun. Geçerli Platform: {0}.</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: Prefer32Bit ve PreferNativeArm64 seçenekleri birbirini dışlar. Lütfen yalnızca birini etkinleştirin.</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">Bu {0} sonunda eğik çizgiyle bitmelidir.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">Proje '{0}' türü çalışmadığından çalışma '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">Bu projeyi yayımlamak için bir imzalama anahtarı gerekiyor. Lütfen bir ManifestKeyFile veya ManifestCertificateThumbprint değeri belirtin. Bu projeden Visual Studio, bu proje için otomatik olarak bir imzalama anahtarı yapılandıracak.</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: Belirtilen önem derecesi ilişkili değil: '{1}' iletisi için '{0}'.</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}: {1} öğe türü kullanım dışı. Bunun yerine EmbeddedResource öğelerini kullanın.</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: Kritik Hata: Komut satırı bağımsız değişkenleri şu sayıdan fazla: {0}.</target>
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
index 230cd56322d..df77a4fa0d8 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
@@ -37,6 +37,14 @@
         <target state="translated">分析 newVersion 特性时出现问题。{0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: 由于未正确设置 “RespectAlreadyAssignedItemCulture” 属性，因此已使用推断的区域性 "{0}" 覆盖项 "{1}" 的显式设置区域性 "{2}"。</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">平台映射列表“{1}”中平台映射“{0}”的格式不正确。请只传入分号分隔的常量字符串值列表，常量字符串值以“=”分隔，例如“foo=bar;foo2=bar2”。</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: 延迟签名要求至少指定一个公钥。请使用 KeyFile 或 KeyContainer 属性提供一个公钥，或者禁用延迟签名。</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: 任务“{2}”中 &lt;{1}&gt; 元素的“{0}”属性已设置，但为空。请确保该属性具有正确的值。</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: "{0}" 未设置或为空。如果 {1} 为 false，请确保为 "{0}" 设置非空值。</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: 未设置 "{0}"。如果 {1} 为 true，请确保为 "{0}" 设置值。</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: 属性 “BaseIntermediateOutputPath” 的值已在 MSBuild 使用它后进行了修改，这可能会导致意外的生成结果。NuGet 等工具会改为将输出写入由 “MSBuildProjectExtensionsPath” 指定的路径。要设置此属性，必须在导入 Microsoft.Common.props 之前执行此操作，例如使用 Directory.Build.props。有关详细信息，请访问 https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">内部 MSBuild 错误： 非 CrossTargeting GetTargetFrameworks 目标不应用于交叉目标 (外部) 生成</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">正在跳过不可发布的项目。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">发布仅对“Windows 应用程序”或“控制台应用程序”项目类型有效。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">没有为项目 '{0}' 设置 BaseOutputPath/OutputPath 属性。 请检查以确保为此项目指定了有效的配置和平台组合。 Configuration='{1}' Platform='{2}'。如果其他项目尝试遵循对此项目的项目到项目引用、此项目已卸载或未包含在解决方案中，并且引用项目未使用相同或等效的配置或平台进行生成，则也可能出现此错误。</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">没有为项目 '{0}' 设置 BaseOutputPath/OutputPath 属性。 请检查以确保为此项目指定了有效的配置和平台组合。 Configuration='{1}' Platform='{2}'。你可能会看到此消息，因为你正在尝试生成没有解决方案文件的项目，并且为此项目指定了不存在的非默认配置或平台。</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: 属性 “MSBuildProjectExtensionsPat” 的值已在 MSBuild 使用它后进行了修改，这可能会导致意外的生成结果。要设置此属性，必须在导入 Microsoft.Common.props 之前执行此操作，例如使用 Directory.Build.props。For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}： {1} 项类型已弃用。改为发出 EmbeddedResource 项，元数据 WithCulture='{2}'、Type='{3}' 和可选 LogicalName。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 需要 Win32 应用程序清单，并且与 NoWin32Manifest 互斥。</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: 引用的项目 {0} 不存在。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: 启用 PreferNativeArm64 时，请确保平台设置为 AnyCPU。当前平台: {0}。</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: Prefer32Bit 和 PreferNativeArm64 选项互斥。请仅启用一个。</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">{0} 必须以尾部斜杠结尾。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">无法运行 '{0}'，因为未 '.exe' 项目输出类型</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">发布此项目需要签名密钥。请指定 ManifestKeyFile 或 ManifestCertificateThumbprint 值。从Visual Studio发布将自动为此项目配置签名密钥。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: 指定的严重性不相关: 消息“{1}”的“{0}”。</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}： {1} 项类型已弃用。改用 EmbeddedResource 项。</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: 严重错误: 超出 {0} 个命令行参数。</target>
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
index e76b7fe1b2b..cb6e2af101c 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
@@ -37,6 +37,14 @@
         <target state="translated">剖析 newVersion 屬性時發生問題。{0}</target>
         <note />
       </trans-unit>
+      <trans-unit id="AssignCulture.CultureOverwritten">
+        <source>MSB3002: Explicitly set culture "{0}" for item "{1}" was overwritten with inferred culture "{2}", because 'RespectAlreadyAssignedItemCulture' property was not set.</source>
+        <target state="translated">MSB3002: 因為未設定 'RespectAlreadyAssignedItemCulture' 屬性，所以已使用推斷的文化 "{2}" 覆寫項目 "{1}" 的明確設定文化 "{0}"。</target>
+        <note>
+	{StrBegin="MSB3002: "}
+	'RespectAlreadyAssignedItemCulture' should not be translated
+	</note>
+      </trans-unit>
       <trans-unit id="AssignProjectConfiguration.IllegalMappingString">
         <source>The platform mapping "{0}" in the platform mapping list "{1}" is malformed.  Please only pass in a semicolon-delimited list of constant string values separated by "=", e.g., "foo=bar;foo2=bar2".</source>
         <target state="translated">平台對應清單 "{1}" 中的平台對應 "{0}" 格式不正確。請只傳入以 "=" 分隔常數字串值的分號分隔清單，例如 "foo=bar;foo2=bar2"。</target>
@@ -131,6 +139,11 @@
         <target state="translated">MSB3654: 延遲簽署需要至少指定一個公開金鑰。請使用 KeyFile 或 KeyContainer 屬性提供公開金鑰，或停用延遲簽署。</target>
         <note>{StrBegin="MSB3654: "}</note>
       </trans-unit>
+      <trans-unit id="CodeTaskFactory.AttributeEmptyWithTaskElement">
+        <source>MSB3752: The "{0}" attribute of the &lt;{1}&gt; element in the task "{2}" has been set but is empty. Make sure the attribute has a proper value.</source>
+        <target state="translated">MSB3752: 工作 "{2}" 中 &lt;{1}&gt; 元素的 "{0}" 屬性已設定，但卻是空的。請確定屬性具有適當的值。</target>
+        <note>{StrBegin="MSB3752: "}</note>
+      </trans-unit>
       <trans-unit id="CombineTargetFrameworkInfoProperties.NotNullAndEmptyRootElementName">
         <source>MSB3991: '{0}' is not set or empty. When {1} is false, make sure to set a non-empty value for '{0}'.</source>
         <target state="translated">MSB3991: 未設定 '{0}' 或空白。當 {1} 為 false 時，請務必將 '{0}' 設定非空白值。</target>
@@ -141,26 +154,91 @@
         <target state="translated">MSB3992: 未設定 '{0}'。當 {1} 為 true 時，請務必j將 '{0}' 設定一個值。</target>
         <note>{StrBegin="MSB3992: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.NoWin32ManifestAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.BaseIntermediateOutputPathMismatchWarning">
+        <source>MSB3539: The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild which can lead to unexpected build results. Tools such as NuGet will write outputs to the path specified by the "MSBuildProjectExtensionsPath" instead. To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650"</source>
+        <target state="translated">MSB3539: "BaseIntermediateOutputPath" 屬性的值在 MSBuild 使用後遭修改，這可能會導致未預期的建置結果。NuGet 等工具會將輸出寫入 "MSBuildProjectExtensionsPath" 所指定的路徑。若要設定此屬性，您必須先執行此動作，才能匯入 Microsoft.Common.props，例如使用 Directory.Build.props。如需詳細資訊，請瀏覽 https://go.microsoft.com/fwlink/?linkid=869650"</target>
+        <note>{StrBegin="MSB3539: "} </note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.CrossTargetingGetTargetFrameworks">
+        <source>Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build</source>
+        <target state="translated">內部 MSBuild 錯誤： 非 CrossTargeting GetTargetFrameworks 目標不應用於跨目標 (外部) 組建</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.DeploymentUnpublishable">
+        <source>Skipping unpublishable project.</source>
+        <target state="translated">正在略過無法發佈的專案。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.GenerateManifestsOnlyForExe">
+        <source>Publish is only valid for 'Windows Application' or 'Console Application' project types.</source>
+        <target state="translated">發行只對「Windows 應用程式」或「控制台應用程式」項目類型有效。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingInsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.</source>
+        <target state="translated">未設定專案 '{0}' 的BaseOutputPath/OutputPath屬性。 請檢查以確定您已為此專案指定有效的組態與平台組合。 設定='{1}' 平臺='{2}'。如果其他項目嘗試遵循此專案的專案對專案參考、此專案已卸除或未包含在方案中，且參考專案未使用相同或相等的組態或平臺建置，也可能會出現此錯誤。</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.InvalidConfigurationTextWhenBuildingOutsideVisualStudio">
+        <source>The BaseOutputPath/OutputPath property is not set for project '{0}'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='{1}'  Platform='{2}'. You may be seeing this message because you are trying to build a project without a solution file, and have specified a non-default Configuration or Platform that doesn't exist for this project.</source>
+        <target state="translated">未設定專案 '{0}' 的BaseOutputPath/OutputPath屬性。 請檢查以確定您已為此專案指定有效的組態與平台組合。 設定='{1}' 平臺='{2}'。您可能會看到此訊息，因為您嘗試建置的項目沒有解決方案檔案，而且已為此專案指定不存在的非預設組態或平臺。</target>
+        <note>LOCALIZATION:  Do not localize the words "BaseOutputPath/OutputPath", "Configuration" and "Platform"</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.MSBuildProjectExtensionsPathModifiedAfterUse">
+        <source>MSB3540: The value of the property "MSBuildProjectExtensionsPath" was modified after it was used by MSBuild which can lead to unexpected build results.  To set this property, you must do so before Microsoft.Common.props is imported, for example by using Directory.Build.props.  For more information, please visit https://go.microsoft.com/fwlink/?linkid=869650</source>
+        <target state="translated">MSB3540: "MSBuildProjectExtensionsPath" 屬性的值在 MSBuild 使用後遭修改，這可能會導致未預期的建置結果。若要設定此屬性，您必須先執行此動作，才能匯入 Microsoft.Common.props，例如使用 Directory.Build.props。如需詳細資訊，請瀏覽 https://go.microsoft.com/fwlink/?linkid=869650</target>
+        <note>{StrBegin="MSB3540: "}</note>
+      </trans-unit>
+      <trans-unit id="CommonSdk.ManifestResourceWithNoCultureWarning">
+        <source>{0}: {1} item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='{2}', Type='{3}', and optional LogicalName.</source>
+        <target state="translated">{0}： {1} 項目類型已過時。請改為發出 EmbeddedResource 專案，元數據 WithCulture='{2}'、Type='{3}' 和選擇性 LogicalName。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.NoWin32ManifestAndPreferNativeArm64Enabled">
         <source>MSB9903: PreferNativeArm64 requires a Win32 application manifest and is mutually exclusive with NoWin32Manifest.</source>
         <target state="translated">MSB9903: PreferNativeArm64 需要 Win32 應用程式資訊清單，且與 NoWin32Manifest 互斥。</target>
         <note>{StrBegin="MSB9903: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.NonExistentProjectReference">
+        <source>MSB9008: The referenced project {0} does not exist.</source>
+        <target state="translated">MSB9008: 參考的專案 {0} 不存在。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.PlatformIsAnyCPUAndPreferNativeArm64Enabled">
         <source>MSB9904: When PreferNativeArm64 is enabled, ensure that the Platform is set to AnyCPU. Current Platform: {0}.</source>
         <target state="translated">MSB9904: 啟用 PreferNativeArm64 時，請確認平台已設為 AnyCPU。目前平台: {0}。</target>
         <note>{StrBegin="MSB9904: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.Prefer32BitAndPreferNativeArm64Enabled">
+      <trans-unit id="CommonSdk.Prefer32BitAndPreferNativeArm64Enabled">
         <source>MSB9902: Prefer32Bit and PreferNativeArm64 options are mutually exclusive. Please enable only one.</source>
         <target state="translated">MSB9902: Prefer32Bit 和 PreferNativeArm64 選項互斥。請只啟用一個。</target>
         <note>{StrBegin="MSB9902: "}</note>
       </trans-unit>
-      <trans-unit id="CommonTarget.SpecifiedSeverityDoesNotExist">
+      <trans-unit id="CommonSdk.PropertyWithTrailingSlash">
+        <source>The {0} must end with a trailing slash.</source>
+        <target state="translated">{0} 必須以斜線結尾。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.RunTargetDependsOnMessage">
+        <source>Cannot run '{0}' because project output type is not '.exe'</source>
+        <target state="translated">無法執行 '{0}'，因為項目輸出類型不 '.exe'</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SigningKeyRequired">
+        <source>A signing key is required in order to publish this project. Please specify a ManifestKeyFile or ManifestCertificateThumbprint value. Publishing from Visual Studio will automatically configure a signing key for this project.</source>
+        <target state="translated">需要簽署金鑰才能發佈此專案。請指定 ManifestKeyFile 或 ManifestCertificateThumbprint 值。從Visual Studio發佈將會自動設定此項目的簽署金鑰。</target>
+        <note />
+      </trans-unit>
+      <trans-unit id="CommonSdk.SpecifiedSeverityDoesNotExist">
         <source>MSB9901: The specified severity is not relevant: '{0}' for the message: '{1}'.</source>
         <target state="translated">MSB9901: 指定的嚴重性不相關: 訊息 '{1}' 的 '{0}'。</target>
         <note>{StrBegin="MSB9901: "}</note>
       </trans-unit>
+      <trans-unit id="CommonSdk.SplitResourcesByCultureEmbeddedResourceMessage">
+        <source>{0}: {1} item type is deprecated. Use EmbeddedResource items instead.</source>
+        <target state="translated">{0}： {1} 項目類型已過時。請改用 EmbeddedResource 專案。</target>
+        <note />
+      </trans-unit>
       <trans-unit id="Compiler.FatalArguments">
         <source>MSB3881: Fatal Error: more than {0} command line arguments.</source>
         <target state="translated">MSB3881: 嚴重錯誤: 命令列引數的數目超過 {0} 個。</target>
diff --git a/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs b/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
index b2bac7f674a..535156bc1fd 100644
--- a/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
+++ b/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
@@ -350,7 +350,7 @@ internal static bool TryLoadTaskBody(TaskLoggingHelper log, string taskName, str
                             if (String.IsNullOrWhiteSpace(includeAttribute?.Value))
                             {
                                 // A <Reference Include="" /> is not allowed.
-                                log.LogErrorWithCodeFromResources("CodeTaskFactory.AttributeEmptyWithElement", "Include", "Reference");
+                                log.LogErrorWithCodeFromResources("CodeTaskFactory.AttributeEmptyWithTaskElement", "Include", "Reference", taskName);
                                 return false;
                             }
 
diff --git a/src/Tasks/Warning.cs b/src/Tasks/Warning.cs
index ce60c6a1945..2f46b591c2a 100644
--- a/src/Tasks/Warning.cs
+++ b/src/Tasks/Warning.cs
@@ -3,6 +3,8 @@
 
 #nullable disable
 
+using System.Diagnostics.CodeAnalysis;
+
 namespace Microsoft.Build.Tasks
 {
     /// <summary>
@@ -36,6 +38,7 @@ public sealed class Warning : TaskExtension
         /// <summary>
         /// A link pointing to more information about the warning
         /// </summary>
+        [StringSyntax(StringSyntaxAttribute.Uri)]
         public string HelpLink { get; set; }
 
         /// <summary>
diff --git a/src/UnitTests.Shared/EngineTestEnvironment.cs b/src/UnitTests.Shared/EngineTestEnvironment.cs
index 12953a61178..9f543926223 100644
--- a/src/UnitTests.Shared/EngineTestEnvironment.cs
+++ b/src/UnitTests.Shared/EngineTestEnvironment.cs
@@ -3,6 +3,7 @@
 
 using System;
 using System.Collections.Generic;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using System.Linq;
 using System.Reflection;
@@ -90,7 +91,7 @@ public TransientProjectCollection CreateProjectCollection()
         /// <param name="files">Files to be created.</param>
         /// <param name="relativePathFromRootToProject">Path for the specified files to be created in relative to
         /// the root of the project directory.</param>
-        public TransientTestProjectWithFiles CreateTestProjectWithFiles(string projectFileName, string projectContents, string[] files = null, string relativePathFromRootToProject = ".")
+        public TransientTestProjectWithFiles CreateTestProjectWithFiles(string projectFileName, [StringSyntax(StringSyntaxAttribute.Xml)] string projectContents, string[] files = null, string relativePathFromRootToProject = ".")
             => WithTransientTestState(new TransientTestProjectWithFiles(projectFileName, projectContents, files, relativePathFromRootToProject));
 
         /// <summary>
@@ -101,7 +102,7 @@ public TransientTestProjectWithFiles CreateTestProjectWithFiles(string projectFi
         /// <param name="files">Files to be created.</param>
         /// <param name="relativePathFromRootToProject">Path for the specified files to be created in relative to
         /// the root of the project directory.</param>
-        public TransientTestProjectWithFiles CreateTestProjectWithFiles(string projectContents, string[] files = null, string relativePathFromRootToProject = ".")
+        public TransientTestProjectWithFiles CreateTestProjectWithFiles([StringSyntax(StringSyntaxAttribute.Xml)] string projectContents, string[] files = null, string relativePathFromRootToProject = ".")
             => CreateTestProjectWithFiles("build.proj", projectContents, files, relativePathFromRootToProject);
     }
 
@@ -117,7 +118,7 @@ public class TransientTestProjectWithFiles : TransientTestState
 
         public TransientTestProjectWithFiles(
             string projectFileName,
-            string projectContents,
+            [StringSyntax(StringSyntaxAttribute.Xml)] string projectContents,
             string[] files,
             string relativePathFromRootToProject = ".")
         {
diff --git a/src/UnitTests.Shared/ObjectModelHelpers.cs b/src/UnitTests.Shared/ObjectModelHelpers.cs
index f70abcc7bfa..99d1e251890 100644
--- a/src/UnitTests.Shared/ObjectModelHelpers.cs
+++ b/src/UnitTests.Shared/ObjectModelHelpers.cs
@@ -5,6 +5,7 @@
 using System.Collections;
 using System.Collections.Concurrent;
 using System.Collections.Generic;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using System.Linq;
 using System.Runtime.InteropServices;
@@ -118,7 +119,7 @@ public static ProjectItem AssertSingleItem(Project p, string type, string itemIn
             return items[0];
         }
 
-        public static void AssertItemEvaluationFromProject(string projectContents, string[] inputFiles, string[] expectedInclude, Dictionary<string, string>[] expectedMetadataPerItem = null, bool normalizeSlashes = false, bool makeExpectedIncludeAbsolute = false)
+        public static void AssertItemEvaluationFromProject([StringSyntax(StringSyntaxAttribute.Xml)] string projectContents, string[] inputFiles, string[] expectedInclude, Dictionary<string, string>[] expectedMetadataPerItem = null, bool normalizeSlashes = false, bool makeExpectedIncludeAbsolute = false)
         {
             AssertItemEvaluationFromGenericItemEvaluator((p, c) =>
                 {
@@ -135,7 +136,7 @@ public static void AssertItemEvaluationFromProject(string projectContents, strin
             normalizeSlashes);
         }
 
-        public static void AssertItemEvaluationFromGenericItemEvaluator(Func<string, ProjectCollection, IList<ITestItem>> itemEvaluator, string projectContents, string[] inputFiles, string[] expectedInclude, bool makeExpectedIncludeAbsolute = false, Dictionary<string, string>[] expectedMetadataPerItem = null, bool normalizeSlashes = false)
+        public static void AssertItemEvaluationFromGenericItemEvaluator(Func<string, ProjectCollection, IList<ITestItem>> itemEvaluator, [StringSyntax(StringSyntaxAttribute.Xml)] string projectContents, string[] inputFiles, string[] expectedInclude, bool makeExpectedIncludeAbsolute = false, Dictionary<string, string>[] expectedMetadataPerItem = null, bool normalizeSlashes = false)
         {
             using (var env = TestEnvironment.Create())
             using (var collection = new ProjectCollection())
@@ -587,7 +588,7 @@ public static void AssertFileExistsInTempProjectDirectory(string fileRelativePat
         /// </summary>
         /// <param name="projectFileContents"></param>
         /// <returns></returns>
-        public static string CleanupFileContents(string projectFileContents)
+        public static string CleanupFileContents([StringSyntax(StringSyntaxAttribute.Xml)] string projectFileContents)
         {
             StringBuilder temp = new (projectFileContents);
 
@@ -602,7 +603,7 @@ public static string CleanupFileContents(string projectFileContents)
             return temp.ToString();
         }
 
-        public static string Cleanup(this string aString)
+        public static string Cleanup([StringSyntax(StringSyntaxAttribute.Xml)] this string aString)
         {
             return CleanupFileContents(aString);
         }
@@ -660,7 +661,7 @@ public static string CreateTempFileOnDiskNoFormat(string fileContents)
             return projectFilePath;
         }
 
-        public static ProjectRootElement CreateInMemoryProjectRootElement(string projectContents, ProjectCollection collection = null, bool preserveFormatting = true)
+        public static ProjectRootElement CreateInMemoryProjectRootElement([StringSyntax(StringSyntaxAttribute.Xml)] string projectContents, ProjectCollection collection = null, bool preserveFormatting = true)
         {
             var cleanedProject = CleanupFileContents(projectContents);
 #pragma warning disable CA2000 // The return object depends on the created XML reader and project collection that should not be disposed in this scope.
@@ -716,7 +717,7 @@ public static Project CreateInMemoryProject(ProjectCollection projectCollection,
         /// <returns>Returns created <see cref="Project"/>.</returns>
         public static Project CreateInMemoryProject(
             ProjectCollection projectCollection,
-            string xml,
+            [StringSyntax(StringSyntaxAttribute.Xml)] string xml,
             string toolsVersion /* may be null */,
             params ILogger[] loggers)
         {
@@ -752,7 +753,7 @@ public static Project CreateInMemoryProject(
         /// <param name="loggerVerbosity">The required logging verbosity.</param>
         /// <returns>The <see cref="MockLogger"/> that was used during evaluation and build.</returns>
         public static MockLogger BuildProjectExpectSuccess(
-            string projectContents,
+            [StringSyntax(StringSyntaxAttribute.Xml)] string projectContents,
             ITestOutputHelper testOutputHelper = null,
             LoggerVerbosity loggerVerbosity = LoggerVerbosity.Normal)
         {
@@ -768,7 +769,7 @@ public static MockLogger BuildProjectExpectSuccess(
         /// <param name="projectContents">The project file content in string format.</param>
         /// <param name="loggers">The array of loggers to use.</param>
         public static void BuildProjectExpectSuccess(
-            string projectContents,
+            [StringSyntax(StringSyntaxAttribute.Xml)] string projectContents,
             params ILogger[] loggers)
         {
             using ProjectCollection collection = new();
@@ -782,7 +783,7 @@ public static void BuildProjectExpectSuccess(
         /// </summary>
         /// <param name="projectContents">The project file content in string format.</param>
         /// <returns>The <see cref="MockLogger"/> that was used during evaluation and build.</returns>
-        public static MockLogger BuildProjectExpectFailure(string projectContents)
+        public static MockLogger BuildProjectExpectFailure([StringSyntax(StringSyntaxAttribute.Xml)] string projectContents)
         {
             MockLogger logger = new MockLogger();
             BuildProjectExpectFailure(projectContents, logger);
@@ -796,7 +797,7 @@ public static MockLogger BuildProjectExpectFailure(string projectContents)
         /// <param name="projectContents">The project file content in string format.</param>
         /// <param name="loggers">The array of loggers to use.</param>
         public static void BuildProjectExpectFailure(
-            string projectContents,
+            [StringSyntax(StringSyntaxAttribute.Xml)] string projectContents,
             params ILogger[] loggers)
         {
             using ProjectCollection collection = new();
@@ -812,7 +813,7 @@ public static void BuildProjectExpectFailure(
         /// <param name="newExpectedProjectContents"></param>
         public static void CompareProjectContents(
             Project project,
-            string newExpectedProjectContents)
+            [StringSyntax(StringSyntaxAttribute.Xml)] string newExpectedProjectContents)
         {
             // Get the new XML for the project, normalizing the whitespace.
             string newActualProjectContents = project.Xml.RawXml;
@@ -900,7 +901,7 @@ public static void DeleteDirectory(string dir)
         /// up the file contents (replacing single-back-quote with double-quote, etc.).
         /// Silently OVERWRITES existing file.
         /// </summary>
-        public static string CreateFileInTempProjectDirectory(string fileRelativePath, string fileContents, Encoding encoding = null)
+        public static string CreateFileInTempProjectDirectory(string fileRelativePath, [StringSyntax(StringSyntaxAttribute.Xml)] string fileContents, Encoding encoding = null)
         {
             Assert.False(string.IsNullOrEmpty(fileRelativePath));
             string fullFilePath = Path.Combine(TempProjectDir, fileRelativePath);
@@ -1080,7 +1081,7 @@ public static string[] GetTempFiles(int number, DateTime lastWriteTime)
         /// <summary>
         /// Get items of item type "i" with using the item xml fragment passed in
         /// </summary>
-        public static IList<ProjectItem> GetItemsFromFragment(string fragment, bool allItems = false, bool ignoreCondition = false)
+        public static IList<ProjectItem> GetItemsFromFragment([StringSyntax(StringSyntaxAttribute.Xml)] string fragment, bool allItems = false, bool ignoreCondition = false)
         {
             string content = FormatProjectContentsWithItemGroupFragment(fragment);
 
@@ -1096,7 +1097,7 @@ public static IList<ProjectItem> GetItemsFromFragment(string fragment, bool allI
         /// <summary>
         /// Get the items of type "i" in the project provided
         /// </summary>
-        public static IList<ProjectItem> GetItems(string content, bool allItems = false, bool ignoreCondition = false)
+        public static IList<ProjectItem> GetItems([StringSyntax(StringSyntaxAttribute.Xml)] string content, bool allItems = false, bool ignoreCondition = false)
         {
             using ProjectRootElementFromString projectRootElementFromString = new(CleanupFileContents(content));
             ProjectRootElement projectXml = projectRootElementFromString.Project;
@@ -1109,7 +1110,7 @@ public static IList<ProjectItem> GetItems(string content, bool allItems = false,
             return item;
         }
 
-        public static string FormatProjectContentsWithItemGroupFragment(string fragment)
+        public static string FormatProjectContentsWithItemGroupFragment([StringSyntax(StringSyntaxAttribute.Xml)] string fragment)
         {
             return
                 $@"
@@ -1352,7 +1353,7 @@ public static MockLogger BuildProjectWithNewOMExpectSuccess(string content, Dict
         /// <summary>
         /// Build a project in memory using the new OM
         /// </summary>
-        private static void BuildProjectWithNewOM(string content, ref MockLogger logger, out bool result, bool allowTaskCrash, Dictionary<string, string> globalProperties = null)
+        private static void BuildProjectWithNewOM([StringSyntax(StringSyntaxAttribute.Xml)] string content, ref MockLogger logger, out bool result, bool allowTaskCrash, Dictionary<string, string> globalProperties = null)
         {
             // Replace the nonstandard quotes with real ones
             content = ObjectModelHelpers.CleanupFileContents(content);
@@ -1367,7 +1368,7 @@ private static void BuildProjectWithNewOM(string content, ref MockLogger logger,
             result = project.Build(loggers);
         }
 
-        public static void BuildProjectWithNewOMAndBinaryLogger(string content, BinaryLogger binaryLogger, out bool result, out string projectDirectory)
+        public static void BuildProjectWithNewOMAndBinaryLogger([StringSyntax(StringSyntaxAttribute.Xml)] string content, BinaryLogger binaryLogger, out bool result, out string projectDirectory)
         {
             // Replace the nonstandard quotes with real ones
             content = ObjectModelHelpers.CleanupFileContents(content);
@@ -1382,7 +1383,7 @@ public static void BuildProjectWithNewOMAndBinaryLogger(string content, BinaryLo
             projectDirectory = project.DirectoryPath;
         }
 
-        public static MockLogger BuildProjectContentUsingBuildManagerExpectResult(string content, BuildResultCode expectedResult)
+        public static MockLogger BuildProjectContentUsingBuildManagerExpectResult([StringSyntax(StringSyntaxAttribute.Xml)] string content, BuildResultCode expectedResult)
         {
             var logger = new MockLogger();
 
@@ -1393,7 +1394,7 @@ public static MockLogger BuildProjectContentUsingBuildManagerExpectResult(string
             return logger;
         }
 
-        public static BuildResult BuildProjectContentUsingBuildManager(string content, MockLogger logger, BuildParameters parameters = null)
+        public static BuildResult BuildProjectContentUsingBuildManager([StringSyntax(StringSyntaxAttribute.Xml)] string content, MockLogger logger, BuildParameters parameters = null)
         {
             // Replace the nonstandard quotes with real ones
             content = ObjectModelHelpers.CleanupFileContents(content);
@@ -1451,7 +1452,7 @@ public enum ExpectedBuildResult
         /// <summary>
         /// Verify that a drive enumerating wildcard warning is logged or exception is thrown.
         /// </summary>
-        public static void CleanContentsAndBuildTargetWithDriveEnumeratingWildcard(string content, string failOnDriveEnumerationEnvVar, string targetName, ExpectedBuildResult expectedBuildResult, ITestOutputHelper testOutput = null)
+        public static void CleanContentsAndBuildTargetWithDriveEnumeratingWildcard([StringSyntax(StringSyntaxAttribute.Xml)] string content, string failOnDriveEnumerationEnvVar, string targetName, ExpectedBuildResult expectedBuildResult, ITestOutputHelper testOutput = null)
         {
             using (var env = TestEnvironment.Create(testOutput))
             {
@@ -1559,7 +1560,9 @@ public static MockLogger BuildProjectWithNewOMExpectFailure(string content, bool
         /// </summary>
         /// <param name="newExpectedProjectContents"></param>
         /// <param name="newActualProjectContents"></param>
-        public static void CompareProjectXml(string newExpectedProjectContents, string newActualProjectContents)
+        public static void CompareProjectXml(
+            [StringSyntax(StringSyntaxAttribute.Xml)] string newExpectedProjectContents,
+            [StringSyntax(StringSyntaxAttribute.Xml)] string newActualProjectContents)
         {
             // Replace single-quotes with double-quotes, and normalize whitespace.
             newExpectedProjectContents =
@@ -1582,7 +1585,7 @@ public static void CompareProjectXml(string newExpectedProjectContents, string n
         /// <summary>
         /// Verify that the saved project content matches the provided content
         /// </summary>
-        public static void VerifyAssertProjectContent(string expected, Project project)
+        public static void VerifyAssertProjectContent([StringSyntax(StringSyntaxAttribute.Xml)] string expected, Project project)
         {
             VerifyAssertProjectContent(expected, project.Xml);
         }
@@ -1590,7 +1593,7 @@ public static void VerifyAssertProjectContent(string expected, Project project)
         /// <summary>
         /// Verify that the saved project content matches the provided content
         /// </summary>
-        public static void VerifyAssertProjectContent(string expected, ProjectRootElement project, bool ignoreFirstLineOfActual = true)
+        public static void VerifyAssertProjectContent([StringSyntax(StringSyntaxAttribute.Xml)] string expected, ProjectRootElement project, bool ignoreFirstLineOfActual = true)
         {
             VerifyAssertLineByLine(expected, project.RawXml, ignoreFirstLineOfActual);
         }
@@ -1607,7 +1610,7 @@ public static void VerifyAssertLineByLine(string expected, string actual)
         /// Write the given <see cref="projectContents"/> in a new temp directory and create the given <see cref="files"/> relative to the project
         /// </summary>
         /// <returns>the path to the temp root directory that contains the project and files</returns>
-        public static string CreateProjectInTempDirectoryWithFiles(string projectContents, string[] files, out string createdProjectFile, out string[] createdFiles, string relativePathFromRootToProject = ".")
+        public static string CreateProjectInTempDirectoryWithFiles([StringSyntax(StringSyntaxAttribute.Xml)] string projectContents, string[] files, out string createdProjectFile, out string[] createdFiles, string relativePathFromRootToProject = ".")
         {
             var root = GetTempDirectoryWithGuid();
             Directory.CreateDirectory(root);
diff --git a/src/Utilities.UnitTests/EncodingUtilities_Tests.cs b/src/Utilities.UnitTests/EncodingUtilities_Tests.cs
index 11088b58948..a56ee25c4db 100644
--- a/src/Utilities.UnitTests/EncodingUtilities_Tests.cs
+++ b/src/Utilities.UnitTests/EncodingUtilities_Tests.cs
@@ -17,7 +17,7 @@ namespace Microsoft.Build.UnitTests
     public sealed class EncodingUtilities_Tests
     {
         /// <summary>
-        /// Test the CanEncode method with and without ANSI characters to determine if they can be encoded 
+        /// Test the CanEncode method with and without ANSI characters to determine if they can be encoded
         /// in the current system encoding.
         /// </summary>
         [WindowsOnlyFact]
@@ -53,5 +53,14 @@ public void GetExternalOverriddenUILanguageIfSupportableWithEncoding_RespectsOve
 
             EncodingUtilities.GetExternalOverriddenUILanguageIfSupportableWithEncoding().ShouldBeEquivalentTo(new CultureInfo(expectedLanguage));
         }
+
+        [WindowsOnlyFact]
+        public void BatchFileEncoding_EncodingSpecificationTrueEqualsAlways()
+        {
+            const string content = @"example";
+
+            var alwaysEncoding = EncodingUtilities.BatchFileEncoding(content, EncodingUtilities.UseUtf8Always);
+            EncodingUtilities.BatchFileEncoding(content, EncodingUtilities.UseUtf8True).ShouldBe(alwaysEncoding);
+        }
     }
 }
diff --git a/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj b/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
index 3f86257bcfc..e29bd389537 100644
--- a/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
+++ b/src/Utilities.UnitTests/Microsoft.Build.Utilities.UnitTests.csproj
@@ -29,6 +29,7 @@
     <Compile Include="..\Shared\UnitTests\NativeMethodsShared_Tests.cs" />
     <Compile Include="..\Shared\UnitTests\ResourceUtilities_Tests.cs" />
     <Compile Include="..\Shared\StringExtensions.cs" />
+    <Compile Include="..\Shared\ConversionUtilities.cs" />
     <Compile Include="..\Build\BackEnd\Node\NativeMethods.cs">
       <Link>NativeMethods.cs</Link>
     </Compile>
diff --git a/src/Utilities.UnitTests/TaskLoggingHelper_Tests.cs b/src/Utilities.UnitTests/TaskLoggingHelper_Tests.cs
index b96ccfd0dde..9a3a96ef330 100644
--- a/src/Utilities.UnitTests/TaskLoggingHelper_Tests.cs
+++ b/src/Utilities.UnitTests/TaskLoggingHelper_Tests.cs
@@ -128,11 +128,13 @@ public void LogMessageWithUnmatchedCurly()
             Task t = new MockTask();
             t.BuildEngine = mockEngine;
 
+#pragma warning disable CA2241 // Format argument invalid. True! But exactly what we're testing here.
             t.Log.LogMessage("echo {");
             t.Log.LogMessageFromText("{1", MessageImportance.High);
             t.Log.LogCommandLine("{2");
             t.Log.LogWarning("{3");
             t.Log.LogError("{4");
+#pragma warning restore CA2241
 
             mockEngine.AssertLogContains("echo {");
             mockEngine.AssertLogContains("{1");
diff --git a/src/Utilities/TaskItem.cs b/src/Utilities/TaskItem.cs
index e5e53b3ff01..d43175b77aa 100644
--- a/src/Utilities/TaskItem.cs
+++ b/src/Utilities/TaskItem.cs
@@ -64,7 +64,7 @@ public sealed class TaskItem :
         /// Default constructor -- do not use.
         /// </summary>
         /// <remarks>
-        /// This constructor exists only so that the type is COM-creatable. Prefer <see cref="TaskItem(string)"/>.
+        /// This constructor exists only so that the type is COM-creatable. Prefer <see cref="TaskItem(string, bool)"/>.
         /// </remarks>
         [EditorBrowsable(EditorBrowsableState.Never)]
         public TaskItem()
@@ -75,14 +75,31 @@ public TaskItem()
         /// <summary>
         /// This constructor creates a new task item, given the item spec.
         /// </summary>
-        /// <comments>Assumes the itemspec passed in is escaped.</comments>
+        /// <comments>Assumes the itemspec passed in is escaped and represents a file path. </comments>
         /// <param name="itemSpec">The item-spec string.</param>
+        public TaskItem(string itemSpec)
+            : this(itemSpec, treatAsFilePath: true) { }
+
+        /// <summary>
+        /// This constructor creates a new task item, given the item spec.
+        /// </summary>
+        /// <comments>
+        /// Assumes the itemspec passed in is escaped.
+        /// If <see name="treatAsFilePath" /> is set to <see langword="true" />, the value in <see name="itemSpec" />
+        /// will be fixed up as a path by having any backslashes replaced with slashes.
+        /// </comments>
+        /// <param name="itemSpec">The item-spec string.</param>
+        /// <param name="treatAsFilePath">
+        /// Specifies whether or not to treat the value in <see name="itemSpec" />
+        /// as a file path and attempt to normalize it.
+        /// </param>
         public TaskItem(
-            string itemSpec)
+            string itemSpec,
+            bool treatAsFilePath)
         {
             ErrorUtilities.VerifyThrowArgumentNull(itemSpec);
 
-            _itemSpec = FileUtilities.FixFilePath(itemSpec);
+            _itemSpec = treatAsFilePath ? FileUtilities.FixFilePath(itemSpec) : itemSpec;
         }
 
         /// <summary>
diff --git a/template_feed/content/Microsoft.CheckTemplate/Check1.cs b/template_feed/content/Microsoft.CheckTemplate/Check1.cs
index d15d11436be..194e451d533 100644
--- a/template_feed/content/Microsoft.CheckTemplate/Check1.cs
+++ b/template_feed/content/Microsoft.CheckTemplate/Check1.cs
@@ -11,7 +11,8 @@ public sealed class Check1 : Check
             "Title",
             "Description",
             "Message format: {0}",
-            new CheckConfiguration());
+            new CheckConfiguration(),
+            "http://sampleHelpLink.com/X01234");
 
         public override string FriendlyName => "Company.Check1";
 
diff --git a/template_feed/content/Microsoft.CheckTemplate/Company.CheckTemplate.csproj b/template_feed/content/Microsoft.CheckTemplate/Company.CheckTemplate.csproj
index d042f74f8a1..ac2ba871161 100644
--- a/template_feed/content/Microsoft.CheckTemplate/Company.CheckTemplate.csproj
+++ b/template_feed/content/Microsoft.CheckTemplate/Company.CheckTemplate.csproj
@@ -12,12 +12,14 @@
 
   <ItemGroup>
     <None Include="Company.CheckTemplate.props" Pack="true" PackagePath="build\Company.CheckTemplate.props" />
-    <Content Include="README.md" />
+    <None Include="README.md" />
   </ItemGroup>
 
   <ItemGroup>
-    <!-- Please add IncludeInPackage field to all third party dependencies. See the example below.-->
-    <PackageReference Include="Microsoft.Build" PrivateAssets="all" IncludeInPackage="true" />
+    <PackageReference Include="Microsoft.Build" PrivateAssets="all" />
+
+    <!-- Please add IncludeInPackage field to all third party dependencies. It will help MSBuild to discover them in runtime. -->
+    <!-- <PackageReference Include="DummyDependency" PrivateAssets="all" IncludeInPackage="true"/> -->
   </ItemGroup>
 
   <Target Name="AddNuGetDlls" BeforeTargets="_GetPackageFiles">
