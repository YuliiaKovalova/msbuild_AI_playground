diff --git a/src/Build.UnitTests/BinaryLogger_Tests.cs b/src/Build.UnitTests/BinaryLogger_Tests.cs
index ef58a5567b4..73e28782ed8 100644
--- a/src/Build.UnitTests/BinaryLogger_Tests.cs
+++ b/src/Build.UnitTests/BinaryLogger_Tests.cs
@@ -216,7 +216,7 @@ public void BinaryLoggerShouldEmbedFilesViaTaskOutput()
             zipArchive.Entries.ShouldContain(zE => zE.Name.EndsWith("testtaskoutputfile.txt"));
         }
 
-        [Fact]
+        [RequiresSymbolicLinksFact]
         public void BinaryLoggerShouldEmbedSymlinkFilesViaTaskOutput()
         {
             string testFileName = "foobar.txt";
@@ -231,13 +231,7 @@ public void BinaryLoggerShouldEmbedSymlinkFilesViaTaskOutput()
             string emptyFile = testFolder.CreateFile(emptyFileName).Path;
 
             string errorMessage = string.Empty;
-            if (!NativeMethodsShared.MakeSymbolicLink(symlinkPath, testFile.Path, ref errorMessage))
-            {
-                // The environment doesn't support creating symlinks. Create an empty log file to satisfy
-                // the test requirement and skip the rest of the test.
-                File.Create(_logFile);
-                return;
-            }
+            Assert.True(NativeMethodsShared.MakeSymbolicLink(symlinkPath, testFile.Path, ref errorMessage), errorMessage);
             Assert.True(NativeMethodsShared.MakeSymbolicLink(symlinkLvl2Path, symlinkPath, ref errorMessage), errorMessage);
 
             using var buildManager = new BuildManager();
diff --git a/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj b/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
index 05d920b732b..f7493839380 100644
--- a/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
+++ b/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
@@ -122,6 +122,9 @@
     <Compile Include="..\Shared\UnitTests\LongPathSupportDisabledFactAttribute.cs">
       <Link>Shared\LongPathSupportDisabledFactAttribute.cs</Link>
     </Compile>
+    <Compile Include="..\UnitTests.Shared\RequiresSymbolicLinksFactAttribute.cs">
+      <Link>RequiresSymbolicLinksFactAttribute.cs</Link>
+    </Compile>
 
     <None Include="..\Shared\UnitTests\App.config">
       <Link>App.config</Link>
diff --git a/src/Tasks.UnitTests/Copy_Tests.cs b/src/Tasks.UnitTests/Copy_Tests.cs
index 946c24c805a..49efe5ad59f 100644
--- a/src/Tasks.UnitTests/Copy_Tests.cs
+++ b/src/Tasks.UnitTests/Copy_Tests.cs
@@ -2380,7 +2380,7 @@ public CopySymbolicLink_Tests(ITestOutputHelper testOutputHelper)
         /// <summary>
         /// DestinationFolder should work.
         /// </summary>
-        [Fact]
+        [RequiresSymbolicLinksFact]
         public void CopyToDestinationFolderWithSymbolicLinkCheck()
         {
             string sourceFile = FileUtilities.GetTemporaryFile();
@@ -2391,12 +2391,6 @@ public void CopyToDestinationFolderWithSymbolicLinkCheck()
             {
                 File.WriteAllText(sourceFile, "This is a source temp file."); // HIGHCHAR: Test writes in UTF8 without preamble.
 
-                if (!IsSymlinkingSupported(sourceFile))
-                {
-                    // The environment doesn't support creating symlinks, skip the test.
-                    return;
-                }
-
                 // Don't create the dest folder, let task do that
                 ITaskItem[] sourceFiles = { new TaskItem(sourceFile) };
 
@@ -2443,11 +2437,8 @@ public void CopyToDestinationFolderWithSymbolicLinkCheck()
             }
             finally
             {
-                File.Delete(sourceFile);
-                if (Directory.Exists(destFolder))
-                {
-                    FileUtilities.DeleteWithoutTrailingBackslash(destFolder, true);
-                }
+                File.Delete(destFile);
+                FileUtilities.DeleteWithoutTrailingBackslash(destFolder, true);
             }
         }
 
@@ -2456,22 +2447,5 @@ internal override void ErrorIfLinkFailedCheck()
         {
             base.ErrorIfLinkFailedCheck();
         }
-
-        private bool IsSymlinkingSupported(string sourceFile)
-        {
-            if (!NativeMethodsShared.IsWindows)
-            {
-                return true;
-            }
-
-            string symlinkFile = FileUtilities.GetTemporaryFile();
-            string errorMessage = null;
-            if (NativeMethodsShared.MakeSymbolicLink(symlinkFile, sourceFile, ref errorMessage))
-            {
-                File.Delete(symlinkFile);
-                return true;
-            }
-            return false;
-        }
     }
 }
diff --git a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
index e8e1b49e6ba..473207bfe6f 100644
--- a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
+++ b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
@@ -59,10 +59,10 @@
     <Compile Include="..\Shared\ProcessExtensions.cs" />
     <Compile Include="..\UnitTests.Shared\EnvironmentProvider.cs" />
     <Compile Include="..\UnitTests.Shared\RunnerUtilities.cs" />
-    
     <Compile Include="..\Shared\UnitTests\LongPathSupportDisabledFactAttribute.cs">
       <Link>Shared\LongPathSupportDisabledFactAttribute.cs</Link>
     </Compile>
+    <Compile Include="..\UnitTests.Shared\RequiresSymbolicLinksFactAttribute.cs" />
 
     <EmbeddedResource Include="SampleResx" />
     <EmbeddedResource Include="AssemblyDependency\CacheFileSamples\Microsoft.VisualStudio.LanguageServices.Implementation.csprojAssemblyReference.cache" />
