diff --git a/src/Deprecated/Engine/Choose/GroupingCollection.cs b/src/Deprecated/Engine/Choose/GroupingCollection.cs
index b743c0bc57f..89ebe3363b9 100644
--- a/src/Deprecated/Engine/Choose/GroupingCollection.cs
+++ b/src/Deprecated/Engine/Choose/GroupingCollection.cs
@@ -448,9 +448,7 @@ IItemPropertyGrouping insertionPoint
                 ChangePropertyGroupCount(1);
             }
             else if (newGroup is Choose)
-            {
                 this.chooseCount++;
-            }
         }
 
         /// <summary>
@@ -480,9 +478,7 @@ IItemPropertyGrouping newGroup
                 ChangePropertyGroupCount(1);
             }
             else if (newGroup is Choose)
-            {
                 this.chooseCount++;
-            }
         }
 
         /// <summary>
diff --git a/src/Deprecated/Engine/Conditionals/Parser.cs b/src/Deprecated/Engine/Conditionals/Parser.cs
index 77513933a76..e428728b559 100644
--- a/src/Deprecated/Engine/Conditionals/Parser.cs
+++ b/src/Deprecated/Engine/Conditionals/Parser.cs
@@ -302,9 +302,7 @@ private GenericExpressionNode Factor(string expression)
             {
                 GenericExpressionNode child = Expr(expression);
                 if (Same(expression, Token.TokenType.RightParenthesis))
-                {
                     return child;
-                }
                 else
                 {
                     errorPosition = lexer.GetErrorPosition();
@@ -395,9 +393,7 @@ private bool Same(string expression, Token.TokenType token)
                 return true;
             }
             else
-            {
                 return false;
-            }
         }
     }
 }
