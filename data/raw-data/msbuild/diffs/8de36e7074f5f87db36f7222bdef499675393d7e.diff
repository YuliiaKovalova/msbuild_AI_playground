diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 788f1b230cd..8ff2892207f 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1382,11 +1382,11 @@ internal void ExecuteSubmission<TRequestData, TResultData>(
                 submission.BuildRequestDataBase.EntryProjectsFullPath,
                 submission.BuildRequestDataBase.TargetNames,
                 (Framework.BuildRequestDataFlags)submission.BuildRequestDataBase.Flags,
-                submission.BuildResultBase.SubmissionId);
+                submission.BuildResultBase!.SubmissionId);
+
+            BuildEventContext buildEventContext = new BuildEventContext(submission.SubmissionId, 1, BuildEventContext.InvalidProjectInstanceId, BuildEventContext.InvalidProjectContextId, BuildEventContext.InvalidTargetId, BuildEventContext.InvalidTaskId);
+            ((IBuildComponentHost)this).LoggingService.LogBuildEvent(submissionStartedEvent);
 
-            // BuildEventContext buildEventContext = new BuildEventContext(submission.SubmissionId, 1, BuildEventContext.InvalidProjectInstanceId, BuildEventContext.InvalidProjectContextId, BuildEventContext.InvalidTargetId, BuildEventContext.InvalidTaskId);
-            // ((IBuildComponentHost)this).LoggingService.LogBuildEvent()
-            
             if (submission is BuildSubmission buildSubmission)
             {
                 ExecuteSubmission(buildSubmission, allowMainThreadBuild);
diff --git a/src/Build/BackEnd/Components/Logging/EventSourceSink.cs b/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
index ae86ac8c7fa..98f67b0783f 100644
--- a/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
+++ b/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
@@ -253,6 +253,7 @@ public void Consume(BuildEventArgs buildEvent)
                     RaiseProjectFinishedEvent(null, projectFinishedEvent);
                     break;
                 case BuildSubmissionStartedEventArgs buildSubmissionStartedEvent:
+                    RaiseBuildSubmissionStartedEvent(null, buildSubmissionStartedEvent);
                     break;
                 case BuildStartedEventArgs buildStartedEvent:
                     HaveLoggedBuildStartedEvent = true;
diff --git a/src/Framework/BuildSubmissionStartedEventArgs.cs b/src/Framework/BuildSubmissionStartedEventArgs.cs
index 3d9e06f2cbf..f9dc0c0da8c 100644
--- a/src/Framework/BuildSubmissionStartedEventArgs.cs
+++ b/src/Framework/BuildSubmissionStartedEventArgs.cs
@@ -11,22 +11,31 @@ namespace Microsoft.Build.Framework
     [Serializable]
     public class BuildSubmissionStartedEventArgs : BuildStatusEventArgs
     {
-        public IReadOnlyDictionary<string, string?> GlobalProperties { get; protected set; }
+        public IReadOnlyDictionary<string, string?>? GlobalProperties { get; protected set; }
 
-        public IEnumerable<string> EntryProjectsFullPath { get; protected set; }
+        public IEnumerable<string>? EntryProjectsFullPath { get; protected set; }
 
-        public ICollection<string> TargetNames { get; protected set; }
+        public ICollection<string>? TargetNames { get; protected set; }
 
-        public BuildRequestDataFlags Flags { get; protected set; }
+        public BuildRequestDataFlags? Flags { get; protected set; }
 
-        public int SubmissionId { get; protected set; }
+        public int? SubmissionId { get; protected set; }
+
+        /// <summary>
+        /// Default constructor
+        /// </summary>
+        protected BuildSubmissionStartedEventArgs()
+            : base()
+        {
+            // do nothing
+        }
 
         public BuildSubmissionStartedEventArgs(
-            IReadOnlyDictionary<string, string?> globalProperties,
-            IEnumerable<string> entryProjectsFullPath,
-            ICollection<string> targetNames,
-            BuildRequestDataFlags flags,
-            int submissionId)
+            IReadOnlyDictionary<string, string?>? globalProperties,
+            IEnumerable<string>? entryProjectsFullPath,
+            ICollection<string>? targetNames,
+            BuildRequestDataFlags? flags,
+            int? submissionId)
             : base()
         {
             GlobalProperties = globalProperties;
diff --git a/src/Shared/LogMessagePacketBase.cs b/src/Shared/LogMessagePacketBase.cs
index 3770b80c09d..c46b5e8b255 100644
--- a/src/Shared/LogMessagePacketBase.cs
+++ b/src/Shared/LogMessagePacketBase.cs
@@ -240,6 +240,11 @@ internal enum LoggingEventType : int
         /// Event is <see cref="BuildCheckAcquisitionEventArgs"/>
         /// </summary>
         BuildCheckAcquisitionEvent = 39,
+
+        /// <summary>
+        /// Event is <see cref="BuildSubmissionStartedEventArgs"/>
+        /// </summary>
+        BuildSubmissionStartedEvent = 40,
     }
     #endregion
 
@@ -624,7 +629,8 @@ private BuildEventArgs GetBuildEventArgFromId()
                 LoggingEventType.TaskFinishedEvent => new TaskFinishedEventArgs(null, null, null, null, null, false),
                 LoggingEventType.TaskCommandLineEvent => new TaskCommandLineEventArgs(null, null, MessageImportance.Normal),
                 LoggingEventType.EnvironmentVariableReadEvent => new EnvironmentVariableReadEventArgs(),
-                LoggingEventType.ResponseFileUsedEvent => new ResponseFileUsedEventArgs(null),               
+                LoggingEventType.ResponseFileUsedEvent => new ResponseFileUsedEventArgs(null),
+                LoggingEventType.BuildSubmissionStartedEvent => new BuildSubmissionStartedEventArgs(null, null, null, null, null),
 
 #if !TASKHOST // MSBuildTaskHost is targeting Microsoft.Build.Framework.dll 3.5
                 LoggingEventType.AssemblyLoadEvent => new AssemblyLoadBuildEventArgs(),
@@ -812,6 +818,10 @@ private LoggingEventType GetLoggingEventId(BuildEventArgs eventArg)
             {
                 return LoggingEventType.BuildStartedEvent;
             }
+            else if (eventType == typeof(BuildSubmissionStartedEventArgs))
+            {
+                return LoggingEventType.BuildSubmissionStartedEvent;
+            }
             else if (eventType == typeof(BuildWarningEventArgs))
             {
                 return LoggingEventType.BuildWarningEvent;
