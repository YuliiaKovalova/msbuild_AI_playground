diff --git a/src/Build/BackEnd/Components/Caching/ResultsCache.cs b/src/Build/BackEnd/Components/Caching/ResultsCache.cs
index b928c117636..27f4d8fd515 100644
--- a/src/Build/BackEnd/Components/Caching/ResultsCache.cs
+++ b/src/Build/BackEnd/Components/Caching/ResultsCache.cs
@@ -21,7 +21,7 @@ internal class ResultsCache : IResultsCache
         /// <summary>
         /// The presence of any of these flags affects build result for the specified request.
         /// </summary>
-        private readonly BuildRequestDataFlags _flagsAffectingBuildResults = BuildRequestDataFlags.ProvideProjectStateAfterBuild;
+        private const BuildRequestDataFlags FlagsAffectingBuildResults = BuildRequestDataFlags.ProvideProjectStateAfterBuild;
 
         /// <summary>
         /// The table of all build results.  This table is indexed by configuration id and
@@ -346,13 +346,13 @@ private static bool CheckResults(BuildResult result, List<string> targets, HashS
         /// <param name="buildRequestDataFlags">The current request build flags.</param>
         /// <param name="buildResultDataFlags">The existing build result data flags.</param>
         /// <returns>False if there is any difference in the data flags that can cause missed build data, true otherwise.</returns>
-        private bool CheckBuildDataFlagsResults(BuildRequestDataFlags buildRequestDataFlags, BuildRequestDataFlags buildResultDataFlags) =>
+        private static bool CheckBuildDataFlagsResults(BuildRequestDataFlags buildRequestDataFlags, BuildRequestDataFlags buildResultDataFlags) =>
 
             // Even if both buildRequestDataFlags and buildResultDataFlags have ProvideSubsetOfStateAfterBuild flag,
             // the underlying RequestedProjectState may have different user filters defined.
             // It is more reliable to ignore the cached value. 
             !buildRequestDataFlags.HasFlag(BuildRequestDataFlags.ProvideSubsetOfStateAfterBuild)
-            & (buildRequestDataFlags & _flagsAffectingBuildResults) == (buildResultDataFlags & _flagsAffectingBuildResults);
+            && (buildRequestDataFlags & FlagsAffectingBuildResults) == (buildResultDataFlags & FlagsAffectingBuildResults);
 
         public IEnumerator<BuildResult> GetEnumerator()
         {
diff --git a/src/Build/BackEnd/Shared/BuildResult.cs b/src/Build/BackEnd/Shared/BuildResult.cs
index 2d5dacf2a3f..cee4212033e 100644
--- a/src/Build/BackEnd/Shared/BuildResult.cs
+++ b/src/Build/BackEnd/Shared/BuildResult.cs
@@ -116,6 +116,9 @@ public class BuildResult : INodePacket, IBuildResults
         /// </summary>
         private ProjectInstance _projectStateAfterBuild;
 
+        /// <summary>
+        /// The flags provide additional control over the build results and may affect the cached value.
+        /// </summary>
         private BuildRequestDataFlags _buildRequestDataFlags;
 
         private string _schedulerInducedError;
@@ -384,14 +387,10 @@ public ProjectInstance ProjectStateAfterBuild
         }
 
         /// <summary>
-        /// Gets or sets the flags that provide additional control over the build request.
+        /// Gets the flags that were used in the build request to which these results are associated.
         /// See <see cref="Execution.BuildRequestDataFlags"/> for examples of the available flags.
         /// </summary>
-        public BuildRequestDataFlags BuildRequestDataFlags
-        {
-            get => _buildRequestDataFlags;
-            set => _buildRequestDataFlags = value;
-        }
+        public BuildRequestDataFlags BuildRequestDataFlags => _buildRequestDataFlags;
 
         /// <summary>
         /// Returns the node packet type.
