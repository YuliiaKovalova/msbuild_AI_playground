diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
index 3a072ff39ce..2a917d6eaee 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
@@ -484,7 +484,10 @@ internal bool AcquireAndSetUpHost(HandshakeOptions hostContext, INodePacketFacto
         /// </summary>
         internal void DisconnectFromHost(HandshakeOptions hostContext)
         {
-            ErrorUtilities.VerifyThrow(_nodeIdToPacketFactory.Remove((int)hostContext) && _nodeIdToPacketHandler.Remove((int)hostContext), "Why are we trying to disconnect from a context that we already disconnected from?  Did we call DisconnectFromHost twice?");
+            ErrorUtilities.VerifyThrow(_nodeIdToPacketFactory.ContainsKey((int)hostContext) && _nodeIdToPacketHandler.ContainsKey((int)hostContext), "Why are we trying to disconnect from a context that we already disconnected from?  Did we call DisconnectFromHost twice?");
+
+            _nodeIdToPacketFactory.Remove((int)hostContext);
+            _nodeIdToPacketHandler.Remove((int)hostContext);
         }
 
         /// <summary>
diff --git a/src/Build/Evaluation/Evaluator.cs b/src/Build/Evaluation/Evaluator.cs
index cd8fa9bb3a3..f9126e6c61f 100644
--- a/src/Build/Evaluation/Evaluator.cs
+++ b/src/Build/Evaluation/Evaluator.cs
@@ -852,7 +852,7 @@ private void PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)
                             // Defaults to false
                             _projectSupportsReturnsAttribute.TryGetValue(currentProjectOrImport, out NGen<bool> projectSupportsReturnsAttribute);
 
-                            _projectSupportsReturnsAttribute[currentProjectOrImport] = projectSupportsReturnsAttribute | (target.Returns != null);
+                            _projectSupportsReturnsAttribute[currentProjectOrImport] = projectSupportsReturnsAttribute || (target.Returns != null);
                             _targetElements.Add(target);
                             break;
                         case ProjectImportElement import:
diff --git a/src/Build/Logging/ParallelLogger/ParallelLoggerHelpers.cs b/src/Build/Logging/ParallelLogger/ParallelLoggerHelpers.cs
index 4a2c9cc981b..8b9c74e5085 100644
--- a/src/Build/Logging/ParallelLogger/ParallelLoggerHelpers.cs
+++ b/src/Build/Logging/ParallelLogger/ParallelLoggerHelpers.cs
@@ -47,7 +47,7 @@ internal void AddProjectStartedEvent(ProjectStartedEventArgs e, bool requireTime
                     int projectTargetKeyLocal = 1;
                     int projectIncrementKeyLocal;
                     // If we haven't seen this project before (by full path) then
-                    // allocate a new key for it and save it away. Otherwise, retrive it.
+                    // allocate a new key for it and save it away. Otherwise, retrieve it.
                     if (!_projectKey.TryGetValue(e.ProjectFile, out projectIncrementKeyLocal))
                     {
                         _projectIncrementKey++;
