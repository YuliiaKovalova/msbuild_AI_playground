diff --git a/src/Build/Evaluation/Expander.cs b/src/Build/Evaluation/Expander.cs
index 4d76f99f815..9c3fa0f510d 100644
--- a/src/Build/Evaluation/Expander.cs
+++ b/src/Build/Evaluation/Expander.cs
@@ -1470,10 +1470,6 @@ private static object LookupProperty(IPropertyProvider<T> properties, string pro
             private static object LookupProperty(IPropertyProvider<T> properties, string propertyName, int startIndex, int endIndex, IElementLocation elementLocation, UsedUninitializedProperties usedUninitializedProperties)
             {
                 T property = properties.GetProperty(propertyName, startIndex, endIndex);
-                if (!string.IsNullOrEmpty(property?.EvaluatedValue) && property.IsEnvironmentProperty)
-                {
-                    EnvironmentUtilities.EnvironmentVariablesUsedAsProperties[property.Name] = property.EvaluatedValue;
-                }
 
                 object propertyValue;
 
@@ -1517,6 +1513,10 @@ private static object LookupProperty(IPropertyProvider<T> properties, string pro
                 else
                 {
                     propertyValue = property.EvaluatedValueEscaped;
+                    if (!string.IsNullOrEmpty(property.EvaluatedValueEscaped) && property.IsEnvironmentProperty)
+                    {
+                        EnvironmentUtilities.EnvironmentVariablesUsedAsProperties[property.Name] = property.EvaluatedValueEscaped;
+                    }
                 }
 
                 return propertyValue;
diff --git a/src/Build/Logging/BinaryLogger/BinaryLogger.cs b/src/Build/Logging/BinaryLogger/BinaryLogger.cs
index 37e88e1afb0..0cf98ee1bb8 100644
--- a/src/Build/Logging/BinaryLogger/BinaryLogger.cs
+++ b/src/Build/Logging/BinaryLogger/BinaryLogger.cs
@@ -54,7 +54,8 @@ public sealed class BinaryLogger : ILogger
         // version 14:
         //   - TargetSkippedEventArgs: added SkipReason, OriginalBuildEventContext
         // version 15:
-        //   - Log only environment variables accessed as properties
+        //   - Don't log all environment variables at BuildStarted
+        //   - Log environment variables accessed as properties at BuildFinished
         internal const int FileFormatVersion = 15;
 
         private Stream stream;
diff --git a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
index 9aeecc7347e..ab422aca622 100644
--- a/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
+++ b/src/Build/Logging/BinaryLogger/BuildEventArgsReader.cs
@@ -362,7 +362,7 @@ private BuildEventArgs ReadBuildFinishedEventArgs()
         {
             var fields = ReadBuildEventArgsFields();
             var succeeded = ReadBoolean();
-            var environmentProperties = ReadStringDictionary();
+            var environmentProperties = fileFormatVersion >= 15 ? ReadStringDictionary() : null;
 
             var e = new BuildFinishedEventArgs(
                 fields.Message,
diff --git a/src/Framework/BuildFinishedEventArgs.cs b/src/Framework/BuildFinishedEventArgs.cs
index 1e3accf4353..54224f38b52 100644
--- a/src/Framework/BuildFinishedEventArgs.cs
+++ b/src/Framework/BuildFinishedEventArgs.cs
@@ -159,12 +159,6 @@ public bool Succeeded
         /// <summary>
         /// Gets all environment variables read when trying to evaluate properties along with their values.
         /// </summary>
-        public IDictionary<string, string> EnvironmentVariables
-        {
-            get
-            {
-                return environmentVariables;
-            }
-        }
+        public IDictionary<string, string> EnvironmentVariables => environmentVariables;
     }
 }
diff --git a/src/Shared/EnvironmentUtilities.cs b/src/Shared/EnvironmentUtilities.cs
index 0e875a72fe3..97b4e53a1a4 100644
--- a/src/Shared/EnvironmentUtilities.cs
+++ b/src/Shared/EnvironmentUtilities.cs
@@ -4,8 +4,7 @@
 using System;
 using System.Collections.Generic;
 using System.Runtime.InteropServices;
-
-#nullable disable
+using Microsoft.Build.Collections;
 
 namespace Microsoft.Build.Shared
 {
@@ -16,6 +15,6 @@ internal static partial class EnvironmentUtilities
         public static bool Is64BitOperatingSystem =>
             Environment.Is64BitOperatingSystem;
 
-        public static Dictionary<string, string> EnvironmentVariablesUsedAsProperties { get; } = new();
+        public static Dictionary<string, string> EnvironmentVariablesUsedAsProperties { get; } = new(MSBuildNameIgnoreCaseComparer.Default);
     }
 }
