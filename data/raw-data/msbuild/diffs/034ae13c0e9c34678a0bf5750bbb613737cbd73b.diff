diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 551bbd67a1a..a6416682b00 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1026,128 +1026,6 @@ public static ExitType Execute(
             return exitType;
         }
 
-        private static void PrintPropertiesInJsonFormat(string[] propertyNames, Func<string, string> getProperty)
-        {
-            if (propertyNames.Length == 0)
-            {
-                return;
-            }
-
-            Console.WriteLine("\t\"Properties\":");
-            Console.WriteLine("\t{");
-            foreach (string property in propertyNames)
-            {
-                Console.WriteLine($"\t\t\"{property}\": \"{getProperty(property)}\",");
-            }
-
-            Console.WriteLine("\t},");
-        }
-
-        private static void PrintItemInstancesInJsonFormat(string[] itemNames, ProjectInstance project)
-        {
-            if (itemNames.Length == 0)
-            {
-                return;
-            }
-
-            Console.WriteLine("\t\"Items\":");
-            Console.WriteLine("\t{");
-            foreach (string itemName in itemNames)
-            {
-                Console.WriteLine($"\t\t\"{itemName}\":");
-                Console.WriteLine("\t\t[");
-                foreach (ProjectItemInstance item in project.GetItems(itemName))
-                {
-                    Console.WriteLine("\t\t\t{");
-                    foreach (ProjectMetadataInstance metadatum in item.Metadata)
-                    {
-                        Console.WriteLine($"\t\t\t\t\"{metadatum.Name}\": \"{metadatum.EvaluatedValue}\",");
-                    }
-
-                    foreach (string metadatumName in FileUtilities.ItemSpecModifiers.All)
-                    {
-                        Console.WriteLine($"\t\t\t\t\"{metadatumName}\": \"{item.GetMetadataValue(metadatumName)}\",");
-                    }
-
-                    Console.WriteLine("\t\t\t},");
-                }
-
-                Console.WriteLine("\t\t],");
-            }
-
-            Console.WriteLine("\t},");
-        }
-
-        private static void PrintItemsInJsonFormat(string[] itemNames, Project project)
-        {
-            if (itemNames.Length == 0)
-            {
-                return;
-            }
-
-            Console.WriteLine("\t\"Items\":");
-            Console.WriteLine("\t{");
-            foreach (string itemName in itemNames)
-            {
-                Console.WriteLine($"\t\t\"{itemName}\":");
-                Console.WriteLine("\t\t[");
-                foreach (ProjectItem item in project.GetItems(itemName))
-                {
-                    Console.WriteLine("\t\t\t{");
-                    foreach (ProjectMetadata metadatum in item.Metadata)
-                    {
-                        Console.WriteLine($"\t\t\t\t\"{metadatum.Name}\": \"{metadatum.EvaluatedValue}\",");
-                    }
-
-                    foreach (string metadatumName in FileUtilities.ItemSpecModifiers.All)
-                    {
-                        Console.WriteLine($"\t\t\t\t\"{metadatumName}\": \"{item.GetMetadataValue(metadatumName)}\",");
-                    }
-
-                    Console.WriteLine("\t\t\t},");
-                }
-
-                Console.WriteLine("\t\t],");
-            }
-
-            Console.WriteLine("\t},");
-        }
-
-        private static void PrintTargetResultsInJsonFormat(string[] targetNames, BuildResult result)
-        {
-            if (targetNames.Length == 0)
-            {
-                return;
-            }
-
-            Console.WriteLine("\t\"Target Results\":");
-            Console.WriteLine("\t{");
-            foreach (string targetName in targetNames)
-            {
-                TargetResult targetResult = result.ResultsByTarget[targetName];
-                Console.WriteLine($"\t\t\"{targetName}\":");
-                Console.WriteLine("\t\t{");
-                Console.WriteLine($"\t\t\t\"Result\": \"{targetResult.ResultCode}\"");
-                Console.WriteLine($"\t\t\t\"Items\":");
-                Console.WriteLine("\t\t\t[");
-                foreach (ITaskItem item in targetResult.Items)
-                {
-                    Console.WriteLine("\t\t\t\t{");
-                    foreach (KeyValuePair<string, string> metadatum in item.EnumerateMetadata())
-                    {
-                        Console.WriteLine($"\t\t\t\t\t\"{metadatum.Key}\": \"{metadatum.Value}\",");
-                    }
-
-                    Console.WriteLine("\t\t\t\t},");
-                }
-
-                Console.WriteLine("\t\t\t],");
-                Console.WriteLine("\t\t},");
-            }
-
-            Console.WriteLine("\t},");
-        }
-
         /// <summary>
         /// Handler for when CTRL-C or CTRL-BREAK is called.
         /// CTRL-BREAK means "die immediately"
