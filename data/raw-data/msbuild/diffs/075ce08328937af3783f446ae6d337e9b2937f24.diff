diff --git a/src/Build/ElementLocation/ElementLocation.cs b/src/Build/ElementLocation/ElementLocation.cs
index 528c5facd81..9c55a7720e2 100644
--- a/src/Build/ElementLocation/ElementLocation.cs
+++ b/src/Build/ElementLocation/ElementLocation.cs
@@ -212,21 +212,6 @@ internal static ElementLocation Create(string? file, int line, int column)
         /// </summary>
         private class RegularElementLocation : ElementLocation
         {
-            /// <summary>
-            /// The source file.
-            /// </summary>
-            private string file;
-
-            /// <summary>
-            /// The source line.
-            /// </summary>
-            private int line;
-
-            /// <summary>
-            /// The source column.
-            /// </summary>
-            private int column;
-
             /// <summary>
             /// Constructor for the case where we have most or all information.
             /// Numerical values must be 1-based, non-negative; 0 indicates unknown
@@ -234,9 +219,9 @@ private class RegularElementLocation : ElementLocation
             /// </summary>
             internal RegularElementLocation(string file, int line, int column)
             {
-                this.file = file;
-                this.line = line;
-                this.column = column;
+                File = file;
+                Line = line;
+                Column = column;
             }
 
             /// <summary>
@@ -246,10 +231,7 @@ internal RegularElementLocation(string file, int line, int column)
             /// If not known, returns empty string.
             /// </summary>
             [DebuggerBrowsable(DebuggerBrowsableState.Never)]
-            public override string File
-            {
-                get { return file; }
-            }
+            public override string File { get; }
 
             /// <summary>
             /// The line number where this element exists in its file.
@@ -257,10 +239,7 @@ public override string File
             /// Zero indicates "unknown location".
             /// </summary>
             [DebuggerBrowsable(DebuggerBrowsableState.Never)]
-            public override int Line
-            {
-                get { return line; }
-            }
+            public override int Line { get; }
 
             /// <summary>
             /// The column number where this element exists in its file.
@@ -268,10 +247,7 @@ public override int Line
             /// Zero indicates "unknown location".
             /// </summary>
             [DebuggerBrowsable(DebuggerBrowsableState.Never)]
-            public override int Column
-            {
-                get { return column; }
-            }
+            public override int Column { get; }
         }
 
         /// <summary>
@@ -285,11 +261,6 @@ public override int Column
         /// </summary>
         private class SmallElementLocation : ElementLocation
         {
-            /// <summary>
-            /// The source file.
-            /// </summary>
-            private string file;
-
             /// <summary>
             /// Packs both the line and column values into a single four-byte element.
             /// The high two bytes are the line, and low two bytes are the column.
@@ -308,7 +279,7 @@ private class SmallElementLocation : ElementLocation
             /// </summary>
             internal SmallElementLocation(string file, int line, int column)
             {
-                this.file = file;
+                File = file;
                 packedData = (line << 16) | column;
             }
 
@@ -319,10 +290,7 @@ internal SmallElementLocation(string file, int line, int column)
             /// If not known, returns empty string.
             /// </summary>
             [DebuggerBrowsable(DebuggerBrowsableState.Never)]
-            public override string File
-            {
-                get { return file; }
-            }
+            public override string File { get; }
 
             /// <summary>
             /// The line number where this element exists in its file.
