diff --git a/src/Build.UnitTests/BackEnd/BuildManager_Logging_Tests.cs b/src/Build.UnitTests/BackEnd/BuildManager_Logging_Tests.cs
index f86d7d1c33e..f454dc1161d 100644
--- a/src/Build.UnitTests/BackEnd/BuildManager_Logging_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/BuildManager_Logging_Tests.cs
@@ -80,7 +80,7 @@ public BuildManager_Logging_Tests(ITestOutputHelper output)
 
         [DotNetOnlyTheory]
         [InlineData("1", true)]
-        [InlineData("0", false)]
+        // [InlineData("0", true)] <-- explicitly opting out on core will lead to node crash (as documented)
         [InlineData(null, true)]
         public void Build_WithCustomBuildArgs_NetCore(string envVariableValue, bool isWarningExpected)
             => TestCustomEventWarning<BuildErrorEventArgs>(envVariableValue, isWarningExpected);
diff --git a/src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs b/src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs
index 5bf7c1a47eb..26fda9f36ae 100644
--- a/src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/TaskHostFactory_Tests.cs
@@ -61,9 +61,20 @@ public void TaskNodesDieAfterBuild()
             }
         }
 
-        [Theory]
+        [DotNetOnlyTheory]
+        [InlineData(false)]
+        // [InlineData(true)] <-- explicitly opting out on core will lead to node crash
+        public void VariousParameterTypesCanBeTransmittedToAndReceivedFromTaskHost_NetCore(
+            bool testLegacyImplementation)
+            => VariousParameterTypesCanBeTransmittedToAndReceivedFromTaskHost(testLegacyImplementation);
+
+        [WindowsFullFrameworkOnlyTheory]
         [InlineData(false)]
         [InlineData(true)]
+        public void VariousParameterTypesCanBeTransmittedToAndReceivedFromTaskHost_Framework(
+            bool testLegacyImplementation)
+            => VariousParameterTypesCanBeTransmittedToAndReceivedFromTaskHost(testLegacyImplementation);
+
         public void VariousParameterTypesCanBeTransmittedToAndReceivedFromTaskHost(bool testLegacyImplementation)
         {
             using TestEnvironment env = TestEnvironment.Create(_output);
