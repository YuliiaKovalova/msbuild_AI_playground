diff --git a/src/Build/Logging/FancyLogger/ANSIBuilder.cs b/src/Build/Logging/FancyLogger/ANSIBuilder.cs
index a75fe44d23a..83fa80247de 100644
--- a/src/Build/Logging/FancyLogger/ANSIBuilder.cs
+++ b/src/Build/Logging/FancyLogger/ANSIBuilder.cs
@@ -6,12 +6,48 @@
 using System.Collections.Generic;
 using System.Linq;
 using System.Text;
+using System.Text.RegularExpressions;
 using System.Threading.Tasks;
 
 namespace Microsoft.Build.Logging.FancyLogger
 {
     internal static class ANSIBuilder
     {
+        public static string ANSIRemove(string text)
+        {
+            return Regex.Replace(text, "\\x1b(?:[@-Z\\-_]|\\[[0-?]*[ -\\/]*[@-~])", "");
+        }
+        public static class Justification
+        {
+            public static string Center(string text)
+            {
+                string result = String.Empty;
+                string noFormatString = ANSIRemove(text);
+                int space = (Console.BufferWidth - noFormatString.Length) / 2;
+                result += new string(' ', space);
+                result += text;
+                result += new string(' ', space);
+                return result;
+            }
+            public static string Right(string text)
+            {
+                string result = String.Empty;
+                string noFormatString = ANSIRemove(text);
+                int space = Console.BufferWidth - noFormatString.Length;
+                result += new string(' ', space);
+                result += text;
+                return result;
+            }
+            public static string Left(string text)
+            {
+                string result = String.Empty;
+                string noFormatString = ANSIRemove(text);
+                int space = Console.BufferWidth - noFormatString.Length;
+                result += text;
+                result += new string(' ', space);
+                return result;
+            }
+        }
         public static class Formatting
         {
             public enum ForegroundColor
diff --git a/src/Build/Logging/FancyLogger/FancyLogger.cs b/src/Build/Logging/FancyLogger/FancyLogger.cs
index e06c7ee4a3f..62718bb90bf 100644
--- a/src/Build/Logging/FancyLogger/FancyLogger.cs
+++ b/src/Build/Logging/FancyLogger/FancyLogger.cs
@@ -8,6 +8,11 @@
 
 namespace Microsoft.Build.Logging.FancyLogger
 {
+    // TODO: Move to separate file
+    class FancyLoggerNode
+    {
+        public FancyLoggerNode() { }
+    }
     public class FancyLogger : ILogger
     {
         public Dictionary<int, FancyLoggerBufferLine> projectConsoleLines = new Dictionary<int, FancyLoggerBufferLine>();
@@ -15,7 +20,7 @@ public class FancyLogger : ILogger
         public Dictionary<int, FancyLoggerBufferLine> taskConsoleLines = new Dictionary<int, FancyLoggerBufferLine>();
 
         private float existingTasks = 1;
-        private float completedTasks = 0;
+        private float completedTasks = 1;
 
         public string Parameters {  get; set; }
 
diff --git a/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs b/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
index 44a80d4b7e2..60d9d19c93a 100644
--- a/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
+++ b/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
@@ -161,7 +161,10 @@ public static void WriteTitleBar()
         {
             Console.Write(""
                 + ANSIBuilder.Cursor.Home()
-                + ANSIBuilder.Formatting.Inverse("                         MSBuild                         ")
+                /*+ ANSIBuilder.ANSIRemove(
+                    ANSIBuilder.Formatting.Inverse("                         MSBuild                         ")
+                  )*/
+                + ANSIBuilder.Formatting.Inverse(ANSIBuilder.Justification.Center("MSBuild"))
             );
         }
         public static void WriteFooter(string text)
