diff --git a/src/Build/Logging/FancyLogger/FancyLoggerMessageNode.cs b/src/Build/Logging/FancyLogger/FancyLoggerMessageNode.cs
index 4084fed663b..3fd242849b9 100644
--- a/src/Build/Logging/FancyLogger/FancyLoggerMessageNode.cs
+++ b/src/Build/Logging/FancyLogger/FancyLoggerMessageNode.cs
@@ -27,25 +27,25 @@ public enum MessageType
         public FancyLoggerMessageNode(LazyFormattedBuildEventArgs args)
         {
             // Get type
-            if (args is BuildMessageEventArgs message)
+            switch (args)
             {
-                Type = MessageType.HighPriorityMessage;
-            }
-            else if (args is BuildWarningEventArgs warning)
-            {
-                Type = MessageType.Warning;
-                Code = warning.Code;
-                FilePath = warning.File;
-                LineNumber = warning.LineNumber;
-                ColumnNumber = warning.ColumnNumber;
-            }
-            else if (args is BuildErrorEventArgs error)
-            {
-                Type = MessageType.Error;
-                Code = error.Code;
-                FilePath = error.File;
-                LineNumber = error.LineNumber;
-                ColumnNumber = error.ColumnNumber;
+                case BuildMessageEventArgs:
+                    Type = MessageType.HighPriorityMessage;
+                    break;
+                case BuildWarningEventArgs warning:
+                    Type = MessageType.Warning;
+                    Code = warning.Code;
+                    FilePath = warning.File;
+                    LineNumber = warning.LineNumber;
+                    ColumnNumber = warning.ColumnNumber;
+                    break;
+                case BuildErrorEventArgs error:
+                    Type = MessageType.Error;
+                    Code = error.Code;
+                    FilePath = error.File;
+                    LineNumber = error.LineNumber;
+                    ColumnNumber = error.ColumnNumber;
+                    break;
             }
 
             // TODO: Replace
