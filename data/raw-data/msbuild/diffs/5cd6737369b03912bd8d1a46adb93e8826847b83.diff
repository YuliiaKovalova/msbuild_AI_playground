diff --git a/src/Framework/MSBuildEventSource.cs b/src/Framework/MSBuildEventSource.cs
index c63c667b24d..d2a571b9ef4 100644
--- a/src/Framework/MSBuildEventSource.cs
+++ b/src/Framework/MSBuildEventSource.cs
@@ -435,18 +435,6 @@ public void TargetUpToDateStop(int result)
         {
             WriteEvent(57, result);
         }
-
-        [Event(58, Keywords = Keywords.All)]
-        public void CopyStart(bool singleThreaded)
-        {
-            WriteEvent(58, singleThreaded);
-        }
-
-        [Event(59, Keywords = Keywords.All)]
-        public void CopyStop(bool singleThreaded)
-        {
-            WriteEvent(59, singleThreaded);
-        }
         #endregion
     }
 }
diff --git a/src/Tasks/Copy.cs b/src/Tasks/Copy.cs
index 8bf7869f26d..ba793b673d6 100644
--- a/src/Tasks/Copy.cs
+++ b/src/Tasks/Copy.cs
@@ -12,7 +12,6 @@
 using Microsoft.Build.Utilities;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
-using Microsoft.Build.Eventing;
 
 namespace Microsoft.Build.Tasks
 {
@@ -427,8 +426,6 @@ private bool CopySingleThreaded(
                 DestinationFiles.Length, // Set length to common case of 1:1 source->dest.
                 StringComparer.OrdinalIgnoreCase);
 
-            MSBuildEventSource.Log.CopyStart(true);
-
             // Now that we have a list of destinationFolder files, copy from source to destinationFolder.
             for (int i = 0; i < SourceFiles.Length && !_cancellationTokenSource.IsCancellationRequested; ++i)
             {
@@ -463,8 +460,6 @@ private bool CopySingleThreaded(
                 }
             }
 
-            MSBuildEventSource.Log.CopyStop(true);
-
             return success;
         }
 
@@ -505,8 +500,6 @@ private bool CopyParallel(
                 DestinationFiles.Length, // Set length to common case of 1:1 source->dest.
                 StringComparer.OrdinalIgnoreCase);
 
-            MSBuildEventSource.Log.CopyStart(false);
-
             for (int i = 0; i < SourceFiles.Length && !_cancellationTokenSource.IsCancellationRequested; ++i)
             {
                 ITaskItem destItem = DestinationFiles[i];
@@ -596,8 +589,6 @@ private bool CopyParallel(
                 }
             }
 
-            MSBuildEventSource.Log.CopyStop(false);
-
             return success;
         }
 
