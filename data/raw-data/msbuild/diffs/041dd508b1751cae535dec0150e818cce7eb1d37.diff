diff --git a/src/Build/Logging/FancyLogger/FancyLogger.cs b/src/Build/Logging/FancyLogger/FancyLogger.cs
index f1dd1b2a3d2..848bd3a66a9 100644
--- a/src/Build/Logging/FancyLogger/FancyLogger.cs
+++ b/src/Build/Logging/FancyLogger/FancyLogger.cs
@@ -3,7 +3,6 @@
 
 using System;
 using System.Collections.Generic;
-using System.Threading.Tasks;
 using Microsoft.Build.Framework;
 
 namespace Microsoft.Build.Logging.FancyLogger
@@ -47,15 +46,6 @@ public void Initialize(IEventSource eventSource)
             FancyLoggerBuffer.Initialize();
             // TODO: Fix. First line does not appear at top. Leaving empty line for now
             FancyLoggerBuffer.WriteNewLine("");
-            // Log all projects periodically
-            Task.Run(() =>
-            {
-                /*while (true)
-                {
-                    await Task.Delay((1/60)*10);
-                    foreach (var project in projects) project.Value.Log();
-                }*/
-            });
         }
 
         // Build
diff --git a/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs b/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
index 70eef6c5d96..04af0b207b7 100644
--- a/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
+++ b/src/Build/Logging/FancyLogger/FancyLoggerBuffer.cs
@@ -41,6 +41,7 @@ public class FancyLoggerBuffer
     {
         private static List<FancyLoggerBufferLine> Lines = new();
         private static int TopLineIndex = 0;
+        public static string Footer = string.Empty;
         // private static bool AutoScrollEnabled = true;
         public static void Initialize()
         {
@@ -53,7 +54,10 @@ public static void Initialize()
             {
                 while (true)
                 {
-                    switch (Console.ReadKey().Key)
+                    // Wait (1/60 seconds)
+                    await Task.Delay((1 / 60) * 1_000);
+                    // Handle keyboard input
+                    switch (Console.ReadKey(true).Key)
                     {
                         case ConsoleKey.UpArrow:
                             if (TopLineIndex > 0) TopLineIndex--;
@@ -66,7 +70,7 @@ public static void Initialize()
                             // AutoScrollEnabled = !AutoScrollEnabled;
                             break;
                     }
-                    await Task.Delay((1 / 60) * 1_000);
+                    // Render
                     Render();
             }
             });
