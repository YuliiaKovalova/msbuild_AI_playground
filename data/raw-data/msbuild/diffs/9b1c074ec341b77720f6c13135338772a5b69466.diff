diff --git a/src/MSBuild.UnitTests/XMake_Tests.cs b/src/MSBuild.UnitTests/XMake_Tests.cs
index b6c0dffe140..4c33f31a41c 100644
--- a/src/MSBuild.UnitTests/XMake_Tests.cs
+++ b/src/MSBuild.UnitTests/XMake_Tests.cs
@@ -20,6 +20,7 @@
 using Shouldly;
 using Xunit;
 using Xunit.Abstractions;
+using System.Runtime.InteropServices;
 
 #nullable disable
 
@@ -664,8 +665,11 @@ public void ConsoleUIRespectsSDKLanguage()
 
                 MSBuildApp.SetConsoleUI();
 
-                Assert.Equal(new CultureInfo("ja"), thisThread.CurrentUICulture);
-                Assert.Equal(65001, Console.OutputEncoding.CodePage); // utf 8 enabled for correct rendering.
+                if (!RuntimeInformation.IsOSPlatform(OSPlatform.Windows) || MSBuildApp.CurrentPlatformIsWindowsAndOfficiallySupportsUTF8Encoding())
+                {
+                    Assert.Equal(new CultureInfo("ja"), thisThread.CurrentUICulture);
+                    Assert.Equal(65001, Console.OutputEncoding.CodePage); // utf 8 enabled for correct rendering.
+                }
             }
             finally
             {
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 4eb29d53fef..f89cd7146f3 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1709,7 +1709,7 @@ private static CultureInfo GetExternalOverridenUILanguageIfSupportableWithEncodi
             return null;
         }
 
-        private static bool CurrentPlatformIsWindowsAndOfficiallySupportsUTF8Encoding()
+        public static bool CurrentPlatformIsWindowsAndOfficiallySupportsUTF8Encoding()
         {
             if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows) && Environment.OSVersion.Version.Major >= 10) // UTF-8 is only officially supported on 10+.
             {
