diff --git a/src/Build/Evaluation/ProjectParser.cs b/src/Build/Evaluation/ProjectParser.cs
index 6959e3709b0..b51b3ee03e2 100644
--- a/src/Build/Evaluation/ProjectParser.cs
+++ b/src/Build/Evaluation/ProjectParser.cs
@@ -6,7 +6,7 @@
 using Microsoft.Build.Shared;
 using System;
 using System.Collections.Generic;
-
+using System.Xml;
 using Expander = Microsoft.Build.Evaluation.Expander<Microsoft.Build.Evaluation.ProjectProperty, Microsoft.Build.Evaluation.ProjectItem>;
 using ProjectXmlUtilities = Microsoft.Build.Internal.ProjectXmlUtilities;
 using ReservedPropertyNames = Microsoft.Build.Internal.ReservedPropertyNames;
@@ -636,6 +636,16 @@ private ProjectTargetElement ParseProjectTargetElement(XmlElementWithLocation el
                             ProjectErrorUtilities.ThrowInvalidProject(onError.Location, "NodeMustBeLastUnderElement", XMakeElements.onError, XMakeElements.target, childElement.Name);
                         }
 
+                        if (childElement.ChildNodes.Count != 0)
+                        {
+                            // If the element has inner text and no child elements, then this should be a property and throw invalid child element of <Target>
+                            var firstNode = childElement.FirstChild;
+                            if (firstNode.NodeType == XmlNodeType.Text && firstNode.ChildNodes.Count == 0)
+                            {
+                                ProjectXmlUtilities.ThrowProjectInvalidChildElement(childElement.Name, childElement.ParentNode.Name, childElement.Location);
+                            }
+                        }
+
                         child = ParseProjectTaskElement(childElement, target);
                         break;
                 }
