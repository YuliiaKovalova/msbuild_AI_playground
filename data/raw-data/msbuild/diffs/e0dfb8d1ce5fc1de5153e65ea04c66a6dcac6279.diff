diff --git a/src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs b/src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs
index a5bd5f0fe5d..d9e2ef2ca3c 100644
--- a/src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs
+++ b/src/Build/BuildCheck/API/BuildAnalyzerConfiguration.cs
@@ -92,7 +92,7 @@ private static bool TryExtractValue<T>(string key, Dictionary<string, string> co
         {
             throw new BuildCheckConfigurationException(
                 $"Incorrect value provided in config for key {key}",
-                buildCopConfigurationErrorScope: BuildCheckConfigurationErrorScope.EditorConfigParser);
+                buildCheckConfigurationErrorScope: BuildCheckConfigurationErrorScope.EditorConfigParser);
         }
 
         return isParsed;
diff --git a/src/Build/BuildCheck/Infrastructure/ConfigurationProvider.cs b/src/Build/BuildCheck/Infrastructure/ConfigurationProvider.cs
index f868f0a816b..62e80417f91 100644
--- a/src/Build/BuildCheck/Infrastructure/ConfigurationProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/ConfigurationProvider.cs
@@ -80,7 +80,7 @@ public CustomConfigurationData GetCustomConfiguration(string projectFullPath, st
     /// <returns></returns>
     internal void CheckCustomConfigurationDataValidity(string projectFullPath, string ruleId)
     {
-        // TODO: repair the comparer of the objects, to compare actual data
+        // TODO: repair the comparer of the objects
     }
 
     internal BuildAnalyzerConfigurationInternal[] GetMergedConfigurations(
diff --git a/src/Build/BuildCheck/Infrastructure/CustomConfigurationData.cs b/src/Build/BuildCheck/Infrastructure/CustomConfigurationData.cs
index f2e42649c95..d671b9b9c22 100644
--- a/src/Build/BuildCheck/Infrastructure/CustomConfigurationData.cs
+++ b/src/Build/BuildCheck/Infrastructure/CustomConfigurationData.cs
@@ -69,7 +69,7 @@ public override bool Equals(object? obj)
     }
 
     protected bool Equals(CustomConfigurationData other) {
-        // TODO: update the comparison. For different instances with the same data it returns false, we will need to compare the exact match
+        // TODO: update the comparison: Compare ruleID, and exact match of the configuration data
         
         return Equals(ConfigurationData, other.ConfigurationData);
     }
