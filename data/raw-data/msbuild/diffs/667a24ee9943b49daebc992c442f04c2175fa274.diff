diff --git a/src/Build/BackEnd/Shared/BuildResult.cs b/src/Build/BackEnd/Shared/BuildResult.cs
index 776179d0f03..1b24eff9fae 100644
--- a/src/Build/BackEnd/Shared/BuildResult.cs
+++ b/src/Build/BackEnd/Shared/BuildResult.cs
@@ -33,7 +33,7 @@ public enum BuildResultCode
     /// Contains the current results for all of the targets which have produced results for a particular configuration.
     /// </summary>
     /// <remarks>
-    /// When modifying serialization/deserialization, bump the version and support previous versions in order to keep <see cref="ResultsCache"/> backwards compatible.
+    /// When modifying serialization/deserialization, bump the version and support previous versions in order to keep results cache backwards compatible.
     /// </remarks>
     public class BuildResult : BuildResultBase, INodePacket, IBuildResults
     {
@@ -421,7 +421,7 @@ public ProjectInstance? ProjectStateAfterBuild
         /// See <see cref="Execution.BuildRequestDataFlags"/> for examples of the available flags.
         /// </summary>
         /// <remarks>
-        /// Is optional, this property exists starting <see cref="_version"/> 1.
+        /// Is optional, this property exists starting version 1.
         /// </remarks>
         public BuildRequestDataFlags? BuildRequestDataFlags => (_version > 0) ? _buildRequestDataFlags : null;
 
diff --git a/src/Build/Definition/Project.cs b/src/Build/Definition/Project.cs
index d7d90b3a939..031ce7a01a9 100644
--- a/src/Build/Definition/Project.cs
+++ b/src/Build/Definition/Project.cs
@@ -829,7 +829,7 @@ public bool IsBuildEnabled
         /// their previously stored value to find out, and if so perhaps decide to update their own state.
         /// Note that the number may not increase monotonically.
         ///
-        /// This number corresponds to the <seealso cref="BuildEventContext.EvaluationId"/> and can be used to connect
+        /// This number corresponds to the <see cref="BuildEventContext.EvaluationId"/> and can be used to connect
         /// evaluation logging events back to the Project instance.
         /// </summary>
         public int LastEvaluationId => implementation.LastEvaluationId;
@@ -1981,7 +1981,6 @@ public ProjectImpl(Project owner, string projectFile, IDictionary<string, string
             /// - <see cref="RemoveItems"/>
             /// - <see cref="AddItem(string,string, IEnumerable&lt;KeyValuePair&lt;string, string&gt;&gt;)"/>
             /// - <see cref="AddItemFast(string,string, IEnumerable&lt;KeyValuePair&lt;string, string&gt;&gt;)"/>
-            /// - <see cref="ProjectItem.ChangeItemType"/>
             /// - <see cref="ProjectItem.Rename"/>
             /// - <see cref="ProjectItem.RemoveMetadata"/>
             /// - <see cref="ProjectItem.SetMetadataValue(string,string)"/>
diff --git a/src/Build/Evaluation/Context/EvaluationContext.cs b/src/Build/Evaluation/Context/EvaluationContext.cs
index c4130775330..56003b2a1de 100644
--- a/src/Build/Evaluation/Context/EvaluationContext.cs
+++ b/src/Build/Evaluation/Context/EvaluationContext.cs
@@ -85,7 +85,7 @@ public static EvaluationContext Create(SharingPolicy policy)
         ///     Factory for <see cref="EvaluationContext" />
         /// </summary>
         /// <param name="policy">The <see cref="SharingPolicy"/> to use.</param>
-        /// <param name="fileSystem">The <see cref="IFileSystem"/> to use.
+        /// <param name="fileSystem">The <see cref="MSBuildFileSystemBase"/> to use.
         ///     This parameter is compatible only with <see cref="SharingPolicy.Shared"/>.
         ///     The method throws if a file system is used with <see cref="SharingPolicy.Isolated"/> or <see cref="SharingPolicy.SharedSDKCache"/>.
         ///     The reasoning is that these values guarantee not reusing file system caches between evaluations,
diff --git a/src/Tasks/MSBuildInternalMessage.cs b/src/Tasks/MSBuildInternalMessage.cs
index 0595e286179..9e54fa38c34 100644
--- a/src/Tasks/MSBuildInternalMessage.cs
+++ b/src/Tasks/MSBuildInternalMessage.cs
@@ -42,7 +42,7 @@ private enum BuildMessageSeverity
         public string[] FormatArguments { get; set; } = [];
 
         /// <summary>
-        /// <see cref="BuildMessageSeverity"/>.
+        /// Severity of the message.
         /// </summary>
         [Required]
         public string Severity { set; get; } = string.Empty;
