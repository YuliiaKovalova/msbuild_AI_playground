diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 70a30404ba9..1b5ce0283b4 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -1338,7 +1338,7 @@ private static bool PrintTargets(string projectFile, string toolsVersion, Dictio
 
         private static IEnumerable<BuildManager.DeferredBuildMessage> GetMessagesToLogInBuildLoggers(string commandLineString)
         {
-            return new[]
+            List<BuildManager.DeferredBuildMessage> messages = new()
             {
                 new BuildManager.DeferredBuildMessage(
                     ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(
@@ -1365,12 +1365,19 @@ private static bool PrintTargets(string projectFile, string toolsVersion, Dictio
                         "MSBVersion",
                         ProjectCollection.DisplayVersion),
                     MessageImportance.Low),
-                new BuildManager.DeferredBuildMessage(
-                    ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(
+            };
+
+            if (!string.IsNullOrEmpty(Environment.GetEnvironmentVariable("MSBuildDebugEngine")))
+            {
+                messages.Add(
+                    new BuildManager.DeferredBuildMessage(
+                        ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword(
                         "MSBuildDebugPath",
                         DebugUtils.DebugPath),
-                    DebugUtils.DebugPathMessageImportance),
-            };
+                        MessageImportance.High));
+            }
+
+            return messages;
         }
 
         private static (BuildResultCode result, Exception exception) ExecuteBuild(BuildManager buildManager, BuildRequestData request)
diff --git a/src/Shared/Debugging/DebugUtils.cs b/src/Shared/Debugging/DebugUtils.cs
index f4a39ce8da8..74a3a7b9e79 100644
--- a/src/Shared/Debugging/DebugUtils.cs
+++ b/src/Shared/Debugging/DebugUtils.cs
@@ -26,15 +26,11 @@ static DebugUtils()
             string environmentDebugPath = FileUtilities.TrimAndStripAnyQuotes(Environment.GetEnvironmentVariable("MSBUILDDEBUGPATH"));
             string debugDirectory = environmentDebugPath;
 
-            DebugPathMessageImportance = MessageImportance.Low;
-
             if (Traits.Instance.DebugEngine)
             {
-                DebugPathMessageImportance = MessageImportance.High;
                 if (!string.IsNullOrWhiteSpace(debugDirectory) && FileUtilities.CanWriteToDirectory(debugDirectory))
                 {
                     // Debug directory is writable; no need for fallbacks
-                    DebugPathMessageImportance = MessageImportance.Low;
                 }
                 else if (FileUtilities.CanWriteToDirectory(Directory.GetCurrentDirectory()))
                 {
@@ -102,8 +98,6 @@ private static bool CurrentProcessMatchesDebugName()
 
         public static string DebugPath { get; }
 
-        internal static MessageImportance DebugPathMessageImportance { get; }
-
         public static string FindNextAvailableDebugFilePath(string fileName)
         {
             var extension = Path.GetExtension(fileName);
diff --git a/src/Shared/FileUtilities.cs b/src/Shared/FileUtilities.cs
index b104b814f9a..9628a41db61 100644
--- a/src/Shared/FileUtilities.cs
+++ b/src/Shared/FileUtilities.cs
@@ -173,8 +173,8 @@ internal static bool CanWriteToDirectory(string directory)
         {
             try
             {
-                string testFilePath = Path.Combine(directory, "textFile.txt");
-                File.WriteAllText(testFilePath, "Successfully wrote to file.");
+                string testFilePath = Path.Combine(directory, $"MSBuild_{Guid.NewGuid().ToString("N")}_testFile.txt");
+                File.WriteAllText(testFilePath, $"MSBuild process {Process.GetCurrentProcess().Id} successfully wrote to file.");
                 File.Delete(testFilePath);
                 return true;
             }
