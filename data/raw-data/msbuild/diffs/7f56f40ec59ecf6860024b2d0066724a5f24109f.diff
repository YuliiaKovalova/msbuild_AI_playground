diff --git a/src/Build/BackEnd/Components/Logging/ProjectLoggingContext.cs b/src/Build/BackEnd/Components/Logging/ProjectLoggingContext.cs
index 9f6a100769c..eaf5e31be4f 100644
--- a/src/Build/BackEnd/Components/Logging/ProjectLoggingContext.cs
+++ b/src/Build/BackEnd/Components/Logging/ProjectLoggingContext.cs
@@ -70,8 +70,6 @@ internal ProjectLoggingContext(
         {
         }
 
-        internal string ProjectFullPath { get => _projectFullPath; }
-
         /// <summary>
         /// Constructs a project logging contexts.
         /// </summary>
diff --git a/src/Build/BackEnd/Components/Logging/TargetLoggingContext.cs b/src/Build/BackEnd/Components/Logging/TargetLoggingContext.cs
index d286c1859b2..3d9a25df6cc 100644
--- a/src/Build/BackEnd/Components/Logging/TargetLoggingContext.cs
+++ b/src/Build/BackEnd/Components/Logging/TargetLoggingContext.cs
@@ -16,7 +16,7 @@ namespace Microsoft.Build.BackEnd.Logging
     /// <summary>
     /// A logging context for building a specific target within a project.
     /// </summary>
-    internal class TargetLoggingContext : BuildLoggingContext, IHasProjectFullPath
+    internal class TargetLoggingContext : BuildLoggingContext
     {
         /// <summary>
         /// Should target outputs be logged also.
@@ -86,8 +86,6 @@ internal ProjectTargetInstance Target
             }
         }
 
-        public string ProjectFullPath => _projectLoggingContext?.ProjectFullPath;
-
         /// <summary>
         /// Log that a target has finished
         /// </summary>
diff --git a/src/Build/Instance/TaskFactoryLoggingHost.cs b/src/Build/Instance/TaskFactoryLoggingHost.cs
index 23eff6007e6..1fbad6a47b6 100644
--- a/src/Build/Instance/TaskFactoryLoggingHost.cs
+++ b/src/Build/Instance/TaskFactoryLoggingHost.cs
@@ -24,7 +24,7 @@ internal class TaskFactoryLoggingHost :
 #if FEATURE_APPDOMAIN
         MarshalByRefObject,
 #endif
-        IBuildEngine, IHasProjectFullPath
+        IBuildEngine
     {
         /// <summary>
         /// Location of the task node in the original file
@@ -55,8 +55,6 @@ internal class TaskFactoryLoggingHost :
         /// </summary>
         private bool _activeProxy;
 
-        private string _projectFullPath;
-
         /// <summary>
         /// Constructor
         /// </summary>
@@ -69,11 +67,6 @@ public TaskFactoryLoggingHost(bool isRunningWithMultipleNodes, ElementLocation e
             _isRunningWithMultipleNodes = isRunningWithMultipleNodes;
             _loggingContext = loggingContext;
             _elementLocation = elementLocation;
-
-            if (_loggingContext is IHasProjectFullPath logThatHasProjectFullPath)
-            {
-                _projectFullPath = logThatHasProjectFullPath.ProjectFullPath;
-            }
         }
 
         /// <summary>
@@ -153,8 +146,6 @@ internal BuildLoggingContext LoggingContext
             { return _loggingContext; }
         }
 
-        public string ProjectFullPath => _projectFullPath;
-
         #region IBuildEngine Members
 
         /// <summary>
diff --git a/src/Build/Logging/BinaryLogger/BinaryLogger.cs b/src/Build/Logging/BinaryLogger/BinaryLogger.cs
index 8bcc9ca0877..dab0aacf565 100644
--- a/src/Build/Logging/BinaryLogger/BinaryLogger.cs
+++ b/src/Build/Logging/BinaryLogger/BinaryLogger.cs
@@ -368,7 +368,8 @@ private void CollectImports(BuildEventArgs e)
             }
             else if (e is GeneratedFileUsedEventArgs generatedFileUsedEventArgs)
             {
-                projectImportsCollector.AddFileFromMemory(generatedFileUsedEventArgs.ResponseFilePath, generatedFileUsedEventArgs.ResponseFileContent);
+                string fullPath = Path.GetFullPath(generatedFileUsedEventArgs.ResponseFilePath);
+                projectImportsCollector.AddFileFromMemory(fullPath, generatedFileUsedEventArgs.ResponseFileContent);
             }
         }
 
diff --git a/src/Framework/IHasProjectFullPath.cs b/src/Framework/IHasProjectFullPath.cs
deleted file mode 100644
index 5b3373f75c2..00000000000
--- a/src/Framework/IHasProjectFullPath.cs
+++ /dev/null
@@ -1,10 +0,0 @@
-ï»¿// Licensed to the .NET Foundation under one or more agreements.
-// The .NET Foundation licenses this file to you under the MIT license.
-
-namespace Microsoft.Build.Framework
-{
-    internal interface IHasProjectFullPath
-    {
-        string? ProjectFullPath { get; }
-    }
-}
diff --git a/src/Shared/TaskLoggingHelper.cs b/src/Shared/TaskLoggingHelper.cs
index 68909641038..9a5315b1b32 100644
--- a/src/Shared/TaskLoggingHelper.cs
+++ b/src/Shared/TaskLoggingHelper.cs
@@ -506,7 +506,7 @@ public void LogMessageFromResources(MessageImportance importance, string message
         /// <summary>
         /// Logs a file generated from the given data.
         /// </summary>
-        /// <param name="filePath">The file path.</param>
+        /// <param name="filePath">The file path relative to the currecnt project.</param>
         /// <param name="content">The content of the file.</param>
         public void LogIncludeGeneratedFile(string filePath, string content)
         {
diff --git a/src/Tasks/CodeTaskFactory.cs b/src/Tasks/CodeTaskFactory.cs
index 873ea43c980..f863c969cbf 100644
--- a/src/Tasks/CodeTaskFactory.cs
+++ b/src/Tasks/CodeTaskFactory.cs
@@ -126,11 +126,6 @@ private static Assembly CurrentDomainOnAssemblyResolve(object sender, ResolveEve
         /// </summary>
         private string _nameOfTask;
 
-        /// <summary>
-        /// The directory of the current project
-        /// </summary>
-        private string _projectDirectory;
-
         /// <summary>
         /// Path to source that is outside the project file
         /// </summary>
@@ -188,11 +183,6 @@ public bool Initialize(string taskName, IDictionary<string, TaskPropertyInfo> ta
                 HelpKeywordPrefix = "MSBuild."
             };
 
-            if (taskFactoryLoggingHost is IHasProjectFullPath logThatHasProjectFullPath)
-            {
-                _projectDirectory = Path.GetDirectoryName(logThatHasProjectFullPath.ProjectFullPath);
-            }
-
             XmlNode taskContent = ExtractTaskContent(taskElementContents);
             if (taskContent == null)
             {
@@ -802,13 +792,8 @@ private Assembly CompileInMemoryAssembly()
                 string fullCode = codeBuilder.ToString();
 
                 // Embed generated file in the binlog
-                if (_projectDirectory != null)
-                {
-                    string fileNameInBinlog = $"{Guid.NewGuid()}-{_nameOfTask}-compilation-file.tmp";
-                    string outputPathInBinlog = Path.Combine(_projectDirectory, fileNameInBinlog);
-
-                    _log.LogIncludeGeneratedFile(outputPathInBinlog, fullCode);
-                }
+                string fileNameInBinlog = $"{Guid.NewGuid()}-{_nameOfTask}-compilation-file.tmp";
+                _log.LogIncludeGeneratedFile(fileNameInBinlog, fullCode);
 
                 var fullSpec = new FullTaskSpecification(finalReferencedAssemblies, fullCode);
                 if (!s_compiledTaskCache.TryGetValue(fullSpec, out Assembly existingAssembly))
diff --git a/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs b/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
index 0e38b44cef4..7989a98917a 100644
--- a/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
+++ b/src/Tasks/RoslynCodeTaskFactory/RoslynCodeTaskFactory.cs
@@ -111,11 +111,6 @@ public sealed class RoslynCodeTaskFactory : ITaskFactory
         /// </summary>
         private string _taskName;
 
-        /// <summary>
-        /// The directory of the current project
-        /// </summary>
-        private string _projectDirectory;
-
         /// <inheritdoc cref="ITaskFactory.FactoryName"/>
         public string FactoryName => "Roslyn Code Task Factory";
 
@@ -156,11 +151,6 @@ public bool Initialize(string taskName, IDictionary<string, TaskPropertyInfo> pa
                 HelpKeywordPrefix = "MSBuild."
             };
 
-            if (taskFactoryLoggingHost is IHasProjectFullPath logThatHasProjectFullPath)
-            {
-                _projectDirectory = Path.GetDirectoryName(logThatHasProjectFullPath.ProjectFullPath);
-            }
-
             _taskName = taskName;
 
             _parameters = parameterGroup.Values.ToArray();
@@ -696,14 +686,9 @@ private bool TryCompileInMemoryAssembly(IBuildEngine buildEngine, RoslynCodeTask
             try
             {
                 // Embed generated file in the binlog
-                if (_projectDirectory != null)
-                {
-                    string fileNameInBinlog = $"{Guid.NewGuid()}-{_taskName}-compilation-file.tmp";
-                    string outputPathInBinlog = Path.Combine(_projectDirectory, fileNameInBinlog);
-                    
-                    _log.LogIncludeGeneratedFile(outputPathInBinlog, taskInfo.SourceCode);
-                }
-                
+                string fileNameInBinlog = $"{Guid.NewGuid()}-{_taskName}-compilation-file.tmp";
+                _log.LogIncludeGeneratedFile(fileNameInBinlog, taskInfo.SourceCode);
+
                 // Create the code
                 File.WriteAllText(sourceCodePath, taskInfo.SourceCode);
 
