diff --git a/eng/Versions.props b/eng/Versions.props
index 12cee68858a..b9463a72647 100644
--- a/eng/Versions.props
+++ b/eng/Versions.props
@@ -2,7 +2,7 @@
 <!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
 <Project>
   <PropertyGroup>
-    <VersionPrefix>17.12.13</VersionPrefix><DotNetFinalVersionKind>release</DotNetFinalVersionKind>
+    <VersionPrefix>17.12.3</VersionPrefix><DotNetFinalVersionKind>release</DotNetFinalVersionKind>
     <PackageValidationBaselineVersion>17.11.4</PackageValidationBaselineVersion>
     <AssemblyVersion>15.1.0.0</AssemblyVersion>
     <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
diff --git a/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs b/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
index 00ee719f8d6..2111a5ee369 100644
--- a/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/BuildManager_Tests.cs
@@ -1657,13 +1657,14 @@ public void CancelledBuildWithDelay40()
             string contents = CleanupFileContents(@"
 <Project xmlns='msbuildnamespace' ToolsVersion='msbuilddefaulttoolsversion'>
  <Target Name='test'>
-    <Exec Command='" + Helpers.GetSleepCommand(TimeSpan.FromSeconds(10)) + @"'/>
+    <Exec Command='" + Helpers.GetSleepCommand(TimeSpan.FromSeconds(20)) + @"'/>
     <Message Text='[errormessage]'/>
  </Target>
 </Project>
 ");
             BuildRequestData data = GetBuildRequestData(contents, Array.Empty<string>(), MSBuildDefaultToolsVersion);
             _buildManager.BeginBuild(_parameters);
+            Stopwatch sw = Stopwatch.StartNew();
             BuildSubmission asyncResult = _buildManager.PendBuildRequest(data);
             asyncResult.ExecuteAsync(null, null);
 
@@ -1675,6 +1676,50 @@ public void CancelledBuildWithDelay40()
 
             Assert.Equal(BuildResultCode.Failure, result.OverallResult); // "Build should have failed."
             _logger.AssertLogDoesntContain("[errormessage]");
+            // The build should bail out immediately after executing CancelAllSubmissions, build stalling for a longer time
+            //  is very unexpected.
+            sw.Elapsed.ShouldBeLessThan(TimeSpan.FromSeconds(10));
+        }
+
+        /// <summary>
+        /// A canceled build which waits for the task to get started before canceling.  Because it is a 12.. task, we should
+        /// cancel the task and exit out after a short period wherein we wait for the task to exit cleanly.
+        ///
+        /// This test also exercises the possibility of CancelAllSubmissions being executed after EndBuild -
+        /// which can happen even if they are synchronously executed in expected order - the CancelAllSubmissions is internally
+        /// asynchronous and hence part of the execution can happen after EndBuild.
+        /// </summary>
+        [Fact]
+        public void CancelledBuildWithDelay40_WithThreatSwap()
+        {
+            string contents = CleanupFileContents(@"
+<Project xmlns='msbuildnamespace' ToolsVersion='msbuilddefaulttoolsversion'>
+ <Target Name='test'>
+    <Exec Command='" + Helpers.GetSleepCommand(TimeSpan.FromSeconds(20)) + @"'/>
+    <Message Text='[errormessage]'/>
+ </Target>
+</Project>
+");
+            BuildRequestData data = GetBuildRequestData(contents, Array.Empty<string>(), MSBuildDefaultToolsVersion);
+            _buildManager.BeginBuild(_parameters);
+            Stopwatch sw = Stopwatch.StartNew();
+            BuildSubmission asyncResult = _buildManager.PendBuildRequest(data);
+            asyncResult.ExecuteAsync(null, null);
+
+            Thread.Sleep(500);
+            // Simulate the case where CancelAllSubmissions is called after EndBuild or its internal queued task is swapped
+            //  and executed after EndBuild starts execution.
+            System.Threading.Tasks.Task.Delay(500).ContinueWith(t => _buildManager.CancelAllSubmissions());
+            _buildManager.EndBuild();
+
+            asyncResult.WaitHandle.WaitOne();
+            BuildResult result = asyncResult.BuildResult;
+
+            Assert.Equal(BuildResultCode.Failure, result.OverallResult); // "Build should have failed."
+            _logger.AssertLogDoesntContain("[errormessage]");
+            // The build should bail out immediately after executing CancelAllSubmissions, build stalling for a longer time
+            //  is very unexpected.
+            sw.Elapsed.ShouldBeLessThan(TimeSpan.FromSeconds(10));
         }
 
         /// <summary>
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 96cada2d553..199c39ff7f6 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -789,15 +789,10 @@ void Callback(object? state)
             {
                 lock (_syncLock)
                 {
-                    if (_shuttingDown)
-                    {
-                        return;
-                    }
-
-                    // If we are Idle, obviously there is nothing to cancel.  If we are waiting for the build to end, then presumably all requests have already completed
-                    // and there is nothing left to cancel.  Putting this here eliminates the possibility of us racing with EndBuild to access the nodeManager before
-                    // EndBuild sets it to null.
-                    if (_buildManagerState != BuildManagerState.Building)
+                    // If the state is Idle - then there is yet or already nothing to cancel
+                    // If state is WaitingForBuildToComplete - we might be already waiting gracefully - but CancelAllSubmissions
+                    //  is a request for quick abort - so it's fine to resubmit the request
+                    if (_buildManagerState == BuildManagerState.Idle)
                     {
                         return;
                     }
@@ -2078,17 +2073,17 @@ private void ShutdownConnectedNodes(bool abort)
             lock (_syncLock)
             {
                 _shuttingDown = true;
-                _executionCancellationTokenSource!.Cancel();
+                _executionCancellationTokenSource?.Cancel();
 
                 // If we are aborting, we will NOT reuse the nodes because their state may be compromised by attempts to shut down while the build is in-progress.
-                _nodeManager!.ShutdownConnectedNodes(!abort && _buildParameters!.EnableNodeReuse);
+                _nodeManager?.ShutdownConnectedNodes(!abort && _buildParameters!.EnableNodeReuse);
 
                 // if we are aborting, the task host will hear about it in time through the task building infrastructure;
                 // so only shut down the task host nodes if we're shutting down tidily (in which case, it is assumed that all
                 // tasks are finished building and thus that there's no risk of a race between the two shutdown pathways).
                 if (!abort)
                 {
-                    _taskHostNodeManager!.ShutdownConnectedNodes(_buildParameters!.EnableNodeReuse);
+                    _taskHostNodeManager?.ShutdownConnectedNodes(_buildParameters!.EnableNodeReuse);
                 }
             }
         }
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index 586bfea6b06..db307f01220 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -289,7 +289,7 @@
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
         <source>Failed to load the custom check type: '{0}' from the assembly: '{1}'. Make sure it inherits the Microsoft.Build.Experimental.BuildCheck.Check base class. If it is not intended to be a custom check, than it should not be exposed. More info: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</source>
-        <target state="translated">Fehler beim Laden des benutzerdefinierten Prüftyps „{0}“ aus der Assembly: {1}. Stellen Sie sicher, dass es die Basisklasse „Microsoft.Build.Experimental.BuildCheck.Check“ erbt. Wenn es sich nicht um eine benutzerdefinierte Überprüfung handelt, sollte es nicht verfügbar gemacht werden. Weitere Informationen: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
+        <target state="translated">Fehler beim Laden des benutzerdefinierten Prüftyps „{0}“ aus der Assembly: {1}. Stellen Sie sicher, dass sie die Basisklasse „Microsoft.Build.Experimental.BuildCheck.Check“ erbt. Wenn es sich nicht um eine benutzerdefinierte Überprüfung handelt, sollte sie nicht verfügbar gemacht werden. Weitere Informationen: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
         <note>The message is emitted when the custom check assembly can not be successfully registered.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedAcquisition">
@@ -304,7 +304,7 @@
       </trans-unit>
       <trans-unit id="CustomCheckRegistered">
         <source>The custom check: '{0}' is registered for the build from the location: '{1}'.</source>
-        <target state="translated">Dies benutzerdefinierte Überprüfung „{0}“ ist für den Build vom Folgenden aus registriert: „{1}”.</target>
+        <target state="translated">Dies benutzerdefinierte Überprüfung „{0}“ ist für den Build von folgendem Speicherort aus registriert: „{1}”.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckSuccessfulAcquisition">
@@ -375,7 +375,7 @@
       </trans-unit>
       <trans-unit id="IllegalCharactersInFileOrDirectory">
         <source>There are illegal characters in '{0}' in the {1} item.</source>
-        <target state="translated">Unzulässige Zeichen in „{0}“ im {1}-Element.</target>
+        <target state="translated">Unzulässige Zeichen in „{0}“ im Element {1}.</target>
         <note />
       </trans-unit>
       <trans-unit id="ImportedProjectFromVSDistribution">
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index ab23de727de..53e2125399c 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -289,7 +289,7 @@
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
         <source>Failed to load the custom check type: '{0}' from the assembly: '{1}'. Make sure it inherits the Microsoft.Build.Experimental.BuildCheck.Check base class. If it is not intended to be a custom check, than it should not be exposed. More info: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</source>
-        <target state="translated">No se pudo cargar el tipo de comprobación personalizado: "{0}" desde el ensamblado: "{1}". Asegúrese de que hereda la clase base Microsoft.Build.Experimental.BuildCheck.Check. Si no está pensado para ser una comprobación personalizada, no debe exponerse. Más información: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
+        <target state="translated">No se pudo cargar el tipo de comprobación personalizada: "{0}" desde el ensamblado: "{1}". Asegúrese de que hereda la clase base Microsoft.Build.Experimental.BuildCheck.Check. Si no se pretende que sea una comprobación personalizada, no debe exponerse. Más información: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
         <note>The message is emitted when the custom check assembly can not be successfully registered.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedAcquisition">
@@ -375,7 +375,7 @@
       </trans-unit>
       <trans-unit id="IllegalCharactersInFileOrDirectory">
         <source>There are illegal characters in '{0}' in the {1} item.</source>
-        <target state="translated">Hay caracteres no válidos en '{0}' en el elemento {1}.</target>
+        <target state="translated">Hay caracteres no válidos en "{0}" en el elemento {1}.</target>
         <note />
       </trans-unit>
       <trans-unit id="ImportedProjectFromVSDistribution">
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index 5d9c67dc8f4..e65fb9bbc72 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -4,7 +4,7 @@
     <body>
       <trans-unit id="AbortingBuild">
         <source>Attempting to cancel the build...</source>
-        <target state="translated">Tentative d'annulation de la génération en cours...</target>
+        <target state="translated">Tentative d'annulation de la build en cours...</target>
         <note />
       </trans-unit>
       <trans-unit id="AmbiguousTaskParameterError">
@@ -133,7 +133,7 @@
       </trans-unit>
       <trans-unit id="BuildCheckEnabled">
         <source>The BuildCheck is enabled for this build.</source>
-        <target state="translated">BuildCheck est activé pour cette build.</target>
+        <target state="translated">Le BuildCheck est activé pour cette build.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0101_MessageFmt">
@@ -148,7 +148,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0102_MessageFmt">
         <source>Tasks {0} and {1} from projects {2} and {3} write the same file: {4}.</source>
-        <target state="translated">Tâches {0} et {1} de projets {2} et {3} écrivez le même fichier : {4}.</target>
+        <target state="translated">Tâches {0} et {1} des projets {2} et {3} écrivent le même fichier : {4}.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0102_Title">
@@ -158,7 +158,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_MessageAddendum">
         <source>'{0}' with value: '{1}'</source>
-        <target state="translated">'{0}' avec valeur : '{1}'</target>
+        <target state="translated">« {0} » avec la valeur « {1} »</target>
         <note>Will be used as a parameter {0} in previous message.</note>
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_MessageFmt">
@@ -168,12 +168,12 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_Title">
         <source>No implicit property derived from an environment variable should be used during the build.</source>
-        <target state="translated">Aucune propriété implicite dérivée d'une variable d'environnement ne doit être utilisée pendant la construction.</target>
+        <target state="translated">Aucune propriété implicite dérivée d'une variable d'environnement ne doit être utilisée pendant la build.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
-        <target state="translated">Propriété : « {0} » a été consultée, mais elle n'a jamais été initialisée.</target>
+        <target state="translated">La propriété « {0} » a été consultée, mais elle n'a jamais été initialisée.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_Title">
@@ -183,7 +183,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0202_MessageFmt">
         <source>Property: '{0}' first declared/initialized at {1} used before it was initialized.</source>
-        <target state="translated">Propriété : '{0}' déclarée/initialisée pour la première fois à l'utilisation de {1} avant d'être initialisée.</target>
+        <target state="translated">La propriété « {0} » a été déclarée/initialisée pour la première fois à l'utilisation de {1} avant d'être initialisée.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0202_Title">
@@ -193,7 +193,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0203_MessageFmt">
         <source>Property: '{0}' was declared/initialized, but it was never used.</source>
-        <target state="translated">Propriété : '{0}' a été déclarée/initialisée, mais elle n'a jamais été utilisée.</target>
+        <target state="translated">La propriété « {0} » a été déclarée/initialisée, mais elle n'a jamais été utilisée.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0203_Title">
@@ -284,32 +284,32 @@
       </trans-unit>
       <trans-unit id="CustomCheckAssemblyNotExist">
         <source>Failed to find the specified custom check assembly: '{0}'. Please check if it exists.</source>
-        <target state="translated">Impossible de trouver l’assembly de vérification personnalisé spécifié : «{0}». Veuillez vérifier s’il existe.</target>
+        <target state="translated">Impossible de trouver l’assembly de vérification personnalisé spécifié : « {0} ». Veuillez vérifier s’il existe.</target>
         <note>The message is emitted when the custom check assembly can not be found.</note>
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
         <source>Failed to load the custom check type: '{0}' from the assembly: '{1}'. Make sure it inherits the Microsoft.Build.Experimental.BuildCheck.Check base class. If it is not intended to be a custom check, than it should not be exposed. More info: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</source>
-        <target state="translated">Échec du chargement du type de vérification personnalisé «{0}» à partir de l’assembly : «{1}». Assurez-vous qu’il hérite de la classe de base Microsoft.Build.Experimental.BuildCheck.Check. S’il ne s’agit pas d’une vérification personnalisée, elle ne doit pas être exposée. Plus d’informations : https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
+        <target state="translated">Échec du chargement du type de vérification personnalisé « {0} » à partir de l’assembly « {1} ». Assurez-vous qu’il hérite de la classe de base Microsoft.Build.Experimental.BuildCheck.Check. S’il ne s’agit pas d’une vérification personnalisée, elle ne doit pas être exposée. Plus d’informations : https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
         <note>The message is emitted when the custom check assembly can not be successfully registered.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedAcquisition">
         <source>Failed to register the custom check: '{0}'.</source>
-        <target state="translated">Échec de l’inscription de la vérification personnalisée : «{0}».</target>
+        <target state="translated">Échec de l’inscription de la vérification personnalisée : « {0} ».</target>
         <note>The message is emitted on failed loading of the custom check in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedRuleLoading">
         <source>Failed to instantiate the custom check rule with the following exception: '{0}'.</source>
-        <target state="translated">Échec de l’instanciation de la règle de vérification personnalisée avec l’exception suivante : «{0}».</target>
+        <target state="translated">Échec de l’instanciation de la règle de vérification personnalisée avec l’exception suivante : « {0} ».</target>
         <note>The message is emitted on failed loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckRegistered">
         <source>The custom check: '{0}' is registered for the build from the location: '{1}'.</source>
-        <target state="translated">La vérification personnalisée «{0}» est inscrite pour la build à partir de l’emplacement : «{1}».</target>
+        <target state="translated">La vérification personnalisée « {0} » est inscrite pour la build à partir de l’emplacement : « {1} ».</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckSuccessfulAcquisition">
         <source>Custom check rule: '{0}' has been registered successfully.</source>
-        <target state="translated">Règle de vérification personnalisée : «{0}» a été correctement inscrite.</target>
+        <target state="translated">Règle de vérification personnalisée : « {0} » a été correctement inscrite.</target>
         <note>The message is emitted on successful loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index c11d524911f..2ecacd50c7a 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -148,7 +148,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0102_MessageFmt">
         <source>Tasks {0} and {1} from projects {2} and {3} write the same file: {4}.</source>
-        <target state="translated">Le attività {0} e {1} dai progetti {2} e {3} scrivere lo stesso file: {4}.</target>
+        <target state="translated">Le attività {0} e {1} dai progetti {2} e {3} scrivono lo stesso file: {4}.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0102_Title">
@@ -284,32 +284,32 @@
       </trans-unit>
       <trans-unit id="CustomCheckAssemblyNotExist">
         <source>Failed to find the specified custom check assembly: '{0}'. Please check if it exists.</source>
-        <target state="translated">Impossibile trovare l'assembly di controllo personalizzato specificato: “{0}”. Verificare se esiste.</target>
+        <target state="translated">Non è possibile trovare l'assembly del controllo personalizzato specificato: '{0}'. Verificare se esiste.</target>
         <note>The message is emitted when the custom check assembly can not be found.</note>
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
         <source>Failed to load the custom check type: '{0}' from the assembly: '{1}'. Make sure it inherits the Microsoft.Build.Experimental.BuildCheck.Check base class. If it is not intended to be a custom check, than it should not be exposed. More info: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</source>
-        <target state="translated">Non è stato possibile caricare il tipo di controllo personalizzato: “{0}” dall'assembly: “{1}”. Assicurarsi che erediti la classe di base Microsoft.Build.Experimental.BuildCheck.Check. Se non è destinato a essere un controllo personalizzato, non deve essere esposto. Per altre informazioni: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
+        <target state="translated">Non è possibile caricare il tipo di controllo personalizzato '{0}' dall'assembly '{1}'. Assicurarsi che erediti la classe di base Microsoft.Build.Experimental.BuildCheck.Check. Se non è destinato a essere un controllo personalizzato, non deve essere esposto. Altre informazioni: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
         <note>The message is emitted when the custom check assembly can not be successfully registered.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedAcquisition">
         <source>Failed to register the custom check: '{0}'.</source>
-        <target state="translated">Impossibile registrare il controllo personalizzato: “{0}”.</target>
+        <target state="translated">Non è possibile registrare il controllo personalizzato: '{0}'.</target>
         <note>The message is emitted on failed loading of the custom check in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedRuleLoading">
         <source>Failed to instantiate the custom check rule with the following exception: '{0}'.</source>
-        <target state="translated">Non è stato possibile creare un'istanza della regola di controllo personalizzata con l'eccezione seguente: “{0}”.</target>
+        <target state="translated">Non è possibile creare un'istanza della regola del controllo personalizzato con l'eccezione seguente: '{0}'.</target>
         <note>The message is emitted on failed loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckRegistered">
         <source>The custom check: '{0}' is registered for the build from the location: '{1}'.</source>
-        <target state="translated">Il controllo personalizzato “{0}” è registrato per la compilazione dal percorso “{1}”.</target>
+        <target state="translated">Il controllo personalizzato '{0}' è registrato per la compilazione dal percorso '{1}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckSuccessfulAcquisition">
         <source>Custom check rule: '{0}' has been registered successfully.</source>
-        <target state="translated">La regola di controllo personalizzata “{0}” è stata registrata correttamente.</target>
+        <target state="translated">La regola del controllo personalizzato '{0}' è stata registrata correttamente.</target>
         <note>The message is emitted on successful loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 9448b850703..f5bc0bc25c2 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -4,7 +4,7 @@
     <body>
       <trans-unit id="AbortingBuild">
         <source>Attempting to cancel the build...</source>
-        <target state="translated">ビルドを取り消そうとしています...</target>
+        <target state="translated">ビルドの取り消を試みています...</target>
         <note />
       </trans-unit>
       <trans-unit id="AmbiguousTaskParameterError">
@@ -138,17 +138,17 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0101_MessageFmt">
         <source>Projects {0} and {1} have conflicting output paths: {2}.</source>
-        <target state="translated">プロジェクト {0} と {1} の出力パスが競合しています: {2}。</target>
+        <target state="translated">プロジェクト {0} と {1} で、出力パス: {2} が競合しています。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0101_Title">
         <source>Two projects should not share their 'OutputPath' nor 'IntermediateOutputPath' locations.</source>
-        <target state="translated">2 つのプロジェクトで 'OutputPath' と 'IntermediateOutputPath' の場所を共有することはできません。</target>
+        <target state="translated">2 つのプロジェクトで、'OutputPath' と 'IntermediateOutputPath' の場所の、どちらも共有することはできません。</target>
         <note>'OutputPath' and 'IntermediateOutputPath' not to be translated.</note>
       </trans-unit>
       <trans-unit id="BuildCheck_BC0102_MessageFmt">
         <source>Tasks {0} and {1} from projects {2} and {3} write the same file: {4}.</source>
-        <target state="translated">プロジェクト {2} と {3} のタスク {0} と {1} は、同じファイルを書き込みます: {4}。</target>
+        <target state="translated">プロジェクト {2} と {3} のタスク {0} と {1} が、同じファイル: {4} に書き込んでいます。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0102_Title">
@@ -158,32 +158,32 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_MessageAddendum">
         <source>'{0}' with value: '{1}'</source>
-        <target state="translated">'{0}' (値 '{1}')</target>
+        <target state="translated">値が '{1}' の '{0}'</target>
         <note>Will be used as a parameter {0} in previous message.</note>
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_MessageFmt">
         <source>Property is derived from environment variable: {0}. Properties should be passed explicitly using the /p option.</source>
-        <target state="translated">プロパティは環境変数から派生しています: {0}。プロパティは、/p オプションを使用して明示的に渡す必要があります。</target>
+        <target state="translated">プロパティは環境変数: {0} から派生しています。プロパティは、/p オプションを使用して明示的に渡す必要があります。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_Title">
         <source>No implicit property derived from an environment variable should be used during the build.</source>
-        <target state="translated">ビルド中に環境変数から派生した暗黙的なプロパティを使用しないでください。</target>
+        <target state="translated">環境変数から派生した暗黙的なプロパティをビルド中に使用しないでください。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
-        <target state="translated">プロパティ: '{0}' にアクセスしましたが、初期化されませんでした。</target>
+        <target state="translated">プロパティ: '{0}' は、初期化されないままアクセスされました。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_Title">
         <source>A property that is accessed should be declared first.</source>
-        <target state="translated">アクセスされるプロパティを、まず宣言する必要があります。</target>
+        <target state="translated">アクセスされるプロパティを、最初に宣言する必要があります。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0202_MessageFmt">
         <source>Property: '{0}' first declared/initialized at {1} used before it was initialized.</source>
-        <target state="translated">{1} で最初に宣言/初期化されたプロパティ: '{0}' は初期化前に使用されました。</target>
+        <target state="translated">{1} で最初に宣言/初期化されたプロパティ: '{0}' が初期化前に使用されました。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0202_Title">
@@ -193,12 +193,12 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0203_MessageFmt">
         <source>Property: '{0}' was declared/initialized, but it was never used.</source>
-        <target state="translated">プロパティ: '{0}' は宣言または初期化されましたが、使用されませんでした。</target>
+        <target state="translated">プロパティ: '{0}' は宣言/初期化されましたが、使用されたことがありません。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0203_Title">
         <source>A property that is not used should not be declared.</source>
-        <target state="translated">使用されていないプロパティは宣言しないでください。</target>
+        <target state="translated">使用されないプロパティを宣言する必要はありません。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildFinishedQuestionFailure">
@@ -284,17 +284,17 @@
       </trans-unit>
       <trans-unit id="CustomCheckAssemblyNotExist">
         <source>Failed to find the specified custom check assembly: '{0}'. Please check if it exists.</source>
-        <target state="translated">指定されたカスタム チェック アセンブリが見つかりませんでした: '{0}'。存在するかどうか確認してください。</target>
+        <target state="translated">指定されたカスタム チェック アセンブリ: '{0}' が見つかりませんでした。これが存在することを確認してください。</target>
         <note>The message is emitted when the custom check assembly can not be found.</note>
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
         <source>Failed to load the custom check type: '{0}' from the assembly: '{1}'. Make sure it inherits the Microsoft.Build.Experimental.BuildCheck.Check base class. If it is not intended to be a custom check, than it should not be exposed. More info: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</source>
-        <target state="translated">カスタム チェックの種類を読み込めませんでした: アセンブリ '{1}' の '{0}'。Microsoft.Build.Experimental.BuildCheck.Check 基底クラスを継承していることを確認してください。カスタム チェックを意図していない場合は、公開しないでください。詳細情報: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
+        <target state="translated">アセンブリ: '{1}' から、カスタム チェックの種類: '{0}'を読み込めませんでした。Microsoft.Build.Experimental.BuildCheck.Check の基底クラスを継承していることを確認してください。カスタム チェックを意図していない場合は、公開しないでください。詳細情報: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
         <note>The message is emitted when the custom check assembly can not be successfully registered.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedAcquisition">
         <source>Failed to register the custom check: '{0}'.</source>
-        <target state="translated">カスタム チェックを登録できませんでした: '{0}'。</target>
+        <target state="translated">カスタム チェック: '{0}'を登録できませんでした。</target>
         <note>The message is emitted on failed loading of the custom check in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedRuleLoading">
@@ -304,7 +304,7 @@
       </trans-unit>
       <trans-unit id="CustomCheckRegistered">
         <source>The custom check: '{0}' is registered for the build from the location: '{1}'.</source>
-        <target state="translated">カスタム チェック '{0}' は、場所 '{1}' からビルドに登録されています。</target>
+        <target state="translated">カスタム チェック: '{0}' は、場所: '{1}' からビルドに登録されています。</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckSuccessfulAcquisition">
@@ -375,7 +375,7 @@
       </trans-unit>
       <trans-unit id="IllegalCharactersInFileOrDirectory">
         <source>There are illegal characters in '{0}' in the {1} item.</source>
-        <target state="translated">{1} 項目内の '{0}' に不正な文字があります。</target>
+        <target state="translated">{1} 項目内の '{0}' が不正な文字を含んでいます。</target>
         <note />
       </trans-unit>
       <trans-unit id="ImportedProjectFromVSDistribution">
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index 3a66b53d8e5..b6f122d8d88 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -173,17 +173,17 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
-        <target state="translated">Właściwość: uzyskano dostęp do „{0}”, ale nigdy nie dokonano inicjacji.</target>
+        <target state="translated">Uzyskano dostęp do właściwości: „{0}”, ale nigdy nie zainicjowano jej.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_Title">
         <source>A property that is accessed should be declared first.</source>
-        <target state="translated">Właściwość, do których jest uzyskiwany dostęp, powinna być zadeklarowana jako pierwsza.</target>
+        <target state="translated">Właściwość, do której jest uzyskiwany dostęp, powinna być zadeklarowana jako pierwsza.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0202_MessageFmt">
         <source>Property: '{0}' first declared/initialized at {1} used before it was initialized.</source>
-        <target state="translated">Właściwość: „{0}” została najpierw zadeklarowana/zainicjowana {1} i była używania przed jej zainicjowaniem.</target>
+        <target state="translated">Właściwość: „{0}” została najpierw zadeklarowana/zainicjowana w {1} i była używania przed jej zainicjowaniem.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0202_Title">
@@ -193,7 +193,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0203_MessageFmt">
         <source>Property: '{0}' was declared/initialized, but it was never used.</source>
-        <target state="translated">Właściwość: uzyskano dostęp do „{0}”, ale nigdy nie dokonano inicjacji.</target>
+        <target state="translated">Zadeklarowano/zainicjowano właściwość: „{0}”, ale nigdy nie była używana.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0203_Title">
@@ -284,32 +284,32 @@
       </trans-unit>
       <trans-unit id="CustomCheckAssemblyNotExist">
         <source>Failed to find the specified custom check assembly: '{0}'. Please check if it exists.</source>
-        <target state="translated">Nie udało się znaleźć określonego niestandardowego zestawu kontrolnego: „{0}”. Sprawdź, czy istnieje.</target>
+        <target state="translated">Nie udało się znaleźć określonego niestandardowego zestawu kontroli: „{0}”. Sprawdź, czy istnieje.</target>
         <note>The message is emitted when the custom check assembly can not be found.</note>
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
         <source>Failed to load the custom check type: '{0}' from the assembly: '{1}'. Make sure it inherits the Microsoft.Build.Experimental.BuildCheck.Check base class. If it is not intended to be a custom check, than it should not be exposed. More info: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</source>
-        <target state="translated">Nie udało się załadować niestandardowego typu kontrolnego: „{0}” z zestawu: „{1}”. Upewnij się, że dziedziczy po klasie bazowej Microsoft.Build.Experimental.BuildCheck.Check. Jeśli nie ma to być kontrola niestandardowa, to nie powinna być ona ujawniana. Więcej informacji: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
+        <target state="translated">Nie udało się załadować niestandardowego typu kontroli: „{0}” z zestawu: „{1}”. Upewnij się, że dziedziczy klasę bazową Microsoft.Build.Experimental.BuildCheck.Check. Jeśli nie ma to być kontrola niestandardowa, to nie powinna być ona ujawniana. Więcej informacji: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
         <note>The message is emitted when the custom check assembly can not be successfully registered.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedAcquisition">
         <source>Failed to register the custom check: '{0}'.</source>
-        <target state="translated">Nie można zarejestrować niestandardowego kontrolera: „{0}”.</target>
+        <target state="translated">Nie można zarejestrować niestandardowej kontroli: „{0}”.</target>
         <note>The message is emitted on failed loading of the custom check in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedRuleLoading">
         <source>Failed to instantiate the custom check rule with the following exception: '{0}'.</source>
-        <target state="translated">Nie udało się utworzyć niestandardowej reguły utworzenia wystąpienia z następującym wyjątkiem: „{0}”.</target>
+        <target state="translated">Nie udało się utworzyć wystąpienia niestandardowej reguły kontroli z następującym wyjątkiem: „{0}”.</target>
         <note>The message is emitted on failed loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckRegistered">
         <source>The custom check: '{0}' is registered for the build from the location: '{1}'.</source>
-        <target state="translated">Kontroler niestandardowy „{0}” jest zarejestrowany dla kompilacji z lokalizacji: „{1}”.</target>
+        <target state="translated">Kontrola niestandardowa: „{0}” jest zarejestrowany dla kompilacji z lokalizacji: „{1}”.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckSuccessfulAcquisition">
         <source>Custom check rule: '{0}' has been registered successfully.</source>
-        <target state="translated">Niestandardowa reguła kontrolera: „{0}” została pomyślnie zarejestrowana.</target>
+        <target state="translated">Niestandardowa reguła kontroli: „{0}” została pomyślnie zarejestrowana.</target>
         <note>The message is emitted on successful loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
@@ -375,7 +375,7 @@
       </trans-unit>
       <trans-unit id="IllegalCharactersInFileOrDirectory">
         <source>There are illegal characters in '{0}' in the {1} item.</source>
-        <target state="translated">Element {0} zawiera niedozwolone znaki w „{1}”.</target>
+        <target state="translated">Element {1} zawiera niedozwolone znaki w „{0}”.</target>
         <note />
       </trans-unit>
       <trans-unit id="ImportedProjectFromVSDistribution">
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index bace491b7c8..e9ff9122da6 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -173,7 +173,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
-        <target state="translated">Propriedade: "{0}" foi acessada, mas nunca foi inicializada.</target>
+        <target state="translated">Propriedade: '{0}' foi acessada, mas nunca foi inicializada.</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_Title">
@@ -284,12 +284,12 @@
       </trans-unit>
       <trans-unit id="CustomCheckAssemblyNotExist">
         <source>Failed to find the specified custom check assembly: '{0}'. Please check if it exists.</source>
-        <target state="translated">Falha ao localizar o assembly de verificação personalizado especificado: '{0}'. Verifique se existe.</target>
+        <target state="translated">Falha ao localizar o assembly de verificação personalizada especificado: '{0}'. Verifique se existe.</target>
         <note>The message is emitted when the custom check assembly can not be found.</note>
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
         <source>Failed to load the custom check type: '{0}' from the assembly: '{1}'. Make sure it inherits the Microsoft.Build.Experimental.BuildCheck.Check base class. If it is not intended to be a custom check, than it should not be exposed. More info: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</source>
-        <target state="translated">Falha ao carregar o tipo de verificação personalizada: '{0}' do assembly: '{1}'. Certifique-se de que ele herda a classe base Microsoft.Build.Experimental.BuildCheck.Check. Se não for destinado a ser uma verificação personalizada, então não deve ser exposto. Mais informações: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
+        <target state="translated">Falha ao carregar o tipo de verificação personalizado: '{0}' do assembly: '{1}'. Verifique se ele herda a classe base Microsoft.Build.Experimental.BuildCheck.Check. Se não se destina a ser uma verificação personalizada, ela não deve ser exposta. Mais informações: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
         <note>The message is emitted when the custom check assembly can not be successfully registered.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedAcquisition">
@@ -304,12 +304,12 @@
       </trans-unit>
       <trans-unit id="CustomCheckRegistered">
         <source>The custom check: '{0}' is registered for the build from the location: '{1}'.</source>
-        <target state="translated">A verificação personalizada: '{0}' está registrada para a compilação a partir do local: '{1}'.</target>
+        <target state="translated">A verificação personalizada: '{0}' está registrada para a compilação do local: '{1}'.</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckSuccessfulAcquisition">
         <source>Custom check rule: '{0}' has been registered successfully.</source>
-        <target state="translated">Regra de verificação personalizada: '{0}' foi registrada com sucesso.</target>
+        <target state="translated">Regra de verificação personalizada: '{0}' foi registrada com êxito.</target>
         <note>The message is emitted on successful loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index 47304e3be51..125a80f18d9 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -158,7 +158,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_MessageAddendum">
         <source>'{0}' with value: '{1}'</source>
-        <target state="translated">值为“{1}”的“{0}”</target>
+        <target state="translated">'{0}'，值为 '{1}'</target>
         <note>Will be used as a parameter {0} in previous message.</note>
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_MessageFmt">
@@ -168,22 +168,22 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0103_Title">
         <source>No implicit property derived from an environment variable should be used during the build.</source>
-        <target state="translated">在生成过程中，不应使用派生自环境变量的隐式属性。</target>
+        <target state="translated">在生成过程中，不应使用派生自环境变量的任何隐式属性。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_MessageFmt">
         <source>Property: '{0}' was accessed, but it was never initialized.</source>
-        <target state="translated">已访问属性“{0}”，但从未将其初始化过。</target>
+        <target state="translated">已访问属性 '{0}'，但从未将其初始化。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0201_Title">
         <source>A property that is accessed should be declared first.</source>
-        <target state="translated">应首先声明访问的属性。</target>
+        <target state="translated">应首先声明所访问的属性。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0202_MessageFmt">
         <source>Property: '{0}' first declared/initialized at {1} used before it was initialized.</source>
-        <target state="translated">属性“{0}”在 {1} 使用时首先声明/初始化，再进行初始化。</target>
+        <target state="translated">属性: '{0}' 在 {1} 处使用时先声明/初始化，然后再进行初始化。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0202_Title">
@@ -193,7 +193,7 @@
       </trans-unit>
       <trans-unit id="BuildCheck_BC0203_MessageFmt">
         <source>Property: '{0}' was declared/initialized, but it was never used.</source>
-        <target state="translated">属性“{0}”已声明/初始化，但从未使用过。</target>
+        <target state="translated">属性: '{0}' 已声明/初始化，但从未使用过。</target>
         <note />
       </trans-unit>
       <trans-unit id="BuildCheck_BC0203_Title">
@@ -284,32 +284,32 @@
       </trans-unit>
       <trans-unit id="CustomCheckAssemblyNotExist">
         <source>Failed to find the specified custom check assembly: '{0}'. Please check if it exists.</source>
-        <target state="translated">找不到指定的自定义检查程序集: {0}。请检查它是否存在。</target>
+        <target state="translated">找不到指定的自定义检查程序集: '{0}'。请检查它是否存在。</target>
         <note>The message is emitted when the custom check assembly can not be found.</note>
       </trans-unit>
       <trans-unit id="CustomCheckBaseTypeNotAssignable">
         <source>Failed to load the custom check type: '{0}' from the assembly: '{1}'. Make sure it inherits the Microsoft.Build.Experimental.BuildCheck.Check base class. If it is not intended to be a custom check, than it should not be exposed. More info: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</source>
-        <target state="translated">未能从程序集“{1}”加载自定义检查类型“{0}”。请确保它继承 Microsoft.Build.Experimental.BuildCheck.Check 基类。如果不打算将其作为自定义检查，则不应将其公开。详细信息: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
+        <target state="translated">未能从程序集 '{1}' 加载自定义检查类型 '{0}'。请确保它继承 Microsoft.Build.Experimental.BuildCheck.Check 基类。如果它不旨在作为自定义检查，则不应将其公开。详细信息: https://github.com/dotnet/msbuild/blob/main/documentation/specs/proposed/BuildCheck-Architecture.md#acquisition</target>
         <note>The message is emitted when the custom check assembly can not be successfully registered.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedAcquisition">
         <source>Failed to register the custom check: '{0}'.</source>
-        <target state="translated">未能注册自定义检查: {0}。</target>
+        <target state="translated">未能注册自定义检查: '{0}'。</target>
         <note>The message is emitted on failed loading of the custom check in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckFailedRuleLoading">
         <source>Failed to instantiate the custom check rule with the following exception: '{0}'.</source>
-        <target state="translated">未能实例化自定义检查规则，出现以下异常: {0}。</target>
+        <target state="translated">未能实例化自定义检查规则，出现以下异常: '{0}'。</target>
         <note>The message is emitted on failed loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="CustomCheckRegistered">
         <source>The custom check: '{0}' is registered for the build from the location: '{1}'.</source>
-        <target state="translated">已从位置“{1}”为内部版本注册自定义检查“{0}”。</target>
+        <target state="translated">已从位置 '{1}' 为内部版本注册自定义检查 '{0}'。</target>
         <note />
       </trans-unit>
       <trans-unit id="CustomCheckSuccessfulAcquisition">
         <source>Custom check rule: '{0}' has been registered successfully.</source>
-        <target state="translated">已成功注册自定义检查规则“{0}”。</target>
+        <target state="translated">已成功注册自定义检查规则 '{0}'。</target>
         <note>The message is emitted on successful loading of the custom check rule in process.</note>
       </trans-unit>
       <trans-unit id="DefaultSDKResolverError">
@@ -375,7 +375,7 @@
       </trans-unit>
       <trans-unit id="IllegalCharactersInFileOrDirectory">
         <source>There are illegal characters in '{0}' in the {1} item.</source>
-        <target state="translated">{1} 项中的“{0}”中存在非法字符。</target>
+        <target state="translated">'{1}' 项中的 '{0}' 中存在非法字符。</target>
         <note />
       </trans-unit>
       <trans-unit id="ImportedProjectFromVSDistribution">
diff --git a/src/MSBuild/Resources/xlf/Strings.cs.xlf b/src/MSBuild/Resources/xlf/Strings.cs.xlf
index 131b294d5e5..5af597b09de 100644
--- a/src/MSBuild/Resources/xlf/Strings.cs.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.cs.xlf
@@ -319,10 +319,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Povolí během sestavení BuildChecks.
+                     BuildCheck umožňuje vyhodnocovat pravidla, aby se zajistily vlastnosti 
+                     sestavení. Další informace viz aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
diff --git a/src/MSBuild/Resources/xlf/Strings.de.xlf b/src/MSBuild/Resources/xlf/Strings.de.xlf
index 474b80e875b..d961734da6a 100644
--- a/src/MSBuild/Resources/xlf/Strings.de.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.de.xlf
@@ -174,7 +174,7 @@
                      the specified targets will be executed.
     </source>
         <target state="translated">  -getTargetResult:targetName,...
-                     Schreiben Sie den Ausgabewert eines oder mehrerer Ziele aus und
+                     Schreiben Sie den Ausgabewert eines oder mehrerer Ziele aus, und
                      die angegebenen Ziele werden ausgeführt.
     </target>
         <note>
@@ -202,15 +202,15 @@
                      Überprüft die Verfügbarkeit von Features. Das Ergebnis ist eine der
                      Zeichenfolgen "Undefined", "Available", "NotAvailable" und
                      "Preview".
-                     –Undefinied: Die Verfügbarkeit des Features ist nicht definiert
+                     – Undefinied: Die Verfügbarkeit des Features ist nicht definiert
                      (der Featurename ist für den Prüfer der Featureverfügbarkeit
                      unbekannt)
-                     -NotAvailable: Das Feature ist nicht verfügbar (im Gegensatz zu
+                     – NotAvailable: Das Feature ist nicht verfügbar (im Gegensatz zu
                      "Undefined", wo der Featurename für den Prüfer der Featureverfügbarkeit
                      bekannt ist und er weiß, dass das Feature von der
                      aktuellen MSBuild-Engine nicht unterstützt wird)
-                     -Available: Das Feature ist verfügbar
-                     -Preview: Das Feature befindet sich in der Vorschau (nicht stabil)
+                     – Available: Das Feature ist verfügbar
+                     – Preview: Das Feature befindet sich in der Vorschau (nicht stabil)
                      (Kurzform: -fa)
     </target>
         <note>
@@ -232,15 +232,15 @@
                      (Short form: -tl)
     </source>
         <target state="translated">  -terminalLogger[:auto,on,off]
-                     Aktiviert oder deaktiviert die Terminalprotokollierung. Terminal-Logger
+                     Aktiviert oder deaktiviert die Terminalprotokollierung. Terminalprotokollierung
                      bietet verbesserte Buildausgabe auf der Konsole in Echtzeit,
                      logisch nach Projekt organisiert und entwickelt, um
                      verwertbare Informationen hervorzuheben. Geben Sie "auto" an (oder verwenden Sie die Option
-                     ohne Argumente), um den Terminal-Logger nur zu verwenden, wenn die
-                     Standardausgabe nicht umgeleitet wird. Analysieren Sie die Ausgabe nicht
+                     ohne Argumente), um die Terminalprotokollierung nur zu verwenden, wenn die
+                     Standardausgabe nicht umgeleitet wird. Analysieren Sie die Ausgabe nicht,
                      oder vertrauen Sie darauf, dass sie in zukünftigen
                      Versionen unverändert bleibt. Diese Option ist in MSBuild 17.8 und
-                     später verfügbar.
+                     höher verfügbar.
                      (Kurzform: -tl)
     </target>
         <note>
@@ -269,19 +269,19 @@
                         -tlp:default=auto;verbosity=diag;shownCommandLine
     </source>
         <target state="translated">  -terminalLoggerParameters: &lt;parameters&gt;
-                     Parameter für Terminal-Logger. (Kurzform: -tlp)
+                     Parameter für die Terminalprotokollierung. (Kurzform: -tlp)
                      Die verfügbaren Parameter.
-                        default: Gibt das Standardverhalten des Terminal-
-                        Loggers an. Erfordert einen der folgenden Werte:
+                        default: Gibt das Standardverhalten der
+                        Terminalprotokollierung an. Erfordert einen der folgenden Werte:
                            – "on", "true" erzwingt die Verwendung von TerminalLogger, auch
-                            wenn er deaktiviert werden sollte.
+                            bei einer Deaktivierung.
                            – "off", "true" erzwingt die Nichtverwendung von TerminalLogger, auch
-                            wenn er aktiviert werden sollte.
+                            bei einer Aktivierung.
                            – "auto" aktiviert TerminalLogger, wenn das Terminal
                             dies unterstützt, und die Sitzung nicht umgeleitet wurde
                             stdout/stderr
-                        verbosity: Überschreiben Sie die Einstellung "-verbosity" für diesen
-                        Logger
+                        verbosity: Überschreiben Sie die Einstellung "-verbosity" für diese
+                        Protokollierung
                         showCommandLine: TaskCommandLineEvent-Meldungen anzeigen
 
                       Beispiel: 
@@ -318,10 +318,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Aktiviert BuildChecks während des Builds.
+                     BuildCheck ermöglicht die Regelauswertung, um Eigenschaften 
+                     des Builds sicherzustellen. Weitere Infos: aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
@@ -1827,12 +1827,12 @@ Dieses Protokollierungsformat ist standardmäßig aktiviert.
       </trans-unit>
       <trans-unit id="SAC_Enforcement">
         <source>1: in enforcement</source>
-        <target state="translated">1: bei der Erzwingung</target>
+        <target state="translated">1: bei der Durchsetzung</target>
         <note />
       </trans-unit>
       <trans-unit id="SAC_Evaluation">
         <source>2: in evaluation. It is recommended to turn off Smart App Control in development environemnt as otherwise performance might be impacted</source>
-        <target state="translated">2: in Auswertung. Es wird empfohlen, Smart App Control in der Entwicklungsumgebung zu deaktivieren, da andernfalls die Leistung beeinträchtigt werden könnte.</target>
+        <target state="translated">2: in Auswertung. Es wird empfohlen, Smart App Control in der Entwicklungsumgebung zu deaktivieren, da andernfalls die Leistung beeinträchtigt werden könnte</target>
         <note>Smart App Control, "VerifiedAndReputablePolicyState" should not be localized</note>
       </trans-unit>
       <trans-unit id="SAC_Off">
diff --git a/src/MSBuild/Resources/xlf/Strings.es.xlf b/src/MSBuild/Resources/xlf/Strings.es.xlf
index 061f8859b0b..f1d09a6d36b 100644
--- a/src/MSBuild/Resources/xlf/Strings.es.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.es.xlf
@@ -318,10 +318,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Habilita BuildChecks durante la compilación.
+                     BuildCheck permite evaluar reglas para garantizar que las propiedades 
+                     de la compilación. Para obtener más información, consulte aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
diff --git a/src/MSBuild/Resources/xlf/Strings.fr.xlf b/src/MSBuild/Resources/xlf/Strings.fr.xlf
index 59bf21295da..2cf83237e69 100644
--- a/src/MSBuild/Resources/xlf/Strings.fr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.fr.xlf
@@ -141,7 +141,7 @@
                      Notez la valeur d’une ou de plusieurs propriétés spécifiées
                      après l’évaluation, sans exécuter la build, ou si
                      l’option -targets ou l’option -getTargetResult est
-                     utilisé, écrivez les valeurs après la génération.
+                     utilisée, écrivez les valeurs après la build.
     </target>
         <note>
       LOCALIZATION: "-getProperty", "-targets" and "-getTargetResult" should not be localized.
@@ -161,7 +161,7 @@
                      leurs métadonnées associées après l’évaluation sans
                      l’exécution de la build, ou si l’option -targets
                      ou l’option -getTargetResult est utilisée, écrivez
-                     les valeurs après la génération.
+                     les valeurs après la build.
     </target>
         <note>
       LOCALIZATION: "-getItem", "targets" and "getTargetResult" should not be localized.
@@ -200,14 +200,14 @@
     </source>
         <target state="translated">  -featureAvailability:featureName,...
                      Vérifiez la disponibilité des fonctionnalités. Le résultat est l’une des
-                     chaînes « Undefined », « Available », « NotAvailable » et
-                     « Aperçu ».
+                     chaînes « Non défini », « Disponible », « Indisponible » et
+                     « Préversion ».
                      - Non défini : la disponibilité de la fonctionnalité n’est pas définie
-                     (le nom de la fonctionnalité est inconnu de la disponibilité des fonctionnalités
-                     vérificateur)
-                     - NotAvailable : la fonctionnalité n’est pas disponible (contrairement à
-                     Non défini, le nom de la fonctionnalité est connu de la fonctionnalité
-                     et sait que la fonctionnalité n’est pas
+                     (le nom de la fonctionnalité est inconnu du vérificateur de la disponibilité
+                     des fonctionnalités)
+                     - Indisponible : la fonctionnalité n’est pas disponible (contrairement à
+                     Non défini, le nom de la fonctionnalité est connu du vérificateur de la fonctionnalité
+                     et il sait que la fonctionnalité n’est pas
                      prise en charge par le moteur MSBuild actuel)
                      - Disponible : la fonctionnalité est disponible
                      - Préversion : la fonctionnalité est en préversion (non stable)
@@ -234,14 +234,13 @@
         <target state="translated">  -terminalLogger[:auto,on,off]
                      Activez ou désactivez l’enregistreur d’événements du terminal. Enregistreur d’événements terminal
                      fournit une sortie de build améliorée sur la console en temps réel,
-                     organisé logiquement par projet et conçu pour mettre en évidence
+                     organisée logiquement par projet et conçu pour mettre en évidence
                      les informations exploitables. Spécifier automatiquement (ou utiliser l’option
-                     sans arguments) pour utiliser l’enregistreur d’événements de terminal uniquement si le
-                     la sortie standard n’est pas redirigée. N’analysez pas la sortie
-                     ou reposez-vous sur le fait qu’il reste inchangé dans les
-futures
+                     sans arguments) pour utiliser l’enregistreur d’événements de terminal uniquement si la
+                     sortie standard n’est pas redirigée. N’analysez pas la sortie
+                     et ne vous attendez pas à ce qu’elle reste inchangée dans les futures
                      versions. Cette option est disponible dans MSBuild 17.8 et
-                     ultérieures.
+                     versions ultérieures.
                      (Forme abrégée : -tl)
     </target>
         <note>
@@ -272,8 +271,8 @@ futures
         <target state="translated">  -terminalLoggerParameters: &lt;parameters&gt;
                      Paramètres de l’enregistreur d’événements de terminal. (Forme abrégée : -tlp)
                      Paramètres disponibles.
-                        default --Spécifie le comportement par défaut du terminal
-                        enregistreur. Elle nécessite l’une des valeurs suivantes :
+                        default --Spécifie le comportement par défaut de l’enregistreur
+                        de terminal. Elle nécessite l’une des valeurs suivantes :
                            - 'on', 'true' force TerminalLogger à être utilisé même
                             quand il serait désactivé.
                            - 'off', 'false' force TerminalLogger à ne pas être utilisé
@@ -319,10 +318,10 @@ futures
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Active BuildChecks pendant la build.
+                     BuildCheck permet d'évaluer les règles pour garantir les propriétés 
+                     de la build. Pour plus d'informations, consultez aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
@@ -1833,7 +1832,7 @@ Remarque : verbosité des enregistreurs d’événements de fichiers
       </trans-unit>
       <trans-unit id="SAC_Evaluation">
         <source>2: in evaluation. It is recommended to turn off Smart App Control in development environemnt as otherwise performance might be impacted</source>
-        <target state="translated">2 : en évaluation Il est recommandé de désactiver smart App Control dans l’environnement de développement, car les performances risquent d’être affectées dans le cas contraire</target>
+        <target state="translated">2 : en évaluation. Il est recommandé de désactiver smart App Control dans l’environnement de développement, car les performances risquent d’être affectées dans le cas contraire</target>
         <note>Smart App Control, "VerifiedAndReputablePolicyState" should not be localized</note>
       </trans-unit>
       <trans-unit id="SAC_Off">
diff --git a/src/MSBuild/Resources/xlf/Strings.it.xlf b/src/MSBuild/Resources/xlf/Strings.it.xlf
index 400f99d4116..0d75a659f21 100644
--- a/src/MSBuild/Resources/xlf/Strings.it.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.it.xlf
@@ -120,10 +120,10 @@
                      This flag is experimental and may not work as intended.
     </source>
         <target state="translated">  -reportFileAccesses[:True|False]
-                     Fa in modo che MSBuild segnali gli accessi ai file a qualsiasi file configurato
+                     Fa in modo che MSBuild segnali gli accessi ai file a qualsiasi
                      plug-in della cache del progetto.
 
-Questo flag è sperimentale e potrebbe non funzionare come previsto.
+                     Questo flag è sperimentale e potrebbe non funzionare come previsto.
     </target>
         <note>
       LOCALIZATION: "-reportFileAccesses" should not be localized.
@@ -138,10 +138,10 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                      used, write out the values after the build.
     </source>
         <target state="translated">  -getProperty:propertyName,...
-                     Scrivere il valore di una o più proprietà specificate
-                     dopo la valutazione, senza eseguire la compilazione o se
-                     si usa sia l'opzione -targets che l’opzione -getTargetResult
-                     scrivere i valori dopo la compilazione.
+                     Scrive il valore di una o più proprietà specificate
+                     dopo la valutazione, senza eseguire la compilazione oppure, se
+                     usa l'opzione -targets o l’opzione -getTargetResult
+                     scrive i valori dopo la compilazione.
     </target>
         <note>
       LOCALIZATION: "-getProperty", "-targets" and "-getTargetResult" should not be localized.
@@ -157,10 +157,10 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                      the values after the build.
     </source>
         <target state="translated">  -getItem:itemName,...
-                     Scrivere il valore di uno o più elementi specificati e
+                     Scrive il valore di uno o più elementi specificati e
                      i metadati associati dopo la valutazione senza
-                     eseguire la compilazione o in caso si usi l’opzione -targets
-                     oppure l'opzione -getTargetResult, scrivere
+                     eseguire la compilazione oppure, se si usa l’opzione -targets
+                     o l'opzione -getTargetResult, scrive
                      i valori dopo la compilazione.
     </target>
         <note>
@@ -174,7 +174,7 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                      the specified targets will be executed.
     </source>
         <target state="translated">  -getTargetResult:targetName,...
-                     Scrivere il valore di output di una o più destinazioni
+                     Scrive il valore di output di una o più destinazioni
                      per eseguire le destinazioni specificate.
     </target>
         <note>
@@ -199,19 +199,18 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                      (Short form: -fa)
     </source>
         <target state="translated">  -featureAvailability:featureName,...
-                     Verificare la disponibilità delle funzionalità. Il risultato è uno delle
-                     stringhe "Non definito", "Disponibile", "Non disponibile" e
-                     "Anteprima".
-                     - Non definito: la disponibilità della funzionalità non è definita
-                     (Il nome della funzionalità non è noto al controllo
+                     Verifica la disponibilità delle funzionalità. Il risultato è una delle
+                     stringhe "Undefined", "Available", "NotAvailable" e
+                     "Preview".
+                     - Undefined: la disponibilità della funzionalità non è definita
+                     (il nome della funzionalità non è noto al controllo
                      della disponibilità delle funzionalità)
-                     - Non disponibile: la funzionalità non è disponibile (a differenza di
-                     Non definito, dove il nome della funzionalità è noto al controllo della disponibilità della funzionalità
-,
-                     che sa che la funzionalità non è
+                     - NotAvailable: la funzionalità non è disponibile (a differenza di
+                     Undefined, il nome della funzionalità è noto al controllo
+                     della disponibilità della funzionalità, che sa che la funzionalità non è
                      supportata dal motore MSBuild corrente)
-                     - Disponibile: la funzionalità è disponibile
-                     - Anteprima : la funzionalità è in anteprima (non stabile)
+                     - Available: la funzionalità è disponibile
+                     - Preview : la funzionalità è in anteprima (non stabile)
                      (Forma breve: -fa)
     </target>
         <note>
@@ -232,17 +231,17 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                      later.
                      (Short form: -tl)
     </source>
-        <target state="translated">  -terminalLogger[:automatico, attivato, disattivato]
-                     Abilitare o disabilitare il logger del terminale. Logger del terminale
-                     fornisce output di compilazione avanzati in tempo reale sulla console,
-                     organizzato in maniera logica in base al progetto e progettato per evidenziare
-                     dati analitici interattivi. Specificare automatico (o usare l'opzione
-                     senza argomenti) per usare il logger del terminale solo se l’
-                     output standard non viene reindirizzato. Non analizzare l'output
-                     oppure affidarsi al fatto che non verrà modificato nelle future
+        <target state="translated">  -terminalLogger[:auto,on,off]
+                     Abilita o disabilita il logger del terminale. Il logger del terminale
+                     fornisce output di compilazione avanzato nella console in tempo reale,
+                     con dati organizzati in maniera logica in base al progetto ed evidenziando
+                     le informazioni che richiedono intervento. Specificare auto (o usare l'opzione
+                     senza argomenti) per usare il logger del terminale solo se
+                     l'output standard non viene reindirizzato. Non eseguire il parsing dell'output
+                     oppure fare affidamento sul fatto che rimarrà invariato nelle future
                      versioni. Questa opzione è disponibile in MSBuild 17.8 e
                      versioni successive.
-                     Forma breve: -tl)
+                     (Forma breve: -tl)
     </target>
         <note>
       LOCALIZATION: "-terminalLogger", "-tl", and "auto" should not be localized.
@@ -270,18 +269,18 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                         -tlp:default=auto;verbosity=diag;shownCommandLine
     </source>
         <target state="translated">  -terminalLoggerParameters: &lt;parameters&gt;
-                     Parametri per il logger del terminale. Forma breve: -tlp)
+                     Parametri per il logger del terminale. (Forma breve: -tlp)
                      Parametri disponibili.
-                        impostazione predefinita- Specifica il comportamento predefinito del terminale
+                        default- Specifica il comportamento predefinito del terminale
                         logger. Richiede uno dei valori seguenti:
-                           - 'attivato', 'vero' forza l'uso di TerminalLogger anche
+                           - 'on', 'true' impone l'uso di TerminalLogger anche
                             se venisse disabilitato.
-                           - 'disattivato', 'falso' forza l'uso di TerminalLogger anche
+                           - 'off', 'false' impone l'uso di TerminalLogger anche
                             se venisse abilitato.
-                           - 'automatico' abilita TerminalLogger quando il terminale
+                           - 'auto' abilita TerminalLogger quando il terminale
                             lo supporta e la sessione non ha reindirizzato il livello di dettaglio
                             stdout/stderr
-                        -- Eseguire l'override dell'impostazione del livello di dettaglio per questo
+                        verbosity--Ignora l'impostazione -verbosity per questo
                         logger
                         showCommandLine--Mostra i messaggi TaskCommandLineEvent
 
@@ -302,11 +301,11 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                      This writes the value of property Bar into Biz.txt.
     </source>
         <target state="translated">  -getResultOutputFile:file
-                     Reindirizza l'output da get* in un file.
+                     Reindirizza l'output di get* in un file.
 
                      Esempio:
-                     -getProperty:barra -getResultOutputFile:Biz.txt
-                     Il valore della barra delle proprietà viene scritto in Biz.txt.
+                     -getProperty:Bar -getResultOutputFile:Biz.txt
+                     Il valore della proprietà Bar viene scritto in Biz.txt.
     </target>
         <note>
       LOCALIZATION: "-getResultOutputFile", "get*" and "-getProperty" should not be localized.
@@ -319,10 +318,10 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Abilita BuildChecks durante la compilazione.
+                     BuildCheck consente di valutare le regole per garantire le proprietà 
+                     della compilazione. Per altre informazioni, vedere aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
@@ -809,8 +808,8 @@ Questo flag è sperimentale e potrebbe non funzionare come previsto.
                        [&lt;classe&gt;,]&lt;assembly&gt;[,&lt;opzioni&gt;][;&lt;parametri&gt;]
                      La sintassi di &lt;classe logger&gt; è la seguente:
                        [&lt;spazio dei nomi parziale o completo&gt;.]&lt;nome classe logger&gt;
-                     La sintassi di &lt;assembly logger&gt; è la seguente:
-                       {&lt;nome assembly&gt;[,&lt;strong name&gt;] | &lt;file di assembly&gt;}
+                     La sintassi di &lt;logger assembly&gt; è la seguente:
+                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
                      Le opzioni di logger consentono di specificare in che modo MSBuild crea il logger.
                      I &lt;parametri logger&gt; sono facoltativi e vengono passati al
                      logger così come vengono digitati. Forma breve: -l.
@@ -1091,8 +1090,8 @@ Nota: livello di dettaglio dei logger di file
                        [&lt;classe&gt;,]&lt;assembly&gt;[,&lt;opzioni&gt;][;&lt;parametri&gt;]
                      La sintassi di &lt;classe logger&gt; è la seguente:
                        [&lt;spazio dei nomi parziale o completo&gt;.]&lt;nome classe logger&gt;
-                     La sintassi di &lt;assembly logger&gt; è la seguente:
-                       {&lt;nome assembly&gt;[,&lt;strong name&gt;] | &lt;file di assembly&gt;}
+                     La sintassi di &lt;logger assembly&gt; è la seguente:
+                       {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
                      Le opzioni di logger consentono di specificare in che modo MSBuild crea il logger.
                      I &lt;parametri logger&gt; sono facoltativi e vengono passati al
                      logger così come vengono digitati. Forma breve: -l
@@ -1211,9 +1210,8 @@ Nota: livello di dettaglio dei logger di file
                      è la directory corrente. Per impostazione predefinita, ai
                      file viene assegnato il nome "MSBuild&lt;idnodo&gt;.log". Il
                      percorso dei file e altri parametri di fileLogger possono
-                     essere specificati aggiungendo l'opzione
+                     essere specificati aggiungendo l'opzione "-fileLoggerParameters".
 
-                     "-fileLoggerParameters".
                      Se il nome di un file di log viene impostato con l'opzione
                      fileLoggerParameters, il logger distribuito userà il nome
                      file come modello e aggiungerà l'ID del nodo per creare un
@@ -1560,7 +1558,7 @@ Nota: livello di dettaglio dei logger di file
       </trans-unit>
       <trans-unit id="MissingFeatureAvailabilityError">
         <source>MSBUILD : error MSB1067: Must provide a feature name for the featureAvailability switch.</source>
-        <target state="translated">MSBUILD : error MSB1067: È necessario fornire un nome funzionalità per l’opzione featureAvailability.</target>
+        <target state="translated">MSBUILD : error MSB1067: È necessario fornire un nome di funzionalità per l’opzione featureAvailability.</target>
         <note>
       {StrBegin="MSBUILD : error MSB1067: "}UE: This happens if the user does something like "msbuild.exe -featureAvailability". The user must pass in an actual feature name
       following the switch, as in "msbuild.exe -featureAvailability:blah".
@@ -2342,16 +2340,15 @@ Esegue la profilatura della valutazione di MSBuild e scrive
                        -restoreProperty:IsRestore=true;MyProperty=value
     </source>
         <target state="translated">  -restoreProperty:&lt;n&gt;=&lt;v&gt;
-                      Imposta queste proprietà a livello di progetto o ne esegue
-                      l'override solo durante il ripristino e non usa le
-                      proprietà specificate con l'argomento -property.
-                      &lt;v&gt; rappresenta il nome della proprietà e &lt;v&gt; il
-                      valore della proprietà. Usare il punto e virgola o la
-                      virgola per delimitare più proprietà o specificare ogni
-                      proprietà separatamente.
-                      Forma breve: -rp.
-                      Esempio:
-                        -restoreProperty:IsRestore=true;MyProperty=value
+                     Imposta queste proprietà a livello di progetto o ne esegue
+                     l'override solo durante il ripristino e non usa le
+                     proprietà specificate con l'argomento -property.
+                     &lt;v&gt; rappresenta il nome della proprietà e &lt;v&gt; il
+                     valore della proprietà. Usare il punto e virgola o la
+                     virgola per delimitare più proprietà o specificare ogni proprietà separatamente.
+                     (Forma breve: -rp)
+                     Esempio:
+                       -restoreProperty:IsRestore=true;MyProperty=value
     </target>
         <note>
       LOCALIZATION: "-restoreProperty" and "-rp" should not be localized.
diff --git a/src/MSBuild/Resources/xlf/Strings.ja.xlf b/src/MSBuild/Resources/xlf/Strings.ja.xlf
index c9248c6d329..c30742dfbb3 100644
--- a/src/MSBuild/Resources/xlf/Strings.ja.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ja.xlf
@@ -138,11 +138,11 @@
                      used, write out the values after the build.
     </source>
         <target state="translated">  -getProperty:propertyName,...
-                    1 つ以上の指定されたプロパティの値を書き出し
-                    評価後、ビルドを実行せずに、または
-                    -targets オプションまたは -getTargetResult オプションが
-                    使用して、ビルド後に値を書き出します。
-   </target>
+                     評価後にビルドを実行せずに、1 つ以上の
+                     指定されたプロパティの値を書き出します。
+                     または、-targets オプションまたは -getTargetResult オプションが
+                     使用されている場合は、ビルド後に値を書き出します。
+    </target>
         <note>
       LOCALIZATION: "-getProperty", "-targets" and "-getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -157,12 +157,12 @@
                      the values after the build.
     </source>
         <target state="translated">  -getItem:itemName,...
-                    1 つ以上の指定された項目の値を書き出し、
-                    評価後に関連付けられたメタデータを
-                    ビルドを実行せずに、または -targets オプション
-                    または -getTargetResult オプションが使用されている場合は、書き込み
-                    ビルド後の値。
-   </target>
+                     評価後にビルドを実行せずに、1 つ以上の指定された項目の値と
+                     関連付けられたメタデータを書き出します。
+                     または、-targets オプションまたは -getTargetResult オプションが
+                     使用されている場合は、ビルド後に
+                     値を書き出します。
+    </target>
         <note>
       LOCALIZATION: "-getItem", "targets" and "getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -174,9 +174,9 @@
                      the specified targets will be executed.
     </source>
         <target state="translated">  -getTargetResult:targetName,...
-                    1 つ以上のターゲットの出力値を書き出し、
-                    指定したターゲットが実行されます。
-   </target>
+                     1 つ以上のターゲットの出力値を書き出し、
+                     指定したターゲットが実行されます。
+    </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -199,20 +199,20 @@
                      (Short form: -fa)
     </source>
         <target state="translated">  -featureAvailability:featureName,...
-                    機能の可用性を確認します。結果は、次のいずれかになります。
-                    文字列 "Undefined"、"Available"、"NotAvailable"、および
-                    "Preview" です。
-                    - Undefined - 機能の可用性は未定義です
-                    (機能名が機能の可用性に関して不明です
-                    チェッカー)
-                    - NotAvailable - この機能は使用できません
-                    Undefined とは異なり、機能名は機能に認識されています
-                    可用性チェッカーは、この機能が
-                    現在の MSBuild エンジンでサポートされていないことを理解しています)
-                    - Available - この機能は使用可能です
-                    - Preview - 機能はプレビュー段階です (安定していません)
-                    (短い形式: -fa)
-   </target>
+                     機能の可用性を確認します。結果は、文字列 "Undefined"、
+                     "Available"、"NotAvailable"、"Preview" の
+                     いずれかになります。
+                     - Undefined - 機能の可用性は未定義です
+                     (機能名は機能の可用性チェッカーに対して
+                     不明です)
+                     - NotAvailable - この機能は使用できません
+                     Undefined とは異なり、機能名は機能の可用性チェッカーが
+                     認識しており、このチェッカーは、この機能が現在の MSBuild エンジンで
+                     サポートされていないことを理解しています)
+                     - Available - この機能は使用可能です
+                     - Preview - 機能はプレビュー段階です (安定していません)
+                     (短い形式: -fa)
+    </target>
         <note>
       LOCALIZATION: "-featureAvailability", "-fa", "Undefined", "Available" "NotAvailable" and "Preview"should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -232,17 +232,17 @@
                      (Short form: -tl)
     </source>
         <target state="translated">  -terminalLogger[:auto,on,off]
-                    ターミナル ロガーを有効または無効にします。ターミナル ロガーは
-                    本体のビルド出力がリアルタイムで強化され、
-                    プロジェクトごとに論理的に整理され、強調表示するように設計されています
-                    アクション可能な情報です。auto を指定する (またはオプションを使用する)
-                    引数を指定せずに) ターミナル ロガーを使用する場合は、
-                    標準出力はリダイレクトされません。出力を解析しないでください
-                    それ以外の場合は、将来変更されずに残っている
-                    バージョン。このオプションは、MSBuild 17.8 以降で利用可能です
-                    以降で。
-                    (短い形式: -tl)
-   </target>
+                     ターミナル ロガーを有効または無効にします。ターミナル ロガーは、
+                     本体で強化されたビルド出力をリアルタイムに提供します。
+                     この出力は、プロジェクトごとに論理的に整理されており、アクション可能な情報を
+                     強調表示するように設計されています。標準出力がリダイレクトされない場合のみ、
+                     auto を指定 (または引数を指定せずにオプションを使用) して、
+                     ターミナル ロガーを使用します。出力を解析しないでください。
+                     別の方法で出力を利用してください。残りの部分は将来のバージョンで
+                     変更されずに残ります。このオプションは、MSBuild 17.8 以降で
+                     利用可能です。
+                     (短い形式: -tl)
+    </target>
         <note>
       LOCALIZATION: "-terminalLogger", "-tl", and "auto" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -269,25 +269,24 @@
                         -tlp:default=auto;verbosity=diag;shownCommandLine
     </source>
         <target state="translated">  -terminalLoggerParameters: &lt;parameters&gt;
-                    ターミナル ロガーへのパラメーター。(短い形式: -tlp) 
-                    使用可能なパラメーター。
-                       default -- ターミナル 
- の既定の動作を指定します
-                       ロガー。次のいずれかの値が必要です:
-                          - `on`、`true` は TerminalLogger を強制的に使用します
-                           無効である場合も同様です。
-                          - `off`、`false` は TerminalLogger を使用しないように強制します
-                           有効である場合も同様です。
-                          - `auto` は、次の場合にターミナルで TerminalLogger を有効にします
-                           サポートされており、セッションがリダイレクトされていない場合です
-                           stdout/stderr
-                       verbosity-- 下記の verbosity 設定をオーバーライドします
-                       logger
-                       showCommandLine -- TaskCommandLineEvent メッセージを表示します
+                     ターミナル ロガーへのパラメーター。(短い形式: -tlp) 
+                     使用可能なパラメーター。
+                        default -- ターミナル ロガーの既定の動作を
+                        指定します。次のいずれかの値が必要です。
+                           - `on`、`true` の場合、TerminalLogger が無効である場合も
+                            TerminalLogger を強制的に使用します。
+                           - `off`、`false` の場合、TerminalLogger が有効である場合も
+                            TerminalLogger を使用しないように強制します。
+                           - `auto` の場合、ターミナルで TerminalLogger がサポートされており、
+                            セッションが stdout/stderr をリダイレクトしていない場合、
+                            TerminalLogger を有効にします
+                        verbosity-- このロガーの -verbosity 設定を
+                        オーバーライドします
+                        showCommandLine -- TaskCommandLineEvent メッセージを表示します
 
-                     例: 
-                       -tlp:default=auto;verbosity=diag;shownCommandLine
-   </target>
+                      例: 
+                        -tlp:default=auto;verbosity=diag;shownCommandLine
+    </target>
         <note>
       LOCALIZATION: "-terminalLoggerParameters", "-tlp", "default", "on", "true", "off", "false", "auto", "verbosity", "showCommandLine" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -302,12 +301,12 @@
                      This writes the value of property Bar into Biz.txt.
     </source>
         <target state="translated">  -getResultOutputFile:file
-                    get* からの出力をファイルにリダイレクトします。
+                     get* からの出力をファイルにリダイレクトします。
 
-                    例: 
-                    -getProperty:Bar -getResultOutputFile:Biz.txt
-                    これにより、プロパティ Bar の値が Biz.txt に書き込まれます。
-   </target>
+                     例: 
+                     -getProperty:Bar -getResultOutputFile:Biz.txt
+                     これにより、プロパティ Bar の値が Biz.txt に書き込まれます。
+    </target>
         <note>
       LOCALIZATION: "-getResultOutputFile", "get*" and "-getProperty" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -319,10 +318,11 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     ビルド中に BuildChecks を有効にします。
+                     BuildCheck を使用すると、ビルドのプロパティ 
+ を保証するための
+                     ルールを評価できます。詳細については、aka.ms/buildcheck を参照してください
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
@@ -1823,7 +1823,7 @@
       </trans-unit>
       <trans-unit id="SAC">
         <source>Based on the Windows registry key VerifiedAndReputablePolicyState, SAC state = {0}.</source>
-        <target state="translated">Windows レジストリ キー VerifiedAndReputablePolicyState に基づいて、SAC 状態 = {0}。</target>
+        <target state="translated">Windows レジストリ キー VerifiedAndReputablePolicyState に基づいており、SAC 状態 = {0} です。</target>
         <note>"Windows" is the OS, SAC is the Smart App Control, "VerifiedAndReputablePolicyState" should not be localized</note>
       </trans-unit>
       <trans-unit id="SAC_Enforcement">
diff --git a/src/MSBuild/Resources/xlf/Strings.ko.xlf b/src/MSBuild/Resources/xlf/Strings.ko.xlf
index 9a2dcb11612..acf5a5753f2 100644
--- a/src/MSBuild/Resources/xlf/Strings.ko.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ko.xlf
@@ -139,7 +139,7 @@
     </source>
         <target state="translated">  -getProperty:propertyName,...
                      빌드를 실행하지 않고 평가 후
-                     지정된 속성 중 하나 이상의 값을 작성하거나,
+                     하나 이상의 지정된 속성 값을 작성하거나,
                      -targets 옵션 또는 -getTargetResult 옵션을 사용하는 경우
                      빌드 후 값을 작성합니다.
     </target>
@@ -158,8 +158,8 @@
     </source>
         <target state="translated">  -getItem:itemName,...
                      빌드를 실행하지 않고 평가 후
-                     지정된 항목 중 하나 이상의 값 및
-                     연결된 해당 메타데이터를 작성하거나,
+                     하나 이상의 지정된 항목 및
+                     관련 메타데이터의 값을 작성하거나
                      -targets 옵션 또는 -getTargetResult 옵션을 사용하는 경우
                      빌드 후 값을 작성합니다.
     </target>
@@ -174,7 +174,7 @@
                      the specified targets will be executed.
     </source>
         <target state="translated">  -getTargetResult:targetName,...
-                     대상 하나 이상의 출력 값을 작성하면
+                     하나 이상의 대상의 출력 값을 작성하면
                      지정된 대상이 실행됩니다.
     </target>
         <note>
@@ -202,11 +202,11 @@
                      기능 가용성을 확인합니다. 결과는
                      문자열 "Undefined", "Available", "NotAvailable" 및
                      "Preview" 중 하나입니다.
-                     - 정의되지 않음 - 기능의 가용성이 정의되지 않았습니다
+                     - Undefined - 기능의 가용성이 정의되지 않았습니다
                      (기능 가용성 검사기에서 기능 이름을 인식할 수
                      없음).
                      - NotAvailable - 기능을 사용할 수 없습니다(
-                     정의되지 않음과는 달리, 기능 가용성 검사가에서 기능 이름을
+                     Undefined와 달리, 기능 가용성 검사가에서 기능 이름을
                      인식할 수 있으며 기능이 현재 MSBuild 엔진에서 지원되지
                      않는 것으로 인식하고 있음).
                      - Available - 기능을 사용할 수 있습니다.
@@ -232,14 +232,14 @@
                      (Short form: -tl)
     </source>
         <target state="translated">  -terminalLogger[:auto,on,off]
-                     터미널 로거를 사용하거나 사용하지 않도록 설정합니다. 터미널 로거
-                     는 콘솔에서 향상된 빌드 출력을 실시간으로 제공합니다.
-                     이러한 출력은 프로젝트별로 논리적으로 구성되고 실행 가능한 정보를
-                     강조 표시하도록 설계되어 있습니다. 자동을 지정(또는 인수 없이 옵션
-                     사용)하여 터미널 로거를 사용합니다. 단, 이 경우
-                     표준 출력이 리디렉션되지 않아야 합니다. 출력을 구문 분석하지 않습니다.
-                     그렇지 않을 경우 이후 버전에서 변경되지 않은 상태로
-                     유지됩니다. 이 옵션은 MSBuild 17.8 이상 버전에서
+                     터미널 로거를 사용하거나 사용하지 않도록 설정합니다. 터미널 로거는
+                     콘솔에서 향상된 빌드 출력을 실시간으로 제공하고
+                     프로젝트별로 논리적으로 구성되며 실행 가능한 정보를
+                     강조 표시하도록 설계되어 있습니다. 표준 출력이 리디렉션되지 않는
+                     경우에만 터미널 로거를 사용하려면 auto를 지정하거나
+                     인수 없이 옵션을 사용합니다. 출력을 구문 분석하지 않으면
+                     향후 버전에서도 변경되지 않은 상태로 유지될 것이라고
+                     기대하지 마세요. 이 옵션은 MSBuild 17.8 이상 버전에서
                      제공됩니다.
                      (약식: -tl)
     </target>
@@ -271,21 +271,20 @@
         <target state="translated">  -terminalLoggerParameters: &lt;parameters&gt;
                      터미널 로거에 대한 매개 변수입니다. (약식: -tlp)
                      사용 가능한 매개 변수입니다.
-                        default--터미널의 기본 동작을 지정합니다.
-                        로거입니다. 다음 값 중 하나가 필요합니다.
-                           - 'on', 'true'는 terminalLogger를 사용하도록 강제하며,
-                            이는 사용하지 않도록 설정된 경우에도 마찬가지입니다.
-                           - 'off', 'false'는 terminalLogger를 사용하지 않도록 강제하며,
-                            이는 사용하도록 설정된 경우에도 마찬가지입니다.
-                           - 'auto'는 터미널이
-                            지원하고 세션이 리디렉션되지 않을 때 TerminalLogger를 사용하도록 설정합니다.
+                        default--터미널 로거의 기본 동작을
+                        지정합니다. 다음 값 중 하나가 필요합니다.
+                           - 'on', 'true'는 비활성화된 경우에도 terminalLogger를
+                            사용하도록 강제합니다.
+                           - 'off', 'false'는 활성화된 경우에도 terminalLogger를
+                            사용하지 않도록 강제합니다.
+                           - 'auto'는 터미널이 지원하고 세션이
+                            리디렉션되지 않을 때 TerminalLogger를 활성화합니다.
                             stdout/stderr
-                        verbosity--이
-로거에 대한 -verbosity 설정을
+                        verbosity--이 로거에 대한 -verbosity 설정을
                         재정의합니다.
                         showCommandLine--TaskCommandLineEvent 메시지를 표시합니다.
 
-                      예:
+                      예: 
                         -tlp:default=auto;verbosity=diag;shownCommandLine
     </target>
         <note>
@@ -304,7 +303,7 @@
         <target state="translated">  -getResultOutputFile:file
                      get*에서 파일로 출력을 리디렉션합니다.
 
-                     예:
+                     예: 
                      -getProperty:Bar -getResultOutputFile:Biz.txt
                      그러면 속성 Bar의 값이 Biz.txt에 기록됩니다.
     </target>
@@ -319,10 +318,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     빌드하는 동안 BuildChecks를 사용하도록 설정합니다.
+                     BuildCheck를 사용하면 규칙을 평가하여 빌드의 속성을 
+                     확인할 수 있습니다. 자세한 내용은 aka.ms/buildcheck를 참조하세요.
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
diff --git a/src/MSBuild/Resources/xlf/Strings.pl.xlf b/src/MSBuild/Resources/xlf/Strings.pl.xlf
index 58dbe3e4b72..848b715ed04 100644
--- a/src/MSBuild/Resources/xlf/Strings.pl.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pl.xlf
@@ -203,8 +203,8 @@
                      ciągów „Undefined”, „Available”, „NotAvailable” i
                      „Preview”.
                      — Undefined — dostępność funkcji jest niezdefiniowana
-                     (nazwa funkcji jest nieznana dla dostępności funkcji
-                     kontroler)
+                     (nazwa funkcji jest nieznana dla kontrolera dostępności
+                     funkcji)
                      — NotAvailable — funkcja jest niedostępna (w przeciwieństwie do
                      Undefined, nazwa funkcji jest znana kontrolerowi
                      dostępności funkcji i wie on, że funkcja nie jest
@@ -235,12 +235,12 @@
                      Włącz lub wyłącz rejestrator terminali. Rejestrator terminali
                      udostępnia ulepszone dane wyjściowe kompilacji na konsoli w czasie rzeczywistym,
                      uporządkowane logicznie według projektu i zaprojektowane do wyróżniania
-                     informacji umożliwiających podejmowanie działań. Określ auto (lub użyj opcji
+                     informacji umożliwiających podejmowanie działań. Określ automatycznie (lub użyj opcji
                      bez argumentów), aby używać rejestratora terminali tylko wtedy, gdy
-                     standardowe dane wyjściowe nie są przekierowywane. Nie analizowanie danych wyjściowych
-                     lub inaczej – poleganie na nich pozostanie niezmienione w przyszłych
+                     standardowe dane wyjściowe nie są przekierowywane. Nie analizuj danych wyjściowych
+                     albo w przeciwnym razie poleganie na nich pozostanie niezmienione w przyszłych
                      wersjach. Ta opcja jest dostępna w wersji MSBuild 17.8 i
-                     późniejszych.
+                     nowszych.
                      (Krótka forma: -tl)
     </target>
         <note>
@@ -272,17 +272,17 @@
                      Parametry rejestratora terminali. (Krótka forma: -tlp)
                      Dostępne parametry.
                         default-- określa domyślne zachowanie rejestratora
-                        terminalu. Wymaga jednej z następujących wartości:
-                           — „on”, „true” wymusza użycie elementu TerminalLogger nawet
+                        terminali. Wymaga jednej z następujących wartości:
+                           — „on”, „true” wymusza użycie elementu TerminalLogger, nawet
                             kiedy zostanie on wyłączony.
                            — „off”, „false” wymusza nieużywanie elementu TerminalLogger
                             nawet wtedy, gdy zostanie on włączony.
                            — „auto” włącza element TerminalLogger, gdy terminal
                             go obsługuje, a sesja nie została przekierowana
                             stdout/stderr
-                        verbosity-- zastąp ustawienie -verbosity dla tego
+                        verbosity-- zastępuje ustawienie -verbosity dla tego
                         rejestratora
-                        showCommandLine-- pokaż komunikaty TaskCommandLineEvent
+                        showCommandLine-- pokazuje komunikaty TaskCommandLineEvent
 
                       Przykład:
                         -tlp:default=auto;verbosity=diag;shownCommandLine
@@ -318,10 +318,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Włącza funkcję BuildChecks podczas kompilacji.
+                     Funkcja BuildCheck umożliwia ocenę reguł w celu zapewnienia właściwości 
+                     kompilacji. Aby uzyskać więcej informacji, zobacz aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
diff --git a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
index 55fce38c949..ae1a2ba730b 100644
--- a/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.pt-BR.xlf
@@ -301,7 +301,7 @@
                      -getProperty:Bar -getResultOutputFile:Biz.txt
                      This writes the value of property Bar into Biz.txt.
     </source>
-        <target state="translated">  -getResultOutputFile:file
+        <target state="translated">  -getResultOutputFile:arquivo
                      Redirecionar a saída de get* para um arquivo.
 
                      Exemplo:
@@ -319,10 +319,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Habilita BuildChecks durante o build.
+                     BuildCheck habilita a avaliação de regras para garantir que as propriedades 
+                     do build. Para obter mais informações, confira aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
diff --git a/src/MSBuild/Resources/xlf/Strings.ru.xlf b/src/MSBuild/Resources/xlf/Strings.ru.xlf
index 10739164a94..4b9497fda51 100644
--- a/src/MSBuild/Resources/xlf/Strings.ru.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.ru.xlf
@@ -200,7 +200,7 @@
     </source>
         <target state="translated">  -featureAvailability:featureName,...
                      Проверьте доступность функции. Результатом является одна из 
-                     строк "Неопределено", "Доступно", "Недоступно" и 
+                     строк "Не определено", "Доступно", "Недоступно" и 
                      "Предварительный просмотр". 
                      - Не определено — доступность функции не определена 
                      (имя функции неизвестно средству проверки доступности 
@@ -273,18 +273,18 @@
                      Доступные параметры. 
                         по умолчанию — определяет поведение логгера 
                         терминала. Требуется одно из следующих значений: 
-                           - `on`, `true` заставляет использовать TerminalLogger даже 
+                           - "on", "true" заставляет использовать TerminalLogger даже 
                             когда он будет отключен. 
-                           - `off`, `false` запрещает использование TerminalLogger 
+                           - "off", "false" запрещает использование TerminalLogger 
                             даже если бы он был включен. 
-                           - `auto` включает TerminalLogger, когда терминал 
+                           - "auto" включает TerminalLogger, когда терминал 
                             поддерживает это, и в сеансе нет перенаправления
                             stdout/stderr
                         verbosity – Переопределить параметр -verbosity для этого 
                         терминала 
                         showCommandLine — Показать сообщения TaskCommandLineEvent 
 
-                      Пример: 
+                      Пример:
                         -tlp:default=auto;verbosity=diag;shownCommandLine
     </target>
         <note>
@@ -318,10 +318,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Включает BuildChecks во время сборки.
+                     BuildCheck дает оценивать правила для проверки свойств 
+                     сборки. Дополнительные сведения см. на странице aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
diff --git a/src/MSBuild/Resources/xlf/Strings.tr.xlf b/src/MSBuild/Resources/xlf/Strings.tr.xlf
index 8f490412f9f..752bf19f5a6 100644
--- a/src/MSBuild/Resources/xlf/Strings.tr.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.tr.xlf
@@ -318,10 +318,11 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     Derleme sırasında BuildChecks'i sağlar.
+                     BuildCheck, derleme özelliklerinin 
+ güvenliğini sağlamak için
+                     kuralların değerlendirilmesini sağlar. Daha fazla bilgi için bkz. aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
@@ -1832,7 +1833,7 @@
       </trans-unit>
       <trans-unit id="SAC_Evaluation">
         <source>2: in evaluation. It is recommended to turn off Smart App Control in development environemnt as otherwise performance might be impacted</source>
-        <target state="translated">2: değerlendirmede. Aksi takdirde performansın etkilenebileceği için geliştirme ortamında Akıllı Uygulama Denetimi’nin kapatılması önerilir</target>
+        <target state="translated">2: değerlendirmede. Aksi takdirde performans etkilenebileceği için geliştirme ortamında Akıllı Uygulama Denetiminin kapatılması önerilir</target>
         <note>Smart App Control, "VerifiedAndReputablePolicyState" should not be localized</note>
       </trans-unit>
       <trans-unit id="SAC_Off">
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
index 562b21cf284..71f65c89f2b 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hans.xlf
@@ -138,11 +138,11 @@
                      used, write out the values after the build.
     </source>
         <target state="translated">  -getProperty:propertyName,...
-                    在计算后写出一个或多个指定属性的值，
-                    但不执行生成，或者如果使用的是
-                    -targets 选项或 -getTargetResult 选项，
-                    则在生成后写出这些值。
-   </target>
+                     在计算后写出一个或多个指定属性的值，
+                     但不执行生成，或者如果使用的是
+                     -targets 选项或 -getTargetResult 选项，
+                     则在生成后写出这些值。
+    </target>
         <note>
       LOCALIZATION: "-getProperty", "-targets" and "-getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -157,12 +157,12 @@
                      the values after the build.
     </source>
         <target state="translated">  -getItem:itemName,...
-                    在计算后写出一个或多个指定项的值及其
-                    关联的元数据，但不
-                    执行生成，或者如果使用的是 -targets 选项
-                    或 -getTargetResult 选项，则在生成后写出
-                    这些值。
-   </target>
+                     在计算后写出一个或多个指定项的值及其
+                     关联的元数据，但不
+                     执行生成，或者如果使用的是 -targets 选项
+                     或 -getTargetResult 选项，则在生成后写出
+                     这些值。
+    </target>
         <note>
       LOCALIZATION: "-getItem", "targets" and "getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -174,9 +174,9 @@
                      the specified targets will be executed.
     </source>
         <target state="translated">  -getTargetResult:targetName,...
-                    写出一个或多个目标的输出值，
-                    并且将执行指定的目标。
-   </target>
+                     写出一个或多个目标的输出值，
+                     并且将执行指定的目标。
+    </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -199,20 +199,20 @@
                      (Short form: -fa)
     </source>
         <target state="translated">  -featureAvailability:featureName,...
-                    检查功能可用性。结果是以下字符串之一:
-                    "Undefined"、"Available"、"NotAvailable" 和
-                    "Preview"。
-                    - Undefined - 未定义功能的可用性
-                    (功能可用性检查器不知道
-                    该功能名称)
-                    - NotAvailable - 功能不可用(不同于
-                    Undefined，功能可用性检查器知道
-                    该功能名称，并且还知道该功能不
-                    受当前 MSBuild 引擎支持)
-                    - Available - 功能可用
-                    - Preview - 功能处于预览状态(不稳定)
-                    (缩写: -fa)
-   </target>
+                     检查功能可用性。结果是以下字符串之一:
+                     "Undefined"、"Available"、"NotAvailable" 和
+                     "Preview"。
+                     - Undefined - 未定义功能的可用性
+                     (功能可用性检查器不知道
+                     该功能名称)
+                     - NotAvailable - 功能不可用(不同于
+                     Undefined，功能可用性检查器知道
+                     该功能名称，并且还知道该功能不
+                     受当前 MSBuild 引擎支持)
+                     - Available - 功能可用
+                     - Preview - 功能处于预览状态(不稳定)
+                     (缩写: -fa)
+    </target>
         <note>
       LOCALIZATION: "-featureAvailability", "-fa", "Undefined", "Available" "NotAvailable" and "Preview"should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -232,17 +232,17 @@
                      (Short form: -tl)
     </source>
         <target state="translated">  -terminalLogger[:auto,on,off]
-                    启用或禁用终端记录器。终端记录器
-                    在控制台上实时提供增强的生成输出，
-                    这些输出在逻辑上按项目进行整理，旨在突出显示
-                    可操作信息。指定 auto (或使用
-                    不带参数的选项)，仅在标准输出未重定向的情况下
-                    使用终端记录器。不要分析输出，
-                    也不要依赖于它在将来的版本中保持
-                    不变。此选项在 MSBuild 17.8 和
-                    更高版本中提供。
-                    (缩写: -tl)
-   </target>
+                     启用或禁用终端记录器。终端记录器
+                     在控制台上实时提供增强的生成输出，
+                     这些输出在逻辑上按项目进行整理，旨在突出显示
+                     可操作信息。指定 auto (或使用
+                     不带参数的选项)，仅在标准输出未重定向的情况下
+                     使用终端记录器。不要分析输出，
+                     也不要依赖于它在将来的版本中保持
+                     不变。此选项在 MSBuild 17.8 和
+                     更高版本中提供。
+                     (缩写: -tl)
+    </target>
         <note>
       LOCALIZATION: "-terminalLogger", "-tl", and "auto" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -269,24 +269,24 @@
                         -tlp:default=auto;verbosity=diag;shownCommandLine
     </source>
         <target state="translated">  -terminalLoggerParameters: &lt;parameters&gt;
-                    终端记录器的参数。(缩写: -tlp)
-                    可用参数。
-                       default - 指定终端
-                       记录器的默认行为。它需要以下值之一:
-                          - `on`、`true` 可强制使用 TerminalLogger，
-                           即使它已禁用也是如此。
-                          - `off`、`false` 可强制不使用 TerminalLogger，
-                           即使它已启用也是如此。
-                          - `auto` 可在终端支持 TerminalLogger
-                           且会话没有重定向的 stdout/stderr 时
-                           启用 TerminalLogger
-                       verbosity - 替代此记录器的 -verbosity
-                       设置
-                       showCommandLine - 显示 TaskCommandLineEvent 消息
+                     终端记录器的参数。(缩写: -tlp)
+                     可用参数。
+                        default - 指定终端
+                        记录器的默认行为。它需要以下值之一:
+                           - `on`、`true` 可强制使用 TerminalLogger，
+                            即使它已禁用也是如此。
+                           - `off`、`false` 可强制不使用 TerminalLogger，
+                            即使它已启用也是如此。
+                           - `auto` 可在终端支持 TerminalLogger
+                            且会话没有重定向的 stdout/stderr 时
+                            启用 TerminalLogger
+                        verbosity - 替代此记录器的 -verbosity
+                        设置
+                        showCommandLine - 显示 TaskCommandLineEvent 消息
 
-                     示例:
-                       -tlp:default=auto;verbosity=diag;shownCommandLine
-   </target>
+                      示例:
+                        -tlp:default=auto;verbosity=diag;shownCommandLine
+    </target>
         <note>
       LOCALIZATION: "-terminalLoggerParameters", "-tlp", "default", "on", "true", "off", "false", "auto", "verbosity", "showCommandLine" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -301,12 +301,12 @@
                      This writes the value of property Bar into Biz.txt.
     </source>
         <target state="translated">  -getResultOutputFile:file
-                    将 get* 的输出重定向到文件中。
+                     将 get* 的输出重定向到文件中。
 
-                    示例:
-                    -getProperty:Bar -getResultOutputFile:Biz.txt
-                    这会将属性 Bar 的值写入 Biz.txt。
-   </target>
+                     示例:
+                     -getProperty:Bar -getResultOutputFile:Biz.txt
+                     这会将属性 Bar 的值写入 Biz.txt。
+    </target>
         <note>
       LOCALIZATION: "-getResultOutputFile", "get*" and "-getProperty" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -318,10 +318,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     在生成中启用 BuildChecks。
+                     BuildCheck 允许评估规则以确保生成的
+                     属性。有关详细信息，请参阅 aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
@@ -1747,7 +1747,7 @@
       </trans-unit>
       <trans-unit id="ProjectFinished_WithTF">
         <source>{0}{1} {2} {3} ({4}s)</source>
-        <target state="translated">{0}{1} {2} {3} ({4} 秒)</target>
+        <target state="translated">{0}{1} {2} {3} ({4})</target>
         <note>
       Project finished summary including target framework information.
       {0}: indentation - few spaces to visually indent row
diff --git a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
index dbac1d9e2df..e6bc56aae3d 100644
--- a/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/MSBuild/Resources/xlf/Strings.zh-Hant.xlf
@@ -138,11 +138,11 @@
                      used, write out the values after the build.
     </source>
         <target state="translated">  -getProperty:propertyName,...
-                    於評估後，寫出一或多個指定屬性的值，以及
-                    但不執行建置；如有使用
-                    -targets 選項或 -getTargetResult 選項，
-                    便於建置之後，再寫出這些值。
-   </target>
+                     於評估後，寫出一或多個指定屬性的值，以及
+                     但不執行建置；如有使用
+                     -targets 選項或 -getTargetResult 選項，
+                     便於建置之後，再寫出這些值。
+    </target>
         <note>
       LOCALIZATION: "-getProperty", "-targets" and "-getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -157,12 +157,12 @@
                      the values after the build.
     </source>
         <target state="translated">  -getItem:itemName,...
-                    於評估後，寫出一或多個指定項目的值，以及
-                    其相關的中繼資料，但不
-                    執行建置；如有使用 -targets 選項
-                    或 -getTargetResult 選項，
-                    便於建置之後，再寫出這些值。
-   </target>
+                     於評估後，寫出一或多個指定項目的值，以及
+                     其相關的中繼資料，但不
+                     執行建置；如有使用 -targets 選項
+                     或 -getTargetResult 選項，
+                     便於建置之後，再寫出這些值。
+    </target>
         <note>
       LOCALIZATION: "-getItem", "targets" and "getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -174,9 +174,9 @@
                      the specified targets will be executed.
     </source>
         <target state="translated">  -getTargetResult:targetName,...
-                    寫出一或多個目標的輸出值，然後
-                    執行指定的目標。
-   </target>
+                     寫出一或多個目標的輸出值，然後
+                     執行指定的目標。
+    </target>
         <note>
       LOCALIZATION: "-getTargetResult" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -199,20 +199,20 @@
                      (Short form: -fa)
     </source>
         <target state="translated">  -featureAvailability:featureName,...
-                    檢查功能可用性。結果會是下列其中一個字串:
-                    “Undefined”、“Available”、“NotAvailable” 和
-                    "Preview"。
-                    - Undefined - 功能的可用性未定義
-                    (功能可用性檢查程式不知道
-                    該功能名稱)
-                    - NotAvailable - 此功能無法使用 (不同於
-                    Undefined，功能可用性檢查程式知道該功能名稱，
-                    並知道功能目前的
-                    MSBuild 引擎不支援該功能)
-                    - Available - 此功能可以使用
-                    - Preview - 此功能目前為預覽狀態 (不穩定)
-                    (簡短形式: -fa)
-   </target>
+                     檢查功能可用性。結果會是下列其中一個字串:
+                     “Undefined”、“Available”、“NotAvailable” 和
+                     "Preview"。
+                     - Undefined - 功能的可用性未定義
+                     (功能可用性檢查程式不知道
+                     該功能名稱)
+                     - NotAvailable - 此功能無法使用 (不同於
+                     Undefined，功能可用性檢查程式知道該功能名稱，
+                     並知道功能目前的
+                     MSBuild 引擎不支援該功能)
+                     - Available - 此功能可以使用
+                     - Preview - 此功能目前為預覽狀態 (不穩定)
+                     (簡短形式: -fa)
+    </target>
         <note>
       LOCALIZATION: "-featureAvailability", "-fa", "Undefined", "Available" "NotAvailable" and "Preview"should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -232,17 +232,17 @@
                      (Short form: -tl)
     </source>
         <target state="translated">  -terminalLogger[:auto,on,off]
-                    啟用或停用終端機記錄器。終端機記錄器
-                    會即時在主機上，提供更進一步的組建輸出，
-                    並依照專案的邏輯編排，並會醒目提示
-                    可採取動作的資訊。指定自動 (或只使用選項，
-                    不使用引數) 只在使用標準輸出
-                    未重新導向時，才使用終端機記錄器。不剖析輸出，
-                    或以其他方式據此在
-                    未來的版本中保持不變。此選項可在 MSBuild 17.8 和
-                    更新版本中使用。
-                    (簡短形式: -tl)
-   </target>
+                     啟用或停用終端機記錄器。終端機記錄器
+                     會即時在主機上，提供更進一步的組建輸出，
+                     並依照專案的邏輯編排，並會醒目提示
+                     可採取動作的資訊。指定自動 (或只使用選項，
+                     不使用引數) 只在使用標準輸出
+                     未重新導向時，才使用終端機記錄器。不剖析輸出，
+                     或以其他方式據此在
+                     未來的版本中保持不變。此選項可在 MSBuild 17.8 和
+                     更新版本中使用。
+                     (簡短形式: -tl)
+    </target>
         <note>
       LOCALIZATION: "-terminalLogger", "-tl", and "auto" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -269,24 +269,24 @@
                         -tlp:default=auto;verbosity=diag;shownCommandLine
     </source>
         <target state="translated">  -terminalLoggerParameters: &lt;parameters&gt;
-                    終端機記錄器的參數。(簡短形式: -tlp)
-                    可用的參數。
-                       default -- 指定終端機記錄器的預設值。
-                       其需要下列其中一值: 
+                     終端機記錄器的參數。(簡短形式: -tlp)
+                     可用的參數。
+                        default -- 指定終端機記錄器的預設值
+                        。其需要下列其中一值: 
 。
-                          - 'on'、'true' 會強制使用 TerminalLogger，即使
-                           其之後可能會停用。
-                          - 'off'、'false' 會強制使用 TerminalLogger，即使
-                           其之後可能會啟用。
-                          - `auto` 會啟用 terminalLogger，但終端機必須能夠
-                           提供支援，且工作階段未經重新導向
-                           stdout/stderr
-                       verbosity -- 覆寫上記錄器的
-                       -verbosity
-                       showCommandLine -- 顯示 TaskCommandLineEvent 訊息
+                           - 'on'、'true' 會強制使用 TerminalLogger，即使
+                            其之後可能會停用。
+                           - 'off'、'false' 會強制使用 TerminalLogger，即使
+                            其之後可能會啟用。
+                           - `auto` 會啟用 terminalLogger，但終端機必須能夠
+                            提供支援，且工作階段未經重新導向
+                            stdout/stderr
+                        verbosity -- 覆寫上記錄器的
+                        -verbosity
+                        showCommandLine -- 顯示 TaskCommandLineEvent 訊息
 
-                     範例: 
-                       -tlp:default=auto;verbosity=diag;shownCommandLine
+                      範例: 
+                        -tlp:default=auto;verbosity=diag;shownCommandLine
     </target>
         <note>
       LOCALIZATION: "-terminalLoggerParameters", "-tlp", "default", "on", "true", "off", "false", "auto", "verbosity", "showCommandLine" should not be localized.
@@ -302,12 +302,12 @@
                      This writes the value of property Bar into Biz.txt.
     </source>
         <target state="translated">  -getResultOutputFile:file
-                    將輸出從 get* 重新導向至檔案。
+                     將輸出從 get* 重新導向至檔案。
 
-                    範例: 
-                    -getProperty:Bar -getResultOutputFile:Biz.txt
-                    這會將屬性列的值寫入 Biz.txt。
-   </target>
+                     範例: 
+                     -getProperty:Bar -getResultOutputFile:Biz.txt
+                     這會將屬性列的值寫入 Biz.txt。
+    </target>
         <note>
       LOCALIZATION: "-getResultOutputFile", "get*" and "-getProperty" should not be localized.
       LOCALIZATION: None of the lines should be longer than a standard width console window, eg 80 chars.
@@ -319,10 +319,10 @@
                      BuildCheck enables evaluating rules to ensure properties 
                      of the build. For more info see aka.ms/buildcheck
 	</source>
-        <target state="new">  -check
-                     Enables BuildChecks during the build.
-                     BuildCheck enables evaluating rules to ensure properties 
-                     of the build. For more info see aka.ms/buildcheck
+        <target state="translated">  -check
+                     在建置期間啟用 BuildChecks。
+                     BuildCheck 會啟用評估規則以確保組建的 
+                     屬性。如需詳細資訊，請參閱 aka.ms/buildcheck
 	</target>
         <note>
     {Locked="-check"}{Locked="BuildChecks"}{Locked="BuildCheck"}
@@ -1833,7 +1833,7 @@
       </trans-unit>
       <trans-unit id="SAC_Evaluation">
         <source>2: in evaluation. It is recommended to turn off Smart App Control in development environemnt as otherwise performance might be impacted</source>
-        <target state="translated">2: 評估中。建議關閉開發環境中的智慧型手機應用程式控制件，否則效能可能會受到影響</target>
+        <target state="translated">2: 評估中。建議關閉開發環境中的智慧型應用程式控制，否則效能可能會受到影響</target>
         <note>Smart App Control, "VerifiedAndReputablePolicyState" should not be localized</note>
       </trans-unit>
       <trans-unit id="SAC_Off">
diff --git a/src/Tasks/Resources/xlf/Strings.pl.xlf b/src/Tasks/Resources/xlf/Strings.pl.xlf
index ffa383198a1..3792580a231 100644
--- a/src/Tasks/Resources/xlf/Strings.pl.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pl.xlf
@@ -1102,7 +1102,7 @@
       <trans-unit id="GenerateResource.BinaryFormatterUse">
         <source>MSB3825: Resource "{0}" of type "{1}" may be deserialized via BinaryFormatter at runtime. BinaryFormatter is deprecated due to known security risks and is removed from .NET 9+. If you wish to continue using it, set property "GenerateResourceWarnOnBinaryFormatterUse" to false.
            More information: https://aka.ms/binaryformatter-migration-guide</source>
-        <target state="translated">MSB3825: zasób „{0}” typu „{1}” może być deserializowany za pośrednictwem elementu BinaryFormatter w czasie wykonywania. Element BinaryFormatter jest przestarzały ze względu na znane zagrożenia bezpieczeństwa i został usunięty z platformy .NET 9 lub nowszej. Jeśli chcesz nadal go używać, ustaw właściwość „GenerateResourceWarnOnBinaryFormatterUse” na false.
+        <target state="translated">MSB3825: zasób „{0}” typu „{1}” może być deserializowany za pośrednictwem elementu BinaryFormatter w czasie wykonywania. Element BinaryFormatter jest przestarzały ze względu na znane zagrożenia bezpieczeństwa i został usunięty z platformy .NET 9. Jeśli chcesz nadal go używać, ustaw właściwość „GenerateResourceWarnOnBinaryFormatterUse” na wartość false.
            Więcej informacji: https://aka.ms/binaryformatter-migration-guide</target>
         <note>{StrBegin="MSB3825: "}</note>
       </trans-unit>
diff --git a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
index b1fbdae6b1e..37616373175 100644
--- a/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Tasks/Resources/xlf/Strings.pt-BR.xlf
@@ -1102,7 +1102,7 @@
       <trans-unit id="GenerateResource.BinaryFormatterUse">
         <source>MSB3825: Resource "{0}" of type "{1}" may be deserialized via BinaryFormatter at runtime. BinaryFormatter is deprecated due to known security risks and is removed from .NET 9+. If you wish to continue using it, set property "GenerateResourceWarnOnBinaryFormatterUse" to false.
            More information: https://aka.ms/binaryformatter-migration-guide</source>
-        <target state="translated">MSB3825: O recurso "{0}" do tipo "{1}" pode ser desserializado via BinaryFormatter em tempo de execução. O BinaryFormatter foi preterido devido a riscos de segurança conhecidos e foi removido do .NET 9+. Se desejar continuar usando, defina a propriedade "GenerateResourceWarnOnBinaryFormatterUse" como false.
+        <target state="translated">MSB3825: O recurso “{0}” do tipo “{1}” pode ser desserializado por meio do BinaryFormatter em runtime. O BinaryFormatter foi preterido devido a riscos de segurança conhecidos e foi removido do .NET 9+. Se quiser continuar a usá-lo, defina a propriedade “GenerateResourceWarnOnBinaryFormatterUse” como false.
            Mais informações: https://aka.ms/binaryformatter-migration-guide</target>
         <note>{StrBegin="MSB3825: "}</note>
       </trans-unit>
diff --git a/src/Tasks/Resources/xlf/Strings.ru.xlf b/src/Tasks/Resources/xlf/Strings.ru.xlf
index 7dd8f4c5939..a8b80419059 100644
--- a/src/Tasks/Resources/xlf/Strings.ru.xlf
+++ b/src/Tasks/Resources/xlf/Strings.ru.xlf
@@ -1103,7 +1103,7 @@
         <source>MSB3825: Resource "{0}" of type "{1}" may be deserialized via BinaryFormatter at runtime. BinaryFormatter is deprecated due to known security risks and is removed from .NET 9+. If you wish to continue using it, set property "GenerateResourceWarnOnBinaryFormatterUse" to false.
            More information: https://aka.ms/binaryformatter-migration-guide</source>
         <target state="translated">MSB3825: для ресурса "{0}" с типом "{1}" может быть выполнена десериализация с помощью BinaryFormatter во время выполнения. BinaryFormatter является нерекомендуемым из-за известных рисков безопасности и удален из .NET 9+. Если вы хотите продолжить использовать его, задайте для свойства GenerateResourceWarnOnBinaryFormatterUse значение false.
-           Дополнительные сведения см. в руководстве по миграции по ссылке https://aka.ms/binaryformatter.</target>
+           Дополнительные сведения: https://aka.ms/binaryformatter-migration-guide</target>
         <note>{StrBegin="MSB3825: "}</note>
       </trans-unit>
       <trans-unit id="GenerateResource.CoreSupportsLimitedScenarios">
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
index 230cd56322d..acb082b3a7b 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hans.xlf
@@ -1102,8 +1102,8 @@
       <trans-unit id="GenerateResource.BinaryFormatterUse">
         <source>MSB3825: Resource "{0}" of type "{1}" may be deserialized via BinaryFormatter at runtime. BinaryFormatter is deprecated due to known security risks and is removed from .NET 9+. If you wish to continue using it, set property "GenerateResourceWarnOnBinaryFormatterUse" to false.
            More information: https://aka.ms/binaryformatter-migration-guide</source>
-        <target state="translated">MSB3825: 可在运行时通过 BinaryFormatter 反序列化类型为“{1}”的资源“{0}”。由于已知的安全风险，BinaryFormatter 已被弃用，并从 .NET 9+ 中删除。如果要继续使用它，请将属性“GenerateResourceWarnOnBinaryFormatterUse”设置为 false。
-           有关详细信息，请参阅：https://aka.ms/binaryformatter-migration-guide</target>
+        <target state="translated">MSB3825: 可在运行时通过 BinaryFormatter 反序列化类型为“{1}”的资源“{0}”。由于已知的安全风险，BinaryFormatter 已被弃用，并从 .NET 9+ 中删除。如果要继续使用它，请将属性 "GenerateResourceWarnOnBinaryFormatterUse" 设置为 false。
+           有关详细信息，请参阅:https://aka.ms/binaryformatter-migration-guide</target>
         <note>{StrBegin="MSB3825: "}</note>
       </trans-unit>
       <trans-unit id="GenerateResource.CoreSupportsLimitedScenarios">
diff --git a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
index e76b7fe1b2b..d0b71988dc7 100644
--- a/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Tasks/Resources/xlf/Strings.zh-Hant.xlf
@@ -1102,8 +1102,8 @@
       <trans-unit id="GenerateResource.BinaryFormatterUse">
         <source>MSB3825: Resource "{0}" of type "{1}" may be deserialized via BinaryFormatter at runtime. BinaryFormatter is deprecated due to known security risks and is removed from .NET 9+. If you wish to continue using it, set property "GenerateResourceWarnOnBinaryFormatterUse" to false.
            More information: https://aka.ms/binaryformatter-migration-guide</source>
-        <target state="translated">MSB3825: 在執行階段，可能會透過 BinaryFormatter 將類型為「{1}」的資源「{0}」取消初始化。BinaryFormatter 已因已知的安全性風險而被棄用，且已從 .NET 9+ 中移除。如果您想要繼續使用它，請將屬性 "GenerateResourceWarnOnBinaryFormatterUse" 設為 false。
-           詳細資訊: https://aka.ms/binaryformatter-migration-guide</target>
+        <target state="translated">MSB3825: 類型為 "{1}" 的資源 "{0}" 可以在執行階段透過 BinaryFormatter 進行還原序列化。BinaryFormatter 已因已知的安全性風險遭到取代，且已從 .NET 9+ 中移除。如果您想要繼續使用它，請將屬性 "GenerateResourceWarnOnBinaryFormatterUse" 設為 false。
+           詳細資訊 (英文): https://aka.ms/binaryformatter-migration-guide</target>
         <note>{StrBegin="MSB3825: "}</note>
       </trans-unit>
       <trans-unit id="GenerateResource.CoreSupportsLimitedScenarios">
