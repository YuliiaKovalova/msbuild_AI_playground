diff --git a/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverLoader.cs b/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverLoader.cs
new file mode 100644
index 00000000000..a6f4790859c
--- /dev/null
+++ b/src/Build/BackEnd/Components/SdkResolution/CachingSdkResolverLoader.cs
@@ -0,0 +1,49 @@
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+
+using System.Collections.Concurrent;
+using System.Collections.Generic;
+using Microsoft.Build.Construction;
+using Microsoft.Build.Framework;
+
+namespace Microsoft.Build.BackEnd.SdkResolution
+{
+    internal class CachingSdkResolverLoader : SdkResolverLoader
+    {
+        private readonly IReadOnlyList<SdkResolver> _defaultResolvers;
+        private readonly ConcurrentDictionary<SdkResolverManifest, IReadOnlyList<SdkResolver>> _resolversByManifest = new();
+
+        private IReadOnlyList<SdkResolver>? _allResolvers;
+        private IReadOnlyList<SdkResolverManifest>? _resolversManifests;
+
+        private readonly object _lock = new();
+
+        public CachingSdkResolverLoader()
+        {
+            _defaultResolvers = base.GetDefaultResolvers();
+        }
+
+        internal override IReadOnlyList<SdkResolver> GetDefaultResolvers() => _defaultResolvers;
+
+        internal override IReadOnlyList<SdkResolver> LoadAllResolvers(ElementLocation location)
+        {
+            lock (_lock)
+            {
+                return _allResolvers ??= base.LoadAllResolvers(location);
+            }
+        }
+
+        internal override IReadOnlyList<SdkResolverManifest> GetResolversManifests(ElementLocation location)
+        {
+            lock (_lock)
+            {
+                return _resolversManifests ??= base.GetResolversManifests(location);
+            }
+        }
+
+        protected internal override IReadOnlyList<SdkResolver> LoadResolversFromManifest(SdkResolverManifest manifest, ElementLocation location)
+        {
+            return _resolversByManifest.GetOrAdd(manifest, (manifest) => base.LoadResolversFromManifest(manifest, location));
+        }
+    }
+}
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 59fdacae941..a42e76cc270 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -226,6 +226,7 @@
     <Compile Include="BackEnd\Components\Scheduler\SchedulerCircularDependencyException.cs" />
     <Compile Include="BackEnd\Components\Scheduler\ScheduleTimeRecord.cs" />
     <Compile Include="BackEnd\Components\Scheduler\SchedulingPlan.cs" />
+    <Compile Include="BackEnd\Components\SdkResolution\CachingSdkResolverLoader.cs" />
     <Compile Include="BackEnd\Components\SdkResolution\DefaultSdkResolver.cs" />
     <Compile Include="BackEnd\Components\SdkResolution\ISdkResolverService.cs" />
     <Compile Include="BackEnd\Components\SdkResolution\OutOfProcNodeSdkResolverService.cs" />
