diff --git a/src/Utilities/ToolTask.cs b/src/Utilities/ToolTask.cs
index ff31beaba21..52313983a33 100644
--- a/src/Utilities/ToolTask.cs
+++ b/src/Utilities/ToolTask.cs
@@ -149,6 +149,11 @@ protected ToolTask(ResourceManager taskResources, string helpKeywordPrefix)
         /// </summary>
         private string _temporaryBatchFile;
 
+        /// <summary>
+        /// The encoding set to the console code page.
+        /// </summary>
+        private Encoding _encoding;
+
         /// <summary>
         /// Implemented by the derived class. Returns a string which is the name of the underlying .EXE to run e.g. "resgen.exe"
         /// Only used by the ToolExe getter.
@@ -229,7 +234,21 @@ public virtual string ToolExe
         /// here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding
         /// doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).
         /// </remarks>
-        protected virtual Encoding StandardOutputEncoding { get; private set; } = EncodingUtilities.CurrentSystemOemEncoding;
+        protected virtual Encoding StandardOutputEncoding
+        {
+            get
+            {
+                if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10))
+                {
+                    if (_encoding != null)
+                    {
+                        // Keep the encoding of standard output & error consistent with the console code page.
+                        return _encoding;
+                    }
+                }
+                return EncodingUtilities.CurrentSystemOemEncoding;
+            }
+        }
 
         /// <summary>
         /// Overridable property specifying the encoding of the captured task standard error stream
@@ -239,7 +258,21 @@ public virtual string ToolExe
         /// here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding
         /// doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).
         /// </remarks>
-        protected virtual Encoding StandardErrorEncoding { get; private set; } = EncodingUtilities.CurrentSystemOemEncoding;
+        protected virtual Encoding StandardErrorEncoding
+        {
+            get
+            {
+                if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10))
+                {
+                    if (_encoding != null)
+                    {
+                        // Keep the encoding of standard output & error consistent with the console code page.
+                        return _encoding;
+                    }
+                }
+                return EncodingUtilities.CurrentSystemOemEncoding;
+            }
+        }
 
         /// <summary>
         /// Gets the Path override value.
@@ -1419,9 +1452,7 @@ public override bool Execute()
                         File.AppendAllText(_temporaryBatchFile, commandLineCommands, encoding);
                         if (ChangeWaves.AreFeaturesEnabled(ChangeWaves.Wave17_10))
                         {
-                            // Keep the encoding of standard output & error consistent with the console code page.
-                            StandardOutputEncoding = encoding;
-                            StandardErrorEncoding = encoding;
+                            _encoding = encoding;
                         }
 
                         string batchFileForCommandLine = _temporaryBatchFile;
