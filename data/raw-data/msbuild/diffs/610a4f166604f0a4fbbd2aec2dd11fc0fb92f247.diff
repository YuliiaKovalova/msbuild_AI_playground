diff --git a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
index 4996cd7cc45..de11124f2d9 100644
--- a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
+++ b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
@@ -422,6 +422,47 @@ public void PreprocessSwitchIdentificationTests(string preprocess)
             unquoteParameters.ShouldBeTrue();
         }
 
+        [Theory]
+        [InlineData("targets")]
+        [InlineData("tArGeTs")]
+        [InlineData("ts")]
+        public void TargetsSwitchIdentificationTests(string @switch)
+        {
+            CommandLineSwitches.IsParameterizedSwitch(
+                @switch,
+                out var parameterizedSwitch,
+                out var duplicateSwitchErrorMessage,
+                out var multipleParametersAllowed,
+                out var missingParametersErrorMessage,
+                out var unquoteParameters,
+                out var emptyParametersAllowed).ShouldBeTrue();
+            parameterizedSwitch.ShouldBe(CommandLineSwitches.ParameterizedSwitch.Targets);
+            duplicateSwitchErrorMessage.ShouldBeNull();
+            multipleParametersAllowed.ShouldBeFalse();
+            missingParametersErrorMessage.ShouldBeNull();
+            unquoteParameters.ShouldBeTrue();
+            emptyParametersAllowed.ShouldBeFalse();
+        }
+
+        [Fact]
+        public void TargetsSwitchParameter()
+        {
+            CommandLineSwitches switches = new CommandLineSwitches();
+            MSBuildApp.GatherCommandLineSwitches(new ArrayList() { "/targets:targets.txt" }, switches);
+
+            switches.HaveErrors().ShouldBeFalse();
+            switches[CommandLineSwitches.ParameterizedSwitch.Targets].ShouldBe(new[] { "targets.txt" });
+        }
+
+        [Fact]
+        public void TargetsSwitchDoesNotSupportMultipleOccurrences()
+        {
+            CommandLineSwitches switches = new CommandLineSwitches();
+            MSBuildApp.GatherCommandLineSwitches(new ArrayList() { "/targets /targets" }, switches);
+
+            switches.HaveErrors().ShouldBeTrue();
+        }
+
         [Theory]
         [InlineData("isolate")]
         [InlineData("ISOLATE")]
