diff --git a/src/Build/BackEnd/Components/Logging/LoggingService.cs b/src/Build/BackEnd/Components/Logging/LoggingService.cs
index 11e79988aa2..ea47e9ce060 100644
--- a/src/Build/BackEnd/Components/Logging/LoggingService.cs
+++ b/src/Build/BackEnd/Components/Logging/LoggingService.cs
@@ -519,12 +519,7 @@ public HashSet<string> GetWarningsAsErrors(BuildEventContext context)
         {
             int key = GetWarningsAsErrorOrMessageKey(context);
 
-            if (_warningsAsErrorsByProject.ContainsKey(key))
-            {
-                return _warningsAsErrorsByProject[key] as HashSet<string>;
-            }
-
-            return null;
+            return _warningsAsErrorsByProject?[key] as HashSet<string>;
         }
 
         public void AddWarningsAsErrors(BuildEventContext buildEventContext, ISet<string> codes)
diff --git a/src/Shared/TaskLoggingHelper.cs b/src/Shared/TaskLoggingHelper.cs
index a6f79646a38..91d36211757 100644
--- a/src/Shared/TaskLoggingHelper.cs
+++ b/src/Shared/TaskLoggingHelper.cs
@@ -1016,7 +1016,7 @@ params object[] messageArgs
             // that gives the user something.
             bool fillInLocation = (String.IsNullOrEmpty(file) && (lineNumber == 0) && (columnNumber == 0));
 
-            if ((BuildEngine as IBuildEngine8).WarningsAsErrors.Contains(warningCode))
+            if ((BuildEngine as IBuildEngine8)?.WarningsAsErrors.Contains(warningCode) == true)
             {
                 var err = new BuildErrorEventArgs
                 (
