diff --git a/src/Tasks.UnitTests/ResourceHandling/GenerateResource_Tests.cs b/src/Tasks.UnitTests/ResourceHandling/GenerateResource_Tests.cs
index f704ef169a1..f5c2d20a568 100644
--- a/src/Tasks.UnitTests/ResourceHandling/GenerateResource_Tests.cs
+++ b/src/Tasks.UnitTests/ResourceHandling/GenerateResource_Tests.cs
@@ -389,6 +389,70 @@ public void ForceOutOfDateByDeletion()
             Utilities.AssertLogContainsResource(t2, "GenerateResource.ResourceNotFound", t2.Sources[0].ItemSpec);
         }
 
+        [Fact]
+        public void QuestionOutOfDateByDeletion()
+        {
+            var folder = _env.CreateFolder();
+            string resxFileInput = Utilities.WriteTestResX(false, null, null, _env.CreateFile(folder, ".resx").Path);
+            TaskItem stateFile = new TaskItem(_env.GetTempFile(".cache").Path);
+            ITaskItem[] sources = new ITaskItem[] { new TaskItem(resxFileInput) };
+            ITaskItem[] output;
+
+            {
+                GenerateResource t = Utilities.CreateTask(_output);
+                t.Sources = sources;
+                t.StateFile = stateFile;
+                Utilities.ExecuteTask(t);
+
+                Utilities.AssertLogContainsResource(t, "GenerateResource.OutputDoesntExist", t.OutputResources[0].ItemSpec);
+
+                output = t.OutputResources;
+            }
+
+            {
+                // Run again to ensure all files are up to date.
+                GenerateResource t = Utilities.CreateTask(_output);
+                t.Sources = sources;
+                t.StateFile = stateFile;
+                t.FailIfNotIncremental = true;
+                Utilities.ExecuteTask(t);
+            }
+
+            {
+                // Delete the file and verify that FailIfNotIncremental will print the missing file
+                GenerateResource t = Utilities.CreateTask(_output);
+                t.StateFile = stateFile;
+                t.Sources = sources;
+                t.FailIfNotIncremental = true;
+
+                // Delete the output
+                File.Delete(output[0].ItemSpec);
+
+                t.Execute().ShouldBeFalse();
+
+                Utilities.AssertLogContainsResource(t, "GenerateResource.ProcessingFile", sources[0].ItemSpec, output[0].ItemSpec);
+            }
+
+            {
+                GenerateResource t = Utilities.CreateTask(_output);
+                t.Sources = sources;
+                t.StateFile = stateFile;
+                Utilities.ExecuteTask(t);
+
+                Utilities.AssertLogContainsResource(t, "GenerateResource.OutputDoesntExist", t.OutputResources[0].ItemSpec);
+            }
+
+            {
+                // Run again to ensure all files are up to date.
+                GenerateResource t = Utilities.CreateTask(_output);
+                t.Sources = sources;
+                t.StateFile = stateFile;
+                t.FailIfNotIncremental = true;
+                Utilities.ExecuteTask(t);
+            }
+
+        }
+
         /// <summary>
         ///  Force out-of-date with ShouldRebuildResgenOutputFile on the linked file
         /// </summary>
diff --git a/src/Tasks/GenerateResource.cs b/src/Tasks/GenerateResource.cs
index 3d87b7de11d..76bcb3d9057 100644
--- a/src/Tasks/GenerateResource.cs
+++ b/src/Tasks/GenerateResource.cs
@@ -725,7 +725,16 @@ public override bool Execute()
                 }
                 else if (FailIfNotIncremental)
                 {
-                    Log.LogErrorFromResources("GenerateResource.NothingOutOfDate");
+                    int maxCount = Math.Min(inputsToProcess.Count, outputsToProcess.Count);
+                    maxCount = Math.Min(maxCount, 5);  // Limit to just 5
+
+                    for (int index = 0; index < maxCount; index++)
+                    {
+                        // Log the file that would be process as an error.
+                        Log.LogErrorFromResources("GenerateResource.ProcessingFile", inputsToProcess[index], outputsToProcess[index]);
+                    }
+
+                    return false;
                 }
                 else
                 {
