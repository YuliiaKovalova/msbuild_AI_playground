diff --git a/ref/Microsoft.Build/net/Microsoft.Build.cs b/ref/Microsoft.Build/net/Microsoft.Build.cs
index b8440d4530d..5e4da25caa7 100644
--- a/ref/Microsoft.Build/net/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/net/Microsoft.Build.cs
@@ -994,6 +994,7 @@ public BuildParameters(Microsoft.Build.Evaluation.ProjectCollection projectColle
         public string OutputResultsCacheFile { get { throw null; } set { } }
         public Microsoft.Build.Evaluation.ProjectLoadSettings ProjectLoadSettings { get { throw null; } set { } }
         public bool ResetCaches { get { throw null; } set { } }
+        public string ResourceManagerSemaphoreName { get { throw null; } set { } }
         public bool SaveOperatingEnvironment { get { throw null; } set { } }
         public bool ShutdownInProcNodeOnBuildFinish { get { throw null; } set { } }
         public Microsoft.Build.Evaluation.ToolsetDefinitionLocations ToolsetDefinitionLocations { get { throw null; } set { } }
diff --git a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
index 5a215a8c307..9744334fb4e 100644
--- a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
@@ -989,6 +989,7 @@ public BuildParameters(Microsoft.Build.Evaluation.ProjectCollection projectColle
         public string OutputResultsCacheFile { get { throw null; } set { } }
         public Microsoft.Build.Evaluation.ProjectLoadSettings ProjectLoadSettings { get { throw null; } set { } }
         public bool ResetCaches { get { throw null; } set { } }
+        public string ResourceManagerSemaphoreName { get { throw null; } set { } }
         public bool SaveOperatingEnvironment { get { throw null; } set { } }
         public bool ShutdownInProcNodeOnBuildFinish { get { throw null; } set { } }
         public Microsoft.Build.Evaluation.ToolsetDefinitionLocations ToolsetDefinitionLocations { get { throw null; } set { } }
diff --git a/src/Build/BackEnd/BuildManager/BuildParameters.cs b/src/Build/BackEnd/BuildManager/BuildParameters.cs
index 44a8f200613..090cb82acf9 100644
--- a/src/Build/BackEnd/BuildManager/BuildParameters.cs
+++ b/src/Build/BackEnd/BuildManager/BuildParameters.cs
@@ -214,6 +214,7 @@ public class BuildParameters : ITranslatable
         private string[] _inputResultsCacheFiles;
 
         private string _outputResultsCacheFile;
+        private string _resourceManagerSemaphoreName = $"MSBuild.{Guid.NewGuid().ToString()}";
 
         /// <summary>
         /// Constructor for those who intend to set all properties themselves.
@@ -765,6 +766,12 @@ public string OutputResultsCacheFile
             set => _outputResultsCacheFile = value;
         }
 
+        public string ResourceManagerSemaphoreName
+        {
+            get => _resourceManagerSemaphoreName;
+            set => _resourceManagerSemaphoreName = value;
+        }
+
         /// <summary>
         /// Determines whether MSBuild will save the results of builds after EndBuild to speed up future builds.
         /// </summary>
@@ -833,6 +840,7 @@ void ITranslatable.Translate(ITranslator translator)
             translator.TranslateEnum(ref _projectLoadSettings, (int) _projectLoadSettings);
             translator.Translate(ref _interactive);
             translator.Translate(ref _isolateProjects);
+            translator.Translate(ref _resourceManagerSemaphoreName);
 
             // ProjectRootElementCache is not transmitted.
             // ResetCaches is not transmitted.
diff --git a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
index 69ebd6a3063..9702c97ac9c 100644
--- a/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
+++ b/src/Build/BackEnd/Components/ResourceManager/ResourceManagerService.cs
@@ -20,6 +20,7 @@ class ResourceManagerService : IBuildComponent
 
 #if DEBUG
         public int TotalNumberHeld = -1;
+        public string? SemaphoreName;
 #endif
 
         internal static IBuildComponent CreateComponent(BuildComponentType type)
@@ -31,15 +32,16 @@ internal static IBuildComponent CreateComponent(BuildComponentType type)
 
         public void InitializeComponent(IBuildComponentHost host)
         {
-            const string SemaphoreName = "cpuCount"; // TODO
+            string semaphoreName = host.BuildParameters.ResourceManagerSemaphoreName;
 
             int resourceCount = host.BuildParameters.MaxNodeCount; // TODO: tweakability
 
 #if DEBUG
             TotalNumberHeld = 0;
+            SemaphoreName = semaphoreName;
 #endif
 
-            s = new Semaphore(resourceCount, resourceCount, SemaphoreName); // TODO: SemaphoreSecurity?
+            s = new Semaphore(resourceCount, resourceCount, semaphoreName); // TODO: SemaphoreSecurity?
         }
 
         public void ShutdownComponent()
