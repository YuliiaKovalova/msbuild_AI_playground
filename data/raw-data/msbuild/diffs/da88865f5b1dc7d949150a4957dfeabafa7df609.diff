diff --git a/src/Build/Definition/ProjectCollection.cs b/src/Build/Definition/ProjectCollection.cs
index a75a28c248a..88c7f74bca7 100644
--- a/src/Build/Definition/ProjectCollection.cs
+++ b/src/Build/Definition/ProjectCollection.cs
@@ -2032,9 +2032,9 @@ public void IncludeTaskInputs()
 
                 _includeTaskInputs = true;
             }
-#endregion
+            #endregion
 
-#region ILogger Members
+            #region ILogger Members
 
             /// <summary>
             /// The logger verbosity
diff --git a/src/Build/Definition/ToolsetConfigurationReader.cs b/src/Build/Definition/ToolsetConfigurationReader.cs
index 2b586dd9fdf..5b54d856b43 100644
--- a/src/Build/Definition/ToolsetConfigurationReader.cs
+++ b/src/Build/Definition/ToolsetConfigurationReader.cs
@@ -253,6 +253,8 @@ private static Configuration ReadApplicationConfiguration()
         {
             // When running from the command-line or from VS, use the msbuild.exe.config file.
             if (BuildEnvironmentHelper.Instance.Mode != BuildEnvironmentMode.None &&
+ // This FEATURE_SYSTEM_CONFIGURATION is needed as OpenExeConfiguration for net5.0 works differently, without this condition unit tests won't pass.
+ // OpenExeConfiguration in net5.0 will return testhost.exe which does not contain any configuration and therefore fail.
 #if FEATURE_SYSTEM_CONFIGURATION
                 !BuildEnvironmentHelper.Instance.RunningTests &&
 #endif
diff --git a/src/Build/Evaluation/IntrinsicFunctions.cs b/src/Build/Evaluation/IntrinsicFunctions.cs
index 46b0bb0a1ea..3bdb5d398c1 100644
--- a/src/Build/Evaluation/IntrinsicFunctions.cs
+++ b/src/Build/Evaluation/IntrinsicFunctions.cs
@@ -259,30 +259,30 @@ internal static object GetRegistryValueFromView(string keyName, string valueName
             return result;
         }
 
-#else // FEATURE_WIN32_REGISTRY is off, need to mock the function names to let scrips call these property functions and get NULLs rather than fail with errors	
+#else // FEATURE_WIN32_REGISTRY is off, need to mock the function names to let scrips call these property functions and get NULLs rather than fail with errors
 
-        /// <summary>	
-        /// Get the value of the registry key and value, default value is null	
-        /// </summary>	
+        /// <summary>
+        /// Get the value of the registry key and value, default value is null
+        /// </summary>
         internal static object GetRegistryValue(string keyName, string valueName)
         {
             return null; // FEATURE_WIN32_REGISTRY is off, need to mock the function names to let scrips call these property functions and get NULLs rather than fail with errors	
         }
 
-        /// <summary>	
-        /// Get the value of the registry key and value	
-        /// </summary>	
+        /// <summary>
+        /// Get the value of the registry key and value
+        /// </summary>
         internal static object GetRegistryValue(string keyName, string valueName, object defaultValue)
         {
-            return defaultValue; // FEATURE_WIN32_REGISTRY is off, need to mock the function names to let scrips call these property functions and get NULLs rather than fail with errors	
+            return defaultValue; // FEATURE_WIN32_REGISTRY is off, need to mock the function names to let scrips call these property functions and get NULLs rather than fail with errors
         }
 
-        /// <summary>	
-        /// Get the value of the registry key from one of the RegistryView's specified	
-        /// </summary>	
+        /// <summary>
+        /// Get the value of the registry key from one of the RegistryView's specified
+        /// </summary>
         internal static object GetRegistryValueFromView(string keyName, string valueName, object defaultValue, params object[] views)
         {
-            return defaultValue; // FEATURE_WIN32_REGISTRY is off, need to mock the function names to let scrips call these property functions and get NULLs rather than fail with errors	
+            return defaultValue; // FEATURE_WIN32_REGISTRY is off, need to mock the function names to let scrips call these property functions and get NULLs rather than fail with errors
         }
 #endif
 
@@ -569,7 +569,7 @@ internal static List<string> __GetListTest()
             return new List<string> { "A", "B", "C", "D" };
         }
 
-        #endregion
+#endregion
 
 #if FEATURE_WIN32_REGISTRY
         /// <summary>
