diff --git a/src/Build/Construction/Solution/SolutionConfigurationInSolution.cs b/src/Build/Construction/Solution/SolutionConfigurationInSolution.cs
index d228d7b3a86..32a317a8be9 100644
--- a/src/Build/Construction/Solution/SolutionConfigurationInSolution.cs
+++ b/src/Build/Construction/Solution/SolutionConfigurationInSolution.cs
@@ -1,7 +1,7 @@
 ï»¿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
 
-#nullable disable
+using System.Collections.Immutable;
 
 namespace Microsoft.Build.Construction
 {
@@ -16,6 +16,8 @@ public sealed class SolutionConfigurationInSolution
         /// </summary>
         internal const char ConfigurationPlatformSeparator = '|';
 
+        private static ImmutableDictionary<Key, string> _fullNameByKey = ImmutableDictionary<Key, string>.Empty;
+
         /// <summary>
         /// Constructor
         /// </summary>
@@ -48,11 +50,17 @@ internal SolutionConfigurationInSolution(string configurationName, string platfo
         internal static string ComputeFullName(string configurationName, string platformName)
         {
             // Some configurations don't have the platform part
-            if (!string.IsNullOrEmpty(platformName))
+            if (string.IsNullOrEmpty(platformName))
             {
-                return $"{configurationName}{ConfigurationPlatformSeparator}{platformName}";
+                return configurationName;
             }
-            return configurationName;
+
+            return ImmutableInterlocked.GetOrAdd(
+                ref _fullNameByKey,
+                new Key(configurationName, platformName),
+                static key => $"{key.Configuration}|{key.Platform}");
         }
+
+        private record struct Key(string Configuration, string Platform);
     }
 }
