diff --git a/src/Framework/MSBuildEventSource.cs b/src/Framework/MSBuildEventSource.cs
index 66bddcdeed3..91cc35ad3a4 100644
--- a/src/Framework/MSBuildEventSource.cs
+++ b/src/Framework/MSBuildEventSource.cs
@@ -423,6 +423,18 @@ public void PacketReadSize(int size)
         {
             WriteEvent(55, size);
         }
+
+        [Event(58, Keywords = Keywords.All)]
+        public void CopyUpToDateStart(string path)
+        {
+            WriteEvent(58, path);
+        }
+
+        [Event(59, Keywords = Keywords.All)]
+        public void CopyUpToDateStop(string path)
+        {
+            WriteEvent(59, path);
+        }
         #endregion
     }
 }
diff --git a/src/Tasks/Copy.cs b/src/Tasks/Copy.cs
index ba793b673d6..c8ae6576503 100644
--- a/src/Tasks/Copy.cs
+++ b/src/Tasks/Copy.cs
@@ -12,6 +12,7 @@
 using Microsoft.Build.Utilities;
 using Microsoft.Build.Shared;
 using Microsoft.Build.Shared.FileSystem;
+using Microsoft.Build.Eventing;
 
 namespace Microsoft.Build.Tasks
 {
@@ -431,6 +432,7 @@ private bool CopySingleThreaded(
             {
                 bool copyComplete = false;
                 string destPath = DestinationFiles[i].ItemSpec;
+                MSBuildEventSource.Log.CopyUpToDateStart(destPath);
                 if (filesActuallyCopied.TryGetValue(destPath, out string originalSource))
                 {
                     if (String.Equals(originalSource, SourceFiles[i].ItemSpec, StringComparison.OrdinalIgnoreCase))
@@ -440,8 +442,15 @@ private bool CopySingleThreaded(
                     }
                 }
 
-                if (!copyComplete)
+                if (copyComplete)
+                {
+                    SourceFiles[i].CopyMetadataTo(DestinationFiles[i]);
+                    destinationFilesSuccessfullyCopied.Add(DestinationFiles[i]);
+                    MSBuildEventSource.Log.CopyUpToDateStop(destPath);
+                }
+                else
                 {
+                    MSBuildEventSource.Log.CopyUpToDateStop(destPath);
                     if (DoCopyIfNecessary(new FileState(SourceFiles[i].ItemSpec), new FileState(DestinationFiles[i].ItemSpec), copyFile))
                     {
                         filesActuallyCopied[destPath] = SourceFiles[i].ItemSpec;
@@ -452,12 +461,6 @@ private bool CopySingleThreaded(
                         success = false;
                     }
                 }
-
-                if (copyComplete)
-                {
-                    SourceFiles[i].CopyMetadataTo(DestinationFiles[i]);
-                    destinationFilesSuccessfullyCopied.Add(DestinationFiles[i]);
-                }
             }
 
             return success;
@@ -534,14 +537,22 @@ private bool CopyParallel(
                         string sourcePath = sourceItem.ItemSpec;
 
                         // Check if we just copied from this location to the destination, don't copy again.
+                        MSBuildEventSource.Log.CopyUpToDateStart(sourcePath);
                         bool copyComplete = partitionIndex > 0 &&
                                             String.Equals(
                                                 sourcePath,
                                                 SourceFiles[partition[partitionIndex - 1]].ItemSpec,
                                                 StringComparison.OrdinalIgnoreCase);
 
-                        if (!copyComplete)
+                        if (copyComplete)
+                        {
+                            sourceItem.CopyMetadataTo(destItem);
+                            successFlags[fileIndex] = (IntPtr)1;
+                            MSBuildEventSource.Log.CopyUpToDateStop(sourcePath);
+                        }
+                        else
                         {
+                            MSBuildEventSource.Log.CopyUpToDateStop(sourcePath);
                             if (DoCopyIfNecessary(
                                 new FileState(sourceItem.ItemSpec),
                                 new FileState(destItem.ItemSpec),
@@ -555,12 +566,6 @@ private bool CopyParallel(
                                 success = false;
                             }
                         }
-
-                        if (copyComplete)
-                        {
-                            sourceItem.CopyMetadataTo(destItem);
-                            successFlags[fileIndex] = (IntPtr)1;
-                        }
                     }
                 },
                 actionBlockOptions);
