diff --git a/src/Tasks.UnitTests/SecurityUtil_Tests.cs b/src/Tasks.UnitTests/SecurityUtil_Tests.cs
index 6b3537f8606..4cb999b0ffd 100644
--- a/src/Tasks.UnitTests/SecurityUtil_Tests.cs
+++ b/src/Tasks.UnitTests/SecurityUtil_Tests.cs
@@ -27,16 +27,16 @@ public void SignFile_Success()
         {
             Uri timestampUrl = new("http://timestamp.comodoca.com/rfc3161");
             string clickOnceManifest = Path.Combine(TestAssembliesPaths, "ClickOnceProfile.pubxml");
-            string targetFrameworkVersion = Constants.TargetFrameworkVersion40;
+            string targetFrameworkVersion = "v4.0";
             string targetFrameworkIdentifier = Constants.DotNetFrameworkIdentifier;
             bool disallowMansignTimestampFallback = false;
 
             // the certificate was generated locally and does not contain any sensitive information
             string pathToCertificate = Path.Combine(TestAssembliesPaths, "mycert.pfx");
-            X509Certificate2 cerfiticate = TestCertHelper.MockCertificate(pathToCertificate);
+            X509Certificate2 certificate = TestCertHelper.MockCertificate(pathToCertificate);
 
             void SignAction() => SecurityUtilities.SignFile(
-                cerfiticate?.Thumbprint,
+                certificate?.Thumbprint,
                 timestampUrl,
                 clickOnceManifest,
                 targetFrameworkVersion,
@@ -45,7 +45,7 @@ void SignAction() => SecurityUtilities.SignFile(
 
             Should.NotThrow(SignAction);
 
-            TestCertHelper.RemoveCertificate(cerfiticate);
+            TestCertHelper.RemoveCertificate(certificate);
         }
 
         internal static class TestCertHelper
diff --git a/src/Tasks/ManifestUtil/mansign2.cs b/src/Tasks/ManifestUtil/mansign2.cs
index da2308866d1..a3b75bf4bca 100644
--- a/src/Tasks/ManifestUtil/mansign2.cs
+++ b/src/Tasks/ManifestUtil/mansign2.cs
@@ -270,12 +270,7 @@ private void init()
                                Sha256SignatureMethodUri);
 
 #if RUNTIME_TYPE_NETCORE
-#pragma warning disable SYSLIB0021 // Type or member is obsolete
-            // SHA256 can not be used since it is an abstract class.
-            // CalculateHashValue internally calls CryptoConfig.CreateFromName and it causes instantiation problems.
-            CryptoConfig.AddAlgorithm(typeof(SHA256Managed),
-                               Sha256DigestMethod);
-#pragma warning restore SYSLIB0021 // Type or member is obsolete
+            CryptoConfig.AddOID(Win32.szOID_NIST_sha256, Sha256DigestMethod);
 #else
             CryptoConfig.AddAlgorithm(typeof(SHA256Cng),
                                Sha256DigestMethod);
