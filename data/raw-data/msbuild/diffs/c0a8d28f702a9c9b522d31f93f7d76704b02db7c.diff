diff --git a/src/Build.UnitTests/Evaluation/Expander_Tests.cs b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
index 9a9917cca3e..9165c521f8c 100644
--- a/src/Build.UnitTests/Evaluation/Expander_Tests.cs
+++ b/src/Build.UnitTests/Evaluation/Expander_Tests.cs
@@ -587,7 +587,7 @@ public void ExpandItemVectorFunctionsBuiltIn4()
             log.AssertLogContains("[foo;bar]");
         }
 
-        [LongPathSupportEnabledFact(fullFrameworkOnly: true, additionalMessage: "https://github.com/dotnet/msbuild/issues/4363")]
+        [LongPathSupportDisabledFact(fullFrameworkOnly: true, additionalMessage: "https://github.com/dotnet/msbuild/issues/4363")]
         public void ExpandItemVectorFunctionsBuiltIn_PathTooLongError()
         {
             string content = @"
@@ -869,7 +869,7 @@ public void ItemIncludeContainsMultipleItemReferences()
         /// <summary>
         /// Bad path when getting metadata through ->Metadata function
         /// </summary>
-        [LongPathSupportEnabledFact]
+        [LongPathSupportDisabledFact]
         public void InvalidPathAndMetadataItemFunctionPathTooLong()
         {
             MockLogger logger = Helpers.BuildProjectWithNewOMExpectFailure(@"
@@ -928,7 +928,7 @@ public void InvalidMetadataName()
         /// <summary>
         /// Bad path when getting metadata through ->WithMetadataValue function
         /// </summary>
-        [LongPathSupportEnabledFact]
+        [LongPathSupportDisabledFact]
         public void InvalidPathAndMetadataItemFunctionPathTooLong2()
         {
             MockLogger logger = Helpers.BuildProjectWithNewOMExpectFailure(@"
@@ -987,7 +987,7 @@ public void InvalidMetadataName2()
         /// <summary>
         /// Bad path when getting metadata through ->AnyHaveMetadataValue function
         /// </summary>
-        [LongPathSupportEnabledFact]
+        [LongPathSupportDisabledFact]
         public void InvalidPathAndMetadataItemFunctionPathTooLong3()
         {
             MockLogger logger = Helpers.BuildProjectWithNewOMExpectFailure(@"
@@ -1039,7 +1039,7 @@ public void InvalidPathInDirectMetadata()
             logger.AssertLogContains("MSB4248");
         }
 
-        [LongPathSupportEnabledFact(fullFrameworkOnly: true, additionalMessage: "new enough dotnet.exe transparently opts into long paths")]
+        [LongPathSupportDisabledFact(fullFrameworkOnly: true, additionalMessage: "new enough dotnet.exe transparently opts into long paths")]
         public void PathTooLongInDirectMetadata()
         {
             var logger = Helpers.BuildProjectContentUsingBuildManagerExpectResult(
diff --git a/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj b/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
index b6b3283cbd5..decd9351fda 100644
--- a/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
+++ b/src/Build.UnitTests/Microsoft.Build.Engine.UnitTests.csproj
@@ -121,8 +121,8 @@
     <Compile Include="..\Shared\UnitTests\CustomXunitAttributesUtilities.cs">
       <Link>Shared\CustomXunitAttributesUtilities.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\LongPathSupportEnabledFactAttribute.cs">
-      <Link>Shared\LongPathSupportEnabledFactAttribute.cs</Link>
+    <Compile Include="..\Shared\UnitTests\LongPathSupportDisabledFactAttribute.cs">
+      <Link>Shared\LongPathSupportDisabledFactAttribute.cs</Link>
     </Compile>
 
     <None Include="..\Shared\UnitTests\App.config">
diff --git a/src/Shared/UnitTests/FileUtilities_Tests.cs b/src/Shared/UnitTests/FileUtilities_Tests.cs
index 90c3c972201..86f2028956c 100644
--- a/src/Shared/UnitTests/FileUtilities_Tests.cs
+++ b/src/Shared/UnitTests/FileUtilities_Tests.cs
@@ -419,7 +419,7 @@ public void NormalizePathThatFitsIntoMaxPath()
             Assert.Equal(fullPath, FileUtilities.NormalizePath(Path.Combine(currentDirectory, filePath)));
         }
 
-        [LongPathSupportEnabledFact(fullFrameworkOnly: true, additionalMessage: "https://github.com/dotnet/msbuild/issues/4363")]
+        [LongPathSupportDisabledFact(fullFrameworkOnly: true, additionalMessage: "https://github.com/dotnet/msbuild/issues/4363")]
         public void NormalizePathThatDoesntFitIntoMaxPath()
         {
             Assert.Throws<PathTooLongException>(() =>
diff --git a/src/Shared/UnitTests/LongPathSupportEnabledFactAttribute.cs b/src/Shared/UnitTests/LongPathSupportDisabledFactAttribute.cs
similarity index 72%
rename from src/Shared/UnitTests/LongPathSupportEnabledFactAttribute.cs
rename to src/Shared/UnitTests/LongPathSupportDisabledFactAttribute.cs
index 243f9506229..31e02d4efb3 100644
--- a/src/Shared/UnitTests/LongPathSupportEnabledFactAttribute.cs
+++ b/src/Shared/UnitTests/LongPathSupportDisabledFactAttribute.cs
@@ -10,30 +10,30 @@ namespace Microsoft.Build.UnitTests
     ///  This test should be run only on Windows, and when long path support is enabled.
     ///  It is possible to conditionally restrict the fact to be run only on full .NET Framework.
     /// </summary>
-    public class LongPathSupportEnabledFactAttribute : FactAttribute
+    public class LongPathSupportDisabledFactAttribute : FactAttribute
     {
         /// <summary>
-        /// Initializes a new instance of the <see cref="LongPathSupportEnabledFactAttribute"/> class.
+        /// Initializes a new instance of the <see cref="LongPathSupportDisabledFactAttribute"/> class.
         /// </summary>
         /// <param name="additionalMessage">The additional message that is appended to skip reason, when test is skipped.</param>
         /// <param name="fullFrameworkOnly"><see langword="true"/> if the test can be run only on full framework. The default value is <see langword="false"/>.</param>
-        public LongPathSupportEnabledFactAttribute(string? additionalMessage = null, bool fullFrameworkOnly = false)
+        public LongPathSupportDisabledFactAttribute(string? additionalMessage = null, bool fullFrameworkOnly = false)
         {
             if (!RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
             {
-                this.Skip = "This test only runs on Windows and when long path support is enabled.".AppendAdditionalMessage(additionalMessage);
+                this.Skip = "This test only runs on Windows and when long path support is disabled.".AppendAdditionalMessage(additionalMessage);
                 return;
             }
 
             if (fullFrameworkOnly && !CustomXunitAttributesUtilities.IsRunningOnNetFramework)
             {
-                this.Skip = "This test only runs on full .NET Framework and when long path support is enabled.".AppendAdditionalMessage(additionalMessage);
+                this.Skip = "This test only runs on full .NET Framework and when long path support is disabled.".AppendAdditionalMessage(additionalMessage);
                 return;
             }
 
-            if (NativeMethodsShared.IsMaxPathLegacyWindows())
+            if (!NativeMethodsShared.IsMaxPathLegacyWindows())
             {
-                this.Skip = "This test only runs when long path support is enabled.".AppendAdditionalMessage(additionalMessage);
+                this.Skip = "This test only runs when long path support is disabled.".AppendAdditionalMessage(additionalMessage);
             }
         }
     }
diff --git a/src/Tasks.UnitTests/FileStateTests.cs b/src/Tasks.UnitTests/FileStateTests.cs
index 05cc3cd59c3..1048fc95358 100644
--- a/src/Tasks.UnitTests/FileStateTests.cs
+++ b/src/Tasks.UnitTests/FileStateTests.cs
@@ -44,7 +44,7 @@ public void BadChars()
             Assert.Throws<ArgumentException>(() => { var time = state.LastWriteTime; });
         }
 
-        [LongPathSupportEnabledFact]
+        [LongPathSupportDisabledFact]
         public void BadTooLongLastWriteTime()
         {
             Helpers.VerifyAssertThrowsSameWay(
diff --git a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
index caf8c24dbe8..0880c980c6f 100644
--- a/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
+++ b/src/Tasks.UnitTests/Microsoft.Build.Tasks.UnitTests.csproj
@@ -62,8 +62,8 @@
     <Compile Include="..\Shared\UnitTests\CustomXunitAttributesUtilities.cs">
       <Link>Shared\CustomXunitAttributesUtilities.cs</Link>
     </Compile>
-    <Compile Include="..\Shared\UnitTests\LongPathSupportEnabledFactAttribute.cs">
-      <Link>Shared\LongPathSupportEnabledFactAttribute.cs</Link>
+    <Compile Include="..\Shared\UnitTests\LongPathSupportDisabledFactAttribute.cs">
+      <Link>Shared\LongPathSupportDisabledFactAttribute.cs</Link>
     </Compile>
 
     <EmbeddedResource Include="SampleResx" />
