diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
index 7c4e8a5ad83..dadf7c692ef 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
@@ -96,11 +96,8 @@ private void EventSource_BuildFinished(object sender, BuildFinishedEventArgs e)
 
         LoggingContext loggingContext = loggingContextFactory.CreateLoggingContext(buildEventContext);
 
-        if (_areStatsEnabled)
-        {
-            _statsAnalyzers.Merge(buildCheckManager.CreateAnalyzerTracingStats()!, (span1, span2) => span1 + span2);
-            LogAnalyzerStats(loggingContext);
-        }
+        _statsAnalyzers.Merge(buildCheckManager.CreateAnalyzerTracingStats()!, (span1, span2) => span1 + span2);
+        LogAnalyzerStats(loggingContext);
     }
     
     private void LogAnalyzerStats(LoggingContext loggingContext)
@@ -123,12 +120,24 @@ private void LogAnalyzerStats(LoggingContext loggingContext)
             }
         }
 
-        loggingContext.LogCommentFromText(MessageImportance.High, $"BuildCheck run times{Environment.NewLine}");
-        string infraData = BuildStatsTable("Infrastructure run times", infraStats);
-        loggingContext.LogCommentFromText(MessageImportance.High, infraData);
+        if (_areStatsEnabled)
+        {
+            loggingContext.LogCommentFromText(MessageImportance.High, $"BuildCheck run times{Environment.NewLine}");
+            string infraData = BuildStatsTable("Infrastructure run times", infraStats);
+            loggingContext.LogCommentFromText(MessageImportance.High, infraData);
 
-        string analyzerData = BuildStatsTable("Analyzer run times", analyzerStats);
-        loggingContext.LogCommentFromText(MessageImportance.High, analyzerData);
+            string analyzerData = BuildStatsTable("Analyzer run times", analyzerStats);
+            loggingContext.LogCommentFromText(MessageImportance.High, analyzerData);
+        }
+        else
+        {
+            loggingContext.LogCommentFromText(MessageImportance.Low, $"BuildCheck run times{Environment.NewLine}");
+            string infraData = BuildStatsTable("Infrastructure run times", infraStats);
+            loggingContext.LogCommentFromText(MessageImportance.Low, infraData);
+
+            string analyzerData = BuildStatsTable("Analyzer run times", analyzerStats);
+            loggingContext.LogCommentFromText(MessageImportance.Low, analyzerData);
+        }
     }
 
     private string BuildStatsTable(string title, Dictionary<string, TimeSpan> rowData)
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
index cf1c84908d8..c57aab1cd3d 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckManagerProvider.cs
@@ -317,8 +317,8 @@ public void FinalizeProcessing(LoggingContext loggingContext)
             var analyzerEventStats = CreateAnalyzerTracingStats();
             var infraStats = new Dictionary<string, TimeSpan>() {
                 { $"{infraStatPrefix}analyzerAcquisitionTime", _tracingReporter.analyzerAcquisitionTime },
-                { $"{infraStatPrefix}analyzerSetDataSourceTime", new TimeSpan(_tracingReporter.analyzerSetDataSourceTime) },
-                { $"{infraStatPrefix}newProjectAnalyzersTime", new TimeSpan(_tracingReporter.newProjectAnalyzersTime) }
+                { $"{infraStatPrefix}analyzerSetDataSourceTime", _tracingReporter.analyzerSetDataSourceTime },
+                { $"{infraStatPrefix}newProjectAnalyzersTime", _tracingReporter.newProjectAnalyzersTime }
             };
             analyzerEventStats.Merge(infraStats, (span1, span2) => span1 + span2);
 
diff --git a/src/Build/BuildCheck/Infrastructure/TracingReporter.cs b/src/Build/BuildCheck/Infrastructure/TracingReporter.cs
index c519c537865..41eb5f8c177 100644
--- a/src/Build/BuildCheck/Infrastructure/TracingReporter.cs
+++ b/src/Build/BuildCheck/Infrastructure/TracingReporter.cs
@@ -15,8 +15,8 @@ internal class TracingReporter
 
     // Infrastructure time keepers, examples for now
     internal TimeSpan analyzerAcquisitionTime;
-    internal long analyzerSetDataSourceTime;
-    internal long newProjectAnalyzersTime;
+    internal TimeSpan analyzerSetDataSourceTime;
+    internal TimeSpan newProjectAnalyzersTime;
 
     public void AddStats(string name, TimeSpan subtotal)
     {
diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index 450c710ac95..453189fbe53 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -223,7 +223,7 @@ internal ParameterizedSwitchInfo(
             new ParameterlessSwitchInfo(  new string[] { "filelogger8", "fl8" },                     ParameterlessSwitch.FileLogger8,           null),
             new ParameterlessSwitchInfo(  new string[] { "filelogger9", "fl9" },                     ParameterlessSwitch.FileLogger9,           null),
             new ParameterlessSwitchInfo(  new string[] { "distributedfilelogger", "dfl" },           ParameterlessSwitch.DistributedFileLogger, null),
-            new ParameterlessSwitchInfo(  new string[] { "analyzeStats", "as" },                     ParameterlessSwitch.AnalyzeStats,          null),
+            new ParameterlessSwitchInfo(  new string[] { "analyzeStats" },                           ParameterlessSwitch.AnalyzeStats,          null),
 #if DEBUG
             new ParameterlessSwitchInfo(  new string[] { "waitfordebugger", "wfd" },                 ParameterlessSwitch.WaitForDebugger,       null),
 #endif
