diff --git a/src/Build/BackEnd/Components/Communications/NodeEndpointOutOfProc.cs b/src/Build/BackEnd/Components/Communications/NodeEndpointOutOfProc.cs
index f4d976aa19a..ac3004ec265 100644
--- a/src/Build/BackEnd/Components/Communications/NodeEndpointOutOfProc.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeEndpointOutOfProc.cs
@@ -34,7 +34,6 @@ internal NodeEndpointOutOfProc(bool enableReuse, bool lowPriority)
         /// </summary>
         protected override Handshake GetHandshake()
         {
-            Debugger.Launch();
             HandshakeOptions handshakeOptions = CommunicationsUtilities.GetHandshakeOptions(
                 taskHost: false,
                 architectureFlagToSet: XMakeAttributes.GetCurrentMSBuildArchitecture(),
diff --git a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
index 1a6f2d93609..235e11bedfe 100644
--- a/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
+++ b/src/Build/BackEnd/Components/Communications/NodeProviderOutOfProcTaskHost.cs
@@ -471,7 +471,7 @@ internal static (string msbuildExcutable, string msbuildAssemblyPath) GetHostExe
                 }
 
                 // TODO Get path to msbuild.dll
-                msbuildAssemblyPath = @"C:\msbuild\msbuild_yk\msbuild\artifacts\bin\bootstrap\core\sdk\9.0.200-preview.0.24523.19\MSBuild.dll";
+                msbuildAssemblyPath = BuildEnvironmentHelper.Instance.MSBuildAssemblyDirectory;
                 toolPath = s_baseTaskHostPathNet;
             }
             else
diff --git a/src/MSBuild/NodeEndpointOutOfProcTaskHost.cs b/src/MSBuild/NodeEndpointOutOfProcTaskHost.cs
index 1f30a7dcd34..df2f518bc67 100644
--- a/src/MSBuild/NodeEndpointOutOfProcTaskHost.cs
+++ b/src/MSBuild/NodeEndpointOutOfProcTaskHost.cs
@@ -31,7 +31,6 @@ internal NodeEndpointOutOfProcTaskHost()
         /// </summary>
         protected override Handshake GetHandshake()
         {
-            Debugger.Launch();
             return new Handshake(CommunicationsUtilities.GetHandshakeOptions(taskHost: true));
         }
     }
diff --git a/src/Shared/BuildEnvironmentHelper.cs b/src/Shared/BuildEnvironmentHelper.cs
index 99b4813f654..3b5a588ecd3 100644
--- a/src/Shared/BuildEnvironmentHelper.cs
+++ b/src/Shared/BuildEnvironmentHelper.cs
@@ -611,6 +611,7 @@ NativeMethodsShared.ProcessorArchitectures.X64 or NativeMethodsShared.ProcessorA
                 MSBuildToolsDirectory32 = MSBuildToolsDirectoryRoot;
                 MSBuildToolsDirectory64 = existsCheck(potentialAmd64FromX86) ? Path.Combine(MSBuildToolsDirectoryRoot, "amd64") : CurrentMSBuildToolsDirectory;
                 MSBuildToolsDirectoryNET = @"C:\msbuild\msbuild_yk\msbuild\artifacts\bin\bootstrap\core";
+                MSBuildAssemblyDirectory = @"C:\msbuild\msbuild_yk\msbuild\artifacts\bin\bootstrap\core\sdk\9.0.200-preview.0.24523.19\MSBuild.dll";
 #if RUNTIME_TYPE_NETCORE
                 // Fall back to "current" for any architecture since .NET SDK doesn't
                 // support cross-arch task invocations.
@@ -668,6 +669,11 @@ NativeMethodsShared.ProcessorArchitectures.X64 or NativeMethodsShared.ProcessorA
         /// </summary>
         internal string MSBuildToolsDirectoryNET { get; }
 
+        /// <summary>
+        /// Path to the MSBuild assembly.
+        /// </summary>
+        internal string MSBuildAssemblyDirectory { get; }
+
         /// <summary>
         /// Path to the Sdks folder for this MSBuild instance.
         /// </summary>
diff --git a/src/Shared/CommunicationsUtilities.cs b/src/Shared/CommunicationsUtilities.cs
index 05c25c64812..bfc04fac241 100644
--- a/src/Shared/CommunicationsUtilities.cs
+++ b/src/Shared/CommunicationsUtilities.cs
@@ -101,7 +101,7 @@ protected internal Handshake(HandshakeOptions nodeType)
             string handshakeSalt = Environment.GetEnvironmentVariable("MSBUILDNODEHANDSHAKESALT");
             CommunicationsUtilities.Trace("Handshake salt is " + handshakeSalt);
             string toolsDirectory = (nodeType & HandshakeOptions.NET) == HandshakeOptions.NET
-                ? BuildEnvironmentHelper.Instance.MSBuildToolsDirectoryNET
+                ? BuildEnvironmentHelper.Instance.MSBuildAssemblyDirectory
                 : BuildEnvironmentHelper.Instance.MSBuildToolsDirectoryRoot;
             CommunicationsUtilities.Trace("Tools directory root is " + toolsDirectory);
             salt = CommunicationsUtilities.GetHashCode(handshakeSalt + toolsDirectory);
@@ -647,7 +647,8 @@ internal static HandshakeOptions GetHandshakeOptions(bool taskHost, string archi
                 }
             }
 
-            if (!string.IsNullOrEmpty(architectureFlagToSet))
+            // if clrVersion is 5 or greater, we will default to .NET runtime
+            if (!string.IsNullOrEmpty(architectureFlagToSet) && clrVersion < 5)
             {
                 if (architectureFlagToSet.Equals(XMakeAttributes.MSBuildArchitectureValues.x64, StringComparison.OrdinalIgnoreCase))
                 {
