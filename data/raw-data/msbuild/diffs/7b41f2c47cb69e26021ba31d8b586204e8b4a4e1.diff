diff --git a/src/Tasks/CombineTargetFrameworkInfoProperties.cs b/src/Tasks/CombineTargetFrameworkInfoProperties.cs
index 612f27d3b88..4ca537abd0f 100644
--- a/src/Tasks/CombineTargetFrameworkInfoProperties.cs
+++ b/src/Tasks/CombineTargetFrameworkInfoProperties.cs
@@ -2,11 +2,7 @@
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using Microsoft.Build.Framework;
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
+using Microsoft.Build.Shared;
 using System.Xml.Linq;
 
 namespace Microsoft.Build.Tasks
@@ -36,9 +32,9 @@ public override bool Execute()
         {
             if (PropertiesAndValues != null)
             {
-                XElement root = new XElement(RootElementName);
+                XElement root = new("Property", new XAttribute("Name", EscapingUtilities.Escape(RootElementName)));
 
-                foreach (var item in PropertiesAndValues)
+                foreach (ITaskItem item in PropertiesAndValues)
                 {
                     root.Add(new XElement(item.ItemSpec, item.GetMetadata("Value")));
                 }
diff --git a/src/Tasks/CombineXmlElements.cs b/src/Tasks/CombineXmlElements.cs
index c42aed7f1bd..58eeb66d7a5 100644
--- a/src/Tasks/CombineXmlElements.cs
+++ b/src/Tasks/CombineXmlElements.cs
@@ -2,11 +2,7 @@
 // Licensed under the MIT license. See LICENSE file in the project root for full license information.
 
 using Microsoft.Build.Framework;
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
+using Microsoft.Build.Shared;
 using System.Xml.Linq;
 
 namespace Microsoft.Build.Tasks
@@ -24,7 +20,7 @@ public class CombineXmlElements : TaskExtension
         /// <summary>
         /// The XML elements to include as children of the root element
         /// </summary>
-        public ITaskItem [] XmlElements { get; set; }
+        public ITaskItem[] XmlElements { get; set; }
 
         /// <summary>
         /// The generated XML
@@ -36,7 +32,7 @@ public override bool Execute()
         {
             if (XmlElements != null)
             {
-                XElement root = new XElement(RootElementName);
+                XElement root = new XElement("Property", new XAttribute("Name", EscapingUtilities.Escape(RootElementName)));
 
                 foreach (var item in XmlElements)
                 {
