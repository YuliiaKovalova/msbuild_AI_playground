diff --git a/src/Build/Construction/Solution/SolutionProjectGenerator.cs b/src/Build/Construction/Solution/SolutionProjectGenerator.cs
index 646deb3b33e..aca2e2fbb33 100644
--- a/src/Build/Construction/Solution/SolutionProjectGenerator.cs
+++ b/src/Build/Construction/Solution/SolutionProjectGenerator.cs
@@ -1779,7 +1779,7 @@ private string ComputeTargetConditionForWebProject(ProjectInSolution project)
                     {
                         condition.Append(" or (");
                         condition.Append(GetConditionStringForConfiguration(solutionConfiguration));
-                        condition.Append(")");
+                        condition.Append(')');
                     }
                 }
                 else if (String.Equals(solutionConfiguration.ConfigurationName, "Release", StringComparison.OrdinalIgnoreCase) ||
@@ -1790,7 +1790,7 @@ private string ComputeTargetConditionForWebProject(ProjectInSolution project)
                     // so these should be available in the solution project
                     condition.Append(" or (");
                     condition.Append(GetConditionStringForConfiguration(solutionConfiguration));
-                    condition.Append(")");
+                    condition.Append(')');
                 }
             }
 
diff --git a/src/Framework/BuildEventArgs.cs b/src/Framework/BuildEventArgs.cs
index 40d31995e38..e949eafe240 100644
--- a/src/Framework/BuildEventArgs.cs
+++ b/src/Framework/BuildEventArgs.cs
@@ -290,14 +290,14 @@ private void SetBuildEventContextDefaultAfterSerialization(StreamingContext sc)
         {
             var sb = new StringBuilder();
             sb.Append(resourceName);
-            sb.Append("(");
+            sb.Append('(');
 
             bool notFirst = false;
             foreach (var argument in arguments)
             {
                 if (notFirst)
                 {
-                    sb.Append(",");
+                    sb.Append(',');
                 }
                 else
                 {
@@ -307,7 +307,7 @@ private void SetBuildEventContextDefaultAfterSerialization(StreamingContext sc)
                 sb.Append(argument);
             }
 
-            sb.Append(")");
+            sb.Append(')');
             return sb.ToString();
         };
 
diff --git a/src/Utilities/CommandLineBuilder.cs b/src/Utilities/CommandLineBuilder.cs
index 52f30d7510c..6b4946a3f31 100644
--- a/src/Utilities/CommandLineBuilder.cs
+++ b/src/Utilities/CommandLineBuilder.cs
@@ -222,7 +222,7 @@ protected void AppendSpaceIfNotEmpty()
                 }
                 else if(CommandLine[CommandLine.Length - 1] != ' ')
                 {
-                    CommandLine.Append(" ");
+                    CommandLine.Append(' ');
                 }
             }
         }
diff --git a/src/Utilities/ToolLocationHelper.cs b/src/Utilities/ToolLocationHelper.cs
index 28d03e97be8..a94d5c09b10 100644
--- a/src/Utilities/ToolLocationHelper.cs
+++ b/src/Utilities/ToolLocationHelper.cs
@@ -2303,12 +2303,12 @@ public static string GetDisplayNameForTargetFrameworkDirectory(string targetFram
             StringBuilder displayNameBuilder = new StringBuilder();
 
             displayNameBuilder.Append(frameworkName.Identifier);
-            displayNameBuilder.Append(" ");
+            displayNameBuilder.Append(' ');
             displayNameBuilder.Append('v').Append(frameworkName.Version.ToString());
 
             if (!string.IsNullOrEmpty(frameworkName.Profile))
             {
-                displayNameBuilder.Append(" ");
+                displayNameBuilder.Append(' ');
                 displayNameBuilder.Append(frameworkName.Profile);
             }
 
