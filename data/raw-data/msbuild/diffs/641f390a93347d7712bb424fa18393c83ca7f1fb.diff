diff --git a/src/Build.UnitTests/Telemetry/OpenTelemetryManager_Tests.cs b/src/Build.UnitTests/Telemetry/OpenTelemetryManager_Tests.cs
index 8b470b602fa..58dbfa240ca 100644
--- a/src/Build.UnitTests/Telemetry/OpenTelemetryManager_Tests.cs
+++ b/src/Build.UnitTests/Telemetry/OpenTelemetryManager_Tests.cs
@@ -12,9 +12,7 @@
 
 namespace Microsoft.Build.Engine.UnitTests.Telemetry
 {
-    /// <summary>
-    /// Ensures tests run serially so environment variables and the singleton do not interfere with parallel test runs.
-    /// </summary>
+    // Putting the tests to a collection ensures tests run serially by default, that's needed to isolate the manager singleton state and env vars in some telemetry tests.
     [Collection("OpenTelemetryManagerTests")]
     public class OpenTelemetryManagerTests : IDisposable
     {
diff --git a/src/Framework/Telemetry/TaskOrTargetTelemetryKey.cs b/src/Framework/Telemetry/TaskOrTargetTelemetryKey.cs
index cc46591dc2d..5647f2fdadd 100644
--- a/src/Framework/Telemetry/TaskOrTargetTelemetryKey.cs
+++ b/src/Framework/Telemetry/TaskOrTargetTelemetryKey.cs
@@ -65,18 +65,20 @@ public TaskOrTargetTelemetryKey(string name) : this(name, false, false, false) {
     public string Name { get; }
 
     /// <summary>
-    /// Gets a value indicating whether this task/target is custom.
+    /// Indicates whether the task/target is custom.
     /// </summary>
     public bool IsCustom { get; }
 
     /// <summary>
-    /// Indicate targets/tasks sourced from NuGet cache - those can be custom or MSFT provided ones.
+    /// Indicates whether the task/target is from NuGet cache.
     /// </summary>
+    /// <remarks>Those can be custom or MSFT provided ones.</remarks>
     public bool IsNuget { get; }
 
     /// <summary>
-    /// Indicate targets/tasks generated during build - those must be hashed (as they contain paths).
+    /// Indicates whether the task/target is generated during build from a metaproject.
     /// </summary>
+    /// <remarks>Those must be hashed (as they contain paths).</remarks>
     public bool IsMetaProj { get; }
 
     public override bool Equals(object? obj)
