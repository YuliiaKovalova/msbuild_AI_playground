diff --git a/src/Build/BackEnd/Components/Scheduler/SchedulingPlan.cs b/src/Build/BackEnd/Components/Scheduler/SchedulingPlan.cs
index da1c0e367d8..4354a13cecb 100644
--- a/src/Build/BackEnd/Components/Scheduler/SchedulingPlan.cs
+++ b/src/Build/BackEnd/Components/Scheduler/SchedulingPlan.cs
@@ -473,7 +473,7 @@ private void ReadHierarchy(StreamReader file)
                     return;
                 }
 
-                string[] values = line.Split(Constants.SpaceChar);
+                string[] values = line.Split(MSBuildConstants.SpaceChar);
                 if (values.Length < 1)
                 {
                     throw new InvalidDataException("Too few values in hierarchy");
@@ -504,7 +504,7 @@ private void ReadTimes(StreamReader file)
                     return;
                 }
 
-                string[] values = line.Split(Constants.SemicolonChar);
+                string[] values = line.Split(MSBuildConstants.SemicolonChar);
                 if (values.Length < 3)
                 {
                     throw new InvalidDataException("Too few values in build plan.");
diff --git a/src/Utilities.UnitTests/TrackedDependencies/FileTrackerTests.cs b/src/Utilities.UnitTests/TrackedDependencies/FileTrackerTests.cs
index 93f48e34af5..a1654a3ea8e 100644
--- a/src/Utilities.UnitTests/TrackedDependencies/FileTrackerTests.cs
+++ b/src/Utilities.UnitTests/TrackedDependencies/FileTrackerTests.cs
@@ -1692,7 +1692,7 @@ public void InProcTrackingChildCustomEnvironment()
                 }
                 else if (envLine.StartsWith("TRACKER_TOOLCHAIN=", StringComparison.OrdinalIgnoreCase) && toolChainValue == null)
                 {
-                    string[] varVal = envLine.Split('=');
+                    string[] varVal = envLine.Split(MSBuildConstants.EqualsChar);
                     toolChainValue = varVal[1];
                 }
             }
