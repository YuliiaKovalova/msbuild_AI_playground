diff --git a/src/Build.UnitTests/BackEnd/OpenTelemetryManager_Tests.cs b/src/Build.UnitTests/BackEnd/OpenTelemetryManager_Tests.cs
index f4e231a77c0..a2ec5161797 100644
--- a/src/Build.UnitTests/BackEnd/OpenTelemetryManager_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/OpenTelemetryManager_Tests.cs
@@ -21,10 +21,12 @@ public class OpenTelemetryManagerTests : IDisposable
         private const string TelemetryFxOptoutEnvVarName = "MSBUILD_TELEMETRY_OPTOUT";
         private const string DotnetOptOut = "DOTNET_CLI_TELEMETRY_OPTOUT";
         private const string TelemetrySampleRateOverrideEnvVarName = "MSBUILD_TELEMETRY_SAMPLE_RATE";
+        private const string VS1714TelemetryOptInEnvVarName = "MSBUILD_TELEMETRY_OPTIN";
 
         private string? preTestFxOptout;
         private string? preTestDotnetOptout;
         private string? preTestSampleRate;
+        private string? preTestVS1714TelemetryOptIn;
 
         public OpenTelemetryManagerTests()
         {
@@ -39,6 +41,7 @@ private void SaveEnvVars()
             preTestFxOptout = Environment.GetEnvironmentVariable(TelemetryFxOptoutEnvVarName);
             preTestDotnetOptout = Environment.GetEnvironmentVariable(DotnetOptOut);
             preTestSampleRate = Environment.GetEnvironmentVariable(TelemetrySampleRateOverrideEnvVarName);
+            preTestVS1714TelemetryOptIn = Environment.GetEnvironmentVariable(VS1714TelemetryOptInEnvVarName);
         }
 
         private void RestoreEnvVars()
@@ -46,6 +49,7 @@ private void RestoreEnvVars()
             Environment.SetEnvironmentVariable(TelemetryFxOptoutEnvVarName, preTestFxOptout);
             Environment.SetEnvironmentVariable(DotnetOptOut, preTestDotnetOptout);
             Environment.SetEnvironmentVariable(TelemetrySampleRateOverrideEnvVarName, preTestSampleRate);
+            Environment.SetEnvironmentVariable(VS1714TelemetryOptInEnvVarName, preTestVS1714TelemetryOptIn);
         }
 
         private void ResetEnvVars()
@@ -53,6 +57,7 @@ private void ResetEnvVars()
             Environment.SetEnvironmentVariable(DotnetOptOut, null);
             Environment.SetEnvironmentVariable(TelemetryFxOptoutEnvVarName, null);
             Environment.SetEnvironmentVariable(TelemetrySampleRateOverrideEnvVarName, null);
+            Environment.SetEnvironmentVariable(VS1714TelemetryOptInEnvVarName, null);
         }
 
         public void Dispose()
@@ -96,6 +101,7 @@ public void Initialize_ShouldSetStateToUnsampled_WhenNoOverrideOnNetCore()
         public void Initialize_ShouldSetSampleRateOverride_AndCreateActivitySource_WhenRandomBelowOverride(bool standalone)
         {
             // Arrange
+            Environment.SetEnvironmentVariable(VS1714TelemetryOptInEnvVarName, "1");
             Environment.SetEnvironmentVariable(TelemetrySampleRateOverrideEnvVarName, "1.0");
 
             // Act
diff --git a/src/Framework/Telemetry/OpenTelemetryManager.cs b/src/Framework/Telemetry/OpenTelemetryManager.cs
index aa719dc2c07..f392e1c24e3 100644
--- a/src/Framework/Telemetry/OpenTelemetryManager.cs
+++ b/src/Framework/Telemetry/OpenTelemetryManager.cs
@@ -208,7 +208,7 @@ public void Shutdown()
         /// <summary>
         /// TODO: Temporary until perf of loading OTel is agreed to in VS.
         /// </summary>
-        private bool IsOptIn() => !IsOptOut() && Traits.Instance.TelemetrySampleRateOverride.HasValue;
+        private bool IsOptIn() => !IsOptOut() && (Traits.Instance.TelemetryOptIn || Traits.Instance.TelemetrySampleRateOverride.HasValue);
 
         /// <summary>
         /// Determines if telemetry should be initialized based on sampling and environment variable overrides.
diff --git a/src/Framework/Telemetry/TelemetryConstants.cs b/src/Framework/Telemetry/TelemetryConstants.cs
index 3721a02f58b..87df7c68e1c 100644
--- a/src/Framework/Telemetry/TelemetryConstants.cs
+++ b/src/Framework/Telemetry/TelemetryConstants.cs
@@ -36,11 +36,10 @@ internal static class TelemetryConstants
     /// Sample rate for the default namespace.
     /// 1:25000 gives us sample size of sufficient confidence with the assumption we collect the order of 1e7 - 1e8 events per day.
     /// </summary>
-    // public const double DefaultSampleRate = 4e-5;
-    public const double DefaultSampleRate = 1.0;
+    public const double DefaultSampleRate = 4e-5;
 
     /// <summary>
-    /// Name of the property for build duration. 
+    /// Name of the property for build duration.
     /// </summary>
     public const string BuildDurationPropertyName = "BuildDurationInMilliseconds";
 
diff --git a/src/Framework/Traits.cs b/src/Framework/Traits.cs
index f597c58e5b4..95fc2efb99c 100644
--- a/src/Framework/Traits.cs
+++ b/src/Framework/Traits.cs
@@ -141,6 +141,9 @@ public Traits()
         public bool SdkTelemetryOptOut = IsEnvVarOneOrTrue("DOTNET_CLI_TELEMETRY_OPTOUT");
         public bool FrameworkTelemetryOptOut = IsEnvVarOneOrTrue("MSBUILD_TELEMETRY_OPTOUT");
         public double? TelemetrySampleRateOverride = ParseDoubleFromEnvironmentVariable("MSBUILD_TELEMETRY_SAMPLE_RATE");
+        
+        // for VS17.14
+        public readonly bool TelemetryOptIn = Environment.GetEnvironmentVariable("MSBUILD_TELEMETRY_OPTIN") == "1";
 
         public static void UpdateFromEnvironment()
         {
