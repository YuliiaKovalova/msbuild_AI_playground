diff --git a/.editorconfig b/.editorconfig
index edcf2233a98..01161a81aa6 100644
--- a/.editorconfig
+++ b/.editorconfig
@@ -156,7 +156,7 @@ csharp_space_between_method_declaration_parameter_list_parentheses = false
 csharp_space_between_parentheses = false
 csharp_space_between_square_brackets = false
 
-# Checks
+# Analyzers
 dotnet_code_quality.ca1802.api_surface = private, internal
 dotnet_code_quality.ca2208.api_surface = public
 
diff --git a/documentation/specs/BuildCheck/BuildCheck-Architecture.md b/documentation/specs/BuildCheck/BuildCheck-Architecture.md
index b3d921c443c..87c6a30b30e 100644
--- a/documentation/specs/BuildCheck/BuildCheck-Architecture.md
+++ b/documentation/specs/BuildCheck/BuildCheck-Architecture.md
@@ -104,7 +104,7 @@ How we'll internally handle the distributed model:
 ## Check Lifecycle
 
 Planned model:
-* Check factories get registered with the BuildCheck infrastructure (`BuildCheckManager`)
+* Checks factories get registered with the BuildCheck infrastructure (`BuildCheckManager`)
     * For inbox checks - this happens on startup.
     * For custom checks - this happens on connecting `ILogger` instance in scheduler node receives acquistion event (`BuildCheckAcquisitionEventArgs`). This event is being sent by worker node as soon as it hits a special marker (a magic property function call) during early evaluation. Loading is not processed by worker node as currently we want custom checks only in the main node (as they will be only given data proxied from BuildEventArgs).
     The `BuildCheckAcquisitionEventArgs` should be sent prior `ProjectEvaluationStartedEventArgs` (buffering will need to take place), or main node will need to replay some initial data after custom check is registered.
diff --git a/documentation/specs/BuildCheck/BuildCheck.md b/documentation/specs/BuildCheck/BuildCheck.md
index bf0b04538eb..e1aaba36424 100644
--- a/documentation/specs/BuildCheck/BuildCheck.md
+++ b/documentation/specs/BuildCheck/BuildCheck.md
@@ -55,7 +55,7 @@ Majority of following cases are included in appropriate context within the scena
 * Bulk configuration of multiple rules (based on prefixes).
 * Specifying scope of MSBuild imports that will be considered for check (so that e.g. data from sdk won't even be passed to check, if not requested).
 * Attempts to try to configure standard msbuild warnings/errors via `.editorconfig` should lead to fail fast errors.
-* Configuring check levels when checking from binlog - beyond the collected editorconfigs
+* Configuring BuildCheck levels when checking from binlog - beyond the collected editorconfigs
 * Structured information in VS error window (similarly to the Roslyn check reports - reports have titles, details, locations, searchable codes and exposed links leading to detailed documentation).
 
 
@@ -65,7 +65,7 @@ Majority of following cases are included in appropriate context within the scena
 * Localization support (for reports message formats, identifiers, etc.).
 * Custom checks have equal data access as the inbox checks. We'll aim to ship checks that use public BuildCheck API/OM surface. But for extra agility we might chose to implement and ship some checks using unexposed data.
 * All inbox checks reports have precise location(s) of issues (however for each individual check not providing precise location we should have a very strong reason, why location cannot be provided and why it still brings value even without precise location).
-* Opt-out of check on code-level (something like C# `#pragma warning disable`, but within msbuild xml files).
+* Opt-out of BuildCheck on code-level (something like C# `#pragma warning disable`, but within msbuild xml files).
 * Simplified authoring experience via dedicated reference assembly.
 * Restore phase check.
 * Turning check off/on based on target (e.g. multi-targeted builds, calling MSBuild task etc.).
diff --git a/src/Build/BuildCheck/API/BuildCheckResult.cs b/src/Build/BuildCheck/API/BuildCheckResult.cs
index 10d76f519be..7f7e44ba5bb 100644
--- a/src/Build/BuildCheck/API/BuildCheckResult.cs
+++ b/src/Build/BuildCheck/API/BuildCheckResult.cs
@@ -9,7 +9,7 @@
 namespace Microsoft.Build.Experimental.BuildCheck;
 
 /// <summary>
-/// Representation of a single report of a single finding from a BuildCheck
+/// Representation of a single report of a single finding from a Check
 /// Each rule has upfront known message format - so only the concrete arguments are added
 /// Optionally a location is attached - in the near future we might need to support multiple locations
 ///  (for 2 cases - a) grouped result for multiple occurrences; b) a single report for a finding resulting from combination of multiple locations)
diff --git a/src/Build/BuildCheck/API/BuildExecutionCheck.cs b/src/Build/BuildCheck/API/Check.cs
similarity index 100%
rename from src/Build/BuildCheck/API/BuildExecutionCheck.cs
rename to src/Build/BuildCheck/API/Check.cs
diff --git a/src/Build/BuildCheck/API/BuildExecutionCheckConfiguration.cs b/src/Build/BuildCheck/API/CheckConfiguration.cs
similarity index 100%
rename from src/Build/BuildCheck/API/BuildExecutionCheckConfiguration.cs
rename to src/Build/BuildCheck/API/CheckConfiguration.cs
diff --git a/src/Build/BuildCheck/API/BuildExecutionCheckResultSeverity.cs b/src/Build/BuildCheck/API/CheckResultSeverity.cs
similarity index 100%
rename from src/Build/BuildCheck/API/BuildExecutionCheckResultSeverity.cs
rename to src/Build/BuildCheck/API/CheckResultSeverity.cs
diff --git a/src/Build/BuildCheck/API/BuildExecutionCheckRule.cs b/src/Build/BuildCheck/API/CheckRule.cs
similarity index 100%
rename from src/Build/BuildCheck/API/BuildExecutionCheckRule.cs
rename to src/Build/BuildCheck/API/CheckRule.cs
diff --git a/src/Build/BuildCheck/Infrastructure/BuildExecutionCheckConfigurationEffective.cs b/src/Build/BuildCheck/Infrastructure/CheckConfigurationEffective.cs
similarity index 100%
rename from src/Build/BuildCheck/Infrastructure/BuildExecutionCheckConfigurationEffective.cs
rename to src/Build/BuildCheck/Infrastructure/CheckConfigurationEffective.cs
diff --git a/src/Build/BuildCheck/Infrastructure/BuildExecutionCheckWrapper.cs b/src/Build/BuildCheck/Infrastructure/CheckWrapper.cs
similarity index 100%
rename from src/Build/BuildCheck/Infrastructure/BuildExecutionCheckWrapper.cs
rename to src/Build/BuildCheck/Infrastructure/CheckWrapper.cs
diff --git a/src/BuildCheck.UnitTests/BuildExecutionCheckConfigurationEffectiveTests.cs b/src/BuildCheck.UnitTests/CheckConfigurationEffectiveTests.cs
similarity index 100%
rename from src/BuildCheck.UnitTests/BuildExecutionCheckConfigurationEffectiveTests.cs
rename to src/BuildCheck.UnitTests/CheckConfigurationEffectiveTests.cs
diff --git a/src/BuildCheck.UnitTests/BuildExecutionCheckConfiguration_Test.cs b/src/BuildCheck.UnitTests/CheckConfiguration_Test.cs
similarity index 100%
rename from src/BuildCheck.UnitTests/BuildExecutionCheckConfiguration_Test.cs
rename to src/BuildCheck.UnitTests/CheckConfiguration_Test.cs
