diff --git a/src/Build/Logging/OptimizedStringIndenter.cs b/src/Build/Logging/OptimizedStringIndenter.cs
index 3431e5710e8..d7ce739f3de 100644
--- a/src/Build/Logging/OptimizedStringIndenter.cs
+++ b/src/Build/Logging/OptimizedStringIndenter.cs
@@ -79,8 +79,7 @@ internal static unsafe string IndentString(string? s, int indent)
                 output = output.Slice(state.indent);
 
                 // Append string segment
-                input.Slice(0, segment.Length).CopyTo(output);
-                input = input.Slice(segment.TotalLength);
+                input.Slice(segment.Start, segment.Length).CopyTo(output);
                 output = output.Slice(segment.Length);
 
                 // Append newline
@@ -116,7 +115,7 @@ private static Span<StringSegment> GetStringSegments(ReadOnlySpan<char> input, S
         if (input.IsEmpty)
         {
             segments = segments.Slice(0, 1);
-            segments[0] = new StringSegment(0, 0, 0);
+            segments[0] = new StringSegment(0, 0);
             pooledArray = null;
             return segments;
         }
@@ -147,7 +146,7 @@ private static Span<StringSegment> GetStringSegments(ReadOnlySpan<char> input, S
             int index = input.IndexOf('\n');
             if (index < 0)
             {
-                segments[i] = new StringSegment(start, input.Length, 0);
+                segments[i] = new StringSegment(start, input.Length);
                 break;
             }
 
@@ -159,7 +158,7 @@ private static Span<StringSegment> GetStringSegments(ReadOnlySpan<char> input, S
             }
 
             int totalLength = index + newLineLength;
-            segments[i] = new StringSegment(start, index, totalLength);
+            segments[i] = new StringSegment(start, index);
 
             start += totalLength;
             input = input.Slice(totalLength);
@@ -170,15 +169,13 @@ private static Span<StringSegment> GetStringSegments(ReadOnlySpan<char> input, S
 
     private struct StringSegment
     {
-        public StringSegment(int start, int length, int totalLength)
+        public StringSegment(int start, int length)
         {
             Start = start;
             Length = length;
-            TotalLength = totalLength;
         }
 
         public int Start { get; }
         public int Length { get; }
-        public int TotalLength { get; }
     }
 }
