diff --git a/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs b/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
index a95b244f4ae..05358e7789f 100644
--- a/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
+++ b/src/Build.UnitTests/WarningsAsMessagesAndErrors_Tests.cs
@@ -273,19 +273,19 @@ private string GetTestProject(bool? treatAllWarningsAsErrors = null, string warn
         }
 
         [Fact]
-        public void TaskLogsWarningAsError_BuildShouldFinishAndFail()
+        public void TaskReturnsHasLoggedErrorAndLogsWarningAsError_BuildShouldFinishAndFail()
         {
             using (TestEnvironment env = TestEnvironment.Create(_output))
             {
                 TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@"
                 <Project>
                     <UsingTask TaskName = ""ReturnFailureWithoutLoggingErrorTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
-                    <UsingTask TaskName = ""LogWarningReturnHasLoggedError"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
+                    <UsingTask TaskName = ""CustomLogAndReturnTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
                     <PropertyGroup>
                         <MSBuildWarningsAsErrors>MSB1234</MSBuildWarningsAsErrors>
                     </PropertyGroup>
                     <Target Name='Build'>
-                        <LogWarningReturnHasLoggedError WarningCode=""MSB1234""/>
+                        <CustomLogAndReturnTask Return=""true"" ReturnHasLoggedErrors=""true"" WarningCode=""MSB1234""/>
                         <ReturnFailureWithoutLoggingErrorTask/>
                     </Target>
                 </Project>");
@@ -300,33 +300,6 @@ public void TaskLogsWarningAsError_BuildShouldFinishAndFail()
             }
         }
 
-        /// <summary>
-        /// MSBuild behavior as of 16.10: As long as a task returns true, the build will continue despite logging an error.
-        /// </summary>
-        [Fact]
-        public void TaskReturnsTrueButLogsError_BuildShouldFinishAndFail()
-        {
-            using (TestEnvironment env = TestEnvironment.Create(_output))
-            {
-                TransientTestProjectWithFiles proj = env.CreateTestProjectWithFiles($@"
-                <Project>
-                    <UsingTask TaskName = ""CustomLogAndReturnTask"" AssemblyName=""Microsoft.Build.Engine.UnitTests""/>
-                    <Target Name='Build'>
-                        <CustomLogAndReturnTask Return=""true"" ErrorCode=""MSB1235""/>
-                        <CustomLogAndReturnTask Return=""true"" WarningCode=""MSB1234""/>
-                    </Target>
-                </Project>");
-
-                MockLogger logger = proj.BuildProjectExpectFailure();
-
-                logger.WarningCount.ShouldBe(1);
-                logger.ErrorCount.ShouldBe(1);
-
-                // The build should CONTINUE when a task returns true.
-                logger.AssertLogContains("MSB1234");
-            }
-        }
-
         /// <summary>
         /// MSBuild behavior as of 16.10: As long as a task returns true, the build will continue despite logging a warning as error.
         /// This tests MSBuildWarningsAsErrors
@@ -346,7 +319,7 @@ public void TaskReturnsTrueButLogsWarningAsError_BuildShouldFinishAndFail()
                     </PropertyGroup>
                     <Target Name='Build'>
                         <CustomLogAndReturnTask Return=""true"" WarningCode=""MSB1234""/>
-                        <LogWarningReturnHasLoggedError WarningCode=""MSB1235""/>
+                        <CustomLogAndReturnTask Return=""true"" WarningCode=""MSB1235""/>
                     </Target>
                 </Project>");
 
