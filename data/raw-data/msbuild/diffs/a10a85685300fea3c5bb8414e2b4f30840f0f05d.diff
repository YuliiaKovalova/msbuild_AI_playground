diff --git a/src/Tasks.UnitTests/AssignCulture_Tests.cs b/src/Tasks.UnitTests/AssignCulture_Tests.cs
index a55b4874992..def6ec23489 100644
--- a/src/Tasks.UnitTests/AssignCulture_Tests.cs
+++ b/src/Tasks.UnitTests/AssignCulture_Tests.cs
@@ -224,6 +224,11 @@ public void Aliased(string culture)
         [SkipOnTargetFramework(TargetFrameworkMonikers.NetFramework)]
         public void AliasedUnavailableOnNetFramework(string culture)
         {
+            // Skipping .NET Framework is not enough, we must also skip .NET Core when running on NLS
+            if (IsUsingNLS())
+            {
+                return;
+            }
             TestValidCulture(culture);
         }
 
@@ -263,9 +268,17 @@ public void AliasedUnavailableOnMono(string culture)
         [SkipOnTargetFramework(TargetFrameworkMonikers.Mono | TargetFrameworkMonikers.NetFramework)]
         public void AliasedUnavailableOnMonoAndNetFramework(string culture)
         {
+            // Skipping .NET Framework is not enough, we must also skip .NET Core when running on NLS
+            if (IsUsingNLS())
+            {
+                return;
+            }
             TestValidCulture(culture);
         }
 
+        // See https://docs.microsoft.com/en-us/dotnet/standard/globalization-localization/globalization-icu#stringindexof
+        static private bool IsUsingNLS() => "\r\n".IndexOf("\n") == 1;
+
         /*
         * Method:   PseudoLocales
         *
diff --git a/src/Tasks/CultureInfoCache.cs b/src/Tasks/CultureInfoCache.cs
index df4b6c975be..41b9474e3ed 100644
--- a/src/Tasks/CultureInfoCache.cs
+++ b/src/Tasks/CultureInfoCache.cs
@@ -31,10 +31,9 @@ internal static bool IsValidCultureString(string name)
                 {
                     return true;
                 }
-                // On .NET Core, unknown cultures don't have a ThreeLetterISOLanguageName (empty string)
-                // On .NET Framework, unknown cultures have a ThreeLetterISOLanguageName (identical to the culture name)
-                // but their NativeName is "Unknown Language (...)"
-                return culture.ThreeLetterISOLanguageName.Length > 0 && culture.NativeName != $"Unknown Language ({name})";
+                // Under ICU, unknown cultures don't have a ThreeLetterISOLanguageName (empty string)
+                // Under NLS, unknown cultures have a ThreeLetterISOLanguageName but their NativeName is "Unknown Language (...)"
+                return culture.ThreeLetterISOLanguageName.Length == 3 && culture.NativeName != $"Unknown Language ({name})";
             }
             catch (CultureNotFoundException)
             {
