diff --git a/ref/Microsoft.Build/net/Microsoft.Build.cs b/ref/Microsoft.Build/net/Microsoft.Build.cs
index 3b75e56450c..3b2268d29e2 100644
--- a/ref/Microsoft.Build/net/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/net/Microsoft.Build.cs
@@ -1429,10 +1429,10 @@ internal CacheResult() { }
     }
     public enum CacheResultType
     {
-        CacheError = 3,
-        CacheHit = 0,
-        CacheMiss = 1,
-        CacheNotApplicable = 2,
+        CacheHit = 1,
+        CacheMiss = 2,
+        CacheNotApplicable = 3,
+        None = 0,
     }
     public abstract partial class PluginLoggerBase
     {
diff --git a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
index 4ed4ec760d8..2d8bde06715 100644
--- a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
@@ -1423,10 +1423,10 @@ internal CacheResult() { }
     }
     public enum CacheResultType
     {
-        CacheError = 3,
-        CacheHit = 0,
-        CacheMiss = 1,
-        CacheNotApplicable = 2,
+        CacheHit = 1,
+        CacheMiss = 2,
+        CacheNotApplicable = 3,
+        None = 0,
     }
     public abstract partial class PluginLoggerBase
     {
diff --git a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
index 318c2791572..ec849b7fb62 100644
--- a/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
+++ b/src/Build.UnitTests/ProjectCache/ProjectCacheTests.cs
@@ -182,7 +182,7 @@ char Chr(int projectNumber)
                             : 'T',
                         CacheResultType.CacheMiss => 'M',
                         CacheResultType.CacheNotApplicable => 'N',
-                        CacheResultType.CacheError => 'E',
+                        CacheResultType.None => 'E',
                         _ => throw new ArgumentOutOfRangeException()
                         };
                 }
@@ -532,7 +532,7 @@ private void AssertCacheBuild(
                         break;
                     case CacheResultType.CacheNotApplicable:
                         break;
-                    case CacheResultType.CacheError:
+                    case CacheResultType.None:
                         break;
                     default:
                         throw new ArgumentOutOfRangeException();
diff --git a/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs b/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
index 172bdeb4c8b..af194e45728 100644
--- a/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
@@ -11,12 +11,31 @@
 
 namespace Microsoft.Build.Experimental.ProjectCache
 {
+    /// <summary>
+    /// Result types that a plugin can return for a given build request.
+    /// </summary>
     public enum CacheResultType
     {
+        /// <summary>
+        /// The plugin failed and couldn't return a result. The plugin should log an error detailing the failure. MSBuild will stop the build.
+        /// </summary>
+        None = 0,
+
+        /// <summary>
+        /// The plugin determined that it supports a build request and found that it can be skipped. MSBuild won't build the request.
+        /// </summary>
         CacheHit,
+
+        /// <summary>
+        /// The plugin determined that it supports a build request and found that it cannot be skipped. MSBuild will build the request.
+        /// </summary>
         CacheMiss,
-        CacheNotApplicable,
-        CacheError
+
+        /// <summary>
+        /// The plugin determined that it does not support a certain build request. MSBuild will build the request.
+        /// For example, a plugin may not support projects with a certain extension, certain properties, or certain called targets.
+        /// </summary>
+        CacheNotApplicable
     }
 
     /// <summary>
diff --git a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
index 5157fe4a471..340d613c1c3 100644
--- a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
@@ -149,7 +149,7 @@ public async Task<CacheResult> GetCacheResultAsync(BuildRequestData buildRequest
 
             var cacheResult = await _projectCachePlugin.GetCacheResultAsync(buildRequest, _logger, _cancellationToken);
 
-            if (_logger.HasLoggedErrors || cacheResult.ResultType == CacheResultType.CacheError)
+            if (_logger.HasLoggedErrors || cacheResult.ResultType == CacheResultType.None)
             {
                 throw new Exception(
                     ResourceUtilities.FormatResourceStringIgnoreCodeAndKeyword("ProjectCacheQueryFailed", queryDescription));
@@ -166,7 +166,7 @@ public async Task<CacheResult> GetCacheResultAsync(BuildRequestData buildRequest
                 case CacheResultType.CacheNotApplicable:
                     message += " Building project.";
                     break;
-                case CacheResultType.CacheError:
+                case CacheResultType.None:
                     break;
                 default:
                     throw new ArgumentOutOfRangeException();
