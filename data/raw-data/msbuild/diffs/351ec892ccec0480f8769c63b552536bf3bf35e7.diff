diff --git a/src/Framework/Microsoft.Build.Framework.csproj b/src/Framework/Microsoft.Build.Framework.csproj
index 6a0b9e476e3..dcdd7d1e32c 100644
--- a/src/Framework/Microsoft.Build.Framework.csproj
+++ b/src/Framework/Microsoft.Build.Framework.csproj
@@ -15,7 +15,6 @@
 
   <ItemGroup>
     <PackageReference Include="Microsoft.CodeAnalysis.Collections" PrivateAssets="all" />
-    <PackageReference Include="System.Diagnostics.DiagnosticSource" />
   </ItemGroup>
 
   <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
@@ -24,6 +23,7 @@
     <PackageReference Include="Microsoft.VisualStudio.Setup.Configuration.Interop" PrivateAssets="all" />
     <Reference Include="System.Xaml" />
     <!-- Telemetry in Framework-->
+    <PackageReference Include="System.Diagnostics.DiagnosticSource" />
     <PackageReference Include="Microsoft.VisualStudio.OpenTelemetry.Collector" />
     <PackageReference Include="Microsoft.VisualStudio.OpenTelemetry.ClientExtensions" />
     <PackageReference Include="OpenTelemetry" />
diff --git a/src/Framework/Telemetry/TelemetryConstants.cs b/src/Framework/Telemetry/TelemetryConstants.cs
index 48badb4c813..77911ed5dee 100644
--- a/src/Framework/Telemetry/TelemetryConstants.cs
+++ b/src/Framework/Telemetry/TelemetryConstants.cs
@@ -1,135 +1,23 @@
 ï»¿// Licensed to the .NET Foundation under one or more agreements.
 // The .NET Foundation licenses this file to you under the MIT license.
-using System;
-using System.Collections.Generic;
-using System.Diagnostics;
-using System.Linq;
-using System.Runtime.CompilerServices;
-using System.Threading;
-using System.Threading.Tasks;
+namespace Microsoft.Build.Framework.Telemetry;
 
-#if NETFRAMEWORK
-using Microsoft.VisualStudio.OpenTelemetry.ClientExtensions;
-using Microsoft.VisualStudio.OpenTelemetry.ClientExtensions.Exporters;
-using Microsoft.VisualStudio.OpenTelemetry.Collector.Interfaces;
-using Microsoft.VisualStudio.OpenTelemetry.Collector.Settings;
-using OpenTelemetry;
-using OpenTelemetry.Trace;
-#endif
-
-#if DEBUG && NETFRAMEWORK
-using OpenTelemetry.Exporter;
-#endif
-
-namespace Microsoft.Build.Framework.Telemetry
+internal static class TelemetryConstants
 {
-
-    internal static class TelemetryConstants
-    {
-        /// <summary>
-        /// "Microsoft.VisualStudio.OpenTelemetry.*" namespace is required by VS exporting/collection.
-        /// </summary>
-        public const string DefaultActivitySourceNamespace = "Microsoft.VisualStudio.OpenTelemetry.MSBuild";
-        public const string EventPrefix = "VS/MSBuild/";
-        public const string PropertyPrefix = "VS.MSBuild.";
-        /// <summary>
-        /// For VS OpenTelemetry Collector to apply the correct privacy policy.
-        /// </summary>
-        public const string VSMajorVersion = "17.0";
-
-        /// <summary>
-        /// https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry
-        /// </summary>
-        public const string DotnetOptOut = "DOTNET_CLI_TELEMETRY_OPTOUT";
-        public const string MSBuildOptout = "MSBUILD_TELEMETRY_OPTOUT";
-    }
-
-    /*
-    internal class OTLPCollector : IDisposable
-    {
-        private readonly MSBuildActivitySource _activitySource;
-        private TracerProvider? _tracerProvider;
-        private MeterProvider? _meterProvider;
-
-        public OTLPCollector(MSBuildActivitySource activitySource)
-        {
-            _activitySource = activitySource;
-        }
-
-        public OTLPCollector Initialize()
-        {
-            _tracerProvider = Sdk.CreateTracerProviderBuilder()
-                .AddSource(TelemetryConstants.MSBuildSourceName)
-                .AddOtlpExporter()
-                .Build();
-
-            _meterProvider = Sdk.CreateMeterProviderBuilder()
-                .AddMeter(TelemetryConstants.MSBuildSourceName)
-                .Build();
-
-            return this;
-        }
-
-        public void Dispose()
-        {
-            _tracerProvider?.Dispose();
-            _meterProvider?.Dispose();
-        }
-    }
-    */
-    /*
-#if NETFRAMEWORK
-    internal class VSCollector : IDisposable
-    {
-        private const string VsMajorVersion = "17.0";
-
-        private readonly MSBuildActivitySource _activitySource;
-        private IOpenTelemetryCollector? _collector;
-        private TracerProvider? _tracerProvider;
-        private MeterProvider? _meterProvider;
-
-        public VSCollector(MSBuildActivitySource activitySource)
-        {
-            _activitySource = activitySource;
-        }
-
-        public VSCollector Initialize()
-        {
-            var exporterSettings = OpenTelemetryExporterSettingsBuilder
-                .CreateVSDefault(VsMajorVersion)
-                .Build();
-
-            var collectorSettings = OpenTelemetryCollectorSettingsBuilder
-                .CreateVSDefault(VsMajorVersion)
-                .Build();
-
-            _tracerProvider = Sdk.CreateTracerProviderBuilder()
-                .AddVisualStudioDefaultTraceExporter(exporterSettings)
-                .AddSource(TelemetryConstants.MSBuildSourceName)
-                .Build();
-
-            _meterProvider = Sdk.CreateMeterProviderBuilder()
-                .AddVisualStudioDefaultMetricExporter(exporterSettings)
-                .AddMeter(TelemetryConstants.MSBuildSourceName)
-                .Build();
-
-            _collector = OpenTelemetryCollectorProvider.CreateCollector(collectorSettings);
-
-            _collector.StartAsync();
-
-            return this;
-        }
-
-        public void Dispose()
-        {
-            if (_collector != null)
-            {
-                _collector.Dispose();
-            }
-            _tracerProvider?.Dispose();
-            _meterProvider?.Dispose();
-        }
-    }
-#endif
-*/
+    /// <summary>
+    /// "Microsoft.VisualStudio.OpenTelemetry.*" namespace is required by VS exporting/collection.
+    /// </summary>
+    public const string DefaultActivitySourceNamespace = "Microsoft.VisualStudio.OpenTelemetry.MSBuild";
+    public const string EventPrefix = "VS/MSBuild/";
+    public const string PropertyPrefix = "VS.MSBuild.";
+    /// <summary>
+    /// For VS OpenTelemetry Collector to apply the correct privacy policy.
+    /// </summary>
+    public const string VSMajorVersion = "17.0";
+
+    /// <summary>
+    /// https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry
+    /// </summary>
+    public const string DotnetOptOut = "DOTNET_CLI_TELEMETRY_OPTOUT";
+    public const string MSBuildOptout = "MSBUILD_TELEMETRY_OPTOUT";
 }
