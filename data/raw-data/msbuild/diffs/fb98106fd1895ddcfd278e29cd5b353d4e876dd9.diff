diff --git a/src/MSBuild.UnitTests/XMake_Tests.cs b/src/MSBuild.UnitTests/XMake_Tests.cs
index d92d9cdf5e2..50e3dafbd4f 100644
--- a/src/MSBuild.UnitTests/XMake_Tests.cs
+++ b/src/MSBuild.UnitTests/XMake_Tests.cs
@@ -809,6 +809,41 @@ public void BuildFailsWithBadPropertyName()
             results.ShouldContain("error MSB4177");
         }
 
+        [Theory]
+        [InlineData("-getProperty:Foo", "propertyContent")]
+        [InlineData("-getItem:Bar", "ItemContent")]
+        [InlineData("-getTargetResult:Biz", "Success")]
+        public void GetStarOutputsToFileIfRequested(string extraSwitch, string result)
+        {
+            using TestEnvironment env = TestEnvironment.Create();
+            TransientTestFile project = env.CreateFile("testProject.csproj", @"
+<Project>
+  <PropertyGroup>
+    <Foo>propertyContent</Foo>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <Bar Include=""ItemContent"" />
+  </ItemGroup>
+
+  <Target Name=""Biz"" />
+</Project>
+");
+            string resultFile = Path.Combine(Path.GetDirectoryName(project.Path), "resultFile.txt");
+            File.Exists(resultFile).ShouldBeFalse();
+            try
+            {
+                string results = RunnerUtilities.ExecMSBuild($" {project.Path} {extraSwitch} -getResultOutputFile:{resultFile}", out bool success);
+                success.ShouldBeTrue();
+                File.Exists(resultFile).ShouldBeTrue();
+                File.ReadAllText(resultFile).ShouldContain(result);
+            }
+            finally
+            {
+                File.Delete(resultFile);
+            }
+        }
+
         [Theory]
         [InlineData(true)]
         [InlineData(false)]
