diff --git a/src/Build/Logging/SimpleErrorLogger.cs b/src/Build/Logging/SimpleErrorLogger.cs
index 8f4a793b8ee..513425d662e 100644
--- a/src/Build/Logging/SimpleErrorLogger.cs
+++ b/src/Build/Logging/SimpleErrorLogger.cs
@@ -3,6 +3,7 @@
 
 using System;
 using Microsoft.Build.Framework;
+using Microsoft.Build.Logging.TerminalLogger;
 using Microsoft.Build.Shared;
 
 namespace Microsoft.Build.Logging.SimpleErrorLogger
@@ -41,21 +42,27 @@ public void Initialize(IEventSource eventSource, int nodeCount)
         {
             eventSource.ErrorRaised += HandleErrorEvent;
             eventSource.WarningRaised += HandleWarningEvent;
+
+            // This needs to happen so binary loggers can get evaluation properties and items
+            if (eventSource is IEventSource4 eventSource4)
+            {
+                eventSource4.IncludeEvaluationPropertiesAndItems();
+            }
         }
 
         private void HandleErrorEvent(object sender, BuildErrorEventArgs e)
         {
             HasLoggedErrors = true;
-            Console.Error.Write("\x1b[31;1m");
-            Console.Error.Write(EventArgsFormatting.FormatEventMessage(e, showProjectFile: true));
-            Console.Error.WriteLine("\x1b[m");
+            Console.Error.Write(AnsiCodes.Colorize(
+                EventArgsFormatting.FormatEventMessage(e, showProjectFile: true),
+                TerminalColor.Red));
         }
 
         private void HandleWarningEvent(object sender, BuildWarningEventArgs e)
         {
-            Console.Error.Write("\x1b[33;1m");
-            Console.Error.Write(EventArgsFormatting.FormatEventMessage(e, showProjectFile: true));
-            Console.Error.WriteLine("\x1b[m");
+            Console.Error.Write(AnsiCodes.Colorize(
+                EventArgsFormatting.FormatEventMessage(e, showProjectFile: true),
+                TerminalColor.Yellow));
         }
 
         public void Initialize(IEventSource eventSource)
diff --git a/src/MSBuild/TerminalLogger/AnsiCodes.cs b/src/Framework/Logging/AnsiCodes.cs
similarity index 100%
rename from src/MSBuild/TerminalLogger/AnsiCodes.cs
rename to src/Framework/Logging/AnsiCodes.cs
diff --git a/src/MSBuild/TerminalLogger/TerminalColor.cs b/src/Framework/Logging/TerminalColor.cs
similarity index 78%
rename from src/MSBuild/TerminalLogger/TerminalColor.cs
rename to src/Framework/Logging/TerminalColor.cs
index 683b4d683b8..cfe94c5f2f6 100644
--- a/src/MSBuild/TerminalLogger/TerminalColor.cs
+++ b/src/Framework/Logging/TerminalColor.cs
@@ -4,7 +4,7 @@
 namespace Microsoft.Build.Logging.TerminalLogger;
 
 /// <summary>
-/// Enumerates the text colors supported by <see cref="ITerminal"/>.
+/// Enumerates the text colors supported by <see cref="Microsoft.Build.Logging.TerminalLogger.ITerminal"/>.
 /// </summary>
 internal enum TerminalColor
 {
diff --git a/src/MSBuild/TerminalLogger/TerminalLogger.cs b/src/MSBuild/TerminalLogger/TerminalLogger.cs
index ffb06c9e550..0d5d5cd2b09 100644
--- a/src/MSBuild/TerminalLogger/TerminalLogger.cs
+++ b/src/MSBuild/TerminalLogger/TerminalLogger.cs
@@ -9,7 +9,6 @@
 using System.Threading;
 using Microsoft.Build.Framework;
 using Microsoft.Build.Shared;
-using System.Runtime.InteropServices;
 #if NETFRAMEWORK
 using Microsoft.IO;
 #else
