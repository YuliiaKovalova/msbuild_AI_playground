diff --git a/src/MSBuild/LiveLogger/TerminalBuffer.cs b/src/MSBuild/LiveLogger/TerminalBuffer.cs
index 071daf9d584..16c0bc08c41 100644
--- a/src/MSBuild/LiveLogger/TerminalBuffer.cs
+++ b/src/MSBuild/LiveLogger/TerminalBuffer.cs
@@ -56,13 +56,15 @@ public TerminalBufferLine(string text, bool shouldWrapLines)
 
     internal class TerminalBuffer
     {
+        private const char errorSymbol = '❌';
+        private const char warningSymbol = '⚠';
         private static List<TerminalBufferLine> Lines = new();
         public static string FooterText = string.Empty;
         public static int TopLineIndex = 0;
         public static string Footer = string.Empty;
         internal static bool IsTerminated = false;
         internal static bool ShouldRerender = true;
-        internal static TopBarColor topBarColor = TopBarColor.None;
+        internal static OverallBuildState topBarColor = OverallBuildState.None;
         internal static int ScrollableAreaHeight
         {
             get
@@ -102,14 +104,14 @@ public static void Render()
 
             ShouldRerender = false;
             ANSIBuilder.Formatting.ForegroundColor desiredColor =
-                topBarColor == TopBarColor.Error ? ANSIBuilder.Formatting.ForegroundColor.Red :
-                topBarColor == TopBarColor.Warning ? ANSIBuilder.Formatting.ForegroundColor.Yellow :
+                topBarColor == OverallBuildState.Error ? ANSIBuilder.Formatting.ForegroundColor.Red :
+                topBarColor == OverallBuildState.Warning ? ANSIBuilder.Formatting.ForegroundColor.Yellow :
                 ANSIBuilder.Formatting.ForegroundColor.White;
 
             string text = "MSBuild - Build in progress";
             text =
-                topBarColor == TopBarColor.Error ? $"❌ {text} ❌" :
-                topBarColor == TopBarColor.Warning ? $"⚠ {text} ⚠" :
+                topBarColor == OverallBuildState.Error ? $"{errorSymbol} {text} {errorSymbol}" :
+                topBarColor == OverallBuildState.Warning ? $"{warningSymbol} {text} {warningSymbol}" :
                 text;
 
             Console.Write(
@@ -165,7 +167,7 @@ public static void Render()
             Console.Write(contents);
         }
         #endregion
-        #region Line identification
+            #region Line identification
         public static int GetLineIndexById(int lineId)
         {
             return Lines.FindIndex(x => x.Id == lineId);
@@ -251,7 +253,7 @@ public static void DeleteLine(int lineId)
         #endregion
     }
 
-    internal enum TopBarColor
+    internal enum OverallBuildState
     {
         None,
         Warning,
