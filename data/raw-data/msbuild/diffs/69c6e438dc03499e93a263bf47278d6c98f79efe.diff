diff --git a/src/Build/BackEnd/BuildManager/BuildParameters.cs b/src/Build/BackEnd/BuildManager/BuildParameters.cs
index 92a92f6e0f0..1129274ba2f 100644
--- a/src/Build/BackEnd/BuildManager/BuildParameters.cs
+++ b/src/Build/BackEnd/BuildManager/BuildParameters.cs
@@ -789,7 +789,7 @@ public string OutputResultsCacheFile
         /// Any <see cref="GraphBuildSubmission"/> requests will also use this project cache instead of
         /// the potential project caches described in graph node's evaluations.
         /// </summary>
-        public ProjectCacheDescriptor ProjectCacheDescriptor{ get; set; }
+        public ProjectCacheDescriptor ProjectCacheDescriptor { get; set; }
 
         /// <summary>
         /// Retrieves a toolset.
diff --git a/src/Build/BackEnd/BuildManager/BuildSubmission.cs b/src/Build/BackEnd/BuildManager/BuildSubmission.cs
index fba01441206..91356f814c6 100644
--- a/src/Build/BackEnd/BuildManager/BuildSubmission.cs
+++ b/src/Build/BackEnd/BuildManager/BuildSubmission.cs
@@ -6,9 +6,6 @@
 using Microsoft.Build.BackEnd;
 using Microsoft.Build.Shared;
 using System.Globalization;
-using Microsoft.Build.BackEnd.Logging;
-using Microsoft.Build.BackEnd.SdkResolution;
-using Microsoft.Build.Definition;
 
 namespace Microsoft.Build.Execution
 {
diff --git a/src/Build/BackEnd/Components/ProjectCache/CacheContext.cs b/src/Build/BackEnd/Components/ProjectCache/CacheContext.cs
index aa33c589c99..8b184f220a2 100644
--- a/src/Build/BackEnd/Components/ProjectCache/CacheContext.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/CacheContext.cs
@@ -10,10 +10,20 @@
 namespace Microsoft.Build.Experimental.ProjectCache
 {
     /// <summary>
-    ///     Either Graph is null, or GraphEntryPoints is null. Not Both.
+    ///     Holds various information about the current msbuild execution that the cache might use.
+    ///     The cache may need to know about the top level projects or the entire project graph, so MSBuild
+    ///     provides a graph when one is available. When it isn't available, MSBuild provides the top level projects
+    ///     and the plugin can construct its own graph based on those.
+    ///     So either <see cref="Graph" />is null, or <see cref="GraphEntryPoints" /> is null. But not both.
     /// </summary>
     public class CacheContext
     {
+        public IReadOnlyDictionary<string, string> PluginSettings { get; }
+        public ProjectGraph? Graph { get; }
+        public IReadOnlyCollection<ProjectGraphEntryPoint>? GraphEntryPoints { get; }
+        public string MSBuildExePath { get; }
+        public MSBuildFileSystemBase FileSystem { get; }
+
         public CacheContext(
             IReadOnlyDictionary<string, string> pluginSettings,
             MSBuildFileSystemBase fileSystem,
@@ -21,7 +31,7 @@ public CacheContext(
             IReadOnlyCollection<ProjectGraphEntryPoint>? graphEntryPoints = null)
         {
             ErrorUtilities.VerifyThrow(
-                graph != null ^ graphEntryPoints != null,
+                (graph != null) ^ (graphEntryPoints != null),
                 "Either Graph is specified, or GraphEntryPoints is specified. Not both.");
 
             PluginSettings = pluginSettings;
@@ -30,11 +40,5 @@ public CacheContext(
             MSBuildExePath = BuildEnvironmentHelper.Instance.CurrentMSBuildExePath;
             FileSystem = fileSystem;
         }
-
-        public IReadOnlyDictionary<string, string> PluginSettings { get; }
-        public ProjectGraph? Graph { get; }
-        public IReadOnlyCollection<ProjectGraphEntryPoint>? GraphEntryPoints { get; }
-        public string MSBuildExePath { get; }
-        public MSBuildFileSystemBase FileSystem { get; }
     }
 }
diff --git a/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs b/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
index 6d6644e2e96..172bdeb4c8b 100644
--- a/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/CacheResult.cs
@@ -20,7 +20,10 @@ public enum CacheResultType
     }
 
     /// <summary>
-    ///     Only cache hits have non null build result information.
+    ///     Represents the cache result a plugin returns back to MSBuild when queried about a certain project.
+    ///     Results representing cache hits (with <see cref="ResultType"/> == <see cref="CacheResultType.CacheHit"/>)
+    ///     contain information about what <see cref="Execution.BuildResult"/> MSBuild should use for the queried project.
+    ///     It is assumed that all cache hits result in a successful <see cref="Execution.BuildResult"/>.
     /// </summary>
     public class CacheResult
     {
diff --git a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs
index a25232b1eaa..22d98780b2b 100644
--- a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs
@@ -4,7 +4,6 @@
 #nullable enable
 using System.Collections.Generic;
 using System.Linq;
-using Microsoft.Build.Execution;
 using Microsoft.Build.Graph;
 using Microsoft.Build.Shared;
 
