diff --git a/src/Tasks/ManifestUtil/ManifestReader.cs b/src/Tasks/ManifestUtil/ManifestReader.cs
index 829bfec6961..a593a21610a 100644
--- a/src/Tasks/ManifestUtil/ManifestReader.cs
+++ b/src/Tasks/ManifestUtil/ManifestReader.cs
@@ -54,11 +54,7 @@ private static XmlDocument GetXmlDocument(string path)
             using (Stream s = File.Open(path, FileMode.Open, FileAccess.Read, FileShare.Read))
             {
                 byte[] buffer = new byte[2];
-#if NET
-                s.ReadExactly(buffer, 0, 2);
-#else
-                ReadExist(s, buffer, 0, 2);
-#endif
+                ReadExactly(s, buffer, 0, 2);
                 s.Position = 0;
                 var document = new XmlDocument();
                 var xrSettings = new XmlReaderSettings { DtdProcessing = DtdProcessing.Ignore };
@@ -104,20 +100,6 @@ private static Manifest ReadEmbeddedManifest(string path)
             return manifest;
         }
 
-        private static void ReadExist(Stream stream, byte[] buffer, int offset, int count)
-        {
-            while (count > 0)
-            {
-                int read = stream.Read(buffer, offset, count);
-                if (read <= 0)
-                {
-                    throw new EndOfStreamException();
-                }
-                offset += read;
-                count -= read;
-            }
-        }
-
         /// <summary>
         /// Reads the specified manifest XML and returns an object representation.
         /// </summary>
@@ -156,11 +138,7 @@ public static Manifest ReadManifest(string manifestType, string path, bool prese
             using (Stream s = File.Open(path, FileMode.Open, FileAccess.Read, FileShare.Read))
             {
                 byte[] buffer = new byte[2];
-#if NET
-                s.ReadExactly(buffer, 0, 2);
-#else
-                ReadExist(s, buffer, 0, 2);
-#endif
+                ReadExactly(s, buffer, 0, 2);
                 s.Position = 0;
                 // if first two bytes are "MZ" then we're looking at an .exe or a .dll not a .manifest
                 if ((buffer[0] == 0x4D) && (buffer[1] == 0x5A))
@@ -268,6 +246,27 @@ private static Manifest Deserialize(Stream s)
                 return m;
             }
         }
+
+#if NET
+        private static void ReadExactly(Stream stream, byte[] buffer, int offset, int count)
+        {
+            stream.ReadExactly(buffer, offset, count);
+        }
+#else
+        private static void ReadExactly(Stream stream, byte[] buffer, int offset, int count)
+        {
+            while (count > 0)
+            {
+                int read = stream.Read(buffer, offset, count);
+                if (read <= 0)
+                {
+                    throw new EndOfStreamException();
+                }
+                offset += read;
+                count -= read;
+            }
+        }
+#endif
     }
 
     internal class ComInfo
