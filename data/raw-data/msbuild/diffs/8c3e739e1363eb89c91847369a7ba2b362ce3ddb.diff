diff --git a/src/Tasks.UnitTests/AddToWin32Manifest_Tests.cs b/src/Tasks.UnitTests/AddToWin32Manifest_Tests.cs
index 1f0df1610be..97472e1fe36 100644
--- a/src/Tasks.UnitTests/AddToWin32Manifest_Tests.cs
+++ b/src/Tasks.UnitTests/AddToWin32Manifest_Tests.cs
@@ -8,6 +8,7 @@
 using System.Xml;
 using Microsoft.Build.Evaluation;
 using Microsoft.Build.UnitTests;
+using Microsoft.Build.Utilities;
 using Shouldly;
 using Xunit;
 using Xunit.Abstractions;
@@ -45,7 +46,7 @@ public void ManifestPopulationCheck(string manifestName, bool expectedResult)
                 task.SupportedArchitectures = "amd64 arm64";
                 if (!string.IsNullOrEmpty(manifestName))
                 {
-                    task.ApplicationManifestPath = Path.Combine(TestAssetsRootPath, manifestName);
+                    task.ApplicationManifest = new TaskItem(Path.Combine(TestAssetsRootPath, manifestName));
                 }
 
                 var result = task.Execute();
diff --git a/src/Tasks/AddToWin32Manifest.cs b/src/Tasks/AddToWin32Manifest.cs
index c17be0d6729..366cbae065d 100644
--- a/src/Tasks/AddToWin32Manifest.cs
+++ b/src/Tasks/AddToWin32Manifest.cs
@@ -51,9 +51,9 @@ private enum ManifestValidationResult
         }
 
         /// <summary>
-        /// Path to the existing application manifest.
+        /// Existing application manifest.
         /// </summary>
-        public string? ApplicationManifestPath { get; set; }
+        public ITaskItem? ApplicationManifest { get; set; }
 
         /// <summary>
         /// Intermediate output directory.
@@ -87,15 +87,15 @@ public string ManifestPath
 
         private Stream? GetManifestStream()
         {
-            if (!string.IsNullOrEmpty(ApplicationManifestPath))
+            if (ApplicationManifest != null)
             {
-                if (!File.Exists(ApplicationManifestPath))
+                if (string.IsNullOrEmpty(ApplicationManifest.ItemSpec) || !File.Exists(ApplicationManifest?.ItemSpec))
                 {
-                    Log.LogErrorFromResources("AddToWin32Manifest.SpecifiedApplicationManifestCanNotBeFound", ApplicationManifestPath);
+                    Log.LogErrorFromResources("AddToWin32Manifest.SpecifiedApplicationManifestCanNotBeFound", ApplicationManifest?.ItemSpec);
                     return null;
                 }
 
-                return File.OpenRead(ApplicationManifestPath);
+                return File.OpenRead(ApplicationManifest!.ItemSpec);
             }
 
             string? defaultManifestPath = ToolLocationHelper.GetPathToDotNetFrameworkFile(DefaultManifestName, TargetDotNetFrameworkVersion.Version46);
@@ -129,7 +129,7 @@ public override bool Execute()
                 {
                     case ManifestValidationResult.Success:
                         AddSupportedArchitecturesElement(document, xmlNamespaceManager);
-                        SaveManifest(document, Path.GetFileName(ApplicationManifestPath) ?? DefaultManifestName);
+                        SaveManifest(document, Path.GetFileName(ApplicationManifest?.ItemSpec) ?? DefaultManifestName);
                         return !Log.HasLoggedErrors;
                     case ManifestValidationResult.SupportedArchitecturesExists:
                         return !Log.HasLoggedErrors;
@@ -172,7 +172,7 @@ private void SaveManifest(XmlDocument document, string manifestName)
 
         private ManifestValidationResult ValidateManifest(XmlDocument document, XmlNamespaceManager xmlNamespaceManager)
         {
-            if (string.IsNullOrEmpty(ApplicationManifestPath))
+            if (ApplicationManifest == null)
             {
                 return ManifestValidationResult.Success;
             }
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index ec05577e2f2..0e2ae950f5e 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -4167,7 +4167,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <Target
       Name="_SetPreferNativeArm64Win32ManifestProperties"
-      Condition=" '$(PreferNativeArm64)'=='true' "
+      Condition=" '$(PreferNativeArm64)'=='true' and '$(NoWin32Manifest)'!='true'"
       DependsOnTargets="SetWin32ManifestProperties">
 
     <PropertyGroup>
@@ -4175,11 +4175,11 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     </PropertyGroup>
 
     <AddToWin32Manifest
-        ApplicationManifestPath="$(Win32Manifest)"
-        OutputDirectory="$(IntermediateOutputPath)"
-        SupportedArchitectures="$(_SupportedArchitectures)">
+      ApplicationManifest="$(Win32Manifest)"
+      OutputDirectory="$(IntermediateOutputPath)"
+      SupportedArchitectures="$(_SupportedArchitectures)">
 
-        <Output TaskParameter="ManifestPath" PropertyName="_Win32Manifest"/>
+      <Output TaskParameter="ManifestPath" PropertyName="_Win32Manifest"/>
     </AddToWin32Manifest>
 
     <PropertyGroup>
@@ -4333,6 +4333,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
     </GenerateApplicationManifest>
 
+    <AddToWin32Manifest
+        Condition="'$(PreferNativeArm64)'=='true'"
+        ApplicationManifest="@(ApplicationManifest)"
+        OutputDirectory="$(IntermediateOutputPath)"
+        SupportedArchitectures="$(_SupportedArchitectures)">
+    </AddToWin32Manifest>
+
     <PropertyGroup>
       <_DeploymentCopyApplicationManifest>true</_DeploymentCopyApplicationManifest>
     </PropertyGroup>
