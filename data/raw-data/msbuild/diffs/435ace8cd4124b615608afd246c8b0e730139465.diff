diff --git a/ref/Microsoft.Build/net/Microsoft.Build.cs b/ref/Microsoft.Build/net/Microsoft.Build.cs
index 4efc2c2a9d4..f47b211ceb4 100644
--- a/ref/Microsoft.Build/net/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/net/Microsoft.Build.cs
@@ -615,7 +615,6 @@ public Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDicti
         public string GetPropertyValue(string name) { throw null; }
         public static string GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty property) { throw null; }
         public void MarkDirty() { }
-        public void PrintTargets(System.IO.TextWriter writer) { }
         public void ReevaluateIfNecessary() { }
         public void ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) { }
         public bool RemoveGlobalProperty(string name) { throw null; }
diff --git a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
index 287be1139eb..bf01a486b2f 100644
--- a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
@@ -615,7 +615,6 @@ public Project(System.Xml.XmlReader xmlReader, System.Collections.Generic.IDicti
         public string GetPropertyValue(string name) { throw null; }
         public static string GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty property) { throw null; }
         public void MarkDirty() { }
-        public void PrintTargets(System.IO.TextWriter writer) { }
         public void ReevaluateIfNecessary() { }
         public void ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) { }
         public bool RemoveGlobalProperty(string name) { throw null; }
diff --git a/src/Build/Definition/Project.cs b/src/Build/Definition/Project.cs
index 1f904f39007..c6e666f0c6d 100644
--- a/src/Build/Definition/Project.cs
+++ b/src/Build/Definition/Project.cs
@@ -1417,11 +1417,6 @@ public void SaveLogicalProject(TextWriter writer)
             implementation.SaveLogicalProject(writer);
         }
 
-        public void PrintTargets(TextWriter writer)
-        {
-            writer.WriteLine(string.Join(Environment.NewLine, Targets.Keys));
-        }
-
         /// <summary>
         /// Starts a build using this project, building the default targets.
         /// Returns true on success, false on failure.
