diff --git a/src/Build/BackEnd/BuildManager/BuildParameters.cs b/src/Build/BackEnd/BuildManager/BuildParameters.cs
index 8d7a8268648..19e0b198e59 100644
--- a/src/Build/BackEnd/BuildManager/BuildParameters.cs
+++ b/src/Build/BackEnd/BuildManager/BuildParameters.cs
@@ -207,6 +207,8 @@ public class BuildParameters : ITranslatable
 
         private bool _question;
 
+        private bool _test;
+
         /// <summary>
         /// The settings used to load the project under build
         /// </summary>
@@ -306,6 +308,7 @@ internal BuildParameters(BuildParameters other, bool resetEnvironment = false)
             DiscardBuildResults = other.DiscardBuildResults;
             LowPriority = other.LowPriority;
             Question = other.Question;
+            Test = other.Test;
             ProjectCacheDescriptor = other.ProjectCacheDescriptor;
         }
 
@@ -820,6 +823,15 @@ public bool Question
             set => _question = value;
         }
 
+        /// <summary>
+        /// Gets or sets a value that will error when the build process fails an incremental check.
+        /// </summary>
+        public bool Test
+        {
+            get => _test;
+            set => _test = value;
+        }
+
         /// <summary>
         /// Gets or sets the project cache description to use for all <see cref="BuildSubmission"/> or <see cref="GraphBuildSubmission"/>
         /// in addition to any potential project caches described in each project.
@@ -884,6 +896,7 @@ void ITranslatable.Translate(ITranslator translator)
             translator.TranslateEnum(ref _projectLoadSettings, (int)_projectLoadSettings);
             translator.Translate(ref _interactive);
             translator.Translate(ref _question);
+            translator.Translate(ref _test);
             translator.TranslateEnum(ref _projectIsolationMode, (int)_projectIsolationMode);
 
             // ProjectRootElementCache is not transmitted.
diff --git a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
index d151bc71199..64bbb299871 100644
--- a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
+++ b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
@@ -108,6 +108,20 @@ public void NoAutoResponseSwitchIdentificationTests(string noautoresponse)
             duplicateSwitchErrorMessage.ShouldBeNull();
         }
 
+        [Theory]
+        [InlineData("test")]
+        [InlineData("TEST")]
+        [InlineData("Test")]
+        public void TestSwitchIdentificationTests(string test)
+        {
+            CommandLineSwitches.ParameterlessSwitch parameterlessSwitch;
+            string duplicateSwitchErrorMessage;
+
+            CommandLineSwitches.IsParameterlessSwitch(test, out parameterlessSwitch, out duplicateSwitchErrorMessage).ShouldBeTrue();
+            parameterlessSwitch.ShouldBe(CommandLineSwitches.ParameterlessSwitch.Test);
+            duplicateSwitchErrorMessage.ShouldBeNull();
+        }
+
         [Theory]
         [InlineData("noconsolelogger")]
         [InlineData("NOCONSOLELOGGER")]
@@ -1127,6 +1141,7 @@ public void InvalidToolsVersionErrors()
                                         graphBuildOptions: null,
                                         lowPriority: false,
                                         question: false,
+                                        test: false,
                                         inputResultsCaches: null,
                                         outputResultsCache: null,
                                         saveProjectResult: false,
diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index d5d2b08a104..a5ef5f1b431 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -47,6 +47,7 @@ internal enum ParameterlessSwitch
             FileLogger8,
             FileLogger9,
             DistributedFileLogger,
+            Test,
 #if DEBUG
             WaitForDebugger,
 #endif
@@ -214,6 +215,7 @@ internal ParameterizedSwitchInfo(
             new ParameterlessSwitchInfo(  new string[] { "filelogger8", "fl8" },                     ParameterlessSwitch.FileLogger8,           null),
             new ParameterlessSwitchInfo(  new string[] { "filelogger9", "fl9" },                     ParameterlessSwitch.FileLogger9,           null),
             new ParameterlessSwitchInfo(  new string[] { "distributedfilelogger", "dfl" },           ParameterlessSwitch.DistributedFileLogger, null),
+            new ParameterlessSwitchInfo(  new string[] { "test" },                                   ParameterlessSwitch.Test,                  null),
 #if DEBUG
             new ParameterlessSwitchInfo(  new string[] { "waitfordebugger", "wfd" },                 ParameterlessSwitch.WaitForDebugger,       null),
 #endif
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index d57971461d4..787e9b44de8 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -709,6 +709,7 @@ public static ExitType Execute(
                 string[] inputResultsCaches = null;
                 string outputResultsCache = null;
                 bool question = false;
+                bool test = false;
                 string[] getProperty = Array.Empty<string>();
                 string[] getItem = Array.Empty<string>();
                 string[] getTargetResult = Array.Empty<string>();
@@ -749,6 +750,7 @@ public static ExitType Execute(
                                             ref outputResultsCache,
                                             ref lowPriority,
                                             ref question,
+                                            ref test,
                                             ref getProperty,
                                             ref getItem,
                                             ref getTargetResult,
@@ -842,6 +844,7 @@ public static ExitType Execute(
                                     graphBuildOptions,
                                     lowPriority,
                                     question,
+                                    test,
                                     inputResultsCaches,
                                     outputResultsCache,
                                     saveProjectResult: outputPropertiesItemsOrTargetResults,
@@ -1228,6 +1231,7 @@ internal static bool BuildProject(
             GraphBuildOptions graphBuildOptions,
             bool lowPriority,
             bool question,
+            bool test,
             string[] inputResultsCaches,
             string outputResultsCache,
             bool saveProjectResult,
@@ -1423,6 +1427,7 @@ internal static bool BuildProject(
                     parameters.InputResultsCacheFiles = inputResultsCaches;
                     parameters.OutputResultsCacheFile = outputResultsCache;
                     parameters.Question = question;
+                    parameters.Test = test;
 
                     // Propagate the profiler flag into the project load settings so the evaluator
                     // can pick it up
@@ -1508,6 +1513,11 @@ internal static bool BuildProject(
                                     flags |= BuildRequestDataFlags.ProvideProjectStateAfterBuild;
                                 }
 
+                                if (test)
+                                {
+                                    targets = targets.Append(MSBuildConstants.TestTargetName).ToArray();
+                                }
+
                                 if (graphBuildOptions != null)
                                 {
                                     graphBuildRequest = new GraphBuildRequestData(new[] { new ProjectGraphEntryPoint(projectFile, globalProperties) }, targets, null, flags, graphBuildOptions);
@@ -2385,6 +2395,7 @@ private static bool ProcessCommandLineSwitches(
             ref string outputResultsCache,
             ref bool lowPriority,
             ref bool question,
+            ref bool test,
             ref string[] getProperty,
             ref string[] getItem,
             ref string[] getTargetResult,
@@ -2510,6 +2521,7 @@ private static bool ProcessCommandLineSwitches(
                                                            ref outputResultsCache,
                                                            ref lowPriority,
                                                            ref question,
+                                                           ref test,
                                                            ref getProperty,
                                                            ref getItem,
                                                            ref getTargetResult,
@@ -2589,6 +2601,8 @@ private static bool ProcessCommandLineSwitches(
 
                     question = commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.Question);
 
+                    test = commandLineSwitches.IsParameterlessSwitchSet(CommandLineSwitches.ParameterlessSwitch.Test);
+
                     inputResultsCaches = ProcessInputResultsCaches(commandLineSwitches);
 
                     outputResultsCache = ProcessOutputResultsCache(commandLineSwitches);
diff --git a/src/Shared/Constants.cs b/src/Shared/Constants.cs
index 0e596c6cf56..77030e3e0c0 100644
--- a/src/Shared/Constants.cs
+++ b/src/Shared/Constants.cs
@@ -57,6 +57,12 @@ internal static class MSBuildConstants
         /// The name of the target to run when a user specifies the /restore command-line argument.
         /// </summary>
         internal const string RestoreTargetName = "Restore";
+
+        /// <summary>
+        /// The name of the target to run when a user specifies the /test command-line argument.
+        /// </summary>
+        internal const string TestTargetName = "MSBuildRunTests";
+
         /// <summary>
         /// The most current Visual Studio Version known to this version of MSBuild.
         /// </summary>
