diff --git a/documentation/wiki/ResolveAssemblyReference.md b/documentation/wiki/ResolveAssemblyReference.md
index 10041d58494..27241f5dbd5 100644
--- a/documentation/wiki/ResolveAssemblyReference.md
+++ b/documentation/wiki/ResolveAssemblyReference.md
@@ -162,6 +162,6 @@ By default, there are ten locations RAR will search (four if using the .NET SDK)
 
 ## There was a conflict
 
-A common situation is MSBuild gives a warning about different versions of the same assembly being used by different references. The solution often involves adding a binding redirect to the app.config file. 
+A common situation is MSBuild gives a warning about different versions of the same assembly being used by different references. The solution often involves adding a binding redirect to the app.config file.
 
 A useful way to investigate these conflicts is to search in MSBuild Structured Log Viewer for "There was a conflict". It will show you detailed information about which references needed which versions of the assembly in question.
diff --git a/src/Shared/FileSystem/IFileSystem.cs b/src/Shared/FileSystem/IFileSystem.cs
index 3b08f7ff451..52d37af1d08 100644
--- a/src/Shared/FileSystem/IFileSystem.cs
+++ b/src/Shared/FileSystem/IFileSystem.cs
@@ -16,7 +16,7 @@ namespace Microsoft.Build.Shared.FileSystem
      * Any new code should depend on MSBuildFileSystemBase instead of IFileSystem, if possible.
      *
      * MSBuild uses IFileSystem internally and adapts MSBuildFileSystemBase instances received from the outside to IFileSystem.
-     * Ideally there should be only one, public interface. However, such an interface would need to be put into the 
+     * Ideally there should be only one, public interface. However, such an interface would need to be put into the
      * Microsoft.Build.Framework assembly, but that assembly cannot take new types because it breaks some old version of Nuget.exe.
      * IFileSystem cannot be deleted for the same reason.
      */
diff --git a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
index beec4a1d226..0a520b9f82b 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/Miscellaneous.cs
@@ -3306,7 +3306,7 @@ public void ParentAssemblyResolvedFromAForGac()
             Assert.Single(parentReferenceFolders);
             Assert.Equal(reference2.ResolvedSearchPath, parentReferenceFolders[0]);
         }
-        
+
         /// <summary>
         /// Generate a fake reference which has been resolved from the gac. We will use it to verify the creation of the exclusion list.
         /// </summary>
@@ -3652,7 +3652,7 @@ public void ConflictBetweenCopyLocalDependenciesRegress444809UnResolvedPrimaryRe
         ///   References - D, version 1
         ///
         /// Both D1 and D2 are CopyLocal. This is a warning because D1 is a lower version
-        /// than both D2 so that can't unify. These means that eventually when 
+        /// than both D2 so that can't unify. These means that eventually when
         /// they're copied to the output directory they'll conflict.
         /// </summary>
         [Fact]
@@ -5982,7 +5982,7 @@ public void RedistListNoAssembliesinRedistList()
         [Fact]
         public void RedistListGenerateBlackListGoodListsSubsetIsSubsetOfRedist()
         {
-            string redistFile = CreateGenericRedistList(); 
+            string redistFile = CreateGenericRedistList();
             string goodSubsetFile = FileUtilities.GetTemporaryFile();
             try
             {
diff --git a/src/Tasks.UnitTests/AssemblyDependency/Perf.cs b/src/Tasks.UnitTests/AssemblyDependency/Perf.cs
index 36e646d5526..e5eddbe032a 100644
--- a/src/Tasks.UnitTests/AssemblyDependency/Perf.cs
+++ b/src/Tasks.UnitTests/AssemblyDependency/Perf.cs
@@ -77,7 +77,7 @@ public void DependeeDirectoryIsProbedForDependency()
                 bool succeeded = Execute(t);
 
                 Assert.True(succeeded);
-                
+
                 uniqueFileExists[s_dependsOnNuGet_NWinMdPath].ShouldBe(1);
                 uniqueFileExists[s_dependsOnNuGet_NDllPath].ShouldBe(1);
                 uniqueFileExists[s_dependsOnNuGet_NExePath].ShouldBe(1);
@@ -109,7 +109,7 @@ public void DependeeDirectoryShouldNotBeProbedForDependencyWhenDependencyResolve
                         new Dictionary<string, string>
                         {
                             {"ExternallyResolved", "true"}
-                        }) 
+                        })
                 };
 
                 ResolveAssemblyReference t = new ResolveAssemblyReference();
diff --git a/src/Tasks/AssemblyDependency/Reference.cs b/src/Tasks/AssemblyDependency/Reference.cs
index 242e6a95380..db5d30bda9d 100644
--- a/src/Tasks/AssemblyDependency/Reference.cs
+++ b/src/Tasks/AssemblyDependency/Reference.cs
@@ -113,7 +113,7 @@ sealed internal class Reference
         private bool _isManagedWinMDFile;
 
         /// <summary>
-        /// The imageruntime version for this reference. 
+        /// The imageruntime version for this reference.
         /// </summary>
         private string _imageRuntimeVersion;
 
@@ -358,7 +358,7 @@ internal bool ResolvedFromGac
 
         /// <summary>
         /// Determines if a given reference or its parent primary references have specific version metadata set to true.
-        /// If anyParentHasMetadata is set to true then we will return true if any parent primary reference has the specific version metadata set to true, 
+        /// If anyParentHasMetadata is set to true then we will return true if any parent primary reference has the specific version metadata set to true,
         /// if the value is false we will return true ONLY if all parent primary references have the metadata set to true.
         /// </summary>
         internal bool CheckForSpecificVersionMetadataOnParentsReference(bool anyParentHasMetadata)
@@ -373,7 +373,7 @@ internal bool CheckForSpecificVersionMetadataOnParentsReference(bool anyParentHa
             }
             else
             {
-                // Go through all of the primary items which lead to this dependency, if they all have specificVersion set to true then 
+                // Go through all of the primary items which lead to this dependency, if they all have specificVersion set to true then
                 // hasSpecificVersionMetadata will be true. If any item has the metadata set to false or not set then the value will be false.
                 foreach (ITaskItem item in GetSourceItems())
                 {
@@ -589,7 +589,7 @@ internal string FullPathWithoutExtension
         internal string AssemblyFolderKey { get; set; } = String.Empty;
 
         /// <summary>
-        /// Whether this assembly came from the project. If 'false' then this reference was deduced 
+        /// Whether this assembly came from the project. If 'false' then this reference was deduced
         /// through the reference resolution process.
         /// </summary>
         /// <value>'true' if this reference is a primary assembly.</value>
@@ -629,7 +629,7 @@ internal ITaskItem PrimarySourceItem
 
         /// <summary>
         /// If 'true' then the path that this item points to is known to be a bad image.
-        /// This item shouldn't be passed to compilers and so forth. 
+        /// This item shouldn't be passed to compilers and so forth.
         /// </summary>
         /// <value>'true' if this reference points to a bad image.</value>
         internal bool IsBadImage { get; private set; } = false;
@@ -721,7 +721,7 @@ internal HashSet<AssemblyRemapping> RemappedAssemblyNames()
         }
 
         /// <summary>
-        /// Add a new version number for a version of this reference 
+        /// Add a new version number for a version of this reference
         /// </summary>
         internal void AddPreUnificationVersion(String referencePath, Version version, UnificationReason reason)
         {
@@ -819,7 +819,7 @@ internal void AddAssembliesConsideredAndRejected(List<ResolutionSearchLocation>
         }
 
         /// <summary>
-        /// Returns a collection of strings. Each string is the full path to an assembly that was 
+        /// Returns a collection of strings. Each string is the full path to an assembly that was
         /// considered for resolution but then rejected because it wasn't a complete match.
         /// </summary>
         internal List<ResolutionSearchLocation> AssembliesConsideredAndRejected { get; private set; } = new List<ResolutionSearchLocation>();
@@ -835,7 +835,7 @@ internal void AddAssembliesConsideredAndRejected(List<ResolutionSearchLocation>
         internal FrameworkName FrameworkNameAttribute { get; set; }
 
         /// <summary>
-        /// Indicates that the reference is primary and has ExternallyResolved=true metadata to denote that 
+        /// Indicates that the reference is primary and has ExternallyResolved=true metadata to denote that
         /// it was resolved by an external system (commonly from nuget). Such a system has already provided a
         /// resolved closure as primary references and therefore we can skip the expensive closure walk.
         /// </summary>
@@ -846,7 +846,7 @@ internal void AddAssembliesConsideredAndRejected(List<ResolutionSearchLocation>
         ///
         /// For example, if 'sourceReference' is MyAssembly.dll then a dependent assembly file
         /// might be en\MyAssembly.resources.dll
-        /// 
+        ///
         /// Assembly references do not have their own dependencies, therefore they are
         /// </summary>
         /// <param name="sourceReference">The source reference that this reference will be dependent on</param>
@@ -871,7 +871,7 @@ internal void MakeDependentAssemblyReference(Reference sourceReference)
         }
 
         /// <summary>
-        /// Make this reference a primary assembly reference. 
+        /// Make this reference a primary assembly reference.
         /// This is a refrence that is an assembly and is primary.
         /// </summary>
         /// <param name="sourceItem">The source item.</param>
@@ -1144,7 +1144,7 @@ public override string ToString()
         }
 
         /// <summary>
-        /// There are a number of properties which are set when we generate exclusion lists and it is useful to have this information on the references so that 
+        /// There are a number of properties which are set when we generate exclusion lists and it is useful to have this information on the references so that
         /// the correct reasons can be logged for these references being in the black list.
         /// </summary>
         internal class ExclusionListProperties
diff --git a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
index 85a5643f5c9..706749d4953 100644
--- a/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
+++ b/src/Tasks/AssemblyDependency/ResolveAssemblyReference.cs
@@ -1061,7 +1061,7 @@ List<Exception> generalResolutionExceptions
             {
                 /*
                 PERF NOTE: The Silent flag turns off logging completely from the task side. This means
-                we avoid the String.Formats that would normally occur even if the verbosity was set to 
+                we avoid the String.Formats that would normally occur even if the verbosity was set to
                 quiet at the engine level.
                 */
                 if (!Silent)
@@ -1119,7 +1119,7 @@ quiet at the engine level.
                             string details = string.Empty;
                             if (logWarning)
                             {
-                                // This warning is logged regardless of AutoUnify since it means a conflict existed where the reference	
+                                // This warning is logged regardless of AutoUnify since it means a conflict existed where the reference
                                 // chosen was not the conflict victor in a version comparison. In other words, the victor was older.
                                 Log.LogWarningWithCodeFromResources("ResolveAssemblyReference.FoundConflicts", assemblyName.Name, output);
                             }
@@ -1164,15 +1164,15 @@ quiet at the engine level.
                             {
                                 foreach (AssemblyNameExtension conflictVictim in conflictVictims)
                                 {
-                                    // Make note we only output a conflict suggestion if the reference has at 
-                                    // least one conflict victim - that way we don't suggest redirects to 
+                                    // Make note we only output a conflict suggestion if the reference has at
+                                    // least one conflict victim - that way we don't suggest redirects to
                                     // assemblies that don't exist at runtime. For example, this avoids us suggesting
                                     // a redirect from Foo 1.0.0.0 -> 2.0.0.0 in the following:
                                     //
                                     //      Project -> Foo, 1.0.0.0
                                     //      Project -> Bar -> Foo, 2.0.0.0
                                     //
-                                    // Above, Foo, 1.0.0.0 wins out and is copied to the output directory because 
+                                    // Above, Foo, 1.0.0.0 wins out and is copied to the output directory because
                                     // it is a primary reference.
                                     foundAtLeastOneValidBindingRedirect = true;
 
@@ -2227,7 +2227,7 @@ ReadMachineTypeFromPEHeader readMachineTypeFromPEHeader
                             if (targetingProfile)
                             {
                                 // When targeting a profile we want the redist list to be the full framework redist list, since this is what should be used
-                                // when unifying assemblies ect. 
+                                // when unifying assemblies ect.
                                 AssemblyTableInfo[] fullRedistAssemblyTableInfo = null;
                                 RedistList fullFrameworkRedistList = null;
 
@@ -2403,7 +2403,7 @@ ReadMachineTypeFromPEHeader readMachineTypeFromPEHeader
                             dependencyTable.RemoveReferencesMarkedForExclusion(true /* Remove the reference and do not warn*/, subsetOrProfileName);
                         }
 
-                        // Based on the closure, get a table of ideal remappings needed to 
+                        // Based on the closure, get a table of ideal remappings needed to
                         // produce zero conflicts.
                         dependencyTable.ResolveConflicts
                         (
@@ -2464,8 +2464,8 @@ out _copyLocalFiles
                     // If we're not finding dependencies, then don't suggest redirects (they're only about dependencies).
                     if (FindDependencies)
                     {
-                        // Build the table of suggested redirects. If we're auto-unifying, we want to output all the 
-                        // assemblies that we auto-unified so that GenerateBindingRedirects can consume them, 
+                        // Build the table of suggested redirects. If we're auto-unifying, we want to output all the
+                        // assemblies that we auto-unified so that GenerateBindingRedirects can consume them,
                         // not just the required ones for build to succeed
                         List<DependentAssembly> remappings = AutoUnify ? autoUnifiedRemappedAssemblies : idealAssemblyRemappings;
                         List<AssemblyNameReference> remappedReferences = AutoUnify ? autoUnifiedRemappedAssemblyReferences : idealAssemblyRemappingsIdentities;
@@ -2559,7 +2559,7 @@ out _copyLocalFiles
                                 {
                                     // Its pretty hard to get here, you need an assembly that contains a valid reference
                                     // to a dependent assembly that, in turn, throws a FileLoadException during GetAssemblyName.
-                                    // Still it happened once, with an older version of the CLR. 
+                                    // Still it happened once, with an older version of the CLR.
 
                                     // ...falling through and relying on the targetAssemblyName==null behavior below...
                                 }
@@ -2636,7 +2636,7 @@ private AssemblyNameExtension[] GetDependencies(Reference resolvedReference, Fil
             {
                 try
                 {
-                    // in case of P2P that have not build the reference can be resolved but file does not exist on disk. 
+                    // in case of P2P that have not build the reference can be resolved but file does not exist on disk.
                     if (fileExists(resolvedReference.FullPath))
                     {
                         FrameworkNameVersioning frameworkName;
@@ -2910,7 +2910,7 @@ private bool ShouldUseSubsetExclusionList()
                 return false;
             }
 
-            // No subset names were passed in to search for in the targetframework directories and no installed subset tables were provided, we have nothing to use to 
+            // No subset names were passed in to search for in the targetframework directories and no installed subset tables were provided, we have nothing to use to
             // generate the exclusion list with, so do not continue.
             if (_targetFrameworkSubsets.Length == 0 && _installedAssemblySubsetTables.Length == 0)
             {
diff --git a/src/Tasks/Microsoft.CSharp.CrossTargeting.targets b/src/Tasks/Microsoft.CSharp.CrossTargeting.targets
index 62d284b87e2..8407654f98d 100644
--- a/src/Tasks/Microsoft.CSharp.CrossTargeting.targets
+++ b/src/Tasks/Microsoft.CSharp.CrossTargeting.targets
@@ -9,7 +9,6 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <!-- Import design time targets for Roslyn Project System. These are only available if Visual Studio is installed. -->
@@ -22,4 +21,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <Import Project="Microsoft.Common.CrossTargeting.targets" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.CSharp.CurrentVersion.targets b/src/Tasks/Microsoft.CSharp.CurrentVersion.targets
index 6e68b0dd542..772d1bbcf8e 100644
--- a/src/Tasks/Microsoft.CSharp.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.CSharp.CurrentVersion.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.CSharp.CurrentVersion.targets
 
@@ -14,7 +14,6 @@ this file.
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
     <PropertyGroup>
@@ -370,4 +369,4 @@ using System.Reflection%3b
     <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.CSharp.targets\ImportAfter\*" Condition="'$(ImportByWildcardAfterMicrosoftCSharpTargets)' == 'true' and exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.CSharp.targets\ImportAfter')"/>
     <Import Project="$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.CSharp.targets\ImportAfter\*" Condition="'$(ImportUserLocationsByWildcardAfterMicrosoftCSharpTargets)' == 'true' and exists('$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.CSharp.targets\ImportAfter')"/>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.CSharp.targets b/src/Tasks/Microsoft.CSharp.targets
index 9aceb4e3813..eda6bea88ab 100644
--- a/src/Tasks/Microsoft.CSharp.targets
+++ b/src/Tasks/Microsoft.CSharp.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.CSharp.targets
 
@@ -14,26 +14,25 @@ this file.
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
-   <Choose>
-      <When Condition="'$(IsCrossTargetingBuild)' == 'true'">
-         <PropertyGroup>
-            <CSharpTargetsPath>$(MSBuildToolsPath)\Microsoft.CSharp.CrossTargeting.targets</CSharpTargetsPath>
-          </PropertyGroup>
-      </When>
-      <Otherwise>
-         <PropertyGroup>
-            <CSharpTargetsPath>$(MSBuildToolsPath)\Microsoft.CSharp.CurrentVersion.targets</CSharpTargetsPath>
-         </PropertyGroup>
-      </Otherwise>
-   </Choose>
+  <Choose>
+    <When Condition="'$(IsCrossTargetingBuild)' == 'true'">
+      <PropertyGroup>
+        <CSharpTargetsPath>$(MSBuildToolsPath)\Microsoft.CSharp.CrossTargeting.targets</CSharpTargetsPath>
+      </PropertyGroup>
+    </When>
+    <Otherwise>
+      <PropertyGroup>
+        <CSharpTargetsPath>$(MSBuildToolsPath)\Microsoft.CSharp.CurrentVersion.targets</CSharpTargetsPath>
+      </PropertyGroup>
+    </Otherwise>
+  </Choose>
 
-   <Import Project="$(MSBuildToolsPath)\Microsoft.Managed.Before.targets" />
+  <Import Project="$(MSBuildToolsPath)\Microsoft.Managed.Before.targets" />
 
-   <Import Project="$(CSharpTargetsPath)" />
+  <Import Project="$(CSharpTargetsPath)" />
 
-   <Import Project="$(MSBuildToolsPath)\Microsoft.Managed.After.targets" />
+  <Import Project="$(MSBuildToolsPath)\Microsoft.Managed.After.targets" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Common.CrossTargeting.targets b/src/Tasks/Microsoft.Common.CrossTargeting.targets
index 13d74133003..5096427a963 100644
--- a/src/Tasks/Microsoft.Common.CrossTargeting.targets
+++ b/src/Tasks/Microsoft.Common.CrossTargeting.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.Common.CrossTargeting.targets
 
@@ -9,7 +9,6 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project DefaultTargets="Build">
 
   <PropertyGroup>
@@ -221,4 +220,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <Import Project="$(DirectoryBuildTargetsPath)" Condition="'$(ImportDirectoryBuildTargets)' == 'true' and exists('$(DirectoryBuildTargetsPath)')"/>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index 7b51494d4ed..7819000499b 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.Common.CurrentVersion.targets
 
@@ -13,7 +13,6 @@ Visual Basic, and Visual C#.
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project DefaultTargets="Build" TreatAsLocalProperty="OutDir">
 
   <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="'$(MicrosoftCommonPropsHasBeenImported)' != 'true' and Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
@@ -6671,4 +6670,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ImportAfter\*" Condition="'$(ImportByWildcardAfterMicrosoftCommonTargets)' == 'true' and exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ImportAfter')"/>
   <Import Project="$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ImportAfter\*" Condition="'$(ImportUserLocationsByWildcardAfterMicrosoftCommonTargets)' == 'true' and exists('$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ImportAfter')"/>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Common.overridetasks b/src/Tasks/Microsoft.Common.overridetasks
index c63abe19d52..6032f7ccf9a 100644
--- a/src/Tasks/Microsoft.Common.overridetasks
+++ b/src/Tasks/Microsoft.Common.overridetasks
@@ -1,39 +1,40 @@
-﻿<Project>
+<Project>
 
-    <!-- This file lists UsingTask elements that we wish to override
-         any other UsingTask elements -->
+  <!-- This file lists UsingTask elements that we wish to override
+        any other UsingTask elements -->
 
-    <!-- NOTE: Listing a <UsingTask> tag in a *.tasks file like this one rather than in a project or targets file
-               can give a significant performance advantage in a large build, because every time a <UsingTask> tag
-               is encountered, it will cause the task to be rediscovered next time the task is used. -->
-    <!-- NOTE: Using the fully qualified class name in a <UsingTask> tag is faster than using a partially qualified name. -->
+  <!-- NOTE: Listing a <UsingTask> tag in a *.tasks file like this one rather than in a project or targets file
+             can give a significant performance advantage in a large build, because every time a <UsingTask> tag
+             is encountered, it will cause the task to be rediscovered next time the task is used. -->
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveComReference"  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5'" />
+  <!-- NOTE: Using the fully qualified class name in a <UsingTask> tag is faster than using a partially qualified name. -->
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"     AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveComReference"  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5'" />
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"     AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"     AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"   AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"     AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
 
-    <UsingTask TaskName="ResolveComReference"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0'" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"   AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
 
-    <UsingTask TaskName="GenerateResource"                           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
-    <UsingTask TaskName="GenerateResource"                           AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
+  <UsingTask TaskName="ResolveComReference"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0'" />
 
-    <UsingTask TaskName="RegisterAssembly"                           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
-    <UsingTask TaskName="RegisterAssembly"                           AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
+  <UsingTask TaskName="GenerateResource"                           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
+  <UsingTask TaskName="GenerateResource"                           AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
 
-    <UsingTask TaskName="UnregisterAssembly"                         AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
-    <UsingTask TaskName="UnregisterAssembly"                         AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
+  <UsingTask TaskName="RegisterAssembly"                           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
+  <UsingTask TaskName="RegisterAssembly"                           AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
 
-    <UsingTask TaskName="ReadLinesFromFile"                          AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' or '$(MSBuildToolsVersion)' == '2.0'" />
-    <UsingTask TaskName="FindUnderPath"                              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' or '$(MSBuildToolsVersion)' == '2.0'" />
-    <UsingTask TaskName="ConvertToAbsolutePath"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' or '$(MSBuildToolsVersion)' == '2.0'" />
-    <UsingTask TaskName="MSBuild"                                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' or '$(MSBuildToolsVersion)' == '2.0'" />
-    <UsingTask TaskName="ResolveAssemblyReference"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '4.0'" />
+  <UsingTask TaskName="UnregisterAssembly"                         AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(DisableOutOfProcTaskHost)' != '' or !$([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`)))" />
+  <UsingTask TaskName="UnregisterAssembly"                         AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '2.0' and '$(DisableOutOfProcTaskHost)' == '' and $([MSBuild]::DoesTaskHostExist(`CLR2`,`CurrentArchitecture`))" Runtime="CLR2" />
 
-</Project>
+  <UsingTask TaskName="ReadLinesFromFile"                          AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' or '$(MSBuildToolsVersion)' == '2.0'" />
+  <UsingTask TaskName="FindUnderPath"                              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' or '$(MSBuildToolsVersion)' == '2.0'" />
+  <UsingTask TaskName="ConvertToAbsolutePath"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' or '$(MSBuildToolsVersion)' == '2.0'" />
+  <UsingTask TaskName="MSBuild"                                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '3.5' or '$(MSBuildToolsVersion)' == '2.0'" />
+  <UsingTask TaskName="ResolveAssemblyReference"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildToolsVersion)' == '4.0'" />
+
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Common.props b/src/Tasks/Microsoft.Common.props
index 4385c405f61..a14fea277c2 100644
--- a/src/Tasks/Microsoft.Common.props
+++ b/src/Tasks/Microsoft.Common.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.Common.props
 
@@ -9,7 +9,6 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <PropertyGroup>
@@ -21,9 +20,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   </PropertyGroup>
 
   <!--
-        Determine the path to the directory build props file if the user did not disable $(ImportDirectoryBuildProps) and
-        they did not already specify an absolute path to use via $(DirectoryBuildPropsPath)
-    -->
+      Determine the path to the directory build props file if the user did not disable $(ImportDirectoryBuildProps) and
+      they did not already specify an absolute path to use via $(DirectoryBuildPropsPath)
+  -->
   <PropertyGroup Condition="'$(ImportDirectoryBuildProps)' == 'true' and '$(DirectoryBuildPropsPath)' == ''">
     <_DirectoryBuildPropsFile Condition="'$(_DirectoryBuildPropsFile)' == ''">Directory.Build.props</_DirectoryBuildPropsFile>
     <_DirectoryBuildPropsBasePath Condition="'$(_DirectoryBuildPropsBasePath)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '$(_DirectoryBuildPropsFile)'))</_DirectoryBuildPropsBasePath>
@@ -33,17 +32,17 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   <Import Project="$(DirectoryBuildPropsPath)" Condition="'$(ImportDirectoryBuildProps)' == 'true' and exists('$(DirectoryBuildPropsPath)')"/>
 
   <!--
-        Prepare to import project extensions which usually come from packages.  Package management systems will create a file at:
-          $(MSBuildProjectExtensionsPath)\$(MSBuildProjectFile).<SomethingUnique>.props
+      Prepare to import project extensions which usually come from packages.  Package management systems will create a file at:
+        $(MSBuildProjectExtensionsPath)\$(MSBuildProjectFile).<SomethingUnique>.props
 
-        Each package management system should use a unique moniker to avoid collisions.  It is a wild-card import so the package
-        management system can write out multiple files but the order of the import is alphabetic because MSBuild sorts the list.
-    -->
+      Each package management system should use a unique moniker to avoid collisions.  It is a wild-card import so the package
+      management system can write out multiple files but the order of the import is alphabetic because MSBuild sorts the list.
+  -->
   <PropertyGroup>
     <!--
-            The declaration of $(BaseIntermediateOutputPath) had to be moved up from Microsoft.Common.CurrentVersion.targets
-            in order for the $(MSBuildProjectExtensionsPath) to use it as a default.
-        -->
+        The declaration of $(BaseIntermediateOutputPath) had to be moved up from Microsoft.Common.CurrentVersion.targets
+        in order for the $(MSBuildProjectExtensionsPath) to use it as a default.
+    -->
     <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)'=='' ">obj\</BaseIntermediateOutputPath>
     <BaseIntermediateOutputPath Condition="!HasTrailingSlash('$(BaseIntermediateOutputPath)')">$(BaseIntermediateOutputPath)\</BaseIntermediateOutputPath>
     <_InitialBaseIntermediateOutputPath>$(BaseIntermediateOutputPath)</_InitialBaseIntermediateOutputPath>
@@ -53,7 +52,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
         Import paths that are relative default to be relative to the importing file.  However, since MSBuildExtensionsPath
         defaults to BaseIntermediateOutputPath we expect it to be relative to the project directory.  So if the path is relative
         it needs to be made absolute based on the project directory.
-      -->
+    -->
     <MSBuildProjectExtensionsPath Condition="'$([System.IO.Path]::IsPathRooted($(MSBuildProjectExtensionsPath)))' == 'false'">$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(MSBuildProjectExtensionsPath)'))</MSBuildProjectExtensionsPath>
     <MSBuildProjectExtensionsPath Condition="!HasTrailingSlash('$(MSBuildProjectExtensionsPath)')">$(MSBuildProjectExtensionsPath)\</MSBuildProjectExtensionsPath>
     <ImportProjectExtensionProps Condition="'$(ImportProjectExtensionProps)' == ''">true</ImportProjectExtensionProps>
@@ -63,12 +62,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   <Import Project="$(MSBuildProjectExtensionsPath)$(MSBuildProjectFile).*.props" Condition="'$(ImportProjectExtensionProps)' == 'true' and exists('$(MSBuildProjectExtensionsPath)')" />
 
   <!--
-          Wildcard imports come from $(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ directory.
-          This is very similar to the same extension point used in Microsoft.Common.targets, which is located in
-          the $(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ directory.
-          Unfortunately, there is already a file named "Microsoft.Common.props" in this directory,
-          so we have to have a slightly different directory name to hold extensions.
-    -->
+      Wildcard imports come from $(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ directory.
+      This is very similar to the same extension point used in Microsoft.Common.targets, which is located in
+      the $(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ directory.
+
+      Unfortunately, there is already a file named "Microsoft.Common.props" in this directory,
+      so we have to have a slightly different directory name to hold extensions.
+  -->
   <Import Project="$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ImportBefore\*" Condition="'$(ImportUserLocationsByWildcardBeforeMicrosoftCommonProps)' == 'true' and exists('$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ImportBefore')"/>
   <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ImportBefore\*" Condition="'$(ImportByWildcardBeforeMicrosoftCommonProps)' == 'true' and exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ImportBefore')"/>
 
@@ -80,8 +80,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   <Import Project="$(CustomBeforeMicrosoftCommonProps)" Condition="'$(CustomBeforeMicrosoftCommonProps)' != '' and Exists('$(CustomBeforeMicrosoftCommonProps)')" />
 
   <!-- This is used to determine whether Microsoft.Common.targets needs to import
-         Microsoft.Common.props itself, or whether it has been imported previously,
-         e.g. by the project itself. -->
+      Microsoft.Common.props itself, or whether it has been imported previously,
+      e.g. by the project itself. -->
   <PropertyGroup>
     <MicrosoftCommonPropsHasBeenImported>true</MicrosoftCommonPropsHasBeenImported>
   </PropertyGroup>
@@ -104,8 +104,8 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ImportAfter\*" Condition="'$(ImportByWildcardAfterMicrosoftCommonProps)' == 'true' and exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ImportAfter')"/>
 
   <!--
-        Import NuGet.props file.
-    -->
+      Import NuGet.props file.
+  -->
   <PropertyGroup>
     <MSBuildUseVisualStudioDirectoryLayout Condition="'$(MSBuildUseVisualStudioDirectoryLayout)'==''">$([MSBuild]::IsRunningFromVisualStudio())</MSBuildUseVisualStudioDirectoryLayout>
     <NuGetPropsFile Condition="'$(NuGetPropsFile)'=='' and '$(MSBuildUseVisualStudioDirectoryLayout)'=='true'">$([MSBuild]::GetToolsDirectory32())\..\..\..\Common7\IDE\CommonExtensions\Microsoft\NuGet\NuGet.props</NuGetPropsFile>
@@ -130,4 +130,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <DisableLogTaskParameterItemMetadata_WriteLinesToFile_Lines>true</DisableLogTaskParameterItemMetadata_WriteLinesToFile_Lines>
   </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Common.targets b/src/Tasks/Microsoft.Common.targets
index a2e63d0c48d..e4f83cd7640 100644
--- a/src/Tasks/Microsoft.Common.targets
+++ b/src/Tasks/Microsoft.Common.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.Common.targets
 
@@ -13,12 +13,12 @@ Visual Basic, and Visual C#.
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project DefaultTargets="Build">
 
   <PropertyGroup>
     <CommonTargetsPath>$(MSBuildToolsPath)\Microsoft.Common.CurrentVersion.targets</CommonTargetsPath>
   </PropertyGroup>
+
   <Import Project="$(CommonTargetsPath)" />
 
   <!--
@@ -27,7 +27,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
         Each package management system should use a unique moniker to avoid collisions.  It is a wild-card import so the package
         management system can write out multiple files but the order of the import is alphabetic because MSBuild sorts the list.
-    -->
+  -->
   <PropertyGroup>
     <ImportProjectExtensionTargets Condition="'$(ImportProjectExtensionTargets)' == ''">true</ImportProjectExtensionTargets>
   </PropertyGroup>
@@ -39,9 +39,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   </PropertyGroup>
 
   <!--
-        Determine the path to the directory build targets file if the user did not disable $(ImportDirectoryBuildTargets) and
-        they did not already specify an absolute path to use via $(DirectoryBuildTargetsPath)
-    -->
+      Determine the path to the directory build targets file if the user did not disable $(ImportDirectoryBuildTargets) and
+      they did not already specify an absolute path to use via $(DirectoryBuildTargetsPath)
+  -->
   <PropertyGroup Condition="'$(ImportDirectoryBuildTargets)' == 'true' and '$(DirectoryBuildTargetsPath)' == ''">
     <_DirectoryBuildTargetsFile Condition="'$(_DirectoryBuildTargetsFile)' == ''">Directory.Build.targets</_DirectoryBuildTargetsFile>
     <_DirectoryBuildTargetsBasePath Condition="'$(_DirectoryBuildTargetsBasePath)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '$(_DirectoryBuildTargetsFile)'))</_DirectoryBuildTargetsBasePath>
@@ -50,4 +50,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <Import Project="$(DirectoryBuildTargetsPath)" Condition="'$(ImportDirectoryBuildTargets)' == 'true' and exists('$(DirectoryBuildTargetsPath)')"/>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Common.tasks b/src/Tasks/Microsoft.Common.tasks
index 3be5690920c..8bcaa32b507 100644
--- a/src/Tasks/Microsoft.Common.tasks
+++ b/src/Tasks/Microsoft.Common.tasks
@@ -1,108 +1,109 @@
-﻿<Project>
+<Project>
 
-    <!-- This file lists all the tasks that ship by default with MSBuild -->
+  <!-- This file lists all the tasks that ship by default with MSBuild -->
 
-    <!-- NOTE: Listing a <UsingTask> tag in a *.tasks file like this one rather than in a project or targets file
-               can give a significant performance advantage in a large build, because every time a <UsingTask> tag
-               is encountered, it will cause the task to be rediscovered next time the task is used. -->
-    <!-- NOTE: Using the fully qualified class name in a <UsingTask> tag is faster than using a partially qualified name. -->
+  <!-- NOTE: Listing a <UsingTask> tag in a *.tasks file like this one rather than in a project or targets file
+             can give a significant performance advantage in a large build, because every time a <UsingTask> tag
+             is encountered, it will cause the task to be rediscovered next time the task is used. -->
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.AL"                                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.AspNetCompiler"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.AssignCulture"                         AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.AssignLinkMetadata"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.AssignProjectConfiguration"            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.AssignTargetPath"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.CallTarget"                            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.CombinePath"                           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ConvertToAbsolutePath"                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties"  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.CombineXmlElements"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Copy"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.CreateCSharpManifestResourceName"      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.CreateItem"                            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.CreateProperty"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName" AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Delete"                                AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.DownloadFile"                          AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Error"                                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ErrorFromResources"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Exec"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.FindAppConfigFile"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.FindInList"                            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.FindInvalidProjectReferences"          AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <!-- NOTE: Using the fully qualified class name in a <UsingTask> tag is faster than using a partially qualified name. -->
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.FindUnderPath"                         AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.FormatUrl"                             AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.FormatVersion"                         AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateApplicationManifest"           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateBindingRedirects"              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateBootstrapper"                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateDeploymentManifest"            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateLauncher"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.AL"                                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.AspNetCompiler"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.AssignCulture"                         AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.AssignLinkMetadata"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.AssignProjectConfiguration"            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.AssignTargetPath"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.CallTarget"                            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.CombinePath"                           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ConvertToAbsolutePath"                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.CombineTargetFrameworkInfoProperties"  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.CombineXmlElements"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Copy"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.CreateCSharpManifestResourceName"      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.CreateItem"                            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.CreateProperty"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName" AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Delete"                                AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.DownloadFile"                          AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Error"                                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ErrorFromResources"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Exec"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.FindAppConfigFile"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.FindInList"                            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.FindInvalidProjectReferences"          AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(DisableOutOfProcTaskHost)' != ''" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR4" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="NET" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' == 'Core'" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"                      AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR2" Condition="'$(DisableOutOfProcTaskHost)' == ''  and '$(MSBuildRuntimeType)' != 'Core'" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.FindUnderPath"                         AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.FormatUrl"                             AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.FormatVersion"                         AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateApplicationManifest"           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateBindingRedirects"              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateBootstrapper"                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateDeploymentManifest"            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateLauncher"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.GenerateTrustInfo"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GetAssemblyIdentity"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GetCompatiblePlatform"                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GetFileHash"                           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GetFrameworkPath"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GetFrameworkSdkPath"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GetReferenceAssemblyPaths"             AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Hash"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.LC"                                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.MakeDir"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Message"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Move"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.MSBuild"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ReadLinesFromFile"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(DisableOutOfProcTaskHost)' != ''" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR4" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="NET" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' == 'Core'" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateResource"                      AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR2" Condition="'$(DisableOutOfProcTaskHost)' == ''  and '$(MSBuildRuntimeType)' != 'Core'" />
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(DisableOutOfProcTaskHost)' != ''" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR4" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"                      AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR2" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GenerateTrustInfo"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GetAssemblyIdentity"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GetCompatiblePlatform"                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GetFileHash"                           AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GetFrameworkPath"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GetFrameworkSdkPath"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GetReferenceAssemblyPaths"             AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Hash"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.LC"                                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.MakeDir"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Message"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Move"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.MSBuild"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ReadLinesFromFile"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.RemoveDir"                             AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.RemoveDuplicates"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.RequiresFramework35SP1Assembly"        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveAssemblyReference"              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet"            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveSDKReference"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveSDKReference"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GetInstalledSDKLocations"              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.GetSDKReferenceFiles"                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveComReference"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveKeySource"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveManifestFiles"                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveNativeReference"                AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput"        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.SGen"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.SignFile"                              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Telemetry"                             AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Touch"                                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(DisableOutOfProcTaskHost)' != ''" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR4" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.RegisterAssembly"                      AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR2" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(DisableOutOfProcTaskHost)' != ''" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR4" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"                    AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR2" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.RemoveDir"                             AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.RemoveDuplicates"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.RequiresFramework35SP1Assembly"        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveAssemblyReference"              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveCodeAnalysisRuleSet"            AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveSDKReference"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveSDKReference"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GetInstalledSDKLocations"              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.GetSDKReferenceFiles"                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveComReference"                   AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveKeySource"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveManifestFiles"                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveNativeReference"                AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput"        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.SGen"                                  AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.SignFile"                              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Telemetry"                             AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Touch"                                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
 
-    <UsingTask TaskName="Microsoft.Build.Tasks.UpdateManifest"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Unzip"                                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.VerifyFileHash"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.Warning"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.WriteCodeFragment"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.WriteLinesToFile"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.XmlPeek"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.XmlPoke"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.XslTransformation"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.WinMDExp"                              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-    <UsingTask TaskName="Microsoft.Build.Tasks.ZipDirectory"                          AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(DisableOutOfProcTaskHost)' != ''" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"                    AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR4" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.UnregisterAssembly"                    AssemblyName="Microsoft.Build.Tasks.v3.5, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Runtime="CLR2" Condition="'$(DisableOutOfProcTaskHost)' == '' and '$(MSBuildRuntimeType)' != 'Core'" />
 
-    <!-- Roslyn tasks are now in an assembly owned and shipped by Roslyn -->
-    <UsingTask TaskName="Microsoft.CodeAnalysis.BuildTasks.Csc"                       AssemblyFile="$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll" />
-    <UsingTask TaskName="Microsoft.CodeAnalysis.BuildTasks.Vbc"                       AssemblyFile="$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll" />
-    <UsingTask TaskName="Microsoft.CodeAnalysis.BuildTasks.CopyRefAssembly"           AssemblyFile="$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.UpdateManifest"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Unzip"                                 AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.VerifyFileHash"                        AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.Warning"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.WriteCodeFragment"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.WriteLinesToFile"                      AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.XmlPeek"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.XmlPoke"                               AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.XslTransformation"                     AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.WinMDExp"                              AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <UsingTask TaskName="Microsoft.Build.Tasks.ZipDirectory"                          AssemblyName="Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
 
-</Project>
+  <!-- Roslyn tasks are now in an assembly owned and shipped by Roslyn -->
+  <UsingTask TaskName="Microsoft.CodeAnalysis.BuildTasks.Csc"                       AssemblyFile="$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll" />
+  <UsingTask TaskName="Microsoft.CodeAnalysis.BuildTasks.Vbc"                       AssemblyFile="$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll" />
+  <UsingTask TaskName="Microsoft.CodeAnalysis.BuildTasks.CopyRefAssembly"           AssemblyFile="$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll" />
+
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Data.Entity.targets b/src/Tasks/Microsoft.Data.Entity.targets
index 80d43afd2be..6ebf8cdb6ea 100644
--- a/src/Tasks/Microsoft.Data.Entity.targets
+++ b/src/Tasks/Microsoft.Data.Entity.targets
@@ -1,15 +1,15 @@
-﻿<Project>
+<Project>
 
-   <!--
-        With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
-        outside of the .NET Framework.  As a result of this, there were several targets files, of which
-        this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
+  <!--
+      With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
+      outside of the .NET Framework.  As a result of this, there were several targets files, of which
+      this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
 
-        Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
-        consumers of them are not broken, but since the targets files themselves are still part of .NET,
-        the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
-   -->
+      Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
+      consumers of them are not broken, but since the targets files themselves are still part of .NET,
+      the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
+  -->
 
-   <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.Data.Entity.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.Data.Entity.targets')" />
+  <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.Data.Entity.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.Data.Entity.targets')" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Managed.After.targets b/src/Tasks/Microsoft.Managed.After.targets
index a5dfd1da0ff..a10bf7c0784 100644
--- a/src/Tasks/Microsoft.Managed.After.targets
+++ b/src/Tasks/Microsoft.Managed.After.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
           created a backup copy.  Incorrect changes to this file will make it
@@ -10,32 +10,31 @@ It is imported after the common targets have been imported.
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
-   <!-- Define crosstargeting for static graph, so it can identify inner and outer build graph nodes -->
-   <PropertyGroup>
-      <InnerBuildProperty>TargetFramework</InnerBuildProperty>
-      <InnerBuildPropertyValues>TargetFrameworks</InnerBuildPropertyValues>
-   </PropertyGroup>
+  <!-- Define crosstargeting for static graph, so it can identify inner and outer build graph nodes -->
+  <PropertyGroup>
+    <InnerBuildProperty>TargetFramework</InnerBuildProperty>
+    <InnerBuildPropertyValues>TargetFrameworks</InnerBuildPropertyValues>
+  </PropertyGroup>
 
-   <PropertyGroup Condition="'$(IsGraphBuild)' == 'true'">
-      <AddTransitiveProjectReferencesInStaticGraph Condition="'$(AddTransitiveProjectReferencesInStaticGraph)' == '' and '$(UsingMicrosoftNETSdk)' == 'true' and '$(DisableTransitiveProjectReferences)' != 'true'">true</AddTransitiveProjectReferencesInStaticGraph>
-   </PropertyGroup>
+  <PropertyGroup Condition="'$(IsGraphBuild)' == 'true'">
+    <AddTransitiveProjectReferencesInStaticGraph Condition="'$(AddTransitiveProjectReferencesInStaticGraph)' == '' and '$(UsingMicrosoftNETSdk)' == 'true' and '$(DisableTransitiveProjectReferences)' != 'true'">true</AddTransitiveProjectReferencesInStaticGraph>
+  </PropertyGroup>
 
-   <ItemGroup Condition="'$(IsGraphBuild)' == 'true'">
-      <!-- WPF projects generate a project with a random name at build time and then build the project via the IBuildEngine callbacks.
-           Detect WPF, and exclude the generated project from static graph isolation constraint checking.
-           Escape the item to avoid eager evaluation of the wildcards.
-      -->
-      <GraphIsolationExemptReference
-         Condition="'$(UseWPF)' == 'true' or '@(Page)' != '' or '@(ApplicationDefinition)' != '' or '@(XamlPage)' != '' or '@(XamlAppDef)' != ''"
-         Include="$([MSBuild]::Escape('$(MSBuildProjectDirectory)\$(MSBuildProjectName)*_wpftmp$(MSBuildProjectExtension)'))" />
-   </ItemGroup>
+  <ItemGroup Condition="'$(IsGraphBuild)' == 'true'">
+    <!-- WPF projects generate a project with a random name at build time and then build the project via the IBuildEngine callbacks.
+        Detect WPF, and exclude the generated project from static graph isolation constraint checking.
+        Escape the item to avoid eager evaluation of the wildcards.
+    -->
+    <GraphIsolationExemptReference
+        Condition="'$(UseWPF)' == 'true' or '@(Page)' != '' or '@(ApplicationDefinition)' != '' or '@(XamlPage)' != '' or '@(XamlAppDef)' != ''"
+        Include="$([MSBuild]::Escape('$(MSBuildProjectDirectory)\$(MSBuildProjectName)*_wpftmp$(MSBuildProjectExtension)'))" />
+  </ItemGroup>
 
   <!--
-    Properties for extension of ProjectReferenceTargets.
-    Append any current value which may have been provided in a Directory.Build.props since the intent was likely to append, not prepend.
+      Properties for extension of ProjectReferenceTargets.
+      Append any current value which may have been provided in a Directory.Build.props since the intent was likely to append, not prepend.
   -->
   <PropertyGroup Condition="'$(IsGraphBuild)' == 'true'">
     <!-- Empty case is for outer builds which do not import the target files that set BuildProjectReferences -->
@@ -69,4 +68,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <ProjectReferenceTargets Include="GetCopyToPublishDirectoryItems" Targets="$(ProjectReferenceTargetsForGetCopyToPublishDirectoryItems)" Condition=" '$(ProjectReferenceTargetsForGetCopyToPublishDirectoryItems)' != '' " />
   </ItemGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Managed.Before.targets b/src/Tasks/Microsoft.Managed.Before.targets
index d8bde6bb9a2..01f2f5ee3de 100644
--- a/src/Tasks/Microsoft.Managed.Before.targets
+++ b/src/Tasks/Microsoft.Managed.Before.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
           created a backup copy.  Incorrect changes to this file will make it
@@ -10,16 +10,15 @@ It is imported before the common targets have been imported.
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
-   <!--
-        We are doing a cross-targeting build if there is a non-empty list of target frameworks specified
-        and there is no current target framework being built individually. In that case, a multitargeting
-        project file like Microsoft.<language>.CrossTargeting.targets gets imported.
-   -->
-   <PropertyGroup Condition="'$(TargetFrameworks)' != '' and '$(TargetFramework)' == ''">
-      <IsCrossTargetingBuild>true</IsCrossTargetingBuild>
-   </PropertyGroup>
+  <!--
+      We are doing a cross-targeting build if there is a non-empty list of target frameworks specified
+      and there is no current target framework being built individually. In that case, a multitargeting
+      project file like Microsoft.<language>.CrossTargeting.targets gets imported.
+  -->
+  <PropertyGroup Condition="'$(TargetFrameworks)' != '' and '$(TargetFramework)' == ''">
+    <IsCrossTargetingBuild>true</IsCrossTargetingBuild>
+  </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Managed.targets b/src/Tasks/Microsoft.Managed.targets
index 25d1e7528c2..49696addc04 100644
--- a/src/Tasks/Microsoft.Managed.targets
+++ b/src/Tasks/Microsoft.Managed.targets
@@ -1,16 +1,15 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 This file is deprecated and left here for back compat reasons. It is replaced by Microsoft.Managed.<Before|After>.targets
 
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <Import Project="$(MSBuildToolsPath)\Microsoft.Managed.Before.targets" />
 
-   <!-- Item copied from Microsoft.Common.Currentversion.targets   -->
+  <!-- Item copied from Microsoft.Common.Currentversion.targets   -->
   <PropertyGroup>
     <_RecursiveTargetForContentCopying>GetCopyToOutputDirectoryItems</_RecursiveTargetForContentCopying>
     <_RecursiveTargetForContentCopying Condition=" '$(MSBuildCopyContentTransitively)' == 'false' ">_GetCopyToOutputDirectoryItemsFromThisProject</_RecursiveTargetForContentCopying>
@@ -18,4 +17,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <Import Project="$(MSBuildToolsPath)\Microsoft.Managed.After.targets" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.NET.props b/src/Tasks/Microsoft.NET.props
index 41f25145c5d..b983647d821 100644
--- a/src/Tasks/Microsoft.NET.props
+++ b/src/Tasks/Microsoft.NET.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.NET.props
 
@@ -12,7 +12,6 @@ these two files are used to encapsulate the multi-targeting and framework specif
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <!--
@@ -21,7 +20,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     Get the paths for the .NET Framework and .NET Core tools and sdk tools directories.
     This does not need to be a target since all of the values are availiable at project evaluation time.
     ============================================================
-    -->
+  -->
   <PropertyGroup>
     <TargetFrameworkSDKToolsDirectory Condition=" '$(TargetFrameworkSDKToolsDirectory)' == '' ">$(SDK40ToolsPath)</TargetFrameworkSDKToolsDirectory>
   </PropertyGroup>
@@ -31,7 +30,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
                                         SetHighEntropyVA
     Set HighEntropyVA according to the TargetFramework
     ============================================================
-    -->
+  -->
 
   <PropertyGroup Condition="('$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(TargetingClr2Framework)' != 'true' and '$(TargetFrameworkVersion)' != 'v4.0') or '$(TargetFrameworkIdentifier)' == '.NETCoreApp' or '$(TargetFrameworkIdentifier)' == '.NETStandard'">
     <HighEntropyVA Condition="'$(HighEntropyVA)' == ''">true</HighEntropyVA>
@@ -41,4 +40,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <HighEntropyVA Condition="'$(HighEntropyVA)' == ''">false</HighEntropyVA>
   </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.NETFramework.CurrentVersion.props b/src/Tasks/Microsoft.NETFramework.CurrentVersion.props
index f08677fe9b8..0f03f04dfef 100644
--- a/src/Tasks/Microsoft.NETFramework.CurrentVersion.props
+++ b/src/Tasks/Microsoft.NETFramework.CurrentVersion.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.NETFramework.CurrentVersion.props
 
@@ -12,7 +12,6 @@ these two files are used to encapsulate the multi-targeting and framework specif
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <PropertyGroup>
@@ -40,9 +39,9 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(TargetFrameworkVersion)' == 'v4.0' and '$(FrameworkPathOverride)' == ''">
     <!-- The FrameworkPathOverride property is required for the IDE Visual Basic compiler to initialize.
-             This location contains reference assemblies for mscorlib.dll and other key VB assemblies.
-             This property is required during project evaluation, since the IDE compilers need to initialize before
-             any targets have had a chance to run, hence the use of a function to retrieve the location.
+        This location contains reference assemblies for mscorlib.dll and other key VB assemblies.
+        This property is required during project evaluation, since the IDE compilers need to initialize before
+        any targets have had a chance to run, hence the use of a function to retrieve the location.
      -->
     <!-- Hard code for the most common TargetFrameworkVersion of v4.0 with no profile: this enables us to avoid calling the GetReferenceAssemblyPaths task -->
     <_FullFrameworkReferenceAssemblyPaths Condition="Exists('$(MSBuildProgramFiles32)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0\RedistList\FrameworkList.xml')">$(MSBuildProgramFiles32)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0</_FullFrameworkReferenceAssemblyPaths>
@@ -60,7 +59,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <MSBuildFrameworkToolsRoot Condition="'$(MSBuildFrameworkToolsRoot)' == '' and '$(MSBuildRuntimeType)' != 'Core'">$(Registry:HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework@InstallRoot)</MSBuildFrameworkToolsRoot>
     <_DeploymentSignClickOnceManifests Condition="'$(TargetFrameworkVersion)' == 'v2.0' or '$(TargetFrameworkVersion)' == 'v3.0' or '$(SignManifests)' == 'true'">true</_DeploymentSignClickOnceManifests>
     <!-- Assembly names added to the AdditionalExplicitAssemblyReferences property will be added as references to the resolve assembly reference call by default this is done because when upgrading from
-         a project targeting 2.0 to 3.5 the system.core reference is not added, therefore we need to add it automatically -->
+        a project targeting 2.0 to 3.5 the system.core reference is not added, therefore we need to add it automatically -->
     <AddAdditionalExplicitAssemblyReferences Condition="'$(AddAdditionalExplicitAssemblyReferences)' == ''">true</AddAdditionalExplicitAssemblyReferences>
     <AdditionalExplicitAssemblyReferences Condition="'$(AddAdditionalExplicitAssemblyReferences)' == 'true' and '$(TargetCompactFramework)' != 'true' and ('$(TargetFrameworkVersion)' != 'v2.0' and '$(TargetFrameworkVersion)' != 'v3.0')">System.Core;$(AdditionalExplicitAssemblyReferences)</AdditionalExplicitAssemblyReferences>
   </PropertyGroup>
@@ -71,15 +70,15 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     Get the paths for the .NET Framework tools and sdk tools directories.
     This does not need to be a target since all of the values are availiable at project evaluation time.
     ============================================================
-    -->
+  -->
 
   <PropertyGroup>
     <TargetingClr2Framework Condition="'$(TargetFrameworkVersion)' == 'v2.0' or '$(TargetFrameworkVersion)' == 'v3.0' or '$(TargetFrameworkVersion)' == 'v3.5'">true</TargetingClr2Framework>
     <MSBuildManagedCompilerPath Condition="'$(TargetingClr2Framework)' == 'true'">$(MSBuildFrameworkToolsRoot)\v3.5</MSBuildManagedCompilerPath >
     <TargetFrameworkSDKToolsDirectory Condition="'$(TargetingClr2Framework)' == 'true'">$(SDK35ToolsPath)</TargetFrameworkSDKToolsDirectory>
     <!-- If the sdk path is not 3.5 or lower set it to the 40 sdk tools path. This will allow future target framework versions to use the 4.0 sdk tool set
-             When a new windows SDK revs they will inplace update the location pointed to by this property. When a new sdk is release this target will have to be
-             revised along with another toolsversion. -->
+        When a new windows SDK revs they will inplace update the location pointed to by this property. When a new sdk is release this target will have to be
+        revised along with another toolsversion. -->
     <TargetedRuntimeVersion Condition="'$(TargetedRuntimeVersion)' == '' and ('$(TargetingClr2Framework)' == 'true')">v2.0.50727</TargetedRuntimeVersion>
     <TargetedRuntimeVersion Condition="'$(TargetedRuntimeVersion)' == ''">v$(MSBuildRuntimeVersion)</TargetedRuntimeVersion>
   </PropertyGroup>
@@ -119,10 +118,10 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   </PropertyGroup>
 
   <!--Import props that are common for both full framework and core.
-    And before the ImportAfter\* , so users can override it-->
+      And before the ImportAfter\* , so users can override it-->
   <Import Project="$(MSBuildToolsPath)\Microsoft.NET.props" />
 
   <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.NETFramework.props\ImportAfter\*" Condition="'$(ImportByWildcardAfterMicrosoftNetFrameworkProps)' == 'true' and exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.NETFramework.props\ImportAfter')"/>
   <Import Project="$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.NETFramework.props\ImportAfter\*" Condition="'$(ImportUserLocationsByWildcardAfterMicrosoftNetFrameworkProps)' == 'true' and exists('$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.NETFramework.props\ImportAfter')"/>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.NETFramework.CurrentVersion.targets b/src/Tasks/Microsoft.NETFramework.CurrentVersion.targets
index 6145e82de80..985f36bfbe9 100644
--- a/src/Tasks/Microsoft.NETFramework.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.NETFramework.CurrentVersion.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.NETFramework.CurrentVersion.targets
 
@@ -12,7 +12,6 @@ these two files are used to encapsulate the multi-targeting and framework specif
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <PropertyGroup>
@@ -30,7 +29,7 @@ Copyright (C) Microsoft Corporation. All rights reserved.
       DependsOnTargets="$(GetFrameworkPathsDependsOn)">
 
     <!-- For backwards compatibility of targets who replaced this target we cannot move these values outside the target even though they
-             now only depend on statically availiable values-->
+        now only depend on statically availiable values-->
 
     <ItemGroup>
       <_TargetFramework40DirectoryItem Include="$(MSBuildFrameworkToolsRoot)v4.0.30319"/>
@@ -134,4 +133,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
   <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.NETFramework.targets\ImportAfter\*" Condition="'$(ImportByWildcardAfterMicrosoftNetFrameworkTargets)' == 'true' and exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.NETFramework.targets\ImportAfter')"/>
   <Import Project="$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.NETFramework.targets\ImportAfter\*" Condition="'$(ImportUserLocationsByWildcardAfterMicrosoftNetFrameworkTargets)' == 'true' and exists('$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.NETFramework.targets\ImportAfter')"/>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.NETFramework.props b/src/Tasks/Microsoft.NETFramework.props
index 805a6081510..a66a0d25e2b 100644
--- a/src/Tasks/Microsoft.NETFramework.props
+++ b/src/Tasks/Microsoft.NETFramework.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.NetFramework.props
 
@@ -12,12 +12,12 @@ these two files are used to encapsulate the multi-targeting and framework specif
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project DefaultTargets="Build">
 
   <PropertyGroup>
     <NetFrameworkPropsPath>$(MSBuildToolsPath)\Microsoft.NETFramework.CurrentVersion.props</NetFrameworkPropsPath>
   </PropertyGroup>
+
   <Import Project="$(NetFrameworkPropsPath)" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.NETFramework.targets b/src/Tasks/Microsoft.NETFramework.targets
index 4d17decc15c..d0ff2425a82 100644
--- a/src/Tasks/Microsoft.NETFramework.targets
+++ b/src/Tasks/Microsoft.NETFramework.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.NetFramework.targets
 
@@ -12,12 +12,12 @@ these two files are used to encapsulate the multi-targeting and framework specif
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project DefaultTargets="Build">
 
     <PropertyGroup>
       <NetFrameworkTargetsPath>$(MSBuildToolsPath)\Microsoft.NETFramework.CurrentVersion.targets</NetFrameworkTargetsPath>
     </PropertyGroup>
-   <Import Project="$(NetFrameworkTargetsPath)" />
 
-</Project>
+  <Import Project="$(NetFrameworkTargetsPath)" />
+
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.ServiceModel.targets b/src/Tasks/Microsoft.ServiceModel.targets
index 41d4b1f3d59..f65d5c6e3f9 100644
--- a/src/Tasks/Microsoft.ServiceModel.targets
+++ b/src/Tasks/Microsoft.ServiceModel.targets
@@ -1,15 +1,15 @@
-﻿<Project>
+<Project>
 
-   <!--
-        With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
-        outside of the .NET Framework.  As a result of this, there were several targets files, of which
-        this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
+  <!--
+      With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
+      outside of the .NET Framework.  As a result of this, there were several targets files, of which
+      this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
 
-        Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
-        consumers of them are not broken, but since the targets files themselves are still part of .NET,
-        the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
-   -->
+      Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
+      consumers of them are not broken, but since the targets files themselves are still part of .NET,
+      the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
+  -->
 
-   <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.ServiceModel.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.ServiceModel.targets')" />
+  <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.ServiceModel.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.ServiceModel.targets')" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualBasic.CrossTargeting.targets b/src/Tasks/Microsoft.VisualBasic.CrossTargeting.targets
index d397da71c95..ceb30bc1a02 100644
--- a/src/Tasks/Microsoft.VisualBasic.CrossTargeting.targets
+++ b/src/Tasks/Microsoft.VisualBasic.CrossTargeting.targets
@@ -9,7 +9,6 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <!-- Import design time targets for Roslyn Project System. These are only available if Visual Studio is installed. -->
@@ -22,4 +21,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <Import Project="Microsoft.Common.CrossTargeting.targets" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualBasic.CurrentVersion.targets b/src/Tasks/Microsoft.VisualBasic.CurrentVersion.targets
index daebf98475b..1d83c4a6327 100644
--- a/src/Tasks/Microsoft.VisualBasic.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.VisualBasic.CurrentVersion.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.VisualBasic.CurrentVersion.targets
 
@@ -14,7 +14,6 @@ this file.
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
     <PropertyGroup>
@@ -375,4 +374,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.VisualBasic.targets\ImportAfter\*" Condition="'$(ImportByWildcardAfterMicrosoftVisualBasicTargets)' == 'true' and exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.VisualBasic.targets\ImportAfter')"/>
     <Import Project="$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.VisualBasic.targets\ImportAfter\*" Condition="'$(ImportUserLocationsByWildcardAfterMicrosoftVisualBasicTargets)' == 'true' and exists('$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.VisualBasic.targets\ImportAfter')"/>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualBasic.targets b/src/Tasks/Microsoft.VisualBasic.targets
index 3616981103c..aa7a6f812fd 100644
--- a/src/Tasks/Microsoft.VisualBasic.targets
+++ b/src/Tasks/Microsoft.VisualBasic.targets
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="utf-8"?>
 <!--
 ***********************************************************************************************
 Microsoft.VisualBasic.targets
@@ -15,7 +14,6 @@ this file.
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <Choose>
@@ -37,4 +35,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
 
   <Import Project="$(MSBuildToolsPath)\Microsoft.Managed.After.targets" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualStudioVersion.v11.Common.props b/src/Tasks/Microsoft.VisualStudioVersion.v11.Common.props
index 858e86ecee9..9ef50e92c14 100644
--- a/src/Tasks/Microsoft.VisualStudioVersion.v11.Common.props
+++ b/src/Tasks/Microsoft.VisualStudioVersion.v11.Common.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.VisualStudio.v11.Common.props
 
@@ -9,12 +9,11 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+<Project ToolsVersion="4.0">
 
   <PropertyGroup>
     <VisualStudioVersion>11.0</VisualStudioVersion>
     <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
   </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualStudioVersion.v12.Common.props b/src/Tasks/Microsoft.VisualStudioVersion.v12.Common.props
index 6fb9cfdbfa4..428a5c1d571 100644
--- a/src/Tasks/Microsoft.VisualStudioVersion.v12.Common.props
+++ b/src/Tasks/Microsoft.VisualStudioVersion.v12.Common.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.VisualStudio.v11.Common.props
 
@@ -9,12 +9,11 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+<Project ToolsVersion="4.0">
 
   <PropertyGroup>
     <VisualStudioVersion>12.0</VisualStudioVersion>
     <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
   </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualStudioVersion.v14.Common.props b/src/Tasks/Microsoft.VisualStudioVersion.v14.Common.props
index 1f0a2830339..c2e2af3ad8e 100644
--- a/src/Tasks/Microsoft.VisualStudioVersion.v14.Common.props
+++ b/src/Tasks/Microsoft.VisualStudioVersion.v14.Common.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.VisualStudio.v14.Common.props
 
@@ -9,12 +9,11 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+<Project ToolsVersion="4.0">
 
   <PropertyGroup>
     <VisualStudioVersion>14.0</VisualStudioVersion>
     <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
   </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualStudioVersion.v15.Common.props b/src/Tasks/Microsoft.VisualStudioVersion.v15.Common.props
index 355652bffd0..9d9e0f62d71 100644
--- a/src/Tasks/Microsoft.VisualStudioVersion.v15.Common.props
+++ b/src/Tasks/Microsoft.VisualStudioVersion.v15.Common.props
@@ -9,7 +9,6 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <PropertyGroup>
@@ -17,4 +16,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
   </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualStudioVersion.v16.Common.props b/src/Tasks/Microsoft.VisualStudioVersion.v16.Common.props
index 832c3d55387..1843227e760 100644
--- a/src/Tasks/Microsoft.VisualStudioVersion.v16.Common.props
+++ b/src/Tasks/Microsoft.VisualStudioVersion.v16.Common.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.VisualStudio.v16.Common.props
 
@@ -9,7 +9,6 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <PropertyGroup>
@@ -17,4 +16,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
   </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.VisualStudioVersion.v17.Common.props b/src/Tasks/Microsoft.VisualStudioVersion.v17.Common.props
index 452a3fe9cd4..94031c33888 100644
--- a/src/Tasks/Microsoft.VisualStudioVersion.v17.Common.props
+++ b/src/Tasks/Microsoft.VisualStudioVersion.v17.Common.props
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.VisualStudio.v17.Common.props
 
@@ -9,7 +9,6 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
   <PropertyGroup>
@@ -17,4 +16,4 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     <VSToolsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
   </PropertyGroup>
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.WinFx.targets b/src/Tasks/Microsoft.WinFx.targets
index a2e5e8be195..0c942235926 100644
--- a/src/Tasks/Microsoft.WinFx.targets
+++ b/src/Tasks/Microsoft.WinFx.targets
@@ -1,15 +1,15 @@
-﻿<Project>
+<Project>
 
-   <!--
-        With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
-        outside of the .NET Framework.  As a result of this, there were several targets files, of which
-        this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
+  <!--
+      With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
+      outside of the .NET Framework.  As a result of this, there were several targets files, of which
+      this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
 
-        Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
-        consumers of them are not broken, but since the targets files themselves are still part of .NET,
-        the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
-   -->
+      Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
+      consumers of them are not broken, but since the targets files themselves are still part of .NET,
+      the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
+  -->
 
-   <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.WinFx.targets" Condition="'$(ImportFrameworkWinFXTargets)' != 'false' and Exists('$(MSBuildFrameworkToolsPath)\Microsoft.WinFx.targets')" />
+  <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.WinFx.targets" Condition="'$(ImportFrameworkWinFXTargets)' != 'false' and Exists('$(MSBuildFrameworkToolsPath)\Microsoft.WinFx.targets')" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.WorkflowBuildExtensions.targets b/src/Tasks/Microsoft.WorkflowBuildExtensions.targets
index 64cbed76b63..580e2f75bc2 100644
--- a/src/Tasks/Microsoft.WorkflowBuildExtensions.targets
+++ b/src/Tasks/Microsoft.WorkflowBuildExtensions.targets
@@ -1,4 +1,4 @@
-﻿<!--
+<!--
 ***********************************************************************************************
 Microsoft.WorkflowBuildExtensions.targets
 
@@ -9,31 +9,30 @@ WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and
 Copyright (C) Microsoft Corporation. All rights reserved.
 ***********************************************************************************************
 -->
-
 <Project>
 
-   <!--
-        With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
-        outside of the .NET Framework.  As a result of this, there were several targets files, of which
-        this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
+  <!--
+      With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
+      outside of the .NET Framework.  As a result of this, there were several targets files, of which
+      this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
 
-        Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
-        consumers of them are not broken, but since the targets files themselves are still part of .NET,
-        the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
-   -->
+      Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
+      consumers of them are not broken, but since the targets files themselves are still part of .NET,
+      the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
+  -->
 
-   <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.WorkflowBuildExtensions.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.WorkflowBuildExtensions.targets')" />
+  <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.WorkflowBuildExtensions.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.WorkflowBuildExtensions.targets')" />
 
-   <!--
-         This target in $(MSBuildFrameworkToolsPath)\Microsoft.WorkflowBuildExtensions.targets does bad
-         things to builds inside Visual Studio. Specifically, it generates files *only* when building from
-         within VS, for both real and design-time builds. This leads to all kinds of build problems.
+  <!--
+      This target in $(MSBuildFrameworkToolsPath)\Microsoft.WorkflowBuildExtensions.targets does bad
+      things to builds inside Visual Studio. Specifically, it generates files *only* when building from
+      within VS, for both real and design-time builds. This leads to all kinds of build problems.
 
-         In Dev16 we no longer need these files to exist on disk for Workflow Designer scenarios. We can't
-         modify $(MSBuildFrameworkToolsPath)\Microsoft.WorkflowBuildExtensions.targets because that would
-         break the Workflow Designer for older versions of VS. Instead, we effectively turn it off by
-         overriding it with a no-op implementation here.
-   -->
-   <Target Name="GenerateCompiledExpressionsTempFile" />
+      In Dev16 we no longer need these files to exist on disk for Workflow Designer scenarios. We can't
+      modify $(MSBuildFrameworkToolsPath)\Microsoft.WorkflowBuildExtensions.targets because that would
+      break the Workflow Designer for older versions of VS. Instead, we effectively turn it off by
+      overriding it with a no-op implementation here.
+  -->
+  <Target Name="GenerateCompiledExpressionsTempFile" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Microsoft.Xaml.targets b/src/Tasks/Microsoft.Xaml.targets
index c8a743e39e3..de6672bd427 100644
--- a/src/Tasks/Microsoft.Xaml.targets
+++ b/src/Tasks/Microsoft.Xaml.targets
@@ -1,22 +1,22 @@
-﻿<Project>
+<Project>
 
-   <!--
-        With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
-        outside of the .NET Framework.  As a result of this, there were several targets files, of which
-        this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
+  <!--
+      With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
+      outside of the .NET Framework.  As a result of this, there were several targets files, of which
+      this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
 
-        Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
-        consumers of them are not broken, but since the targets files themselves are still part of .NET,
-        the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
-   -->
+      Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
+      consumers of them are not broken, but since the targets files themselves are still part of .NET,
+      the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
+  -->
 
-   <!-- In the original Microsoft.Xaml.targets this is mapped to MSBuildBinPath, which is no longer
-        the .NET Framework directory and thus will no longer be the right answer. Override it to point
-        to the correct .NET Framework location. -->
-   <PropertyGroup>
-      <XamlBuildTaskPath Condition="'$(XamlBuildTaskPath)' == ''">$(MSBuildToolsPath64)</XamlBuildTaskPath>
-   </PropertyGroup>
+  <!-- In the original Microsoft.Xaml.targets this is mapped to MSBuildBinPath, which is no longer
+      the .NET Framework directory and thus will no longer be the right answer. Override it to point
+      to the correct .NET Framework location. -->
+  <PropertyGroup>
+    <XamlBuildTaskPath Condition="'$(XamlBuildTaskPath)' == ''">$(MSBuildToolsPath64)</XamlBuildTaskPath>
+  </PropertyGroup>
 
-   <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.Xaml.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.Xaml.targets')" />
+  <Import Project="$(MSBuildFrameworkToolsPath)\Microsoft.Xaml.targets" Condition="Exists('$(MSBuildFrameworkToolsPath)\Microsoft.Xaml.targets')" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/ResolveManifestFiles.cs b/src/Tasks/ResolveManifestFiles.cs
index 58640172d76..e04d5d27e05 100644
--- a/src/Tasks/ResolveManifestFiles.cs
+++ b/src/Tasks/ResolveManifestFiles.cs
@@ -288,7 +288,7 @@ private ITaskItem CreateFileItem(ITaskItem item, string group, string targetPath
                 // .NETCore Launcher.exe based deployment: If the file is apphost.exe, we need to set 'TargetPath' metadata
                 // to {assemblyname}.exe so that the file gets published as {assemblyname}.exe and not apphost.exe.
                 //
-                if (LauncherBasedDeployment && 
+                if (LauncherBasedDeployment &&
                     targetPath.Equals(Constants.AppHostExe, StringComparison.InvariantCultureIgnoreCase) &&
                     !String.IsNullOrEmpty(AssemblyName))
                 {
@@ -752,7 +752,7 @@ private bool IsFiltered(ITaskItem item)
             if (item.ItemSpec.EndsWith(".dll") && identity == null && !isDotNetCore)
             {
                 // It is possible that a native dll gets passed in here that was declared as a content file
-                // in a referenced nuget package, which will yield null here. We just need to ignore those 
+                // in a referenced nuget package, which will yield null here. We just need to ignore those
                 // for .NET FX case since those aren't actually references we care about. For .NET Core, native
                 // dll can be passed as a reference so we won't ignore it if isDotNetCore is true.
                 return true;
@@ -877,7 +877,7 @@ public void Add(ITaskItem item)
                     }
                 }
             }
-            
+
             IEnumerator IEnumerable.GetEnumerator()
             {
                 return _dictionary.Values.GetEnumerator();
diff --git a/src/Tasks/Workflow.VisualBasic.targets b/src/Tasks/Workflow.VisualBasic.targets
index b6212e40864..2002517eaf9 100644
--- a/src/Tasks/Workflow.VisualBasic.targets
+++ b/src/Tasks/Workflow.VisualBasic.targets
@@ -1,15 +1,15 @@
-﻿<Project>
+<Project>
 
-   <!--
-        With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
-        outside of the .NET Framework.  As a result of this, there were several targets files, of which
-        this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
+  <!--
+      With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
+      outside of the .NET Framework.  As a result of this, there were several targets files, of which
+      this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
 
-        Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
-        consumers of them are not broken, but since the targets files themselves are still part of .NET,
-        the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
-   -->
+      Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
+      consumers of them are not broken, but since the targets files themselves are still part of .NET,
+      the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
+  -->
 
-   <Import Project="$(MSBuildFrameworkToolsPath)\Workflow.VisualBasic.targets" />
+  <Import Project="$(MSBuildFrameworkToolsPath)\Workflow.VisualBasic.targets" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/Workflow.targets b/src/Tasks/Workflow.targets
index e9eb61cf94e..96f52c81d1e 100644
--- a/src/Tasks/Workflow.targets
+++ b/src/Tasks/Workflow.targets
@@ -1,15 +1,15 @@
-﻿<Project>
+<Project>
 
-   <!--
-        With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
-        outside of the .NET Framework.  As a result of this, there were several targets files, of which
-        this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
+  <!--
+      With MSBuild 12, we've changed MSBuildToolsPath to for the first time point to a directory
+      outside of the .NET Framework.  As a result of this, there were several targets files, of which
+      this was one, that were being referenced as out of MSBuildToolsPath that are now no longer there.
 
-        Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
-        consumers of them are not broken, but since the targets files themselves are still part of .NET,
-        the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
-   -->
+      Thus, we are shimming those targets files so that they do still appear in MSBuildToolsPath, so that
+      consumers of them are not broken, but since the targets files themselves are still part of .NET,
+      the shim will internally simply redirect to the real copy of the targets file in the .NET Framework.
+  -->
 
-   <Import Project="$(MSBuildFrameworkToolsPath)\Workflow.targets" />
+  <Import Project="$(MSBuildFrameworkToolsPath)\Workflow.targets" />
 
-</Project>
+</Project>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/CSharp.BrowseObject.xaml b/src/Tasks/XamlRules/CSharp.BrowseObject.xaml
index b5151a4ebf8..ccefe984455 100644
--- a/src/Tasks/XamlRules/CSharp.BrowseObject.xaml
+++ b/src/Tasks/XamlRules/CSharp.BrowseObject.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="CSharp"
@@ -17,50 +16,50 @@
   </Rule.Categories>
 
   <DynamicEnumProperty
-      Name="{}{ItemType}"
-      DisplayName="Build Action"
-      Category="Advanced"
-      Description="How the file relates to the build and deployment processes."
-      EnumProvider="ItemTypes" />
+    Name="{}{ItemType}"
+    DisplayName="Build Action"
+    Category="Advanced"
+    Description="How the file relates to the build and deployment processes."
+    EnumProvider="ItemTypes" />
 
   <EnumProperty
-      Name="CopyToOutputDirectory"
-      DisplayName="Copy to Output Directory"
-      Category="Advanced"
-      Description="Specifies the source file will be copied to the output directory.">
+    Name="CopyToOutputDirectory"
+    DisplayName="Copy to Output Directory"
+    Category="Advanced"
+    Description="Specifies the source file will be copied to the output directory.">
     <EnumValue Name="Never" DisplayName="Do not copy" />
     <EnumValue Name="Always" DisplayName="Copy always" />
     <EnumValue Name="PreserveNewest" DisplayName="Copy if newer" />
   </EnumProperty>
 
   <StringProperty
-      Name="Identity"
-      Visible="false"
-      ReadOnly="true"
-      Category="Misc"
-      Description="The item specified in the Include attribute.">
+    Name="Identity"
+    Visible="false"
+    ReadOnly="true"
+    Category="Misc"
+    Description="The item specified in the Include attribute.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="Identity" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FullPath"
-      DisplayName="Full Path"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Location of the file.">
+    Name="FullPath"
+    DisplayName="Full Path"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Location of the file.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="FullPath" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FileNameAndExtension"
-      DisplayName="File Name"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Name of the file or folder.">
+    Name="FileNameAndExtension"
+    DisplayName="File Name"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Name of the file or folder.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="FileNameAndExtension" />
     </StringProperty.DataSource>
@@ -85,4 +84,4 @@
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="Extension" />
     </StringProperty.DataSource>
   </StringProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/CSharp.ProjectItemsSchema.xaml b/src/Tasks/XamlRules/CSharp.ProjectItemsSchema.xaml
index a8b8e008446..dd51a5ece27 100644
--- a/src/Tasks/XamlRules/CSharp.ProjectItemsSchema.xaml
+++ b/src/Tasks/XamlRules/CSharp.ProjectItemsSchema.xaml
@@ -1,16 +1,14 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <ProjectSchemaDefinitions
-    xmlns="http://schemas.microsoft.com/build/2009/properties">
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
 
-    <ContentType
-        Name="CSharpFile"
-        DisplayName="C# file"
-        ItemType="Compile">
-    </ContentType>
+  <ContentType
+      Name="CSharpFile"
+      DisplayName="C# file"
+      ItemType="Compile">
+  </ContentType>
 
-    <ItemType Name="Compile" DisplayName="C# compiler"/>
-
-	<FileExtension Name=".cs" ContentType="CSharpFile"/>
-</ProjectSchemaDefinitions>
+  <ItemType Name="Compile" DisplayName="C# compiler"/>
 
+  <FileExtension Name=".cs" ContentType="CSharpFile"/>
+</ProjectSchemaDefinitions>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/CSharp.xaml b/src/Tasks/XamlRules/CSharp.xaml
index 899420f7674..39168f14adf 100644
--- a/src/Tasks/XamlRules/CSharp.xaml
+++ b/src/Tasks/XamlRules/CSharp.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="CSharp"
@@ -17,50 +16,50 @@
   </Rule.Categories>
 
   <DynamicEnumProperty
-      Name="{}{ItemType}"
-      DisplayName="Build Action"
-      Category="Advanced"
-      Description="How the file relates to the build and deployment processes."
-      EnumProvider="ItemTypes" />
+    Name="{}{ItemType}"
+    DisplayName="Build Action"
+    Category="Advanced"
+    Description="How the file relates to the build and deployment processes."
+    EnumProvider="ItemTypes" />
 
   <EnumProperty
-      Name="CopyToOutputDirectory"
-      DisplayName="Copy to Output Directory"
-      Category="Advanced"
-      Description="Specifies the source file will be copied to the output directory.">
+    Name="CopyToOutputDirectory"
+    DisplayName="Copy to Output Directory"
+    Category="Advanced"
+    Description="Specifies the source file will be copied to the output directory.">
     <EnumValue Name="Never" DisplayName="Do not copy" />
     <EnumValue Name="Always" DisplayName="Copy always" />
     <EnumValue Name="PreserveNewest" DisplayName="Copy if newer" />
   </EnumProperty>
 
   <StringProperty
-      Name="Identity"
-      Visible="false"
-      ReadOnly="true"
-      Category="Misc"
-      Description="The item specified in the Include attribute.">
+    Name="Identity"
+    Visible="false"
+    ReadOnly="true"
+    Category="Misc"
+    Description="The item specified in the Include attribute.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="Identity" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FullPath"
-      DisplayName="Full Path"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Location of the file.">
+    Name="FullPath"
+    DisplayName="Full Path"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Location of the file.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="FullPath" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FileNameAndExtension"
-      DisplayName="File Name"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Name of the file or folder.">
+    Name="FileNameAndExtension"
+    DisplayName="File Name"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Name of the file or folder.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="FileNameAndExtension" />
     </StringProperty.DataSource>
@@ -81,4 +80,4 @@
   <StringProperty Name="LastGenOutput" Visible="false" Description="The filename of the last file generated as a result of the SFG." />
   <BoolProperty Name="DesignTime" Visible="false" Description="A value indicating whether this file has a designer." />
   <BoolProperty Name="AutoGen" Visible="false" Description="A value indicating whether this is a generated file." />
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/Content.xaml b/src/Tasks/XamlRules/Content.xaml
index cfa3cf78836..10943a217c9 100644
--- a/src/Tasks/XamlRules/Content.xaml
+++ b/src/Tasks/XamlRules/Content.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="Content"
@@ -77,4 +76,4 @@
       <NameValuePair Name="DoNotCopyAcrossProjects" Value="true" />
     </StringProperty.Metadata>
   </StringProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/Debugger_General.xaml b/src/Tasks/XamlRules/Debugger_General.xaml
index 49089861e8d..e0eb4c94934 100644
--- a/src/Tasks/XamlRules/Debugger_General.xaml
+++ b/src/Tasks/XamlRules/Debugger_General.xaml
@@ -1,23 +1,22 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule Name="DebuggerGeneralProperties"
-      DisplayName="Debugger General Properties"
-      Description="General Debugger options"
-      xmlns="http://schemas.microsoft.com/build/2009/properties">
+  DisplayName="Debugger General Properties"
+  Description="General Debugger options"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
   <Rule.DataSource>
     <DataSource Persistence="UserFile" />
   </Rule.DataSource>
-  
+
   <StringProperty Name="SymbolsPath" DisplayName="Symbol Search Path"
-                  Description="The search path used by the debugger to locate symbols.">
+    Description="The search path used by the debugger to locate symbols.">
   </StringProperty>
 
   <StringProperty Name="DebuggerFlavor" Visible="false"
-                  Description="The debug rule selected as the active debugger.">
+    Description="The debug rule selected as the active debugger.">
   </StringProperty>
 
   <EnumProperty Name="ImageClrType" Visible="false"
-                  Description="The 'hidden' property we pass to debuggers to let them know if this is a managed project.">
+    Description="The 'hidden' property we pass to debuggers to let them know if this is a managed project.">
     <EnumProperty.DataSource>
       <DataSource Persistence="UserFile" HasConfigurationCondition="false" PersistedName="_TargetImageClrType" />
     </EnumProperty.DataSource>
@@ -25,4 +24,4 @@
     <EnumValue Name="Mixed" DisplayName="Mixed Image" Description="The executable image to debug is a mixture of native and managed code." />
     <EnumValue Name="Managed" DisplayName="Managed Image" Description="The executable image to debug is a fully managed application." />
   </EnumProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/EmbeddedResource.xaml b/src/Tasks/XamlRules/EmbeddedResource.xaml
index 32924484fc0..39020789a57 100644
--- a/src/Tasks/XamlRules/EmbeddedResource.xaml
+++ b/src/Tasks/XamlRules/EmbeddedResource.xaml
@@ -1,11 +1,10 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
-	Name="EmbeddedResource"
-	DisplayName="Embedded Resource"
-	PageTemplate="generic"
-	Description="Embedded resources"
-	xmlns="http://schemas.microsoft.com/build/2009/properties">
+  Name="EmbeddedResource"
+  DisplayName="Embedded Resource"
+  PageTemplate="generic"
+  Description="Embedded resources"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
   <Rule.DataSource>
     <DataSource Persistence="ProjectFile" HasConfigurationCondition="False" ItemType="EmbeddedResource" />
   </Rule.DataSource>
@@ -15,8 +14,8 @@
   </Rule.Categories>
 
   <DynamicEnumProperty Name="{}{ItemType}" DisplayName="Build Action"  Category="Advanced"
-                     Description="How the file relates to the build and deployment processes."
-                     EnumProvider="ItemTypes" />
+    Description="How the file relates to the build and deployment processes."
+    EnumProvider="ItemTypes" />
   <EnumProperty
       Name="CopyToOutputDirectory"
       DisplayName="Copy to Output Directory"
@@ -28,44 +27,44 @@
   </EnumProperty>
 
   <StringProperty
-      Name="Generator"
-      Category="Advanced"
-      DisplayName="Custom Tool"
-      Description="Specifies the tool that transforms a file at design time and places the output of that transformation into another file. For example, a dataset (.xsd) file comes with a default custom tool." />
+    Name="Generator"
+    Category="Advanced"
+    DisplayName="Custom Tool"
+    Description="Specifies the tool that transforms a file at design time and places the output of that transformation into another file. For example, a dataset (.xsd) file comes with a default custom tool." />
   <StringProperty
-      Name="CustomToolNamespace"
-      Category="Advanced"
-      DisplayName="Custom Tool Namespace"
-      Description="The namespace into which the output of the custom tool is placed." />
+    Name="CustomToolNamespace"
+    Category="Advanced"
+    DisplayName="Custom Tool Namespace"
+    Description="The namespace into which the output of the custom tool is placed." />
 
   <StringProperty
-      Name="Identity"
-      Visible="false"
-      ReadOnly="true"
-      Category="Misc"
-      Description="The item specified in the Include attribute.">
+    Name="Identity"
+    Visible="false"
+    ReadOnly="true"
+    Category="Misc"
+    Description="The item specified in the Include attribute.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="EmbeddedResource" PersistedName="Identity" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FullPath"
-      DisplayName="Full Path"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Location of the file.">
+    Name="FullPath"
+    DisplayName="Full Path"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Location of the file.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="EmbeddedResource" PersistedName="FullPath" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FileNameAndExtension"
-      DisplayName="File Name"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Name of the file or folder.">
+    Name="FileNameAndExtension"
+    DisplayName="File Name"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Name of the file or folder.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="EmbeddedResource" PersistedName="FileNameAndExtension" />
     </StringProperty.DataSource>
@@ -92,4 +91,4 @@
       <DataSource Persistence="ProjectFile" ItemType="EmbeddedResource" PersistedName="Generator" HasConfigurationCondition="False" />
     </StringProperty.DataSource>
   </StringProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/Folder.xaml b/src/Tasks/XamlRules/Folder.xaml
index 98fec3edb19..713e5ffee8a 100644
--- a/src/Tasks/XamlRules/Folder.xaml
+++ b/src/Tasks/XamlRules/Folder.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="Folder"
@@ -13,8 +12,8 @@
   <StringProperty Name="Identity" Visible="false" ReadOnly="true" Category="Misc" />
   <StringProperty Name="FullPath" DisplayName="Full Path" ReadOnly="true" Category="Misc" />
   <StringProperty Name="FileNameAndExtension" DisplayName="Folder Name" ReadOnly="true" Category="Misc">
-      <StringProperty.DataSource>
-            <DataSource Persistence="ProjectInstance" ItemType="Folder" PersistedName="FileNameAndExtension" />
-      </StringProperty.DataSource>
+    <StringProperty.DataSource>
+        <DataSource Persistence="ProjectInstance" ItemType="Folder" PersistedName="FileNameAndExtension" />
+    </StringProperty.DataSource>
   </StringProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/General.BrowseObject.xaml b/src/Tasks/XamlRules/General.BrowseObject.xaml
index 61eeb693f0d..cda0f1a70aa 100644
--- a/src/Tasks/XamlRules/General.BrowseObject.xaml
+++ b/src/Tasks/XamlRules/General.BrowseObject.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="ConfigurationGeneralBrowseObject"
@@ -52,4 +51,4 @@
       <DataSource Persistence="ProjectFile" PersistedName="MSBuildProjectDirectory" />
     </StringProperty.DataSource>
   </StringProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/General.xaml b/src/Tasks/XamlRules/General.xaml
index 1080a5e4d4c..27a7bffab75 100644
--- a/src/Tasks/XamlRules/General.xaml
+++ b/src/Tasks/XamlRules/General.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="ConfigurationGeneral"
@@ -90,4 +89,4 @@
       <DataSource Persistence="ProjectFile" PersistedName="MSBuildProjectDirectory" />
     </StringProperty.DataSource>
   </StringProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/General_File.xaml b/src/Tasks/XamlRules/General_File.xaml
index 68e5ae5d1b2..901e8f1ec51 100644
--- a/src/Tasks/XamlRules/General_File.xaml
+++ b/src/Tasks/XamlRules/General_File.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="ConfigurationGeneralFile"
@@ -24,43 +23,43 @@
     EnumProvider="ItemTypes" />
 
   <EnumProperty
-      Name="CopyToOutputDirectory"
-      DisplayName="Copy to Output Directory"
-      Category="Advanced"
-      Description="Specifies the source file will be copied to the output directory.">
+    Name="CopyToOutputDirectory"
+    DisplayName="Copy to Output Directory"
+    Category="Advanced"
+    Description="Specifies the source file will be copied to the output directory.">
     <EnumValue Name="Never" DisplayName="Do not copy" />
     <EnumValue Name="Always" DisplayName="Copy always" />
     <EnumValue Name="PreserveNewest" DisplayName="Copy if newer" />
   </EnumProperty>
 
   <StringProperty
-      Name="Identity"
-      Visible="false"
-      ReadOnly="true"
-      Category="Misc"
-      Description="The item specified in the Include attribute.">
+    Name="Identity"
+    Visible="false"
+    ReadOnly="true"
+    Category="Misc"
+    Description="The item specified in the Include attribute.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="{}{AnyType}" PersistedName="Identity" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FullPath"
-      DisplayName="Full Path"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Location of the file.">
+    Name="FullPath"
+    DisplayName="Full Path"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Location of the file.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="{}{AnyType}" PersistedName="FullPath" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FileNameAndExtension"
-      DisplayName="File Name"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Name of the file or folder.">
+    Name="FileNameAndExtension"
+    DisplayName="File Name"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Name of the file or folder.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="{}{AnyType}" PersistedName="FileNameAndExtension" />
     </StringProperty.DataSource>
@@ -91,4 +90,4 @@
   <StringProperty Name="LastGenOutput" Visible="false" Description="The filename of the last file generated as a result of the SFG." />
   <BoolProperty Name="DesignTime" Visible="false" Description="A value indicating whether this file has a designer." />
   <BoolProperty Name="AutoGen" Visible="false" Description="A value indicating whether this is a generated file." />
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/None.xaml b/src/Tasks/XamlRules/None.xaml
index 2b82f066ef1..acc74c7eed8 100644
--- a/src/Tasks/XamlRules/None.xaml
+++ b/src/Tasks/XamlRules/None.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="None"
@@ -17,50 +16,50 @@
   </Rule.Categories>
 
   <DynamicEnumProperty
-      Name="{}{ItemType}"
-      DisplayName="Build Action"
-      Category="Advanced"
-      Description="How the file relates to the build and deployment processes."
-      EnumProvider="ItemTypes" />
+    Name="{}{ItemType}"
+    DisplayName="Build Action"
+    Category="Advanced"
+    Description="How the file relates to the build and deployment processes."
+    EnumProvider="ItemTypes" />
 
   <EnumProperty
-      Name="CopyToOutputDirectory"
-      DisplayName="Copy to Output Directory"
-      Category="Advanced"
-      Description="Specifies the source file will be copied to the output directory.">
+    Name="CopyToOutputDirectory"
+    DisplayName="Copy to Output Directory"
+    Category="Advanced"
+    Description="Specifies the source file will be copied to the output directory.">
     <EnumValue Name="Never" DisplayName="Do not copy" />
     <EnumValue Name="Always" DisplayName="Copy always" />
     <EnumValue Name="PreserveNewest" DisplayName="Copy if newer" />
   </EnumProperty>
 
   <StringProperty
-      Name="Identity"
-      Visible="false"
-      ReadOnly="true"
-      Category="Misc"
-      Description="The item specified in the Include attribute.">
+    Name="Identity"
+    Visible="false"
+    ReadOnly="true"
+    Category="Misc"
+    Description="The item specified in the Include attribute.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="None" PersistedName="Identity" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FullPath"
-      DisplayName="Full Path"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Location of the file.">
+    Name="FullPath"
+    DisplayName="Full Path"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Location of the file.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="None" PersistedName="FullPath" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FileNameAndExtension"
-      DisplayName="File Name"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Name of the file or folder.">
+    Name="FileNameAndExtension"
+    DisplayName="File Name"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Name of the file or folder.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="None" PersistedName="FileNameAndExtension" />
     </StringProperty.DataSource>
@@ -90,4 +89,4 @@
   <StringProperty Name="LastGenOutput" Visible="false" Description="The filename of the last file generated as a result of the SFG." />
   <BoolProperty Name="DesignTime" Visible="false" Description="A value indicating whether this file has a designer." />
   <BoolProperty Name="AutoGen" Visible="false" Description="A value indicating whether this is a generated file." />
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/ProjectItemsSchema.xaml b/src/Tasks/XamlRules/ProjectItemsSchema.xaml
index 28f54055052..efd8d6946cc 100644
--- a/src/Tasks/XamlRules/ProjectItemsSchema.xaml
+++ b/src/Tasks/XamlRules/ProjectItemsSchema.xaml
@@ -1,139 +1,137 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <ProjectSchemaDefinitions
-    xmlns="http://schemas.microsoft.com/build/2009/properties">
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
 
-    <ContentType
-        Name="Text"
-        DisplayName="Text file"
-        ItemType="Content">
-    </ContentType>
+  <ContentType
+    Name="Text"
+    DisplayName="Text file"
+    ItemType="Content">
+  </ContentType>
 
-    <ContentType
-        Name="XML"
-        DisplayName="Xml file"
-        ItemType="Content">
-    </ContentType>
+  <ContentType
+    Name="XML"
+    DisplayName="Xml file"
+    ItemType="Content">
+  </ContentType>
 
-    <ContentType
-        Name="HTML"
-        DisplayName="Html file"
-        ItemType="Content">
-    </ContentType>
+  <ContentType
+    Name="HTML"
+    DisplayName="Html file"
+    ItemType="Content">
+  </ContentType>
 
-    <ContentType
-        Name="CSS"
-        DisplayName="Cascading style sheet"
-        ItemType="Content">
-    </ContentType>
+  <ContentType
+    Name="CSS"
+    DisplayName="Cascading style sheet"
+    ItemType="Content">
+  </ContentType>
 
-    <ContentType
-        Name="Json"
-        DisplayName="Json file"
-        ItemType="Content">
-    </ContentType>
+  <ContentType
+    Name="Json"
+    DisplayName="Json file"
+    ItemType="Content">
+  </ContentType>
 
-    <ContentType
-      Name="Font"
-      DisplayName="Font file"
-      ItemType="Content">
-    </ContentType>
+  <ContentType
+    Name="Font"
+    DisplayName="Font file"
+    ItemType="Content">
+  </ContentType>
 
-    <ContentType
-      Name="Media"
-      DisplayName="Media file"
-      ItemType="Content">
-    </ContentType>
-    
-    <ContentType
-      Name="Image"
-      DisplayName="Image file"
-      ItemType="Content">
-    </ContentType>
-    
-    <ContentType
-      Name="EmbeddedResource"
-      DisplayName="Embedded resource"
-      ItemType="EmbeddedResource">
-      <NameValuePair Name="DefaultMetadata_Generator" Value="ResXFileCodeGenerator" />
-    </ContentType>
+  <ContentType
+    Name="Media"
+    DisplayName="Media file"
+    ItemType="Content">
+  </ContentType>
 
-    <ItemType Name="None" DisplayName="None"/>
-    <ItemType Name="Content" DisplayName="Content" />
-    <ItemType Name="EmbeddedResource" DisplayName="Embedded resource "/>
+  <ContentType
+    Name="Image"
+    DisplayName="Image file"
+    ItemType="Content">
+  </ContentType>
 
-    <FileExtension Name=".asax" ContentType="Asax" />
-    <FileExtension Name=".asmx" ContentType="HTML" />
-    <FileExtension Name=".asp" ContentType="AspPage" />
-    <FileExtension Name=".txt" ContentType="Text" />
-    <FileExtension Name=".resx" ContentType="EmbeddedResource" />
-    <FileExtension Name=".html" ContentType="HTML" />
-    <FileExtension Name=".htm" ContentType="HTML" />
-    <FileExtension Name=".css" ContentType="CSS" />
-    <FileExtension Name=".cur" ContentType="CUR" />
-    <FileExtension Name=".vbS" ContentType="Script" />
-    <FileExtension Name=".jS" ContentType="Script" />
-    <FileExtension Name=".xml" ContentType="XML" />
-    <FileExtension Name=".mht" ContentType="MHT" />
-    <FileExtension Name=".manifest" ContentType="Manifest" />
-    <FileExtension Name=".rdlc" ContentType="RDLC" />
-    <FileExtension Name=".cd" ContentType="ClassDiagram" />
-    <FileExtension Name=".licenses" ContentType="Licenses" />
-    <FileExtension Name=".json" ContentType="Json" />
+  <ContentType
+    Name="EmbeddedResource"
+    DisplayName="Embedded resource"
+    ItemType="EmbeddedResource">
+    <NameValuePair Name="DefaultMetadata_Generator" Value="ResXFileCodeGenerator" />
+  </ContentType>
 
-    <!-- Image formats -->
-    <FileExtension Name=".jpeg" ContentType="Image" />
-    <FileExtension Name=".jpe" ContentType="Image" />
-    <FileExtension Name=".jpg" ContentType="Image" />
-    <FileExtension Name=".jfif" ContentType="Image" />
-    <FileExtension Name=".exif" ContentType="Image" />
-    <FileExtension Name=".gif" ContentType="Image" />
-    <FileExtension Name=".tiff" ContentType="Image" />
-    <FileExtension Name=".tif" ContentType="Image" />
-    <FileExtension Name=".png" ContentType="Image" />
-    <FileExtension Name=".bmp" ContentType="Image" />
-    <FileExtension Name=".dib" ContentType="Image" />
-    <FileExtension Name=".rle" ContentType="Image" />
-    <FileExtension Name=".ico" ContentType="Image" />
-    <FileExtension Name=".wdp" ContentType="Image" />
-    <FileExtension Name=".dds" ContentType="Image" />
-    <FileExtension Name=".tga" ContentType="Image" />
+  <ItemType Name="None" DisplayName="None"/>
+  <ItemType Name="Content" DisplayName="Content" />
+  <ItemType Name="EmbeddedResource" DisplayName="Embedded resource "/>
 
-    <!-- Audio formats-->
-    <FileExtension Name=".wav" ContentType="Media" />
-    <FileExtension Name=".wma" ContentType="Media" />
-    <FileExtension Name=".au" ContentType="Media" />
-    <FileExtension Name=".aif" ContentType="Media" />
-    <FileExtension Name=".aiff" ContentType="Media" />
-    <FileExtension Name=".aifc" ContentType="Media" />
-    <FileExtension Name=".mid" ContentType="Media" />
-    <FileExtension Name=".midi" ContentType="Media" />
-    <FileExtension Name=".mp3" ContentType="Media" />
-    <FileExtension Name=".snd" ContentType="Media" />
-    <FileExtension Name=".rmi" ContentType="Media" />
+  <FileExtension Name=".asax" ContentType="Asax" />
+  <FileExtension Name=".asmx" ContentType="HTML" />
+  <FileExtension Name=".asp" ContentType="AspPage" />
+  <FileExtension Name=".txt" ContentType="Text" />
+  <FileExtension Name=".resx" ContentType="EmbeddedResource" />
+  <FileExtension Name=".html" ContentType="HTML" />
+  <FileExtension Name=".htm" ContentType="HTML" />
+  <FileExtension Name=".css" ContentType="CSS" />
+  <FileExtension Name=".cur" ContentType="CUR" />
+  <FileExtension Name=".vbS" ContentType="Script" />
+  <FileExtension Name=".jS" ContentType="Script" />
+  <FileExtension Name=".xml" ContentType="XML" />
+  <FileExtension Name=".mht" ContentType="MHT" />
+  <FileExtension Name=".manifest" ContentType="Manifest" />
+  <FileExtension Name=".rdlc" ContentType="RDLC" />
+  <FileExtension Name=".cd" ContentType="ClassDiagram" />
+  <FileExtension Name=".licenses" ContentType="Licenses" />
+  <FileExtension Name=".json" ContentType="Json" />
 
-    <!-- Video formats-->
-    <FileExtension Name=".avi" ContentType="Media" />
-    <FileExtension Name=".wmv" ContentType="Media" />
-    <FileExtension Name=".mov" ContentType="Media" />
-    <FileExtension Name=".qt" ContentType="Media" />
-    <FileExtension Name=".mpe" ContentType="Media" />
-    <FileExtension Name=".mpeg" ContentType="Media" />
-    <FileExtension Name=".mpg" ContentType="Media" />
-    <FileExtension Name=".mp2" ContentType="Media" />
-    <FileExtension Name=".mp4" ContentType="Media" />
-    <FileExtension Name=".asx" ContentType="Media" />
-    <FileExtension Name=".asf" ContentType="Media" />
-    <FileExtension Name=".webm" ContentType="Media" />
+  <!-- Image formats -->
+  <FileExtension Name=".jpeg" ContentType="Image" />
+  <FileExtension Name=".jpe" ContentType="Image" />
+  <FileExtension Name=".jpg" ContentType="Image" />
+  <FileExtension Name=".jfif" ContentType="Image" />
+  <FileExtension Name=".exif" ContentType="Image" />
+  <FileExtension Name=".gif" ContentType="Image" />
+  <FileExtension Name=".tiff" ContentType="Image" />
+  <FileExtension Name=".tif" ContentType="Image" />
+  <FileExtension Name=".png" ContentType="Image" />
+  <FileExtension Name=".bmp" ContentType="Image" />
+  <FileExtension Name=".dib" ContentType="Image" />
+  <FileExtension Name=".rle" ContentType="Image" />
+  <FileExtension Name=".ico" ContentType="Image" />
+  <FileExtension Name=".wdp" ContentType="Image" />
+  <FileExtension Name=".dds" ContentType="Image" />
+  <FileExtension Name=".tga" ContentType="Image" />
 
-    <!-- Font formats -->
-    <FileExtension Name=".ttf" ContentType="Font" />
-    <FileExtension Name=".odttf" ContentType="Font" />
-    <FileExtension Name=".otf" ContentType="Font" />
-    <FileExtension Name=".compositefont" ContentType="Font" />
-    <FileExtension Name=".ttc" ContentType="Font" />
-    <FileExtension Name=".tte" ContentType="Font" />
-    <FileExtension Name=".woff" ContentType="Font" />
-    <FileExtension Name=".eot" ContentType="Font" />
-</ProjectSchemaDefinitions>
+  <!-- Audio formats-->
+  <FileExtension Name=".wav" ContentType="Media" />
+  <FileExtension Name=".wma" ContentType="Media" />
+  <FileExtension Name=".au" ContentType="Media" />
+  <FileExtension Name=".aif" ContentType="Media" />
+  <FileExtension Name=".aiff" ContentType="Media" />
+  <FileExtension Name=".aifc" ContentType="Media" />
+  <FileExtension Name=".mid" ContentType="Media" />
+  <FileExtension Name=".midi" ContentType="Media" />
+  <FileExtension Name=".mp3" ContentType="Media" />
+  <FileExtension Name=".snd" ContentType="Media" />
+  <FileExtension Name=".rmi" ContentType="Media" />
 
+  <!-- Video formats-->
+  <FileExtension Name=".avi" ContentType="Media" />
+  <FileExtension Name=".wmv" ContentType="Media" />
+  <FileExtension Name=".mov" ContentType="Media" />
+  <FileExtension Name=".qt" ContentType="Media" />
+  <FileExtension Name=".mpe" ContentType="Media" />
+  <FileExtension Name=".mpeg" ContentType="Media" />
+  <FileExtension Name=".mpg" ContentType="Media" />
+  <FileExtension Name=".mp2" ContentType="Media" />
+  <FileExtension Name=".mp4" ContentType="Media" />
+  <FileExtension Name=".asx" ContentType="Media" />
+  <FileExtension Name=".asf" ContentType="Media" />
+  <FileExtension Name=".webm" ContentType="Media" />
+
+  <!-- Font formats -->
+  <FileExtension Name=".ttf" ContentType="Font" />
+  <FileExtension Name=".odttf" ContentType="Font" />
+  <FileExtension Name=".otf" ContentType="Font" />
+  <FileExtension Name=".compositefont" ContentType="Font" />
+  <FileExtension Name=".ttc" ContentType="Font" />
+  <FileExtension Name=".tte" ContentType="Font" />
+  <FileExtension Name=".woff" ContentType="Font" />
+  <FileExtension Name=".eot" ContentType="Font" />
+</ProjectSchemaDefinitions>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/ResolvedAssemblyReference.xaml b/src/Tasks/XamlRules/ResolvedAssemblyReference.xaml
index 41de81596b9..00a031357fd 100644
--- a/src/Tasks/XamlRules/ResolvedAssemblyReference.xaml
+++ b/src/Tasks/XamlRules/ResolvedAssemblyReference.xaml
@@ -1,122 +1,121 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
-    Name="ResolvedAssemblyReference"
-    DisplayName="Resolved Assembly Reference"
-    PageTemplate="generic"
-    Description="Resolved reference"
-    xmlns="http://schemas.microsoft.com/build/2009/properties">
-    <Rule.DataSource>
-        <DataSource Persistence="ResolvedReference" ItemType="Reference" HasConfigurationCondition="False" 
-                    SourceType="TargetResults" MSBuildTarget="ResolveAssemblyReferencesDesignTime" />
-    </Rule.DataSource>
+  Name="ResolvedAssemblyReference"
+  DisplayName="Resolved Assembly Reference"
+  PageTemplate="generic"
+  Description="Resolved reference"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
+  <Rule.DataSource>
+    <DataSource Persistence="ResolvedReference" ItemType="Reference" HasConfigurationCondition="False"
+      SourceType="TargetResults" MSBuildTarget="ResolveAssemblyReferencesDesignTime" />
+  </Rule.DataSource>
 
-    <StringListProperty Name="Aliases"
-                        DisplayName="Aliases"
-                        Description="A comma-delimited list of aliases to this reference."
-                        Separator=",">
-        <StringListProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" />
-        </StringListProperty.DataSource>
-    </StringListProperty>
+  <StringListProperty Name="Aliases"
+    DisplayName="Aliases"
+    Description="A comma-delimited list of aliases to this reference."
+    Separator=",">
+    <StringListProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" />
+    </StringListProperty.DataSource>
+  </StringListProperty>
 
-    <BoolProperty Name="CopyLocal"
-                  DisplayName="Copy Local"
-                  Description="Indicates whether the reference will be copied to the output directory.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" PersistedName="Private" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
+  <BoolProperty Name="CopyLocal"
+    DisplayName="Copy Local"
+    Description="Indicates whether the reference will be copied to the output directory.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" PersistedName="Private" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
 
-    <StringProperty Name="Culture" 
-                    ReadOnly="True"
-                    Visible="False"
-                    DisplayName="Culture" 
-                    Description="The value of the culture field from the assembly metadata." />
+  <StringProperty Name="Culture"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Culture"
+    Description="The value of the culture field from the assembly metadata." />
 
-    <StringProperty Name="Description" 
-                    ReadOnly="True" 
-                    Visible="False"
-                    DisplayName="Description" 
-                    Description="The value of the Title field from the assembly metadata." />
+  <StringProperty Name="Description"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Description"
+    Description="The value of the Title field from the assembly metadata." />
 
-    <BoolProperty Name="EmbedInteropTypes"
-                  DisplayName="Embed Interop Types"
-                  Description="Indicates whether types defined in this assembly will be embedded into the target assembly.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
+  <BoolProperty Name="EmbedInteropTypes"
+    DisplayName="Embed Interop Types"
+    Description="Indicates whether types defined in this assembly will be embedded into the target assembly.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
 
-    <EnumProperty Name="FileType"
-                  ReadOnly="True"
-                  Visible="False"
-                  DisplayName="File Type"
-                  Description="The file type of the reference.">
-        <EnumValue Name="Assembly" DisplayName=".NET assembly" />
-        <EnumValue Name="ActiveX" DisplayName="COM type library" />
-        <EnumValue Name="Native Assembly" DisplayName="Native Assembly" />
-    </EnumProperty>
+  <EnumProperty Name="FileType"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="File Type"
+    Description="The file type of the reference.">
+    <EnumValue Name="Assembly" DisplayName=".NET assembly" />
+    <EnumValue Name="ActiveX" DisplayName="COM type library" />
+    <EnumValue Name="Native Assembly" DisplayName="Native Assembly" />
+  </EnumProperty>
 
-    <StringProperty Name="Identity"
-                    ReadOnly="True"
-                    DisplayName="Identity"
-                    Description="Security identity of the referenced assembly (see System.Reflection.Assembly.Evidence or System.Security.Policy.Evidence).">
-        <StringProperty.DataSource>
-            <DataSource PersistedName="{}{Identity}" />
-        </StringProperty.DataSource>
-    </StringProperty>
+  <StringProperty Name="Identity"
+    ReadOnly="True"
+    DisplayName="Identity"
+    Description="Security identity of the referenced assembly (see System.Reflection.Assembly.Evidence or System.Security.Policy.Evidence).">
+    <StringProperty.DataSource>
+      <DataSource PersistedName="{}{Identity}" />
+    </StringProperty.DataSource>
+  </StringProperty>
 
-    <StringProperty Name="ResolvedPath"
-                    ReadOnly="True"
-                    DisplayName="Path"
-                    Description="Location of the file being referenced.">
-        <StringProperty.DataSource>
-            <DataSource PersistedName="Identity" />
-        </StringProperty.DataSource>
-    </StringProperty>
+  <StringProperty Name="ResolvedPath"
+    ReadOnly="True"
+    DisplayName="Path"
+    Description="Location of the file being referenced.">
+    <StringProperty.DataSource>
+      <DataSource PersistedName="Identity" />
+    </StringProperty.DataSource>
+  </StringProperty>
 
-    <StringProperty Name="RuntimeVersion"
-                    ReadOnly="True"
-                    Visible="False"
-                    DisplayName="Runtime Version"
-                    Description="Version of the .NET runtime this assembly was compiled against.">
-    </StringProperty>
+  <StringProperty Name="RuntimeVersion"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Runtime Version"
+    Description="Version of the .NET runtime this assembly was compiled against.">
+  </StringProperty>
 
-    <BoolProperty Name="SpecificVersion" 
-                  DisplayName="Specific Version"
-                  Description="Indicates whether this assembly can be resolved without regard to multi-targeting rules for assembly resolution.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="AssemblyReference" ItemType="Reference" HasConfigurationCondition="False" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
+  <BoolProperty Name="SpecificVersion"
+    DisplayName="Specific Version"
+    Description="Indicates whether this assembly can be resolved without regard to multi-targeting rules for assembly resolution.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="AssemblyReference" ItemType="Reference" HasConfigurationCondition="False" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
 
-    <BoolProperty Name="StrongName"
-                  ReadOnly="True"
-                  Visible="False"
-                  DisplayName="Strong Name"
-                  Description="True indicates that the reference has been signed with a key-pair.">
-    </BoolProperty>
+  <BoolProperty Name="StrongName"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Strong Name"
+    Description="True indicates that the reference has been signed with a key-pair.">
+  </BoolProperty>
 
-    <StringProperty Name="Version"
-                    ReadOnly="True"
-                    DisplayName="Version"
-                    Description="Version of reference.">
-    </StringProperty>
+  <StringProperty Name="Version"
+    ReadOnly="True"
+    DisplayName="Version"
+    Description="Version of reference.">
+  </StringProperty>
 
-    <StringProperty Name="RequiredTargetFramework" DisplayName="Required Target Framework" Visible="False" />
-    <StringProperty Name="HintPath" Visible="false" />
-    <StringProperty Name="SDKIdentity" Visible="false" />
+  <StringProperty Name="RequiredTargetFramework" DisplayName="Required Target Framework" Visible="False" />
+  <StringProperty Name="HintPath" Visible="false" />
+  <StringProperty Name="SDKIdentity" Visible="false" />
 
-    <!-- This is the metadata we store on the reference item when we add it. -->
-    <BoolProperty Name="IsWinMDFile" Visible="false" Description="Indicates whether the project system ascertained that this is a WinMD (as opposed to an assembly)" />
+  <!-- This is the metadata we store on the reference item when we add it. -->
+  <BoolProperty Name="IsWinMDFile" Visible="false" Description="Indicates whether the project system ascertained that this is a WinMD (as opposed to an assembly)" />
 
-    <!-- These are metadata added to the resolved item by MSBuild that we don't show to the user but use internally. -->
-    <BoolProperty Name="WinMDFile" Visible="false" ReadOnly="True" Description="Indicates whether the build system ascertained that this is a WinMD (as opposed to an assembly)" />
-    <StringProperty Name="Name" Visible="false" ReadOnly="True" />
-    <StringProperty Name="OriginalItemSpec" Visible="False" ReadOnly="True" Description="The evaluated item name of the original reference item whose resolution resulted in this resolved reference item." />
-    <StringProperty Name="ReferenceFromSDK" Visible="False" ReadOnly="True" Description="The SDK that this reference came from when using the expand SDK target." />
-    <StringProperty Name="FusionName" Visible="False" ReadOnly="True" Description="The full fusion name of the resolved assembly." />
-    <StringProperty Name="ResolvedFrom" Visible="False" ReadOnly="True" Description="{}What repository held the reference that was used to resolve this.  (&quot;{GAC}&quot; if it was in the GAC)." />
-    <StringProperty Name="FrameworkFile" Visible="False" ReadOnly="True" Description="Is this file a framework file. Ie Found in the target framework directory or in the redist list." />
-</Rule>
+  <!-- These are metadata added to the resolved item by MSBuild that we don't show to the user but use internally. -->
+  <BoolProperty Name="WinMDFile" Visible="false" ReadOnly="True" Description="Indicates whether the build system ascertained that this is a WinMD (as opposed to an assembly)" />
+  <StringProperty Name="Name" Visible="false" ReadOnly="True" />
+  <StringProperty Name="OriginalItemSpec" Visible="False" ReadOnly="True" Description="The evaluated item name of the original reference item whose resolution resulted in this resolved reference item." />
+  <StringProperty Name="ReferenceFromSDK" Visible="False" ReadOnly="True" Description="The SDK that this reference came from when using the expand SDK target." />
+  <StringProperty Name="FusionName" Visible="False" ReadOnly="True" Description="The full fusion name of the resolved assembly." />
+  <StringProperty Name="ResolvedFrom" Visible="False" ReadOnly="True" Description="{}What repository held the reference that was used to resolve this.  (&quot;{GAC}&quot; if it was in the GAC)." />
+  <StringProperty Name="FrameworkFile" Visible="False" ReadOnly="True" Description="Is this file a framework file. Ie Found in the target framework directory or in the redist list." />
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/ResolvedCOMReference.xaml b/src/Tasks/XamlRules/ResolvedCOMReference.xaml
index 1aff28d9d8d..6abdc97990c 100644
--- a/src/Tasks/XamlRules/ResolvedCOMReference.xaml
+++ b/src/Tasks/XamlRules/ResolvedCOMReference.xaml
@@ -1,124 +1,123 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
-    Name="ResolvedCOMReference"
-    DisplayName="Resolved COM Reference"
-    PageTemplate="generic"
-    Description="Resolved reference"
-    xmlns="http://schemas.microsoft.com/build/2009/properties">
-    <Rule.DataSource>
-        <DataSource Persistence="ResolvedReference" ItemType="COMReference" HasConfigurationCondition="False" 
-                    SourceType="TargetResults" MSBuildTarget="ResolveComReferencesDesignTime" />
-    </Rule.DataSource>
-
-    <StringProperty Name="Guid"
-                    DisplayName="CLSID"
-                    Description="The GUID of the COM server."
-                    Visible="False" />
-    <IntProperty Name="VersionMajor" Visible="False" />
-    <IntProperty Name="VersionMinor" Visible="False" />
-    <StringProperty Name="WrapperTool" Visible="False" />
-
-    <StringListProperty Name="Aliases"
-                        DisplayName="Aliases"
-                        Description="A comma-delimited list of aliases to this reference."
-                        Separator=",">
-        <StringListProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="COMReference" HasConfigurationCondition="False" />
-        </StringListProperty.DataSource>
-    </StringListProperty>
-
-    <BoolProperty Name="CopyLocal"
-                  DisplayName="Copy Local"
-                  Description="Indicates whether the reference will be copied to the output directory.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="COMReference" HasConfigurationCondition="False" PersistedName="Private" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
-
-    <StringProperty Name="Culture" 
-                    ReadOnly="True"
-                    Visible="False"
-                    DisplayName="Culture" 
-                    Description="The value of the culture field from the assembly metadata." />
-
-    <StringProperty Name="Description" 
-                    ReadOnly="True" 
-                    Visible="False"
-                    DisplayName="Description" 
-                    Description="The value of the Title field from the assembly metadata." />
-
-    <BoolProperty Name="EmbedInteropTypes"
-                  DisplayName="Embed Interop Types"
-                  Description="Indicates whether types defined in this assembly will be embedded into the target assembly.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="COMReference" HasConfigurationCondition="False" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
-
-    <EnumProperty Name="FileType"
-                  ReadOnly="True"
-                  Visible="False"
-                  DisplayName="File Type"
-                  Description="The file type of the reference.">
-        <EnumValue Name="Assembly" DisplayName=".NET assembly" />
-        <EnumValue Name="ActiveX" DisplayName="COM type library" />
-        <EnumValue Name="Native Assembly" DisplayName="Native Assembly" />
-    </EnumProperty>
-
-    <StringProperty Name="Identity"
-                    ReadOnly="True"
-                    DisplayName="Identity"
-                    Description="Security identity of the referenced assembly (see System.Reflection.Assembly.Evidence or System.Security.Policy.Evidence).">
-        <StringProperty.DataSource>
-            <DataSource PersistedName="{}{Identity}" />
-        </StringProperty.DataSource>
-    </StringProperty>
-
-    <StringProperty Name="ResolvedPath"
-                    ReadOnly="True"
-                    DisplayName="Path"
-                    Description="Location of the file being referenced.">
-        <StringProperty.DataSource>
-            <DataSource PersistedName="Identity" />
-        </StringProperty.DataSource>
-    </StringProperty>
-
-    <StringProperty Name="RuntimeVersion"
-                    ReadOnly="True"
-                    Visible="False"
-                    DisplayName="Runtime Version"
-                    Description="Version of the .NET runtime this assembly was compiled against.">
-    </StringProperty>
-
-    <BoolProperty Name="SpecificVersion" 
-                  DisplayName="Specific Version"
-                  Visible="False"
-                  Description="Indicates whether this assembly can be resolved without regard to multi-targeting rules for assembly resolution." />
-
-    <BoolProperty Name="StrongName"
-                  ReadOnly="True"
-                  Visible="False"
-                  DisplayName="Strong Name"
-                  Description="True indicates that the reference has been signed with a key-pair.">
-    </BoolProperty>
-
-    <StringProperty Name="Version"
-                    ReadOnly="True"
-                    DisplayName="Version"
-                    Description="Version of reference.">
-    </StringProperty>
-
-    <StringProperty Name="RequiredTargetFramework" DisplayName="Required Target Framework" Visible="False" />
-    <StringProperty Name="HintPath" Visible="false" />
-    <StringProperty Name="SDKIdentity" Visible="false" />
-
-    <!-- This is the metadata we store on the reference item when we add it. -->
-    <BoolProperty Name="IsWinMDFile" Visible="false" Description="Indicates whether the project system ascertained that this is a WinMD (as opposed to an assembly)" />
-
-    <!-- These are metadata added to the resolved item by MSBuild that we don't show to the user but use internally. -->
-    <BoolProperty Name="WinMDFile" Visible="false" ReadOnly="True" Description="Indicates whether the build system ascertained that this is a WinMD (as opposed to an assembly)" />
-    <StringProperty Name="OriginalItemSpec" Visible="False" ReadOnly="True" Description="The evaluated item name of the original reference item whose resolution resulted in this resolved reference item." />
-    <StringProperty Name="FusionName" Visible="False" ReadOnly="True" />
-    <StringProperty Name="Name" Visible="false" ReadOnly="True" />
-</Rule>
+  Name="ResolvedCOMReference"
+  DisplayName="Resolved COM Reference"
+  PageTemplate="generic"
+  Description="Resolved reference"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
+  <Rule.DataSource>
+    <DataSource Persistence="ResolvedReference" ItemType="COMReference" HasConfigurationCondition="False"
+      SourceType="TargetResults" MSBuildTarget="ResolveComReferencesDesignTime" />
+  </Rule.DataSource>
+
+  <StringProperty Name="Guid"
+    DisplayName="CLSID"
+    Description="The GUID of the COM server."
+    Visible="False" />
+  <IntProperty Name="VersionMajor" Visible="False" />
+  <IntProperty Name="VersionMinor" Visible="False" />
+  <StringProperty Name="WrapperTool" Visible="False" />
+
+  <StringListProperty Name="Aliases"
+    DisplayName="Aliases"
+    Description="A comma-delimited list of aliases to this reference."
+    Separator=",">
+    <StringListProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="COMReference" HasConfigurationCondition="False" />
+    </StringListProperty.DataSource>
+  </StringListProperty>
+
+  <BoolProperty Name="CopyLocal"
+    DisplayName="Copy Local"
+    Description="Indicates whether the reference will be copied to the output directory.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="COMReference" HasConfigurationCondition="False" PersistedName="Private" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
+
+  <StringProperty Name="Culture"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Culture"
+    Description="The value of the culture field from the assembly metadata." />
+
+  <StringProperty Name="Description"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Description"
+    Description="The value of the Title field from the assembly metadata." />
+
+  <BoolProperty Name="EmbedInteropTypes"
+    DisplayName="Embed Interop Types"
+    Description="Indicates whether types defined in this assembly will be embedded into the target assembly.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="COMReference" HasConfigurationCondition="False" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
+
+  <EnumProperty Name="FileType"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="File Type"
+    Description="The file type of the reference.">
+    <EnumValue Name="Assembly" DisplayName=".NET assembly" />
+    <EnumValue Name="ActiveX" DisplayName="COM type library" />
+    <EnumValue Name="Native Assembly" DisplayName="Native Assembly" />
+  </EnumProperty>
+
+  <StringProperty Name="Identity"
+    ReadOnly="True"
+    DisplayName="Identity"
+    Description="Security identity of the referenced assembly (see System.Reflection.Assembly.Evidence or System.Security.Policy.Evidence).">
+    <StringProperty.DataSource>
+      <DataSource PersistedName="{}{Identity}" />
+    </StringProperty.DataSource>
+  </StringProperty>
+
+  <StringProperty Name="ResolvedPath"
+    ReadOnly="True"
+    DisplayName="Path"
+    Description="Location of the file being referenced.">
+    <StringProperty.DataSource>
+      <DataSource PersistedName="Identity" />
+    </StringProperty.DataSource>
+  </StringProperty>
+
+  <StringProperty Name="RuntimeVersion"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Runtime Version"
+    Description="Version of the .NET runtime this assembly was compiled against.">
+  </StringProperty>
+
+  <BoolProperty Name="SpecificVersion"
+    DisplayName="Specific Version"
+    Visible="False"
+    Description="Indicates whether this assembly can be resolved without regard to multi-targeting rules for assembly resolution." />
+
+  <BoolProperty Name="StrongName"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Strong Name"
+    Description="True indicates that the reference has been signed with a key-pair.">
+  </BoolProperty>
+
+  <StringProperty Name="Version"
+    ReadOnly="True"
+    DisplayName="Version"
+    Description="Version of reference.">
+  </StringProperty>
+
+  <StringProperty Name="RequiredTargetFramework" DisplayName="Required Target Framework" Visible="False" />
+  <StringProperty Name="HintPath" Visible="false" />
+  <StringProperty Name="SDKIdentity" Visible="false" />
+
+  <!-- This is the metadata we store on the reference item when we add it. -->
+  <BoolProperty Name="IsWinMDFile" Visible="false" Description="Indicates whether the project system ascertained that this is a WinMD (as opposed to an assembly)" />
+
+  <!-- These are metadata added to the resolved item by MSBuild that we don't show to the user but use internally. -->
+  <BoolProperty Name="WinMDFile" Visible="false" ReadOnly="True" Description="Indicates whether the build system ascertained that this is a WinMD (as opposed to an assembly)" />
+  <StringProperty Name="OriginalItemSpec" Visible="False" ReadOnly="True" Description="The evaluated item name of the original reference item whose resolution resulted in this resolved reference item." />
+  <StringProperty Name="FusionName" Visible="False" ReadOnly="True" />
+  <StringProperty Name="Name" Visible="false" ReadOnly="True" />
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/ResolvedProjectReference.xaml b/src/Tasks/XamlRules/ResolvedProjectReference.xaml
index 8f1ceda99f4..087e5b332cf 100644
--- a/src/Tasks/XamlRules/ResolvedProjectReference.xaml
+++ b/src/Tasks/XamlRules/ResolvedProjectReference.xaml
@@ -1,119 +1,118 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
-    Name="ResolvedProjectReference"
-    DisplayName="Resolved Project Reference"
-    PageTemplate="generic"
-    Description="Resolved reference"
-    xmlns="http://schemas.microsoft.com/build/2009/properties">
-    <Rule.DataSource>
-        <DataSource Persistence="ResolvedReference" ItemType="ProjectReference" HasConfigurationCondition="False" 
-                    SourceType="TargetResults" MSBuildTarget="ResolveProjectReferencesDesignTime" />
-    </Rule.DataSource>
+  Name="ResolvedProjectReference"
+  DisplayName="Resolved Project Reference"
+  PageTemplate="generic"
+  Description="Resolved reference"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
+  <Rule.DataSource>
+    <DataSource Persistence="ResolvedReference" ItemType="ProjectReference" HasConfigurationCondition="False"
+      SourceType="TargetResults" MSBuildTarget="ResolveProjectReferencesDesignTime" />
+  </Rule.DataSource>
 
-    <StringListProperty Name="Aliases"
-                        DisplayName="Aliases"
-                        Description="A comma-delimited list of aliases to this reference."
-                        Separator=",">
-        <StringListProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="ProjectReference" HasConfigurationCondition="False" />
-        </StringListProperty.DataSource>
-    </StringListProperty>
+  <StringListProperty Name="Aliases"
+    DisplayName="Aliases"
+    Description="A comma-delimited list of aliases to this reference."
+    Separator=",">
+    <StringListProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="ProjectReference" HasConfigurationCondition="False" />
+    </StringListProperty.DataSource>
+  </StringListProperty>
 
-    <BoolProperty Name="CopyLocal"
-                  DisplayName="Copy Local"
-                  Description="Indicates whether the reference will be copied to the output directory.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="ProjectReference" HasConfigurationCondition="False" PersistedName="Private" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
+  <BoolProperty Name="CopyLocal"
+    DisplayName="Copy Local"
+    Description="Indicates whether the reference will be copied to the output directory.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="ProjectReference" HasConfigurationCondition="False" PersistedName="Private" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
 
-    <StringProperty Name="Culture" 
-                    ReadOnly="True"
-                    DisplayName="Culture" 
-                    Description="The value of the culture field from the assembly metadata.">
-    </StringProperty>
+  <StringProperty Name="Culture"
+    ReadOnly="True"
+    DisplayName="Culture"
+    Description="The value of the culture field from the assembly metadata.">
+  </StringProperty>
 
-    <StringProperty Name="Description" 
-                    ReadOnly="True" 
-                    DisplayName="Description" 
-                    Description="The value of the Title field from the assembly metadata.">
-    </StringProperty>
+  <StringProperty Name="Description"
+    ReadOnly="True"
+    DisplayName="Description"
+    Description="The value of the Title field from the assembly metadata.">
+  </StringProperty>
 
-    <BoolProperty Name="EmbedInteropTypes"
-                  DisplayName="Embed Interop Types"
-                  Description="Indicates whether types defined in this assembly will be embedded into the target assembly.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="ProjectReference" HasConfigurationCondition="False" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
+  <BoolProperty Name="EmbedInteropTypes"
+    DisplayName="Embed Interop Types"
+    Description="Indicates whether types defined in this assembly will be embedded into the target assembly.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="ProjectReference" HasConfigurationCondition="False" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
 
-    <EnumProperty Name="FileType"
-                  ReadOnly="True"
-                  Visible="False"
-                  DisplayName="File Type"
-                  Description="The file type of the reference.">
-        <EnumValue Name="Assembly" DisplayName=".NET assembly" />
-        <EnumValue Name="ActiveX" DisplayName="COM type library" />
-        <EnumValue Name="Native Assembly" DisplayName="Native Assembly" />
-    </EnumProperty>
+  <EnumProperty Name="FileType"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="File Type"
+    Description="The file type of the reference.">
+    <EnumValue Name="Assembly" DisplayName=".NET assembly" />
+    <EnumValue Name="ActiveX" DisplayName="COM type library" />
+    <EnumValue Name="Native Assembly" DisplayName="Native Assembly" />
+  </EnumProperty>
 
-    <StringProperty Name="Identity"
-                    ReadOnly="True"
-                    DisplayName="Identity"
-                    Description="Security identity of the referenced assembly (see System.Reflection.Assembly.Evidence or System.Security.Policy.Evidence).">
-        <StringProperty.DataSource>
-            <DataSource PersistedName="{}{Identity}" />
-        </StringProperty.DataSource>
-    </StringProperty>
+  <StringProperty Name="Identity"
+    ReadOnly="True"
+    DisplayName="Identity"
+    Description="Security identity of the referenced assembly (see System.Reflection.Assembly.Evidence or System.Security.Policy.Evidence).">
+    <StringProperty.DataSource>
+      <DataSource PersistedName="{}{Identity}" />
+    </StringProperty.DataSource>
+  </StringProperty>
 
-    <StringProperty Name="ResolvedPath"
-                    ReadOnly="True"
-                    DisplayName="Path"
-                    Description="Location of the file being referenced.">
-        <StringProperty.DataSource>
-            <DataSource PersistedName="Identity" />
-        </StringProperty.DataSource>
-    </StringProperty>
+  <StringProperty Name="ResolvedPath"
+    ReadOnly="True"
+    DisplayName="Path"
+    Description="Location of the file being referenced.">
+    <StringProperty.DataSource>
+      <DataSource PersistedName="Identity" />
+    </StringProperty.DataSource>
+  </StringProperty>
 
-    <StringProperty Name="RuntimeVersion"
-                    ReadOnly="True"
-                    Visible="False"
-                    DisplayName="Runtime Version"
-                    Description="Version of the .NET runtime this assembly was compiled against.">
-    </StringProperty>
+  <StringProperty Name="RuntimeVersion"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Runtime Version"
+    Description="Version of the .NET runtime this assembly was compiled against.">
+  </StringProperty>
 
-    <BoolProperty Name="SpecificVersion" 
-                  DisplayName="Specific Version"
-                  Visible="False"
-                  Description="Indicates whether this assembly can be resolved without regard to multi-targeting rules for assembly resolution." />
+  <BoolProperty Name="SpecificVersion"
+    DisplayName="Specific Version"
+    Visible="False"
+    Description="Indicates whether this assembly can be resolved without regard to multi-targeting rules for assembly resolution." />
 
-    <BoolProperty Name="StrongName"
-                  ReadOnly="True"
-                  Visible="False"
-                  DisplayName="Strong Name"
-                  Description="True indicates that the reference has been signed with a key-pair.">
-    </BoolProperty>
+  <BoolProperty Name="StrongName"
+    ReadOnly="True"
+    Visible="False"
+    DisplayName="Strong Name"
+    Description="True indicates that the reference has been signed with a key-pair.">
+  </BoolProperty>
 
-    <StringProperty Name="Version"
-                    ReadOnly="True"
-                    DisplayName="Version"
-                    Description="Version of reference.">
-    </StringProperty>
+  <StringProperty Name="Version"
+    ReadOnly="True"
+    DisplayName="Version"
+    Description="Version of reference.">
+  </StringProperty>
 
-    <StringProperty Name="RequiredTargetFramework" DisplayName="Required Target Framework" Visible="False" />
-    <StringProperty Name="HintPath" Visible="false" />
-    <StringProperty Name="SDKIdentity" Visible="false" />
+  <StringProperty Name="RequiredTargetFramework" DisplayName="Required Target Framework" Visible="False" />
+  <StringProperty Name="HintPath" Visible="false" />
+  <StringProperty Name="SDKIdentity" Visible="false" />
 
-    <!-- This is the metadata we store on the reference item when we add it. -->
-    <BoolProperty Name="IsWinMDFile" Visible="false" Description="Indicates whether the project system ascertained that this is a WinMD (as opposed to an assembly)" />
-    <StringProperty Name="Project" 
-                    Visible="False"
-                    Description="the Guid the solution tracks an individual project reference target with" />
+  <!-- This is the metadata we store on the reference item when we add it. -->
+  <BoolProperty Name="IsWinMDFile" Visible="false" Description="Indicates whether the project system ascertained that this is a WinMD (as opposed to an assembly)" />
+  <StringProperty Name="Project"
+    Visible="False"
+    Description="the Guid the solution tracks an individual project reference target with" />
 
-    <!-- These are metadata added to the resolved item by MSBuild that we don't show to the user but use internally. -->
-    <BoolProperty Name="WinMDFile" Visible="false" ReadOnly="True" Description="Indicates whether the build system ascertained that this is a WinMD (as opposed to an assembly)" />
-    <StringProperty Name="OriginalItemSpec" Visible="False" ReadOnly="True" Description="The evaluated item name of the original reference item whose resolution resulted in this resolved reference item." />
-    <StringProperty Name="FusionName" Visible="False" ReadOnly="True" />
-    <StringProperty Name="Name" Visible="false" ReadOnly="True" />
-</Rule>
+  <!-- These are metadata added to the resolved item by MSBuild that we don't show to the user but use internally. -->
+  <BoolProperty Name="WinMDFile" Visible="false" ReadOnly="True" Description="Indicates whether the build system ascertained that this is a WinMD (as opposed to an assembly)" />
+  <StringProperty Name="OriginalItemSpec" Visible="False" ReadOnly="True" Description="The evaluated item name of the original reference item whose resolution resulted in this resolved reference item." />
+  <StringProperty Name="FusionName" Visible="False" ReadOnly="True" />
+  <StringProperty Name="Name" Visible="false" ReadOnly="True" />
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/Scc.xaml b/src/Tasks/XamlRules/Scc.xaml
index 155f08b65da..1c07a54454d 100644
--- a/src/Tasks/XamlRules/Scc.xaml
+++ b/src/Tasks/XamlRules/Scc.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="SourceControl"
@@ -13,4 +12,4 @@
   <StringProperty Name="SccProvider" />
   <StringProperty Name="SccAuxPath" />
   <StringProperty Name="SccLocalPath" />
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/SpecialFolder.xaml b/src/Tasks/XamlRules/SpecialFolder.xaml
index 9cbbebef564..cbeb1cc0d71 100644
--- a/src/Tasks/XamlRules/SpecialFolder.xaml
+++ b/src/Tasks/XamlRules/SpecialFolder.xaml
@@ -1,24 +1,23 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
-	Name="SpecialFolder"
-	DisplayName="General"
-	PageTemplate="generic"
-	Description="Special folders"
-	xmlns="http://schemas.microsoft.com/build/2009/properties">
-	<Rule.DataSource>
-		<DataSource Persistence="ProjectInstance" HasConfigurationCondition="False" ItemType="SpecialFolder" />
-	</Rule.DataSource>
+  Name="SpecialFolder"
+  DisplayName="General"
+  PageTemplate="generic"
+  Description="Special folders"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
+  <Rule.DataSource>
+    <DataSource Persistence="ProjectInstance" HasConfigurationCondition="False" ItemType="SpecialFolder" />
+  </Rule.DataSource>
 
-	<StringProperty Name="Identity" Visible="false" ReadOnly="true" Category="Misc" />
-	<StringProperty Name="FullPath" DisplayName="Full Path" ReadOnly="true" Category="Misc" />
+  <StringProperty Name="Identity" Visible="false" ReadOnly="true" Category="Misc" />
+  <StringProperty Name="FullPath" DisplayName="Full Path" ReadOnly="true" Category="Misc" />
     <StringProperty Name="FileNameAndExtension" DisplayName="Folder Name" ReadOnly="true" Category="Misc">
-        <StringProperty.DataSource>
-            <DataSource Persistence="ProjectInstance" ItemType="SpecialFolder" PersistedName="FileNameAndExtension" />
-        </StringProperty.DataSource>
+      <StringProperty.DataSource>
+        <DataSource Persistence="ProjectInstance" ItemType="SpecialFolder" PersistedName="FileNameAndExtension" />
+      </StringProperty.DataSource>
     </StringProperty>
     <EnumProperty Name="DisableAddItem" Visible="False">
-        <EnumValue Name="Recursive" />
-        <EnumValue Name="TopDirectoryOnly" />
+      <EnumValue Name="Recursive" />
+      <EnumValue Name="TopDirectoryOnly" />
     </EnumProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/SubProject.xaml b/src/Tasks/XamlRules/SubProject.xaml
index bc479db7729..a887c54313f 100644
--- a/src/Tasks/XamlRules/SubProject.xaml
+++ b/src/Tasks/XamlRules/SubProject.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="SubProject"
@@ -13,4 +12,4 @@
   <StringProperty Name="ProjectTypeGuid" Visible="False" />
   <StringProperty Name="ProjectId" Visible="False" />
   <BoolProperty Name="VirtualProject" Visible="False" />
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/VisualBasic.BrowseObject.xaml b/src/Tasks/XamlRules/VisualBasic.BrowseObject.xaml
index 6da44dd8555..266cb074fdb 100644
--- a/src/Tasks/XamlRules/VisualBasic.BrowseObject.xaml
+++ b/src/Tasks/XamlRules/VisualBasic.BrowseObject.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="VisualBasic"
@@ -17,50 +16,50 @@
   </Rule.Categories>
 
   <DynamicEnumProperty
-      Name="{}{ItemType}"
-      DisplayName="Build Action"
-      Category="Advanced"
-      Description="How the file relates to the build and deployment processes."
-      EnumProvider="ItemTypes" />
+    Name="{}{ItemType}"
+    DisplayName="Build Action"
+    Category="Advanced"
+    Description="How the file relates to the build and deployment processes."
+    EnumProvider="ItemTypes" />
 
   <EnumProperty
-      Name="CopyToOutputDirectory"
-      DisplayName="Copy to Output Directory"
-      Category="Advanced"
-      Description="Specifies the source file will be copied to the output directory.">
+    Name="CopyToOutputDirectory"
+    DisplayName="Copy to Output Directory"
+    Category="Advanced"
+    Description="Specifies the source file will be copied to the output directory.">
     <EnumValue Name="Never" DisplayName="Do not copy" />
     <EnumValue Name="Always" DisplayName="Copy always" />
     <EnumValue Name="PreserveNewest" DisplayName="Copy if newer" />
   </EnumProperty>
 
   <StringProperty
-      Name="Identity"
-      Visible="false"
-      ReadOnly="true"
-      Category="Misc"
-      Description="The item specified in the Include attribute.">
+    Name="Identity"
+    Visible="false"
+    ReadOnly="true"
+    Category="Misc"
+    Description="The item specified in the Include attribute.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="Identity" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FullPath"
-      DisplayName="Full Path"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Location of the file.">
+    Name="FullPath"
+    DisplayName="Full Path"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Location of the file.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="FullPath" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FileNameAndExtension"
-      DisplayName="File Name"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Name of the file or folder.">
+    Name="FileNameAndExtension"
+    DisplayName="File Name"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Name of the file or folder.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="FileNameAndExtension" />
     </StringProperty.DataSource>
@@ -85,4 +84,4 @@
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="Extension" />
     </StringProperty.DataSource>
   </StringProperty>
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/VisualBasic.ProjectItemsSchema.xaml b/src/Tasks/XamlRules/VisualBasic.ProjectItemsSchema.xaml
index 4010206fbc5..08fd874b0d5 100644
--- a/src/Tasks/XamlRules/VisualBasic.ProjectItemsSchema.xaml
+++ b/src/Tasks/XamlRules/VisualBasic.ProjectItemsSchema.xaml
@@ -1,16 +1,14 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <ProjectSchemaDefinitions
-    xmlns="http://schemas.microsoft.com/build/2009/properties">
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
 
-    <ContentType
-        Name="VisualBasicFile"
-        DisplayName="VB file"
-        ItemType="Compile">
-    </ContentType>
+  <ContentType
+    Name="VisualBasicFile"
+    DisplayName="VB file"
+    ItemType="Compile">
+  </ContentType>
 
-    <ItemType Name="Compile" DisplayName="VB compiler"/>
-
-	<FileExtension Name=".vb" ContentType="VisualBasicFile"/>
-</ProjectSchemaDefinitions>
+  <ItemType Name="Compile" DisplayName="VB compiler"/>
 
+  <FileExtension Name=".vb" ContentType="VisualBasicFile"/>
+</ProjectSchemaDefinitions>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/VisualBasic.xaml b/src/Tasks/XamlRules/VisualBasic.xaml
index b2ed3dfa33c..596eee397f4 100644
--- a/src/Tasks/XamlRules/VisualBasic.xaml
+++ b/src/Tasks/XamlRules/VisualBasic.xaml
@@ -1,4 +1,3 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
   Name="VisualBasic"
@@ -17,50 +16,50 @@
   </Rule.Categories>
 
   <DynamicEnumProperty
-      Name="{}{ItemType}"
-      DisplayName="Build Action"
-      Category="Advanced"
-      Description="How the file relates to the build and deployment processes."
-      EnumProvider="ItemTypes" />
+    Name="{}{ItemType}"
+    DisplayName="Build Action"
+    Category="Advanced"
+    Description="How the file relates to the build and deployment processes."
+    EnumProvider="ItemTypes" />
 
   <EnumProperty
-      Name="CopyToOutputDirectory"
-      DisplayName="Copy to Output Directory"
-      Category="Advanced"
-      Description="Specifies the source file will be copied to the output directory.">
+    Name="CopyToOutputDirectory"
+    DisplayName="Copy to Output Directory"
+    Category="Advanced"
+    Description="Specifies the source file will be copied to the output directory.">
     <EnumValue Name="Never" DisplayName="Do not copy" />
     <EnumValue Name="Always" DisplayName="Copy always" />
     <EnumValue Name="PreserveNewest" DisplayName="Copy if newer" />
   </EnumProperty>
 
   <StringProperty
-      Name="Identity"
-      Visible="false"
-      ReadOnly="true"
-      Category="Misc"
-      Description="The item specified in the Include attribute.">
+    Name="Identity"
+    Visible="false"
+    ReadOnly="true"
+    Category="Misc"
+    Description="The item specified in the Include attribute.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="Identity" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FullPath"
-      DisplayName="Full Path"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Location of the file.">
+    Name="FullPath"
+    DisplayName="Full Path"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Location of the file.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="FullPath" />
     </StringProperty.DataSource>
   </StringProperty>
 
   <StringProperty
-      Name="FileNameAndExtension"
-      DisplayName="File Name"
-      ReadOnly="true"
-      Category="Misc"
-      Description="Name of the file or folder.">
+    Name="FileNameAndExtension"
+    DisplayName="File Name"
+    ReadOnly="true"
+    Category="Misc"
+    Description="Name of the file or folder.">
     <StringProperty.DataSource>
       <DataSource Persistence="Intrinsic" ItemType="Compile" PersistedName="FileNameAndExtension" />
     </StringProperty.DataSource>
@@ -81,4 +80,4 @@
   <StringProperty Name="LastGenOutput" Visible="false" Description="The filename of the last file generated as a result of the SFG." />
   <BoolProperty Name="DesignTime" Visible="false" Description="A value indicating whether this file has a designer." />
   <BoolProperty Name="AutoGen" Visible="false" Description="A value indicating whether this is a generated file." />
-</Rule>
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/assemblyreference.xaml b/src/Tasks/XamlRules/assemblyreference.xaml
index a7eb69ee710..95d4aaf4fae 100644
--- a/src/Tasks/XamlRules/assemblyreference.xaml
+++ b/src/Tasks/XamlRules/assemblyreference.xaml
@@ -1,47 +1,46 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
-    Name="AssemblyReference"
-    DisplayName="Assembly Reference"
-    PageTemplate="generic"
-    Description="Assembly reference properties"
-    xmlns="http://schemas.microsoft.com/build/2009/properties">
-    <Rule.DataSource>
-        <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" />
-    </Rule.DataSource>
+  Name="AssemblyReference"
+  DisplayName="Assembly Reference"
+  PageTemplate="generic"
+  Description="Assembly reference properties"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
+  <Rule.DataSource>
+    <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" />
+  </Rule.DataSource>
 
-    <StringListProperty Name="Aliases"
-                        DisplayName="Aliases"
-                        Description="A comma-delimited list of aliases to this reference."
-                        Separator="," />
+  <StringListProperty Name="Aliases"
+    DisplayName="Aliases"
+    Description="A comma-delimited list of aliases to this reference."
+    Separator="," />
 
-    <BoolProperty Name="CopyLocal"
-                DisplayName="Copy Local"
-                Description="Indicates whether the reference will be copied to the output directory.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" PersistedName="Private" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
+  <BoolProperty Name="CopyLocal"
+    DisplayName="Copy Local"
+    Description="Indicates whether the reference will be copied to the output directory.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="ProjectFile" ItemType="Reference" HasConfigurationCondition="False" PersistedName="Private" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
 
-    <BoolProperty Name="EmbedInteropTypes"
-                  DisplayName="Embed Interop Types"
-                  Description="Indicates whether types defined in this assembly will be embedded into the target assembly." />
+  <BoolProperty Name="EmbedInteropTypes"
+    DisplayName="Embed Interop Types"
+    Description="Indicates whether types defined in this assembly will be embedded into the target assembly." />
 
-    <BoolProperty Name="SpecificVersion" 
-                  DisplayName="Specific Version"
-                  Description="Indicates whether this assembly can be resolved without regard to multi-targeting rules for assembly resolution.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="AssemblyReference" ItemType="Reference" HasConfigurationCondition="False"/>
-        </BoolProperty.DataSource>
-    </BoolProperty>
+  <BoolProperty Name="SpecificVersion"
+    DisplayName="Specific Version"
+    Description="Indicates whether this assembly can be resolved without regard to multi-targeting rules for assembly resolution.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="AssemblyReference" ItemType="Reference" HasConfigurationCondition="False"/>
+    </BoolProperty.DataSource>
+  </BoolProperty>
 
-    <StringProperty Name="RequiredTargetFramework" DisplayName="Required Target Framework" Visible="False" />
-    <StringProperty Name="HintPath" Visible="false" />
-    <StringProperty Name="SDKName" Visible="false" />
-    <BoolProperty Name="IsWinMDFile" Visible="false" />
-    <StringProperty Name="ImageRuntime"
-                    DisplayName="Runtime Version"
-                    Description="The CLR runtime version targeted by this assembly."
-                    Visible="False"
-                    ReadOnly="True" />
-</Rule>
+  <StringProperty Name="RequiredTargetFramework" DisplayName="Required Target Framework" Visible="False" />
+  <StringProperty Name="HintPath" Visible="false" />
+  <StringProperty Name="SDKName" Visible="false" />
+  <BoolProperty Name="IsWinMDFile" Visible="false" />
+  <StringProperty Name="ImageRuntime"
+    DisplayName="Runtime Version"
+    Description="The CLR runtime version targeted by this assembly."
+    Visible="False"
+    ReadOnly="True" />
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/comreference.xaml b/src/Tasks/XamlRules/comreference.xaml
index 164f0e736be..0cea2c8e4c3 100644
--- a/src/Tasks/XamlRules/comreference.xaml
+++ b/src/Tasks/XamlRules/comreference.xaml
@@ -1,20 +1,19 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
-	Name="ComReference"
-	DisplayName="COM Reference"
-	PageTemplate="generic"
-	Description="COM reference properties"
-	xmlns="http://schemas.microsoft.com/build/2009/properties">
-	<Rule.DataSource>
-		<DataSource Persistence="ProjectFile" ItemType="COMReference" HasConfigurationCondition="False" />
-	</Rule.DataSource>
-	<StringProperty Name="Guid" DisplayName="CLSID"
-					Description="The GUID of the COM server." />
-	<StringProperty Name="Lcid" DisplayName="Locale"
-					Description="The LCID of the COM server." />
-	<IntProperty Name="VersionMajor" />
-	<IntProperty Name="VersionMinor" />
-	<BoolProperty Name="Isolated" />
-	<StringProperty Name="WrapperTool" />
-</Rule>
+  Name="ComReference"
+  DisplayName="COM Reference"
+  PageTemplate="generic"
+  Description="COM reference properties"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
+  <Rule.DataSource>
+    <DataSource Persistence="ProjectFile" ItemType="COMReference" HasConfigurationCondition="False" />
+  </Rule.DataSource>
+  <StringProperty Name="Guid" DisplayName="CLSID"
+          Description="The GUID of the COM server." />
+  <StringProperty Name="Lcid" DisplayName="Locale"
+          Description="The LCID of the COM server." />
+  <IntProperty Name="VersionMajor" />
+  <IntProperty Name="VersionMinor" />
+  <BoolProperty Name="Isolated" />
+  <StringProperty Name="WrapperTool" />
+</Rule>
\ No newline at end of file
diff --git a/src/Tasks/XamlRules/projectreference.xaml b/src/Tasks/XamlRules/projectreference.xaml
index 1526db5784b..c00b40058b9 100644
--- a/src/Tasks/XamlRules/projectreference.xaml
+++ b/src/Tasks/XamlRules/projectreference.xaml
@@ -1,46 +1,45 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
 <!--Copyright, Microsoft Corporation, All rights reserved.-->
 <Rule
-	Name="ProjectReference"
-	DisplayName="Project Reference"
-	PageTemplate="generic"
-	Description="Project reference properties"
-	xmlns="http://schemas.microsoft.com/build/2009/properties">
-
-    <Rule.DataSource>
-        <DataSource Persistence="ProjectFile" ItemType="ProjectReference" HasConfigurationCondition="False" />
-    </Rule.DataSource>
-
-    <BoolProperty Name="ReferenceOutputAssembly"
-                  DisplayName="Reference Output Assembly"
-				  Description="A value indicating whether the compiler should include a reference to the target project's primary output assembly." />
-
-    <BoolProperty Name="Private"
-                  DisplayName="Copy Local"
-				  Description="Indicates whether the primary output of the reference target should be copied into this project's output directory, when that metadata is set on an unresolved reference." />
-
-    <BoolProperty Name="CopyLocalSatelliteAssemblies"
-                  DisplayName="Copy Local Satellite Assemblies"
-				  Description="Indicates whether the satellite assemblies of the reference target should be copied into this project's output directory." />
-
-    <BoolProperty Name="LinkLibraryDependencies" Visible="False" />
-
-    <BoolProperty Name="UseLibraryDependencyInputs" Visible="False" />
-
-    <StringProperty Name="Project" 
-                    Visible="False"
-                    Description="the Guid the solution tracks an individual project reference target with" />
-
-    <StringProperty Name="ReferencedProjectIdentifier" Visible="False" Description="The old (VS2010 beta) way to store the Guid the solution tracks an individual project reference target with" />
-
-    <BoolProperty Name="CopyLocal"
-                  DisplayName="Copy Local"
-                  Description="Indicates whether the reference will be copied to the output directory.">
-        <BoolProperty.DataSource>
-            <DataSource Persistence="ProjectFile"
-                        ItemType="ProjectReference"
-                        HasConfigurationCondition="False"
-                        PersistedName="Private" />
-        </BoolProperty.DataSource>
-    </BoolProperty>
-</Rule>
+  Name="ProjectReference"
+  DisplayName="Project Reference"
+  PageTemplate="generic"
+  Description="Project reference properties"
+  xmlns="http://schemas.microsoft.com/build/2009/properties">
+
+  <Rule.DataSource>
+    <DataSource Persistence="ProjectFile" ItemType="ProjectReference" HasConfigurationCondition="False" />
+  </Rule.DataSource>
+
+  <BoolProperty Name="ReferenceOutputAssembly"
+    DisplayName="Reference Output Assembly"
+    Description="A value indicating whether the compiler should include a reference to the target project's primary output assembly." />
+
+  <BoolProperty Name="Private"
+    DisplayName="Copy Local"
+    Description="Indicates whether the primary output of the reference target should be copied into this project's output directory, when that metadata is set on an unresolved reference." />
+
+  <BoolProperty Name="CopyLocalSatelliteAssemblies"
+    DisplayName="Copy Local Satellite Assemblies"
+    Description="Indicates whether the satellite assemblies of the reference target should be copied into this project's output directory." />
+
+  <BoolProperty Name="LinkLibraryDependencies" Visible="False" />
+
+  <BoolProperty Name="UseLibraryDependencyInputs" Visible="False" />
+
+  <StringProperty Name="Project"
+    Visible="False"
+    Description="the Guid the solution tracks an individual project reference target with" />
+
+  <StringProperty Name="ReferencedProjectIdentifier" Visible="False" Description="The old (VS2010 beta) way to store the Guid the solution tracks an individual project reference target with" />
+
+  <BoolProperty Name="CopyLocal"
+    DisplayName="Copy Local"
+    Description="Indicates whether the reference will be copied to the output directory.">
+    <BoolProperty.DataSource>
+      <DataSource Persistence="ProjectFile"
+        ItemType="ProjectReference"
+        HasConfigurationCondition="False"
+        PersistedName="Private" />
+    </BoolProperty.DataSource>
+  </BoolProperty>
+</Rule>
\ No newline at end of file
