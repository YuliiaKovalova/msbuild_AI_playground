diff --git a/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisLoggingContext.cs b/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisLoggingContext.cs
index 95b62f0e202..a80f885b862 100644
--- a/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisLoggingContext.cs
+++ b/src/Build/BuildCheck/Infrastructure/AnalysisContext/AnalysisLoggingContext.cs
@@ -15,7 +15,11 @@ namespace Microsoft.Build.Experimental.BuildCheck;
 /// <summary>
 /// <see cref="IAnalysisContext"/> that uses <see cref="ILoggingService"/> to dispatch.
 /// </summary>
-internal class AnalysisLoggingContext : IAnalysisContext
+/// <remarks>
+/// Making this a record struct to avoid allocations (unless called through interface - which leads to boxing).
+/// This is wanted since this can be used in a hot path (of property reads and writes)
+/// </remarks>
+internal readonly record struct AnalysisLoggingContext : IAnalysisContext
 {
     private readonly ILoggingService _loggingService;
     private readonly BuildEventContext _eventContext;
diff --git a/src/Build/BuildCheck/Infrastructure/IBuildEngineDataConsumer.cs b/src/Build/BuildCheck/Infrastructure/IBuildEngineDataConsumer.cs
index 200990a6f85..50faba677e7 100644
--- a/src/Build/BuildCheck/Infrastructure/IBuildEngineDataConsumer.cs
+++ b/src/Build/BuildCheck/Infrastructure/IBuildEngineDataConsumer.cs
@@ -53,6 +53,8 @@ internal interface IBuildEngineDataRouter
 {
     void ProcessPropertyRead(
         PropertyReadInfo propertyReadInfo,
+        // This is intentionally AnalysisLoggingContext instead of IAnalysisContext - to avoid boxing allocations
+        //  on a hot path of properties reading (same for writing)
         AnalysisLoggingContext analysisContext);
 
     /// <summary>
