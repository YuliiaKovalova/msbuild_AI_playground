diff --git a/.vsts-dotnet.yml b/.vsts-dotnet.yml
index ac3e35742d3..ba02b46bb59 100644
--- a/.vsts-dotnet.yml
+++ b/.vsts-dotnet.yml
@@ -1,135 +1,140 @@
-queue:
-  name: VSEng-MicroBuildVS2017
-  timeoutInMinutes: 360
-trigger: none
 variables:
-  BuildConfiguration: 'Release'
-  TeamName: MSBuild
-steps:
-- task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
-  displayName: Install Signing Plugin
-  inputs:
-    signType: '$(SignType)'
-
-- task: ms-vseng.MicroBuildTasks.a9799c06-320f-4175-8756-31cd731bd5f3.MicroBuildIBCMergePlugin@0
-  displayName: Install IBCMerge Plugin
-
-- task: CmdLine@1
-  displayName: save build number
-  inputs:
-    filename: echo
-    arguments: '##vso[task.setvariable variable=BUILD_BUILDNUMBER_SAVED]%BUILD_BUILDNUMBER%'
-  condition: always()
-
-- task: CmdLine@1
-  displayName: Print Vars
-  inputs:
-    filename: set
-  condition: always()
-
-- task: CmdLine@1
-  displayName: Bogus build to have nerdbank.GitVersioning set the version for the swix plugin
-  inputs:
-    filename: '$(comspec)'
-    arguments: '/c "call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat" & msbuild /restore $(Build.Repository.LocalPath)\build\SetMicrobuildVersion\SetMicrobuildVersion.csproj"'
-
-- task: ms-vseng.MicroBuildTasks.32f78468-e895-4f47-962c-58a699361df8.MicroBuildSwixPlugin@1
-  displayName: Install Swix Plugin
-  inputs:
-    dropName: 'Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)/$(Build.BuildId)'
-
-- task: CmdLine@1
-  displayName: restore build number
-  inputs:
-    filename: echo
-    arguments: '##vso[build.updatebuildnumber]%BUILD_BUILDNUMBER_SAVED%'
-  condition: always()
-
-- task: CmdLine@1
-  displayName: Print Vars
-  inputs:
-    filename: set
-  condition: always()
-
-- task: CmdLine@1
-  displayName: Run build.cmd
-  inputs:
-    filename: '$(comspec)'
-    arguments: '/c "call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat" & $(Build.Repository.LocalPath)\build.cmd -pack -sign -configuration Release -properties /p:SignType=$(SignType)"'
-
-- task: CmdLine@1
-  displayName: Print bin contents
-  inputs:
-    filename: dir
-    arguments: '/s /b artifacts\>artifacts\$(BuildConfiguration)\log\BinFileListing.log'
-  condition: always()
-
-- task: PublishBuildArtifacts@1
-  displayName: 'Publish Artifact: logs'
-  inputs:
-    PathtoPublish: 'artifacts\$(BuildConfiguration)\log'
-    ArtifactName: logs
-  condition: succeededOrFailed()
-
-- task: PublishBuildArtifacts@1
-  displayName: 'Publish Artifact: packages'
-  inputs:
-    PathtoPublish: 'artifacts\$(BuildConfiguration)\packages'
-    ArtifactName: packages
-  condition: succeededOrFailed()
-
-- task: PublishBuildArtifacts@1
-  displayName: 'Publish Artifact: vsix'
-  inputs:
-    PathtoPublish: 'artifacts\$(BuildConfiguration)\VSSetup\Insertion'
-    ArtifactName: vsix
-  condition: succeededOrFailed()
-
-- task: CopyFiles@2
-  displayName: Collect Symbols
-  inputs:
-    Contents: 'artifacts\$(BuildConfiguration)\bin\**\*.pdb'
-    TargetFolder: '$(Build.ArtifactStagingDirectory)/symbols'
-    CleanTargetFolder: true
-
-- task: PublishBuildArtifacts@1
-  displayName: 'Publish Artifact: symbols'
-  inputs:
-    PathtoPublish: '$(Build.ArtifactStagingDirectory)/symbols'
-    ArtifactName: symbols
-  condition: succeededOrFailed()
-
-- task: ms-vseng.MicroBuildTasks.32f78468-e895-4f47-962c-58a699361df8.MicroBuildSwixPlugin@1
-  displayName: Reinstall Swix Plugin (to pick up new build number)
-  inputs:
-    dropName: 'Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)/$(Build.BuildId)'
-  enabled: false
-
-- task: ms-vseng.MicroBuildTasks.4305a8de-ba66-4d8b-b2d1-0dc4ecbbf5e8.MicroBuildUploadVstsDropFolder@1
-  displayName: Upload VSTS Drop
-  inputs:
-    DropFolder: 'artifacts\$(BuildConfiguration)\VSSetup\Insertion'
-
-- task: PublishSymbols@1
-  displayName: Index Sources
-  inputs:
-    SearchPattern: '**/*.pdb'
-    SymbolsFolder: '$(Build.ArtifactStagingDirectory)\symbols'
-
-- task: ms-vscs-artifact.build-tasks.artifactSymbolTask-1.artifactSymbolTask@0
-  displayName: Publish Symbols to Artifact Services
-  inputs:
-    symbolServiceURI: 'https://microsoft.artifacts.visualstudio.com/DefaultCollection'
-    sourcePath: '$(Build.ArtifactStagingDirectory)\symbols'
-    usePat: false
-
-- task: PowerShell@1
-  displayName: Microbuild health checks
-  inputs:
-    scriptName: 'build/MicrobuildTest.ps1'
-  enabled: false
-  continueOnError: true
-
-- task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
-  displayName: Execute cleanup tasks
-
+- name: BuildConfiguration
+  value: 'Release'
+- name: TeamName
+  value: MSBuild
+
+resources:
+  repositories:
+  - repository: MicroBuildTemplate
+    type: git
+    name: 1ESPipelineTemplates/MicroBuildTemplate
+    ref: refs/tags/release
+
+extends:
+  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
+  parameters:
+    pool:
+      name: VSEngSS-MicroBuild2017-1ES
+    stages:
+    - stage: stage
+      jobs:
+      - job: job
+        templateContext:
+          mb:
+            signing:
+              enabled: true
+              signType: $(SignType)
+          outputs:
+          - output: pipelineArtifact
+            displayName: 'Publish Artifact: logs'
+            targetPath: 'artifacts\$(BuildConfiguration)\log'
+            artifactName: logs
+            condition: succeededOrFailed()
+          - output: pipelineArtifact
+            displayName: 'Publish Artifact: packages'
+            targetPath: 'artifacts\$(BuildConfiguration)\packages'
+            artifactName: packages
+            condition: succeededOrFailed()
+          - output: pipelineArtifact
+            displayName: 'Publish Artifact: vsix'
+            targetPath: 'artifacts\$(BuildConfiguration)\VSSetup\Insertion'
+            artifactName: vsix
+            condition: succeededOrFailed()
+          - output: pipelineArtifact
+            displayName: 'Publish Artifact: symbols'
+            targetPath: '$(Build.ArtifactStagingDirectory)/symbols'
+            artifactName: symbols
+            condition: succeededOrFailed()
+          - output: microBuildVstsDrop
+            displayName: 'Upload VSTS Drop'
+            dropFolder: 'artifacts\$(BuildConfiguration)\VSSetup\Insertion'
+            dropRetentionDays: 90
+            accessToken: '$(System.AccessToken)'
+            dropServiceUri: 'https://devdiv.artifacts.visualstudio.com'
+            vsDropServiceUri: 'https://vsdrop.corp.microsoft.com/file/v1'
+        steps:        
+        - task: MicroBuildIBCMergePlugin@1
+          displayName: Install IBCMerge Plugin
+
+        - task: CmdLine@1
+          displayName: save build number
+          inputs:
+            filename: echo
+            arguments: '##vso[task.setvariable variable=BUILD_BUILDNUMBER_SAVED]%BUILD_BUILDNUMBER%'
+          condition: always()
+
+        - task: CmdLine@1
+          displayName: Print Vars
+          inputs:
+            filename: set
+          condition: always()
+
+        - task: MSBuild@1
+          displayName: 'Get version from Nerdbank.GitVersioning'
+          inputs:
+            solution: '$(Build.Repository.LocalPath)\build\SetMicrobuildVersion\SetMicrobuildVersion.csproj'
+            msbuildArguments: '/t:OutputVersionInfo /restore'
+            platform: 'AnyCPU'
+            configuration: 'Release'
+
+        - task: MicroBuildSwixPlugin@4
+          displayName: Install Swix Plugin
+          inputs:
+            dropName: 'Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)/$(Build.BuildId)'
+
+        - task: CmdLine@1
+          displayName: restore build number
+          inputs:
+            filename: echo
+            arguments: '##vso[build.updatebuildnumber]%BUILD_BUILDNUMBER_SAVED%'
+          condition: always()
+
+        - task: CmdLine@1
+          displayName: Print Vars
+          inputs:
+            filename: set
+          condition: always()
+        
+        - task: CmdLine@1
+          displayName: Run build.cmd
+          inputs:
+            filename: '$(comspec)'
+            arguments: '/c "call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat" & $(Build.Repository.LocalPath)\build.cmd -pack -sign -configuration Release -properties /p:SignType=$(SignType)"'
+
+        - task: CmdLine@1
+          displayName: Print bin contents
+          inputs:
+            filename: dir
+            arguments: '/s /b artifacts\>artifacts\$(BuildConfiguration)\log\BinFileListing.log'
+          condition: always()
+
+        - task: CopyFiles@2
+          displayName: Collect Symbols
+          inputs:
+            Contents: 'artifacts\$(BuildConfiguration)\bin\**\*.pdb'
+            TargetFolder: '$(Build.ArtifactStagingDirectory)/symbols'
+            CleanTargetFolder: true
+
+        - task: MicroBuildSwixPlugin@4
+          displayName: Reinstall Swix Plugin (to pick up new build number)
+          inputs:
+            dropName: 'Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)/$(Build.BuildId)'
+          enabled: false
+
+        - task: PublishSymbols@2
+          displayName: Index Sources & Publish Symbols to Artifact Services
+          inputs:
+            SearchPattern: '**/*.pdb'
+            SymbolsFolder: '$(Build.ArtifactStagingDirectory)\symbols'
+            SymbolServerType: 'TeamServices'
+
+        - task: PowerShell@1
+          displayName: Microbuild health checks
+          inputs:
+            scriptName: 'build/MicrobuildTest.ps1'
+          enabled: false
+          continueOnError: true
+
+        - task: MicroBuildCleanup@1
+          displayName: Execute cleanup tasks
\ No newline at end of file
diff --git a/Directory.Build.props b/Directory.Build.props
index e53fe3f0284..ef1c5c9c84f 100644
--- a/Directory.Build.props
+++ b/Directory.Build.props
@@ -3,6 +3,7 @@
   <PropertyGroup>
     <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
     <Configurations>Debug;Release;Debug-MONO;Release-MONO</Configurations>
+    <RestoreSources>https://devdiv.pkgs.visualstudio.com/_packaging/container-tools-shared/nuget/v3/index.json</RestoreSources>
   </PropertyGroup>
 
   <PropertyGroup>
diff --git a/NuGet.Config b/NuGet.Config
index 5b8cbd527a0..f88d651edf1 100644
--- a/NuGet.Config
+++ b/NuGet.Config
@@ -2,6 +2,6 @@
 <configuration>
   <packageSources>
     <clear />
-    <add key="roslyn-tools" value="https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json" />
+    <add key="roslyn-tools" value="https://devdiv.pkgs.visualstudio.com/_packaging/container-tools-shared/nuget/v3/index.json" />
   </packageSources>
 </configuration>
diff --git a/build/SetMicrobuildVersion/SetMicrobuildVersion.csproj b/build/SetMicrobuildVersion/SetMicrobuildVersion.csproj
index c5fa9a90c65..77316363c49 100644
--- a/build/SetMicrobuildVersion/SetMicrobuildVersion.csproj
+++ b/build/SetMicrobuildVersion/SetMicrobuildVersion.csproj
@@ -1,22 +1,23 @@
-<Project DefaultTargets="GetBuildVersion">
-
-  <Import Project="..\Versions.props" />
+<Project Sdk="Microsoft.NET.Sdk" DefaultTargets="GetBuildVersion">
+  <Import Project="..\Versions.props"/>
 
   <PropertyGroup>
+    <TargetFramework>net46</TargetFramework>
     <ImportDirectoryBuildProps>false</ImportDirectoryBuildProps>
     <ImportDirectoryBuildTargets>false</ImportDirectoryBuildTargets>
-  </PropertyGroup>
 
-   <Import Project="Sdk.props" Sdk="RoslynTools.RepoToolset" />
-
-   <PropertyGroup>
-    <TargetFramework>net46</TargetFramework>
-    <RestoreSources>$(RestoreSources);https://api.nuget.org/v3/index.json</RestoreSources>
   </PropertyGroup>
 
-   <ItemGroup>
-      <PackageReference Include="Nerdbank.GitVersioning" Version="$(GitVersioningVersion)" PrivateAssets="All" />
-   </ItemGroup>
+  <ItemGroup>
+    <PackageReference Include="Nerdbank.GitVersioning" Version="$(GitVersioningVersion)" PrivateAssets="All" />
+  </ItemGroup>
 
-   <Import Project="Sdk.targets" Sdk="RoslynTools.RepoToolset" />
+  <!-- Add a target that will output the version information -->
+  <Target Name="OutputVersionInfo" DependsOnTargets="GetBuildVersion">
+    <Message Importance="High" Text="##vso[task.setvariable variable=SWIX_VERSION]$(Version)" />
+    <Message Importance="High" Text="##vso[task.setvariable variable=SWIX_ASSEMBLY_VERSION]$(AssemblyVersion)" />
+    <Message Importance="High" Text="##vso[task.setvariable variable=SWIX_FILE_VERSION]$(FileVersion)" />
+    <Message Importance="High" Text="##vso[task.setvariable variable=SWIX_PACKAGE_VERSION]$(PackageVersion)" />
+    <Message Importance="High" Text="Version: $(Version)" />
+  </Target>
 </Project>
\ No newline at end of file
diff --git a/build/SignToolData.json b/build/SignToolData.json
index 130cb49b16c..0ecb4c5a222 100644
--- a/build/SignToolData.json
+++ b/build/SignToolData.json
@@ -1,7 +1,7 @@
 {
     "sign": [
         {
-            "certificate": "Microsoft",
+            "certificate": "Microsoft400",
             "strongName": "StrongName",
             "values": [
                 "bin/MSBuild/net46/MSBuild.exe",
@@ -30,14 +30,14 @@
                 "bin/MSBuild/netcoreapp2.1/Microsoft.Build.Tasks.Core.dll",
                 "bin/MSBuild/netcoreapp2.1/Microsoft.Build.Utilities.Core.dll",
 
-                "bin/MSBuild/netcoreapp2.1/*/*.resources.dll",
+                "bin/MSBuild/netcoreapp2.1/*/*.resources.dll"
             ]
         },
         {
             "certificate": "NuGet",
             "strongName": null,
             "values": [
-                "packages/*.nupkg"
+                "packages/Shipping/*.nupkg"
             ]
         },
         {
diff --git a/build/Versions.props b/build/Versions.props
index 952d07a8b38..c204b9a6d4f 100644
--- a/build/Versions.props
+++ b/build/Versions.props
@@ -9,10 +9,7 @@
     <RestoreSources>$(DotNetRestoreSources)</RestoreSources>
     <RestoreSources  Condition="'$(DotNetBuildOffline)' != 'true'">
         $(RestoreSources);
-        https://dotnet.myget.org/F/roslyn/api/v3/index.json;
-        https://dotnet.myget.org/F/nuget-build/api/v3/index.json;
-        https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json;
-        https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json
+        https://devdiv.pkgs.visualstudio.com/_packaging/container-tools-shared/nuget/v3/index.json;
     </RestoreSources>
     <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
   </PropertyGroup>
@@ -69,4 +66,6 @@
     <ShouldlyVersion>3.0.0</ShouldlyVersion>
   </PropertyGroup>
 
-</Project>
+  <Target Name="GetVsixVersion" />
+
+</Project>
\ No newline at end of file
diff --git a/build/build.ps1 b/build/build.ps1
index 59744ffe7b9..351be099e06 100644
--- a/build/build.ps1
+++ b/build/build.ps1
@@ -94,6 +94,9 @@ function InstallDotNetCli {
   $SdkInstallDir = Join-Path $DotNetRoot "sdk\$DotNetCliVersion"
 
   if (!(Test-Path $SdkInstallDir)) {
+    # Initialize LASTEXITCODE before the command to avoid the "not set" error
+    $global:LASTEXITCODE = 0
+    
     # Use Invoke-Expression so that $DotNetInstallVerbosity is not positionally bound when empty
     Invoke-Expression -Command "& '$DotNetInstallScript' -Version $DotNetCliVersion $DotNetInstallVerbosity"
 
diff --git a/global.json b/global.json
index 148ec6869ea..d7639e77703 100644
--- a/global.json
+++ b/global.json
@@ -1,5 +1,5 @@
 {
   "msbuild-sdks": {
-    "RoslynTools.RepoToolset": "1.0.0-beta2-62901-01"
+    "RoslynTools.RepoToolset": "1.1.0-beta3.21064.1"
   }
 }
\ No newline at end of file
diff --git a/setup/Microsoft.Build.swixproj b/setup/Microsoft.Build.swixproj
index 3083fbd5ee1..91981f9c8ec 100644
--- a/setup/Microsoft.Build.swixproj
+++ b/setup/Microsoft.Build.swixproj
@@ -28,7 +28,7 @@
   <ItemGroup>
     <SigningTarget Include="$(OutDir)$(OutputName)"/>
     <FilesToSign Include="@(SigningTarget)">
-      <Authenticode>Vsix</Authenticode>
+      <Authenticode>Microsoft400</Authenticode>
     </FilesToSign>
   </ItemGroup>  
 
