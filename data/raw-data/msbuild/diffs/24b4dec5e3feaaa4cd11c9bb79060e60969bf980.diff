diff --git a/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs b/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
index caa5f83c743..2eb1e88088b 100644
--- a/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
+++ b/ref/Microsoft.Build.Framework/net/Microsoft.Build.Framework.cs
@@ -6,7 +6,7 @@ namespace Microsoft.Build.Framework
     public abstract partial class BuildEngineInterface
     {
         protected BuildEngineInterface() { }
-        public virtual Microsoft.Build.Framework.MessageImportance MinimumRequiredMessageImportance { get { throw null; } }
+        public virtual bool LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) { throw null; }
     }
     [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
     public partial struct BuildEngineResult
diff --git a/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs b/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
index aaa4ae6069f..bd4ea18bb65 100644
--- a/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
+++ b/ref/Microsoft.Build.Framework/netstandard/Microsoft.Build.Framework.cs
@@ -6,7 +6,7 @@ namespace Microsoft.Build.Framework
     public abstract partial class BuildEngineInterface
     {
         protected BuildEngineInterface() { }
-        public virtual Microsoft.Build.Framework.MessageImportance MinimumRequiredMessageImportance { get { throw null; } }
+        public virtual bool LogsMessagesOfImportance(Microsoft.Build.Framework.MessageImportance importance) { throw null; }
     }
     [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
     public partial struct BuildEngineResult
diff --git a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
index 6d5f972d458..9085907a121 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/TaskHost.cs
@@ -888,8 +888,8 @@ internal BuildEngineInterfaceImpl(TaskHost taskHost)
             }
 
             /// <inheritdoc/>
-            public override MessageImportance MinimumRequiredMessageImportance =>
-                _taskHost._taskLoggingContext?.LoggingService.MinimumRequiredMessageImportance ?? MessageImportance.Low;
+            public override bool LogsMessagesOfImportance(MessageImportance importance) =>
+                importance <= (_taskHost._taskLoggingContext?.LoggingService.MinimumRequiredMessageImportance ?? MessageImportance.Low);
         }
 
         public BuildEngineInterface EngineInterface { get; }
diff --git a/src/Framework/BuildEngineInterface.cs b/src/Framework/BuildEngineInterface.cs
index 100b91f46ce..4505b93213f 100644
--- a/src/Framework/BuildEngineInterface.cs
+++ b/src/Framework/BuildEngineInterface.cs
@@ -16,12 +16,15 @@ namespace Microsoft.Build.Framework
     public abstract class BuildEngineInterface
     {
         /// <summary>
-        /// Returns the minimum message importance not guaranteed to be ignored by registered loggers.
+        /// Returns <see langword="true"/> if the given message importance is not guaranteed to be ignored by registered loggers.
         /// </summary>
+        /// <param name="importance">The importance to check.</param>
+        /// <returns>True if messages of the given importance should be logged, false if it's guaranteed that such messages would be ignored.</returns>
         /// <remarks>
-        /// Example: If we know that no logger is interested in MessageImportance.Low, this property returns
-        /// MessageImportance.Normal. If loggers may consume any messages, this property returns MessageImportance.Low.
+        /// Example: If we know that no logger is interested in <see cref="MessageImportance.Low"/>, this method returns <see langword="true"/>
+        /// for <see cref="MessageImportance.Normal"/> and <see cref="MessageImportance.High"/>, and returns <see langword="false"/>
+        /// for <see cref="MessageImportance.Low"/>.
         /// </remarks>
-        public virtual MessageImportance MinimumRequiredMessageImportance => throw new NotImplementedException();
+        public virtual bool LogsMessagesOfImportance(MessageImportance importance) => throw new NotImplementedException();
     }
 }
diff --git a/src/Framework/IBuildEngine10.cs b/src/Framework/IBuildEngine10.cs
index ccae9d13a8c..6e2f3023c00 100644
--- a/src/Framework/IBuildEngine10.cs
+++ b/src/Framework/IBuildEngine10.cs
@@ -10,7 +10,7 @@ namespace Microsoft.Build.Framework
     public interface IBuildEngine10 : IBuildEngine9
     {
         /// <summary>
-        /// 
+        /// Returns the new build engine interface.
         /// </summary>
         BuildEngineInterface EngineInterface { get; }
     }
diff --git a/src/MSBuild/OutOfProcTaskHostNode.cs b/src/MSBuild/OutOfProcTaskHostNode.cs
index 0b31a90e0fa..d493c5c0b1e 100644
--- a/src/MSBuild/OutOfProcTaskHostNode.cs
+++ b/src/MSBuild/OutOfProcTaskHostNode.cs
@@ -501,7 +501,7 @@ private sealed class BuildEngineInterfaceImpl : BuildEngineInterface
             /// <summary>
             /// No logging verbosity optimization in OOP nodes.
             /// </summary>
-            public override MessageImportance MinimumRequiredMessageImportance => MessageImportance.Low;
+            public override bool LogsMessagesOfImportance(MessageImportance importance) => true;
         }
 
         public BuildEngineInterface EngineInterface { get; } = new BuildEngineInterfaceImpl();
diff --git a/src/Shared/TaskLoggingHelper.cs b/src/Shared/TaskLoggingHelper.cs
index 3d12cb49e25..840d770f03f 100644
--- a/src/Shared/TaskLoggingHelper.cs
+++ b/src/Shared/TaskLoggingHelper.cs
@@ -247,7 +247,7 @@ public virtual string GetResourceMessage(string resourceName)
         public bool ShouldLogMessage(MessageImportance importance)
         {
             return BuildEngine is not IBuildEngine10 buildEngine10
-                || importance <= buildEngine10.EngineInterface.MinimumRequiredMessageImportance;
+                || buildEngine10.EngineInterface.LogsMessagesOfImportance(importance);
         }
 
         /// <summary>
