diff --git a/src/MSBuild/TerminalLogger/TerminalLogger.cs b/src/MSBuild/TerminalLogger/TerminalLogger.cs
index ecfb8d26ecc..d5a574badb3 100644
--- a/src/MSBuild/TerminalLogger/TerminalLogger.cs
+++ b/src/MSBuild/TerminalLogger/TerminalLogger.cs
@@ -13,6 +13,8 @@
 using Microsoft.Build.Framework.Logging;
 using System.Globalization;
 using Microsoft.Build.Execution;
+using Microsoft.Build.Utilities;
+
 
 
 #if NET7_0_OR_GREATER
@@ -280,6 +282,11 @@ public void Initialize(IEventSource eventSource)
         eventSource.WarningRaised += WarningRaised;
         eventSource.ErrorRaised += ErrorRaised;
 
+        if (eventSource is IEventSource3 eventSource3)
+        {
+            eventSource3.IncludeTaskInputs();
+        }
+
         if (eventSource is IEventSource4 eventSource4)
         {
             eventSource4.IncludeEvaluationPropertiesAndItems();
@@ -778,9 +785,9 @@ private void TargetFinished(object sender, TargetFinishedEventArgs e)
         }
     }
 
-    private void TryReadSourceControlInformationForProject(BuildEventContext? context, IList<ProjectItemInstance> sourceRoots)
+    private void TryReadSourceControlInformationForProject(BuildEventContext? context, IEnumerable<ITaskItem>? sourceRoots)
     {
-        if (context is null)
+        if (context is null || sourceRoots is null)
         {
             return;
         }
@@ -788,10 +795,10 @@ private void TryReadSourceControlInformationForProject(BuildEventContext? contex
         var projectContext = new ProjectContext(context);
         if (_projects.TryGetValue(projectContext, out Project? project))
         {
-            var sourceControlSourceRoot = sourceRoots.FirstOrDefault(root => root.HasMetadata("SourceControl"));
+            var sourceControlSourceRoot = sourceRoots.FirstOrDefault(root => !string.IsNullOrEmpty(root.GetMetadata("SourceControl")));
             if (sourceControlSourceRoot is not null)
             {
-                project.SourceRoot = sourceControlSourceRoot.EvaluatedInclude.AsMemory();
+                project.SourceRoot = sourceControlSourceRoot.ItemSpec.AsMemory();
             }
         }
     }
@@ -826,9 +833,16 @@ private void MessageRaised(object sender, BuildMessageEventArgs e)
         }
 
         string? message = e.Message;
-        if (e is TaskParameterEventArgs taskArgs && taskArgs.ItemType.Equals("SourceRoot", StringComparison.OrdinalIgnoreCase))
+        if (e is TaskParameterEventArgs taskArgs)
         {
-            TryReadSourceControlInformationForProject(taskArgs.BuildEventContext, taskArgs.Items as IList<ProjectItemInstance>);
+            Debug.WriteLine(taskArgs.BuildEventContext?.TaskId);
+            if (taskArgs.Kind == TaskParameterMessageKind.AddItem)
+            {
+                if (taskArgs.ItemType.Equals("SourceRoot", StringComparison.OrdinalIgnoreCase))
+                {
+                    TryReadSourceControlInformationForProject(taskArgs.BuildEventContext, taskArgs.Items as IList<ProjectItemInstance>);
+                }
+            }
         }
         if (message is not null && e.Importance == MessageImportance.High)
         {
