diff --git a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
index 4b712fc5da3..fcf7564d228 100644
--- a/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
+++ b/src/Build/BackEnd/Components/RequestBuilder/IntrinsicTasks/ItemGroupIntrinsicTask.cs
@@ -625,7 +625,7 @@ private List<ProjectItemInstance> FindItemsMatchingMetadataSpecification(
         /// 1. The metadata table created for the bucket, may be null.
         /// 2. The metadata table derived from the item definition group, may be null.
         /// </summary>
-        private class NestedMetadataTable : IMetadataTable, IItemMetadata
+        private class NestedMetadataTable : IMetadataTable, IItemTypeDefinition
         {
             /// <summary>
             /// The table for all metadata added during expansion
@@ -736,7 +736,7 @@ internal void SetValue(string name, string value)
                 _addTable[name] = value;
             }
 
-            string IItemMetadata.ItemType => _itemType;
+            string IItemTypeDefinition.ItemType => _itemType;
         }
     }
 }
diff --git a/src/Build/Definition/ProjectItemDefinition.cs b/src/Build/Definition/ProjectItemDefinition.cs
index 0969cd8d87d..cfffb456d72 100644
--- a/src/Build/Definition/ProjectItemDefinition.cs
+++ b/src/Build/Definition/ProjectItemDefinition.cs
@@ -26,7 +26,7 @@ namespace Microsoft.Build.Evaluation
     /// ProjectMetadataElement, and these can be added, removed, and modified.
     /// </remarks>
     [DebuggerDisplay("{_itemType} #Metadata={MetadataCount}")]
-    public class ProjectItemDefinition : IKeyed, IMetadataTable, IItemDefinition<ProjectMetadata>, IProjectMetadataParent, IItemMetadata
+    public class ProjectItemDefinition : IKeyed, IMetadataTable, IItemDefinition<ProjectMetadata>, IProjectMetadataParent, IItemTypeDefinition
     {
         /// <summary>
         /// Project that this item definition lives in.
diff --git a/src/Build/Evaluation/Expander.cs b/src/Build/Evaluation/Expander.cs
index a9ba62f45f8..0040d0ccdf3 100644
--- a/src/Build/Evaluation/Expander.cs
+++ b/src/Build/Evaluation/Expander.cs
@@ -1052,7 +1052,7 @@ internal string ExpandSingleMetadata(Match itemMetadataMatch)
                         if ((_options & ExpanderOptions.LogOnItemMetadataSelfReference) != 0 &&
                             _loggingContext != null &&
                             !string.IsNullOrEmpty(metadataName) &&
-                            _metadata is IItemMetadata itemMetadata &&
+                            _metadata is IItemTypeDefinition itemMetadata &&
                             (string.IsNullOrEmpty(itemType) || string.Equals(itemType, itemMetadata.ItemType, StringComparison.Ordinal)))
                         {
                             _loggingContext.LogComment(MessageImportance.High, new BuildEventFileInfo(_elementLocation),
diff --git a/src/Build/Evaluation/IItemMetadata.cs b/src/Build/Evaluation/IItemTypeDefinition.cs
similarity index 89%
rename from src/Build/Evaluation/IItemMetadata.cs
rename to src/Build/Evaluation/IItemTypeDefinition.cs
index d86520b005c..19e62ac48ce 100644
--- a/src/Build/Evaluation/IItemMetadata.cs
+++ b/src/Build/Evaluation/IItemTypeDefinition.cs
@@ -4,7 +4,7 @@
 #nullable disable
 namespace Microsoft.Build.Evaluation;
 
-internal interface IItemMetadata
+internal interface IItemTypeDefinition
 {
     /// <summary>
     /// The item type to which this metadata applies.
diff --git a/src/Build/Instance/ProjectItemDefinitionInstance.cs b/src/Build/Instance/ProjectItemDefinitionInstance.cs
index d8820f0784b..7a4bffd0290 100644
--- a/src/Build/Instance/ProjectItemDefinitionInstance.cs
+++ b/src/Build/Instance/ProjectItemDefinitionInstance.cs
@@ -20,7 +20,7 @@ namespace Microsoft.Build.Execution
     /// Immutable.
     /// </summary>
     [DebuggerDisplay("{_itemType} #Metadata={MetadataCount}")]
-    public class ProjectItemDefinitionInstance : IKeyed, IMetadataTable, IItemDefinition<ProjectMetadataInstance>, ITranslatable, IItemMetadata
+    public class ProjectItemDefinitionInstance : IKeyed, IMetadataTable, IItemDefinition<ProjectMetadataInstance>, ITranslatable, IItemTypeDefinition
     {
         /// <summary>
         /// Item type, for example "Compile", that this item definition applies to
@@ -236,6 +236,6 @@ internal static ProjectItemDefinitionInstance FactoryForDeserialization(ITransla
             return instance;
         }
 
-        string IItemMetadata.ItemType => _itemType;
+        string IItemTypeDefinition.ItemType => _itemType;
     }
 }
diff --git a/src/Build/Instance/ProjectItemInstance.cs b/src/Build/Instance/ProjectItemInstance.cs
index a04ff44b1f4..cf51265757e 100644
--- a/src/Build/Instance/ProjectItemInstance.cs
+++ b/src/Build/Instance/ProjectItemInstance.cs
@@ -34,7 +34,7 @@ public class ProjectItemInstance :
         IMetadataTable,
         ITranslatable,
         IMetadataContainer,
-        IItemMetadata
+        IItemTypeDefinition
     {
         /// <summary>
         /// The project instance to which this item belongs.
@@ -2126,7 +2126,7 @@ public void SetMetadata(IEnumerable<Pair<ProjectMetadataElement, string>> metada
             /// Also, more importantly, because typically the same regular metadata values can be shared by many items,
             /// and keeping item-specific metadata out of it could allow it to be implemented as a copy-on-write table.
             /// </summary>
-            private class BuiltInMetadataTable : IMetadataTable, IItemMetadata
+            private class BuiltInMetadataTable : IMetadataTable, IItemTypeDefinition
             {
                 /// <summary>
                 /// Item type
@@ -2185,7 +2185,7 @@ public string GetEscapedValueIfPresent(string requiredItemType, string name)
                     return value;
                 }
 
-                string IItemMetadata.ItemType => _itemType;
+                string IItemTypeDefinition.ItemType => _itemType;
             }
         }
 
diff --git a/src/Build/Microsoft.Build.csproj b/src/Build/Microsoft.Build.csproj
index 1dfaa4ca883..d8988911513 100644
--- a/src/Build/Microsoft.Build.csproj
+++ b/src/Build/Microsoft.Build.csproj
@@ -162,7 +162,7 @@
     <Compile Include="BackEnd\Components\SdkResolution\SdkResolverException.cs" />
     <Compile Include="BackEnd\Components\SdkResolution\TranslationHelpers.cs" />
     <Compile Include="FileSystem\*.cs" />
-    <Compile Include="Evaluation\IItemMetadata.cs" />
+    <Compile Include="Evaluation\IItemTypeDefinition.cs" />
     <Compile Include="Utilities\ReaderWriterLockSlimExtensions.cs" />
     <Compile Include="BackEnd\Node\ConsoleOutput.cs" />
     <Compile Include="BackEnd\Node\PartialBuildTelemetry.cs" />
