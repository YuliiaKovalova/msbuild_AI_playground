diff --git a/documentation/ProjectReference-Protocol.md b/documentation/ProjectReference-Protocol.md
index 8cd28cc499d..bc8f63623c7 100644
--- a/documentation/ProjectReference-Protocol.md
+++ b/documentation/ProjectReference-Protocol.md
@@ -106,6 +106,8 @@ As of MSBuild 16.10, it is possible to gather additional properties from referen
 
 These properties will then be gathered via the `GetTargetFrameworks` call.  They will be available to the referencing project via the `AdditionalPropertiesFromProject` metadata on the `_MSBuildProjectReferenceExistent` item.  The `AdditionalPropertiesFromProject` value will be an XML string which contains the values of the properties for each `TargetFramework` in the referenced project.  For example:
 
+> :warning: This format is being changed. Soon, the schema will replace <net5.0> with <Property Name="net5.0">. You can opt into that behavior early by setting the _UseAttributeForTargetFrameworkInfoPropertyNames property to true. This property will have no effect after the transition is complete.
+
 ```xml
 <AdditionalProjectProperties>
   <net5.0>
diff --git a/src/Tasks/CombineTargetFrameworkInfoProperties.cs b/src/Tasks/CombineTargetFrameworkInfoProperties.cs
index 8664cf13015..d1d2370b61b 100644
--- a/src/Tasks/CombineTargetFrameworkInfoProperties.cs
+++ b/src/Tasks/CombineTargetFrameworkInfoProperties.cs
@@ -25,7 +25,7 @@ public class CombineTargetFrameworkInfoProperties : TaskExtension
         /// <summary>
         /// Opts into or out of using the new schema with Property Name=... rather than just specifying the RootElementName.
         /// </summary>
-        public bool UseNewSchema { get; set; } = false;
+        public bool UseAttributeForTargetFrameworkInfoPropertyNames { get; set; } = false;
 
         /// <summary>
         /// The generated XML representation of the properties and values.
@@ -37,7 +37,7 @@ public override bool Execute()
         {
             if (PropertiesAndValues != null)
             {
-                XElement root = UseNewSchema ?
+                XElement root = UseAttributeForTargetFrameworkInfoPropertyNames ?
                     new("Property", new XAttribute("Name", EscapingUtilities.Escape(RootElementName))) :
                     new(RootElementName);
 
diff --git a/src/Tasks/CombineXmlElements.cs b/src/Tasks/CombineXmlElements.cs
index 0eb7591a605..5aa23454efe 100644
--- a/src/Tasks/CombineXmlElements.cs
+++ b/src/Tasks/CombineXmlElements.cs
@@ -25,7 +25,7 @@ public class CombineXmlElements : TaskExtension
         /// <summary>
         /// Opts into or out of using the new schema with Property Name=... rather than just specifying the RootElementName.
         /// </summary>
-        public bool UseNewSchema { get; set; } = false;
+        public bool UseAttributeForTargetFrameworkInfoPropertyNames { get; set; } = false;
 
         /// <summary>
         /// The generated XML
@@ -37,7 +37,7 @@ public override bool Execute()
         {
             if (XmlElements != null)
             {
-                XElement root = UseNewSchema ?
+                XElement root = UseAttributeForTargetFrameworkInfoPropertyNames ?
                     new("Property", new XAttribute("Name", EscapingUtilities.Escape(RootElementName))) :
                     new(RootElementName);
 
diff --git a/src/Tasks/Microsoft.Common.CrossTargeting.targets b/src/Tasks/Microsoft.Common.CrossTargeting.targets
index 8d86dd591c8..9a3c035d5ea 100644
--- a/src/Tasks/Microsoft.Common.CrossTargeting.targets
+++ b/src/Tasks/Microsoft.Common.CrossTargeting.targets
@@ -30,13 +30,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
            Text="Internal MSBuild error: CrossTargeting GetTargetFrameworks target should only be used in cross targeting (outer) build" />
 
     <PropertyGroup>
-      <UseNewSchema Condition="'$(UseNewSchema)' == ''">false</UseNewSchema>
+      <_UseAttributeForTargetFrameworkInfoPropertyNames Condition="'$(_UseAttributeForTargetFrameworkInfoPropertyNames)' == ''">false</_UseAttributeForTargetFrameworkInfoPropertyNames>
     </PropertyGroup>
     
     <CombineXmlElements
       RootElementName="AdditionalProjectProperties"
       XmlElements="@(_TargetFrameworkInfo->'%(AdditionalPropertiesFromProject)')"
-      UseNewSchema="$(UseNewSchema)">
+      UseAttributeForTargetFrameworkInfoPropertyNames="$(_UseAttributeForTargetFrameworkInfoPropertyNames)">
       <Output TaskParameter="Result"
         PropertyName="_AdditionalPropertiesFromProject"/>
     </CombineXmlElements>
diff --git a/src/Tasks/Microsoft.Common.CurrentVersion.targets b/src/Tasks/Microsoft.Common.CurrentVersion.targets
index e8c4ec49f16..53fc2339f87 100644
--- a/src/Tasks/Microsoft.Common.CurrentVersion.targets
+++ b/src/Tasks/Microsoft.Common.CurrentVersion.targets
@@ -1870,13 +1870,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
            Text="Internal MSBuild error: Non-CrossTargeting GetTargetFrameworks target should not be used in cross targeting (outer) build" />
 
     <PropertyGroup>
-      <UseNewSchema Condition="'$(UseNewSchema)' == ''">false</UseNewSchema>
+      <_UseAttributeForTargetFrameworkInfoPropertyNames Condition="'$(_UseAttributeForTargetFrameworkInfoPropertyNames)' == ''">false</_UseAttributeForTargetFrameworkInfoPropertyNames>
     </PropertyGroup>
   
     <CombineXmlElements
       RootElementName="AdditionalProjectProperties"
       XmlElements="@(_TargetFrameworkInfo->'%(AdditionalPropertiesFromProject)')"
-      UseNewSchema="$(UseNewSchema)">
+      UseAttributeForTargetFrameworkInfoPropertyNames="$(_UseAttributeForTargetFrameworkInfoPropertyNames)">
       <Output TaskParameter="Result"
         PropertyName="_AdditionalPropertiesFromProject"/>
     </CombineXmlElements>
@@ -1912,13 +1912,13 @@ Copyright (C) Microsoft Corporation. All rights reserved.
     </ItemGroup>
 
     <PropertyGroup>
-      <UseNewSchema Condition="'$(UseNewSchema)' == ''">false</UseNewSchema>
+      <_UseAttributeForTargetFrameworkInfoPropertyNames Condition="'$(_UseAttributeForTargetFrameworkInfoPropertyNames)' == ''">false</_UseAttributeForTargetFrameworkInfoPropertyNames>
     </PropertyGroup>
 
     <CombineTargetFrameworkInfoProperties
         RootElementName="$(TargetFramework)"
         PropertiesAndValues="@(_AdditionalTargetFrameworkInfoPropertyWithValue)"
-        UseNewSchema="$(UseNewSchema)">
+        UseAttributeForTargetFrameworkInfoPropertyNames="$(_UseAttributeForTargetFrameworkInfoPropertyNames)">
       <Output TaskParameter="Result"
               PropertyName="_AdditionalTargetFrameworkInfoProperties"/>
     </CombineTargetFrameworkInfoProperties>
