diff --git a/src/Build/Evaluation/Expander.cs b/src/Build/Evaluation/Expander.cs
index f62266702b6..0e1526fd7c2 100644
--- a/src/Build/Evaluation/Expander.cs
+++ b/src/Build/Evaluation/Expander.cs
@@ -794,19 +794,22 @@ private static void AddArgumentFromSlices(List<string> arguments, List<Tuple<int
             while (firstSlice <= lastSlice && Char.IsWhiteSpace(arg, firstSliceIdx))
             {
                 firstSliceIdx++;
-                if (firstSliceIdx > slices[firstSlice].Item2 && ++firstSlice < lastSlice)
+                if (firstSliceIdx > slices[firstSlice].Item2 && firstSlice < lastSlice)
                 {
+                    firstSlice++;
                     firstSliceIdx = slices[firstSlice].Item1;
                 }
             }
 
             // Trim from the end.
-            // Bit of extra logic to avoid trimming whitespace-only string one time too many.
+            // There is some extra logic here to avoid edge case where we would trim a whitespace only character with
+            // one slice from the start, and then once more from the end, resulting in invalid indices.
             while (((firstSlice < lastSlice) || (firstSlice == lastSlice && firstSliceIdx < lastSliceIdx)) && Char.IsWhiteSpace(arg, lastSliceIdx - 1))
             {
                 lastSliceIdx--;
-                if (slices[lastSlice].Item1 > lastSliceIdx && firstSlice < --lastSlice)
+                if (slices[lastSlice].Item1 > lastSliceIdx && firstSlice < lastSlice)
                 {
+                    lastSlice--;
                     lastSliceIdx = slices[lastSlice].Item2;
                 }
             }
@@ -819,6 +822,7 @@ private static void AddArgumentFromSlices(List<string> arguments, List<Tuple<int
 
             bool removedQuotes = false;
 
+            // If the argument is in quotes, we want to remove those
             if ((arg[firstSliceIdx] == '\'' && arg[lastSliceIdx - 1] == '\'') ||
                 (arg[firstSliceIdx] == '`' && arg[lastSliceIdx - 1] == '`') ||
                 (arg[firstSliceIdx] == '`' && arg[lastSliceIdx - 1] == '`') ||
@@ -875,14 +879,14 @@ private static string[] ExtractFunctionArguments(IElementLocation elementLocatio
 
             List<string> arguments = new List<string>();
 
-            int abStart = -1;
+            int argumentStartIndex = -1;
             List<Tuple<int, int>> slices = new List<Tuple<int, int>>();
 
             void FlushToSlices(int argumentEndIndex) {
-                if (abStart != -1)
+                if (argumentStartIndex != -1)
                 {
-                    slices.Add(Tuple.Create(abStart, argumentEndIndex));
-                    abStart = -1;
+                    slices.Add(Tuple.Create(argumentStartIndex, argumentEndIndex));
+                    argumentStartIndex = -1;
                 }
             }
 
@@ -936,9 +940,9 @@ void FlushToSlices(int argumentEndIndex) {
                 else
                 {
                     // argumentStartIndex ??= n;
-                    if (abStart == -1)
+                    if (argumentStartIndex == -1)
                     {
-                        abStart = n;
+                        argumentStartIndex = n;
                     }
                 }
             }
