diff --git a/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs b/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
index 9b9deeef04a..2c9de4a1f7e 100644
--- a/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
+++ b/src/Build.UnitTests/BuildEventArgsSerialization_Tests.cs
@@ -29,31 +29,30 @@ public BuildEventArgsSerializationTests()
         [InlineData(false)]
         public void RoundtripBuildStartedEventArgs(bool serializeAllEnvironmentVariables)
         {
-            using (TestEnvironment env = TestEnvironment.Create())
-            {
-                env.SetEnvironmentVariable("MSBUILDLOGALLENVIRONMENTVARIABLES", serializeAllEnvironmentVariables ? "1" : null);
-                var args = new BuildStartedEventArgs(
-                    "Message",
-                    "HelpKeyword",
-                    DateTime.Parse("3/1/2017 11:11:56 AM"));
-                Roundtrip(args,
-                    e => e.Message,
-                    e => e.HelpKeyword,
-                    e => e.Timestamp.ToString());
-
-                args = new BuildStartedEventArgs(
-                    "M",
-                    null,
-                    new Dictionary<string, string>
-                    {
-                    { "SampleName", "SampleValue" }
-                    });
-                Roundtrip(args,
-                    e => serializeAllEnvironmentVariables ? TranslationHelpers.ToString(e.BuildEnvironment) : null,
-                    e => e.HelpKeyword,
-                    e => e.ThreadId.ToString(),
-                    e => e.SenderName);
-            }
+            Traits.Instance.LogAllEnvironmentVariables = serializeAllEnvironmentVariables;
+            var args = new BuildStartedEventArgs(
+                "Message",
+                "HelpKeyword",
+                DateTime.Parse("3/1/2017 11:11:56 AM"));
+            Roundtrip(args,
+                e => e.Message,
+                e => e.HelpKeyword,
+                e => e.Timestamp.ToString());
+
+            args = new BuildStartedEventArgs(
+                "M",
+                null,
+                new Dictionary<string, string>
+                {
+                { "SampleName", "SampleValue" }
+                });
+            Roundtrip(args,
+                e => serializeAllEnvironmentVariables ? TranslationHelpers.ToString(e.BuildEnvironment) : null,
+                e => e.HelpKeyword,
+                e => e.ThreadId.ToString(),
+                e => e.SenderName);
+
+            Traits.Instance.LogAllEnvironmentVariables = false;
         }
 
         [Fact]
