diff --git a/src/Build.UnitTests/BackEnd/EventSourceSink_Tests.cs b/src/Build.UnitTests/BackEnd/EventSourceSink_Tests.cs
index bedfbaed31e..bcc1c92ab80 100644
--- a/src/Build.UnitTests/BackEnd/EventSourceSink_Tests.cs
+++ b/src/Build.UnitTests/BackEnd/EventSourceSink_Tests.cs
@@ -297,7 +297,10 @@ private static void VerifyRegisteredHandlers(BuildEventArgs buildEventToRaise, R
             try
             {
                 eventHelper.RaiseBuildEvent(buildEventToRaise);
-                if (buildEventToRaise.GetType() != typeof(GenericBuildStatusEventArgs))
+                Type eventType = buildEventToRaise.GetType();
+
+                if (eventType != typeof(GenericBuildStatusEventArgs) &&
+                    eventType != typeof(BuildCanceledEventArgs))
                 {
                     Assert.Equal(testHandlers.RaisedEvent, buildEventToRaise); // "Expected buildevent in handler to match buildevent raised on event source"
                     Assert.Equal(testHandlers.RaisedEvent, testHandlers.RaisedAnyEvent); // "Expected RaisedEvent and RaisedAnyEvent to match"
@@ -1010,6 +1013,12 @@ internal void RaiseBuildEvent(BuildEventArgs buildEvent)
                     _sourceForEvents.HaveLoggedBuildFinishedEvent = false;
                     Assert.False(_sourceForEvents.HaveLoggedBuildFinishedEvent);
                 }
+                else if (buildEvent is BuildCanceledEventArgs)
+                {
+                    Assert.True(_sourceForEvents.HaveLoggedBuildCanceledEvent);
+                    _sourceForEvents.HaveLoggedBuildCanceledEvent = false;
+                    Assert.False(_sourceForEvents.HaveLoggedBuildCanceledEvent);
+                }
             }
         }
         #endregion
diff --git a/src/Build.UnitTests/Graph/ResultCacheBasedBuilds_Tests.cs b/src/Build.UnitTests/Graph/ResultCacheBasedBuilds_Tests.cs
index 0047482f21b..b1f5ce88f7d 100644
--- a/src/Build.UnitTests/Graph/ResultCacheBasedBuilds_Tests.cs
+++ b/src/Build.UnitTests/Graph/ResultCacheBasedBuilds_Tests.cs
@@ -566,7 +566,7 @@ public void NonExistingInputResultsCacheShouldLogError()
 
             result.OverallResult.ShouldBe(BuildResultCode.Failure);
 
-            _logger.AllBuildEvents.Count.ShouldBe(4);
+            _logger.AllBuildEvents.Count.ShouldBe(5);
             _logger.Errors.First().Message.ShouldContain("MSB4255:");
             _logger.Errors.First().Message.ShouldContain("FileDoesNotExist1");
             _logger.Errors.First().Message.ShouldContain("FileDoesNotExist2");
diff --git a/src/Build/BackEnd/Components/Logging/EventSourceSink.cs b/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
index 029a907e6ba..5b7f6d55e8b 100644
--- a/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
+++ b/src/Build/BackEnd/Components/Logging/EventSourceSink.cs
@@ -49,11 +49,6 @@ internal sealed class EventSourceSink :
         /// </summary>
         public event BuildFinishedEventHandler BuildFinished;
 
-        /// <summary>
-        /// this event is raised to log the cancellation of a build
-        /// </summary>
-        public event BuildCanceledEventHandler BuildCanceled;
-
         /// <summary>
         /// this event is raised to log the start of a project build
         /// </summary>
@@ -317,7 +312,6 @@ internal void UnregisterAllEventHandlers()
             WarningRaised = null;
             BuildStarted = null;
             BuildFinished = null;
-            BuildCanceled = null;
             ProjectStarted = null;
             ProjectFinished = null;
             TargetStarted = null;
@@ -554,11 +548,11 @@ private void RaiseBuildFinishedEvent(object sender, BuildFinishedEventArgs build
         /// <exception cref="Exception">ExceptionHandling.IsCriticalException exceptions will not be wrapped</exception>
         private void RaiseBuildCanceledEvent(object sender, BuildCanceledEventArgs buildEvent)
         {
-            if (BuildCanceled != null)
+            if (StatusEventRaised != null)
             {
                 try
                 {
-                    BuildCanceled(sender, buildEvent);
+                    StatusEventRaised(sender, buildEvent);
                 }
                 catch (LoggerException)
                 {
