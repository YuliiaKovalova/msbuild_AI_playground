diff --git a/src/Build/BackEnd/Components/Communications/DetouredNodeLauncher.cs b/src/Build/BackEnd/Components/Communications/DetouredNodeLauncher.cs
index 01420d48d9a..d54085ab5f2 100644
--- a/src/Build/BackEnd/Components/Communications/DetouredNodeLauncher.cs
+++ b/src/Build/BackEnd/Components/Communications/DetouredNodeLauncher.cs
@@ -23,6 +23,8 @@ internal sealed class DetouredNodeLauncher : INodeLauncher, IBuildComponent
     {
         private readonly List<ISandboxedProcess> _sandboxedProcesses = new();
 
+        private readonly BuildParameters.IBuildParameters _environmentVariables = CreateEnvironmentVariables();
+
         private IFileAccessManager _fileAccessManager;
 
         public void InitializeComponent(IBuildComponentHost host)
@@ -84,7 +86,7 @@ public Process Start(string msbuildLocation, string commandLineArgs, int nodeId)
                 PipDescription = "MSBuild",
                 PipSemiStableHash = 0,
                 Arguments = commandLineArgs,
-                EnvironmentVariables = EnvironmentalBuildParameters.Instance,
+                EnvironmentVariables = _environmentVariables,
                 MaxLengthInMemory = 0, // Don't buffer any output
             };
 
@@ -125,6 +127,17 @@ public Process Start(string msbuildLocation, string commandLineArgs, int nodeId)
             return Process.GetProcessById(sp.ProcessId);
         }
 
+        private static BuildParameters.IBuildParameters CreateEnvironmentVariables()
+        {
+            var envVars = new Dictionary<string, string>();
+            foreach (DictionaryEntry baseVar in Environment.GetEnvironmentVariables())
+            {
+                envVars.Add((string)baseVar.Key, (string)baseVar.Value);
+            }
+
+            return BuildParameters.GetFactory().PopulateFromDictionary(envVars);
+        }
+
         private sealed class EnvironmentalBuildParameters : BuildParameters.IBuildParameters
         {
             private readonly Dictionary<string, string> _envVars;
