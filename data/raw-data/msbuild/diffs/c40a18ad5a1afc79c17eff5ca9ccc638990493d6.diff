diff --git a/ref/Microsoft.Build/net/Microsoft.Build.cs b/ref/Microsoft.Build/net/Microsoft.Build.cs
index 33df05b7100..a5602fd184c 100644
--- a/ref/Microsoft.Build/net/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/net/Microsoft.Build.cs
@@ -1459,11 +1459,14 @@ protected ProjectCacheBase() { }
     }
     public partial class ProjectCacheDescriptor
     {
-        public ProjectCacheDescriptor(string pluginPath, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings=null) { }
+        internal ProjectCacheDescriptor() { }
         public System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> EntryPoints { get { throw null; } }
-        public string PluginPath { get { throw null; } }
+        public string PluginAssemblyPath { get { throw null; } }
+        public Microsoft.Build.Experimental.ProjectCache.ProjectCacheBase PluginInstance { get { throw null; } }
         public System.Collections.Generic.IReadOnlyDictionary<string, string> PluginSettings { get { throw null; } }
         public Microsoft.Build.Graph.ProjectGraph ProjectGraph { get { throw null; } }
+        public static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor FromAssemblyPath(string pluginAssemblyPath, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings=null) { throw null; }
+        public static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor FromInstance(Microsoft.Build.Experimental.ProjectCache.ProjectCacheBase pluginInstance, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings=null) { throw null; }
         public override string ToString() { throw null; }
     }
     public partial class ProxyTargets
diff --git a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
index 56aa03c9559..9d81a29d34b 100644
--- a/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
+++ b/ref/Microsoft.Build/netstandard/Microsoft.Build.cs
@@ -1453,11 +1453,14 @@ protected ProjectCacheBase() { }
     }
     public partial class ProjectCacheDescriptor
     {
-        public ProjectCacheDescriptor(string pluginPath, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings=null) { }
+        internal ProjectCacheDescriptor() { }
         public System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> EntryPoints { get { throw null; } }
-        public string PluginPath { get { throw null; } }
+        public string PluginAssemblyPath { get { throw null; } }
+        public Microsoft.Build.Experimental.ProjectCache.ProjectCacheBase PluginInstance { get { throw null; } }
         public System.Collections.Generic.IReadOnlyDictionary<string, string> PluginSettings { get { throw null; } }
         public Microsoft.Build.Graph.ProjectGraph ProjectGraph { get { throw null; } }
+        public static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor FromAssemblyPath(string pluginAssemblyPath, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings=null) { throw null; }
+        public static Microsoft.Build.Experimental.ProjectCache.ProjectCacheDescriptor FromInstance(Microsoft.Build.Experimental.ProjectCache.ProjectCacheBase pluginInstance, System.Collections.Generic.IReadOnlyCollection<Microsoft.Build.Graph.ProjectGraphEntryPoint> entryPoints, Microsoft.Build.Graph.ProjectGraph projectGraph, System.Collections.Generic.IReadOnlyDictionary<string, string> pluginSettings=null) { throw null; }
         public override string ToString() { throw null; }
     }
     public partial class ProxyTargets
diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index f38b95cb809..7dbd31f0f64 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -1268,7 +1268,7 @@ private void InstantiateProjectCacheServiceForVisualStudioWorkaround(
                 var projectCacheItem = ProjectCacheItems.First().Value;
 
                 InitializeProjectCacheService(
-                    new ProjectCacheDescriptor(
+                    ProjectCacheDescriptor.FromAssemblyPath(
                         projectCacheItem.PluginPath,
                         new[]
                         {
@@ -1871,7 +1871,7 @@ private DisposePluginService SearchAndInitializeProjectCachePluginFromGraph(Proj
             lock (_syncLock)
             {
                 InitializeProjectCacheService(
-                    new ProjectCacheDescriptor(
+                    ProjectCacheDescriptor.FromAssemblyPath(
                         cacheItem.PluginPath,
                         entryPoints: null,
                         projectGraph,
diff --git a/src/Build/BackEnd/BuildManager/BuildParameters.cs b/src/Build/BackEnd/BuildManager/BuildParameters.cs
index 523a8262a79..bb2994c5fb0 100644
--- a/src/Build/BackEnd/BuildManager/BuildParameters.cs
+++ b/src/Build/BackEnd/BuildManager/BuildParameters.cs
@@ -298,6 +298,7 @@ private BuildParameters(BuildParameters other)
             _outputResultsCacheFile = other._outputResultsCacheFile;
             DiscardBuildResults = other.DiscardBuildResults;
             LowPriority = other.LowPriority;
+            ProjectCacheDescriptor = other.ProjectCacheDescriptor;
         }
 
 #if FEATURE_THREAD_PRIORITY
diff --git a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs
index e374bc1b6af..de72c884cf5 100644
--- a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheDescriptor.cs
@@ -4,6 +4,7 @@
 #nullable enable
 using System.Collections.Generic;
 using System.Linq;
+using Microsoft.Build.Execution;
 using Microsoft.Build.Graph;
 using Microsoft.Build.Shared;
 
@@ -11,26 +12,10 @@ namespace Microsoft.Build.Experimental.ProjectCache
 {
     public class ProjectCacheDescriptor
     {
-        public ProjectCacheDescriptor(
-            string pluginPath,
-            IReadOnlyCollection<ProjectGraphEntryPoint>? entryPoints,
-            ProjectGraph? projectGraph,
-            IReadOnlyDictionary<string, string>? pluginSettings = null)
-        {
-            ErrorUtilities.VerifyThrowArgument(
-                (entryPoints == null) ^ (projectGraph == null),
-                "EitherEntryPointsOrTheProjectGraphIsSet");
-
-            PluginPath = pluginPath;
-            EntryPoints = entryPoints;
-            ProjectGraph = projectGraph;
-            PluginSettings = pluginSettings ?? new Dictionary<string, string>();
-        }
-
         /// <summary>
         ///     The path to the assembly containing the project cache plugin.
         /// </summary>
-        public string PluginPath { get; }
+        public string? PluginAssemblyPath { get; }
 
         /// <summary>
         ///     The entry points with which the plugin will be initialized.
@@ -44,8 +29,71 @@ public ProjectCacheDescriptor(
 
         public IReadOnlyDictionary<string, string> PluginSettings { get; }
 
+        public ProjectCacheBase? PluginInstance { get; }
+
+#pragma warning disable CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
+
+        private ProjectCacheDescriptor()
+#pragma warning restore CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
+        {
+        }
+
+        private ProjectCacheDescriptor(
+            IReadOnlyCollection<ProjectGraphEntryPoint>? entryPoints,
+            ProjectGraph? projectGraph,
+            IReadOnlyDictionary<string, string>? pluginSettings)
+        {
+            ErrorUtilities.VerifyThrowArgument(
+                (entryPoints == null) ^ (projectGraph == null),
+                "EitherEntryPointsOrTheProjectGraphIsSet");
+
+            EntryPoints = entryPoints;
+            ProjectGraph = projectGraph;
+            PluginSettings = pluginSettings ?? new Dictionary<string, string>();
+        }
+
+        private ProjectCacheDescriptor(
+            string pluginAssemblyPath,
+            IReadOnlyCollection<ProjectGraphEntryPoint>? entryPoints,
+            ProjectGraph? projectGraph,
+            IReadOnlyDictionary<string, string>? pluginSettings) : this(entryPoints, projectGraph, pluginSettings)
+        {
+            PluginAssemblyPath = pluginAssemblyPath;
+        }
+
+        private ProjectCacheDescriptor(
+            ProjectCacheBase pluginInstance,
+            IReadOnlyCollection<ProjectGraphEntryPoint>? entryPoints,
+            ProjectGraph? projectGraph,
+            IReadOnlyDictionary<string, string>? pluginSettings) : this(entryPoints, projectGraph, pluginSettings)
+        {
+            PluginInstance = pluginInstance;
+        }
+
+        public static ProjectCacheDescriptor FromAssemblyPath(
+            string pluginAssemblyPath,
+            IReadOnlyCollection<ProjectGraphEntryPoint>? entryPoints,
+            ProjectGraph? projectGraph,
+            IReadOnlyDictionary<string, string>? pluginSettings = null)
+        {
+            return new ProjectCacheDescriptor(pluginAssemblyPath, entryPoints, projectGraph, pluginSettings);
+        }
+
+        public static ProjectCacheDescriptor FromInstance(
+            ProjectCacheBase pluginInstance,
+            IReadOnlyCollection<ProjectGraphEntryPoint>? entryPoints,
+            ProjectGraph? projectGraph,
+            IReadOnlyDictionary<string, string>? pluginSettings = null)
+        {
+            return new ProjectCacheDescriptor(pluginInstance, entryPoints, projectGraph, pluginSettings);
+        }
+
         public override string ToString()
         {
+            var loadStyle = PluginInstance != null
+                ? $"Instance based: {PluginInstance.GetType().AssemblyQualifiedName}"
+                : $"Assembly path based: {PluginAssemblyPath}";
+
             var entryPointStyle = EntryPoints != null
                 ? "Non static graph based"
                 : "Static graph based";
@@ -60,7 +108,7 @@ public override string ToString()
                         n =>
                             $"{n.ProjectInstance.FullPath} {{{FormatGlobalProperties(n.ProjectInstance.GlobalProperties)}}}"));
 
-            return $"{PluginPath}\nEntry-point style: {entryPointStyle}\nEntry-points:\n{entryPoints}";
+            return $"{loadStyle}\nEntry-point style: {entryPointStyle}\nEntry-points:\n{entryPoints}";
 
             static string FormatGlobalProperties(IDictionary<string, string> globalProperties)
             {
diff --git a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
index 28b35408d89..c8ce038a4fa 100644
--- a/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
+++ b/src/Build/BackEnd/Components/ProjectCache/ProjectCacheService.cs
@@ -44,7 +44,7 @@ public static async Task<ProjectCacheService> FromDescriptorAsync(
             ILoggingService loggingService,
             CancellationToken cancellationToken)
         {
-            var plugin = await Task.Run(() => LoadPluginFromAssembly(pluginDescriptor.PluginPath), cancellationToken)
+            var plugin = await Task.Run(() => GetPluginInstance(pluginDescriptor), cancellationToken)
                 .ConfigureAwait(false);
 
             // TODO: Detect and use the highest verbosity from all the user defined loggers. That's tricky because right now we can't discern between user set loggers and msbuild's internally added loggers.
@@ -69,13 +69,32 @@ await plugin.BeginBuildAsync(
             return new ProjectCacheService(plugin, buildManager, logger, pluginDescriptor, cancellationToken);
         }
 
-        private static ProjectCacheBase LoadPluginFromAssembly(string pluginAssemblyPath)
+        private static ProjectCacheBase GetPluginInstance(ProjectCacheDescriptor pluginDescriptor)
         {
-            var assembly = LoadAssembly(pluginAssemblyPath);
+            if (pluginDescriptor.PluginInstance != null)
+            {
+                return pluginDescriptor.PluginInstance;
+            }
+            if (pluginDescriptor.PluginAssemblyPath != null)
+            {
+                return GetPluginInstanceFromType(GetTypeFromAssemblyPath(pluginDescriptor.PluginAssemblyPath));
+            }
+            ErrorUtilities.ThrowInternalErrorUnreachable();
+            return null;
+        }
 
-            var pluginType = GetTypes<ProjectCacheBase>(assembly).First();
+        private static ProjectCacheBase GetPluginInstanceFromType(Type pluginType)
+        {
+            return pluginType != null
+                ? (ProjectCacheBase) Activator.CreateInstance(pluginType)
+                : null;
+        }
 
-            return (ProjectCacheBase) Activator.CreateInstance(pluginType);
+        private static Type GetTypeFromAssemblyPath(string pluginAssemblyPath)
+        {
+            var assembly = LoadAssembly(pluginAssemblyPath);
+
+            return GetTypes<ProjectCacheBase>(assembly).FirstOrDefault();
 
             Assembly LoadAssembly(string resolverPath)
             {
@@ -107,8 +126,8 @@ public async Task<CacheResult> GetCacheResultAsync(BuildRequestData buildRequest
         {
             // TODO: Parent these logs under the project build event so they appear nested under the project in the binlog viewer.
             var queryDescription = $"{buildRequest.ProjectFullPath}" +
-                    $"\n\tTargets:[{string.Join(", ", buildRequest.TargetNames)}]" +
-                    $"\n\tGlobal Properties: {{{string.Join(",", buildRequest.GlobalProperties.Select(kvp => $"{kvp.Name}={kvp.EvaluatedValue}"))}}}";
+                                   $"\n\tTargets:[{string.Join(", ", buildRequest.TargetNames)}]" +
+                                   $"\n\tGlobal Properties: {{{string.Join(",", buildRequest.GlobalProperties.Select(kvp => $"{kvp.Name}={kvp.EvaluatedValue}"))}}}";
 
             _logger.LogMessage(
                 "\n====== Querying plugin for project " + queryDescription,
@@ -162,6 +181,8 @@ private class LoggingServiceToPluginLoggerAdapter : PluginLoggerBase
         {
             private readonly ILoggingService _loggingService;
 
+            public override bool HasLoggedErrors { get; protected set; }
+
             public LoggingServiceToPluginLoggerAdapter(
                 LoggerVerbosity verbosity,
                 ILoggingService loggingService) : base(verbosity)
@@ -169,8 +190,6 @@ public LoggingServiceToPluginLoggerAdapter(
                 _loggingService = loggingService;
             }
 
-            public override bool HasLoggedErrors { get; protected set; }
-
             public override void LogMessage(string message, MessageImportance? messageImportance = null)
             {
                 _loggingService.LogCommentFromText(
diff --git a/src/Build/Resources/Strings.resx b/src/Build/Resources/Strings.resx
index a76f439fba9..0f1f5386654 100644
--- a/src/Build/Resources/Strings.resx
+++ b/src/Build/Resources/Strings.resx
@@ -1852,7 +1852,8 @@ Utilization:          {0} Average Utilization: {1:###.0}</value>
     <value>"EvaluationContext objects created with SharingPolicy.Isolated do not support being passed an MSBuildFileSystemBase file system."</value>
   </data>
   <data name="LoadingProjectCachePlugin" xml:space="preserve">
-    <value>"Loading the following project cache plugin: {0}"</value>
+    <value>"Loading the following project cache plugin:
+    {0}"</value>
   </data>
   <data name="SolutionPathPropertyMustBeSetOnVSSubmissions" xml:space="preserve">
     <value>"MSB4264: Invalid $(SolutionPath) property: {0}"</value>
diff --git a/src/Build/Resources/xlf/Strings.cs.xlf b/src/Build/Resources/xlf/Strings.cs.xlf
index 0cc49fdf190..a07bce75601 100644
--- a/src/Build/Resources/xlf/Strings.cs.xlf
+++ b/src/Build/Resources/xlf/Strings.cs.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.de.xlf b/src/Build/Resources/xlf/Strings.de.xlf
index 28e31a00d58..f29e011186c 100644
--- a/src/Build/Resources/xlf/Strings.de.xlf
+++ b/src/Build/Resources/xlf/Strings.de.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.en.xlf b/src/Build/Resources/xlf/Strings.en.xlf
index 26675e55281..dcc19fc9f8e 100644
--- a/src/Build/Resources/xlf/Strings.en.xlf
+++ b/src/Build/Resources/xlf/Strings.en.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.es.xlf b/src/Build/Resources/xlf/Strings.es.xlf
index fd7dd011ccf..f6fa5f357f9 100644
--- a/src/Build/Resources/xlf/Strings.es.xlf
+++ b/src/Build/Resources/xlf/Strings.es.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.fr.xlf b/src/Build/Resources/xlf/Strings.fr.xlf
index 7bde2142d48..aa6c6b9c7b8 100644
--- a/src/Build/Resources/xlf/Strings.fr.xlf
+++ b/src/Build/Resources/xlf/Strings.fr.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.it.xlf b/src/Build/Resources/xlf/Strings.it.xlf
index ddae316bb10..a771853b370 100644
--- a/src/Build/Resources/xlf/Strings.it.xlf
+++ b/src/Build/Resources/xlf/Strings.it.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.ja.xlf b/src/Build/Resources/xlf/Strings.ja.xlf
index 26bd35a2b57..cc5f2c3b5e1 100644
--- a/src/Build/Resources/xlf/Strings.ja.xlf
+++ b/src/Build/Resources/xlf/Strings.ja.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.ko.xlf b/src/Build/Resources/xlf/Strings.ko.xlf
index 21dd41ae1a5..4f0907435db 100644
--- a/src/Build/Resources/xlf/Strings.ko.xlf
+++ b/src/Build/Resources/xlf/Strings.ko.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.pl.xlf b/src/Build/Resources/xlf/Strings.pl.xlf
index 6fbb5187201..31cde739170 100644
--- a/src/Build/Resources/xlf/Strings.pl.xlf
+++ b/src/Build/Resources/xlf/Strings.pl.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.pt-BR.xlf b/src/Build/Resources/xlf/Strings.pt-BR.xlf
index 0a69d816864..c04bc7a604c 100644
--- a/src/Build/Resources/xlf/Strings.pt-BR.xlf
+++ b/src/Build/Resources/xlf/Strings.pt-BR.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.ru.xlf b/src/Build/Resources/xlf/Strings.ru.xlf
index 3b6668787c9..b797ec1e178 100644
--- a/src/Build/Resources/xlf/Strings.ru.xlf
+++ b/src/Build/Resources/xlf/Strings.ru.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.tr.xlf b/src/Build/Resources/xlf/Strings.tr.xlf
index e1f5a6cfc96..248e54c9e22 100644
--- a/src/Build/Resources/xlf/Strings.tr.xlf
+++ b/src/Build/Resources/xlf/Strings.tr.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hans.xlf b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
index 2930bdfe3b7..3a349cf926a 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hans.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hans.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
diff --git a/src/Build/Resources/xlf/Strings.zh-Hant.xlf b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
index 9f3e6ae1d29..a5af35c29ad 100644
--- a/src/Build/Resources/xlf/Strings.zh-Hant.xlf
+++ b/src/Build/Resources/xlf/Strings.zh-Hant.xlf
@@ -133,8 +133,10 @@
         <note />
       </trans-unit>
       <trans-unit id="LoadingProjectCachePlugin">
-        <source>"Loading the following project cache plugin: {0}"</source>
-        <target state="new">"Loading the following project cache plugin: {0}"</target>
+        <source>"Loading the following project cache plugin:
+    {0}"</source>
+        <target state="new">"Loading the following project cache plugin:
+    {0}"</target>
         <note />
       </trans-unit>
       <trans-unit id="LogLoggerVerbosity">
