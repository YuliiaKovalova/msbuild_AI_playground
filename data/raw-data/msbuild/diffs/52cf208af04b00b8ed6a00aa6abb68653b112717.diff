diff --git a/src/Build/BackEnd/Components/Scheduler/SchedulableRequest.cs b/src/Build/BackEnd/Components/Scheduler/SchedulableRequest.cs
index 9305abe7c66..994f3b155e9 100644
--- a/src/Build/BackEnd/Components/Scheduler/SchedulableRequest.cs
+++ b/src/Build/BackEnd/Components/Scheduler/SchedulableRequest.cs
@@ -463,6 +463,8 @@ public void VerifyOneOfStates(SchedulableRequestState[] requiredStates)
             ErrorUtilities.ThrowInternalError("State {0} is not one of the expected states.", _state);
         }
 
+        public bool IsProxyBuildRequest() => BuildRequest.IsProxyBuildRequest();
+
         /// <summary>
         /// Change to the specified state.  Update internal counters.
         /// </summary>
diff --git a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
index 23493761e6e..03fc8f8a1ab 100644
--- a/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
+++ b/src/Build/BackEnd/Components/Scheduler/Scheduler.cs
@@ -992,7 +992,7 @@ private void AssignUnscheduledProxyBuildRequestsToInProcNode(List<ScheduleRespon
                 List<SchedulableRequest> unscheduledRequests = new List<SchedulableRequest>(_schedulingData.UnscheduledRequestsWhichCanBeScheduled);
                 foreach (SchedulableRequest request in unscheduledRequests)
                 {
-                    if (CanScheduleRequestToNode(request, InProcNodeId) && IsProxyBuildRequest(request.BuildRequest))
+                    if (CanScheduleRequestToNode(request, InProcNodeId) && request.IsProxyBuildRequest())
                     {
                         AssignUnscheduledRequestToNode(request, InProcNodeId, responses);
                         idleNodes.Remove(InProcNodeId);
@@ -1010,11 +1010,6 @@ private bool IsTraversalRequest(BuildRequest request)
             return _configCache[request.ConfigurationId].IsTraversal;
         }
 
-        private bool IsProxyBuildRequest(BuildRequest request)
-        {
-            return request.ProxyTargets != null;
-        }
-
         /// <summary>
         /// Assigns requests to nodes attempting to ensure each node has the same number of configurations assigned to it.
         /// </summary>
@@ -1390,7 +1385,7 @@ private void AssignUnscheduledRequestToNode(SchedulableRequest request, int node
 
             void WarnWhenProxyBuildsGetScheduledOnOutOfProcNode()
             {
-                if (IsProxyBuildRequest(request) && nodeId != InProcNodeId)
+                if (request.IsProxyBuildRequest() && nodeId != InProcNodeId)
                 {
                     ErrorUtilities.VerifyThrow(
                         _componentHost.BuildParameters.DisableInProcNode || _forceAffinityOutOfProc,
@@ -2112,7 +2107,7 @@ private NodeAffinity GetNodeAffinityForRequest(BuildRequest request)
                 return NodeAffinity.InProc;
             }
 
-            if (IsProxyBuildRequest(request))
+            if (request.IsProxyBuildRequest())
             {
                 return NodeAffinity.InProc;
             }
diff --git a/src/Build/BackEnd/Shared/BuildRequest.cs b/src/Build/BackEnd/Shared/BuildRequest.cs
index 4a0a4efb7f1..2bde7843447 100644
--- a/src/Build/BackEnd/Shared/BuildRequest.cs
+++ b/src/Build/BackEnd/Shared/BuildRequest.cs
@@ -419,5 +419,10 @@ internal static INodePacket FactoryForDeserialization(ITranslator translator)
         }
 
         #endregion
+
+        public bool IsProxyBuildRequest()
+        {
+            return ProxyTargets != null;
+        }
     }
 }
