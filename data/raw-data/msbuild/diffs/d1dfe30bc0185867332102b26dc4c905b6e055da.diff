diff --git a/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs b/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
index 78e73980389..32ce318a076 100644
--- a/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
+++ b/src/Build.UnitTests/Graph/IsolateProjects_Tests.cs
@@ -131,7 +131,7 @@ public class IsolateProjectsTests : IDisposable
         public IsolateProjectsTests(ITestOutputHelper testOutput)
         {
             _testOutput = testOutput;
-            _env = TestEnvironment.Create(_testOutput);
+            _env = TestEnvironment.Create(_testOutput, ignoreBuildErrorFiles: false);
 
             if (NativeMethodsShared.IsOSX)
             {
@@ -140,6 +140,8 @@ public IsolateProjectsTests(ITestOutputHelper testOutput)
                 _env.SetTempPath(Path.Combine(Directory.GetCurrentDirectory(), Guid.NewGuid().ToString("N")), deleteTempDirectory: true);
             }
 
+            _env.WithInvariant(new BuildFailureLogInvariant());
+
             // todo investigate why out of proc builds fail on macos https://github.com/dotnet/msbuild/issues/3915
             var disableInProcNode = !NativeMethodsShared.IsOSX;
 
diff --git a/src/Shared/TempFileUtilities.cs b/src/Shared/TempFileUtilities.cs
index 8702ed1169a..c292fee8eaf 100644
--- a/src/Shared/TempFileUtilities.cs
+++ b/src/Shared/TempFileUtilities.cs
@@ -38,9 +38,6 @@ private static string CreateFolderUnderTemp()
         {
             string basePath = Path.Combine(Path.GetTempPath(), $"MSBuildTemp{Environment.UserName}");
 
-            if (basePath.StartsWith("/Users"))
-                throw new InvalidOperationException($"Weird OSX error 1: basePath: {basePath}, Path.GetTempPath(): {Path.GetTempPath()}, [TMP]: {Environment.GetEnvironmentVariable("TMP")}, [TMPDIR]: {Environment.GetEnvironmentVariable("TMPDIR")}");
-
             if (NativeMethodsShared.IsLinux && NativeMethodsShared.mkdir(basePath, userRWX) != 0)
             {
                 if (NativeMethodsShared.chmod(basePath, userRWX) == 0)
@@ -61,25 +58,14 @@ private static string CreateFolderUnderTemp()
 
                     basePath = pathToCheck;
                 }
-
-                if (basePath.StartsWith("/Users"))
-                    throw new InvalidOperationException($"Weird OSX error 2a: basePath: {basePath}, Path.GetTempPath(): {Path.GetTempPath()}, [TMP]: {Environment.GetEnvironmentVariable("TMP")}, [TMPDIR]: {Environment.GetEnvironmentVariable("TMPDIR")}");
             }
             else
             {
                 Directory.CreateDirectory(basePath);
-                if (basePath.StartsWith("/Users"))
-                    throw new InvalidOperationException($"Weird OSX error 2b: basePath: {basePath}, Path.GetTempPath(): {Path.GetTempPath()}, [TMP]: {Environment.GetEnvironmentVariable("TMP")}, [TMPDIR]: {Environment.GetEnvironmentVariable("TMPDIR")}");
             }
 
-            if (basePath.StartsWith("/Users"))
-                throw new InvalidOperationException($"Weird OSX error 3: basePath: {basePath}, Path.GetTempPath(): {Path.GetTempPath()}, [TMP]: {Environment.GetEnvironmentVariable("TMP")}, [TMPDIR]: {Environment.GetEnvironmentVariable("TMPDIR")}");
-
             basePath = FileUtilities.EnsureTrailingSlash(basePath);
 
-            if (basePath.StartsWith("/Users"))
-                throw new InvalidOperationException($"Weird OSX error 3: basePath: {basePath}, Path.GetTempPath(): {Path.GetTempPath()}, [TMP]: {Environment.GetEnvironmentVariable("TMP")}, [TMPDIR]: {Environment.GetEnvironmentVariable("TMPDIR")}");
-
             return basePath;
         }
 
