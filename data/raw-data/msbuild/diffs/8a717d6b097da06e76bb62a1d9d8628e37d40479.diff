diff --git a/src/Tasks.UnitTests/Copy_Tests.cs b/src/Tasks.UnitTests/Copy_Tests.cs
index 689e885822e..5f52afb7d37 100644
--- a/src/Tasks.UnitTests/Copy_Tests.cs
+++ b/src/Tasks.UnitTests/Copy_Tests.cs
@@ -2051,8 +2051,15 @@ public class CopyHardAndSymbolicLink_Tests
         [Fact]
         public void CopyWithHardAndSymbolicLinks()
         {
+            // Workaround: For some reason when this test runs with all other tests we are getting
+            // the incorrect result from CreateHardLink error message (a message associated with
+            // another test). Calling GetHRForLastWin32Error / GetExceptionForHR seems to clear
+            // out the previous message and allow us to get the right message in the Copy task.
+            int errorCode = Marshal.GetHRForLastWin32Error();
+            Marshal.GetExceptionForHR(errorCode);
+
             string sourceFile = FileUtilities.GetTemporaryFile();
-            const string temp = @"d:\temp";
+            const string temp = @"d:\\temp";
             string destFolder = Path.Combine(temp, "2A333ED756AF4dc392E728D0F864A398");
             string destFile = Path.Combine(destFolder, Path.GetFileName(sourceFile));
 
@@ -2089,9 +2096,9 @@ public void CopyWithHardAndSymbolicLinks()
                 bool success = t.Execute();
 
                 Assert.True(success);
-
+                me.AssertLogContains("0x80070011");
                 MockEngine.GetStringDelegate resourceDelegate = AssemblyResources.GetString;
-                me.AssertLogContainsMessageFromResource(resourceDelegate, "Copy.SymbolicLinkComment", sourceFile, destFile, String.Empty);
+                me.AssertLogContainsMessageFromResource(resourceDelegate, "Copy.SymbolicLinkComment", sourceFile, destFile);
             }
             finally
             {
