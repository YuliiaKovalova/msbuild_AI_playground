diff --git a/src/Framework/IIncrementalTask.cs b/src/Framework/IIncrementalTask.cs
index 23d5b508d47..7a44e93f14b 100644
--- a/src/Framework/IIncrementalTask.cs
+++ b/src/Framework/IIncrementalTask.cs
@@ -8,7 +8,7 @@ namespace Microsoft.Build.Framework
     /// <summary>
     /// Interface for tasks which is supports incrementality.
     /// </summary>
-    /// <remarks>The tasks implementing this interface should return false to stop the build when in <see cref="FailIfNotIncremental"/> is true and task is not fully incremental.  Try to provide helpful information diagnose incremental behavior.</remarks>
+    /// <remarks>The tasks implementing this interface should return false to stop the build when in <see cref="FailIfNotIncremental"/> is true and task is not fully incremental.  Try to provide helpful information to diagnose incremental behavior.</remarks>
     public interface IIncrementalTask
     {
         /// <summary>
diff --git a/src/Tasks/Touch.cs b/src/Tasks/Touch.cs
index d691b718f92..75d00478679 100644
--- a/src/Tasks/Touch.cs
+++ b/src/Tasks/Touch.cs
@@ -222,12 +222,15 @@ private bool TouchFile(
                 }
             }
 
-            Log.LogMessageFromResources(messageImportance, "Touch.Touching", file);
-
             // Ignore touching the disk when FailIfNotIncremental.
             if (FailIfNotIncremental)
             {
-                return true;
+                Log.LogErrorFromResources("Touch.Touching", file);
+                return false;
+            }
+            else
+            {
+                Log.LogMessageFromResources(messageImportance, "Touch.Touching", file);
             }
 
             // If the file is read only then we must either issue an error, or, if the user so 
