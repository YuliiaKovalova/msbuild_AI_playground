diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.Linux.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.Linux.verified.txt
new file mode 100644
index 00000000000..3ff8c0e9b64
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.Linux.verified.txt
@@ -0,0 +1,5 @@
+]9;4;3;\  æœ¬åœ°åŒ– [32;1msucceeded[m (0.2s) â†’ ]8;;file:///src/Ð¿Ñ€Ð¾ÐµÐºÑ‚Ð¢ÐµÑ€Ð¼Ð¸Ð½Ð°Ð»\/src/Ð¿Ñ€Ð¾ÐµÐºÑ‚Ð¢ÐµÑ€Ð¼Ð¸Ð½Ð°Ð»/æœ¬åœ°åŒ–.proj]8;;\
+[?25l[1F
+[?25h
+Build [32;1msucceeded[m in 5.0s
+]9;4;0;\
\ No newline at end of file
diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.OSX.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.OSX.verified.txt
new file mode 100644
index 00000000000..01f976b519e
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.OSX.verified.txt
@@ -0,0 +1,4 @@
+  æœ¬åœ°åŒ– [32;1msucceeded[m (0.2s) â†’ ]8;;file:///src/Ð¿Ñ€Ð¾ÐµÐºÑ‚Ð¢ÐµÑ€Ð¼Ð¸Ð½Ð°Ð»\/src/Ð¿Ñ€Ð¾ÐµÐºÑ‚Ð¢ÐµÑ€Ð¼Ð¸Ð½Ð°Ð»/æœ¬åœ°åŒ–.proj]8;;\
+[?25l[1F
+[?25h
+Build [32;1msucceeded[m in 5.0s
\ No newline at end of file
diff --git a/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.Windows.verified.txt b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.Windows.verified.txt
new file mode 100644
index 00000000000..c260e382b6d
--- /dev/null
+++ b/src/MSBuild.UnitTests/Snapshots/TerminalLogger_Tests.PrintProjectOutputDirectoryLink.Windows.verified.txt
@@ -0,0 +1,5 @@
+ï»¿]9;4;3;\  æœ¬åœ°åŒ– [32;1msucceeded[m (0.2s) â†’ ]8;;file:///C:/src/Ð¿Ñ€Ð¾ÐµÐºÑ‚Ð¢ÐµÑ€Ð¼Ð¸Ð½Ð°Ð»\C:\src\Ð¿Ñ€Ð¾ÐµÐºÑ‚Ð¢ÐµÑ€Ð¼Ð¸Ð½Ð°Ð»\æœ¬åœ°åŒ–.proj]8;;\
+[?25l[1F
+[?25h
+Build [32;1msucceeded[m in 5.0s
+]9;4;0;\
\ No newline at end of file
diff --git a/src/MSBuild.UnitTests/TerminalLogger_Tests.cs b/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
index 7f89f347c25..c7957d1bef5 100644
--- a/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
+++ b/src/MSBuild.UnitTests/TerminalLogger_Tests.cs
@@ -6,6 +6,7 @@
 using System.Collections.Generic;
 using System.Globalization;
 using System.IO;
+using System.Linq;
 using System.Text;
 using System.Text.RegularExpressions;
 using System.Threading;
@@ -38,6 +39,7 @@ public class TerminalLogger_Tests : IEventSource, IDisposable
 
         private readonly string _projectFile = NativeMethods.IsUnixLike ? "/src/project.proj" : @"C:\src\project.proj";
         private readonly string _projectFile2 = NativeMethods.IsUnixLike ? "/src/project2.proj" : @"C:\src\project2.proj";
+        private readonly string _projectFileWithForeignSymbols = NativeMethods.IsUnixLike ? "/src/Ð¿Ñ€Ð¾ÐµÐºÑ‚Ð¢ÐµÑ€Ð¼Ð¸Ð½Ð°Ð»/æœ¬åœ°åŒ–.proj" : @"C:\src\Ð¿Ñ€Ð¾ÐµÐºÑ‚Ð¢ÐµÑ€Ð¼Ð¸Ð½Ð°Ð»\æœ¬åœ°åŒ–.proj";
 
         private StringWriter _outputWriter = new();
 
@@ -223,20 +225,20 @@ private BuildErrorEventArgs MakeErrorEventArgs(string error)
 
         #region Build summary tests
 
-        private void InvokeLoggerCallbacksForSimpleProject(bool succeeded, Action additionalCallbacks)
+        private void InvokeLoggerCallbacksForSimpleProject(bool succeeded, string projectFile, Action additionalCallbacks)
         {
             BuildStarted?.Invoke(_eventSender, MakeBuildStartedEventArgs());
-            ProjectStarted?.Invoke(_eventSender, MakeProjectStartedEventArgs(_projectFile));
+            ProjectStarted?.Invoke(_eventSender, MakeProjectStartedEventArgs(projectFile));
 
-            TargetStarted?.Invoke(_eventSender, MakeTargetStartedEventArgs(_projectFile, "Build"));
-            TaskStarted?.Invoke(_eventSender, MakeTaskStartedEventArgs(_projectFile, "Task"));
+            TargetStarted?.Invoke(_eventSender, MakeTargetStartedEventArgs(projectFile, "Build"));
+            TaskStarted?.Invoke(_eventSender, MakeTaskStartedEventArgs(projectFile, "Task"));
 
             additionalCallbacks();
 
-            TaskFinished?.Invoke(_eventSender, MakeTaskFinishedEventArgs(_projectFile, "Task", succeeded));
-            TargetFinished?.Invoke(_eventSender, MakeTargetFinishedEventArgs(_projectFile, "Build", succeeded));
+            TaskFinished?.Invoke(_eventSender, MakeTaskFinishedEventArgs(projectFile, "Task", succeeded));
+            TargetFinished?.Invoke(_eventSender, MakeTargetFinishedEventArgs(projectFile, "Build", succeeded));
 
-            ProjectFinished?.Invoke(_eventSender, MakeProjectFinishedEventArgs(_projectFile, succeeded));
+            ProjectFinished?.Invoke(_eventSender, MakeProjectFinishedEventArgs(projectFile, succeeded));
             BuildFinished?.Invoke(_eventSender, MakeBuildFinishedEventArgs(succeeded));
         }
 
@@ -288,7 +290,7 @@ private void InvokeLoggerCallbacksForTwoProjects(bool succeeded, Action addition
         [Fact]
         public Task PrintsBuildSummary_Succeeded()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: true, () => { });
+            InvokeLoggerCallbacksForSimpleProject(succeeded: true, _projectFile, () => { });
 
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
@@ -296,7 +298,7 @@ public Task PrintsBuildSummary_Succeeded()
         [Fact]
         public Task PrintBuildSummary_SucceededWithWarnings()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: true, () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: true, _projectFile, () =>
             {
                 WarningRaised?.Invoke(_eventSender, MakeWarningEventArgs("A\nMulti\r\nLine\nWarning!"));
             });
@@ -307,7 +309,7 @@ public Task PrintBuildSummary_SucceededWithWarnings()
         [Fact]
         public Task PrintImmediateWarningMessage_Succeeded()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: true, () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: true, _projectFile, () =>
             {
                 WarningRaised?.Invoke(_eventSender, MakeWarningEventArgs("[CredentialProvider]DeviceFlow: https://testfeed/index.json"));
                 WarningRaised?.Invoke(_eventSender, MakeWarningEventArgs(
@@ -323,7 +325,7 @@ public Task PrintImmediateWarningMessage_Succeeded()
         [Fact]
         public Task PrintImmediateMessage_Success()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: true, () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: true, _projectFile, () =>
             {
                 MessageRaised?.Invoke(_eventSender, MakeMessageEventArgs(_immediateMessageString, MessageImportance.High));
             });
@@ -334,7 +336,7 @@ public Task PrintImmediateMessage_Success()
         [Fact]
         public Task PrintImmediateMessage_Skipped()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: true, () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: true, _projectFile, () =>
             {
                 MessageRaised?.Invoke(_eventSender, MakeMessageEventArgs("--anycustomarg", MessageImportance.High));
             });
@@ -373,14 +375,14 @@ public Task PrintRestore_SuccessWithWarnings()
         [Fact]
         public Task PrintBuildSummary_Failed()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, () => { });
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, () => { });
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
 
         [Fact]
         public Task PrintBuildSummary_FailedWithErrors()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, () =>
             {
                 ErrorRaised?.Invoke(_eventSender, MakeErrorEventArgs("Error!"));
             });
@@ -391,7 +393,7 @@ public Task PrintBuildSummary_FailedWithErrors()
         [Fact]
         public Task PrintBuildSummary_FailedWithErrorsAndWarnings()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, () =>
             {
                 WarningRaised?.Invoke(_eventSender, MakeWarningEventArgs("Warning1!"));
                 WarningRaised?.Invoke(_eventSender, MakeWarningEventArgs("Warning2!"));
@@ -426,6 +428,22 @@ public Task PrintBuildSummary_2Projects_FailedWithErrorsAndWarnings()
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
 
+        [Fact]
+        public Task PrintProjectOutputDirectoryLink()
+        {
+            // Send message in order to set project output path
+            BuildMessageEventArgs e = MakeMessageEventArgs(
+                    $"æœ¬åœ°åŒ– -> {_projectFileWithForeignSymbols.Replace("cproj", "dll")}",
+                    MessageImportance.High);
+            e.ProjectFile = _projectFileWithForeignSymbols;
+
+            InvokeLoggerCallbacksForSimpleProject(succeeded: true, _projectFileWithForeignSymbols, () =>
+            {
+                MessageRaised?.Invoke(_eventSender, e);
+            });
+
+            return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
+        }
 
         #endregion
 
@@ -463,7 +481,7 @@ private void CallAllTypesOfTestMessages()
         public Task PrintBuildSummaryQuietVerbosity_FailedWithErrors()
         {
             _terminallogger.Verbosity = LoggerVerbosity.Quiet;
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, CallAllTypesOfMessagesWarningAndError);
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, CallAllTypesOfMessagesWarningAndError);
 
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
@@ -473,7 +491,7 @@ public Task PrintBuildSummaryQuietVerbosity_FailedWithErrors()
         public Task PrintBuildSummaryMinimalVerbosity_FailedWithErrors()
         {
             _terminallogger.Verbosity = LoggerVerbosity.Minimal;
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, CallAllTypesOfMessagesWarningAndError);
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, CallAllTypesOfMessagesWarningAndError);
 
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
@@ -482,7 +500,7 @@ public Task PrintBuildSummaryMinimalVerbosity_FailedWithErrors()
         public Task PrintBuildSummaryNormalVerbosity_FailedWithErrors()
         {
             _terminallogger.Verbosity = LoggerVerbosity.Normal;
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, CallAllTypesOfMessagesWarningAndError);
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, CallAllTypesOfMessagesWarningAndError);
 
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
@@ -491,7 +509,7 @@ public Task PrintBuildSummaryNormalVerbosity_FailedWithErrors()
         public Task PrintBuildSummaryDetailedVerbosity_FailedWithErrors()
         {
             _terminallogger.Verbosity = LoggerVerbosity.Detailed;
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, CallAllTypesOfMessagesWarningAndError);
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, CallAllTypesOfMessagesWarningAndError);
 
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
@@ -501,7 +519,7 @@ public Task PrintBuildSummaryDetailedVerbosity_FailedWithErrors()
         public Task PrintBuildSummaryDiagnosticVerbosity_FailedWithErrors()
         {
             _terminallogger.Verbosity = LoggerVerbosity.Diagnostic;
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, CallAllTypesOfMessagesWarningAndError);
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, CallAllTypesOfMessagesWarningAndError);
 
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
@@ -531,7 +549,7 @@ public Task PrintSummaryWithOverwrittenVerbosity_FailedWithErrors()
             _terminallogger.Parameters = "v=diag";
             _terminallogger.ParseParameters();
 
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, CallAllTypesOfMessagesWarningAndError);
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, CallAllTypesOfMessagesWarningAndError);
 
             return Verify(_outputWriter.ToString(), _settings).UniqueForOSPlatform();
         }
@@ -543,7 +561,7 @@ public Task PrintSummaryWithTaskCommandLineEventArgs_Succeeded()
             _terminallogger.Parameters = "SHOWCOMMANDLINE=on";
             _terminallogger.ParseParameters();
 
-            InvokeLoggerCallbacksForSimpleProject(succeeded: true, () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: true, _projectFile, () =>
             {
                 MessageRaised?.Invoke(_eventSender, MakeTaskCommandLineEventArgs("Task Command Line.", MessageImportance.High));
             });
@@ -558,7 +576,7 @@ public Task PrintSummaryWithoutTaskCommandLineEventArgs_Succeeded()
             _terminallogger.Parameters = "SHOWCOMMANDLINE=off";
             _terminallogger.ParseParameters();
 
-            InvokeLoggerCallbacksForSimpleProject(succeeded: true, () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: true, _projectFile, () =>
             {
                 MessageRaised?.Invoke(_eventSender, MakeTaskCommandLineEventArgs("Task Command Line.", MessageImportance.High));
             });
@@ -569,7 +587,7 @@ public Task PrintSummaryWithoutTaskCommandLineEventArgs_Succeeded()
         [Fact]
         public void DisplayNodesShowsCurrent()
         {
-            InvokeLoggerCallbacksForSimpleProject(succeeded: false, async () =>
+            InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, async () =>
             {
                 _terminallogger.DisplayNodes();
 
@@ -593,7 +611,7 @@ public void DisplayNodesOverwritesTime()
                     return stopwatch;
                 };
 
-                InvokeLoggerCallbacksForSimpleProject(succeeded: false, async () =>
+                InvokeLoggerCallbacksForSimpleProject(succeeded: false, _projectFile, async () =>
                 {
                     foreach (var stopwatch in stopwatches)
                     {
