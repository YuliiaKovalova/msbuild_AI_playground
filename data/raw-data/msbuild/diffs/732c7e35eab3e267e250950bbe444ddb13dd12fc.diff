diff --git a/src/Build/Instance/TaskRegistry.cs b/src/Build/Instance/TaskRegistry.cs
index b60a82db47b..f457bc0f39d 100644
--- a/src/Build/Instance/TaskRegistry.cs
+++ b/src/Build/Instance/TaskRegistry.cs
@@ -415,7 +415,7 @@ ElementLocation elementLocation
             bool retrievedFromCache = false;
             
             // If there are no usingtask tags in the project don't bother caching or looking for tasks locally
-            RegisteredTaskRecord record = overriddenTasks.ContainsKey(taskName) ? overriddenTasks[taskName] : GetTaskRegistrationRecord(taskName, taskProjectFile, taskIdentityParameters, exactMatchRequired, targetLoggingContext, elementLocation, out retrievedFromCache);
+            RegisteredTaskRecord record = GetTaskRegistrationRecord(taskName, taskProjectFile, taskIdentityParameters, exactMatchRequired, targetLoggingContext, elementLocation, out retrievedFromCache);
 
             if (record != null)
             {
@@ -472,6 +472,12 @@ out bool retrievedFromCache
             retrievedFromCache = false;
             RegisteredTaskIdentity taskIdentity = new RegisteredTaskIdentity(taskName, taskIdentityParameters);
 
+            // was this task overridden?
+            if (overriddenTasks.TryGetValue(taskName, out RegisteredTaskRecord rec))
+            {
+                return rec;
+            }
+
             // Try the override task registry first
             if (_toolset != null)
             {
@@ -667,7 +673,7 @@ private void RegisterTask(string taskName, AssemblyLoadInfo assemblyLoadInfo, st
 
             RegisteredTaskRecord newRecord = new RegisteredTaskRecord(taskName, assemblyLoadInfo, taskFactory, taskFactoryParameters, inlineTaskRecord);
 
-            if (overrideTask)
+            if (overrideTask && !overriddenTasks.ContainsKey(taskName))
             {
                 overriddenTasks[taskName] = newRecord;
             }
