diff --git a/src/Tasks/CreateCSharpManifestResourceName.cs b/src/Tasks/CreateCSharpManifestResourceName.cs
index 1555ec736ba..774ee9a2bbd 100644
--- a/src/Tasks/CreateCSharpManifestResourceName.cs
+++ b/src/Tasks/CreateCSharpManifestResourceName.cs
@@ -139,7 +139,7 @@ TaskLoggingHelper log
                 // Empty namespaces are allowed.
                 if (!string.IsNullOrEmpty(rootNamespace))
                 {
-                    manifestName.Append(rootNamespace).Append(".");
+                    manifestName.Append(rootNamespace).Append('.');
                 }
 
                 // only strip extension for .resx and .restext files
@@ -173,7 +173,7 @@ TaskLoggingHelper log
                     // Append the culture if there is one.        
                     if (!string.IsNullOrEmpty(info.culture))
                     {
-                        manifestName.Append(".").Append(info.culture);
+                        manifestName.Append('.').Append(info.culture);
                     }
 
                     // If the original extension was .resources, add it back
diff --git a/src/Tasks/CreateManifestResourceName.cs b/src/Tasks/CreateManifestResourceName.cs
index 8f12c40f963..8f5b0e82a05 100644
--- a/src/Tasks/CreateManifestResourceName.cs
+++ b/src/Tasks/CreateManifestResourceName.cs
@@ -234,8 +234,8 @@ CreateFileStream createFileStream
                     // Add a LogicalName metadata to Non-Resx resources
                     // LogicalName isn't used for Resx resources because the ManifestResourceName metadata determines the filename of the 
                     // .resources file which then is used as the embedded resource manifest name                    
-                    if (String.IsNullOrEmpty(ResourceFilesWithManifestResourceNames[i].GetMetadata("LogicalName")) &&
-                        String.Equals(ResourceFilesWithManifestResourceNames[i].GetMetadata("Type"), "Non-Resx", StringComparison.OrdinalIgnoreCase))
+                    if (string.IsNullOrEmpty(ResourceFilesWithManifestResourceNames[i].GetMetadata("LogicalName")) &&
+                        string.Equals(ResourceFilesWithManifestResourceNames[i].GetMetadata("Type"), "Non-Resx", StringComparison.OrdinalIgnoreCase))
                     {
                         ResourceFilesWithManifestResourceNames[i].SetMetadata("LogicalName", manifestName);
                     }
@@ -370,7 +370,7 @@ internal static void MakeValidEverettFolderIdentifier(StringBuilder builder, str
                 }
 
                 // folder name cannot be a single underscore - add another underscore to it
-                if (everettId.ToString() == "_")
+                if (string.Equals(everettId.ToString(), "_"))
                 {
                     everettId.Append('_');
                 }
@@ -407,7 +407,8 @@ public static void MakeValidEverettIdentifier(StringBuilder builder, string name
                     MakeValidEverettFolderIdentifier(builder, subNames[i]);
                 }
             }
-            else {
+            else
+            {
                 return;
             }
         }
diff --git a/src/Tasks/CreateVisualBasicManifestResourceName.cs b/src/Tasks/CreateVisualBasicManifestResourceName.cs
index 226f567f416..f44b7ad7a00 100644
--- a/src/Tasks/CreateVisualBasicManifestResourceName.cs
+++ b/src/Tasks/CreateVisualBasicManifestResourceName.cs
@@ -120,7 +120,7 @@ TaskLoggingHelper log
                 {
                     if (!string.IsNullOrEmpty(rootNamespace))
                     {
-                        manifestName.Append(rootNamespace).Append(".").Append(result.Name);
+                        manifestName.Append(rootNamespace).Append('.').Append(result.Name);
                     }
                     else
                     {
@@ -130,7 +130,7 @@ TaskLoggingHelper log
                     // Append the culture if there is one.        
                     if (!string.IsNullOrEmpty(info.culture))
                     {
-                        manifestName.Append(".").Append(info.culture);
+                        manifestName.Append('.').Append(info.culture);
                     }
                 }
             }
@@ -143,7 +143,7 @@ TaskLoggingHelper log
                 // Empty namespaces are allowed.
                 if (!string.IsNullOrEmpty(rootNamespace))
                 {
-                    manifestName.Append(rootNamespace).Append(".");
+                    manifestName.Append(rootNamespace).Append('.');
                 }
 
                 // only strip extension for .resx and .restext files
@@ -161,7 +161,7 @@ TaskLoggingHelper log
                     // Append the culture if there is one.        
                     if (!string.IsNullOrEmpty(info.culture))
                     {
-                        manifestName.Append(".").Append(info.culture);
+                        manifestName.Append('.').Append(info.culture);
                     }
 
                     // If the original extension was .resources, add it back
