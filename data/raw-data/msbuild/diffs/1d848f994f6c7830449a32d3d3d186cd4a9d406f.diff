diff --git a/src/Tasks/ManifestUtil/SecurityUtil.cs b/src/Tasks/ManifestUtil/SecurityUtil.cs
index abdcce405f9..def1e2bdc0f 100644
--- a/src/Tasks/ManifestUtil/SecurityUtil.cs
+++ b/src/Tasks/ManifestUtil/SecurityUtil.cs
@@ -46,8 +46,8 @@ public static class SecurityUtilities
 #if !RUNTIME_TYPE_NETCORE
         private const int Fx2MajorVersion = 2;
         private const int Fx3MajorVersion = 3;
-#endif
         private static readonly Version s_dotNet40Version = new Version("4.0");
+#endif
         private static readonly Version s_dotNet45Version = new Version("4.5");
 
 #if !RUNTIME_TYPE_NETCORE
diff --git a/src/Tasks/ManifestUtil/Util.cs b/src/Tasks/ManifestUtil/Util.cs
index ebc38e86e2b..b3e543a1340 100644
--- a/src/Tasks/ManifestUtil/Util.cs
+++ b/src/Tasks/ManifestUtil/Util.cs
@@ -29,11 +29,12 @@ internal static class Util
         internal static readonly string logPath = GetLogPath();
         private static readonly char[] s_fileNameInvalidChars = { '\\', '/', ':', '*', '?', '"', '<', '>', '|' };
         private static StreamWriter s_logFileWriter;
-        // Major, Minor, Build and Revision of CLR v2.0
-        private static readonly int[] s_clrVersion2 = { 2, 0, 50727, 0 };
 #if RUNTIME_TYPE_NETCORE
         // Major, Minor, Build and Revision of CLR v4.0
         private static readonly int[] s_clrVersion4 = { 4, 0, 30319, 0 };
+#else
+        // Major, Minor, Build and Revision of CLR v2.0
+        private static readonly int[] s_clrVersion2 = { 2, 0, 50727, 0 };
 #endif
 
         #region " Platform <-> ProcessorArchitecture mapping "
diff --git a/src/Tasks/NativeMethods.cs b/src/Tasks/NativeMethods.cs
index f2308684706..9adcab120cc 100644
--- a/src/Tasks/NativeMethods.cs
+++ b/src/Tasks/NativeMethods.cs
@@ -779,7 +779,9 @@ internal struct CRYPTOAPI_BLOB
         #region PInvoke
         private const string Crypt32DLL = "crypt32.dll";
         private const string Advapi32DLL = "advapi32.dll";
+#if !RUNTIME_TYPE_NETCORE
         private const string MscoreeDLL = "mscoree.dll";
+#endif
 
         //------------------------------------------------------------------------------
         // CreateHardLink
@@ -1127,9 +1129,9 @@ internal static extern int CreateAssemblyNameObject(
         [DllImport(MscoreeDLL, SetLastError = true, CharSet = CharSet.Unicode)]
         internal static extern uint GetFileVersion(String szFullPath, StringBuilder szBuffer, int cchBuffer, out uint dwLength);
 #endif
-        #endregion
+#endregion
 
-        #region Methods
+#region Methods
 #if FEATURE_HANDLEPROCESSCORRUPTEDSTATEEXCEPTIONS
         /// <summary>
         /// Given a pointer to a metadata blob, read the string parameter from it.  Returns true if
@@ -1250,8 +1252,8 @@ internal static unsafe int CorSigUncompressData(IntPtr data, out int uncompresse
 
             return count;
         }
-        #endregion
-        #region InternalClass
+#endregion
+#region InternalClass
 #if FEATURE_COM_INTEROP
         /// <summary>
         /// This class is a wrapper over the native GAC enumeration API.
@@ -1491,6 +1493,6 @@ public static string AssemblyPathFromStrongName(string strongName)
             }
         }
 #endif
-        #endregion
+#endregion
     }
 }
diff --git a/src/Tasks/ResolveKeySource.cs b/src/Tasks/ResolveKeySource.cs
index 676d5a4d249..95e3a2ecf68 100644
--- a/src/Tasks/ResolveKeySource.cs
+++ b/src/Tasks/ResolveKeySource.cs
@@ -24,7 +24,9 @@ namespace Microsoft.Build.Tasks
     public class ResolveKeySource : TaskExtension
     {
         private const string pfxFileExtension = ".pfx";
+#if !RUNTIME_TYPE_NETCORE
         private const string pfxFileContainerPrefix = "VS_KEY_";
+#endif
         
         #region Properties
 
