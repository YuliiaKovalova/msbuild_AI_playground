diff --git a/src/Tasks.UnitTests/RARPrecomputedCache_Tests.cs b/src/Tasks.UnitTests/RARPrecomputedCache_Tests.cs
index eca0cbf9936..a7dfafbdc1c 100644
--- a/src/Tasks.UnitTests/RARPrecomputedCache_Tests.cs
+++ b/src/Tasks.UnitTests/RARPrecomputedCache_Tests.cs
@@ -78,7 +78,7 @@ public void TestPreComputedCacheInputAndOutput()
                         RuntimeVersion = "v4.0.30319",
                         FrameworkNameAttribute = new System.Runtime.Versioning.FrameworkName(".NETFramework", Version.Parse("4.7.2"), "Profile"),
                         scatterFiles = new string[] { "first", "second" } });
-                t._cache.instanceLocalFileStateCache[dllName].Assembly.Version = new Version("16.3");
+                rarWriterTask._cache.instanceLocalFileStateCache[dllName].Assembly.Version = new Version("16.3");
                 string precomputedCachePath = standardCache.Path + ".cache";
                 rarWriterTask.AssemblyInformationCacheOutputPath = precomputedCachePath;
                 rarWriterTask._cache.IsDirty = true;
diff --git a/src/Tasks/SystemState.cs b/src/Tasks/SystemState.cs
index b6d2992f4e1..50326b9843f 100644
--- a/src/Tasks/SystemState.cs
+++ b/src/Tasks/SystemState.cs
@@ -732,6 +732,7 @@ internal static SystemState DeserializePrecomputedCaches(ITaskItem[] stateFiles,
         /// </summary>
         internal void SerializePrecomputedCache(string stateFile, TaskLoggingHelper log, Func<string, Guid> calculateMvid)
         {
+            Dictionary<string, FileState> oldInstanceLocalFileStateCache = instanceLocalFileStateCache;
             Dictionary<string, FileState> newInstanceLocalFileStateCache = new Dictionary<string, FileState>(instanceLocalFileStateCache.Count);
             calculateMvid ??= CalculateMvid;
             foreach (KeyValuePair<string, FileState> kvp in instanceLocalFileStateCache)
@@ -753,6 +754,7 @@ internal void SerializePrecomputedCache(string stateFile, TaskLoggingHelper log,
             JsonSerializerOptions options = new JsonSerializerOptions() { Encoder = JavaScriptEncoder.UnsafeRelaxedJsonEscaping };
             options.Converters.Add(new SystemState.Converter());
             File.WriteAllText(stateFile, JsonSerializer.Serialize(this, options));
+            instanceLocalFileStateCache = oldInstanceLocalFileStateCache;
         }
 
         private static Guid CalculateMvid(string path)
