diff --git a/src/MSBuild.UnitTests/MockTerminal.cs b/src/MSBuild.UnitTests/MockTerminal.cs
index 97c63c2fea0..26f5c39d973 100644
--- a/src/MSBuild.UnitTests/MockTerminal.cs
+++ b/src/MSBuild.UnitTests/MockTerminal.cs
@@ -99,7 +99,6 @@ public void EndUpdate()
         public void Write(ReadOnlySpan<char> text) { AddOutput(text.ToString()); }
         public void WriteColor(TerminalColor color, string text) => AddOutput(text);
         public void WriteColorLine(TerminalColor color, string text) { AddOutput(text); AddOutput("\n"); }
-        public string RenderColor(TerminalColor color, string text) => text;
 
         public void WriteLine(string text) { AddOutput(text); AddOutput("\n"); }
         public void WriteLineFitToWidth(ReadOnlySpan<char> text)
diff --git a/src/MSBuild/LiveLogger/ITerminal.cs b/src/MSBuild/LiveLogger/ITerminal.cs
index c9b10cd0501..ace2f0656c3 100644
--- a/src/MSBuild/LiveLogger/ITerminal.cs
+++ b/src/MSBuild/LiveLogger/ITerminal.cs
@@ -63,9 +63,4 @@ internal interface ITerminal : IDisposable
     /// Writes a string to the output using the given color. Or buffers it if <see cref="BeginUpdate"/> was called.
     /// </summary>
     void WriteColorLine(TerminalColor color, string text);
-
-    /// <summary>
-    /// Return string representing text wrapped in VT100 color codes.
-    /// </summary>
-    string RenderColor(TerminalColor color, string text);
 }
diff --git a/src/MSBuild/LiveLogger/LiveLogger.cs b/src/MSBuild/LiveLogger/LiveLogger.cs
index 1c71dca8884..a1ff373a6b6 100644
--- a/src/MSBuild/LiveLogger/LiveLogger.cs
+++ b/src/MSBuild/LiveLogger/LiveLogger.cs
@@ -782,15 +782,15 @@ private string RenderBuildResult(bool succeeded, bool hasError, bool hasWarning)
                 (false, true) => ResourceUtilities.GetResourceString("BuildResult_FailedWithWarnings"),
                 _ => ResourceUtilities.GetResourceString("BuildResult_Failed"),
             };
-            return Terminal.RenderColor(TerminalColor.Red, text);
+            return AnsiCodes.Colorize(text, TerminalColor.Red);
         }
         else if (hasWarning)
         {
-            return Terminal.RenderColor(TerminalColor.Yellow, ResourceUtilities.GetResourceString("BuildResult_SucceededWithWarnings"));
+            return AnsiCodes.Colorize(ResourceUtilities.GetResourceString("BuildResult_SucceededWithWarnings"), TerminalColor.Yellow);
         }
         else
         {
-            return Terminal.RenderColor(TerminalColor.Green, ResourceUtilities.GetResourceString("BuildResult_Succeeded"));
+            return AnsiCodes.Colorize(ResourceUtilities.GetResourceString("BuildResult_Succeeded"), TerminalColor.Green);
         }
     }
 
diff --git a/src/MSBuild/LiveLogger/Terminal.cs b/src/MSBuild/LiveLogger/Terminal.cs
index dfdcd21b396..7155d387779 100644
--- a/src/MSBuild/LiveLogger/Terminal.cs
+++ b/src/MSBuild/LiveLogger/Terminal.cs
@@ -132,16 +132,10 @@ public void WriteColor(TerminalColor color, string text)
         }
         else
         {
-            Write(RenderColor(color, text));
+            Write(AnsiCodes.Colorize(text, color));
         }
     }
 
-    /// <inheritdoc/>
-    public string RenderColor(TerminalColor color, string text)
-    {
-        return $"{AnsiCodes.CSI}{(int)color}{AnsiCodes.SetColor}{text}{AnsiCodes.SetDefaultColor}";
-    }
-
     /// <inheritdoc/>
     public void WriteColorLine(TerminalColor color, string text)
     {
