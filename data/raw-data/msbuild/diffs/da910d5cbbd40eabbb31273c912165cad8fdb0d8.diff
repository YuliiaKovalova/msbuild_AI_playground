diff --git a/src/Build/BackEnd/BuildManager/BuildManager.cs b/src/Build/BackEnd/BuildManager/BuildManager.cs
index 7d7f5d7bdec..ec86b218112 100644
--- a/src/Build/BackEnd/BuildManager/BuildManager.cs
+++ b/src/Build/BackEnd/BuildManager/BuildManager.cs
@@ -2991,7 +2991,7 @@ private ILoggingService CreateLoggingService(
 
                 loggers = (loggers ?? Enumerable.Empty<ILogger>()).Concat(new[]
                 {
-                    new BuildCheckConnectorLogger(new AnalyzerLoggingContextFactory(loggingService), buildCheckManagerProvider.Instance, _buildParameters.AreBuildCheckStatsEnabled)
+                    new BuildCheckConnectorLogger(new AnalyzerLoggingContextFactory(loggingService), buildCheckManagerProvider.Instance)
                 });
             }
 
diff --git a/src/Build/BackEnd/BuildManager/BuildParameters.cs b/src/Build/BackEnd/BuildManager/BuildParameters.cs
index e0899b84ce7..826fbadef56 100644
--- a/src/Build/BackEnd/BuildManager/BuildParameters.cs
+++ b/src/Build/BackEnd/BuildManager/BuildParameters.cs
@@ -210,7 +210,6 @@ public class BuildParameters : ITranslatable
         private bool _question;
 
         private bool _isBuildCheckEnabled;
-        private bool _areBuildCheckStatsEnabled;
 
         /// <summary>
         /// The settings used to load the project under build
@@ -315,7 +314,6 @@ internal BuildParameters(BuildParameters other, bool resetEnvironment = false)
             LowPriority = other.LowPriority;
             Question = other.Question;
             IsBuildCheckEnabled = other.IsBuildCheckEnabled;
-            AreBuildCheckStatsEnabled = other.AreBuildCheckStatsEnabled;
             ProjectCacheDescriptor = other.ProjectCacheDescriptor;
         }
 
@@ -849,15 +847,6 @@ public bool IsBuildCheckEnabled
             get => _isBuildCheckEnabled;
             set => _isBuildCheckEnabled = value;
         }
-        
-        /// <summary>
-        /// Gets or sets an indication of build analysis statistics enablement.
-        /// </summary>
-        public bool AreBuildCheckStatsEnabled
-        {
-            get => _areBuildCheckStatsEnabled;
-            set => _areBuildCheckStatsEnabled = value;
-        }
 
         /// <summary>
         /// Gets or sets the project cache description to use for all <see cref="BuildSubmission"/> or <see cref="GraphBuildSubmission"/>
diff --git a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
index 9466d9af6b1..14f16e691f0 100644
--- a/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
+++ b/src/Build/BuildCheck/Infrastructure/BuildCheckConnectorLogger.cs
@@ -21,12 +21,10 @@ internal sealed class BuildCheckConnectorLogger : ILogger
 
     internal BuildCheckConnectorLogger(
         IBuildAnalysisLoggingContextFactory loggingContextFactory,
-        IBuildCheckManager buildCheckManager,
-        bool areStatsEnabled)
+        IBuildCheckManager buildCheckManager)
     {
         _buildCheckManager = buildCheckManager;
         _loggingContextFactory = loggingContextFactory;
-        _areStatsEnabled = areStatsEnabled;
         _eventHandlers = GetBuildEventHandlers();
     }
 
@@ -34,8 +32,6 @@ internal BuildCheckConnectorLogger(
 
     public string? Parameters { get; set; }
 
-    private bool _areStatsEnabled { get; set; }
-
     public void Initialize(IEventSource eventSource)
     {
         eventSource.AnyEventRaised += EventSource_AnyEventRaised;
@@ -121,12 +117,11 @@ private void LogAnalyzerStats(LoggingContext loggingContext)
 
         loggingContext.LogBuildEvent(statEvent);
 
-        MessageImportance importance = _areStatsEnabled ? MessageImportance.High : MessageImportance.Low;
-        loggingContext.LogCommentFromText(importance, $"BuildCheck run times{Environment.NewLine}");
+        loggingContext.LogCommentFromText(MessageImportance.Low, $"BuildCheck run times{Environment.NewLine}");
         string infraData = BuildCsvString("Infrastructure run times", infraStats);
-        loggingContext.LogCommentFromText(importance, infraData);
+        loggingContext.LogCommentFromText(MessageImportance.Low, infraData);
         string analyzerData = BuildCsvString("Analyzer run times", analyzerStats);
-        loggingContext.LogCommentFromText(importance, analyzerData);
+        loggingContext.LogCommentFromText(MessageImportance.Low, analyzerData);
     }
 
     private string BuildCsvString(string title, Dictionary<string, TimeSpan> rowData)
diff --git a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
index 9bca28027f9..6ffae8dfb52 100644
--- a/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
+++ b/src/MSBuild.UnitTests/CommandLineSwitches_Tests.cs
@@ -1186,7 +1186,6 @@ public void InvalidToolsVersionErrors()
                                         lowPriority: false,
                                         question: false,
                                         isBuildCheckEnabled: false,
-                                        areBuildCheckStatsEnabled: false,
                                         inputResultsCaches: null,
                                         outputResultsCache: null,
                                         saveProjectResult: false,
diff --git a/src/MSBuild/CommandLineSwitches.cs b/src/MSBuild/CommandLineSwitches.cs
index 453189fbe53..e7800bdf4ca 100644
--- a/src/MSBuild/CommandLineSwitches.cs
+++ b/src/MSBuild/CommandLineSwitches.cs
@@ -47,7 +47,6 @@ internal enum ParameterlessSwitch
             FileLogger8,
             FileLogger9,
             DistributedFileLogger,
-            AnalyzeStats,
 #if DEBUG
             WaitForDebugger,
 #endif
@@ -223,7 +222,6 @@ internal ParameterizedSwitchInfo(
             new ParameterlessSwitchInfo(  new string[] { "filelogger8", "fl8" },                     ParameterlessSwitch.FileLogger8,           null),
             new ParameterlessSwitchInfo(  new string[] { "filelogger9", "fl9" },                     ParameterlessSwitch.FileLogger9,           null),
             new ParameterlessSwitchInfo(  new string[] { "distributedfilelogger", "dfl" },           ParameterlessSwitch.DistributedFileLogger, null),
-            new ParameterlessSwitchInfo(  new string[] { "analyzeStats" },                           ParameterlessSwitch.AnalyzeStats,          null),
 #if DEBUG
             new ParameterlessSwitchInfo(  new string[] { "waitfordebugger", "wfd" },                 ParameterlessSwitch.WaitForDebugger,       null),
 #endif
diff --git a/src/MSBuild/XMake.cs b/src/MSBuild/XMake.cs
index 05cdf104ba0..9fa6956ae03 100644
--- a/src/MSBuild/XMake.cs
+++ b/src/MSBuild/XMake.cs
@@ -717,7 +717,6 @@ public static ExitType Execute(
                 string outputResultsCache = null;
                 bool question = false;
                 bool isBuildCheckEnabled = false;
-                bool areBuildCheckStatsEnabled = false;
                 string[] getProperty = Array.Empty<string>();
                 string[] getItem = Array.Empty<string>();
                 string[] getTargetResult = Array.Empty<string>();
@@ -766,7 +765,6 @@ public static ExitType Execute(
                                             ref lowPriority,
                                             ref question,
                                             ref isBuildCheckEnabled,
-                                            ref areBuildCheckStatsEnabled,
                                             ref getProperty,
                                             ref getItem,
                                             ref getTargetResult,
@@ -880,7 +878,6 @@ public static ExitType Execute(
                                     lowPriority,
                                     question,
                                     isBuildCheckEnabled,
-                                    areBuildCheckStatsEnabled,
                                     inputResultsCaches,
                                     outputResultsCache,
                                     saveProjectResult: outputPropertiesItemsOrTargetResults,
@@ -1280,7 +1277,6 @@ internal static bool BuildProject(
             bool lowPriority,
             bool question,
             bool isBuildCheckEnabled,
-            bool areBuildCheckStatsEnabled,
             string[] inputResultsCaches,
             string outputResultsCache,
             bool saveProjectResult,
@@ -1482,9 +1478,7 @@ internal static bool BuildProject(
                     parameters.InputResultsCacheFiles = inputResultsCaches;
                     parameters.OutputResultsCacheFile = outputResultsCache;
                     parameters.Question = question;
-
                     parameters.IsBuildCheckEnabled = isBuildCheckEnabled;
-                    parameters.AreBuildCheckStatsEnabled = areBuildCheckStatsEnabled;
 #if FEATURE_REPORTFILEACCESSES
                     parameters.ReportFileAccesses = reportFileAccesses;
 #endif
@@ -2480,7 +2474,6 @@ private static bool ProcessCommandLineSwitches(
             ref bool lowPriority,
             ref bool question,
             ref bool isBuildCheckEnabled,
-            ref bool areBuildCheckStatsEnabled,
             ref string[] getProperty,
             ref string[] getItem,
             ref string[] getTargetResult,
@@ -2612,7 +2605,6 @@ private static bool ProcessCommandLineSwitches(
                                                            ref lowPriority,
                                                            ref question,
                                                            ref isBuildCheckEnabled,
-                                                           ref areBuildCheckStatsEnabled,
                                                            ref getProperty,
                                                            ref getItem,
                                                            ref getTargetResult,
@@ -2699,7 +2691,6 @@ private static bool ProcessCommandLineSwitches(
                     question = commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.Question);
 
                     isBuildCheckEnabled = IsBuildCheckEnabled(commandLineSwitches);
-                    areBuildCheckStatsEnabled = AreBuildCheckStatsEnabled(commandLineSwitches);
 
                     inputResultsCaches = ProcessInputResultsCaches(commandLineSwitches);
 
@@ -2780,12 +2771,6 @@ private static bool IsBuildCheckEnabled(CommandLineSwitches commandLineSwitches)
             return isAnalysisEnabled;
         }
 
-        private static bool AreBuildCheckStatsEnabled(CommandLineSwitches commandLineSwitches)
-        {
-            return commandLineSwitches.IsParameterizedSwitchSet(CommandLineSwitches.ParameterizedSwitch.Analyze) &&
-                commandLineSwitches.IsParameterlessSwitchSet(CommandLineSwitches.ParameterlessSwitch.AnalyzeStats);
-        }
-
         private static bool ProcessTerminalLoggerConfiguration(CommandLineSwitches commandLineSwitches, out string aggregatedParameters)
         {
             aggregatedParameters = AggregateParameters(commandLineSwitches);
